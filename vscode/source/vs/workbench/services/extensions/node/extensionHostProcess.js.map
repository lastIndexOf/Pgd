{"version":3,"sources":["vs/workbench/services/extensions/node/fake","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/assert.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/collections.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/decorators.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/errors.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/arrays.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/functional.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/htmlContent.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/idGenerator.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/iterator.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/json.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/jsonFormatter.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/jsonEdit.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/lifecycle.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/linkedList.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/event.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/cancellation.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/async.ts","vs/workbench/services/extensions/node/vs/base/common/marked/marked.js","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/network.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/numbers.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/platform.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/process.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/path.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/processes.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/stopwatch.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/strings.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/comparers.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/date.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/extpath.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/types.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/objects.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uri.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/amd.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/map.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/filters.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/glob.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/marshalling.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/normalization.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/resources.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/labels.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uriIpc.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uuid.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/decoder.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/flow.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/stream.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/encoding.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/extfs.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/pfs.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.net.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/quickopen/common/quickOpenScorer.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/core/position.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/core/range.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/core/selection.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/core/uint.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/core/characterClassifier.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/model.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/model/wordHelper.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/modes/languageConfiguration.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/modes/languageSelector.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/modes/linkComputer.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/modes/tokenizationRegistry.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/model/mirrorTextModel.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/errorMessage.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/severity.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/processes.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/config/editorOptions.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensions/common/extensions.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/files/node/files.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/instantiation.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/services/modelService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/modes/languageFeatureRegistry.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/editor/common/modes.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/commands/common/commands.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/contextkey/common/contextkey.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/download/common/download.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/files/common/files.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/common/log.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/node/spdlogService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/markers/common/markers.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/notification/common/notification.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/product/node/package.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/product/node/product.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/progress/common/progress.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/registry/common/platform.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationRegistry.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configuration.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationModels.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/windows/common/windows.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/workspaces/common/workspaces.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/workspace/common/workspace.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostCLIServer.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostExtensionActivator.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostHeapService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostTypes.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDocumentData.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/common/views.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/contrib/debug/common/debugUtils.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/contrib/debug/node/debugAdapter.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/contrib/debug/node/terminals.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/contrib/terminal/common/terminal.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/contrib/terminal/common/terminalEnvironment.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/contrib/terminal/node/terminal.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/contrib/terminal/node/terminalProcess.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/configuration/common/configurationModels.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostConfiguration.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/configurationResolver/common/variableResolver.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/editor/common/editorService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostTypeConverters.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/apiCommands.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostApiCommands.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDocumentSaveParticipant.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostProgress.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostTextEditor.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/common/extensions.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostLogService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostTreeViews.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/extensionDescriptionRegistry.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/extensionHostProtocol.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/lazyPromise.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/proxyIdentifier.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHost.protocol.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostClipboard.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostCommands.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostComments.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDebugService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDecorations.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDiagnostics.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDialogs.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDocumentContentProviders.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDocuments.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostDocumentsAndEditors.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostFileSystem.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostFileSystemEventService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostLanguages.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostMessageService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostQuickOpen.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostSCM.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostStatusBar.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostStorage.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostTerminalService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostTask.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostTextEditors.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostUrls.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostWebview.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostLanguageFeatures.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostWindow.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/rpcProtocol.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/output/node/outputAppender.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostOutputService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/common/search.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostWorkspace.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/fileSearchManager.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/ripgrepSearchUtils.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/textSearchManager.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/proxyResolver.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/ripgrepFileSearch.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/fileSearch.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/ripgrepTextSearchEngine.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/ripgrepSearchProvider.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/textSearchAdapter.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/search/node/rawSearchService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostSearch.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHost.api.impl.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/api/node/extHostExtensionService.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/extensionHostMain.ts","vs/workbench/services/extensions/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/workbench/services/extensions/node/extensionHostProcess.ts"],"names":["__m","__M","deps","result","i","len","length","exports","ok","value","message","Error","hasOwnProperty","Object","prototype","values","from","key","call","push","size","count","first","forEach","callback","groupBy","data","groupFn","create","element","target","fromMap","original","createDecorator","mapFn","descriptor","fnKey","fn","get","memoize","console","warn","memoizeKey","args","this","defineProperty","configurable","enumerable","writable","apply","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","undefined","clearTimeout","setTimeout","isPromiseCanceledError","error","name","canceledName","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","e","stack","listener","_removeListener","splice","indexOf","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","__awaiter","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","elem","uniqueFilter","notFoundValue","index","commonPrefixLength","flatten","concat","range","arg","fill","num","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","map","once","_this","didCall","arguments","isEmptyMarkdownString","oneOrMany","isMarkdownString","every","thing","MarkdownString","isTrusted","markdownStringEqual","replace","langId","code","markedStringsEquals","arrays_1","removeMarkdownEscapes","text","IdGenerator","prefix","_prefix","_lastId","defaultGenerator","FIN","done","Iterator","iterator","next","_empty","empty","fromArray","elements","collect","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","super","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","createScanner","ignoreTrivia","scanHexDigits","digits","ch","charCodeAt","pos","scanNext","scanError","tokenOffset","isWhiteSpace","fromCharCode","isLineBreak","substring","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","getNodePath","node","children","path","type","getNodeValue","prop","valueNode","contains","offset","includeRightBound","findNodeAtOffset","item","visit","visitor","options","ParseOptions","DEFAULT","toNoArgVisit","visitFunction","_scanner","toOneArgVisit","handleError","disallowComments","onComment","skipUntilAfter","skipUntil","onError","parseString","isValue","onLiteralValue","onObjectProperty","parseProperty","onSeparator","parseValue","onArrayBegin","needsComma","allowTrailingComma","onArrayEnd","parseArray","onObjectBegin","onObjectEnd","parseObject","JSON","parse","parseLiteral","getLiteralNodeType","ScanError","SyntaxKind","ParseErrorCode","CharacterCodes","getLocation","setPreviousNode","previousNodeInst","colonOffset","previousNode","segments","earlyReturnException","isAtPropertyKey","sep","matches","pattern","k","errors","onValue","currentParent","currentProperty","previousParents","object","parseTree","ensurePropertyComplete","endOffset","findNodeAtLocation","root","segment","found","propertyNode","stripComments","replaceCh","kind","parts","join","format","documentText","newLineAndIndent","eol","repeat","indentValue","initialIndentLevel","indentLevel","scanner","lineBreak","hasError","addEdit","startOffset","rangeEnd","rangeStart","editOperations","content","formatText","formatTextStart","isEOL","nChars","tabSize","charAt","computeIndentLevel","getEOL","insertSpaces","json_1","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","setProperty","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","withFormatting","stringify","newProperty","edit","removalIndex","toRemove","newText","applyEdit","begin","jsonFormatter_1","edits","removeProperty","isWS","dispose","rest","d","isDisposable","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","toDispose","None","freeze","ReferenceCollection","references","reference","counter","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","LinkedList","_size","_first","_last","_insert","atTheEnd","newNode","oldLast","prev","oldFirst","_remove","bind","res","candidate","anchor","iterator_1","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","fire","latch","cache","firstCall","shouldEmit","_disposable","signal","any","events","lifecycle_1","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","flush","echo","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","clear","listenerCount","threshold","Map","set","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","onFirstListenerDidAdd","onListenerDidAdd","removeMonitor","check","_noop","_deliveryQueue","iter","shift","AsyncEmitter","eventFn","_asyncDeliveryQueue","thenables","all","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","timeout","millis","sequence","promiseFactories","thenHandler","results","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","task","cancelTimeout","doReject","ThrottledDelayer","delayer","throttler","trigger","isTriggered","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","timer","ignoreErrors","shouldStop","defaultValue","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","doRun","RunOnceWorker","units","unit","schedule","nfcall","ninvoke","thisArg","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_executor","_value","_error","_didRun","_handle","__marked_exports","Lexer","tokens","links","marked","defaults","rules","block","normal","pedantic","gfm","tables","InlineLexer","inline","renderer","Renderer","breaks","TextRenderer","Parser","escape","html","encode","unescape","toLowerCase","parseInt","regex","opt","val","getRegex","RegExp","resolveUrl","base","href","baseUrls","test","rtrim","noop","splitCells","tableRow","cells","match","str","escaped","curr","trim","invert","suffLen","currChar","substr","src","pending","highlight","lex","out","lang","silent","newline","fences","hr","heading","nptable","blockquote","list","def","table","lheading","paragraph","_label","_title","bullet","_tag","_comment","loose","cap","bull","listStart","listItems","space","tag","l","isordered","istask","ischecked","exec","depth","header","align","ordered","smartLists","checked","sanitize","pre","sanitizer","title","autolink","url","link","reflink","nolink","strong","em","br","del","_escapes","_scheme","_email","_attribute","_href","_backpedal","prevCapZero","mangle","inLink","outputLink","escapes","codespan","smartypants","image","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","body","listitem","checkbox","tablerow","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","encodeURI","inlineText","reverse","tok","peek","parseText","row","cell","setOptions","getDefaults","parser","lexer","inlineLexer","define","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","command","clamp","rot","modulo","Counter","_next","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isNative","_locale","_language","_translationsConfigFile","isElectronRenderer","process","versions","electron","platform","rawNlsConfig","env","nlsConfig","resolved","availableLanguages","locale","userAgent","language","Platform","PlatformToString","isRealWindows","isWindows","isMacintosh","isLinux","isNative","isWeb","isRootUser","getuid","translationsConfigFile","_globals","self","global","globals","_setImmediate","setImmediate","OperatingSystem","OS","safeProcess","cwd","platform_1","validateString","ErrorInvalidArgType","isPathSeparator","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","isPosixPathSeparator","isWindowsDeviceRoot","CHAR_UPPERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_A","CHAR_LOWERCASE_Z","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","CHAR_DOT","lastSlashIndex","lastIndexOf","_format","pathObject","dir","ext","expected","actual","determiner","msg","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","Source","TerminateResponseCode","sanitizeProcessEnvironment","preserve","keysToRemove","keys","envKey","search","hasPerformanceNow","performance","now","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","substrEquals","aStart","aEnd","bStart","bEnd","isFullWidthCharacter","charCode","startsWithUTF8BOM","isFalsyOrWhitespace","pad","char","_formatRegexp","group","isNaN","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regexp","lastIndex","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","isHighSurrogate","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","lcut","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","removeAccents","UTF8_BOM_CHARACTER","stripUTF8BOM","safeBtoa","btoa","encodeURIComponent","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","compareFileNames","caseSensitive","intlFileNameCollator","getValue","collator","collatorIsNumeric","noIntlCompareFileNames","oneName","oneExtension","extractNameAndExtension","otherName","otherExtension","compareFileExtensions","noIntlCompareFileExtensions","FileNameMatch","comparePathComponents","compareByPrefix","lookFor","elementAName","elementBName","elementAPrefixMatch","strings","elementBPrefixMatch","setFileNameComparer","comparePaths","oneParts","path_1","otherParts","lastOne","lastOther","endOne","endOther","compareAnything","prefixCompare","elementASuffixMatch","localeCompare","toLocalISOString","date","getFullYear","strings_1","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","isWindowsDriveLetter","char0","toSlashes","osPath","getRoot","firstLetter","isUNC","INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","isValidBasename","isEqual","pathA","pathB","identityEquals","isEqualOrParent","sepOffset","_typeof","number","constructor","isString","string","isObject","isUndefined","isUndefinedOrNull","isFunction","function","validateConstraint","constraint","_a","isStringArray","isNumber","Number","isBoolean","isEmptyObject","areFunctions","objects","validateConstraints","constraints","ctor","isNativeClass","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","withNullAsUndefined","withUndefinedAsNull","deepClone","_cloneAndChange","changer","types_1","changed","r1","has","add","r2","i2","_hasOwnProperty","delete","mixin","destination","overwrite","oneKeys","otherKeys","deepFreeze","isFrozen","cloneAndChange","Set","assign","sources","createKeywordMatcher","caseInsensitive","hash","arrayToHash","word","safeStringify","getOrDefault","baseValue","targetValue","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeTable","_makeFsPath","uri","authority","scheme","_asFormatted","skipEncoding","encoder","fragment","_slash","userinfo","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","setUriThrowOnMissingScheme","old","_regexp","URI","fsPath","with","schemeOrData","_strict","trace","_schemeFix","_referenceResolution","_validateUri","change","_URI","components","_fsPath","_formatted","external","$mid","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","getPathFromAmdModule","requirefn","relativePath","uri_1","toUrl","forEachable","getOrSet","mapToString","entries","setToString","mapToSerializable","serializable","serializableToMap","StringIterator","_pos","PathIterator","_from","_to","justSeps","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","reset","hasNext","oldElement","_nodeIterator","_forEach","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","touch","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","or","wordToMatchAgainst","_matchesPrefix","matchesContiguousSubString","matchesSubString","_matchesSubString","isLower","isUpper","isWhitespace","isAlphanumeric","head","nextAnchor","camelCaseWord","_matchesCamelCase","nextUpperIndex","matchesCamelCase","upper","lower","whitespace","isCamelCasePattern","analysis","alpha","numeric","upperPercent","lowerPercent","alphaPercent","numericPercent","analyzeCamelCaseWord","isCamelCaseWord","isUpperCaseWord","_matchesWords","contiguous","nextWordIndex","nextWord","createMatches","score","_maxLen","initTable","thisRow","printTable","patternLen","wordLen","isSeparatorAtPos","isWhitespaceAtPos","isUpperCaseAtPos","wordLow","fuzzyScore","patternLow","patternPos","wordPos","firstMatchCanBeWeak","isPatternInWord","patternStartPos","wordStartPos","_scores","diag","_table","_arrows","_debug","log","_matchesCount","_topScore","_patternStartPos","_firstMatchCanBeWeak","_findAllMatches2","_topMatch2","total","lastMatched","simpleMatchCount","arrow","pow","fuzzyScoreWithPermutations","lowPattern","lowWord","aggressive","tries","movingPatternPos","newPattern","swap1","swap2","nextTypoPermutation","matchesStrictPrefix","matchesPrefix","matchesWords","fuzzyContiguousFilter","fuzzySeparateFilter","fuzzyRegExpCache","map_1","matchesFuzzy","enableSeparateSubstringMatching","matchesFuzzy2","anyScore","_patternPos","_wordPos","Arrow","FuzzyScore","Default","isDefault","fuzzyScoreGracefulAggressive","fuzzyScoreGraceful","starsToRegExp","starCount","NO_PATH_REGEX","PATH_REGEX","splitGlobAware","splitChar","inBraces","inBrackets","curVal","parseRegExp","regEx","GLOB_SPLIT","GLOBSTAR","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","parsePattern","arg1","NULL","patternKey","trimForExclusions","parsedPattern","CACHE","wrapRelativePattern","T1","T2","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","T3_2","T3","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","T4","trivia4and5","T5","regExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","ALL_FORWARD_SLASHES","nativePathEnd","FALSE","isRelativePattern","resultPattern","expression","when","hasSibling","clausePattern","matched","async_1","requiresSiblings","parseExpressionPattern","some","resultExpression","parsedExpression","listToMap","rp","basenamePatterns","aggregate","aggregatedPatterns","getEmptyExpression","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","parseToAsync","getBasenameTerms","patternOrExpression","getPathTerms","replacer","revive","form","normalizedCache","canNormalize","cached","nonAsciiCharactersPattern","nfcCache","normalizeNFC","nfdCache","normalizeNFD","hasToIgnoreCase","network_1","parentCandidate","originalFSPath","isEqualAuthority","a1","a2","uriPath","hasTrailingPathSeparator","fsp","getComparisonKey","basenameOrAuthority","second","p1","p2","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","resolvePath","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","hasDriveLetter","normalizeDriveLetter","tildify","userHome","normalizedUserHome","normalizedUserHomeCached","normalized","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","getBaseLabel","untildify","ellipsis","unc","home","shorten","shortenedPaths","pathIndex","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","Type","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","label","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","_transformOutgoingURIs","transformer","transformOutgoing","_transformIncomingURIs","transformIncoming","DefaultURITransformer","transformOutgoingURIs","transformIncomingURIs","transformAndReviveIncomingURIs","v4","V4UUID","isUUID","_UUIDPattern","ValueUUID","_randomHex","_oneOf","_timeHighBits","_chars","generateUuid","asHex","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","write","lastChar","param","assert","looper","sequences","sequenceResult","sequenceFunction","Sequence","parallel","didErrorOccur","doneCount","readExactlyByFile","totalBytes","fs","open","fd","resultBuffer","bytesRead","close","closeError","readChunk","read","Buffer","allocUnsafe","readToMatchingString","matchingString","chunkBytes","maximumBytesToRead","newLineIndex","decodeStream","iconv","toNodeEncoding","enc","UTF8_with_bom","UTF8","detectEncodingByBOMFromBuffer","b0","readUInt8","b1","UTF16be","UTF16le","b2","guessEncodingByBuffer","resolve_1","reject_1","require","jschardet","Constants","MINIMUM_THRESHOLD","guessed","detect","IGNORE_ENCODINGS","toIconvLiteEncoding","encodingName","normalizedEncodingName","JSCHARDET_TO_ICONV_ENCODINGS","detectEncodingFromBuffer","autoGuessEncoding","seemsBinary","couldBeUTF16LE","couldBeUTF16BE","containsZeroByte","ZERO_BYTE_DETECTION_BUFFER_MAX_LEN","isEndian","isZeroByte","readInt8","guessedEncoding","toDecodeStream","readable","minBytesRequiredForDetection","guessEncoding","AUTO_GUESS_BUFFER_MAX_LEN","NO_GUESS_BUFFER_MAX_LEN","overwriteEncoding","detected","pipe","stream_1","Writable","_bytesBuffered","chunk","isBuffer","_decodeStream","_decodeStreamConstruction","_startDecodeStream","stream","bomLength","decode","encodingExists","encodeStream","detectEncodingByBOM","ibm866","big5","toCanonicalName","windowsTerminalEncodings","437","850","852","855","857","860","861","863","865","866","869","936","1252","resolveTerminalEncoding","verbose","rawEncodingPromise","cliEncodingEnv","child_process_1","stdout","stderr","windowsTerminalEncodingKeys","rawEncoding","iconvEncoding","readdirSync","normalization_1","readdir","copy","copiedSourcesIn","copiedSources","stat","isDirectory","mode","reader","createReadStream","writer","createWriteStream","finished","finish","chmod","doCopyFile","proceed","files","mkdirp","mkdir","mkdirErr","statErr","rmRecursive","exists","lstat","isSymbolicLink","unlink","rmdir","firstError","childrenLeft","child","delSync","lstatSync","rmdirSync","unlinkSync","writeFileAndFlush","ensureOptions","encoding_1","charset","addBOM","canFlush","writeFile","flag","openError","writeError","fdatasync","syncError","doWriteFileAndFlush","isBrowser","isOpen","destroy","autoClose","doWriteFileStreamAndFlush","ensuredOptions","realcaseSync","ix","flow","statLink","tmpFolder","pathInTemp","uuid","rename","mv","updateMtime","futimes","atime","writeFileAndFlushSync","writeFileSync","openSync","fdatasyncSync","closeSync","realpathSync","accessSync","constants","R_OK","realpath","access","watch","onChange","watcher","removeAllListeners","sanitizeFilePath","extfs","rimraf","queueKey","writeFileQueue","writeFilePathQueue","onFinish","ensureWriteFileQueue","toQueueKey","dirExists","tmp","_tmpDir","os","tmpdir","oldPath","newPath","renameIgnoreError","symlink","readlink","truncate","readFile","readDirsInDir","dirPath","fileExists","isFile","whenDeleted","running","createSizeBuffer","writeUInt32BE","readSizeBuffer","readUInt32BE","serialize","BufferPresets","Undefined","el","deserialize","DataType","getDelayedChannel","cancellationToken","relay","listen","RequestType","ResponseType","State","BufferReader","bytes","BufferWriter","alloc","ChannelServer","protocol","ctx","channels","activeRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","response","send","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","cancellationTokenSource","disposable","ChannelClient","state","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidChangeConnections","onDidChangeConnections","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","router","routeCall","getChannel","routeEvent","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","createBufferedEvent","isDeliveringMessages","bufferedMessages","deliverMessages","generateRandomPipeName","randomSuffix","uuid_1","os_1","ChunkStream","byteLength","_totalLength","_chunks","buff","byteCount","resultOffset","Protocol","_socket","_onMessage","_onClose","onClose","_writeBuffer","_data","wasEmpty","_isDisposed","_incomingData","readHead","bodyLen","_socketDataListener","acceptChunk","_headerLen","_socketEndListener","_socketCloseListener","_writeSoon","destroyed","take","Server","ipc_1","server","onConnection","socket","toClientConnectionEvent","Client","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","BufferedProtocol","_actual","queryLower","fuzzy","NO_SCORE","targetLength","queryLength","scores","queryIndex","queryIndexOffset","queryIndexPreviousOffset","queryIndexGtNull","queryCharAtIndex","queryLowerCharAtIndex","targetIndex","targetIndexGtNull","currentIndex","diagIndex","leftScore","diagScore","matchesSequenceLength","separatorBonus","scoreSeparatorAtPos","filters_1","computeCharScore","NO_MATCH","positions","doScore","scoreItem","accessor","NO_ITEM_SCORE","getItemLabel","description","getItemDescription","cacheHash","itemScore","PATH_IDENTITY_SCORE","labelMatch","descriptionMatch","containsPathSeparator","prefixLabelMatch","LABEL_PREFIX_SCORE","camelcaseLabelMatch","LABEL_CAMELCASE_SCORE","labelScore","labelPositions","lowercase","LABEL_SCORE_THRESHOLD","descriptionPrefix","descriptionPrefixLength","descriptionAndLabel","labelDescriptionScore","labelDescriptionPositions","h","doScoreItem","getItemPath","offsets","computeLabelAndDescriptionMatchDistance","matchStart","matchEnd","itemDescription","fallbackCompare","itemA","itemB","labelA","labelB","descriptionA","descriptionB","labelDescriptionALength","labelDescriptionBLength","comparers_1","prepareQuery","compareItemsByScore","fallbackComparer","itemScoreA","itemScoreB","scoreA","scoreB","comparedByMatchLength","matchesA","matchesB","matchStartA","matchLengthA","matchStartB","matchLengthB","compareByMatchLength","itemAMatchDistance","itemBMatchDistance","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","position_1","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","SelectionDirection","Selection","range_1","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","selectionsEqual","getDirection","sel","direction","toUint32","v","Uint8Matrix","rows","cols","Uint8Array","col","toUint8","toUint32Array","Uint32Array","CharacterClassifier","_defaultValue","uint_1","_asciiMap","_createAsciiMap","asciiMap","Boolean","CharacterSet","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TextModelResolvedOptions","indentSize","defaultEOL","trimAutoWhitespace","newOpts","FindMatch","TrackedRangeStickiness","ApplyEditsResult","reverseEdits","changes","trimAutoWhitespaceLineNumbers","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","createWordRegExp","ensureValidWordDefinition","wordDefinition","getWordAtText","textOffset","matchIndex","getWordAtPosSlow","getWordAtPosFast","IndentAction","StandardAutoClosingPairConditional","_standardTokenMask","notIn","standardToken","selector","candidateUri","candidateLanguage","candidateIsSynchronized","hasAccessToAllModels","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","currentState","_stateMachine","CharacterClass","_classifier","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","model","stateMachine","characterClassifier_1","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","nextState","computeLinks","TokenizationRegistryImpl","_onDidChange","onDidChange","_promises","_colorMap","languages","changedLanguages","changedColorMap","support","supportPromise","registration","isDisposed","register","colorMap","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","prefixSumValidIndex","Int32Array","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","cnt","maxCnt","_getAccumulatedValue","accumulatedValue","getTotalValue","midStop","midStart","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_bustCache","changeValue","removeValues","getAccumulatedValue","cacheIndex","getIndexOf","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","lines","versionId","_uri","_lines","_eol","_versionId","_lineStarts","version","_acceptDeleteRange","_acceptInsertText","eolLength","linesLength","lineStartValues","prefixSumComputer_1","lineIndex","newValue","_setLineText","insertText","insertLines","newLengths","nls","exceptionToErrorMessage","exception","localize","detectSystemErrorMessage","errno","syscall","toErrorMessage","types","detail","Severity","_warning","_warn","_info","_displayStrings","Warning","Info","fromValue","Ignore","default","terminateProcess","stdio","cp","execFileSync","pid","success","status","getWindowsCode","cmd","amd_1","spawnSync","kill","getWindowsShell","AbstractProcess","arg3","arg4","shell","executable","isShellCommand","childProcess","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","ee","killed","handleExec","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","childProcessPromise","pidResolve","Types","terminated","handleClose","cmdCode","handleSpawn","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","lineDecoder","decoder_1","sync","stdoutLineDecoder","stderrLineDecoder","createQueuedSender","msgQueue","useQueue","msgQueueCopy","entry","findExecutable","PATH","pathEntry","existsSync","withExtension","_boolean","_string","_stringSet","allowedValues","_clampedInt","minimum","maximum","_float","parseFloat","_scrollbarVisibilityFromString","visibility","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","blinkingStyleToString","blinkingStyle","TextEditorCursorStyle","cursorStyleToString","cursorStyle","Line","Block","Underline","LineThin","BlockOutline","UnderlineThin","RenderLineNumbersType","InternalEditorOptions","canUseLayerHinting","pixelRatio","editorClassName","lineHeight","readOnly","accessibilitySupport","multiCursorModifier","multiCursorMergeOverlapping","wordSeparators","autoClosingBrackets","autoClosingQuotes","autoSurround","autoIndent","useTabStops","tabFocusMode","dragAndDrop","emptySelectionClipboard","copyWithSyntaxHighlighting","layoutInfo","fontInfo","viewInfo","wrappingInfo","contribInfo","showUnused","_equalsLayoutInfo","_equalsViewOptions","_equalsWrappingInfo","_equalsContribOptions","width","height","glyphMarginLeft","glyphMarginWidth","glyphMarginHeight","lineNumbersLeft","lineNumbersWidth","lineNumbersHeight","decorationsLeft","decorationsWidth","decorationsHeight","contentLeft","contentWidth","contentHeight","renderMinimap","minimapLeft","minimapWidth","viewportColumn","verticalScrollbarWidth","horizontalScrollbarHeight","_equalsOverviewRuler","overviewRuler","extraEditorClassName","disableMonospaceOptimizations","rulers","ariaLabel","renderLineNumbers","renderCustomLineNumbers","renderFinalNewline","selectOnLineNumbers","glyphMargin","revealHorizontalRightPadding","roundedSelection","overviewRulerLanes","overviewRulerBorder","cursorBlinking","mouseWheelZoom","cursorSmoothCaretAnimation","cursorWidth","hideCursorInOverviewRuler","scrollBeyondLastLine","scrollBeyondLastColumn","smoothScrolling","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","renderIndentGuides","highlightActiveIndentGuide","renderLineHighlight","_equalsScrollbarOptions","scrollbar","_equalsMinimapOptions","minimap","fixedOverflowWidgets","arrowSize","vertical","horizontal","useShadows","verticalHasArrows","horizontalHasArrows","handleMouseWheel","horizontalScrollbarSize","horizontalSliderSize","verticalScrollbarSize","verticalSliderSize","mouseWheelScrollSensitivity","fastScrollSensitivity","enabled","side","showSlider","renderCharacters","maxColumn","seedSearchStringFromSelection","autoFindInSelection","globalFindClipboard","addExtraSpaceOnTop","cycle","sticky","filterGraceful","snippets","snippetsPreventQuickSuggestions","localityBonus","shareSuggestSelections","showIcons","maxVisibleSuggestions","many","inDiffEditor","isDominatedByLongLines","isWordWrapMinified","isViewportWrapping","wrappingColumn","wrappingIndent","wordWrapBreakBeforeCharacters","wordWrapBreakAfterCharacters","wordWrapBreakObtrusiveCharacters","selectionClipboard","_equalsHoverOptions","hover","contextmenu","_equalsQuickSuggestions","quickSuggestions","quickSuggestionsDelay","_equalsParameterHintOptions","parameterHints","formatOnType","formatOnPaste","suggestOnTriggerCharacters","acceptSuggestionOnEnter","acceptSuggestionOnCommitCharacter","wordBasedSuggestions","suggestSelection","suggestFontSize","suggestLineHeight","tabCompletion","_equalsSuggestOptions","suggest","_equalsGotoLocationOptions","gotoLocation","selectionHighlight","occurrencesHighlight","codeLens","folding","foldingStrategy","showFoldingControls","matchBrackets","_equalFindOptions","colorDecorators","codeActionsOnSave","codeActionsOnSaveTimeout","lightbulbEnabled","comments","EditorOptionsValidator","opts","wordWrap","_sanitizeViewInfo","_sanitizeContribInfo","configuredMulticursorModifier","lineNumbersMinChars","lineDecorationsWidth","mouseStyle","disableLayerHinting","automaticLayout","wordWrapColumn","wordWrapMinified","_wrappingIndentFromString","_opts","suggestOpts","snippetSuggestions","filteredTypes","lineNumbers","_sanitizeScrollbarOpts","_sanitizeMinimapOpts","cursorBlinkingStyle","_cursorBlinkingStyleFromString","_cursorStyleFromString","MAX_VALUE","_sanitizeFindOpts","_sanitizeHoverOpts","_sanitizeParameterHintOpts","_sanitizeTabCompletionOpts","_sanitizeSuggestOpts","_santizeGotoLocationOpts","lightbulb","_booleanMap","InternalEditorOptionsFactory","accessibilityIsOn","accessibilityIsOff","_tweakValidatedOptions","typicalHalfwidthCharacterWidth","EditorLayoutProvider","compute","outerWidth","outerHeight","showGlyphMargin","showLineNumbers","lineNumbersDigitCount","maxDigitWidth","scrollbarArrowSize","verticalScrollbarHasArrows","minimapSide","minimapRenderCharacters","minimapMaxColumn","bareWrappingInfo","className","digitCount","remainingWidth","minimapCharWidth","verticalArrowSize","EDITOR_FONT_DEFAULTS","fontFamily","fontWeight","fontSize","letterSpacing","EDITOR_MODEL_DEFAULTS","detectIndentation","largeFileOptimizations","EDITOR_DEFAULTS","wordHelper_1","zenMode","areSameExtensions","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","extensions","getExtensionIdentifier","byExtension","findGroup","extension","getLocalExtensionTelemetryData","identifier","manifest","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","properties","telemetryData","BetterMergeId","getMaliciousExtensionsSet","report","malicious","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","ExtensionIdentifierWithVersion","extensionManagementUtil_1","isIExtensionIdentifier","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","storeServiceDependency","optional","_util","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IModelService","instantiation_1","shouldSynchronizeModel","isTooLargeForSyncing","isForSimpleWidget","isExclusive","exclusive","LanguageFeatureRegistry","_clock","_entries","provider","_score","_time","_lastCandidate","_updateScores","_orderedForEach","lastBucket","lastBucketScore","getLanguageIdentifier","languageSelector_1","modelService_1","_compareByScoreAndTime","LanguageId","LanguageIdentifier","FontStyle","ColorId","StandardTokenType","MetadataConsts","TokenMetadata","getForeground","fontStyle","getFontStyle","foreground","CompletionItemKind","completionKindToCssClass","completionKindFromString","strict","CompletionItemInsertTextRule","CompletionTriggerKind","CodeActionTrigger","SignatureHelpTriggerKind","DocumentHighlightKind","isLocationLink","isUri","isIRange","originSelectionRange","targetSelectionRange","SymbolKind","symbolKindToCssClass","_fromMapping","FoldingRangeKind","Comment","Imports","Region","isResourceFileEdit","newUri","oldUri","isResourceTextEdit","DraftMode","CommentThreadCollapsibleState","ReferenceProviderRegistry","languageFeatureRegistry_1","RenameProviderRegistry","CompletionProviderRegistry","SignatureHelpProviderRegistry","HoverProviderRegistry","DocumentSymbolProviderRegistry","DocumentHighlightProviderRegistry","DefinitionProviderRegistry","DeclarationProviderRegistry","ImplementationProviderRegistry","TypeDefinitionProviderRegistry","CodeLensProviderRegistry","CodeActionProviderRegistry","DocumentFormattingEditProviderRegistry","DocumentRangeFormattingEditProviderRegistry","OnTypeFormattingEditProviderRegistry","LinkProviderRegistry","ColorProviderRegistry","SelectionRangeRegistry","FoldingRangeProviderRegistry","TokenizationRegistry","tokenizationRegistry_1","ICommandService","CommandsRegistry","_commands","_onDidRegisterCommand","onDidRegisterCommand","idOrCommand","registerCommand","actualHandler","commands","removeFn","oldId","newId","executeCommand","getCommand","NullCommandService","_serviceBrand","onWillExecuteCommand","aType","getType","bType","ContextKeyExprType","ContextKeyExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyRegexExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","serialized","pieces","_deserializeOne","serializedOne","_deserializeValue","_deserializeRegexValue","serializedValue","caseIgnoreFlag","mapFnc","mapDefined","mapEquals","mapNotEquals","mapNot","thisSource","otherSource","mapRegex","_normalizeArr","evaluate","RawContextKey","createKey","getContextKeyValue","not","notEquals","IContextKeyService","SET_CONTEXT_COMMAND_ID","IDownloadService","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","IExtensionManagementService","IExtensionGalleryService","SortBy","SortOrder","StatisticType","InstallOperation","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","IExtensionManagementServerService","EnablementState","IExtensionEnablementService","IExtensionTipsService","ExtensionRecommendationReason","ExtensionsLabel","nls_1","ExtensionsChannelId","PreferencesLabel","IFileService","FileType","FileSystemProviderCapabilities","FileOperation","FileOperationEvent","_resource","_operation","_target","operation","FileChangeType","FileChangesEvent","_changes","checkForChangeType","getOfType","hasType","isParent","StringSnapshot","snapshotToString","chunks","FileOperationError","fileOperationResult","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","CONTENT_CHANGE_EVENT_BUFFER_DELAY","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","SUPPORTED_ENCODINGS","utf8","labelLong","labelShort","order","alias","utf8bom","encodeOnly","utf16le","utf16be","windows1252","iso88591","iso88593","iso885915","macroman","cp437","windows1256","iso88596","windows1257","iso88594","iso885914","windows1250","iso88592","cp852","windows1251","cp866","iso88595","koi8r","koi8u","iso885913","windows1253","iso88597","windows1255","iso88598","iso885910","iso885916","windows1254","iso88599","windows1258","gbk","gb18030","cp950","big5hkscs","shiftjis","eucjp","euckr","windows874","iso885911","koi8ru","koi8t","gb2312","cp865","cp850","FileKind","MIN_MAX_MEMORY_SIZE_MB","FALLBACK_MAX_MEMORY_SIZE_MB","toISOString","ILogService","LogLevel","DEFAULT_LOG_LEVEL","AbstractLogService","_onDidChangeLogLevel","_register","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Trace","Debug","Critical","ConsoleLogService","MultiplexLogService","logServices","logService","debug","info","critical","DelegatedLogService","NullLogService","getLogLevel","environmentService","Off","createSpdLogService","processName","logsFolder","_spdlog","__$__nodeRequire","setAsyncMode","logfilePath","logger","RotatingLogger","SpdLogService","log_1","createRotatingLogger","filename","filesize","filecount","window","postMessage","$type","$data","dirs","abDirPath","mkdirSync","fileContent","readFileSync","clearFormatters","drop","MarkerTag","MarkerSeverity","fromSeverity","severity","severity_1","Hint","IMarkerData","emptyString","makeKey","markerData","IMarkerService","INotificationService","NoOpNotification","progress","NoOpProgress","_onDidClose","onDidClose","actions","rootPath","packageJsonPath","productJsonPath","product","nameShort","nameLong","dataFolderName","IProgressService","ProgressLocation","IProgressService2","emptyProgressRunner","emptyProgress","Progress","_callback","LongRunningOperation","progressService","currentOperationId","currentOperationDisposables","progressDelay","stop","newOperationId","newOperationToken","currentProgressTimeout","currentProgressRunner","show","doStop","isCurrent","operationId","RegistryImpl","Assert","Registry","Extensions","JSONContribution","JSONContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","normalizeId","schemas","jsonContributionRegistry","getDefaultValue","validateProperty","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","getConfigurationProperties","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","windowSettings","resourceSettings","editorConfigurationSchemaId","contributionRegistry","as","jsonContributionRegistry_1","ConfigurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultOverridesConfigurationNode","configurationContributors","editorConfigurationSchema","additionalProperties","errorMessage","configurationProperties","excludedConfigurationProperties","computeOverridePropertyPattern","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","updateSchemaForOverrideSettingsConfiguration","deregisterConfiguration","scope","allOf","defaultConfigurations","defaultConfiguration","propertySchema","$ref","updateOverridePropertyPatternKey","overridable","propertyKeys","included","subNodes","SETTINGS_OVERRRIDE_NODE_ID","update","overridePropertyPattern","subNode","OVERRIDE_PATTERN_WITH_SUBSTITUTION","OVERRIDE_PROPERTY","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","doRemoveFromValueTree","valueTree","getConfigurationValue","config","settingPath","component","accessSetting","overrideIdentifierFromKey","IConfigurationService","isConfigurationOverrides","overrideIdentifier","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","updated","value1","contents","value2","toOverrides","overrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","identifiers","removeFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","keyFromOverrideIdentifier","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","user","workspace","workspaceFolder","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","override","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_configurationModel","_parseErrors","configurationModel","parseContent","parseRaw","parseErrors","json","_defaultConfiguration","_userConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","memory","userConfiguration","workspaceConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","isComplete","addKeys","AbstractConfigurationChangeEvent","changedKeysTree","requestedTree","ConfigurationChangeEvent","_changedConfiguration","_changedConfigurationByResource","changedConfiguration","changedConfigurationByResource","getOrSetChangedConfigurationForResource","changeWithKeys","sourceConfig","_source","_sourceConfig","affectedKeys","configurationModelsToSearch","doesConfigurationContains","updateKeys","IWindowsService","IWindowService","getTitleBarStyle","environment","isExtensionDevelopment","isDev","isBuilt","nativeTabs","nativeFullScreen","style","titleBarStyle","OpenContext","ReadyState","ActiveWindowManager","windowsService","onWindowOpen","onWindowFocus","onActiveWindowChange","setActiveWindow","firstActiveWindowIdPromise","getActiveWindowId","_activeWindowId","windowId","__decorate","__param","isStoredWorkspaceFolder","isRawFileWorkspaceFolder","isRawUriWorkspaceFolder","isSingleFolderWorkspaceIdentifier","getStoredWorkspaceFolder","folderURI","folderName","targetConfigFolderURI","useSlashForPath","folderPath","labels_1","extpath_1","rewriteWorkspaceFileForNewLocation","rawWorkspaceContents","configPathURI","targetConfigPathURI","storedWorkspace","doParseStoredWorkspace","sourceConfigFolder","targetConfigFolder","rewrittenFolders","slashForPath","newRawWorkspaceContents","jsonEdit","storedFolders","SLASH","IWorkspacesMainService","IWorkspacesService","WORKSPACE_EXTENSION","WORKSPACE_FILTER","UNTITLED_WORKSPACE_NAME","reviveWorkspaceIdentifier","configPath","isWorkspaceIdentifier","workspaceIdentifier","toWorkspaceIdentifier","isSingleFolderWorkspaceInitializationPayload","WORKSPACE_SUFFIX","hasWorkspaceFileExtension","toWorkspaceFolders","configuredFolders","relativeTo","workspaceFolders","configuredFolder","workspaces_1","resources","toUri","WorkspaceFolder","parseWorkspaceFolders","ensureUnique","IWorkspaceContextService","WorkbenchState","IWorkspace","isIWorkspace","IWorkspaceFolder","isIWorkspaceFolder","toResource","Workspace","_id","_configuration","_foldersMap","_folders","updateFoldersMap","CLIServer","_server","req","onRequest","setup","catch","ipcHandlePath","_ipcHandlePath","ipc_net_1","strs","typeHint","setEncoding","writeHead","fileURIs","folderURIs","forceNewWindow","diffMode","addMode","forceReuseWindow","urisToOpen","collectURIToOpen","NO_OP_VOID_PROMISE","ExtensionActivationTimes","startup","codeLoadingTime","activateCallTime","activateResolvedTime","NONE","ExtensionActivationTimesBuilder","_startup","_codeLoadingStart","_codeLoadingStop","_activateCallStart","_activateCallStop","_activateResolveStart","_activateResolveStop","_delta","ActivatedExtension","activationFailed","activationFailedError","activationTimes","module","subscriptions","EmptyExtension","activate","deactivate","HostExtension","FailedExtension","activationError","ExtensionActivatedByEvent","activationEvent","ExtensionActivatedByAPI","ExtensionsActivator","registry","resolvedExtensions","hostExtensions","host","_registry","_resolvedExtensionsSet","extensionId","extensions_1","_hostExtensionsMap","_host","_activatingExtensions","_activatedExtensions","_alreadyActivatedEvents","extensionKey","activatedExtension","reason","activateExtensions","getExtensionDescriptionsForActivationEvent","_activateExtensions","desc","getExtensionDescription","currentExtensionId","greenExtensions","redExtensions","currentExtension","depIds","currentExtensionGetsGreenLight","lenJ","depId","dep","showMessage","displayName","depDesc","extensionIds","greenMap","red","_handleActivateRequest","redExtensionKey","green","_activateExtension","currentlyActivatingExtension","newlyActivatingExtension","actualActivateExtension","ExtHostHeapService","_idPool","ids","es5ClassCompat","Reflect","construct","getOwnPropertyDescriptor","setPrototypeOf","Disposable_1","callOnDispose","_callOnDispose","inDisposables","Position_1","character","_line","_character","TypeError","isAfter","lineDeltaOrChange","characterDelta","lineDelta","lineOrChange","Range_1","startLineOrStart","startColumnOrEnd","endLine","_start","_end","isPosition","positionOrRange","Max","Min","isSingleLine","startOrChange","Selection_1","anchorLineOrAnchor","anchorColumnOrActive","activeLine","activeColumn","active","_anchor","_active","isRange","isReversed","ResolvedAuthority","port","EndOfLine","TextEdit","TextEdit_1","_newText","newEol","_range","_newEol","WorkspaceEdit","_edits","_type","textEdits","textEdit","SnippetString","SnippetString_1","_tabstop","_escape","nested","DiagnosticTag","DiagnosticSeverity","Location","Location_1","rangeOrPosition","DiagnosticRelatedInformation","location","Diagnostic","tags","relatedInformation","Hover","htmlContent_1","DocumentHighlight","Text","SymbolInformation","SymbolInformation_1","rangeOrContainer","locationOrUri","containerName","DocumentSymbol","DocumentSymbol_1","selectionRange","CodeAction","CodeActionKind","CodeActionKind_1","Empty","QuickFix","append","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","SourceOrganizeImports","SourceFixAll","SelectionRange","CodeLens","isResolved","CodeInset","ParameterInformation","documentation","SignatureInformation","parameters","SignatureHelp","signatures","CompletionItem","sortText","filterText","preselect","CompletionList","isIncomplete","ViewColumn","StatusBarAlignment","TextEditorLineNumbersStyle","TextDocumentSaveReason","TextEditorRevealType","TextEditorSelectionChangeKind","DecorationRangeBehavior","Keyboard","Mouse","Command","DocumentLink","Color","blue","ColorInformation","color","ColorPresentation","ColorFormat","SourceControlInputBoxValidationType","TaskRevealKind","TaskPanelKind","TaskGroup","TaskGroup_1","Clean","Build","Rebuild","Test","ProcessExecution","varg1","varg2","_process","_args","crypto","createHash","digest","ShellExecution","arg0","_command","_commandLine","ShellQuoting","TaskScope","CustomExecution","Task","Task_1","definition","arg5","arg6","problemMatchers","execution","_problemMatchers","_hasDefinedMatchers","_isBackground","_presentationOptions","_runOptions","__id","_scope","computeDefinitionBasedOnExecution","_execution","_definition","ProcessType","computeId","ShellType","ExtensionCallbackType","EmptyType","execution2","hasDefinedMatchers","isBackground","_group","presentationOptions","runOptions","TreeItem","collapsibleState","TreeItemCollapsibleState","resourceUri","ThemeIcon","File","Folder","ThemeColor","RelativePattern","baseFolder","Breakpoint","condition","hitCondition","logMessage","SourceBreakpoint","FunctionBreakpoint","functionName","DebugAdapterExecutable","DebugAdapterServer","FileSystemError","FileSystemError_1","uriOrMessage","terminator","captureStackTrace","messageOrUri","FileExists","FileNotFound","FileNotADirectory","FileIsADirectory","NoPermissions","Unavailable","FoldingRange","QuickInputButtons","Back","iconPath","getWordDefinitionFor","modeId","_modeId2WordDefinition","setWordDefinitionFor","ExtHostDocumentData","mirrorTextModel_1","proxy","languageId","isDirty","_textLines","_proxy","_languageId","_isDirty","assert_1","document","_document","fileName","isUntitled","isClosed","save","_save","getText","_getTextInRange","extHostTypes_1","LF","CRLF","lineAt","lineOrPos","_lineAt","offsetAt","_offsetAt","positionAt","_positionAt","validateRange","ran","_validateRange","validatePosition","_validatePosition","getWordRangeAtPosition","_getWordRangeAtPosition","newLanguageId","$trySaveDocument","lineEnding","startLineIndex","endLineIndex","resultLines","lineOrPosition","firstNonWhitespaceCharacterIndex","rangeIncludingLineBreak","isEmptyOrWhitespace","_ensureLineStarts","lineLength","hasChanged","maxCharacter","_position","wordAtText","TEST_VIEW_CONTAINER_ID","ViewContainersRegistry","ViewsRegistry","ViewContainer","hideIfEmpty","ViewContainersRegistryImpl","_onDidRegister","onDidRegister","_onDidDeregister","onDidDeregister","viewContainers","viewContainer","_onViewsRegistered","onViewsRegistered","_onViewsDeregistered","onViewsDeregistered","_onDidChangeContainer","onDidChangeContainer","_viewContainers","_views","views","addViews","viewDescriptors","removeViews","viewsToMove","container","loc","viewDescriptor","viewId","viewsToDeregister","remaningViews","view","IViewsService","stringToUri","uriToString","u","convertPaths","fixSourcePath","breakpoint","stackFrames","frame","breakpoints","bp","_formatPIIRegexp","formatPII","excludePII","isExtensionHostDebugging","adapterProxy","isDebuggerMainContribution","dbg","program","runtime","getExactExpressionStartAndEnd","lineContent","looseStart","looseEnd","matchingExpression","subExpression","subExpressionResult","convertToDAPaths","fixPath","objects_1","toDA","convertToVSCPaths","AbstractDebugAdapter","pendingRequests","_onError","_onExit","onExit","eventCallback","messageCallback","requestCallback","seq","internalSend","request_seq","typ","sendMessage","cancelPending","StreamDebugAdapter","outputStream","rawData","contentLength","handleData","TWO_CRLF","acceptMessage","HEADER_LINESEPARATOR","kvPair","HEADER_FIELDSEPARATOR","SocketDebugAdapter","adapterServer","connected","net","ExecutableDebugAdapter","adapterExecutable","debugType","outputService","pfs_1","VSCODE_PREVENT_FOREIGN_INSPECT","forkOptions","execArgv","fork","serverProcess","spawnOptions","stdin","extensionManagement_1","killer","platformContribution","extensionFolderPath","runtimeArgs","contribution","win","extract","winx86","windows","osx","linux","extensionDescriptions","ed","debuggers","extractedDbg","extensionLocation","isBuiltin","platformInfo","getDefaultTerminalLinuxReady","_DEFAULT_TERMINAL_LINUX_READY","pfs","lazyEnv","isDebian","DESKTOP_SESSION","COLORTERM","TERM","getDefaultTerminalWindows","_DEFAULT_TERMINAL_WINDOWS","isWoW64","windir","TERMINAL_TITLE","terminalLauncher","getTerminalLauncher","WinTerminalService","MacTerminalService","LinuxTerminalService","TerminalLauncher","runInTerminal0","envVars","windowsExec","cmdArgs","CMD","terminalApp","osxExec","DEFAULT_TERMINAL_OSX","script","osaArgs","osa","OSASCRIPT","terminalConfig","execThenable","linuxExec","termArgs","bashCommand","WAIT_MESSAGE","hasChildProcesses","processId","prepareCommand","shellType","shell_config","integrated","hardQuote","TERMINAL_PANEL_ID","KEYBINDING_CONTEXT_TERMINAL_IS_OPEN","contextkey_1","KEYBINDING_CONTEXT_TERMINAL_FOCUS","KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED","toNegated","KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_NOT_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_INPUT_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_INPUT_NOT_FOCUSED","IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY","NEVER_SUGGEST_SELECT_WINDOWS_SHELL_STORAGE_KEY","NEVER_MEASURE_RENDER_TIME_STORAGE_KEY","EXT_HOST_CREATION_DELAY","ITerminalService","TerminalCursorStyle","BLOCK","LINE","UNDERLINE","TERMINAL_CONFIG_SECTION","DEFAULT_LETTER_SPACING","MINIMUM_LETTER_SPACING","DEFAULT_LINE_HEIGHT","Direction","ProcessState","LinuxDistro","_mergeEnvironmentValue","getCwd","customCwd","ignoreConfigurationCwd","_sanitizeCwd","mergeEnvironments","configKey","actualKey","addTerminalEnvironmentKeys","setLocaleVariables","languageVariants","de","en","es","fi","fr","it","ja","ko","pl","ru","zh","_getLangEnvVariable","resolveConfigurationVariables","configurationResolverService","lastActiveWorkspaceRoot","escapeNonWindowsPath","getDefaultShell","_TERMINAL_DEFAULT_SHELL_WINDOWS","isAtLeastWindows10","release","is32ProcessOn64Windows","powerShellPath","processes","getTerminalDefaultShellWindows","_TERMINAL_DEFAULT_SHELL_UNIX_LIKE","unixLikeTerminal","SHELL","getTerminalDefaultShellUnixLike","detectedDistro","terminal_1","Unknown","Fedora","Ubuntu","linuxDistro","getWindowsBuildNumber","osVersion","buildNumber","TerminalProcess","shellLaunchConfig","windowsEnableConpty","_currentTitle","_titleInterval","_onProcessData","_onProcessExit","_onProcessIdReady","_onProcessTitleChanged","shellName","_initialCwd","experimentalUseConpty","_ptyProcess","pty","_processStartupComplete","onProcessIdReady","_exitCode","_queueProcessExit","_closeTimeout","_sendProcessId","_setupTitlePolling","onProcessData","onProcessExit","onProcessTitleChanged","_sendProcessTitle","_kill","ex","immediate","resize","linkedstr","WorkspaceConfigurationModelParser","configurationModels_1","_settingsModelParser","FolderSettingsModelParser","_launchModel","settingsModel","launchModel","reprocess","createConfigurationModelFrom","scopedContents","StandaloneConfigurationModelParser","_raw","parseWorkspaceSettings","_settingsModel","rawSettings","rawWorkspaceSettings","filterByScope","filterOverriddenProperties","getScope","memoryConfigurationByResource","_workspace","changedKeys","updateUserConfiguration","updateWorkspaceConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","allKeys","AllKeysConfigurationChangeEvent","WorkspaceConfigurationChangeEvent","configurationChangeEvent","affectsConfiguration","lookUp","tree","ExtHostConfiguration","extHostWorkspace","_extHostWorkspace","_barrier","wait","ExtHostConfigProvider","eventData","getConfigProvider","$acceptConfigurationChanged","_onDidChangeConfiguration","_configurationScopes","configurationScopes","onDidChangeConfiguration","_toConfigurationChangeEvent","_toReadonlyValue","_validateConfigurationAccess","clonedConfig","cloneOnWriteProxy","clonedTarget","cloneTarget","Proxy","deleteProperty","Global","parseConfigurationTarget","$updateConfigurationOption","$removeConfigurationOption","globalValue","workspaceValue","workspaceFolderValue","readonlyProxy","isExtensible","preventExtensions","extensionIdText","configurationModels_2","parseConfigurationModel","AbstractVariableResolverService","_context","_envVariables","recursiveResolve","commandValueMapping","resolvedVariables","resolveAnyBase","newConfig","folderUri","resolveString","variableName","resolvedValue","replaced","resolvedKey","filePath","getFilePath","VARIABLE_REGEXP","variable","argument","resolveFromMap","getFolderUri","getWorkspaceFolderCount","getLineNumber","selectedText","getSelectedText","ep","getExecPath","IEditorService","ACTIVE_GROUP","SIDE_GROUP","isDecorationOptionsArr","something","isDecorationOptions","pathOrURIToURI","selection","Unnecessary","markers_1","Information","One","Beside","editorService_1","markup","isCodeblock","htmlContent","resUris","uris","part","bucket","marshalling_1","_uriMassage","fromMany","fromStrict","fromRangeOrRangeWithMessage","ranges","hoverMessage","renderOptions","ThemableDecorationAttachmentRenderOptions","contentText","contentIconPath","border","borderColor","textDecoration","backgroundColor","margin","ThemableDecorationRenderOptions","outline","outlineColor","outlineStyle","outlineWidth","borderRadius","borderSpacing","borderStyle","borderWidth","cursor","opacity","gutterIconPath","gutterIconSize","overviewRulerColor","OpenOpen","ClosedClosed","OpenClosed","ClosedOpen","DecorationRenderOptions","isWholeLine","rangeBehavior","overviewRulerLane","light","dark","documents","_allEntries","uriOrEdits","doc","getDocument","modelVersionId","renameFile","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","Key","Null","EnumMember","Struct","Operator","TypeParameter","WorkspaceSymbol","DefinitionLink","definitionLink","targetUri","targetRange","documentHighlight","occurrence","TriggerCharacter","TriggerForIncompleteCompletions","Invoke","CompletionContext","triggerKind","triggerCharacter","Unit","Value","Keyword","Snippet","Reference","suggestion","commitCharacters","keepWhitespace","insertTextRules","help","activeSignature","activeParameter","colorPresentation","additionalTextEdits","AfterDelay","Manual","FocusOut","SourceControl","Window","Notification","modes","TextEditorOptions","pinned","preview","preserveFocus","GlobPattern","LanguageSelector","extLevel","mainLevel","adjustHandler","commands_1","OpenFolderAPICommand","noRecentEntry","skip-add-to-recently-opened","recentEntryLabel","ID","execute","DiffAPICommand","typeConverters","viewColumn","OpenAPICommand","columnOrOptions","windows_1","removeFromRecentlyOpened","RemoveFromRecentlyOpenedAPICommand","SetEditorLayoutAPICommand","layout","schema","required","orientation","enum","groups","download_1","download","tryMapWith","f","ExtHostApiCommands","_disposables","registerCommands","_executeWorkspaceSymbolProvider","returns","_executeDefinitionProvider","_executeDeclaraionProvider","_executeTypeDefinitionProvider","_executeImplementationProvider","_executeHoverProvider","_executeDocumentHighlights","_executeReferenceProvider","_executeDocumentRenameProvider","_executeSignatureHelpProvider","_executeDocumentSymbolProvider","_executeCompletionItemProvider","_executeCodeActionProvider","_executeCodeLensProvider","_executeFormatDocumentProvider","_executeFormatRangeProvider","_executeFormatOnTypeProvider","_executeDocumentLinkProvider","_executeDocumentColorProvider","_executeColorPresentationProvider","_executeSelectionRangeProvider","apiCommands_1","tuple","newName","rejectReason","maxItemsToResolve","suggestions","incomplete","ci","oneResult","MergedInfo","symbol","codeAction","_isSynthetic","converter","fromInternal","itemResolveCount","ExtHostDocumentSaveParticipant","_logService","_documents","_mainThreadEditors","_thresholds","_callbacks","_badListeners","WeakMap","toArray","didTimeoutHandle","_deliverEventAsyncAndBlameBadListeners","extHostTypeConverters_1","stubEvent","_deliverEventAsync","promises","t1","resourceEdit","$tryApplyWorkspaceEdit","ExtHostProgress","_handles","_mapHandleToCancellationSource","cancellable","$startProgress","_withProgress","progressEnd","$progressEnd","ProgressCallback","progress_1","throttledReport","$progressReport","decorators_1","currentValue","increment","mergeProgress","deprecated","originalMethod","warnOnError","TextEditorDecorationType","_Keys","nextId","$registerTextEditorDecorationType","TypeConverters","$removeTextEditorDecorationType","idGenerator_1","TextEditorEdit","_documentVersionId","_collectedEdits","_setEndOfLine","_undoStopBefore","undoStopBefore","_undoStopAfter","undoStopAfter","documentVersionId","setEndOfLine","_pushEdit","forceMoveMarkers","validRange","endOfLine","ExtHostTextEditorOptions","_accept","_tabSize","_indentSize","_insertSpaces","_cursorStyle","_lineNumbers","_validateTabSize","$trySetOptions","_validateIndentSize","_validateInsertSpaces","newOptions","bulkConfigurationUpdate","hasUpdate","ExtHostTextEditor","selections","visibleRanges","_documentData","_selections","_visibleRanges","_viewColumn","_hasDecorationsForKey","$tryShowEditor","$tryHideEditor","_trySetSelection","decorationType","willBeEmpty","_runOnProxy","$trySetDecorations","_ranges","$trySetDecorationsFast","revealType","$tryRevealRange","$trySetSelections","_applyEdit","editBuilder","editData","finalize","editRanges","$tryApplyEdits","snippet","where","posOrRange","$tryInsertSnippet","throwProposedApiError","nullExtensionDescription","enableProposedApi","engines","IExtensionService","ActivationTimes","ExtensionPointContribution","ExtensionHostLogFileName","checkProposedApiEnabled","toExtension","extensionDescription","NullExtensionService","onDidRegisterExtensions","onDidChangeExtensionsStatus","onDidChangeExtensions","onWillActivateByEvent","onDidChangeResponsiveChange","_activationEvent","_extPoint","ExtHostLogService","logsPath","spdlogService_1","_logsPath","logFile","extensionID","toTreeItemLabel","highlights","ExtHostTreeViews","treeViews","registerArgumentProcessor","processArgument","$treeViewId","$treeItemHandle","convertArgument","treeDataProvider","treeView","createTreeView","createExtHostTreeView","onDidCollapseElement","onDidExpandElement","selectedElements","onDidChangeSelection","visible","onDidChangeVisibility","reveal","treeViewId","treeItemHandle","getChildren","expanded","setExpanded","treeItemHandles","setSelection","isVisible","setVisible","ExtHostTreeView","getExtensionElement","roots","nodes","_visible","_selectedHandles","_onDidExpandElement","_onDidCollapseElement","_onDidChangeSelection","_onDidChangeVisibility","_onDidChangeData","refreshPromise","dataProvider","$registerTreeViewDataProvider","showCollapseAll","onDidChangeTreeData","refreshingPromise","promiseCallback","_promiseCallback","refresh","$setMessage","_message","parentHandle","parentElement","childrenNodes","getChildrenNodes","fetchChildrenNodes","select","focus","expand","getParent","resolveUnknownParentChain","parentChain","resolveTreeNode","treeNode","$reveal","resolveParent","parentNode","getTreeItem","extTreeItem","createHandle","cachedElement","parentNodeOrHandle","clearChildren","createAndRegisterTreeNode","clearAll","$refresh","handlesToRefresh","getHandlesToRefresh","refreshHandles","elementsToUpdate","elementNode","currentNode","handlesToUpdate","itemHandles","itemsToRefresh","refreshNode","extElement","createTreeNode","updateNodeCache","addNodeToCache","addNodeToParentCache","extensionTreeItem","createTreeItem","icon","getLightIconPath","tooltip","toInternal","contextValue","iconDark","getDarkIconPath","themeIcon","returnFirst","ID_HANDLE_PREFIX","treeItemLabel","LABEL_HANDLE_PREFIX","elementId","existingHandle","getIconPath","childNode","childEleement","DeltaExtensionsResult","removedDueToLooping","ExtensionDescriptionRegistry","_extensionDescriptions","_initialize","_extensionsMap","_extensionsArr","_activationMap","activationEvents","toKeep","toAdd","looping","_findLoopingExtensions","toRemoveSet","G","_arcs","_nodesSet","_nodesArr","addNode","good","getArcs","descs","_depId","addArc","getNodes","madeProgress","hasOnlyGoodArcs","MessageType","createMessageOfType","writeUInt8","isMessageOfType","LazyPromise","_actualOk","_actualErr","_hasValue","_hasErr","_err","_ensureActual","ProxyIdentifier","isMain","sid","nid","createMainContextProxyIdentifier","createExtHostContextProxyIdentifier","getStringIdentifierForProxy","ObjectIdentifier","of","IdObject","_n","reviveWorkspaceEditDto","MainContext","MainThreadClipboard","proxyIdentifier_1","MainThreadCommands","MainThreadComments","MainThreadConfiguration","MainThreadConsole","MainThreadDebugService","MainThreadDecorations","MainThreadDiagnostics","MainThreadDialogs","MainThreadDocuments","MainThreadDocumentContentProviders","MainThreadTextEditors","MainThreadErrors","MainThreadTreeViews","MainThreadLanguageFeatures","MainThreadLanguages","MainThreadMessageService","MainThreadOutputService","MainThreadProgress","MainThreadQuickOpen","MainThreadStatusBar","MainThreadStorage","MainThreadTelemetry","MainThreadTerminalService","MainThreadWebviews","MainThreadUrls","MainThreadWorkspace","MainThreadFileSystem","MainThreadExtensionService","MainThreadSCM","MainThreadSearch","MainThreadTask","MainThreadWindow","ExtHostContext","ExtHostCommands","ExtHostDiagnostics","ExtHostDebugService","ExtHostDecorations","ExtHostDocumentsAndEditors","ExtHostDocuments","ExtHostDocumentContentProviders","ExtHostEditors","ExtHostFileSystem","ExtHostFileSystemEventService","ExtHostLanguageFeatures","ExtHostQuickOpen","ExtHostExtensionService","ExtHostTerminalService","ExtHostSCM","ExtHostSearch","ExtHostTask","ExtHostWorkspace","ExtHostWindow","ExtHostWebviews","ExtHostComments","ExtHostStorage","ExtHostUrls","ExtHostOutputService","ExtHostClipboard","mainContext","getProxy","extHost_protocol_1","$readText","$writeText","heapService","_converter","CommandsConverter","_argumentProcessors","extHostTypeConverter","isIPosition","processor","$registerCommand","extHostTypes","$unregisterCommand","_executeContributedCommand","$executeCommand","filterUnderscoreCommands","$getCommands","heap","_delegatingCommandId","_heap","_executeConvertedCommand","$ident","keep","actualCmd","convertToCommentThread","vscodeCommentThread","commandsConverter","threadId","comment","vscodeComment","canEdit","editComment","canDelete","deleteComment","userIconPath","gravatar","commentId","userName","selectCommand","isDraft","commentReactions","reaction","convertToReaction","convertToComment","convertFromComment","hasReacted","convertToModeComment","commentController","editCommand","deleteCommand","convertToReaction2","reactionProvider","providerCanDeleteReaction","deleteReaction","providerCanAddReaction","addReaction","toggleReaction","convertFromReaction","_commentControllers","_commentControllersByExtension","_documentProviders","_workspaceProviders","commentControlHandle","commentThread","getCommentThread","commentThreadHandle","handlePool","ExtHostCommentController","commentControllers","commentControllerHandle","$onCommentWidgetInputChange","uriComponents","commentingRangeProvider","provideCommentingRanges","availableReactions","reactions","threadHandle","getComment","emptyCommentThreadFactory","createEmptyCommentThread","$registerWorkspaceCommentProvider","registerListeners","$unregisterWorkspaceCommentProvider","$registerDocumentCommentProvider","startDraftLabel","deleteDraftLabel","finishDraftLabel","reactionGroup","$unregisterDocumentCommentProvider","getDocumentData","handlerData","getDocumentProvider","createNewCommentThread","thread","replyToCommentThread","convertFromCommentThread","startDraft","deleteDraft","finishDraft","provideDocumentComments","commentInfo","owner","vscodeCommentInfo","threads","commentingRanges","draftMode","inDraftMode","InDraft","NotInDraft","NotSupported","convertCommentInfo","provideWorkspaceComments","onDidChangeCommentThreads","$onDidCommentThreadsChange","ExtHostCommentThread","_commandsConverter","_commentController","_threadId","_handlePool","_comments","_additionalCommands","$createCommentThread","_acceptInputCommand","_collapseState","$updateCommentThreadRange","$updateCommentThreadLabel","newComments","$updateComments","cmt","acceptInputCommand","$updateCommentThreadAcceptInputCommand","additionalCommands","internals","$updateCommentThreadAdditionalCommands","newState","$updateCommentThreadCollapsibleState","Expanded","Collapsed","convertToCollapsibleState","$deleteCommentThread","ExtHostCommentInputBox","_onDidChangeValue","onDidChangeValue","newInput","$setInputValue","_extension","_threads","$registerCommentController","_commentReactionProvider","$updateCommentControllerFeatures","inputBox","setInput","_workspaceService","_extensionService","_editorsService","_configurationService","_terminalService","_commandService","_debugSessions","_configProviderHandleCounter","_configProviders","_adapterFactoryHandleCounter","_adapterFactories","_trackerFactoryHandleCounter","_trackerFactories","_aexCommands","_debugAdapters","_debugAdaptersTrackers","_onDidStartDebugSession","_onDidTerminateDebugSession","_onDidChangeActiveDebugSession","_onDidReceiveDebugSessionCustomEvent","_debugServiceProxy","_onDidChangeBreakpoints","startBreakpoints","_activeDebugConsole","ExtHostDebugConsole","_breakpoints","_breakpointEventsActive","getExtensionRegistry","extensionRegistry","registerAllDebugTypes","onDidStartDebugSession","onDidTerminateDebugSession","onDidChangeActiveDebugSession","activeDebugSession","_activeDebugSession","onDidReceiveDebugSessionCustomEvent","activeDebugConsole","debugTypes","getAllExtensionDescriptions","debugUtils_1","adapterExecutableCommand","$registerDebugTypes","onDidChangeBreakpoints","breakpoints0","fireBreakpointChanges","dtos","dto","$registerBreakpoints","fids","$unregisterBreakpoints","nameOrConfig","$startDebugging","debugAdapterExecutable","$registerDebugConfigurationProvider","provideDebugConfigurations","resolveDebugConfiguration","$unregisterDebugConfigurationProvider","definesDebugType","getAdapterFactoryByType","$registerDebugAdapterDescriptorFactory","$unregisterDebugAdapterDescriptorFactory","$registerDebugAdapterTrackerFactory","$unregisterDebugAdapterTrackerFactory","_terminalDisposedListener","onDidCloseTerminal","terminal","_integratedTerminalInstance","terminals_1","needNewTerminal","createTerminal","shellProcessId","sendText","runInTerminal","configProvider","getWorkspaceFolders2","_variableResolver","ExtHostVariableResolverService","ws","resolveAny","debugAdapterHandle","sessionDto","mythis","session","getSession","getAdapterDescriptor","adapter","convertToDto","da","debugAdapter_1","DirectDebugAdapter","implementation","getDebugAdapterTrackers","tracker","onDidSendMessage","$acceptDAMessage","$acceptDAError","$acceptDAExit","onWillStartSession","startSession","onWillReceiveMessage","onWillStopSession","stopSession","bpd","fbp","sbp","configProviderHandle","getConfigProviderByHandle","debugConfiguration","adapterProviderHandle","adapterProvider","getAdapterProviderByHandle","createDebugAdapterTracker","race","trackers","MultiTracker","serverPort","debugServer","pairs","createDebugAdapterDescriptor","daExecutableFromPackage","aex","rootFolder","ae","dae","platformAdapterExecutable","$startBreakpointEvents","ds","ExtHostDebugSession","$sessionCached","_folderUri","resolveWorkspaceFolder","_workspaceFolder","$customDebugAdapterRequest","$appendDebugConsole","variableResolver_1","editorService","getConfiguration","activeEditor","__setTransport","cb","errorcb","_sendUp","_provider","$registerDecorationProvider","onDidChangeDecorations","$onDidChange","$unregisterDecorationProvider","requests","provideDecoration","letter","priority","bubble","DiagnosticCollection","maxDiagnosticsPerFile","onDidChangeDiagnostics","_owner","_maxDiagnosticsPerFile","_onDidChangeDiagnostics","$clear","_checkDisposed","diagnostics","toSync","lastUri","_compareIndexedTuplesByUri","currentDiagnostics","marker","orderLoop","diagnostic","$changeMany","_collections","_debouncer","_mapper","_getDiagnostics","collection","ExtHostDialogs","$showOpenDialog","filepaths","$showSaveDialog","filepath","ExtHostDocumentContentProvider","_documentsAndEditors","_documentContentProviders","$registerTextContentProvider","$provideTextDocumentContent","equalLines","$onVirtualDocumentChange","$unregisterTextContentProvider","provideTextDocumentContent","documentsAndEditors","_onDidAddDocument","_onDidRemoveDocument","_onDidChangeDocument","_onDidSaveDocument","onDidAddDocument","onDidRemoveDocument","onDidChangeDocument","onDidSaveDocument","_documentLoader","onDidRemoveDocuments","onDidAddDocuments","allDocuments","$tryOpenDocument","$tryCreateDocument","oldModeId","newModeId","_acceptLanguageId","$acceptDirtyStateChanged","_acceptIsDirty","contentChanges","onEvents","rangeOffset","rangeLength","extHostDocumentData_1","_mainContext","_editors","_onDidAddDocuments","_onDidRemoveDocuments","_onDidChangeVisibleTextEditors","_onDidChangeActiveTextEditor","onDidChangeVisibleTextEditors","onDidChangeActiveTextEditor","removedDocuments","addedDocuments","removedEditors","documentData","EOL","editor","addedEditors","documentUri","extHostTextEditor_1","editorPosition","newActiveEditor","_activeEditorId","allEditors","FsLinkProvider","_schemes","schemes","prevScheme","prevState","linkComputer_1","_initStateMachine","docLink","typeConverter","_extHostLanguageFeatures","_linkProvider","_fsProvider","_usedSchemes","_watches","_linkProviderRegistration","registerDocumentLinkProvider","_registerLinkProviderIfNotYetRegistered","capabilites","isCaseSensitive","isReadonly","$registerFileSystemProvider","onDidChangeFile","mapped","newType","Changed","Created","Deleted","$onFileSystemChange","$unregisterProvider","formatter","$registerResourceLabelFormatter","$unregisterResourceLabelFormatter","ctime","mtime","getProvider","_asIStat","readDirectory","byteOffset","createDirectory","FileSystemWatcher","dispatcher","globPattern","ignoreCreateEvents","ignoreChangeEvents","ignoreDeleteEvents","_onDidCreate","_onDidDelete","_config","created","deleted","onDidCreate","onDidDelete","_extHostDocumentsAndEditors","_mainThreadTextEditors","_onFileEvent","_onDidRenameFile","_onWillRenameFile","onDidRenameFile","wrappedListener","oldUriDto","newUriDto","fireAsync","_listener","waitUntil","wrappedThenable","allEdits","ExtHostLanguages","$getLanguages","$changeLanguage","ExtHostMessageService","optionsOrFirstItem","isMessageItem","modal","isCloseAffordance","$showMessage","getIconUris","getIconUri","getDarkIconUri","getLightIconUri","_sessions","_instances","itemsOrItemsPromise","_onDidSelectItem","itemsPromise","instance","quickPickWidget","$show","placeHolder","matchOnDescription","matchOnDetail","ignoreFocusLost","ignoreFocusOut","canPickMany","widgetClosedMarker","widgetClosedPromise","pickItems","picked","alwaysShow","onDidSelectItem","$setItems","$setError","_validateInput","validateInput","$input","selectedFolder","ExtHostQuickPick","ExtHostInputBox","sessionId","_fireDidChangeValue","_fireDidAccept","handles","_fireDidChangeActive","_fireDidChangeSelection","_fireDidTriggerButton","_fireDidHide","ExtHostQuickInput","_extensionId","_onDidDispose","_nextId","_expectingHide","_enabled","_busy","_ignoreFocusOut","_buttons","_handlesToButtons","_onDidAcceptEmitter","_onDidChangeValueEmitter","_onDidTriggerButtonEmitter","_onDidHideEmitter","_pendingUpdate","onDidAccept","onDidTriggerButton","onDidHide","step","_steps","totalSteps","_totalSteps","busy","placeholder","_placeholder","buttons","button","_updateTimeout","$dispose","dispatchUpdate","$createOrUpdate","onDispose","_items","_handlesToItems","_itemsToHandles","_canSelectMany","_matchOnDescription","_matchOnDetail","_activeItems","_onDidChangeActiveEmitter","_selectedItems","_onDidChangeSelectionEmitter","onDidChangeActive","canSelectMany","activeItems","selectedItems","password","_password","prompt","_prompt","validationMessage","_validationMessage","decorations","compareResourceThemableDecorations","aPath","bPath","compareResourceStates","strikeThrough","faded","compareResourceStatesDecorations","commandEquals","compareArgs","ExtHostSCMInputBox","_sourceControlHandle","$setInputBoxValue","updateValue","$setInputBoxPlaceholder","$setValidationProviderIsEnabled","$setInputBoxVisibility","ExtHostSourceControlResourceGroup","_resourceHandlePool","_resourceStates","_resourceStatesMap","_resourceStatesCommandsMap","_onDidUpdateResourceStates","onDidUpdateResourceStates","onDidDispose","_handlesSnapshot","_resourceSnapshot","_hideWhenEmpty","$registerGroup","$updateGroupLabel","hideWhenEmpty","$updateGroup","resourceStates","sourceUri","lightIconPath","darkIconPath","icons","rawResource","rawResourceSplices","reverseSplices","handlesToDelete","$unregisterGroup","ExtHostSourceControl","_rootUri","_groups","_count","_quickDiffProvider","_commitTemplate","_statusBarCommands","_selected","updatedResourceGroups","_inputBox","$registerSourceControl","rootUri","$updateSourceControl","quickDiffProvider","hasQuickDiffProvider","commitTemplate","statusBarCommands","commandListEquals","selected","updateListener","eventuallyUpdateResourceStates","_takeResourceStateSnapshot","$spliceResourceStates","$unregisterSourceControl","_sourceControls","_sourceControlsByExtension","_onDidChangeActiveProvider","_selectedSourceControlHandles","sourceControl","sourceControlHandle","getResourceGroup","groupHandle","getResourceState","onDidChangeActiveProvider","sourceControls","provideOriginalResource","$onInputBoxValueChange","$executeResourceCommand","cursorPosition","selectedSourceControlHandles","setSelectionState","ExtHostStatusBarEntry","alignment","Left","ID_GEN","_alignment","_priority","_text","_tooltip","_color","_timeoutHandle","$setEntry","hide","StatusBarMessage","statusBar","_messages","_item","createStatusBarEntry","MIN_VALUE","_update","ExtHostStatusBar","_statusMessage","timeoutOrThenable","setMessage","_onDidChangeStorage","onDidChangeStorage","shared","$getValue","$setValue","BaseExtHostTerminal","_queuedRequests","_idPromise","_idPromiseComplete","_queueApiRequest","ApiRequest","run","ExtHostTerminal","_onData","_pidPromise","_pidPromiseComplete","onDidWriteData","$registerOnDataListener","shellPath","shellArgs","waitOnExit","strictEnv","$createTerminal","_runQueuedRequests","dimensions","_cols","_rows","columns","addNewLine","$sendText","$hide","ExtHostTerminalRenderer","_terminal","_onInput","_onDidChangeMaximumDimensions","$createTerminalRenderer","$terminalRendererSetName","onDidAcceptInput","$terminalRendererRegisterOnInputListener","_dimensions","$terminalRendererSetDimensions","maximumDimensions","_maximumDimensions","onDidChangeMaximumDimensions","$terminalRendererWrite","_extHostConfiguration","_terminals","_terminalProcesses","_terminalRenderers","_getTerminalPromises","_onDidCloseTerminal","_onDidOpenTerminal","_onDidChangeActiveTerminal","_onDidChangeTerminalDimensions","activeTerminal","_activeTerminal","terminals","onDidOpenTerminal","onDidChangeActiveTerminal","onDidChangeTerminalDimensions","_setProcessId","terminalRenderer","_getTerminalById","_performTerminalIdAction","_getTerminalByIdEventually","_fireOnData","setDimensions","_getTerminalRendererById","_setMaximumDimensions","_fireOnInput","extHostTerminal","_getTerminalObjectById","_getTerminalObjectIndexById","shellLaunchConfigDto","activeWorkspaceRootUriComponents","platformKey","shellConfigValue","shellArgsConfigValue","activeWorkspaceRootUri","initialCwd","terminalEnvironment","homedir","envFromConfig","processes_1","package_1","terminalProcess_1","$sendProcessPid","$sendProcessTitle","$sendProcessData","exitCode","shutdown","getInitialCwd","$sendProcessInitialCwd","$sendProcessCwd","$sendProcessExit","retries","_createGetTerminalPromise","TaskDefinitionDTO","TaskPresentationOptionsDTO","ProcessExecutionOptionsDTO","ProcessExecutionDTO","is","ShellExecutionOptionsDTO","ShellExecutionDTO","CustomExecutionDTO","customExecution","TaskHandleDTO","TaskDTO","reevaluateOnRerun","tasks","converted","TaskFilterDTO","TaskExecutionImpl","_tasks","_task","terminateTask","TaskExecutionDTO","workspaceProvider","CustomExecutionData","terminalService","_onTaskExecutionComplete","onTaskExecutionComplete","_cancellationSource","extHostTerminalService_1","terminalId","startCallback","callbackTerminals","resolveTerminalRenderer","dimensionTimeout","waitForDimensionsTimeoutInMs","dimensionsRegistration","dimensionsPromise","newDimensions","rejected","workspaceService","extHostTerminalService","_onDidExecuteTask","_onDidTerminateTask","_onDidTaskProcessStarted","_onDidTaskProcessEnded","_workspaceProvider","_editorService","_handleCounter","_handlers","_taskExecutions","_providedCustomExecutions","_activeCustomExecutions","nextHandle","$registerTaskProvider","$unregisterTaskProvider","$registerTaskSystem","$fetchTasks","tTask","$executeTask","getTaskExecution","taskExecutions","$terminateTask","onDidStartTask","extensionCallback","taskExecutionComplete","customExecutionComplete","onDidEndTask","onDidStartTaskProcess","onDidEndTaskProcess","validTypes","taskIdPromises","fetchPromise","provideTasks","taskDTOs","taskDTO","$createTaskId","taskId","toResolve","variables","resolver","extHostDebugService_1","$customExecutionComplete","extHostDocumentsAndEditors","_onDidChangeTextEditorSelection","_onDidChangeTextEditorOptions","_onDidChangeTextEditorVisibleRanges","_onDidChangeTextEditorViewColumn","onDidChangeTextEditorSelection","onDidChangeTextEditorOptions","onDidChangeTextEditorVisibleRanges","onDidChangeTextEditorViewColumn","$tryShowTextDocument","getEditor","textEditor","_acceptOptions","_acceptSelections","_acceptVisibleRanges","_acceptViewColumn","$getDiffInformation","HandlePool","$registerUriHandler","$unregisterUriHandler","handleUri","ExtHostWebview","_onMessageEmitter","onDidReceiveMessage","assertNotDisposed","_html","$setHtml","onmessage","$setOptions","$postMessage","ExtHostWebviewPanel","viewType","editorOptions","webview","_onDisposeEmitter","_onDidChangeViewStateEmitter","onDidChangeViewState","_viewType","_webview","$disposeWebview","$setTitle","_iconPath","$setIconPath","_webviewPanels","_serializers","webviewHandlePool","showOptions","webviewShowOptions","newHandle","$createWebviewPanel","panel","serializer","$registerSerializer","$unregisterSerializer","getWebviewPanel","_setActive","_setVisible","_setViewColumn","webviewPanel","webviewHandle","revivedPanel","deserializeWebviewPanel","convertToLocationLinks","typeConvert","DocumentSymbolAdapter","provideDocumentSymbols","_asDocumentSymbolTree","infos","compareTo","parentStack","CodeLensAdapter","_heapService","provideCodeLenses","lenses","lens","resolveCodeLens","newLens","_badCmd","CodeInsetAdapter","provideCodeInsets","insets","inset","resolveCodeInset","newInset","DefinitionAdapter","provideDefinition","DeclarationAdapter","provideDeclaration","ImplementationAdapter","provideImplementation","TypeDefinitionAdapter","provideTypeDefinition","HoverAdapter","provideHover","DocumentHighlightAdapter","provideDocumentHighlights","ReferenceAdapter","provideReferences","CodeActionAdapter","_diagnostics","rangeOrSelection","selection_1","isISelection","allDiagnostics","getDiagnostics","intersection","_maxCodeActionsPerFile","codeActionContext","only","provideCodeActions","commandsOrActions","_isCommand","isPreferred","DocumentFormattingAdapter","provideDocumentFormattingEdits","RangeFormattingAdapter","provideDocumentRangeFormattingEdits","OnTypeFormattingAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","NavigateTypeAdapter","_symbolCache","_resultCache","symbols","provideWorkspaceSymbols","resolveWorkspaceSymbol","RenameAdapter","prepareRename","provideRenameEdits","_asMessage","rangeOrLocation","SuggestAdapter","resolveCompletionItem","provideCompletionItems","wordRangeBeforePos","_convertCompletionItem","_parentId","resolvedItem","newSuggestion","defaultRange","SignatureHelpAdapter","vscodeContext","reviveContext","provideSignatureHelp","activeSignatureHelp","revivedSignatureHelp","saved","LinkProviderAdapter","provideDocumentLinks","resolveDocumentLink","ColorProviderAdapter","provideDocumentColors","colors","provideColorPresentations","FoldingProviderAdapter","provideFoldingRanges","SelectionRangeAdapter","provideSelectionRanges","allProviderRanges","allResults","AdapterData","schemeTransformer","heapMonitor","_adapter","_schemeTransformer","_webviewProxy","_doTransformDocumentSelector","$serialized","_transformScheme","$unregister","_nextHandle","_addNewAdapter","_extLabel","$registerDocumentSymbolProvider","_transformDocumentSelector","_createDisposable","_withAdapter","eventHandle","onDidChangeCodeLenses","$registerCodeLensSupport","$emitCodeLensEvent","onDidChangeCodeInsets","$registerCodeInsetSupport","extHostWebview_1","enableScripts","$createWebviewCodeInset","enableCommandUris","$registerDefinitionSupport","$registerDeclarationSupport","$registerImplementationSupport","$registerTypeDefinitionSupport","$registerHoverProvider","$registerDocumentHighlightProvider","$registerReferenceSupport","$registerQuickFixSupport","providedCodeActionKinds","$registerDocumentFormattingSupport","$registerRangeFormattingSupport","triggerCharacters","$registerOnTypeFormattingSupport","$registerNavigateTypeSupport","releaseWorkspaceSymbols","$registerRenameSupport","supportsResolving","resolveRenameLocation","$registerSuggestSupport","releaseCompletionItems","metadataOrTriggerChars","retriggerCharacters","$registerSignatureHelpProvider","$registerDocumentLinkProvider","provideLinks","resolveLink","$registerDocumentColorProvider","provideColors","colorInfo","$registerFoldingRangeProvider","$registerSelectionRangeProvider","indentationRule","decreaseIndentPattern","_serializeRegExp","increaseIndentPattern","indentNextLinePattern","unIndentedLinePattern","onEnterRule","beforeText","afterText","oneLineAboveText","action","onEnterRules","_serializeOnEnterRule","wordPattern","serializedConfiguration","brackets","indentationRules","_serializeIndentationRule","_serializeOnEnterRules","__electricCharacterSupport","__characterPairSupport","$setLanguageConfiguration","_onDidChangeWindowState","onDidChangeWindowState","_state","InitialState","$getWindowVisibility","isFocused","$onDidChangeWindowFocus","focused","$openUri","RequestInitiator","ResponsiveState","RPCProtocol","_onDidChangeResponsiveState","onDidChangeResponsiveState","_protocol","_logger","_uriTransformer","_uriReplacer","createURIReplacer","_locals","_proxies","_lastMessageId","_cancelInvokedHandlers","_pendingRPCReplies","_responsiveState","_unacknowledgedCount","_unresponsiveTime","_asyncCheckUresponsive","_checkUnresponsive","_receiveOneMessage","msgId","resolveErr","UNRESPONSIVE_TIME","_setResponsiveState","newResponsiveState","responsiveState","uriIpc_1","rpcId","_createProxy","myArgs","_remoteCall","rawmsg","msgLength","MessageBuffer","messageType","readUInt32","method","MessageIO","deserializeRequestJSONArgs","_receiveRequest","deserializeRequestMixedArgs","logIncoming","_onDidReceiveAcknowledge","_receiveCancel","_receiveReply","deserializeReplyOKJSON","deserializeReplyOKBuffer","deserializeReplyErrError","_receiveReplyErr","usesCancellationToken","callId","_invokeHandler","serializeAcknowledged","logOutgoing","serializeReplyOK","serializeReplyErr","pendingReply","resolveOk","methodName","_doInvokeHandler","actor","lazyPromise_1","serializeCancel","_onWillSendRequest","serializeRequest","messageSize","writeUInt32","_buff","_offset","strByteLength","strLength","writeUInt32LE","readUInt32LE","buffByteLength","buffLength","arrLengths","elLength","sizeLongString","sizeBuffer","writeLongString","writeBuffer","arrLen","argType","readLongString","readBuffer","_arrayContainsBuffer","massagedArgs","argsLengths","_requestMixedArgs","_requestJSONArgs","methodByteLength","argsByteLength","sizeUInt8","sizeShortString","writeShortString","readShortString","sizeMixedArray","writeMixedArray","rawargs","readMixedArray","rawarg","_serializeReplyOKEmpty","_serializeReplyOKBuffer","_serializeReplyOKJSON","resByteLength","_serializeReplyErrEror","_serializeReplyErrEmpty","errByteLength","ArgType","OutputAppender","appender","AbstractExtHostOutputChannel","_onDidAppend","onDidAppend","$register","$update","till","columnOrPreserveFocus","$close","ExtHostPushOutputChannel","$append","ExtHostOutputChannelBackedByFile","outputDir","_namePool","_appender","outputAppender_1","ExtHostLogFileOutputChannel","logsLocation","_channels","_outputDir","date_1","channelId","_visibleChannelDisposable","_createOutputChannel","VIEWLET_ID","PANEL_ID","VIEW_ID","VIEW_CONTAINER","views_1","registerViewContainer","ISearchService","SearchProviderType","QueryType","resultIsMatch","FileMatch","TextSearchMatch","previewOptions","matchLines","leadingChars","charsPerLine","previewStart","previewText","endColInPreview","OneLineRange","firstMatchLine","SearchRange","getExcludes","includeSearchExcludes","fileExcludes","exclude","searchExcludes","allExcludes","pathIncludedInQuery","queryProps","excludePattern","glob","includePattern","usingSearchPaths","folderQueries","fq","searchPath","SearchErrorCode","SearchError","deserializeSearchError","errorMsg","details","serializeSearchError","searchError","isSerializedSearchComplete","isSerializedSearchSuccess","isSerializedFileMatch","SerializableFileMatch","numMatches","resolvePatternsForProvider","globalPattern","folderPattern","merged","QueryGlobTester","folderQuery","_excludeExpression","_parsedExcludeExpression","includeExpression","_parsedIncludeExpression","testPath","excluded","hasSiblingClauses","isFolderEqual","folderA","folderB","compareWorkspaceFolderByUri","compareWorkspaceFolderByUriAndNameAndIndex","oldFolders","newFolders","oldSortedFolders","newSortedFolders","ExtHostWorkspaceImpl","workspace_1","_workspaceFolders","_structure","previousConfirmedWorkspace","previousUnconfirmedWorkspace","newWorkspaceFolders","oldWorkspace","folderData","existingFolder","_findFolder","f1","f2","folderUriToFind","requestIdProvider","_onDidChangeWorkspace","onDidChangeWorkspace","_activeSearchCallbacks","_requestIdProvider","_messageService","_confirmedWorkspace","$acceptWorkspaceData","_actualWorkspace","_unconfirmedWorkspace","workspaceFoldersToAdd","validatedDistinctWorkspaceFoldersToAdd","folderToAdd","currentWorkspaceFolders","otherFolder","extName","$updateWorkspaceFolders","notification_1","trySetWorkspaceFolders","pathOrUri","includeWorkspace","toExtHostWorkspace","include","maxResults","includeFolder","excludePatternOrDisregardExcludes","$startFileSearch","requestId","getNext","globPatternToString","queryOptions","ignoreSymlinks","followSymlinks","disregardIgnoreFiles","useIgnoreFiles","disregardGlobalIgnoreFiles","useGlobalIgnoreFiles","disregardExcludeSettings","fileEncoding","afterContext","beforeContext","search_1","$startTextSearch","includeUntitled","$saveAll","$resolveProxy","FileSearchEngine","sessionToken","isLimitHit","resultCount","isCanceled","filePattern","activeCancellationTokens","globalExcludePattern","_onResult","onResult","limitHit","extraFileResources","extraFile","extraFileStr","matchFile","searchInFolder","stats","errorMessage_1","cancellation","getSearchOptionsForFolder","initDirectoryTree","queryTester","noSiblingsClauses","hasSiblingExcludeClauses","providerSW","_resolve","stopwatch_1","provideFileSearchResults","providerTime","elapsed","postProcessSW","addDirectoryEntries","matchDirectoryTree","postProcessTime","includes","excludes","rootEntries","pathToEntries","relativeFile","matchDirectory","includedInQuerySync","sub","FileSearchManager","sessions","onBatch","sessionTokenSource","getSessionTokenSource","cacheKey","engine","doSearch","BATCH_SIZE","rawMatchToSearchItem","fromCache","detailStats","batchSize","onResultBatch","rangeToSearchRange","searchRangeToRange","anchorGlob","createTextSearchResult","searchRange","internalResult","internalPreviewRange","_2","startLine","startCol","endCol","OutputChannel","extensionResultIsMatch","TextSearchManager","_extfs","onProgress","tokenSource","collector","TextSearchResultsCollector","folderIdx","resultSize","trimResultToSize","newResultSize","someFolderHitLImit","errMsg","rangesArr","matchesArr","testingPs","validateProviderResult","includedInQuery","searchOptions","provideTextSearchResults","patternInfo","isRegExp","isWordMatch","isMultiline","patternInfoToQuery","contentPattern","maxFileSize","usePCRE2","_currentFileMatch","_batchedCollector","BatchedCollector","sendItems","_currentFolderIdx","_currentUri","pushToCollector","extensionResultToFrontendResult","addItem","maxBatchSize","totalNumberCompleted","addItemToBatch","addItemsToBatch","onUpdate","START_BATCH_AFTER_COUNT","timeoutHandle","TIMEOUT","connectProxyResolver","extensionService","extHostLogService","mainThreadTelemetry","lookup","getExtensionPathIndex","extensionPaths","node_module","_load","tls","modules","proxySupport","configureModuleLoading","resolveProxy","proxySetting","certSetting","off","patches","createSecureContext","certs","_vscodeAdditionalCaCerts","cert","addCACert","patch","createPatchedModules","cacheProxy","maxCacheEntries","oldCache","cacheRolls","logEvent","$publicLog","duration","errorCount","cacheCount","cacheSize","envCount","settingsCount","localhostCount","envNoProxyCount","useSystemCertificates","_caCertificates","ders","store","winCA","der","derToPem","pem","readWindowsCaCertificates","util_1","promisify","execFile","readMacCaCertificates","certPath","linuxCaCertificatePaths","readLinuxCaCertificates","readCaCertificates","getCaCertificates","caCertificates","ca","useProxySettings","parsedUrl","nodeurl","hostname","envNoProxy","agent","defaultPort","settingsProxy","envProxy","pathname","getCacheKey","getCachedProxy","collectResult","proxyFromConfigURL","https_proxy","HTTPS_PROXY","http_proxy","HTTP_PROXY","envValue","filters","domain","filterPort","noProxyFromEnv","no_proxy","NO_PROXY","setupProxyResolution","statusCode","findOrCreateResult","configURL","originals","searchParams","socketPath","_vscodeProxySupport","_vscodeSystemProxy","vscode_proxy_agent_1","ProxyAgent","parsed","URL","urlOptions","username","auth","originalAgent","blob","spawnRipgrepCmd","rgArgs","foldersToIncludeGlobs","globArg","inclusion","ripgrepSearchUtils_1","rgGlobs","foldersToRgExcludeGlobs","globArgs","exclusion","siblingClauses","getRgArgs","rgDiskPath","globalExclude","excludesToSkip","absoluteGlobs","globExprsToRgGlobs","globalInclude","trimTrailingSlash","getAbsoluteGlob","fixDriveC","vscode_ripgrep_1","rgPath","rgErrorMsgForDisplay","firstLine","killCmds","FileWalker","walkedPaths","directoriesWalked","filesWalked","normalizedFilePatternLowercase","folderExcludePatterns","folderExcludeExpression","fqPath","rootFolderQuery","otherRootFolder","AbsoluteAndRelativeParsedExpression","extraFiles","fileWalkSW","extraFilePath","cmdSW","rootFolderDone","cmdTraversal","fun","isMac","killCmd","leftover","ripgrep","ripgrepFileSearch_1","rgCmd","cmdResultCount","collectStdout","relativeFiles","normalization","pathTerms","onData","gotData","forwardData","collectData","stderrText","decodeData","decoder","string_decoder_1","cmdTime","fileWalkTime","relativeParentPath","currentRelativePath","currentAbsolutePath","statLinkIfNeeded","realPathIfNeeded","doWalk","maxFilesize","isFilePatternMatch","Engine","walker","walk","getStats","init","absoluteGlobExpr","relativeGlobExpr","absoluteParsedExpr","relativeParsedExpr","_path","basenameTerms","regexParseError","unknownEncoding","globParseError","invalidLiteral","bytesOrTextToString","spreadGlobComponents","unicodeEscapesToPCRE2","reg","fixRegexEndingPattern","fixRegexNewline","fixRegexCRMatchingWhitespaceClass","fixRegexCRMatchingNonWordClass","fixNewline","RipgrepTextSearchEngine","outputChannel","appendLine","doubleStarIncludes","otherIncludes","collections_1","uniqueOthers","otherIncude","rgGlob","searchPatternAfterDoubleDashes","regexpStr","fixedRegexpQuery","escapedArgs","rgProc","rgProcessError","gotResult","ripgrepParser","RipgrepParser","isDone","events_1","EventEmitter","hitLimit","numResults","handleDecodedData","dataStr","decodedData","newlineIdx","prevIdx","handleLine","outputLine","parsedLine","matchPath","createTextSearchMatch","contextPath","createTextSearchContext","line_number","isBOMStripped","fullText","fullTextBytes","prevMatchEnd","prevMatchEndCol","prevMatchEndLine","submatches","matchText","inBetweenChars","numLines","lastNewlineIdx","lastLineLength","getNumLinesAndLastNewlineLength","RipgrepSearchProvider","inProgress","ripgrepTextSearchEngine_1","withToken","mergedTokenSource","fileMatchToSerialized","sum","TextSearchEngineAdapter","pretendOutputChannel","textSearchManager","textSearchManager_1","reviveQuery","rawQuery","reviveFolderQuery","rawFolderQuery","SearchService","caches","doFileSearchWithEngine","fileSearch_1","ripgrepTextSearch","progressCallback","files_1","textSearchAdapter_1","EngineClass","fileProgressCallback","sortByScore","sortedSearch","trySortedSearchFromCache","doSortedSearch","rawMatches","serializedMatches","rawMatch","sendProgress","complete","sortingTime","allResultsPromise","getOrCreateCache","cacheRow","resultsToSearchCache","preventCancellation","scorerCache","sortSW","sortResults","sortedResults","workspaceFolderCount","Cache","getResultsFromCache","cacheStats","quickOpenScorer_1","matchA","matchB","FileMatchItemAccessor","progressCb","searchValue","cacheLookupSW","hasPathSep","cachedRow","previousSearch","cacheLookupTime","cacheFilterSW","cachedEntries","normalizedSearchValueLowercase","cacheWasResolved","cacheFilterTime","cacheEntryCount","onFinally","_textSearchProvider","_textSearchUsedSchemes","_fileSearchProvider","_fileSearchUsedSchemes","_fileSearchManager","fileSearchManager_1","$registerTextSearchProvider","$registerFileSearchProvider","_internalFileSearchProvider","_internalFileSearchHandle","doInternalFileSearch","fileSearch","$handleFileMatch","doFileSearch","ev","clearCache","$handleTextMatch","registerEHSearchProviders","extHostSearch","registerTextSearchProvider","ripgrepSearchProvider_1","registerInternalFileSearchProvider","rawSearchService_1","proposedApiFunction","initializeExtensionApi","apiFactory","trie","extApiImpl","defaultApiImpl","apiImpl","extensions_2","extensionPathsPretty","defineAPI","createApiFactory","initData","rpcProtocol","extHostConfiguration","extHostStorage","extHostHeapService","extHostHeapService_1","extHostDecorations","extHostDecorations_1","extHostWebviews","extHostUrls","extHostUrls_1","extHostDocumentsAndEditors_1","extHostDocuments","extHostDocuments_1","extHostDocumentContentProviders","extHostDocumentContentProviders_1","extHostDocumentSaveParticipant","extHostDocumentSaveParticipant_1","extHostEditors","extHostTextEditors_1","extHostCommands","extHostCommands_1","extHostTreeViews","extHostTreeViews_1","extHostDiagnostics","extHostDiagnostics_1","extHostLanguageFeatures","extHostLanguageFeatures_1","extHostFileSystem","extHostFileSystem_1","extHostFileSystemEvent","extHostFileSystemEventService_1","extHostQuickOpen","extHostQuickOpen_1","extHostDebugService","extHostSCM","extHostSCM_1","extHostComment","extHostComments_1","extHostSearch_1","extHostTask","extHostTask_1","extHostWindow","extHostWindow_1","extHostProgress","extHostProgress_1","extHostOutputService","extHostOutputService_1","remoteAuthority","cliServer","extHostCLIServer_1","assertRegistered","extHostClipboard","extHostClipboard_1","extHostMessageService","extHostMessageService_1","extHostDialogs","extHostDialogs_1","extHostStatusBar","extHostStatusBar_1","extHostLanguages","extHostLanguages_1","createOutputChannelFromLogFile","extHostApiCommands_1","checkSelector","informOnce","isUnderDevelopment","perform","registerTextEditorCommand","activeTextEditor","getActiveTextEditor","registerDiffInformationCommand","getDiffInformation","getCommands","filterInternal","machineId","telemetryInfo","appName","product_1","appRoot","clipboard","openExternal","openUri","Extension","createDiagnosticCollection","getLanguages","setTextDocumentLanguage","changeLanguage","registerCodeActionsProvider","registerCodeActionProvider","registerCodeLensProvider","registerCodeInsetProvider","registerDefinitionProvider","registerDeclarationProvider","registerImplementationProvider","registerTypeDefinitionProvider","registerHoverProvider","registerDocumentHighlightProvider","registerReferenceProvider","registerRenameProvider","registerDocumentSymbolProvider","registerWorkspaceSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","firstTriggerCharacter","moreTriggerCharacters","registerSignatureHelpProvider","firstItem","registerCompletionItemProvider","registerColorProvider","registerFoldingRangeProvider","registerSelectionRangeProvider","setLanguageConfiguration","visibleTextEditors","getVisibleTextEditors","documentOrUri","documentPromise","openTextDocument","showTextDocument","createTextEditorDecorationType","showInformationMessage","showWarningMessage","showErrorMessage","showQuickPick","showWorkspaceFolderPick","showInputBox","showInput","showOpenDialog","showSaveDialog","createStatusBarItem","setStatusBarMessage","withScmProgress","withProgress","createOutputChannel","createWebviewPanel","nameOrOptions","createTerminalFromOptions","createTerminalRenderer","registerTreeDataProvider","registerWebviewPanelSerializer","registerDecorationProvider","registerUriHandler","createQuickPick","createInputBox","getPath","getWorkspaceFolders","updateWorkspaceFolders","onDidChangeWorkspaceFolders","asRelativePath","getRelativePath","findFiles","findTextInFiles","optionsOrCallback","callbackOrToken","saveAll","applyWorkspaceEdit","createFileSystemWatcher","ignoreCreate","ignoreChange","ignoreDelete","textDocuments","getAllDocumentData","uriOrFileNameOrOptions","uriPromise","createDocumentData","ensureDocumentData","onDidOpenTextDocument","onDidCloseTextDocument","onDidChangeTextDocument","onDidSaveTextDocument","onWillSaveTextDocument","getOnWillSaveTextDocumentEvent","registerTextDocumentContentProvider","registerTaskProvider","registerFileSystemProvider","registerFileSearchProvider","registerSearchProvider","registerDocumentCommentProvider","registerWorkspaceCommentProvider","registerRemoteAuthorityResolver","authorityPrefix","registerResourceLabelFormatter","onWillRenameFile","getOnWillRenameFileEvent","scm","getLastInputBox","createSourceControl","createCommentController","registerDebugConfigurationProvider","registerDebugAdapterDescriptorFactory","registerDebugAdapterTrackerFactory","startDebugging","addBreakpoints","removeBreakpoints","fetchTasks","executeTask","languageConfiguration","model_1","Task2","editorOptions_1","TreeItem2","Uri","_identifier","extensionPath","packageJSON","isActive","isActivated","api","getExtensionExports","activateByIdWithErrors","extHostExtensionActivator_1","getTelemetryActivationEvent","reasonStr","extensionVersion","ExtensionMemento","storage","_shared","_storage","_init","_storageListener","whenReady","ExtensionStoragePath","_environment","_ready","_getOrCreateWorkspaceStoragePath","globalStorageHome","appSettingsHome","storageName","storagePath","nativeExit","extHostContext","_nativeExit","_initData","_extHostContext","_extHostLogService","_mainThreadWorkspaceProxy","_mainThreadTelemetryProxy","_mainThreadExtensionsProxy","_almostReadyToRunExtensions","_readyToRunExtensions","extensionDescriptionRegistry_1","extHostStorage_1","_storagePath","_activator","$localShowMessage","$activateExtension","_extensionPathIndex","_extensionApiFactory","extHost_api_impl_1","_resolvers","_started","autoStart","_startExtensionHost","proxyResolver_1","waitForInitializeCall","allPromises","_deactivate","activateByEvent","activateById","_activateById","getActivatedExtension","main","$addMessage","$onWillActivateExtension","_doActivateExtension","$onDidActivateExtension","_logExtensionActivationTimes","$onExtensionActivationFailed","outcome","activationTimesBuilder","modulePath","codeLoadingStart","codeLoadingStop","loadCommonJSModule","_loadExtensionContext","_callActivate","globalState","workspaceState","globalStoragePath","asAbsolutePath","logPath","getLogDirectory","extensionModule","_callActivateOptional","extensionExports","build","activateCallStart","activateResult","activateCallStop","activateResolveStart","activateResolveStop","_activateByEvent","_handleWorkspaceContainsEagerExtensions","_handleWorkspaceContainsEagerExtension","fileNames","globPatterns","fileNameOrGlob","fileNamePromise","_activateIfFileName","globPatternPromise","_activateIfGlobPatterns","searchP","$checkExists","WORKSPACE_CONTAINS_TIMEOUT","_doHandleExtensionTests","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","testRunner","requireError","failures","_gracefulExit","_handleEagerExtensions","_handleExtensionTests","authorityPlusIndex","debugListenPort","debugConnectPort","enabledExtensionIds","keepOnly","deltaExtensions","exit","ExtensionHostMain","_isTerminating","rpcProtocol_1","transform","allowExit","crash","patchProcess","_patchPatchedConsole","extHostLogService_1","_searchRequestIdProvider","numbers_1","extHostWorkspace_1","extHostConfiguraiton","extHostConfiguration_1","extHostExtensionService_1","stackTraceLimit","extensionErrors","prepareStackTrace","stackTrace","stackTraceMessage","getFileName","mainThreadExtensions","mainThreadErrors","$onExtensionRuntimeError","$onUnexpectedError","mainThreadConsole","nativeProcessSend","$logExtensionHostMessage","extensionsDeactivated","deactivateAll","originalLoad","onTerminate","extensionHostMain_1","patchExecArgv","pipeName","VSCODE_IPC_HOOK_EXTHOST","_terminating","extensionHostProtocol_1","createExtHostProtocol","rendererCommit","commit","myCommit","unhandledPromises","parentPid","watchdog","connectToRenderer","extensionHostMain","terminate"],"mappings":"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A,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA;AACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,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Y,aACZC,MAAO,IAERmB;AACCrB,UAAW,4BACXC,WAAY,SACZC,MAAO,IAERoB,aACCtB,UAAW,0BACXC,WAAY,eACZC,MAAO,IAERqB,OACCvB,UAAW,oBACXC,WAAY,SACZC,MAAO,IAERsB,UACCxB,UAAW,wBACXC,WAAY,aACZC,MAAO,IAERuB,OACCzB,UAAW,oBACXC,WAAY,SACZC,MAAO,IAERwB,OACC1B,UAAW,oBACXC,WAAY,SACZC,MAAO,IAERyB,WACC3B,UAAW,yBACXC,WAAY,cACZC,MAAO,IAER0B,aACC5B,UAAW,uBACXC,WAAY,eACZC,MAAO,IAER2B,UACC7B,UAAW,qBACXC,WAAY,aACZC,MAAO,IAER4B,aACC9B,UAAW,wBACXC,WAAY,eACZC,MAAO,IAER6B,UACC/B,UAAW,sBACXC,WAAY,aACZC,MAAO,IAER8B,WACChC,UAAW,uBACXC,WAAY,cACZC,MAAO,IAER+B,WACCjC,UAAW,yBACXC,WAAY,cACZC,MAAO,IAERgC;AACClC,UAAW,yBACXC,WAAY,eACZC,MAAO,IAERiC,UACCnC,UAAW,uBACXC,WAAY,aACZC,MAAO,IAERkC,aACCpC,UAAW,4BACXC,WAAY,eACZC,MAAO,IAERmC,KACCrC,UAAW,2BACXC,WAAY,MACZC,MAAO,IAERoC,SACCtC,UAAW,+BACXC,WAAY,UACZC,MAAO,IAERqC,OACCvC,UAAW,6BACXC,WAAY,OACZC,MAAO,IAERsC,WACCxC,UAAW,mCACXC,WAAY,aACZC,MAAO,IAERuC,UACCzC,UAAW,uBACXC,WAAY,YACZC,MAAO,IAERwC,OACC1C,UAAW,oBACXC,WAAY,SACZC,MAAO,IAERyC,OACC3C,UAAW,kBACXC,WAAY,SACZC,MAAO,IAER0C,YACC5C,UAAW,qBACXC,WAAY,cACZC,MAAO,IAER2C,WACC7C,UAAW,2BACXC,WAAY,cACZC,MAAO,IAER4C,QACC9C,UAAW,qBACXC,WAAY,UACZC,MAAO,IAER6C,OACC/C,UAAW;AACXC,WAAY,SACZC,MAAO,IAER8C,QACChD,UAAW,+BACXC,WAAY,UACZC,MAAO,IAER+C,OACCj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","file":"extensionHostProcess.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport interface IStringDictionary<V> {\n\t[name: string]: V;\n}\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport interface INumberDictionary<V> {\n\t[idx: number]: V;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn from[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebouceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebouceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: Array<T | undefined | null>): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tif (!array) {\n\t\treturn;\n\t}\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: ReadonlyArray<T> | undefined | null): obj is Array<T> {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null = null): T | null {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { UriComponents } from 'vs/base/common/uri';\n\nexport interface IMarkdownString {\n\tvalue: string;\n\tisTrusted?: boolean;\n\turis?: { [href: string]: UriComponents };\n}\n\nexport class MarkdownString implements IMarkdownString {\n\n\tvalue: string;\n\tisTrusted?: boolean;\n\n\tconstructor(value: string = '') {\n\t\tthis.value = value;\n\t}\n\n\tappendText(value: string): MarkdownString {\n\t\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\t\tthis.value += value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis.value += value;\n\t\treturn this;\n\t}\n\n\tappendCodeblock(langId: string, code: string): MarkdownString {\n\t\tthis.value += '\\n```';\n\t\tthis.value += langId;\n\t\tthis.value += '\\n';\n\t\tthis.value += code;\n\t\tthis.value += '\\n```\\n';\n\t\treturn this;\n\t}\n}\n\nexport function isEmptyMarkdownString(oneOrMany: IMarkdownString | IMarkdownString[] | null | undefined): boolean {\n\tif (isMarkdownString(oneOrMany)) {\n\t\treturn !oneOrMany.value;\n\t} else if (Array.isArray(oneOrMany)) {\n\t\treturn oneOrMany.every(isEmptyMarkdownString);\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function isMarkdownString(thing: any): thing is IMarkdownString {\n\tif (thing instanceof MarkdownString) {\n\t\treturn true;\n\t} else if (thing && typeof thing === 'object') {\n\t\treturn typeof (<IMarkdownString>thing).value === 'string'\n\t\t\t&& (typeof (<IMarkdownString>thing).isTrusted === 'boolean' || (<IMarkdownString>thing).isTrusted === undefined);\n\t}\n\treturn false;\n}\n\nexport function markedStringsEquals(a: IMarkdownString | IMarkdownString[], b: IMarkdownString | IMarkdownString[]): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else if (Array.isArray(a) && Array.isArray(b)) {\n\t\treturn equals(a, b, markdownStringEqual);\n\t} else if (isMarkdownString(a) && isMarkdownString(b)) {\n\t\treturn markdownStringEqual(a, b);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction markdownStringEqual(a: IMarkdownString, b: IMarkdownString): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else {\n\t\treturn a.value === b.value && a.isTrusted === b.isTrusted;\n\t}\n}\n\nexport function removeMarkdownEscapes(text: string): string {\n\tif (!text) {\n\t\treturn text;\n\t}\n\treturn text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class IdGenerator {\n\n\tprivate _prefix: string;\n\tprivate _lastId: number;\n\n\tconstructor(prefix: string) {\n\t\tthis._prefix = prefix;\n\t\tthis._lastId = 0;\n\t}\n\n\tpublic nextId(): string {\n\t\treturn this._prefix + (++this._lastId);\n\t}\n}\n\nexport const defaultGenerator = new IdGenerator('id#');","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function fromArray<T>(array: T[], index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>): T[] {\n\t\tconst result: T[] = [];\n\t\tforEach(iterator, value => result.push(value));\n\t\treturn result;\n\t}\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: Iterator<T> | T[]): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate items: T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet value = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\tvalue = -1;\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tch = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch = scanHexDigits(4);\n\t\t\t\t\t\tif (ch >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhiteSpace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhiteSpace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhiteSpace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhiteSpace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getLiteralNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getLiteralNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\treturn true;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nfunction getLiteralNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tdefault: return 'null';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, SyntaxKind, ScanError } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nfunction getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParseError, Node, JSONPath, Segment, parseTree, findNodeAtLocation } from './json';\nimport { Edit, format, isEOL, FormattingOptions } from './jsonFormatter';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tconst insertIndex = lastSegment;\n\t\tif (insertIndex === -1) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tconst previous = parent.children[parent.children.length - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\tif (value === undefined && parent.children.length >= 0) {\n\t\t\t\t//Removal\n\t\t\t\tconst removalIndex = lastSegment;\n\t\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\t\tlet edit: Edit;\n\t\t\t\tif (parent.children.length === 1) {\n\t\t\t\t\t// only item\n\t\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t\t// last item\n\t\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t\t} else {\n\t\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Array modification not supported yet');\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nfunction withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst edit = edits[i];\n\t\tnewText = applyEdit(newText, edit);\n\t\tbegin = Math.min(begin, edit.offset);\n\t\tend = Math.max(end, edit.offset + edit.length);\n\t\tend += edit.content.length - edit.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function isWS(text: string, offset: number) {\n\treturn '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(...disposables: Array<T | undefined>): T[];\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(first: T | T[], ...rest: T[]): T | T[] | undefined {\n\tif (Array.isArray(first)) {\n\t\tfirst.forEach(d => d && d.dispose());\n\t\treturn [];\n\t} else if (rest.length === 0) {\n\t\tif (first) {\n\t\t\tfirst.dispose();\n\t\t\treturn first;\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tdispose(first);\n\t\tdispose(rest);\n\t\treturn [];\n\t}\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\treturn { dispose() { fn(); } };\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected _toDispose: IDisposable[] = [];\n\tprotected get toDispose(): IDisposable[] { return this._toDispose; }\n\n\tprivate _lifecycle_disposable_isDisposed = false;\n\n\tpublic dispose(): void {\n\t\tthis._lifecycle_disposable_isDisposed = true;\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif (this._lifecycle_disposable_isDisposed) {\n\t\t\tconsole.warn('Registering disposable on object that has already been disposed.');\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.push(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate references: { [key: string]: { readonly object: T; counter: number; } } = Object.create(null);\n\n\tconstructor() { }\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references[key];\n\n\t\tif (!reference) {\n\t\t\treference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference.object);\n\t\t\t\tdelete this.references[key];\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\telement: E;\n\tnext: Node<E> | undefined;\n\tprev: Node<E> | undefined;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> | undefined;\n\tprivate _last: Node<E> | undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._first;\n\t}\n\n\tclear(): void {\n\t\tthis._first = undefined;\n\t\tthis._last = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (!this._first) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\t\treturn this._remove.bind(this, newNode);\n\t}\n\n\n\tshift(): E | undefined {\n\t\tif (!this._first) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (!this._last) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tlet candidate: Node<E> | undefined = this._first;\n\t\twhile (candidate instanceof Node) {\n\t\t\tif (candidate !== node) {\n\t\t\t\tcandidate = candidate.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (candidate.prev && candidate.next) {\n\t\t\t\t// middle\n\t\t\t\tconst anchor = candidate.prev;\n\t\t\t\tanchor.next = candidate.next;\n\t\t\t\tcandidate.next.prev = anchor;\n\n\t\t\t} else if (!candidate.prev && !candidate.next) {\n\t\t\t\t// only node\n\t\t\t\tthis._first = undefined;\n\t\t\t\tthis._last = undefined;\n\n\t\t\t} else if (!candidate.next) {\n\t\t\t\t// last\n\t\t\t\tthis._last = this._last!.prev!;\n\t\t\t\tthis._last.next = undefined;\n\n\t\t\t} else if (!candidate.prev) {\n\t\t\t\t// first\n\t\t\t\tthis._first = this._first!.next!;\n\t\t\t\tthis._first.prev = undefined;\n\t\t\t}\n\n\t\t\t// done\n\t\t\tthis._size -= 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node instanceof Node; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nexport namespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function () { return _disposable; };\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * throught the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Similar to `buffer` but it buffers indefinitely and repeats\n\t * the buffered events to every new listener.\n\t */\n\texport function echo<T>(event: Event<T>, nextTick = false, buffer: T[] = []): Event<T> {\n\t\tbuffer = buffer.slice();\n\n\t\tevent(e => {\n\t\t\tbuffer.push(e);\n\t\t\temitter.fire(e);\n\t\t});\n\n\t\tconst flush = (listener: (e: T) => any, thisArgs?: any) => buffer.forEach(e => listener.call(thisArgs, e));\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonListenerDidAdd(emitter: Emitter<T>, listener: (e: T) => any, thisArgs?: any) {\n\t\t\t\tif (nextTick) {\n\t\t\t\t\tsetTimeout(() => flush(listener, thisArgs));\n\t\t\t\t} else {\n\t\t\t\t\tflush(listener, thisArgs);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue: [Listener<T>, T][];\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = [];\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.length > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners = undefined;\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.length = 0;\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue: [Listener<T>, T, Promise<any>[]][];\n\n\tasync fireAsync(eventFn: (thenables: Promise<any>[], listener: Function) => T): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\t// put all [listener,event]-pairs into delivery queue\n\t\t// then emit all event. an inner/nested event might be\n\t\t// the driver of this\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = [];\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tconst thenables: Promise<void>[] = [];\n\t\t\tthis._asyncDeliveryQueue.push([e.value, eventFn(thenables, typeof e.value === 'function' ? e.value : e.value[0]), thenables]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.length > 0) {\n\t\t\tconst [listener, event, thenables] = this._asyncDeliveryQueue.shift()!;\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables);\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn new class implements CancelablePromise<T> {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: (err: any) => void;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tconst task = this.task!;\n\t\t\t\tthis.task = null;\n\n\t\t\t\treturn task();\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tthis.doResolve!(null);\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject(errors.canceled());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tpublic get onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue {\n\tprivate queues: { [path: string]: Queue<void> };\n\n\tconstructor() {\n\t\tthis.queues = Object.create(null);\n\t}\n\n\tpublic queueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues[key]) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tdelete this.queues[key];\n\t\t\t});\n\n\t\t\tthis.queues[key] = queue;\n\t\t}\n\n\t\treturn this.queues[key];\n\t}\n}\n\nexport class TimeoutTimer extends Disposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tsuper();\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer extends Disposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport function nfcall(fn: Function, ...args: any[]): Promise<any>;\nexport function nfcall<T>(fn: Function, ...args: any[]): Promise<T>;\nexport function nfcall(fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn(...args, (err: any, result: any) => err ? e(err) : c(result)));\n}\n\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): Promise<any>;\nexport function ninvoke<T>(thisArg: any, fn: Function, ...args: any[]): Promise<T>;\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): any {\n\treturn new Promise((resolve, reject) => fn.call(thisArg, ...args, (err: any, result: any) => err ? reject(err) : resolve(result)));\n}\n\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): DOMHighResTimeStamp;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean;\n\tprivate _value: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value;\n\t}\n}\n\n//#endregion\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n// BEGIN MONACOCHANGE\nvar __marked_exports;\n// END MONACOCHANGE\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      do {\n        prevCapZero = cap[0];\n        cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      } while (prevCapZero !== cap[0]);\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\n// BEGIN MONACOCHANGE\n// if (typeof module !== 'undefined' && typeof exports === 'object') {\n//   module.exports = marked;\n// } else if (typeof define === 'function' && define.amd) {\n//   define(function() { return marked; });\n// } else {\n//   root.marked = marked;\n// }\n// })(this || (typeof window !== 'undefined' ? window : global));\n__marked_exports = marked;\n}).call(this);\n\n// ESM-comment-begin\ndefine(\"vs/base/common/marked/marked\", function() { return __marked_exports; });\n// ESM-comment-end\n \n// ESM-uncomment-begin\n// export var marked = __marked_exports;\n// export var Parser = __marked_exports.Parser;\n// export var parser = __marked_exports.parser;\n// export var Renderer = __marked_exports.Renderer;\n// export var TextRenderer = __marked_exports.TextRenderer;\n// export var Lexer = __marked_exports.Lexer;\n// export var lexer = __marked_exports.lexer;\n// export var InlineLexer = __marked_exports.InlineLexer;\n// export var inlineLexer = __marked_exports.inlineLexer;\n// export var parse = __marked_exports.parse;\n// ESM-uncomment-end\n// END MONACOCHANGE\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory: string = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode: string = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal: string = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough: string = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet: string = 'walkThroughSnippet';\n\n\texport const http: string = 'http';\n\n\texport const https: string = 'https';\n\n\texport const file: string = 'file';\n\n\texport const mailto: string = 'mailto';\n\n\texport const untitled: string = 'untitled';\n\n\texport const data: string = 'data';\n\n\texport const command: string = 'command';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.min(Math.max(value, min), max);\n}\n\nexport function rot(index: number, modulo: number): number {\n\treturn (modulo + (index % modulo)) % modulo;\n}\n\nexport class Counter {\n\tprivate _next = 0;\n\n\tgetNext(): number {\n\t\treturn this._next++;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\n// let _isLinux = false;\nlet _isNative = false;\n// let _isWeb = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\tconst userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t// _isLinux = userAgent.indexOf('Linux') >= 0;\n\t// _isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t// _isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\n// let _platform: Platform = Platform.Web;\n// if (_isNative) {\n// \tif (_isMacintosh) {\n// \t\t_platform = Platform.Mac;\n// \t} else if (_isWindows) {\n// \t\t_platform = Platform.Windows;\n// \t} else if (_isLinux) {\n// \t\t_platform = Platform.Linux;\n// \t}\n// }\n\nexport const isRealWindows = _isWindows;\nexport const isWindows = false; // _isWindows;\nexport const isMacintosh = true; // _isMacintosh;\nexport const isLinux = false; // _isLinux;\nexport const isNative = false; // _isNative;\nexport const isWeb = false; // _isWeb;\nexport const platform = 1; // _platform;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\nlet _setImmediate: ((callback: (...args: any[]) => void) => number) | null = null;\nexport function setImmediate(callback: (...args: any[]) => void): number {\n\tif (_setImmediate === null) {\n\t\tif (globals.setImmediate) {\n\t\t\t_setImmediate = globals.setImmediate.bind(globals);\n\t\t} else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\t\t_setImmediate = process.nextTick.bind(process);\n\t\t} else {\n\t\t\t_setImmediate = globals.setTimeout.bind(globals);\n\t\t}\n\t}\n\treturn _setImmediate!(callback);\n}\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: object;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): number;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): number { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: string) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tlet msg;\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tmsg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\t}\n}\n\nfunction validateString(value: string, name) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep, pathObject) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\ninterface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\ninterface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^GOOGLE_API_KEY$/,\n\t\t/^VSCODE_.+$/,\n\t\t/^SNAP(|_.*)$/\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : new Date().getTime();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && <any>regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\tconst len1 = a ? a.length : 0;\n\tconst len2 = b ? b.length : 0;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tif (typeof a !== 'string' || typeof b !== 'string') {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, empty);\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { sep } from 'vs/base/common/path';\nimport { IdleValue } from 'vs/base/common/async';\n\nlet intlFileNameCollator: IdleValue<{ collator: Intl.Collator, collatorIsNumeric: boolean }>;\n\nexport function setFileNameComparer(collator: IdleValue<{ collator: Intl.Collator, collatorIsNumeric: boolean }>): void {\n\tintlFileNameCollator = collator;\n}\n\nexport function compareFileNames(one: string | null, other: string | null, caseSensitive = false): number {\n\tif (intlFileNameCollator) {\n\t\tconst a = one || '';\n\t\tconst b = other || '';\n\t\tconst result = intlFileNameCollator.getValue().collator.compare(a, b);\n\n\t\t// Using the numeric option in the collator will\n\t\t// make compare(`foo1`, `foo01`) === 0. We must disambiguate.\n\t\tif (intlFileNameCollator.getValue().collatorIsNumeric && result === 0 && a !== b) {\n\t\t\treturn a < b ? -1 : 1;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\treturn noIntlCompareFileNames(one, other, caseSensitive);\n}\n\nconst FileNameMatch = /^(.*?)(\\.([^.]*))?$/;\n\nexport function noIntlCompareFileNames(one: string | null, other: string | null, caseSensitive = false): number {\n\tif (!caseSensitive) {\n\t\tone = one && one.toLowerCase();\n\t\tother = other && other.toLowerCase();\n\t}\n\n\tconst [oneName, oneExtension] = extractNameAndExtension(one);\n\tconst [otherName, otherExtension] = extractNameAndExtension(other);\n\n\tif (oneName !== otherName) {\n\t\treturn oneName < otherName ? -1 : 1;\n\t}\n\n\tif (oneExtension === otherExtension) {\n\t\treturn 0;\n\t}\n\n\treturn oneExtension < otherExtension ? -1 : 1;\n}\n\nexport function compareFileExtensions(one: string | null, other: string | null): number {\n\tif (intlFileNameCollator) {\n\t\tconst [oneName, oneExtension] = extractNameAndExtension(one);\n\t\tconst [otherName, otherExtension] = extractNameAndExtension(other);\n\n\t\tlet result = intlFileNameCollator.getValue().collator.compare(oneExtension, otherExtension);\n\n\t\tif (result === 0) {\n\t\t\t// Using the numeric option in the collator will\n\t\t\t// make compare(`foo1`, `foo01`) === 0. We must disambiguate.\n\t\t\tif (intlFileNameCollator.getValue().collatorIsNumeric && oneExtension !== otherExtension) {\n\t\t\t\treturn oneExtension < otherExtension ? -1 : 1;\n\t\t\t}\n\n\t\t\t// Extensions are equal, compare filenames\n\t\t\tresult = intlFileNameCollator.getValue().collator.compare(oneName, otherName);\n\n\t\t\tif (intlFileNameCollator.getValue().collatorIsNumeric && result === 0 && oneName !== otherName) {\n\t\t\t\treturn oneName < otherName ? -1 : 1;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\treturn noIntlCompareFileExtensions(one, other);\n}\n\nfunction noIntlCompareFileExtensions(one: string | null, other: string | null): number {\n\tconst [oneName, oneExtension] = extractNameAndExtension(one && one.toLowerCase());\n\tconst [otherName, otherExtension] = extractNameAndExtension(other && other.toLowerCase());\n\n\tif (oneExtension !== otherExtension) {\n\t\treturn oneExtension < otherExtension ? -1 : 1;\n\t}\n\n\tif (oneName === otherName) {\n\t\treturn 0;\n\t}\n\n\treturn oneName < otherName ? -1 : 1;\n}\n\nfunction extractNameAndExtension(str?: string | null): [string, string] {\n\tconst match = str ? FileNameMatch.exec(str) as Array<string> : ([] as Array<string>);\n\n\treturn [(match && match[1]) || '', (match && match[3]) || ''];\n}\n\nfunction comparePathComponents(one: string, other: string, caseSensitive = false): number {\n\tif (!caseSensitive) {\n\t\tone = one && one.toLowerCase();\n\t\tother = other && other.toLowerCase();\n\t}\n\n\tif (one === other) {\n\t\treturn 0;\n\t}\n\n\treturn one < other ? -1 : 1;\n}\n\nexport function comparePaths(one: string, other: string, caseSensitive = false): number {\n\tconst oneParts = one.split(sep);\n\tconst otherParts = other.split(sep);\n\n\tconst lastOne = oneParts.length - 1;\n\tconst lastOther = otherParts.length - 1;\n\tlet endOne: boolean, endOther: boolean;\n\n\tfor (let i = 0; ; i++) {\n\t\tendOne = lastOne === i;\n\t\tendOther = lastOther === i;\n\n\t\tif (endOne && endOther) {\n\t\t\treturn compareFileNames(oneParts[i], otherParts[i], caseSensitive);\n\t\t} else if (endOne) {\n\t\t\treturn -1;\n\t\t} else if (endOther) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst result = comparePathComponents(oneParts[i], otherParts[i], caseSensitive);\n\n\t\tif (result !== 0) {\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport function compareAnything(one: string, other: string, lookFor: string): number {\n\tconst elementAName = one.toLowerCase();\n\tconst elementBName = other.toLowerCase();\n\n\t// Sort prefix matches over non prefix matches\n\tconst prefixCompare = compareByPrefix(one, other, lookFor);\n\tif (prefixCompare) {\n\t\treturn prefixCompare;\n\t}\n\n\t// Sort suffix matches over non suffix matches\n\tconst elementASuffixMatch = strings.endsWith(elementAName, lookFor);\n\tconst elementBSuffixMatch = strings.endsWith(elementBName, lookFor);\n\tif (elementASuffixMatch !== elementBSuffixMatch) {\n\t\treturn elementASuffixMatch ? -1 : 1;\n\t}\n\n\t// Understand file names\n\tconst r = compareFileNames(elementAName, elementBName);\n\tif (r !== 0) {\n\t\treturn r;\n\t}\n\n\t// Compare by name\n\treturn elementAName.localeCompare(elementBName);\n}\n\nexport function compareByPrefix(one: string, other: string, lookFor: string): number {\n\tconst elementAName = one.toLowerCase();\n\tconst elementBName = other.toLowerCase();\n\n\t// Sort prefix matches over non prefix matches\n\tconst elementAPrefixMatch = strings.startsWith(elementAName, lookFor);\n\tconst elementBPrefixMatch = strings.startsWith(elementBName, lookFor);\n\tif (elementAPrefixMatch !== elementBPrefixMatch) {\n\t\treturn elementAPrefixMatch ? -1 : 1;\n\t}\n\n\t// Same prefix: Sort shorter matches to the top to have those on top that match more precisely\n\telse if (elementAPrefixMatch && elementBPrefixMatch) {\n\t\tif (elementAName.length < elementBName.length) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (elementAName.length > elementBName.length) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\treturn 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix } from 'vs/base/common/path';\n\nfunction isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst INVALID_FILE_CHARS = isWindows ? /[\\\\/:\\*\\?\"<>\\|]/g : /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined): boolean {\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tINVALID_FILE_CHARS.lastIndex = 0; // the holy grail of software development\n\tif (INVALID_FILE_CHARS.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindows && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindows && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindows && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 lenth\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor: Function, ...args: any[]): any {\n\tif (isNativeClass(ctor)) {\n\t\treturn new (ctor as any)(...args);\n\t} else {\n\t\tconst obj = Object.create(ctor.prototype);\n\t\tctor.apply(obj, args);\n\t\treturn obj;\n\t}\n}\n\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing): boolean {\n\treturn typeof thing === 'function'\n\t\t&& thing.hasOwnProperty('prototype')\n\t\t&& !thing.hasOwnProperty('arguments');\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(obj).forEach((key: string) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = deepClone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction arrayToHash(array: string[]): { [name: string]: true } {\n\tconst result: any = {};\n\tfor (const e of array) {\n\t\tresult[e] = true;\n\t}\n\treturn result;\n}\n\n/**\n * Given an array of strings, returns a function which, given a string\n * returns true or false whether the string is in that array.\n */\nexport function createKeywordMatcher(arr: string[], caseInsensitive: boolean = false): (str: string) => boolean {\n\tif (caseInsensitive) {\n\t\tarr = arr.map(function (x) { return x.toLowerCase(); });\n\t}\n\tconst hash = arrayToHash(arr);\n\tif (caseInsensitive) {\n\t\treturn function (word) {\n\t\t\treturn hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n\t\t};\n\t} else {\n\t\treturn function (word) {\n\t\t\treturn hash[word] !== undefined && hash.hasOwnProperty(word);\n\t\t};\n\t}\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\n/**\n * @internal\n */\nexport function setUriThrowOnMissingScheme(value: boolean): boolean {\n\tconst old = _throwOnMissingSchema;\n\t_throwOnMissingSchema = value;\n\treturn old;\n}\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\t// console.error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t} else {\n\t\t\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (_strict || _throwOnMissingSchema) {\n\t\treturn scheme || _empty;\n\t}\n\tif (!scheme) {\n\t\tconsole.trace('BAD uri lacks scheme, falling back to file-scheme.');\n\t\tscheme = 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tpublic static parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tpublic static file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tpublic static from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | any): URI {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._fsPath = (<UriState>data).fsPath;\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): object {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn URI.parse(requirefn.toUrl(relativePath)).fsPath;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value: string;\n\tprivate _from: number;\n\tprivate _to: number;\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment: string;\n\tvalue: E | undefined;\n\tkey: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T) => void): void {\n\t\tthis.map.forEach(clb);\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\n// We should fold BoundedMap and LinkedMap. See https://github.com/Microsoft/vscode/issues/28496\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { LRUCache } from 'vs/base/common/map';\nimport * as strings from 'vs/base/common/strings';\n\nexport interface IFilter {\n\t// Returns null if word doesn't match.\n\t(word: string, wordToMatchAgainst: string): IMatch[] | null;\n}\n\nexport interface IMatch {\n\tstart: number;\n\tend: number;\n}\n\n// Combined filters\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] | null {\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tconst match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n\n// Prefix\n\nexport const matchesStrictPrefix: IFilter = _matchesPrefix.bind(undefined, false);\nexport const matchesPrefix: IFilter = _matchesPrefix.bind(undefined, true);\n\nfunction _matchesPrefix(ignoreCase: boolean, word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tif (!wordToMatchAgainst || wordToMatchAgainst.length < word.length) {\n\t\treturn null;\n\t}\n\n\tlet matches: boolean;\n\tif (ignoreCase) {\n\t\tmatches = strings.startsWithIgnoreCase(wordToMatchAgainst, word);\n\t} else {\n\t\tmatches = wordToMatchAgainst.indexOf(word) === 0;\n\t}\n\n\tif (!matches) {\n\t\treturn null;\n\t}\n\n\treturn word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n\n// Contiguous Substring\n\nexport function matchesContiguousSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tconst index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\tif (index === -1) {\n\t\treturn null;\n\t}\n\n\treturn [{ start: index, end: index + word.length }];\n}\n\n// Substring\n\nexport function matchesSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\treturn _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\n\nfunction _matchesSubString(word: string, wordToMatchAgainst: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === wordToMatchAgainst.length) {\n\t\treturn null;\n\t} else {\n\t\tif (word[i] === wordToMatchAgainst[j]) {\n\t\t\tlet result: IMatch[] | null = null;\n\t\t\tif (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n\t\t\t\treturn join({ start: j, end: j + 1 }, result);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\treturn _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n\t}\n}\n\n// CamelCase\n\nfunction isLower(code: number): boolean {\n\treturn CharCode.a <= code && code <= CharCode.z;\n}\n\nexport function isUpper(code: number): boolean {\n\treturn CharCode.A <= code && code <= CharCode.Z;\n}\n\nfunction isNumber(code: number): boolean {\n\treturn CharCode.Digit0 <= code && code <= CharCode.Digit9;\n}\n\nfunction isWhitespace(code: number): boolean {\n\treturn (\n\t\tcode === CharCode.Space\n\t\t|| code === CharCode.Tab\n\t\t|| code === CharCode.LineFeed\n\t\t|| code === CharCode.CarriageReturn\n\t);\n}\n\nfunction isAlphanumeric(code: number): boolean {\n\treturn isLower(code) || isUpper(code) || isNumber(code);\n}\n\nfunction join(head: IMatch, tail: IMatch[]): IMatch[] {\n\tif (tail.length === 0) {\n\t\ttail = [head];\n\t} else if (head.end === tail[0].start) {\n\t\ttail[0].start = head.start;\n\t} else {\n\t\ttail.unshift(head);\n\t}\n\treturn tail;\n}\n\nfunction nextAnchor(camelCaseWord: string, start: number): number {\n\tfor (let i = start; i < camelCaseWord.length; i++) {\n\t\tconst c = camelCaseWord.charCodeAt(i);\n\t\tif (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn camelCaseWord.length;\n}\n\nfunction _matchesCamelCase(word: string, camelCaseWord: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === camelCaseWord.length) {\n\t\treturn null;\n\t} else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextUpperIndex = j + 1;\n\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n\t\twhile (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n\t\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n\t\t\tnextUpperIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\ninterface ICamelCaseAnalysis {\n\tupperPercent: number;\n\tlowerPercent: number;\n\talphaPercent: number;\n\tnumericPercent: number;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction analyzeCamelCaseWord(word: string): ICamelCaseAnalysis {\n\tlet upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isAlphanumeric(code)) { alpha++; }\n\t\tif (isNumber(code)) { numeric++; }\n\t}\n\n\tconst upperPercent = upper / word.length;\n\tconst lowerPercent = lower / word.length;\n\tconst alphaPercent = alpha / word.length;\n\tconst numericPercent = numeric / word.length;\n\n\treturn { upperPercent, lowerPercent, alphaPercent, numericPercent };\n}\n\nfunction isUpperCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent } = analysis;\n\treturn lowerPercent === 0 && upperPercent > 0.6;\n}\n\nfunction isCamelCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent, alphaPercent, numericPercent } = analysis;\n\treturn lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word: string): boolean {\n\tlet upper = 0, lower = 0, code = 0, whitespace = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isWhitespace(code)) { whitespace++; }\n\t}\n\n\tif ((upper === 0 || lower === 0) && whitespace === 0) {\n\t\treturn word.length <= 30;\n\t} else {\n\t\treturn upper <= 5;\n\t}\n}\n\nexport function matchesCamelCase(word: string, camelCaseWord: string): IMatch[] | null {\n\tif (!camelCaseWord) {\n\t\treturn null;\n\t}\n\n\tcamelCaseWord = camelCaseWord.trim();\n\n\tif (camelCaseWord.length === 0) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCasePattern(word)) {\n\t\treturn null;\n\t}\n\n\tif (camelCaseWord.length > 60) {\n\t\treturn null;\n\t}\n\n\tconst analysis = analyzeCamelCaseWord(camelCaseWord);\n\n\tif (!isCamelCaseWord(analysis)) {\n\t\tif (!isUpperCaseWord(analysis)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcamelCaseWord = camelCaseWord.toLowerCase();\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\twhile (i < camelCaseWord.length && (result = _matchesCamelCase(word, camelCaseWord, 0, i)) === null) {\n\t\ti = nextAnchor(camelCaseWord, i + 1);\n\t}\n\n\treturn result;\n}\n\n// Matches beginning of words supporting non-ASCII languages\n// If `contiguous` is true then matches word with beginnings of the words in the target. E.g. \"pul\" will match \"Git: Pull\"\n// Otherwise also matches sub string of the word with beginnings of the words in the target. E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\n\nexport function matchesWords(word: string, target: string, contiguous: boolean = false): IMatch[] | null {\n\tif (!target || target.length === 0) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\ttarget = target.toLowerCase();\n\twhile (i < target.length && (result = _matchesWords(word, target, 0, i, contiguous)) === null) {\n\t\ti = nextWord(target, i + 1);\n\t}\n\n\treturn result;\n}\n\nfunction _matchesWords(word: string, target: string, i: number, j: number, contiguous: boolean): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === target.length) {\n\t\treturn null;\n\t} else if (word[i] !== target[j]) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextWordIndex = j + 1;\n\t\tresult = _matchesWords(word, target, i + 1, j + 1, contiguous);\n\t\tif (!contiguous) {\n\t\t\twhile (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n\t\t\t\tresult = _matchesWords(word, target, i + 1, nextWordIndex, contiguous);\n\t\t\t\tnextWordIndex++;\n\t\t\t}\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\nfunction nextWord(word: string, start: number): number {\n\tfor (let i = start; i < word.length; i++) {\n\t\tconst c = word.charCodeAt(i);\n\t\tif (isWhitespace(c) || (i > 0 && isWhitespace(word.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn word.length;\n}\n\n// Fuzzy\n\nconst fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new LRUCache<string, RegExp>(10000); // bounded to 10000 elements\n\nexport function matchesFuzzy(word: string, wordToMatchAgainst: string, enableSeparateSubstringMatching = false): IMatch[] | null {\n\tif (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n\t\treturn null; // return early for invalid input\n\t}\n\n\t// Form RegExp for wildcard matches\n\tlet regexp = fuzzyRegExpCache.get(word);\n\tif (!regexp) {\n\t\tregexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n\t\tfuzzyRegExpCache.set(word, regexp);\n\t}\n\n\t// RegExp Filter\n\tconst match = regexp.exec(wordToMatchAgainst);\n\tif (match) {\n\t\treturn [{ start: match.index, end: match.index + match[0].length }];\n\t}\n\n\t// Default Filter\n\treturn enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n\n/**\n * Match pattern againt word in a fuzzy way. As in IntelliSense and faster and more\n * powerfull than `matchesFuzzy`\n */\nexport function matchesFuzzy2(pattern: string, word: string): IMatch[] | null {\n\tconst score = fuzzyScore(pattern, pattern.toLowerCase(), 0, word, word.toLowerCase(), 0, true);\n\treturn score ? createMatches(score) : null;\n}\n\nexport function anyScore(pattern: string, lowPattern: string, _patternPos: number, word: string, lowWord: string, _wordPos: number): FuzzyScore {\n\tconst result = fuzzyScore(pattern, lowPattern, 0, word, lowWord, 0, true);\n\tif (result) {\n\t\treturn result;\n\t}\n\tlet matches = 0;\n\tlet score = 0;\n\tlet idx = _wordPos;\n\tfor (let patternPos = 0; patternPos < lowPattern.length && patternPos < _maxLen; ++patternPos) {\n\t\tconst wordPos = lowWord.indexOf(lowPattern.charAt(patternPos), idx);\n\t\tif (wordPos >= 0) {\n\t\t\tscore += 1;\n\t\t\tmatches += 2 ** wordPos;\n\t\t\tidx = wordPos + 1;\n\t\t}\n\t}\n\treturn [score, matches, _wordPos];\n}\n\n//#region --- fuzzyScore ---\n\nexport function createMatches(score: undefined | FuzzyScore): IMatch[] {\n\tif (typeof score === 'undefined') {\n\t\treturn [];\n\t}\n\n\tconst matches = score[1].toString(2);\n\tconst wordStart = score[2];\n\tconst res: IMatch[] = [];\n\n\tfor (let pos = wordStart; pos < _maxLen; pos++) {\n\t\tif (matches[matches.length - (pos + 1)] === '1') {\n\t\t\tconst last = res[res.length - 1];\n\t\t\tif (last && last.end === pos) {\n\t\t\t\tlast.end = pos + 1;\n\t\t\t} else {\n\t\t\t\tres.push({ start: pos, end: pos + 1 });\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nconst _maxLen = 53;\n\nfunction initTable() {\n\tconst table: number[][] = [];\n\tconst row: number[] = [0];\n\tfor (let i = 1; i <= _maxLen; i++) {\n\t\trow.push(-i);\n\t}\n\tfor (let i = 0; i <= _maxLen; i++) {\n\t\tconst thisRow = row.slice(0);\n\t\tthisRow[0] = -i;\n\t\ttable.push(thisRow);\n\t}\n\treturn table;\n}\n\nconst _table = initTable();\nconst _scores = initTable();\nconst _arrows = <Arrow[][]>initTable();\nconst _debug = false;\n\nfunction printTable(table: number[][], pattern: string, patternLen: number, word: string, wordLen: number): string {\n\tfunction pad(s: string, n: number, pad = ' ') {\n\t\twhile (s.length < n) {\n\t\t\ts = pad + s;\n\t\t}\n\t\treturn s;\n\t}\n\tlet ret = ` |   |${word.split('').map(c => pad(c, 3)).join('|')}\\n`;\n\n\tfor (let i = 0; i <= patternLen; i++) {\n\t\tif (i === 0) {\n\t\t\tret += ' |';\n\t\t} else {\n\t\t\tret += `${pattern[i - 1]}|`;\n\t\t}\n\t\tret += table[i].slice(0, wordLen + 1).map(n => pad(n.toString(), 3)).join('|') + '\\n';\n\t}\n\treturn ret;\n}\n\nfunction isSeparatorAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.charCodeAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Underline:\n\t\tcase CharCode.Dash:\n\t\tcase CharCode.Period:\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Slash:\n\t\tcase CharCode.Backslash:\n\t\tcase CharCode.SingleQuote:\n\t\tcase CharCode.DoubleQuote:\n\t\tcase CharCode.Colon:\n\t\tcase CharCode.DollarSign:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isWhitespaceAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.charCodeAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Tab:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isUpperCaseAtPos(pos: number, word: string, wordLow: string): boolean {\n\treturn word[pos] !== wordLow[pos];\n}\n\nfunction isPatternInWord(patternLow: string, patternPos: number, patternLen: number, wordLow: string, wordPos: number, wordLen: number): boolean {\n\twhile (patternPos < patternLen && wordPos < wordLen) {\n\t\tif (patternLow[patternPos] === wordLow[wordPos]) {\n\t\t\tpatternPos += 1;\n\t\t}\n\t\twordPos += 1;\n\t}\n\treturn patternPos === patternLen; // pattern must be exhausted\n}\n\nconst enum Arrow { Top = 0b1, Diag = 0b10, Left = 0b100 }\n\n/**\n * A tuple of three values.\n * 0. the score\n * 1. the matches encoded as bitmask (2^53)\n * 2. the offset at which matching started\n */\nexport type FuzzyScore = [number, number, number];\n\nexport namespace FuzzyScore {\n\t/**\n\t * No matches and value `-100`\n\t */\n\texport const Default: [-100, 0, 0] = [-100, 0, 0];\n\n\texport function isDefault(score?: FuzzyScore): score is [-100, 0, 0] {\n\t\treturn !score || (score[0] === -100 && score[1] === 0 && score[2] === 0);\n\t}\n}\n\nexport interface FuzzyScorer {\n\t(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined;\n}\n\nexport function fuzzyScore(pattern: string, patternLow: string, patternPos: number, word: string, wordLow: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\n\tconst patternLen = pattern.length > _maxLen ? _maxLen : pattern.length;\n\tconst wordLen = word.length > _maxLen ? _maxLen : word.length;\n\n\tif (patternPos >= patternLen || wordPos >= wordLen || patternLen > wordLen) {\n\t\treturn undefined;\n\t}\n\n\t// Run a simple check if the characters of pattern occur\n\t// (in order) at all in word. If that isn't the case we\n\t// stop because no match will be possible\n\tif (!isPatternInWord(patternLow, patternPos, patternLen, wordLow, wordPos, wordLen)) {\n\t\treturn undefined;\n\t}\n\n\tconst patternStartPos = patternPos;\n\tconst wordStartPos = wordPos;\n\n\t// There will be a mach, fill in tables\n\tfor (patternPos = patternStartPos + 1; patternPos <= patternLen; patternPos++) {\n\n\t\tfor (wordPos = 1; wordPos <= wordLen; wordPos++) {\n\n\t\t\tlet score = -1;\n\t\t\tif (patternLow[patternPos - 1] === wordLow[wordPos - 1]) {\n\n\t\t\t\tif (wordPos === (patternPos - patternStartPos)) {\n\t\t\t\t\t// common prefix: `foobar <-> foobaz`\n\t\t\t\t\t//                            ^^^^^\n\t\t\t\t\tif (pattern[patternPos - 1] === word[wordPos - 1]) {\n\t\t\t\t\t\tscore = 7;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscore = 5;\n\t\t\t\t\t}\n\t\t\t\t} else if (isUpperCaseAtPos(wordPos - 1, word, wordLow) && (wordPos === 1 || !isUpperCaseAtPos(wordPos - 2, word, wordLow))) {\n\t\t\t\t\t// hitting upper-case: `foo <-> forOthers`\n\t\t\t\t\t//                              ^^ ^\n\t\t\t\t\tif (pattern[patternPos - 1] === word[wordPos - 1]) {\n\t\t\t\t\t\tscore = 7;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscore = 5;\n\t\t\t\t\t}\n\t\t\t\t} else if (isSeparatorAtPos(wordLow, wordPos - 2) || isWhitespaceAtPos(wordLow, wordPos - 2)) {\n\t\t\t\t\t// post separator: `foo <-> bar_foo`\n\t\t\t\t\t//                              ^^^\n\t\t\t\t\tscore = 5;\n\n\t\t\t\t} else {\n\t\t\t\t\tscore = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_scores[patternPos][wordPos] = score;\n\n\t\t\tconst diag = _table[patternPos - 1][wordPos - 1] + (score > 1 ? 1 : score);\n\t\t\tconst top = _table[patternPos - 1][wordPos] + -1;\n\t\t\tconst left = _table[patternPos][wordPos - 1] + -1;\n\n\t\t\tif (left >= top) {\n\t\t\t\t// left or diag\n\t\t\t\tif (left > diag) {\n\t\t\t\t\t_table[patternPos][wordPos] = left;\n\t\t\t\t\t_arrows[patternPos][wordPos] = Arrow.Left;\n\t\t\t\t} else if (left === diag) {\n\t\t\t\t\t_table[patternPos][wordPos] = left;\n\t\t\t\t\t_arrows[patternPos][wordPos] = Arrow.Left | Arrow.Diag;\n\t\t\t\t} else {\n\t\t\t\t\t_table[patternPos][wordPos] = diag;\n\t\t\t\t\t_arrows[patternPos][wordPos] = Arrow.Diag;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// top or diag\n\t\t\t\tif (top > diag) {\n\t\t\t\t\t_table[patternPos][wordPos] = top;\n\t\t\t\t\t_arrows[patternPos][wordPos] = Arrow.Top;\n\t\t\t\t} else if (top === diag) {\n\t\t\t\t\t_table[patternPos][wordPos] = top;\n\t\t\t\t\t_arrows[patternPos][wordPos] = Arrow.Top | Arrow.Diag;\n\t\t\t\t} else {\n\t\t\t\t\t_table[patternPos][wordPos] = diag;\n\t\t\t\t\t_arrows[patternPos][wordPos] = Arrow.Diag;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (_debug) {\n\t\tconsole.log(printTable(_table, pattern, patternLen, word, wordLen));\n\t\tconsole.log(printTable(_arrows, pattern, patternLen, word, wordLen));\n\t\tconsole.log(printTable(_scores, pattern, patternLen, word, wordLen));\n\t}\n\n\t_matchesCount = 0;\n\t_topScore = -100;\n\t_patternStartPos = patternStartPos;\n\t_firstMatchCanBeWeak = firstMatchCanBeWeak;\n\t_findAllMatches2(patternLen, wordLen, patternLen === wordLen ? 1 : 0, 0, false);\n\tif (_matchesCount === 0) {\n\t\treturn undefined;\n\t}\n\n\treturn [_topScore, _topMatch2, wordStartPos];\n}\n\n\nlet _matchesCount: number = 0;\nlet _topMatch2: number = 0;\nlet _topScore: number = 0;\nlet _patternStartPos: number = 0;\nlet _firstMatchCanBeWeak: boolean = false;\n\nfunction _findAllMatches2(patternPos: number, wordPos: number, total: number, matches: number, lastMatched: boolean): void {\n\n\tif (_matchesCount >= 10 || total < -25) {\n\t\t// stop when having already 10 results, or\n\t\t// when a potential alignment as already 5 gaps\n\t\treturn;\n\t}\n\n\tlet simpleMatchCount = 0;\n\n\twhile (patternPos > _patternStartPos && wordPos > 0) {\n\n\t\tconst score = _scores[patternPos][wordPos];\n\t\tconst arrow = _arrows[patternPos][wordPos];\n\n\t\tif (arrow === Arrow.Left) {\n\t\t\t// left -> no match, skip a word character\n\t\t\twordPos -= 1;\n\t\t\tif (lastMatched) {\n\t\t\t\ttotal -= 5; // new gap penalty\n\t\t\t} else if (matches !== 0) {\n\t\t\t\ttotal -= 1; // gap penalty after first match\n\t\t\t}\n\t\t\tlastMatched = false;\n\t\t\tsimpleMatchCount = 0;\n\n\t\t} else if (arrow & Arrow.Diag) {\n\n\t\t\tif (arrow & Arrow.Left) {\n\t\t\t\t// left\n\t\t\t\t_findAllMatches2(\n\t\t\t\t\tpatternPos,\n\t\t\t\t\twordPos - 1,\n\t\t\t\t\tmatches !== 0 ? total - 1 : total, // gap penalty after first match\n\t\t\t\t\tmatches,\n\t\t\t\t\tlastMatched\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// diag\n\t\t\ttotal += score;\n\t\t\tpatternPos -= 1;\n\t\t\twordPos -= 1;\n\t\t\tlastMatched = true;\n\n\t\t\t// match -> set a 1 at the word pos\n\t\t\tmatches += 2 ** wordPos;\n\n\t\t\t// count simple matches and boost a row of\n\t\t\t// simple matches when they yield in a\n\t\t\t// strong match.\n\t\t\tif (score === 1) {\n\t\t\t\tsimpleMatchCount += 1;\n\n\t\t\t\tif (patternPos === _patternStartPos && !_firstMatchCanBeWeak) {\n\t\t\t\t\t// when the first match is a weak\n\t\t\t\t\t// match we discard it\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// boost\n\t\t\t\ttotal += 1 + (simpleMatchCount * (score - 1));\n\t\t\t\tsimpleMatchCount = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\ttotal -= wordPos >= 3 ? 9 : wordPos * 3; // late start penalty\n\n\t// dynamically keep track of the current top score\n\t// and insert the current best score at head, the rest at tail\n\t_matchesCount += 1;\n\tif (total > _topScore) {\n\t\t_topScore = total;\n\t\t_topMatch2 = matches;\n\t}\n}\n\n//#endregion\n\n\n//#region --- graceful ---\n\nexport function fuzzyScoreGracefulAggressive(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, true, firstMatchCanBeWeak);\n}\n\nexport function fuzzyScoreGraceful(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, false, firstMatchCanBeWeak);\n}\n\nfunction fuzzyScoreWithPermutations(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, aggressive: boolean, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\tlet top = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);\n\n\tif (top && !aggressive) {\n\t\t// when using the original pattern yield a result we`\n\t\t// return it unless we are aggressive and try to find\n\t\t// a better alignment, e.g. `cno` -> `^co^ns^ole` or `^c^o^nsole`.\n\t\treturn top;\n\t}\n\n\tif (pattern.length >= 3) {\n\t\t// When the pattern is long enough then try a few (max 7)\n\t\t// permutations of the pattern to find a better match. The\n\t\t// permutations only swap neighbouring characters, e.g\n\t\t// `cnoso` becomes `conso`, `cnsoo`, `cnoos`.\n\t\tconst tries = Math.min(7, pattern.length - 1);\n\t\tfor (let movingPatternPos = patternPos + 1; movingPatternPos < tries; movingPatternPos++) {\n\t\t\tconst newPattern = nextTypoPermutation(pattern, movingPatternPos);\n\t\t\tif (newPattern) {\n\t\t\t\tconst candidate = fuzzyScore(newPattern, newPattern.toLowerCase(), patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);\n\t\t\t\tif (candidate) {\n\t\t\t\t\tcandidate[0] -= 3; // permutation penalty\n\t\t\t\t\tif (!top || candidate[0] > top[0]) {\n\t\t\t\t\t\ttop = candidate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn top;\n}\n\nfunction nextTypoPermutation(pattern: string, patternPos: number): string | undefined {\n\n\tif (patternPos + 1 >= pattern.length) {\n\t\treturn undefined;\n\t}\n\n\tconst swap1 = pattern[patternPos];\n\tconst swap2 = pattern[patternPos + 1];\n\n\tif (swap1 === swap2) {\n\t\treturn undefined;\n\t}\n\n\treturn pattern.slice(0, patternPos)\n\t\t+ swap2\n\t\t+ swap1\n\t\t+ pattern.slice(patternPos + 2);\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause | any;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && strings.endsWith(path, base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string, basename: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): any {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): any {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1 as string | IRelativePattern, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern = function (path: string, basename: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\t(<ParsedStringPattern><any>resultPattern).allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\t(<ParsedStringPattern><any>resultPattern).allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: any): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\n/**\n * Same as `parse`, but the ParsedExpression is guaranteed to return a Promise\n */\nexport function parseToAsync(expression: IExpression, options?: IGlobOptions): ParsedExpression {\n\tconst parsedExpression = parse(expression, options);\n\treturn (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> => {\n\t\tconst result = parsedExpression(path, basename, hasSibling);\n\t\treturn isThenable(result) ? result : Promise.resolve(result);\n\t};\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: any, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename: string, name: string, hasSibling: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { regExpFlags } from 'vs/base/common/strings';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data, 0);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\nexport function revive(obj: any, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return URI.revive(obj);\n\t\t\tcase 2: return new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof ((<any>'').normalize) === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function getComparisonKey(resource: URI): string {\n\treturn hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase);\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, ignoreCase, '/');\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests wheter the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\nexport function isEqual(first: URI | undefined, second: URI | undefined, ignoreCase = hasToIgnoreCase(first)): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tif (resource.scheme === Schemas.file) {\n\t\treturn URI.file(paths.dirname(originalFSPath(resource)));\n\t}\n\tlet dirname = paths.posix.dirname(resource.path);\n\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns the fsPath of an URI where the drive letter is not normalized.\n * See #56403.\n */\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === paths.sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash; // ignore the slash at offset 0\n\t}\n}\n\n\n/**\n * Removes a trailing path seperator, if theres one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI): URI {\n\tif (hasTrailingPathSeparator(resource)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(from.path, to.path);\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\treturn paths.posix.relative(from.path || '/', to.path || '/');\n}\n\n/**\n * Resolves a absolute or relative path against a base URI.\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tlet resolvedPath: string;\n\tif (base.scheme === Schemas.file) {\n\t\tresolvedPath = URI.file(paths.resolve(originalFSPath(base), path)).path;\n\t} else {\n\t\tresolvedPath = paths.posix.resolve(base.path, path);\n\t}\n\treturn base.with({\n\t\tpath: resolvedPath\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { sep, posix, normalize } from 'vs/base/common/path';\nimport { endsWith, ltrim, startsWithIgnoreCase, rtrim, startsWith } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename } from 'vs/base/common/resources';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: string;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\t// TODO: isidor use resources.relative\n\t\t\t\tpathLabel = normalize(ltrim(resource.path.substr(baseResource.uri.path.length), posix.sep)!);\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = (baseResource && baseResource.name) ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider) {\n\t\tres = tildify(res, userHomeProvider.userHome);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? startsWith(path, normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[]): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${sep}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(sep) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(sep) + sep.length);\n\t\t\tpath = path.substr(path.indexOf(sep) + sep.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(sep);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(sep);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(sep) > -1) ? sep + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = endsWith(paths[otherPathIndex], subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (endsWith(segments[0], ':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + sep + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + sep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + sep + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string): string {\n\tif (isMacintosh) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tfor (let i = fullPath.length - 1; i >= 1; i--) {\n\t\tconst code = fullPath.charCodeAt(i);\n\t\tif (code === CharCode.Slash || code === CharCode.Backslash) {\n\t\t\treturn { parentPath: fullPath.substr(0, i), name: fullPath.substr(i + 1) };\n\t\t}\n\t}\n\treturn { parentPath: '', name: fullPath };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex(): string;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value: string) {\n\t\t// empty\n\t}\n\n\tpublic asHex(): string {\n\t\treturn this._value;\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static readonly _chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static readonly _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array: string[]): string {\n\t\treturn array[Math.floor(array.length * Math.random())];\n\t}\n\n\tprivate static _randomHex(): string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\nexport function v4(): UUID {\n\treturn new V4UUID();\n}\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value: string): UUID {\n\tif (!isUUID(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid(): string {\n\treturn v4().asHex();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.NodeStringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\tpublic write(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tpublic end(): string | null {\n\t\treturn this.remaining;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\n\n/**\n * Executes the given function (fn) over the given array of items (list) in parallel and returns the resulting errors and results as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function.\n */\nexport function parallel<T, E>(list: T[], fn: (item: T, callback: (err: Error | null, result: E | null) => void) => void, callback: (err: Array<Error | null> | null, result: E[]) => void): void {\n\tconst results = new Array(list.length);\n\tconst errors = new Array<Error | null>(list.length);\n\tlet didErrorOccur = false;\n\tlet doneCount = 0;\n\n\tif (list.length === 0) {\n\t\treturn callback(null, []);\n\t}\n\n\tlist.forEach((item, index) => {\n\t\tfn(item, (error, result) => {\n\t\t\tif (error) {\n\t\t\t\tdidErrorOccur = true;\n\t\t\t\tresults[index] = null;\n\t\t\t\terrors[index] = error;\n\t\t\t} else {\n\t\t\t\tresults[index] = result;\n\t\t\t\terrors[index] = null;\n\t\t\t}\n\n\t\t\tif (++doneCount === list.length) {\n\t\t\t\treturn callback(didErrorOccur ? errors : null, results);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Executes the given function (fn) over the given array of items (param) in sequential order and returns the first occurred error or the result as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function. The first param can\n * either be a function that returns an array of results to loop in async fashion or be an array of items already.\n */\nexport function loop<T, E>(param: (callback: (error: Error, result: T[]) => void) => void, fn: (item: T, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void;\nexport function loop<T, E>(param: T[], fn: (item: T, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void;\nexport function loop<E>(param: any, fn: (item: any, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void {\n\n\t// Assert\n\tassert.ok(param, 'Missing first parameter');\n\tassert.ok(typeof (fn) === 'function', 'Second parameter must be a function that is called for each element');\n\tassert.ok(typeof (callback) === 'function', 'Third parameter must be a function that is called on error and success');\n\n\t// Param is function, execute to retrieve array\n\tif (typeof (param) === 'function') {\n\t\ttry {\n\t\t\tparam((error: Error, result: E[]) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t} else {\n\t\t\t\t\tloop(result, fn, callback);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tcallback(error, null);\n\t\t}\n\t}\n\n\t// Expect the param to be an array and loop over it\n\telse {\n\t\tconst results: E[] = [];\n\n\t\tconst looper: (i: number) => void = function (i: number): void {\n\n\t\t\t// Still work to do\n\t\t\tif (i < param.length) {\n\n\t\t\t\t// Execute function on array element\n\t\t\t\ttry {\n\t\t\t\t\tfn(param[i], (error: any, result: E) => {\n\n\t\t\t\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\t\t\t\tif (error === true || error === false) {\n\t\t\t\t\t\t\tresult = error;\n\t\t\t\t\t\t\terror = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Quit looping on error\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise push result on stack and continue looping\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (result) { //Could be that provided function is not returning a result\n\t\t\t\t\t\t\t\tresults.push(result);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\t\t\tlooper(i + 1);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i, param.length);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Done looping, pass back results too callback function\n\t\t\telse {\n\t\t\t\tcallback(null, results);\n\t\t\t}\n\t\t};\n\n\t\t// Start looping with first element in array\n\t\tlooper(0);\n\t}\n}\n\nfunction Sequence(sequences: { (...param: any[]): void; }[]): void {\n\n\t// Assert\n\tassert.ok(sequences.length > 1, 'Need at least one error handler and one function to process sequence');\n\tsequences.forEach((sequence) => {\n\t\tassert.ok(typeof (sequence) === 'function');\n\t});\n\n\t// Execute in Loop\n\tconst errorHandler = sequences.splice(0, 1)[0]; //Remove error handler\n\tlet sequenceResult: any = null;\n\n\tloop(sequences, (sequence, clb) => {\n\t\tconst sequenceFunction = function (error: any, result: any): void {\n\n\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\tif (error === true || error === false) {\n\t\t\t\tresult = error;\n\t\t\t\terror = null;\n\t\t\t}\n\n\t\t\t// Handle Error and Result\n\t\t\tif (error) {\n\t\t\t\tclb(error, null);\n\t\t\t} else {\n\t\t\t\tsequenceResult = result; //Remember result of sequence\n\t\t\t\tclb(null, null); //Don't pass on result to Looper as we are not aggregating it\n\t\t\t}\n\t\t};\n\n\t\t// We call the sequence function setting \"this\" to be the callback we define here\n\t\t// and we pass in the \"sequenceResult\" as first argument. Doing all this avoids having\n\t\t// to pass in a callback to the sequence because the callback is already \"this\".\n\t\ttry {\n\t\t\tsequence.call(sequenceFunction, sequenceResult);\n\t\t} catch (error) {\n\t\t\tclb(error, null);\n\t\t}\n\t}, (error, result) => {\n\t\tif (error) {\n\t\t\terrorHandler(error);\n\t\t}\n\t});\n}\n\n/**\n * Takes a variable list of functions to execute in sequence. The first function must be the error handler and the\n * following functions can do arbitrary work. \"this\" must be used as callback value for async functions to continue\n * through the sequence:\n * \tsequence(\n * \t\tfunction errorHandler(error) {\n * \t\t\tclb(error, null);\n * \t\t},\n *\n * \t\tfunction doSomethingAsync() {\n * \t\t\tfs.doAsync(path, this);\n * \t\t},\n *\n * \t\tfunction done(result) {\n * \t\t\tclb(null, result);\n * \t\t}\n * \t);\n */\nexport function sequence(errorHandler: (error: Error) => void, ...sequences: Function[]): void;\nexport function sequence(sequences: Function[]): void;\nexport function sequence(sequences: any): void {\n\tSequence((Array.isArray(sequences)) ? sequences : Array.prototype.slice.call(arguments));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\n\nexport interface ReadResult {\n\tbuffer: Buffer | null;\n\tbytesRead: number;\n}\n\n/**\n * Reads totalBytes from the provided file.\n */\nexport function readExactlyByFile(file: string, totalBytes: number): Promise<ReadResult> {\n\treturn new Promise<ReadResult>((resolve, reject) => {\n\t\tfs.open(file, 'r', null, (err, fd) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tfunction end(err: Error | null, resultBuffer: Buffer | null, bytesRead: number): void {\n\t\t\t\tfs.close(fd, closeError => {\n\t\t\t\t\tif (closeError) {\n\t\t\t\t\t\treturn reject(closeError);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err && (<any>err).code === 'EISDIR') {\n\t\t\t\t\t\treturn reject(err); // we want to bubble this error up (file is actually a folder)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ buffer: resultBuffer, bytesRead });\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst buffer = Buffer.allocUnsafe(totalBytes);\n\t\t\tlet offset = 0;\n\n\t\t\tfunction readChunk(): void {\n\t\t\t\tfs.read(fd, buffer, offset, totalBytes - offset, null, (err, bytesRead) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn end(err, null, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bytesRead === 0) {\n\t\t\t\t\t\treturn end(null, buffer, offset);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += bytesRead;\n\n\t\t\t\t\tif (offset === totalBytes) {\n\t\t\t\t\t\treturn end(null, buffer, offset);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn readChunk();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treadChunk();\n\t\t});\n\t});\n}\n\n/**\n * Reads a file until a matching string is found.\n *\n * @param file The file to read.\n * @param matchingString The string to search for.\n * @param chunkBytes The number of bytes to read each iteration.\n * @param maximumBytesToRead The maximum number of bytes to read before giving up.\n * @param callback The finished callback.\n */\nexport function readToMatchingString(file: string, matchingString: string, chunkBytes: number, maximumBytesToRead: number): Promise<string | null> {\n\treturn new Promise<string | null>((resolve, reject) =>\n\t\tfs.open(file, 'r', null, (err, fd) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tfunction end(err: Error | null, result: string | null): void {\n\t\t\t\tfs.close(fd, closeError => {\n\t\t\t\t\tif (closeError) {\n\t\t\t\t\t\treturn reject(closeError);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err && (<any>err).code === 'EISDIR') {\n\t\t\t\t\t\treturn reject(err); // we want to bubble this error up (file is actually a folder)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve(result);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst buffer = Buffer.allocUnsafe(maximumBytesToRead);\n\t\t\tlet offset = 0;\n\n\t\t\tfunction readChunk(): void {\n\t\t\t\tfs.read(fd, buffer, offset, chunkBytes, null, (err, bytesRead) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn end(err, null);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bytesRead === 0) {\n\t\t\t\t\t\treturn end(null, null);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += bytesRead;\n\n\t\t\t\t\tconst newLineIndex = buffer.indexOf(matchingString);\n\t\t\t\t\tif (newLineIndex >= 0) {\n\t\t\t\t\t\treturn end(null, buffer.toString('utf8').substr(0, newLineIndex));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (offset >= maximumBytesToRead) {\n\t\t\t\t\t\treturn end(new Error(`Could not find ${matchingString} in first ${maximumBytesToRead} bytes of ${file}`), null);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn readChunk();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treadChunk();\n\t\t})\n\t);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as stream from 'vs/base/node/stream';\nimport * as iconv from 'iconv-lite';\nimport { isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { exec } from 'child_process';\nimport { Readable, Writable } from 'stream';\n\nexport const UTF8 = 'utf8';\nexport const UTF8_with_bom = 'utf8bom';\nexport const UTF16be = 'utf16be';\nexport const UTF16le = 'utf16le';\n\nexport interface IDecodeStreamOptions {\n\tguessEncoding?: boolean;\n\tminBytesRequiredForDetection?: number;\n\toverwriteEncoding?(detectedEncoding: string | null): string;\n}\n\nexport function toDecodeStream(readable: Readable, options: IDecodeStreamOptions): Promise<{ detected: IDetectedEncodingResult, stream: NodeJS.ReadableStream }> {\n\tif (!options.minBytesRequiredForDetection) {\n\t\toptions.minBytesRequiredForDetection = options.guessEncoding ? AUTO_GUESS_BUFFER_MAX_LEN : NO_GUESS_BUFFER_MAX_LEN;\n\t}\n\n\tif (!options.overwriteEncoding) {\n\t\toptions.overwriteEncoding = detected => detected || UTF8;\n\t}\n\n\treturn new Promise<{ detected: IDetectedEncodingResult, stream: NodeJS.ReadableStream }>((resolve, reject) => {\n\n\t\treadable.on('error', reject);\n\n\t\treadable.pipe(new class extends Writable {\n\n\t\t\tprivate _decodeStream: NodeJS.ReadWriteStream;\n\t\t\tprivate _decodeStreamConstruction: Promise<any>;\n\t\t\tprivate _buffer: Buffer[] = [];\n\t\t\tprivate _bytesBuffered = 0;\n\n\t\t\t_write(chunk: any, encoding: string, callback: Function): void {\n\t\t\t\tif (!Buffer.isBuffer(chunk)) {\n\t\t\t\t\tcallback(new Error('data must be a buffer'));\n\t\t\t\t}\n\n\t\t\t\tif (this._decodeStream) {\n\t\t\t\t\t// just a forwarder now\n\t\t\t\t\tthis._decodeStream.write(chunk, callback);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._buffer.push(chunk);\n\t\t\t\tthis._bytesBuffered += chunk.length;\n\n\t\t\t\tif (this._decodeStreamConstruction) {\n\t\t\t\t\t// waiting for the decoder to be ready\n\t\t\t\t\tthis._decodeStreamConstruction.then(_ => callback(), err => callback(err));\n\n\t\t\t\t} else if (typeof options.minBytesRequiredForDetection === 'number' && this._bytesBuffered >= options.minBytesRequiredForDetection) {\n\t\t\t\t\t// buffered enough data, create stream and forward data\n\t\t\t\t\tthis._startDecodeStream(callback);\n\n\t\t\t\t} else {\n\t\t\t\t\t// only buffering\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_startDecodeStream(callback: Function): void {\n\n\t\t\t\tthis._decodeStreamConstruction = Promise.resolve(detectEncodingFromBuffer({\n\t\t\t\t\tbuffer: Buffer.concat(this._buffer), bytesRead: this._bytesBuffered\n\t\t\t\t}, options.guessEncoding)).then(detected => {\n\t\t\t\t\tif (options.overwriteEncoding) {\n\t\t\t\t\t\tdetected.encoding = options.overwriteEncoding(detected.encoding);\n\t\t\t\t\t}\n\t\t\t\t\tthis._decodeStream = decodeStream(detected.encoding);\n\t\t\t\t\tfor (const buffer of this._buffer) {\n\t\t\t\t\t\tthis._decodeStream.write(buffer);\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t\t\tresolve({ detected, stream: this._decodeStream });\n\n\t\t\t\t}, err => {\n\t\t\t\t\tthis.emit('error', err);\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_final(callback: (err?: any) => any) {\n\t\t\t\tif (this._decodeStream) {\n\t\t\t\t\t// normal finish\n\t\t\t\t\tthis._decodeStream.end(callback);\n\t\t\t\t} else {\n\t\t\t\t\t// we were still waiting for data...\n\t\t\t\t\tthis._startDecodeStream(() => this._decodeStream.end(callback));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function bomLength(encoding: string): number {\n\tswitch (encoding) {\n\t\tcase UTF8:\n\t\t\treturn 3;\n\t\tcase UTF16be:\n\t\tcase UTF16le:\n\t\t\treturn 2;\n\t}\n\n\treturn 0;\n}\n\nexport function decode(buffer: Buffer, encoding: string): string {\n\treturn iconv.decode(buffer, toNodeEncoding(encoding));\n}\n\nexport function encode(content: string | Buffer, encoding: string, options?: { addBOM?: boolean }): Buffer {\n\treturn iconv.encode(content, toNodeEncoding(encoding), options);\n}\n\nexport function encodingExists(encoding: string): boolean {\n\treturn iconv.encodingExists(toNodeEncoding(encoding));\n}\n\nexport function decodeStream(encoding: string | null): NodeJS.ReadWriteStream {\n\treturn iconv.decodeStream(toNodeEncoding(encoding));\n}\n\nexport function encodeStream(encoding: string, options?: { addBOM?: boolean }): NodeJS.ReadWriteStream {\n\treturn iconv.encodeStream(toNodeEncoding(encoding), options);\n}\n\nfunction toNodeEncoding(enc: string | null): string {\n\tif (enc === UTF8_with_bom || enc === null) {\n\t\treturn UTF8; // iconv does not distinguish UTF 8 with or without BOM, so we need to help it\n\t}\n\n\treturn enc;\n}\n\nexport function detectEncodingByBOMFromBuffer(buffer: Buffer | null, bytesRead: number): string | null {\n\tif (!buffer || bytesRead < 2) {\n\t\treturn null;\n\t}\n\n\tconst b0 = buffer.readUInt8(0);\n\tconst b1 = buffer.readUInt8(1);\n\n\t// UTF-16 BE\n\tif (b0 === 0xFE && b1 === 0xFF) {\n\t\treturn UTF16be;\n\t}\n\n\t// UTF-16 LE\n\tif (b0 === 0xFF && b1 === 0xFE) {\n\t\treturn UTF16le;\n\t}\n\n\tif (bytesRead < 3) {\n\t\treturn null;\n\t}\n\n\tconst b2 = buffer.readUInt8(2);\n\n\t// UTF-8\n\tif (b0 === 0xEF && b1 === 0xBB && b2 === 0xBF) {\n\t\treturn UTF8;\n\t}\n\n\treturn null;\n}\n\n/**\n * Detects the Byte Order Mark in a given file.\n * If no BOM is detected, null will be passed to callback.\n */\nexport function detectEncodingByBOM(file: string): Promise<string | null> {\n\treturn stream.readExactlyByFile(file, 3).then(({ buffer, bytesRead }) => detectEncodingByBOMFromBuffer(buffer, bytesRead));\n}\n\nconst MINIMUM_THRESHOLD = 0.2;\nconst IGNORE_ENCODINGS = ['ascii', 'utf-8', 'utf-16', 'utf-32'];\n\n/**\n * Guesses the encoding from buffer.\n */\nexport function guessEncodingByBuffer(buffer: Buffer): Promise<string | null> {\n\treturn import('jschardet').then(jschardet => {\n\t\tjschardet.Constants.MINIMUM_THRESHOLD = MINIMUM_THRESHOLD;\n\n\t\tconst guessed = jschardet.detect(buffer);\n\t\tif (!guessed || !guessed.encoding) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst enc = guessed.encoding.toLowerCase();\n\n\t\t// Ignore encodings that cannot guess correctly\n\t\t// (http://chardet.readthedocs.io/en/latest/supported-encodings.html)\n\t\tif (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn toIconvLiteEncoding(guessed.encoding);\n\t});\n}\n\nconst JSCHARDET_TO_ICONV_ENCODINGS: { [name: string]: string } = {\n\t'ibm866': 'cp866',\n\t'big5': 'cp950'\n};\n\nfunction toIconvLiteEncoding(encodingName: string): string {\n\tconst normalizedEncodingName = encodingName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\tconst mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\n\n\treturn mapped || normalizedEncodingName;\n}\n\n/**\n * The encodings that are allowed in a settings file don't match the canonical encoding labels specified by WHATWG.\n * See https://encoding.spec.whatwg.org/#names-and-labels\n * Iconv-lite strips all non-alphanumeric characters, but ripgrep doesn't. For backcompat, allow these labels.\n */\nexport function toCanonicalName(enc: string): string {\n\tswitch (enc) {\n\t\tcase 'shiftjis':\n\t\t\treturn 'shift-jis';\n\t\tcase 'utf16le':\n\t\t\treturn 'utf-16le';\n\t\tcase 'utf16be':\n\t\t\treturn 'utf-16be';\n\t\tcase 'big5hkscs':\n\t\t\treturn 'big5-hkscs';\n\t\tcase 'eucjp':\n\t\t\treturn 'euc-jp';\n\t\tcase 'euckr':\n\t\t\treturn 'euc-kr';\n\t\tcase 'koi8r':\n\t\t\treturn 'koi8-r';\n\t\tcase 'koi8u':\n\t\t\treturn 'koi8-u';\n\t\tcase 'macroman':\n\t\t\treturn 'x-mac-roman';\n\t\tcase 'utf8bom':\n\t\t\treturn 'utf8';\n\t\tdefault:\n\t\t\tconst m = enc.match(/windows(\\d+)/);\n\t\t\tif (m) {\n\t\t\t\treturn 'windows-' + m[1];\n\t\t\t}\n\n\t\t\treturn enc;\n\t}\n}\n\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512; // number of bytes to look at to decide about a file being binary or not\nconst NO_GUESS_BUFFER_MAX_LEN = 512; \t\t\t// when not auto guessing the encoding, small number of bytes are enough\nconst AUTO_GUESS_BUFFER_MAX_LEN = 512 * 8; \t\t// with auto guessing we want a lot more content to be read for guessing\n\nexport interface IDetectedEncodingResult {\n\tencoding: string | null;\n\tseemsBinary: boolean;\n}\n\nexport function detectEncodingFromBuffer(readResult: stream.ReadResult, autoGuessEncoding?: false): IDetectedEncodingResult;\nexport function detectEncodingFromBuffer(readResult: stream.ReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult>;\nexport function detectEncodingFromBuffer({ buffer, bytesRead }: stream.ReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult> | IDetectedEncodingResult {\n\n\t// Always first check for BOM to find out about encoding\n\tlet encoding = detectEncodingByBOMFromBuffer(buffer, bytesRead);\n\n\t// Detect 0 bytes to see if file is binary or UTF-16 LE/BE\n\t// unless we already know that this file has a UTF-16 encoding\n\tlet seemsBinary = false;\n\tif (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n\t\tlet couldBeUTF16LE = true; // e.g. 0xAA 0x00\n\t\tlet couldBeUTF16BE = true; // e.g. 0x00 0xAA\n\t\tlet containsZeroByte = false;\n\n\t\t// This is a simplified guess to detect UTF-16 BE or LE by just checking if\n\t\t// the first 512 bytes have the 0-byte at a specific location. For UTF-16 LE\n\t\t// this would be the odd byte index and for UTF-16 BE the even one.\n\t\t// Note: this can produce false positives (a binary file that uses a 2-byte\n\t\t// encoding of the same format as UTF-16) and false negatives (a UTF-16 file\n\t\t// that is using 4 bytes to encode a character).\n\t\tfor (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n\t\t\tconst isEndian = (i % 2 === 1); // assume 2-byte sequences typical for UTF-16\n\t\t\tconst isZeroByte = (buffer.readInt8(i) === 0);\n\n\t\t\tif (isZeroByte) {\n\t\t\t\tcontainsZeroByte = true;\n\t\t\t}\n\n\t\t\t// UTF-16 LE: expect e.g. 0xAA 0x00\n\t\t\tif (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n\t\t\t\tcouldBeUTF16LE = false;\n\t\t\t}\n\n\t\t\t// UTF-16 BE: expect e.g. 0x00 0xAA\n\t\t\tif (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n\t\t\t\tcouldBeUTF16BE = false;\n\t\t\t}\n\n\t\t\t// Return if this is neither UTF16-LE nor UTF16-BE and thus treat as binary\n\t\t\tif (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Handle case of 0-byte included\n\t\tif (containsZeroByte) {\n\t\t\tif (couldBeUTF16LE) {\n\t\t\t\tencoding = UTF16le;\n\t\t\t} else if (couldBeUTF16BE) {\n\t\t\t\tencoding = UTF16be;\n\t\t\t} else {\n\t\t\t\tseemsBinary = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Auto guess encoding if configured\n\tif (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n\t\treturn guessEncodingByBuffer(buffer.slice(0, bytesRead)).then(guessedEncoding => {\n\t\t\treturn {\n\t\t\t\tseemsBinary: false,\n\t\t\t\tencoding: guessedEncoding\n\t\t\t};\n\t\t});\n\t}\n\n\treturn { seemsBinary, encoding };\n}\n\n// https://ss64.com/nt/chcp.html\nconst windowsTerminalEncodings = {\n\t'437': 'cp437', // United States\n\t'850': 'cp850', // Multilingual(Latin I)\n\t'852': 'cp852', // Slavic(Latin II)\n\t'855': 'cp855', // Cyrillic(Russian)\n\t'857': 'cp857', // Turkish\n\t'860': 'cp860', // Portuguese\n\t'861': 'cp861', // Icelandic\n\t'863': 'cp863', // Canadian - French\n\t'865': 'cp865', // Nordic\n\t'866': 'cp866', // Russian\n\t'869': 'cp869', // Modern Greek\n\t'936': 'cp936', // Simplified Chinese\n\t'1252': 'cp1252' // West European Latin\n};\n\nexport function resolveTerminalEncoding(verbose?: boolean): Promise<string> {\n\tlet rawEncodingPromise: Promise<string>;\n\n\t// Support a global environment variable to win over other mechanics\n\tconst cliEncodingEnv = process.env['VSCODE_CLI_ENCODING'];\n\tif (cliEncodingEnv) {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Found VSCODE_CLI_ENCODING variable: ${cliEncodingEnv}`);\n\t\t}\n\n\t\trawEncodingPromise = Promise.resolve(cliEncodingEnv);\n\t}\n\n\t// Linux/Mac: use \"locale charmap\" command\n\telse if (isLinux || isMacintosh) {\n\t\trawEncodingPromise = new Promise<string>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"locale charmap\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('locale charmap', (err, stdout, stderr) => resolve(stdout));\n\t\t});\n\t}\n\n\t// Windows: educated guess\n\telse {\n\t\trawEncodingPromise = new Promise<string>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"chcp\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('chcp', (err, stdout, stderr) => {\n\t\t\t\tif (stdout) {\n\t\t\t\t\tconst windowsTerminalEncodingKeys = Object.keys(windowsTerminalEncodings);\n\t\t\t\t\tfor (const key of windowsTerminalEncodingKeys) {\n\t\t\t\t\t\tif (stdout.indexOf(key) >= 0) {\n\t\t\t\t\t\t\treturn resolve(windowsTerminalEncodings[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn resolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\treturn rawEncodingPromise.then(rawEncoding => {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Detected raw terminal encoding: ${rawEncoding}`);\n\t\t}\n\n\t\tif (!rawEncoding || rawEncoding.toLowerCase() === 'utf-8' || rawEncoding.toLowerCase() === UTF8) {\n\t\t\treturn UTF8;\n\t\t}\n\n\t\tconst iconvEncoding = toIconvLiteEncoding(rawEncoding);\n\t\tif (iconv.encodingExists(iconvEncoding)) {\n\t\t\treturn iconvEncoding;\n\t\t}\n\n\t\tif (verbose) {\n\t\t\tconsole.log('Unsupported terminal encoding, falling back to UTF-8.');\n\t\t}\n\n\t\treturn UTF8;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as paths from 'vs/base/common/path';\nimport { nfcall } from 'vs/base/common/async';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport * as uuid from 'vs/base/common/uuid';\nimport { encode, encodeStream } from 'vs/base/node/encoding';\nimport * as flow from 'vs/base/node/flow';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable, toDisposable, Disposable } from 'vs/base/common/lifecycle';\n\nconst loop = flow.loop;\n\nexport function readdirSync(path: string): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn fs.readdirSync(path).map(c => normalizeNFC(c));\n\t}\n\n\treturn fs.readdirSync(path);\n}\n\nexport function readdir(path: string, callback: (error: Error | null, files: string[]) => void): void {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn fs.readdir(path, (error, children) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error, []);\n\t\t\t}\n\n\t\t\treturn callback(null, children.map(c => normalizeNFC(c)));\n\t\t});\n\t}\n\n\treturn fs.readdir(path, callback);\n}\n\nexport interface IStatAndLink {\n\tstat: fs.Stats;\n\tisSymbolicLink: boolean;\n}\n\nexport function statLink(path: string, callback: (error: Error | null, statAndIsLink: IStatAndLink | null) => void): void {\n\tfs.lstat(path, (error, lstat) => {\n\t\tif (error || lstat.isSymbolicLink()) {\n\t\t\tfs.stat(path, (error, stat) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn callback(error, null);\n\t\t\t\t}\n\n\t\t\t\tcallback(null, { stat, isSymbolicLink: lstat && lstat.isSymbolicLink() });\n\t\t\t});\n\t\t} else {\n\t\t\tcallback(null, { stat: lstat, isSymbolicLink: false });\n\t\t}\n\t});\n}\n\nexport function copy(source: string, target: string, callback: (error: Error | null) => void, copiedSourcesIn?: { [path: string]: boolean }): void {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tfs.stat(source, (error, stat) => {\n\t\tif (error) {\n\t\t\treturn callback(error);\n\t\t}\n\n\t\tif (!stat.isDirectory()) {\n\t\t\treturn doCopyFile(source, target, stat.mode & 511, callback);\n\t\t}\n\n\t\tif (copiedSources[source]) {\n\t\t\treturn callback(null); // escape when there are cycles (can happen with symlinks)\n\t\t}\n\n\t\tcopiedSources[source] = true; // remember as copied\n\n\t\tconst proceed = function () {\n\t\t\treaddir(source, (err, files) => {\n\t\t\t\tloop(files, (file: string, clb: (error: Error | null, result: string[]) => void) => {\n\t\t\t\t\tcopy(paths.join(source, file), paths.join(target, file), (error: Error) => clb(error, []), copiedSources);\n\t\t\t\t}, callback);\n\t\t\t});\n\t\t};\n\n\t\tmkdirp(target, stat.mode & 511).then(proceed, proceed);\n\t});\n}\n\nfunction doCopyFile(source: string, target: string, mode: number, callback: (error: Error) => void): void {\n\tconst reader = fs.createReadStream(source);\n\tconst writer = fs.createWriteStream(target, { mode });\n\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases, pass to callback\n\t\t\tif (error) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\n\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\telse {\n\t\t\t\tfs.chmod(target, mode, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\t// handle errors properly\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// we are done (underlying fd has been closed)\n\twriter.once('close', () => finish());\n\n\t// start piping\n\treader.pipe(writer);\n}\n\nexport function mkdirp(path: string, mode?: number, token?: CancellationToken): Promise<boolean> {\n\tconst mkdir = (): Promise<null> => {\n\t\treturn nfcall(fs.mkdir, path, mode).then(undefined, (mkdirErr: NodeJS.ErrnoException) => {\n\n\t\t\t// ENOENT: a parent folder does not exist yet\n\t\t\tif (mkdirErr.code === 'ENOENT') {\n\t\t\t\treturn Promise.reject(mkdirErr);\n\t\t\t}\n\n\t\t\t// Any other error: check if folder exists and\n\t\t\t// return normally in that case if its a folder\n\t\t\treturn nfcall(fs.stat, path).then((stat: fs.Stats) => {\n\t\t\t\tif (!stat.isDirectory()) {\n\t\t\t\t\treturn Promise.reject(new Error(`'${path}' exists and is not a directory.`));\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}, statErr => {\n\t\t\t\treturn Promise.reject(mkdirErr); // bubble up original mkdir error\n\t\t\t});\n\t\t});\n\t};\n\n\t// stop at root\n\tif (path === paths.dirname(path)) {\n\t\treturn Promise.resolve(true);\n\t}\n\n\t// recursively mkdir\n\treturn mkdir().then(undefined, (err: NodeJS.ErrnoException) => {\n\n\t\t// Respect cancellation\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\t// ENOENT: a parent folder does not exist yet, continue\n\t\t// to create the parent folder and then try again.\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn mkdirp(paths.dirname(path), mode).then(mkdir);\n\t\t}\n\n\t\t// Any other error\n\t\treturn Promise.reject(err);\n\t});\n}\n\n// Deletes the given path by first moving it out of the workspace. This has two benefits. For one, the operation can return fast because\n// after the rename, the contents are out of the workspace although not yet deleted. The greater benefit however is that this operation\n// will fail in case any file is used by another process. fs.unlink() in node will not bail if a file unlinked is used by another process.\n// However, the consequences are bad as outlined in all the related bugs from https://github.com/joyent/node/issues/7164\nexport function del(path: string, tmpFolder: string, callback: (error: Error | null) => void, done?: (error: Error | null) => void): void {\n\tfs.exists(path, exists => {\n\t\tif (!exists) {\n\t\t\treturn callback(null);\n\t\t}\n\n\t\tfs.stat(path, (err, stat) => {\n\t\t\tif (err || !stat) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\t// Special windows workaround: A file or folder that ends with a \".\" cannot be moved to another place\n\t\t\t// because it is not a valid file name. In this case, we really have to do the deletion without prior move.\n\t\t\tif (path[path.length - 1] === '.' || strings.endsWith(path, './') || strings.endsWith(path, '.\\\\')) {\n\t\t\t\treturn rmRecursive(path, callback);\n\t\t\t}\n\n\t\t\tconst pathInTemp = paths.join(tmpFolder, uuid.generateUuid());\n\t\t\tfs.rename(path, pathInTemp, (error: Error | null) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn rmRecursive(path, callback); // if rename fails, delete without tmp dir\n\t\t\t\t}\n\n\t\t\t\t// Return early since the move succeeded\n\t\t\t\tcallback(null);\n\n\t\t\t\t// do the heavy deletion outside the callers callback\n\t\t\t\trmRecursive(pathInTemp, error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tdone(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction rmRecursive(path: string, callback: (error: Error | null) => void): void {\n\tif (path === paths.win32.sep || path === paths.posix.sep) {\n\t\treturn callback(new Error('Will not delete root!'));\n\t}\n\n\tfs.exists(path, exists => {\n\t\tif (!exists) {\n\t\t\tcallback(null);\n\t\t} else {\n\t\t\tfs.lstat(path, (err, stat) => {\n\t\t\t\tif (err || !stat) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else if (!stat.isDirectory() || stat.isSymbolicLink() /* !!! never recurse into links when deleting !!! */) {\n\t\t\t\t\tconst mode = stat.mode;\n\t\t\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\t\t\tfs.chmod(path, mode | 128, (err: Error) => { // 128 === 0200\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treaddir(path, (err, children) => {\n\t\t\t\t\t\tif (err || !children) {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t} else if (children.length === 0) {\n\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet firstError: Error | null = null;\n\t\t\t\t\t\t\tlet childrenLeft = children.length;\n\t\t\t\t\t\t\tchildren.forEach(child => {\n\t\t\t\t\t\t\t\trmRecursive(paths.join(path, child), (err: Error) => {\n\t\t\t\t\t\t\t\t\tchildrenLeft--;\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tfirstError = firstError || err;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (childrenLeft === 0) {\n\t\t\t\t\t\t\t\t\t\tif (firstError) {\n\t\t\t\t\t\t\t\t\t\t\tcallback(firstError);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function delSync(path: string): void {\n\tif (path === paths.win32.sep || path === paths.posix.sep) {\n\t\tthrow new Error('Will not delete root!');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\treaddirSync(path).forEach(child => delSync(paths.join(path, child)));\n\t\t\tfs.rmdirSync(path);\n\t\t} else {\n\t\t\tfs.unlinkSync(path);\n\t\t}\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tthrow err;\n\t}\n}\n\nexport function mv(source: string, target: string, callback: (error: Error | null) => void): void {\n\tif (source === target) {\n\t\treturn callback(null);\n\t}\n\n\tfunction updateMtime(err: Error | null): void {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tfs.stat(target, (error, stat) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\treturn callback(null);\n\t\t\t}\n\n\t\t\tfs.open(target, 'a', null, (err: Error, fd: number) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tfs.futimes(fd, stat.atime, new Date(), (err: Error) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tfs.close(fd, callback);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t// Try native rename()\n\tfs.rename(source, target, (err: Error) => {\n\t\tif (!err) {\n\t\t\treturn updateMtime(null);\n\t\t}\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (err && source.toLowerCase() !== target.toLowerCase() && ((<any>err).code === 'EXDEV') || strings.endsWith(source, '.')) {\n\t\t\treturn copy(source, target, (err: Error) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\trmRecursive(source, updateMtime);\n\t\t\t});\n\t\t}\n\n\t\treturn callback(err);\n\t});\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n\tencoding?: {\n\t\tcharset: string;\n\t\taddBOM: boolean;\n\t};\n}\n\nlet canFlush = true;\nexport function writeFileAndFlush(path: string, data: string | Buffer | NodeJS.ReadableStream, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\toptions = ensureOptions(options);\n\n\tif (typeof data === 'string' || Buffer.isBuffer(data)) {\n\t\tdoWriteFileAndFlush(path, data, options, callback);\n\t} else {\n\t\tdoWriteFileStreamAndFlush(path, data, options, callback);\n\t}\n}\n\nfunction doWriteFileStreamAndFlush(path: string, reader: NodeJS.ReadableStream, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\tif (process.env.isBrowser) {\n\t\tlet content = '';\n\t\tlet chunk = reader.read();\n\t\twhile (chunk !== null) {\n\t\t\tcontent += chunk;\n\t\t\tchunk = reader.read();\n\t\t}\n\t\tfs.writeFile(path, content, 'utf-8', function (error) {\n\t\t\tif (error) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\t// finish only once\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases we need to manually close streams\n\t\t\t// if the write stream was successfully opened\n\t\t\tif (error) {\n\t\t\t\tif (isOpen) {\n\t\t\t\t\twriter.once('close', () => callback(error));\n\t\t\t\t\twriter.destroy();\n\t\t\t\t} else {\n\t\t\t\t\tcallback(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise just return without error\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t};\n\n\t// create writer to target. we set autoClose: false because we want to use the streams\n\t// file descriptor to call fs.fdatasync to ensure the data is flushed to disk\n\tconst writer = fs.createWriteStream(path, { mode: options.mode, flags: options.flag, autoClose: false });\n\n\t// Event: 'open'\n\t// Purpose: save the fd for later use and start piping\n\t// Notes: will not be called when there is an error opening the file descriptor!\n\tlet fd: number;\n\tlet isOpen: boolean;\n\twriter.once('open', descriptor => {\n\t\tfd = descriptor;\n\t\tisOpen = true;\n\n\t\t// if an encoding is provided, we need to pipe the stream through\n\t\t// an encoder stream and forward the encoding related options\n\t\tif (options.encoding) {\n\t\t\treader = reader.pipe(encodeStream(options.encoding.charset, { addBOM: options.encoding.addBOM }));\n\t\t}\n\n\t\t// start data piping only when we got a successful open. this ensures that we do\n\t\t// not consume the stream when an error happens and helps to fix this issue:\n\t\t// https://github.com/Microsoft/vscode/issues/42542\n\t\treader.pipe(writer);\n\t});\n\n\t// Event: 'error'\n\t// Purpose: to return the error to the outside and to close the write stream (does not happen automatically)\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// Event: 'finish'\n\t// Purpose: use fs.fdatasync to flush the contents to disk\n\t// Notes: event is called when the writer has finished writing to the underlying resource. we must call writer.close()\n\t// because we have created the WriteStream with autoClose: false\n\twriter.once('finish', () => {\n\n\t\t// flush to disk\n\t\tif (canFlush && isOpen) {\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\twriter.destroy();\n\t\t\t});\n\t\t} else {\n\t\t\twriter.destroy();\n\t\t}\n\t});\n\n\t// Event: 'close'\n\t// Purpose: signal we are done to the outside\n\t// Notes: event is called when the writer's filedescriptor is closed\n\twriter.once('close', () => finish());\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\tif (options.encoding) {\n\t\tdata = encode(data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, typeof options.flag === 'string' ? options.flag : 'r', options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(/** Desktop fd */path, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileAndFlushSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\toptions = ensureOptions(options);\n\n\tif (options.encoding) {\n\t\tdata = encode(data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: options.mode, flag: options.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, typeof options.flag === 'string' ? options.flag : 'r', options.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(path, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureOptions(options?: IWriteFileOptions): IWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\tconst ensuredOptions: IWriteFileOptions = { mode: options.mode, flag: options.flag, encoding: options.encoding };\n\n\tif (typeof ensuredOptions.mode !== 'number') {\n\t\tensuredOptions.mode = 0o666;\n\t}\n\n\tif (typeof ensuredOptions.flag !== 'string') {\n\t\tensuredOptions.flag = 'w';\n\t}\n\n\treturn ensuredOptions;\n}\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = paths.dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (paths.basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn paths.join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn paths.join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpath(path: string, callback: (error: Error | null, realpath: string) => void): void {\n\treturn fs.realpath(path, (error, realpath) => {\n\t\tif (!error) {\n\t\t\treturn callback(null, realpath);\n\t\t}\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\treturn fs.access(normalizedPath, fs.constants.R_OK, error => {\n\t\t\treturn callback(error, normalizedPath);\n\t\t});\n\t});\n}\n\nfunction normalizePath(path: string): string {\n\treturn strings.rtrim(paths.normalize(path), paths.sep);\n}\n\nexport function watch(path: string, onChange: (type: string, path?: string) => void, onError: (error: string) => void): IDisposable {\n\ttry {\n\t\tconst watcher = fs.watch(path);\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tlet file: string | undefined;\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tfile = raw.toString();\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tfile = normalizeNFC(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tonChange(type, file);\n\t\t});\n\n\t\twatcher.on('error', (code: number, signal: string) => onError(`Failed to watch ${path} for changes (${code}, ${signal})`));\n\n\t\treturn toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t});\n\t} catch (error) {\n\t\tfs.exists(path, exists => {\n\t\t\tif (exists) {\n\t\t\t\tonError(`Failed to watch ${path} for changes (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn Disposable.None;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (platform.isWindows && strings.endsWith(candidate, ':')) {\n\t\tcandidate += paths.sep;\n\t}\n\n\t// Ensure absolute\n\tif (!paths.isAbsolute(candidate)) {\n\t\tcandidate = paths.join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = paths.normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (platform.isWindows) {\n\t\tcandidate = strings.rtrim(candidate, paths.sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (strings.endsWith(candidate, ':')) {\n\t\t\tcandidate += paths.sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = strings.rtrim(candidate, paths.sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = paths.sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extfs from 'vs/base/node/extfs';\nimport { join } from 'vs/base/common/path';\nimport { nfcall, Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\n\nexport function readdir(path: string): Promise<string[]> {\n\treturn nfcall(extfs.readdir, path);\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn new Promise(c => fs.exists(path, c));\n}\n\nexport function chmod(path: string, mode: number): Promise<boolean> {\n\treturn nfcall(fs.chmod, path, mode);\n}\n\nexport import mkdirp = extfs.mkdirp;\n\nexport function rimraf(path: string): Promise<void> {\n\treturn lstat(path).then(stat => {\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\treturn readdir(path)\n\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(join(path, child)))))\n\t\t\t\t.then(() => rmdir(path));\n\t\t} else {\n\t\t\treturn unlink(path);\n\t\t}\n\t}, (err: NodeJS.ErrnoException) => {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Promise.reject(err);\n\t});\n}\n\nexport function realpath(path: string): Promise<string> {\n\treturn nfcall(extfs.realpath, path);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn nfcall(fs.stat, path);\n}\n\nexport function statLink(path: string): Promise<{ stat: fs.Stats, isSymbolicLink: boolean }> {\n\treturn nfcall(extfs.statLink, path);\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn nfcall(fs.lstat, path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn nfcall(fs.rename, oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tfs.rename(oldPath, newPath, () => resolve());\n\t});\n}\n\nexport function rmdir(path: string): Promise<void> {\n\treturn nfcall(fs.rmdir, path);\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn nfcall(fs.unlink, path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn nfcall<void>(fs.symlink, target, path, type);\n}\n\nexport function readlink(path: string): Promise<string> {\n\treturn nfcall<string>(fs.readlink, path);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn nfcall(fs.truncate, path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn nfcall(fs.readFile, path, encoding);\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueue: { [path: string]: Queue<void> } = Object.create(null);\n\nexport function writeFile(path: string, data: string, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: NodeJS.ReadableStream, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: any, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: any, options?: extfs.IWriteFileOptions): any {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => nfcall(extfs.writeFileAndFlush, path, data, options));\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accomodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tlet writeFileQueue = writeFilePathQueue[queueKey];\n\tif (!writeFileQueue) {\n\t\twriteFileQueue = new Queue<void>();\n\t\twriteFilePathQueue[queueKey] = writeFileQueue;\n\n\t\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\t\tonFinish(() => {\n\t\t\tdelete writeFilePathQueue[queueKey];\n\t\t\twriteFileQueue.dispose();\n\t\t});\n\t}\n\n\treturn writeFileQueue;\n}\n\n/**\n* Read a dir and return only subfolders\n*/\nexport function readDirsInDir(dirPath: string): Promise<string[]> {\n\treturn readdir(dirPath).then(children => {\n\t\treturn Promise.all(children.map(c => dirExists(join(dirPath, c)))).then(exists => {\n\t\t\treturn children.filter((_, i) => exists[i]);\n\t\t});\n\t});\n}\n\n/**\n* `path` exists and is a directory\n*/\nexport function dirExists(path: string): Promise<boolean> {\n\treturn stat(path).then(stat => stat.isDirectory(), () => false);\n}\n\n/**\n* `path` exists and is a file.\n*/\nexport function fileExists(path: string): Promise<boolean> {\n\treturn stat(path).then(stat => stat.isFile(), () => false);\n}\n\n/**\n * Deletes a path from disk.\n */\nlet _tmpDir: string | null = null;\nfunction getTmpDir(): string {\n\tif (!_tmpDir) {\n\t\t_tmpDir = os.tmpdir();\n\t}\n\treturn _tmpDir;\n}\nexport function del(path: string, tmp = getTmpDir()): Promise<void> {\n\treturn nfcall(extfs.del, path, tmp);\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport function copy(source: string, target: string): Promise<void> {\n\treturn nfcall(extfs.copy, source, target);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, toDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: Buffer): void;\n\tonMessage: Event<Buffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the couter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidChangeConnections: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): Buffer;\n}\n\ninterface IWriter {\n\twrite(buffer: Buffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: Buffer) { }\n\n\tread(bytes: number): Buffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.length;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: Buffer[] = [];\n\n\tget buffer(): Buffer {\n\t\treturn Buffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: Buffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tArray = 3,\n\tObject = 4\n}\n\nfunction createSizeBuffer(size: number): Buffer {\n\tconst result = Buffer.allocUnsafe(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nconst BufferPresets = {\n\tUndefined: Buffer.alloc(1, DataType.Undefined),\n\tString: Buffer.alloc(1, DataType.String),\n\tBuffer: Buffer.alloc(1, DataType.Buffer),\n\tArray: Buffer.alloc(1, DataType.Array),\n\tObject: Buffer.alloc(1, DataType.Object)\n};\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = Buffer.from(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.length));\n\t\twriter.write(buffer);\n\t} else if (Buffer.isBuffer(data)) {\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(data.length));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = Buffer.from(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.length));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: Buffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error('Unknown channel');\n\t\t}\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error('Unknown channel');\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable([toDisposable(cancel), cancellationTokenListener]);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => this.activeRequests.delete(disposable));\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawEventFireResponse) => emitter.fire(res.data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: Buffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate _onDidChangeConnections = new Emitter<Connection<TContext>>();\n\treadonly onDidChangeConnections: Event<Connection<TContext>> = this._onDidChangeConnections.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidChangeConnections.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tconst channelPromise = router.routeCall(that, command, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tconst channelPromise = router.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidChangeConnections.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidChangeConnections);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, ClientConnectionEvent, IPCServer, IPCClient } from 'vs/base/parts/ipc/node/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nclass ChunkStream {\n\n\tprivate _chunks: Buffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: Buffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic readUInt32BE(): number {\n\t\tlet tmp = this.read(4);\n\t\treturn tmp.readUInt32BE(0);\n\t}\n\n\tpublic read(byteCount: number): Buffer {\n\t\tif (byteCount === 0) {\n\t\t\treturn Buffer.allocUnsafe(0);\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks.shift()!;\n\t\t\tthis._totalLength -= byteCount;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\tthis._totalLength -= byteCount;\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = Buffer.allocUnsafe(byteCount);\n\t\tlet resultOffset = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[0];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tthis._chunks[0] = chunk.slice(byteCount);\n\n\t\t\t\tchunk.copy(result, resultOffset, 0, byteCount);\n\t\t\t\tresultOffset += byteCount;\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tthis._chunks.shift();\n\n\t\t\t\tchunk.copy(result, resultOffset, 0, chunk.byteLength);\n\t\t\t\tresultOffset += chunk.byteLength;\n\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/**\n * A message has the following format:\n *\n * \t\t[bodyLen|message]\n * \t\t[header^|data^^^]\n * \t\t[u32be^^|buffer^]\n */\n\nexport class Protocol implements IDisposable, IMessagePassingProtocol {\n\n\tprivate static readonly _headerLen = 4;\n\n\tprivate _isDisposed: boolean;\n\tprivate _incomingData: ChunkStream;\n\n\tprivate _socketDataListener: (data: Buffer) => void;\n\tprivate _socketEndListener: () => void;\n\tprivate _socketCloseListener: () => void;\n\n\tprivate _onMessage = new Emitter<Buffer>();\n\treadonly onMessage: Event<Buffer> = this._onMessage.event;\n\n\tprivate _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(private _socket: Socket) {\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\n\t\tconst state = {\n\t\t\treadHead: true,\n\t\t\tbodyLen: -1,\n\t\t};\n\n\t\tconst acceptChunk = (data: Buffer) => {\n\n\t\t\tthis._incomingData.acceptChunk(data);\n\n\t\t\twhile (this._incomingData.byteLength > 0) {\n\n\t\t\t\tif (state.readHead) {\n\t\t\t\t\t// expecting header -> read header\n\t\t\t\t\tif (this._incomingData.byteLength >= Protocol._headerLen) {\n\t\t\t\t\t\tstate.bodyLen = this._incomingData.readUInt32BE();\n\t\t\t\t\t\tstate.readHead = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!state.readHead) {\n\t\t\t\t\t// expecting body -> read bodyLen-bytes for\n\t\t\t\t\t// the actual message or wait for more data\n\t\t\t\t\tif (this._incomingData.byteLength >= state.bodyLen) {\n\t\t\t\t\t\tconst buffer = this._incomingData.read(state.bodyLen);\n\n\t\t\t\t\t\tstate.bodyLen = -1;\n\t\t\t\t\t\tstate.readHead = true;\n\n\t\t\t\t\t\tthis._onMessage.fire(buffer);\n\n\t\t\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._socketDataListener = (data: Buffer) => {\n\t\t\tacceptChunk(data);\n\t\t};\n\t\t_socket.on('data', this._socketDataListener);\n\n\t\tthis._socketEndListener = () => {\n\t\t};\n\t\t_socket.on('end', this._socketEndListener);\n\n\t\tthis._socketCloseListener = () => {\n\t\t\tthis._onClose.fire();\n\t\t};\n\t\t_socket.once('close', this._socketCloseListener);\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tthis._socket.removeListener('data', this._socketDataListener);\n\t\tthis._socket.removeListener('end', this._socketEndListener);\n\t\tthis._socket.removeListener('close', this._socketCloseListener);\n\t}\n\n\tend(): void {\n\t\tthis._socket.end();\n\t}\n\n\treadEntireBuffer(): Buffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tsend(buffer: Buffer): void {\n\t\tconst header = Buffer.allocUnsafe(Protocol._headerLen);\n\t\theader.writeUInt32BE(buffer.length, 0, true);\n\t\tthis._writeSoon(header, buffer);\n\t}\n\n\tprivate _writeBuffer = new class {\n\n\t\tprivate _data: Buffer[] = [];\n\t\tprivate _totalLength = 0;\n\n\t\tadd(head: Buffer, body: Buffer): boolean {\n\t\t\tconst wasEmpty = this._totalLength === 0;\n\t\t\tthis._data.push(head, body);\n\t\t\tthis._totalLength += head.length + body.length;\n\t\t\treturn wasEmpty;\n\t\t}\n\n\t\ttake(): Buffer {\n\t\t\tconst ret = Buffer.concat(this._data, this._totalLength);\n\t\t\tthis._data.length = 0;\n\t\t\tthis._totalLength = 0;\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\tprivate _writeSoon(header: Buffer, data: Buffer): void {\n\t\tif (this._writeBuffer.add(header, data)) {\n\t\t\tsetImmediate(() => {\n\t\t\t\t// return early if socket has been destroyed in the meantime\n\t\t\t\tif (this._socket.destroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t\t\t// anyways and nodejs is already doing that for us:\n\t\t\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t\t\t// > accept and buffer chunk even if it has not not been allowed to drain.\n\t\t\t\tthis._socket.write(this._writeBuffer.take());\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(socket),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: Socket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | BufferedProtocol, id: TContext) {\n\t\tsuper(protocol, id);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.protocol.end();\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(socket, clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nfunction createBufferedEvent<T>(source: Event<T>): Event<T> {\n\tlet emitter: Emitter<T>;\n\tlet hasListeners = false;\n\tlet isDeliveringMessages = false;\n\tlet bufferedMessages: T[] = [];\n\n\tconst deliverMessages = () => {\n\t\tif (isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tisDeliveringMessages = true;\n\t\twhile (hasListeners && bufferedMessages.length > 0) {\n\t\t\temitter.fire(bufferedMessages.shift()!);\n\t\t}\n\t\tisDeliveringMessages = false;\n\t};\n\n\tsource((e: T) => {\n\t\tbufferedMessages.push(e);\n\t\tdeliverMessages();\n\t});\n\n\temitter = new Emitter<T>({\n\t\tonFirstListenerAdd: () => {\n\t\t\thasListeners = true;\n\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\tprocess.nextTick(deliverMessages);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\thasListeners = false;\n\t\t}\n\t});\n\n\treturn emitter.event;\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedProtocol implements IMessagePassingProtocol {\n\n\tprivate readonly _actual: Protocol;\n\tpublic readonly onMessage: Event<Buffer>;\n\tpublic readonly onClose: Event<void>;\n\n\tconstructor(actual: Protocol) {\n\t\tthis._actual = actual;\n\t\tthis.onMessage = createBufferedEvent(this._actual.onMessage);\n\t\tthis.onClose = createBufferedEvent(this._actual.onClose);\n\t}\n\n\tpublic send(buffer: Buffer): void {\n\t\tthis._actual.send(buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis._actual.end();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareAnything } from 'vs/base/common/comparers';\nimport { matchesPrefix, IMatch, matchesCamelCase, isUpper } from 'vs/base/common/filters';\nimport { sep } from 'vs/base/common/path';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { stripWildcards, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport type Score = [number /* score */, number[] /* match positions */];\nexport type ScorerCache = { [key: string]: IItemScore };\n\nconst NO_MATCH = 0;\nconst NO_SCORE: Score = [NO_MATCH, []];\n\n// const DEBUG = false;\n// const DEBUG_MATRIX = false;\n\nexport function score(target: string, query: string, queryLower: string, fuzzy: boolean): Score {\n\tif (!target || !query) {\n\t\treturn NO_SCORE; // return early if target or query are undefined\n\t}\n\n\tconst targetLength = target.length;\n\tconst queryLength = query.length;\n\n\tif (targetLength < queryLength) {\n\t\treturn NO_SCORE; // impossible for query to be contained in target\n\t}\n\n\t// if (DEBUG) {\n\t// \tconsole.group(`Target: ${target}, Query: ${query}`);\n\t// }\n\n\tconst targetLower = target.toLowerCase();\n\n\t// When not searching fuzzy, we require the query to be contained fully\n\t// in the target string contiguously.\n\tif (!fuzzy) {\n\t\tconst indexOfQueryInTarget = targetLower.indexOf(queryLower);\n\t\tif (indexOfQueryInTarget === -1) {\n\t\t\t// if (DEBUG) {\n\t\t\t// \tconsole.log(`Characters not matching consecutively ${queryLower} within ${targetLower}`);\n\t\t\t// }\n\n\t\t\treturn NO_SCORE;\n\t\t}\n\t}\n\n\tconst res = doScore(query, queryLower, queryLength, target, targetLower, targetLength);\n\n\t// if (DEBUG) {\n\t// \tconsole.log(`%cFinal Score: ${res[0]}`, 'font-weight: bold');\n\t// \tconsole.groupEnd();\n\t// }\n\n\treturn res;\n}\n\nfunction doScore(query: string, queryLower: string, queryLength: number, target: string, targetLower: string, targetLength: number): Score {\n\tconst scores: number[] = [];\n\tconst matches: number[] = [];\n\n\t//\n\t// Build Scorer Matrix:\n\t//\n\t// The matrix is composed of query q and target t. For each index we score\n\t// q[i] with t[i] and compare that with the previous score. If the score is\n\t// equal or larger, we keep the match. In addition to the score, we also keep\n\t// the length of the consecutive matches to use as boost for the score.\n\t//\n\t//      t   a   r   g   e   t\n\t//  q\n\t//  u\n\t//  e\n\t//  r\n\t//  y\n\t//\n\tfor (let queryIndex = 0; queryIndex < queryLength; queryIndex++) {\n\t\tconst queryIndexOffset = queryIndex * targetLength;\n\t\tconst queryIndexPreviousOffset = queryIndexOffset - targetLength;\n\n\t\tconst queryIndexGtNull = queryIndex > 0;\n\n\t\tconst queryCharAtIndex = query[queryIndex];\n\t\tconst queryLowerCharAtIndex = queryLower[queryIndex];\n\n\t\tfor (let targetIndex = 0; targetIndex < targetLength; targetIndex++) {\n\t\t\tconst targetIndexGtNull = targetIndex > 0;\n\n\t\t\tconst currentIndex = queryIndexOffset + targetIndex;\n\t\t\tconst leftIndex = currentIndex - 1;\n\t\t\tconst diagIndex = queryIndexPreviousOffset + targetIndex - 1;\n\n\t\t\tconst leftScore = targetIndexGtNull ? scores[leftIndex] : 0;\n\t\t\tconst diagScore = queryIndexGtNull && targetIndexGtNull ? scores[diagIndex] : 0;\n\n\t\t\tconst matchesSequenceLength = queryIndexGtNull && targetIndexGtNull ? matches[diagIndex] : 0;\n\n\t\t\t// If we are not matching on the first query character any more, we only produce a\n\t\t\t// score if we had a score previously for the last query index (by looking at the diagScore).\n\t\t\t// This makes sure that the query always matches in sequence on the target. For example\n\t\t\t// given a target of \"ede\" and a query of \"de\", we would otherwise produce a wrong high score\n\t\t\t// for query[1] (\"e\") matching on target[0] (\"e\") because of the \"beginning of word\" boost.\n\t\t\tlet score: number;\n\t\t\tif (!diagScore && queryIndexGtNull) {\n\t\t\t\tscore = 0;\n\t\t\t} else {\n\t\t\t\tscore = computeCharScore(queryCharAtIndex, queryLowerCharAtIndex, target, targetLower, targetIndex, matchesSequenceLength);\n\t\t\t}\n\n\t\t\t// We have a score and its equal or larger than the left score\n\t\t\t// Match: sequence continues growing from previous diag value\n\t\t\t// Score: increases by diag score value\n\t\t\tif (score && diagScore + score >= leftScore) {\n\t\t\t\tmatches[currentIndex] = matchesSequenceLength + 1;\n\t\t\t\tscores[currentIndex] = diagScore + score;\n\t\t\t}\n\n\t\t\t// We either have no score or the score is lower than the left score\n\t\t\t// Match: reset to 0\n\t\t\t// Score: pick up from left hand side\n\t\t\telse {\n\t\t\t\tmatches[currentIndex] = NO_MATCH;\n\t\t\t\tscores[currentIndex] = leftScore;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Restore Positions (starting from bottom right of matrix)\n\tconst positions: number[] = [];\n\tlet queryIndex = queryLength - 1;\n\tlet targetIndex = targetLength - 1;\n\twhile (queryIndex >= 0 && targetIndex >= 0) {\n\t\tconst currentIndex = queryIndex * targetLength + targetIndex;\n\t\tconst match = matches[currentIndex];\n\t\tif (match === NO_MATCH) {\n\t\t\ttargetIndex--; // go left\n\t\t} else {\n\t\t\tpositions.push(targetIndex);\n\n\t\t\t// go up and left\n\t\t\tqueryIndex--;\n\t\t\ttargetIndex--;\n\t\t}\n\t}\n\n\t// Print matrix\n\t// if (DEBUG_MATRIX) {\n\t// printMatrix(query, target, matches, scores);\n\t// }\n\n\treturn [scores[queryLength * targetLength - 1], positions.reverse()];\n}\n\nfunction computeCharScore(queryCharAtIndex: string, queryLowerCharAtIndex: string, target: string, targetLower: string, targetIndex: number, matchesSequenceLength: number): number {\n\tlet score = 0;\n\n\tif (queryLowerCharAtIndex !== targetLower[targetIndex]) {\n\t\treturn score; // no match of characters\n\t}\n\n\t// Character match bonus\n\tscore += 1;\n\n\t// if (DEBUG) {\n\t// \tconsole.groupCollapsed(`%cCharacter match bonus: +1 (char: ${queryLower[queryIndex]} at index ${targetIndex}, total score: ${score})`, 'font-weight: normal');\n\t// }\n\n\t// Consecutive match bonus\n\tif (matchesSequenceLength > 0) {\n\t\tscore += (matchesSequenceLength * 5);\n\n\t\t// if (DEBUG) {\n\t\t// \tconsole.log('Consecutive match bonus: ' + (matchesSequenceLength * 5));\n\t\t// }\n\t}\n\n\t// Same case bonus\n\tif (queryCharAtIndex === target[targetIndex]) {\n\t\tscore += 1;\n\n\t\t// if (DEBUG) {\n\t\t// \tconsole.log('Same case bonus: +1');\n\t\t// }\n\t}\n\n\t// Start of word bonus\n\tif (targetIndex === 0) {\n\t\tscore += 8;\n\n\t\t// if (DEBUG) {\n\t\t// \tconsole.log('Start of word bonus: +8');\n\t\t// }\n\t}\n\n\telse {\n\n\t\t// After separator bonus\n\t\tconst separatorBonus = scoreSeparatorAtPos(target.charCodeAt(targetIndex - 1));\n\t\tif (separatorBonus) {\n\t\t\tscore += separatorBonus;\n\n\t\t\t// if (DEBUG) {\n\t\t\t// \tconsole.log('After separtor bonus: +4');\n\t\t\t// }\n\t\t}\n\n\t\t// Inside word upper case bonus (camel case)\n\t\telse if (isUpper(target.charCodeAt(targetIndex))) {\n\t\t\tscore += 1;\n\n\t\t\t// if (DEBUG) {\n\t\t\t// \tconsole.log('Inside word upper case bonus: +1');\n\t\t\t// }\n\t\t}\n\t}\n\n\t// if (DEBUG) {\n\t// \tconsole.groupEnd();\n\t// }\n\n\treturn score;\n}\n\nfunction scoreSeparatorAtPos(charCode: number): number {\n\tswitch (charCode) {\n\t\tcase CharCode.Slash:\n\t\tcase CharCode.Backslash:\n\t\t\treturn 5; // prefer path separators...\n\t\tcase CharCode.Underline:\n\t\tcase CharCode.Dash:\n\t\tcase CharCode.Period:\n\t\tcase CharCode.Space:\n\t\tcase CharCode.SingleQuote:\n\t\tcase CharCode.DoubleQuote:\n\t\tcase CharCode.Colon:\n\t\t\treturn 4; // ...over other separators\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n\n// function printMatrix(query: string, target: string, matches: number[], scores: number[]): void {\n// \tconsole.log('\\t' + target.split('').join('\\t'));\n// \tfor (let queryIndex = 0; queryIndex < query.length; queryIndex++) {\n// \t\tlet line = query[queryIndex] + '\\t';\n// \t\tfor (let targetIndex = 0; targetIndex < target.length; targetIndex++) {\n// \t\t\tconst currentIndex = queryIndex * target.length + targetIndex;\n// \t\t\tline = line + 'M' + matches[currentIndex] + '/' + 'S' + scores[currentIndex] + '\\t';\n// \t\t}\n\n// \t\tconsole.log(line);\n// \t}\n// }\n\n/**\n * Scoring on structural items that have a label and optional description.\n */\nexport interface IItemScore {\n\n\t/**\n\t * Overall score.\n\t */\n\tscore: number;\n\n\t/**\n\t * Matches within the label.\n\t */\n\tlabelMatch?: IMatch[];\n\n\t/**\n\t * Matches within the description.\n\t */\n\tdescriptionMatch?: IMatch[];\n}\n\nconst NO_ITEM_SCORE: IItemScore = Object.freeze({ score: 0 });\n\nexport interface IItemAccessor<T> {\n\n\t/**\n\t * Just the label of the item to score on.\n\t */\n\tgetItemLabel(item: T): string | null;\n\n\t/**\n\t * The optional description of the item to score on. Can be null.\n\t */\n\tgetItemDescription(item: T): string | null;\n\n\t/**\n\t * If the item is a file, the path of the file to score on. Can be null.\n\t */\n\tgetItemPath(file: T): string | undefined;\n}\n\nconst PATH_IDENTITY_SCORE = 1 << 18;\nconst LABEL_PREFIX_SCORE = 1 << 17;\nconst LABEL_CAMELCASE_SCORE = 1 << 16;\nconst LABEL_SCORE_THRESHOLD = 1 << 15;\n\nexport interface IPreparedQuery {\n\toriginal: string;\n\tvalue: string;\n\tlowercase: string;\n\tcontainsPathSeparator: boolean;\n}\n\n/**\n * Helper function to prepare a search value for scoring in quick open by removing unwanted characters.\n */\nexport function prepareQuery(original: string): IPreparedQuery {\n\tif (!original) {\n\t\toriginal = '';\n\t}\n\n\tlet value = stripWildcards(original).replace(/\\s/g, ''); // get rid of all wildcards and whitespace\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, sep); // Help Windows users to search for paths when using slash\n\t}\n\n\tconst lowercase = value.toLowerCase();\n\tconst containsPathSeparator = value.indexOf(sep) >= 0;\n\n\treturn { original, value, lowercase, containsPathSeparator };\n}\n\nexport function scoreItem<T>(item: T, query: IPreparedQuery, fuzzy: boolean, accessor: IItemAccessor<T>, cache: ScorerCache): IItemScore {\n\tif (!item || !query.value) {\n\t\treturn NO_ITEM_SCORE; // we need an item and query to score on at least\n\t}\n\n\tconst label = accessor.getItemLabel(item);\n\tif (!label) {\n\t\treturn NO_ITEM_SCORE; // we need a label at least\n\t}\n\n\tconst description = accessor.getItemDescription(item);\n\n\tlet cacheHash: string;\n\tif (description) {\n\t\tcacheHash = `${label}${description}${query.value}${fuzzy}`;\n\t} else {\n\t\tcacheHash = `${label}${query.value}${fuzzy}`;\n\t}\n\n\tconst cached = cache[cacheHash];\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tconst itemScore = doScoreItem(label, description, accessor.getItemPath(item), query, fuzzy);\n\tcache[cacheHash] = itemScore;\n\n\treturn itemScore;\n}\n\nfunction createMatches(offsets: undefined | number[]): IMatch[] {\n\tlet ret: IMatch[] = [];\n\tif (!offsets) {\n\t\treturn ret;\n\t}\n\tlet last: IMatch | undefined;\n\tfor (const pos of offsets) {\n\t\tif (last && last.end === pos) {\n\t\t\tlast.end += 1;\n\t\t} else {\n\t\t\tlast = { start: pos, end: pos + 1 };\n\t\t\tret.push(last);\n\t\t}\n\t}\n\treturn ret;\n}\n\nfunction doScoreItem(label: string, description: string | null, path: string | undefined, query: IPreparedQuery, fuzzy: boolean): IItemScore {\n\n\t// 1.) treat identity matches on full path highest\n\tif (path && (isLinux ? query.original === path : equalsIgnoreCase(query.original, path))) {\n\t\treturn { score: PATH_IDENTITY_SCORE, labelMatch: [{ start: 0, end: label.length }], descriptionMatch: description ? [{ start: 0, end: description.length }] : undefined };\n\t}\n\n\t// We only consider label matches if the query is not including file path separators\n\tconst preferLabelMatches = !path || !query.containsPathSeparator;\n\tif (preferLabelMatches) {\n\n\t\t// 2.) treat prefix matches on the label second highest\n\t\tconst prefixLabelMatch = matchesPrefix(query.value, label);\n\t\tif (prefixLabelMatch) {\n\t\t\treturn { score: LABEL_PREFIX_SCORE, labelMatch: prefixLabelMatch };\n\t\t}\n\n\t\t// 3.) treat camelcase matches on the label third highest\n\t\tconst camelcaseLabelMatch = matchesCamelCase(query.value, label);\n\t\tif (camelcaseLabelMatch) {\n\t\t\treturn { score: LABEL_CAMELCASE_SCORE, labelMatch: camelcaseLabelMatch };\n\t\t}\n\n\t\t// 4.) prefer scores on the label if any\n\t\tconst [labelScore, labelPositions] = score(label, query.value, query.lowercase, fuzzy);\n\t\tif (labelScore) {\n\t\t\treturn { score: labelScore + LABEL_SCORE_THRESHOLD, labelMatch: createMatches(labelPositions) };\n\t\t}\n\t}\n\n\t// 5.) finally compute description + label scores if we have a description\n\tif (description) {\n\t\tlet descriptionPrefix = description;\n\t\tif (!!path) {\n\t\t\tdescriptionPrefix = `${description}${sep}`; // assume this is a file path\n\t\t}\n\n\t\tconst descriptionPrefixLength = descriptionPrefix.length;\n\t\tconst descriptionAndLabel = `${descriptionPrefix}${label}`;\n\n\t\tconst [labelDescriptionScore, labelDescriptionPositions] = score(descriptionAndLabel, query.value, query.lowercase, fuzzy);\n\t\tif (labelDescriptionScore) {\n\t\t\tconst labelDescriptionMatches = createMatches(labelDescriptionPositions);\n\t\t\tconst labelMatch: IMatch[] = [];\n\t\t\tconst descriptionMatch: IMatch[] = [];\n\n\t\t\t// We have to split the matches back onto the label and description portions\n\t\t\tlabelDescriptionMatches.forEach(h => {\n\n\t\t\t\t// Match overlaps label and description part, we need to split it up\n\t\t\t\tif (h.start < descriptionPrefixLength && h.end > descriptionPrefixLength) {\n\t\t\t\t\tlabelMatch.push({ start: 0, end: h.end - descriptionPrefixLength });\n\t\t\t\t\tdescriptionMatch.push({ start: h.start, end: descriptionPrefixLength });\n\t\t\t\t}\n\n\t\t\t\t// Match on label part\n\t\t\t\telse if (h.start >= descriptionPrefixLength) {\n\t\t\t\t\tlabelMatch.push({ start: h.start - descriptionPrefixLength, end: h.end - descriptionPrefixLength });\n\t\t\t\t}\n\n\t\t\t\t// Match on description part\n\t\t\t\telse {\n\t\t\t\t\tdescriptionMatch.push(h);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn { score: labelDescriptionScore, labelMatch, descriptionMatch };\n\t\t}\n\t}\n\n\treturn NO_ITEM_SCORE;\n}\n\nexport function compareItemsByScore<T>(itemA: T, itemB: T, query: IPreparedQuery, fuzzy: boolean, accessor: IItemAccessor<T>, cache: ScorerCache, fallbackComparer = fallbackCompare): number {\n\tconst itemScoreA = scoreItem(itemA, query, fuzzy, accessor, cache);\n\tconst itemScoreB = scoreItem(itemB, query, fuzzy, accessor, cache);\n\n\tconst scoreA = itemScoreA.score;\n\tconst scoreB = itemScoreB.score;\n\n\t// 1.) prefer identity matches\n\tif (scoreA === PATH_IDENTITY_SCORE || scoreB === PATH_IDENTITY_SCORE) {\n\t\tif (scoreA !== scoreB) {\n\t\t\treturn scoreA === PATH_IDENTITY_SCORE ? -1 : 1;\n\t\t}\n\t}\n\n\t// 2.) prefer label prefix matches\n\tif (scoreA === LABEL_PREFIX_SCORE || scoreB === LABEL_PREFIX_SCORE) {\n\t\tif (scoreA !== scoreB) {\n\t\t\treturn scoreA === LABEL_PREFIX_SCORE ? -1 : 1;\n\t\t}\n\n\t\tconst labelA = accessor.getItemLabel(itemA) || '';\n\t\tconst labelB = accessor.getItemLabel(itemB) || '';\n\n\t\t// prefer shorter names when both match on label prefix\n\t\tif (labelA.length !== labelB.length) {\n\t\t\treturn labelA.length - labelB.length;\n\t\t}\n\t}\n\n\t// 3.) prefer camelcase matches\n\tif (scoreA === LABEL_CAMELCASE_SCORE || scoreB === LABEL_CAMELCASE_SCORE) {\n\t\tif (scoreA !== scoreB) {\n\t\t\treturn scoreA === LABEL_CAMELCASE_SCORE ? -1 : 1;\n\t\t}\n\n\t\tconst labelA = accessor.getItemLabel(itemA) || '';\n\t\tconst labelB = accessor.getItemLabel(itemB) || '';\n\n\t\t// prefer more compact camel case matches over longer\n\t\tconst comparedByMatchLength = compareByMatchLength(itemScoreA.labelMatch, itemScoreB.labelMatch);\n\t\tif (comparedByMatchLength !== 0) {\n\t\t\treturn comparedByMatchLength;\n\t\t}\n\n\t\t// prefer shorter names when both match on label camelcase\n\t\tif (labelA.length !== labelB.length) {\n\t\t\treturn labelA.length - labelB.length;\n\t\t}\n\t}\n\n\t// 4.) prefer label scores\n\tif (scoreA > LABEL_SCORE_THRESHOLD || scoreB > LABEL_SCORE_THRESHOLD) {\n\t\tif (scoreB < LABEL_SCORE_THRESHOLD) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (scoreA < LABEL_SCORE_THRESHOLD) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t// 5.) compare by score\n\tif (scoreA !== scoreB) {\n\t\treturn scoreA > scoreB ? -1 : 1;\n\t}\n\n\t// 6.) scores are identical, prefer more compact matches (label and description)\n\tconst itemAMatchDistance = computeLabelAndDescriptionMatchDistance(itemA, itemScoreA, accessor);\n\tconst itemBMatchDistance = computeLabelAndDescriptionMatchDistance(itemB, itemScoreB, accessor);\n\tif (itemAMatchDistance && itemBMatchDistance && itemAMatchDistance !== itemBMatchDistance) {\n\t\treturn itemBMatchDistance > itemAMatchDistance ? -1 : 1;\n\t}\n\n\t// 7.) at this point, scores are identical and match compactness as well\n\t// for both items so we start to use the fallback compare\n\treturn fallbackComparer(itemA, itemB, query, accessor);\n}\n\nfunction computeLabelAndDescriptionMatchDistance<T>(item: T, score: IItemScore, accessor: IItemAccessor<T>): number {\n\tlet matchStart: number = -1;\n\tlet matchEnd: number = -1;\n\n\t// If we have description matches, the start is first of description match\n\tif (score.descriptionMatch && score.descriptionMatch.length) {\n\t\tmatchStart = score.descriptionMatch[0].start;\n\t}\n\n\t// Otherwise, the start is the first label match\n\telse if (score.labelMatch && score.labelMatch.length) {\n\t\tmatchStart = score.labelMatch[0].start;\n\t}\n\n\t// If we have label match, the end is the last label match\n\t// If we had a description match, we add the length of the description\n\t// as offset to the end to indicate this.\n\tif (score.labelMatch && score.labelMatch.length) {\n\t\tmatchEnd = score.labelMatch[score.labelMatch.length - 1].end;\n\t\tif (score.descriptionMatch && score.descriptionMatch.length) {\n\t\t\tconst itemDescription = accessor.getItemDescription(item);\n\t\t\tif (itemDescription) {\n\t\t\t\tmatchEnd += itemDescription.length;\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we have just a description match, the end is the last description match\n\telse if (score.descriptionMatch && score.descriptionMatch.length) {\n\t\tmatchEnd = score.descriptionMatch[score.descriptionMatch.length - 1].end;\n\t}\n\n\treturn matchEnd - matchStart;\n}\n\nfunction compareByMatchLength(matchesA?: IMatch[], matchesB?: IMatch[]): number {\n\tif ((!matchesA && !matchesB) || ((!matchesA || !matchesA.length) && (!matchesB || !matchesB.length))) {\n\t\treturn 0; // make sure to not cause bad comparing when matches are not provided\n\t}\n\n\tif (!matchesB || !matchesB.length) {\n\t\treturn -1;\n\t}\n\n\tif (!matchesA || !matchesA.length) {\n\t\treturn 1;\n\t}\n\n\t// Compute match length of A (first to last match)\n\tconst matchStartA = matchesA[0].start;\n\tconst matchEndA = matchesA[matchesA.length - 1].end;\n\tconst matchLengthA = matchEndA - matchStartA;\n\n\t// Compute match length of B (first to last match)\n\tconst matchStartB = matchesB[0].start;\n\tconst matchEndB = matchesB[matchesB.length - 1].end;\n\tconst matchLengthB = matchEndB - matchStartB;\n\n\t// Prefer shorter match length\n\treturn matchLengthA === matchLengthB ? 0 : matchLengthB < matchLengthA ? 1 : -1;\n}\n\nexport function fallbackCompare<T>(itemA: T, itemB: T, query: IPreparedQuery, accessor: IItemAccessor<T>): number {\n\n\t// check for label + description length and prefer shorter\n\tconst labelA = accessor.getItemLabel(itemA) || '';\n\tconst labelB = accessor.getItemLabel(itemB) || '';\n\n\tconst descriptionA = accessor.getItemDescription(itemA);\n\tconst descriptionB = accessor.getItemDescription(itemB);\n\n\tconst labelDescriptionALength = labelA.length + (descriptionA ? descriptionA.length : 0);\n\tconst labelDescriptionBLength = labelB.length + (descriptionB ? descriptionB.length : 0);\n\n\tif (labelDescriptionALength !== labelDescriptionBLength) {\n\t\treturn labelDescriptionALength - labelDescriptionBLength;\n\t}\n\n\t// check for path length and prefer shorter\n\tconst pathA = accessor.getItemPath(itemA);\n\tconst pathB = accessor.getItemPath(itemB);\n\n\tif (pathA && pathB && pathA.length !== pathB.length) {\n\t\treturn pathA.length - pathB.length;\n\t}\n\n\t// 7.) finally we have equal scores and equal length, we fallback to comparer\n\n\t// compare by label\n\tif (labelA !== labelB) {\n\t\treturn compareAnything(labelA, labelB, query.value);\n\t}\n\n\t// compare by description\n\tif (descriptionA && descriptionB && descriptionA !== descriptionB) {\n\t\treturn compareAnything(descriptionA, descriptionB, query.value);\n\t}\n\n\t// compare by path\n\tif (pathA && pathB && pathA !== pathB) {\n\t\treturn compareAnything(pathA, pathB, query.value);\n\t}\n\n\t// equal\n\treturn 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new postion from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Clone this selection.\n\t */\n\tpublic clone(): Selection {\n\t\treturn new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Uint8Matrix {\n\n\tprivate readonly _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tlet data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32Array(arr: number[]): Uint32Array {\n\tlet len = arr.length;\n\tlet r = new Uint32Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tr[i] = toUint32(arr[i]);\n\t}\n\treturn r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/editor/common/core/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprivate _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprivate _map: Map<number, number>;\n\n\tprivate _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IModelContentChange, IModelContentChangedEvent, IModelDecorationsChangedEvent, IModelLanguageChangedEvent, IModelLanguageConfigurationChangedEvent, IModelOptionsChangedEvent, IModelTokensChangedEvent, ModelRawContentChangedEvent } from 'vs/editor/common/model/textModelEvents';\nimport { SearchData } from 'vs/editor/common/model/textModelSearch';\nimport { LanguageId, LanguageIdentifier, FormattingOptions } from 'vs/editor/common/modes';\nimport { ITextSnapshot } from 'vs/platform/files/common/files';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions {\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tcolor: string | ThemeColor | undefined;\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tdarkColor?: string | ThemeColor;\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * Customize the growing behavior of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?: TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?: string | null;\n\t/**\n\t * Message to be rendered when hovering over the glyph margin decoration.\n\t */\n\tglyphMarginHoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Array of MarkdownString to render as the decoration message.\n\t */\n\thoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?: boolean;\n\t/**\n\t * Always render the decoration (even when the range it encompasses is collapsed).\n\t * @internal\n\t */\n\tshowIfCollapsed?: boolean;\n\t/**\n\t * Collapse the decoration if its entire range is being replaced via an edit.\n\t * @internal\n\t */\n\tcollapseOnReplaceEdit?: boolean;\n\t/**\n\t * Specifies the stack order of a decoration.\n\t * A decoration with greater stack order is always in front of a decoration with a lower stack order.\n\t */\n\tzIndex?: number;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?: IModelDecorationOverviewRulerOptions | null;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the margin (covering its full width) with this CSS class name.\n\t */\n\tmarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?: string | null;\n\t/**\n\t * If there is an `inlineClassName` which affects letter spacing.\n\t */\n\tinlineClassNameAffectsLetterSpacing?: boolean;\n\t/**\n\t * If set, the decoration will be rendered before the text with this CSS class name.\n\t */\n\tbeforeContentClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered after the text with this CSS class name.\n\t */\n\tafterContentClassName?: string | null;\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\treadonly id: string;\n\t/**\n\t * Identifier for a decoration's owner.\n\t */\n\treadonly ownerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\treadonly range: Range;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\treadonly options: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n * @internal\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range: IRange, options: IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id: string, newRange: IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions: IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id: string): void;\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[];\n}\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\treadonly word: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport const enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * An identifier for a single edit operation.\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor: number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor: number;\n}\n\n/**\n * A single edit operation, that acts as a simple replace.\n * i.e. Replace text at `range` with `text` in model.\n */\nexport interface ISingleEditOperation {\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string | null;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier?: ISingleEditOperationIdentifier | null;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: Range;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string | null;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n\t/**\n\t * This indicates that this operation is inserting automatic whitespace\n\t * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.\n\t * @internal\n\t */\n\tisAutoWhitespaceEdit?: boolean;\n\t/**\n\t * This indicates that this operation is in a set of operations that are tracked and should not be \"simplified\".\n\t * @internal\n\t */\n\t_isTracked?: boolean;\n}\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations: IIdentifiedSingleEditOperation[]): Selection[] | null;\n}\n\nexport class TextModelResolvedOptions {\n\t_textModelResolvedOptionsBrand: void;\n\n\treadonly tabSize: number;\n\treadonly indentSize: number;\n\treadonly insertSpaces: boolean;\n\treadonly defaultEOL: DefaultEndOfLine;\n\treadonly trimAutoWhitespace: boolean;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(src: {\n\t\ttabSize: number;\n\t\tindentSize: number;\n\t\tinsertSpaces: boolean;\n\t\tdefaultEOL: DefaultEndOfLine;\n\t\ttrimAutoWhitespace: boolean;\n\t}) {\n\t\tthis.tabSize = src.tabSize | 0;\n\t\tthis.indentSize = src.tabSize | 0;\n\t\tthis.insertSpaces = Boolean(src.insertSpaces);\n\t\tthis.defaultEOL = src.defaultEOL | 0;\n\t\tthis.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: TextModelResolvedOptions): boolean {\n\t\treturn (\n\t\t\tthis.tabSize === other.tabSize\n\t\t\t&& this.indentSize === other.indentSize\n\t\t\t&& this.insertSpaces === other.insertSpaces\n\t\t\t&& this.defaultEOL === other.defaultEOL\n\t\t\t&& this.trimAutoWhitespace === other.trimAutoWhitespace\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts: TextModelResolvedOptions): IModelOptionsChangedEvent {\n\t\treturn {\n\t\t\ttabSize: this.tabSize !== newOpts.tabSize,\n\t\t\tindentSize: this.indentSize !== newOpts.indentSize,\n\t\t\tinsertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n\t\t\ttrimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITextModelCreationOptions {\n\ttabSize: number;\n\tindentSize: number;\n\tinsertSpaces: boolean;\n\tdetectIndentation: boolean;\n\ttrimAutoWhitespace: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n\tisForSimpleWidget: boolean;\n\tlargeFileOptimizations: boolean;\n}\n\nexport interface ITextModelUpdateOptions {\n\ttabSize?: number;\n\tindentSize?: number;\n\tinsertSpaces?: boolean;\n\ttrimAutoWhitespace?: boolean;\n}\n\nexport class FindMatch {\n\t_findMatchBrand: void;\n\n\tpublic readonly range: Range;\n\tpublic readonly matches: string[] | null;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(range: Range, matches: string[] | null) {\n\t\tthis.range = range;\n\t\tthis.matches = matches;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IFoundBracket {\n\trange: Range;\n\topen: string;\n\tclose: string;\n\tisOpen: boolean;\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport const enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * @internal\n */\nexport interface IActiveIndentGuideInfo {\n\tstartLineNumber: number;\n\tendLineNumber: number;\n\tindent: number;\n}\n\n/**\n * A model.\n */\nexport interface ITextModel {\n\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * This model is constructed for a simple widget code editor.\n\t * @internal\n\t */\n\treadonly isForSimpleWidget: boolean;\n\n\t/**\n\t * If true, the text model might contain RTL.\n\t * If false, the text model **contains only** contain LTR.\n\t * @internal\n\t */\n\tmightContainRTL(): boolean;\n\n\t/**\n\t * If true, the text model might contain non basic ASCII.\n\t * If false, the text model **contains only** basic ASCII.\n\t * @internal\n\t */\n\tmightContainNonBasicASCII(): boolean;\n\n\t/**\n\t * Get the resolved options for this model.\n\t */\n\tgetOptions(): TextModelResolvedOptions;\n\n\t/**\n\t * Get the formatting options for this model.\n\t * @internal\n\t */\n\tgetFormattingOptions(): FormattingOptions;\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue: string): void;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t * @internal\n\t */\n\tsetValueFromTextBuffer(newValue: ITextBuffer): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?: EndOfLinePreference, preserveBOM?: boolean): string;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text snapshot (it is safe to consume it asynchronously).\n\t * @internal\n\t */\n\tcreateSnapshot(preserveBOM?: boolean): ITextSnapshot;\n\n\t/**\n\t * Get the length of the text stored in this model.\n\t */\n\tgetValueLength(eol?: EndOfLinePreference, preserveBOM?: boolean): number;\n\n\t/**\n\t * Check if the raw text stored in this model equals another raw text.\n\t * @internal\n\t */\n\tequalsTextBuffer(other: ITextBuffer): boolean;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range: IRange, eol?: EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range: IRange): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t * @internal\n\t */\n\tisDominatedByLongLines(): boolean;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber: number): string;\n\n\t/**\n\t * Get the text length for a certain line.\n\t */\n\tgetLineLength(lineNumber: number): number;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber: number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Create a valid position,\n\t */\n\tvalidatePosition(position: IPosition): Position;\n\n\t/**\n\t * Advances the given position by the given offset (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the offset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): Position;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range: IRange): Range;\n\n\t/**\n\t * Converts the position to a zero-based offset.\n\t *\n\t * The position will be [adjusted](#TextDocument.validatePosition).\n\t *\n\t * @param position A position.\n\t * @return A valid zero-based offset.\n\t */\n\tgetOffsetAt(position: IPosition): number;\n\n\t/**\n\t * Converts a zero-based offset to a position.\n\t *\n\t * @param offset A zero-based offset.\n\t * @return A valid [position](#Position).\n\t */\n\tgetPositionAt(offset: number): Position;\n\n\t/**\n\t * Get a range covering the entire model\n\t */\n\tgetFullModelRange(): Range;\n\n\t/**\n\t * Returns if the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * @internal\n\t */\n\ttokenizeViewport(startLineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * This model is so large that it would not be a good idea to sync it over\n\t * to web workers or other places.\n\t * @internal\n\t */\n\tisTooLargeForSyncing(): boolean;\n\n\t/**\n\t * The file is so large, that even tokenization is disabled.\n\t * @internal\n\t */\n\tisTooLargeForTokenization(): boolean;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString: string, searchOnlyEditableRange: boolean, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside this range.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if no matches have been found.\n\t */\n\tfindMatches(searchString: string, searchScope: IRange, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model for the next match. Loops to the beginning of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the next match is. It is null if no next match has been found.\n\t */\n\tfindNextMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\t/**\n\t * Search the model for the previous match. Loops to the end of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the previous match is. It is null if no previous match has been found.\n\t */\n\tfindPreviousMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\n\t/**\n\t * Flush all tokenization state.\n\t * @internal\n\t */\n\tflushTokens(): void;\n\n\t/**\n\t * Force tokenization information for `lineNumber` to be accurate.\n\t * @internal\n\t */\n\tforceTokenization(lineNumber: number): void;\n\n\t/**\n\t * If it is cheap, force tokenization information for `lineNumber` to be accurate.\n\t * This is based on a heuristic.\n\t * @internal\n\t */\n\ttokenizeIfCheap(lineNumber: number): void;\n\n\t/**\n\t * Check if calling `forceTokenization` for this `lineNumber` will be cheap (time-wise).\n\t * This is based on a heuristic.\n\t * @internal\n\t */\n\tisCheapToTokenize(lineNumber: number): boolean;\n\n\t/**\n\t * Get the tokens for the line `lineNumber`.\n\t * The tokens might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLineTokens(lineNumber: number): LineTokens;\n\n\t/**\n\t * Get the language associated with this model.\n\t * @internal\n\t */\n\tgetLanguageIdentifier(): LanguageIdentifier;\n\n\t/**\n\t * Get the language associated with this model.\n\t */\n\tgetModeId(): string;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t * @internal\n\t */\n\tsetMode(languageIdentifier: LanguageIdentifier): void;\n\n\t/**\n\t * Returns the real (inner-most) language mode at a given position.\n\t * The result might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLanguageIdAtPosition(lineNumber: number, column: number): LanguageId;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position: IPosition): IWordAtPosition | null;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position: IPosition): IWordAtPosition;\n\n\t/**\n\t * Find the matching bracket of `request` up, counting brackets.\n\t * @param request The bracket we're searching for\n\t * @param position The position at which to start the search.\n\t * @return The range of the matching bracket, or null if the bracket match was not found.\n\t * @internal\n\t */\n\tfindMatchingBracketUp(bracket: string, position: IPosition): Range | null;\n\n\t/**\n\t * Find the first bracket in the model before `position`.\n\t * @param position The position at which to start the search.\n\t * @return The info for the first bracket before `position`, or null if there are no more brackets before `positions`.\n\t * @internal\n\t */\n\tfindPrevBracket(position: IPosition): IFoundBracket | null;\n\n\t/**\n\t * Find the first bracket in the model after `position`.\n\t * @param position The position at which to start the search.\n\t * @return The info for the first bracket after `position`, or null if there are no more brackets after `positions`.\n\t * @internal\n\t */\n\tfindNextBracket(position: IPosition): IFoundBracket | null;\n\n\t/**\n\t * Given a `position`, if the position is on top or near a bracket,\n\t * find the matching bracket of that bracket and return the ranges of both brackets.\n\t * @param position The position at which to look for a bracket.\n\t * @internal\n\t */\n\tmatchBracket(position: IPosition): [Range, Range] | null;\n\n\t/**\n\t * @internal\n\t */\n\tgetActiveIndentGuide(lineNumber: number, minLineNumber: number, maxLineNumber: number): IActiveIndentGuideInfo;\n\n\t/**\n\t * @internal\n\t */\n\tgetLinesIndentGuides(startLineNumber: number, endLineNumber: number): number[];\n\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @internal\n\t */\n\tchangeDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T, ownerId?: number): T | null;\n\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[], ownerId?: number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t * @internal\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId: number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id: string): IModelDecorationOptions | null;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id: string): Range | null;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber: number, endLineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range: IRange, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations that should be rendered in the overview ruler as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetOverviewRulerDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * @internal\n\t */\n\t_getTrackedRange(id: string): Range | null;\n\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: null, newStickiness: TrackedRangeStickiness): null;\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: Range, newStickiness: TrackedRangeStickiness): string;\n\n\t/**\n\t * Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs).\n\t */\n\tnormalizeIndentation(str: string): string;\n\n\t/**\n\t * Change the options of this model.\n\t */\n\tupdateOptions(newOpts: ITextModelUpdateOptions): void;\n\n\t/**\n\t * Detect the indentation options for this model from its content.\n\t */\n\tdetectIndentation(defaultInsertSpaces: boolean, defaultTabSize: number): void;\n\n\t/**\n\t * Push a stack element onto the undo stack. This acts as an undo/redo point.\n\t * The idea is to use `pushEditOperations` to edit the model and then to\n\t * `pushStackElement` to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operations. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState: Selection[], editOperations: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): Selection[] | null;\n\n\t/**\n\t * Change the end of line sequence. This is the preferred way of\n\t * changing the eol sequence. This will land on the undo stack.\n\t */\n\tpushEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return The inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[]): IIdentifiedSingleEditOperation[];\n\n\t/**\n\t * Change the end of line sequence without recording in the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEOL for the preferred way.\n\t */\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Undo edit operations until the first previous stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t * @internal\n\t */\n\tundo(): Selection[] | null;\n\n\t/**\n\t * Is there anything in the undo stack?\n\t * @internal\n\t */\n\tcanUndo(): boolean;\n\n\t/**\n\t * Redo edit operations until the next stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t * @internal\n\t */\n\tredo(): Selection[] | null;\n\n\t/**\n\t * Is there anything in the redo stack?\n\t * @internal\n\t */\n\tcanRedo(): boolean;\n\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\tonDidChangeRawContentFast(listener: (e: ModelRawContentChangedEvent) => void): IDisposable;\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\tonDidChangeRawContent(listener: (e: ModelRawContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the contents of the model have changed.\n\t * @event\n\t */\n\tonDidChangeContent(listener: (e: IModelContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when decorations of the model have changed.\n\t * @event\n\t */\n\tonDidChangeDecorations(listener: (e: IModelDecorationsChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the model options have changed.\n\t * @event\n\t */\n\tonDidChangeOptions(listener: (e: IModelOptionsChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the language associated with the model has changed.\n\t * @event\n\t */\n\tonDidChangeLanguage(listener: (e: IModelLanguageChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the language configuration associated with the model has changed.\n\t * @event\n\t */\n\tonDidChangeLanguageConfiguration(listener: (e: IModelLanguageConfigurationChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the tokens associated with the model have changed.\n\t * @event\n\t * @internal\n\t */\n\tonDidChangeTokens(listener: (e: IModelTokensChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted right before disposing the model.\n\t * @event\n\t */\n\tonWillDispose(listener: () => void): IDisposable;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeAttached(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeDetached(): void;\n\n\t/**\n\t * Returns if this model is attached to an editor or not.\n\t * @internal\n\t */\n\tisAttachedToEditor(): boolean;\n\n\t/**\n\t * Returns the count of editors this model is attached to.\n\t * @internal\n\t */\n\tgetAttachedEditorCount(): number;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferBuilder {\n\tacceptChunk(chunk: string): void;\n\tfinish(): ITextBufferFactory;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferFactory {\n\tcreate(defaultEOL: DefaultEndOfLine): ITextBuffer;\n\tgetFirstLineText(lengthLimit: number): string;\n}\n\n/**\n * @internal\n */\nexport interface ITextBuffer {\n\tequals(other: ITextBuffer): boolean;\n\tmightContainRTL(): boolean;\n\tmightContainNonBasicASCII(): boolean;\n\tgetBOM(): string;\n\tgetEOL(): string;\n\n\tgetOffsetAt(lineNumber: number, column: number): number;\n\tgetPositionAt(offset: number): Position;\n\tgetRangeAt(offset: number, length: number): Range;\n\n\tgetValueInRange(range: Range, eol: EndOfLinePreference): string;\n\tcreateSnapshot(preserveBOM: boolean): ITextSnapshot;\n\tgetValueLengthInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetLength(): number;\n\tgetLineCount(): number;\n\tgetLinesContent(): string[];\n\tgetLineContent(lineNumber: number): string;\n\tgetLineCharCode(lineNumber: number, index: number): number;\n\tgetLineLength(lineNumber: number): number;\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\n\tsetEOL(newEOL: '\\r\\n' | '\\n'): void;\n\tapplyEdits(rawOperations: IIdentifiedSingleEditOperation[], recordTrimAutoWhitespace: boolean): ApplyEditsResult;\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[];\n}\n\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n\n\tconstructor(\n\t\tpublic readonly reverseEdits: IIdentifiedSingleEditOperation[],\n\t\tpublic readonly changes: IInternalModelContentChange[],\n\t\tpublic readonly trimAutoWhitespaceLineNumbers: number[] | null\n\t) { }\n\n}\n\n/**\n * @internal\n */\nexport interface IInternalModelContentChange extends IModelContentChange {\n\trange: Range;\n\tforceMoveMarkers: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWordAtPosition } from 'vs/editor/common/model';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nfunction getWordAtPosFast(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// find whitespace enclosed text around column and match from there\n\n\tlet pos = column - 1 - textOffset;\n\tlet start = text.lastIndexOf(' ', pos - 1) + 1;\n\n\twordDefinition.lastIndex = start;\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\n\nfunction getWordAtPosSlow(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// matches all words starting at the beginning\n\t// of the input until it finds a match that encloses\n\t// the desired column. slow but correct\n\n\tlet pos = column - 1 - textOffset;\n\twordDefinition.lastIndex = 0;\n\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex > pos) {\n\t\t\t// |nW -> matched only after the pos\n\t\t\treturn null;\n\n\t\t} else if (wordDefinition.lastIndex >= pos) {\n\t\t\t// W|W -> match encloses pos\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\n\t// if `words` can contain whitespace character we have to use the slow variant\n\t// otherwise we use the fast variant of finding a word\n\twordDefinition.lastIndex = 0;\n\tlet match = wordDefinition.exec(text);\n\tif (!match) {\n\t\treturn null;\n\t}\n\t// todo@joh the `match` could already be the (first) word\n\tconst ret = match[0].indexOf(' ') >= 0\n\t\t// did match a word which contains a space character -> use slow word find\n\t\t? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n\t\t// sane word definition -> use fast word find\n\t\t: getWordAtPosFast(column, wordDefinition, text, textOffset);\n\n\t// both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n\t// in an undefined state and to not confuse other users of the wordDefinition\n\t// we reset the lastIndex\n\twordDefinition.lastIndex = 0;\n\n\treturn ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StandardTokenType } from 'vs/editor/common/modes';\n\n/**\n * Describes how comments for a language work.\n */\nexport interface CommentRule {\n\t/**\n\t * The line comment token, like `// this is a comment`\n\t */\n\tlineComment?: string | null;\n\t/**\n\t * The block comment character pair, like `/* block comment *&#47;`\n\t */\n\tblockComment?: CharacterPair | null;\n}\n\n/**\n * The language configuration interface defines the contract between extensions and\n * various editor features, like automatic bracket insertion, automatic indentation etc.\n */\nexport interface LanguageConfiguration {\n\t/**\n\t * The language's comment settings.\n\t */\n\tcomments?: CommentRule;\n\t/**\n\t * The language's brackets.\n\t * This configuration implicitly affects pressing Enter around these brackets.\n\t */\n\tbrackets?: CharacterPair[];\n\t/**\n\t * The language's word definition.\n\t * If the language supports Unicode identifiers (e.g. JavaScript), it is preferable\n\t * to provide a word definition that uses exclusion of known separators.\n\t * e.g.: A regex that matches anything except known separators (and dot is allowed to occur in a floating point number):\n\t *   /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n\t */\n\twordPattern?: RegExp;\n\t/**\n\t * The language's indentation settings.\n\t */\n\tindentationRules?: IndentationRule;\n\t/**\n\t * The language's rules to be evaluated when pressing Enter.\n\t */\n\tonEnterRules?: OnEnterRule[];\n\t/**\n\t * The language's auto closing pairs. The 'close' character is automatically inserted with the\n\t * 'open' character is typed. If not set, the configured brackets will be used.\n\t */\n\tautoClosingPairs?: IAutoClosingPairConditional[];\n\t/**\n\t * The language's surrounding pairs. When the 'open' character is typed on a selection, the\n\t * selected string is surrounded by the open and close characters. If not set, the autoclosing pairs\n\t * settings will be used.\n\t */\n\tsurroundingPairs?: IAutoClosingPair[];\n\n\t/**\n\t * Defines what characters must be after the cursor for bracket or quote autoclosing to occur when using the \\'languageDefined\\' autoclosing setting.\n\t *\n\t * This is typically the set of characters which can not start an expression, such as whitespace, closing brackets, non-unary operators, etc.\n\t */\n\tautoCloseBefore?: string;\n\n\t/**\n\t * The language's folding rules.\n\t */\n\tfolding?: FoldingRules;\n\n\t/**\n\t * **Deprecated** Do not use.\n\t *\n\t * @deprecated Will be replaced by a better API soon.\n\t */\n\t__electricCharacterSupport?: IBracketElectricCharacterContribution;\n}\n\n/**\n * Describes indentation rules for a language.\n */\nexport interface IndentationRule {\n\t/**\n\t * If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).\n\t */\n\tdecreaseIndentPattern: RegExp;\n\t/**\n\t * If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).\n\t */\n\tincreaseIndentPattern: RegExp;\n\t/**\n\t * If a line matches this pattern, then **only the next line** after it should be indented once.\n\t */\n\tindentNextLinePattern?: RegExp | null;\n\t/**\n\t * If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.\n\t */\n\tunIndentedLinePattern?: RegExp | null;\n\n}\n\n/**\n * Describes language specific folding markers such as '#region' and '#endregion'.\n * The start and end regexes will be tested against the contents of all lines and must be designed efficiently:\n * - the regex should start with '^'\n * - regexp flags (i, g) are ignored\n */\nexport interface FoldingMarkers {\n\tstart: RegExp;\n\tend: RegExp;\n}\n\n/**\n * Describes folding rules for a language.\n */\nexport interface FoldingRules {\n\t/**\n\t * Used by the indentation based strategy to decide whether empty lines belong to the previous or the next block.\n\t * A language adheres to the off-side rule if blocks in that language are expressed by their indentation.\n\t * See [wikipedia](https://en.wikipedia.org/wiki/Off-side_rule) for more information.\n\t * If not set, `false` is used and empty lines belong to the previous block.\n\t */\n\toffSide?: boolean;\n\n\t/**\n\t * Region markers used by the language.\n\t */\n\tmarkers?: FoldingMarkers;\n}\n\n/**\n * Describes a rule to be evaluated when pressing Enter.\n */\nexport interface OnEnterRule {\n\t/**\n\t * This rule will only execute if the text before the cursor matches this regular expression.\n\t */\n\tbeforeText: RegExp;\n\t/**\n\t * This rule will only execute if the text after the cursor matches this regular expression.\n\t */\n\tafterText?: RegExp;\n\t/**\n\t * This rule will only execute if the text above the this line matches this regular expression.\n\t */\n\toneLineAboveText?: RegExp;\n\t/**\n\t * The action to execute.\n\t */\n\taction: EnterAction;\n}\n\nexport interface IBracketElectricCharacterContribution {\n\tdocComment?: IDocComment;\n}\n\n/**\n * Definition of documentation comments (e.g. Javadoc/JSdoc)\n */\nexport interface IDocComment {\n\t/**\n\t * The string that starts a doc comment (e.g. '/**')\n\t */\n\topen: string;\n\t/**\n\t * The string that appears on the last line and closes the doc comment (e.g. ' * /').\n\t */\n\tclose?: string;\n}\n\n/**\n * A tuple of two characters, like a pair of\n * opening and closing brackets.\n */\nexport type CharacterPair = [string, string];\n\nexport interface IAutoClosingPair {\n\topen: string;\n\tclose: string;\n}\n\nexport interface IAutoClosingPairConditional extends IAutoClosingPair {\n\tnotIn?: string[];\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\n/**\n * Describes what to do when pressing Enter.\n */\nexport interface EnterAction {\n\t/**\n\t * Describe what to do with the indentation.\n\t */\n\tindentAction: IndentAction;\n\t/**\n\t * Describes text to be appended after the new line and after the indentation.\n\t */\n\tappendText?: string;\n\t/**\n\t * Describes the number of characters to remove from the new line's indentation.\n\t */\n\tremoveText?: number;\n}\n\n/**\n * @internal\n */\nexport class StandardAutoClosingPairConditional {\n\t_standardAutoClosingPairConditionalBrand: void;\n\n\treadonly open: string;\n\treadonly close: string;\n\tprivate readonly _standardTokenMask: number;\n\n\tconstructor(source: IAutoClosingPairConditional) {\n\t\tthis.open = source.open;\n\t\tthis.close = source.close;\n\n\t\t// initially allowed in all tokens\n\t\tthis._standardTokenMask = 0;\n\n\t\tif (Array.isArray(source.notIn)) {\n\t\t\tfor (let i = 0, len = source.notIn.length; i < len; i++) {\n\t\t\t\tlet notIn = source.notIn[i];\n\t\t\t\tswitch (notIn) {\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tthis._standardTokenMask |= StandardTokenType.String;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'comment':\n\t\t\t\t\t\tthis._standardTokenMask |= StandardTokenType.Comment;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'regex':\n\t\t\t\t\t\tthis._standardTokenMask |= StandardTokenType.RegEx;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic isOK(standardToken: StandardTokenType): boolean {\n\t\treturn (this._standardTokenMask & <number>standardToken) === 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRelativePattern, match as matchGlobPattern } from 'vs/base/common/glob';\nimport { URI } from 'vs/base/common/uri'; // TODO@Alex\n\nexport interface LanguageFilter {\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string | IRelativePattern;\n\t/**\n\t * This provider is implemented in the UI thread.\n\t */\n\thasAccessToAllModels?: boolean;\n\texclusive?: boolean;\n}\n\nexport type LanguageSelector = string | LanguageFilter | Array<string | LanguageFilter>;\n\nexport function score(selector: LanguageSelector | undefined, candidateUri: URI, candidateLanguage: string, candidateIsSynchronized: boolean): number {\n\n\tif (Array.isArray(selector)) {\n\t\t// array -> take max individual value\n\t\tlet ret = 0;\n\t\tfor (const filter of selector) {\n\t\t\tconst value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized);\n\t\t\tif (value === 10) {\n\t\t\t\treturn value; // already at the highest\n\t\t\t}\n\t\t\tif (value > ret) {\n\t\t\t\tret = value;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t} else if (typeof selector === 'string') {\n\n\t\tif (!candidateIsSynchronized) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// short-hand notion, desugars to\n\t\t// 'fooLang' -> { language: 'fooLang'}\n\t\t// '*' -> { language: '*' }\n\t\tif (selector === '*') {\n\t\t\treturn 5;\n\t\t} else if (selector === candidateLanguage) {\n\t\t\treturn 10;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\n\t} else if (selector) {\n\t\t// filter -> select accordingly, use defaults for scheme\n\t\tconst { language, pattern, scheme, hasAccessToAllModels } = selector;\n\n\t\tif (!candidateIsSynchronized && !hasAccessToAllModels) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet ret = 0;\n\n\t\tif (scheme) {\n\t\t\tif (scheme === candidateUri.scheme) {\n\t\t\t\tret = 10;\n\t\t\t} else if (scheme === '*') {\n\t\t\t\tret = 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (language) {\n\t\t\tif (language === candidateLanguage) {\n\t\t\t\tret = 10;\n\t\t\t} else if (language === '*') {\n\t\t\t\tret = Math.max(ret, 5);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (pattern) {\n\t\t\tif (pattern === candidateUri.fsPath || matchGlobPattern(pattern, candidateUri.fsPath)) {\n\t\t\t\tret = 10;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { Uint8Matrix } from 'vs/editor/common/core/uint';\nimport { ILink } from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class StateMachine {\n\n\tprivate readonly _states: Uint8Matrix;\n\tprivate readonly _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tlet result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ColorId, ITokenizationRegistry, ITokenizationSupport, ITokenizationSupportChangedEvent } from 'vs/editor/common/modes';\n\nexport class TokenizationRegistryImpl implements ITokenizationRegistry {\n\n\tprivate readonly _map: { [language: string]: ITokenizationSupport };\n\tprivate readonly _promises: { [language: string]: Thenable<void> };\n\n\tprivate readonly _onDidChange = new Emitter<ITokenizationSupportChangedEvent>();\n\tpublic readonly onDidChange: Event<ITokenizationSupportChangedEvent> = this._onDidChange.event;\n\n\tprivate _colorMap: Color[] | null;\n\n\tconstructor() {\n\t\tthis._map = Object.create(null);\n\t\tthis._promises = Object.create(null);\n\t\tthis._colorMap = null;\n\t}\n\n\tpublic fire(languages: string[]): void {\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: languages,\n\t\t\tchangedColorMap: false\n\t\t});\n\t}\n\n\tpublic register(language: string, support: ITokenizationSupport) {\n\t\tthis._map[language] = support;\n\t\tthis.fire([language]);\n\t\treturn toDisposable(() => {\n\t\t\tif (this._map[language] !== support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdelete this._map[language];\n\t\t\tthis.fire([language]);\n\t\t});\n\t}\n\n\tpublic registerPromise(language: string, supportPromise: Thenable<ITokenizationSupport | null>): IDisposable {\n\n\t\tlet registration: IDisposable | null = null;\n\t\tlet isDisposed: boolean = false;\n\n\t\tthis._promises[language] = supportPromise.then(support => {\n\t\t\tdelete this._promises[language];\n\t\t\tif (isDisposed || !support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tregistration = this.register(language, support);\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\tisDisposed = true;\n\t\t\tif (registration) {\n\t\t\t\tregistration.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getPromise(language: string): Thenable<ITokenizationSupport> | null {\n\t\tconst support = this.get(language);\n\t\tif (support) {\n\t\t\treturn Promise.resolve(support);\n\t\t}\n\t\tconst promise = this._promises[language];\n\t\tif (promise) {\n\t\t\treturn promise.then(_ => this.get(language));\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get(language: string): ITokenizationSupport {\n\t\treturn (this._map[language] || null);\n\t}\n\n\tpublic setColorMap(colorMap: Color[]): void {\n\t\tthis._colorMap = colorMap;\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: Object.keys(this._map),\n\t\t\tchangedColorMap: true\n\t\t});\n\t}\n\n\tpublic getColorMap(): Color[] | null {\n\t\treturn this._colorMap;\n\t}\n\n\tpublic getDefaultBackground(): Color | null {\n\t\tif (this._colorMap && this._colorMap.length > ColorId.DefaultBackground) {\n\t\t\treturn this._colorMap[ColorId.DefaultBackground];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint32 } from 'vs/editor/common/core/uint';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index: number, remainder: number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcnt = toUint32(cnt);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet maxCnt = oldValues.length - startIndex;\n\t\tif (cnt >= maxCnt) {\n\t\t\tcnt = maxCnt;\n\t\t}\n\n\t\tif (cnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getAccumulatedValue(index);\n\t}\n\n\tprivate _getAccumulatedValue(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalValue();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n\nexport class PrefixSumComputerWithCache {\n\n\tprivate readonly _actual: PrefixSumComputer;\n\tprivate _cacheAccumulatedValueStart: number = 0;\n\tprivate _cache: PrefixSumIndexOfResult[] | null = null;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis._actual = new PrefixSumComputer(values);\n\t\tthis._bustCache();\n\t}\n\n\tprivate _bustCache(): void {\n\t\tthis._cacheAccumulatedValueStart = 0;\n\t\tthis._cache = null;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): void {\n\t\tif (this._actual.insertValues(insertIndex, insertValues)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic changeValue(index: number, value: number): void {\n\t\tif (this._actual.changeValue(index, value)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): void {\n\t\tif (this._actual.removeValues(startIndex, cnt)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\treturn this._actual.getTotalValue();\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\treturn this._actual.getAccumulatedValue(index);\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tif (this._cache !== null) {\n\t\t\tlet cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n\t\t\tif (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n\t\t\t\t// Cache hit!\n\t\t\t\treturn this._cache[cacheIndex];\n\t\t\t}\n\t\t}\n\n\t\t// Cache miss!\n\t\treturn this._actual.getIndexOf(accumulatedValue);\n\t}\n\n\t/**\n\t * Gives a hint that a lot of requests are about to come in for these accumulated values.\n\t */\n\tpublic warmUpCache(accumulatedValueStart: number, accumulatedValueEnd: number): void {\n\t\tlet newCache: PrefixSumIndexOfResult[] = [];\n\t\tfor (let accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n\t\t\tnewCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n\t\t}\n\t\tthis._cache = newCache;\n\t\tthis._cacheAccumulatedValueStart = accumulatedValueStart;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n}\n\nexport class MirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (exception.message) {\n\t\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), exception.stack || exception.stacktrace);\n\t\t}\n\n\t\treturn detectSystemErrorMessage(exception);\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message;\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nexport function terminateProcess(process: cp.ChildProcess, cwd?: string): TerminateResponse {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tcp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t} catch (err) {\n\t\t\treturn { success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown };\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\tconst result = cp.spawnSync(cmd, [process.pid.toString()]);\n\t\t\tif (result.error) {\n\t\t\t\treturn { success: false, error: result.error };\n\t\t\t}\n\t\t} catch (err) {\n\t\t\treturn { success: false, error: err };\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn { success: true };\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\tconst result = terminateProcess(childProcess, this.options.cwd);\n\t\t\tif (result.success) {\n\t\t\t\tthis.childProcess = null;\n\t\t\t}\n\t\t\treturn result;\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder;\n\tprivate stderrLineDecoder: LineDecoder;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tthis.stdoutLineDecoder = new LineDecoder();\n\t\tthis.stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout.on('data', (data: Buffer) => {\n\t\t\tconst lines = this.stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr.on('data', (data: Buffer) => {\n\t\t\tconst lines = this.stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\t[this.stdoutLineDecoder.end(), this.stderrLineDecoder.end()].forEach((line, index) => {\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport function findExecutable(command: string, cwd?: string, paths?: string[]): string {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (fs.existsSync(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (fs.existsSync(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (fs.existsSync(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as objects from 'vs/base/common/objects';\nimport * as platform from 'vs/base/common/platform';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { Constants } from 'vs/editor/common/core/uint';\nimport { USUAL_WORD_SEPARATORS } from 'vs/editor/common/model/wordHelper';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { isObject } from 'vs/base/common/types';\n\n/**\n * Configuration options for editor scrollbars\n */\nexport interface IEditorScrollbarOptions {\n\t/**\n\t * The size of arrows (if displayed).\n\t * Defaults to 11.\n\t */\n\tarrowSize?: number;\n\t/**\n\t * Render vertical scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\tvertical?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Render horizontal scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Cast horizontal and vertical shadows when the content is scrolled.\n\t * Defaults to true.\n\t */\n\tuseShadows?: boolean;\n\t/**\n\t * Render arrows at the top and bottom of the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?: boolean;\n\t/**\n\t * Render arrows at the left and right of the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?: boolean;\n\t/**\n\t * Listen to mouse wheel events and react to them by scrolling.\n\t * Defaults to true.\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * Height in pixels for the horizontal scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\tverticalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical slider.\n\t * Defaults to `verticalScrollbarSize`.\n\t */\n\tverticalSliderSize?: number;\n\t/**\n\t * Height in pixels for the horizontal slider.\n\t * Defaults to `horizontalScrollbarSize`.\n\t */\n\thorizontalSliderSize?: number;\n}\n\n/**\n * Configuration options for editor find widget\n */\nexport interface IEditorFindOptions {\n\t/**\n\t * Controls if we seed search string in the Find Widget with editor selection.\n\t */\n\tseedSearchStringFromSelection?: boolean;\n\t/**\n\t * Controls if Find in Selection flag is turned on when multiple lines of text are selected in the editor.\n\t */\n\tautoFindInSelection: boolean;\n\t/*\n\t * Controls whether the Find Widget should add extra lines on top of the editor.\n\t */\n\taddExtraSpaceOnTop?: boolean;\n\t/**\n\t * @internal\n\t * Controls if the Find Widget should read or modify the shared find clipboard on macOS\n\t */\n\tglobalFindClipboard: boolean;\n}\n\n/**\n * Configuration options for auto closing quotes and brackets\n */\nexport type EditorAutoClosingStrategy = 'always' | 'languageDefined' | 'beforeWhitespace' | 'never';\n\n/**\n * Configuration options for auto wrapping quotes and brackets\n */\nexport type EditorAutoSurroundStrategy = 'languageDefined' | 'quotes' | 'brackets' | 'never';\n\n/**\n * Configuration options for editor minimap\n */\nexport interface IEditorMinimapOptions {\n\t/**\n\t * Enable the rendering of the minimap.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Control the side of the minimap in editor.\n\t * Defaults to 'right'.\n\t */\n\tside?: 'right' | 'left';\n\t/**\n\t * Control the rendering of the minimap slider.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowSlider?: 'always' | 'mouseover';\n\t/**\n\t * Render the actual text on a line (as opposed to color blocks).\n\t * Defaults to true.\n\t */\n\trenderCharacters?: boolean;\n\t/**\n\t * Limit the width of the minimap to render at most a certain number of columns.\n\t * Defaults to 120.\n\t */\n\tmaxColumn?: number;\n}\n\n/**\n * Configuration options for editor minimap\n */\nexport interface IEditorLightbulbOptions {\n\t/**\n\t * Enable the lightbulb code action.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n}\n\n/**\n * Configuration options for editor hover\n */\nexport interface IEditorHoverOptions {\n\t/**\n\t * Enable the hover.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Delay for showing the hover.\n\t * Defaults to 300.\n\t */\n\tdelay?: number;\n\t/**\n\t * Is the hover sticky such that it can be clicked and its contents selected?\n\t * Defaults to true.\n\t */\n\tsticky?: boolean;\n}\n\n/**\n * Configuration options for parameter hints\n */\nexport interface IEditorParameterHintOptions {\n\t/**\n\t * Enable parameter hints.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Enable cycling of parameter hints.\n\t * Defaults to false.\n\t */\n\tcycle?: boolean;\n}\n\nexport interface ISuggestOptions {\n\t/**\n\t * Enable graceful matching. Defaults to true.\n\t */\n\tfilterGraceful?: boolean;\n\t/**\n\t * Prevent quick suggestions when a snippet is active. Defaults to true.\n\t */\n\tsnippetsPreventQuickSuggestions?: boolean;\n\t/**\n\t * Favours words that appear close to the cursor.\n\t */\n\tlocalityBonus?: boolean;\n\t/**\n\t * Enable using global storage for remembering suggestions.\n\t */\n\tshareSuggestSelections?: boolean;\n\t/**\n\t * Enable or disable icons in suggestions. Defaults to true.\n\t */\n\tshowIcons?: boolean;\n\t/**\n\t * Max suggestions to show in suggestions. Defaults to 12.\n\t */\n\tmaxVisibleSuggestions?: boolean;\n\t/**\n\t * Names of suggestion types to filter.\n\t */\n\tfilteredTypes?: Record<string, boolean>;\n}\n\nexport interface IGotoLocationOptions {\n\t/**\n\t * Control how goto-command work when having multiple results.\n\t */\n\tmany?: 'peek' | 'revealAndPeek' | 'reveal';\n}\n\n/**\n * Configuration map for codeActionsOnSave\n */\nexport interface ICodeActionsOnSaveOptions {\n\t[kind: string]: boolean;\n}\n\n/**\n * Configuration options for the editor.\n */\nexport interface IEditorOptions {\n\t/**\n\t * This editor is used inside a diff editor.\n\t * @internal\n\t */\n\tinDiffEditor?: boolean;\n\t/**\n\t * The aria label for the editor's textarea (when it is focused).\n\t */\n\tariaLabel?: string;\n\t/**\n\t * Render vertical lines at the specified columns.\n\t * Defaults to empty array.\n\t */\n\trulers?: number[];\n\t/**\n\t * A string containing the word separators used when doing word navigation.\n\t * Defaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?\n\t */\n\twordSeparators?: string;\n\t/**\n\t * Enable Linux primary clipboard.\n\t * Defaults to true.\n\t */\n\tselectionClipboard?: boolean;\n\t/**\n\t * Control the rendering of line numbers.\n\t * If it is a function, it will be invoked when rendering a line number and the return value will be rendered.\n\t * Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\n\t * Otherwise, line numbers will not be rendered.\n\t * Defaults to true.\n\t */\n\tlineNumbers?: 'on' | 'off' | 'relative' | 'interval' | ((lineNumber: number) => string);\n\t/**\n\t * Render last line number when the file ends with a newline.\n\t * Defaults to true on Windows/Mac and to false on Linux.\n\t*/\n\trenderFinalNewline?: boolean;\n\t/**\n\t * Should the corresponding line be selected when clicking on the line number?\n\t * Defaults to true.\n\t */\n\tselectOnLineNumbers?: boolean;\n\t/**\n\t * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n\t * Defaults to 5.\n\t */\n\tlineNumbersMinChars?: number;\n\t/**\n\t * Enable the rendering of the glyph margin.\n\t * Defaults to true in vscode and to false in monaco-editor.\n\t */\n\tglyphMargin?: boolean;\n\t/**\n\t * The width reserved for line decorations (in px).\n\t * Line decorations are placed between line numbers and the editor content.\n\t * You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\n\t * Defaults to 10.\n\t */\n\tlineDecorationsWidth?: number | string;\n\t/**\n\t * When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\n\t * This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\n\t * Defaults to 30 (px).\n\t */\n\trevealHorizontalRightPadding?: number;\n\t/**\n\t * Render the editor selection with rounded borders.\n\t * Defaults to true.\n\t */\n\troundedSelection?: boolean;\n\t/**\n\t * Class name to be added to the editor.\n\t */\n\textraEditorClassName?: string;\n\t/**\n\t * Should the editor be read only.\n\t * Defaults to false.\n\t */\n\treadOnly?: boolean;\n\t/**\n\t * Control the behavior and rendering of the scrollbars.\n\t */\n\tscrollbar?: IEditorScrollbarOptions;\n\t/**\n\t * Control the behavior and rendering of the minimap.\n\t */\n\tminimap?: IEditorMinimapOptions;\n\t/**\n\t * Control the behavior of the find widget.\n\t */\n\tfind?: IEditorFindOptions;\n\t/**\n\t * Display overflow widgets as `fixed`.\n\t * Defaults to `false`.\n\t */\n\tfixedOverflowWidgets?: boolean;\n\t/**\n\t * The number of vertical lanes the overview ruler should render.\n\t * Defaults to 2.\n\t */\n\toverviewRulerLanes?: number;\n\t/**\n\t * Controls if a border should be drawn around the overview ruler.\n\t * Defaults to `true`.\n\t */\n\toverviewRulerBorder?: boolean;\n\t/**\n\t * Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\n\t * Defaults to 'blink'.\n\t */\n\tcursorBlinking?: string;\n\t/**\n\t * Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\n\t * Defaults to false.\n\t */\n\tmouseWheelZoom?: boolean;\n\t/**\n\t * Control the mouse pointer style, either 'text' or 'default' or 'copy'\n\t * Defaults to 'text'\n\t * @internal\n\t */\n\tmouseStyle?: 'text' | 'default' | 'copy';\n\t/**\n\t * Enable smooth caret animation.\n\t * Defaults to false.\n\t */\n\tcursorSmoothCaretAnimation?: boolean;\n\t/**\n\t * Control the cursor style, either 'block' or 'line'.\n\t * Defaults to 'line'.\n\t */\n\tcursorStyle?: string;\n\t/**\n\t * Control the width of the cursor when cursorStyle is set to 'line'\n\t */\n\tcursorWidth?: number;\n\t/**\n\t * Enable font ligatures.\n\t * Defaults to false.\n\t */\n\tfontLigatures?: boolean;\n\t/**\n\t * Disable the use of `will-change` for the editor margin and lines layers.\n\t * The usage of `will-change` acts as a hint for browsers to create an extra layer.\n\t * Defaults to false.\n\t */\n\tdisableLayerHinting?: boolean;\n\t/**\n\t * Disable the optimizations for monospace fonts.\n\t * Defaults to false.\n\t */\n\tdisableMonospaceOptimizations?: boolean;\n\t/**\n\t * Should the cursor be hidden in the overview ruler.\n\t * Defaults to false.\n\t */\n\thideCursorInOverviewRuler?: boolean;\n\t/**\n\t * Enable that scrolling can go one screen size after the last line.\n\t * Defaults to true.\n\t */\n\tscrollBeyondLastLine?: boolean;\n\t/**\n\t * Enable that scrolling can go beyond the last column by a number of columns.\n\t * Defaults to 5.\n\t */\n\tscrollBeyondLastColumn?: number;\n\t/**\n\t * Enable that the editor animates scrolling to a position.\n\t * Defaults to false.\n\t */\n\tsmoothScrolling?: boolean;\n\t/**\n\t * Enable that the editor will install an interval to check if its container dom node size has changed.\n\t * Enabling this might have a severe performance impact.\n\t * Defaults to false.\n\t */\n\tautomaticLayout?: boolean;\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to \"off\".\n\t */\n\twordWrap?: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to 80.\n\t */\n\twordWrapColumn?: number;\n\t/**\n\t * Force word wrapping when the text appears to be of a minified/generated file.\n\t * Defaults to true.\n\t */\n\twordWrapMinified?: boolean;\n\t/**\n\t * Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\n\t * Defaults to 'same' in vscode and to 'none' in monaco-editor.\n\t */\n\twrappingIndent?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced before these characters.\n\t * Defaults to '{([+'.\n\t */\n\twordWrapBreakBeforeCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters.\n\t * Defaults to ' \\t})]?|&,;'.\n\t */\n\twordWrapBreakAfterCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters only if no `wordWrapBreakBeforeCharacters` or `wordWrapBreakAfterCharacters` were found.\n\t * Defaults to '.'.\n\t */\n\twordWrapBreakObtrusiveCharacters?: string;\n\n\t/**\n\t * Performance guard: Stop rendering a line after x characters.\n\t * Defaults to 10000.\n\t * Use -1 to never stop rendering\n\t */\n\tstopRenderingLineAfter?: number;\n\t/**\n\t * Configure the editor's hover.\n\t */\n\thover?: IEditorHoverOptions;\n\t/**\n\t * Enable detecting links and making them clickable.\n\t * Defaults to true.\n\t */\n\tlinks?: boolean;\n\t/**\n\t * Enable inline color decorators and color picker rendering.\n\t */\n\tcolorDecorators?: boolean;\n\t/**\n\t * Enable custom contextmenu.\n\t * Defaults to true.\n\t */\n\tcontextmenu?: boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * FastScrolling mulitplier speed when pressing `Alt`\n\t * Defaults to 5.\n\t */\n\tfastScrollSensitivity?: number;\n\t/**\n\t * The modifier to be used to add multiple cursors with the mouse.\n\t * Defaults to 'alt'\n\t */\n\tmultiCursorModifier?: 'ctrlCmd' | 'alt';\n\t/**\n\t * Merge overlapping selections.\n\t * Defaults to true\n\t */\n\tmultiCursorMergeOverlapping?: boolean;\n\t/**\n\t * Configure the editor's accessibility support.\n\t * Defaults to 'auto'. It is best to leave this to 'auto'.\n\t */\n\taccessibilitySupport?: 'auto' | 'off' | 'on';\n\t/**\n\t * Suggest options.\n\t */\n\tsuggest?: ISuggestOptions;\n\t/**\n\t *\n\t */\n\tgotoLocation?: IGotoLocationOptions;\n\t/**\n\t * Enable quick suggestions (shadow suggestions)\n\t * Defaults to true.\n\t */\n\tquickSuggestions?: boolean | { other: boolean, comments: boolean, strings: boolean };\n\t/**\n\t * Quick suggestions show delay (in ms)\n\t * Defaults to 500 (ms)\n\t */\n\tquickSuggestionsDelay?: number;\n\t/**\n\t * Parameter hint options.\n\t */\n\tparameterHints?: IEditorParameterHintOptions;\n\t/**\n\t * Options for auto closing brackets.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingBrackets?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for auto closing quotes.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingQuotes?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for auto surrounding.\n\t * Defaults to always allowing auto surrounding.\n\t */\n\tautoSurround?: EditorAutoSurroundStrategy;\n\t/**\n\t * Enable auto indentation adjustment.\n\t * Defaults to false.\n\t */\n\tautoIndent?: boolean;\n\t/**\n\t * Enable format on type.\n\t * Defaults to false.\n\t */\n\tformatOnType?: boolean;\n\t/**\n\t * Enable format on paste.\n\t * Defaults to false.\n\t */\n\tformatOnPaste?: boolean;\n\t/**\n\t * Controls if the editor should allow to move selections via drag and drop.\n\t * Defaults to false.\n\t */\n\tdragAndDrop?: boolean;\n\t/**\n\t * Enable the suggestion box to pop-up on trigger characters.\n\t * Defaults to true.\n\t */\n\tsuggestOnTriggerCharacters?: boolean;\n\t/**\n\t * Accept suggestions on ENTER.\n\t * Defaults to 'on'.\n\t */\n\tacceptSuggestionOnEnter?: boolean | 'on' | 'smart' | 'off';\n\t/**\n\t * Accept suggestions on provider defined characters.\n\t * Defaults to true.\n\t */\n\tacceptSuggestionOnCommitCharacter?: boolean;\n\t/**\n\t * Enable snippet suggestions. Default to 'true'.\n\t */\n\tsnippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n\t/**\n\t * Copying without a selection copies the current line.\n\t */\n\temptySelectionClipboard?: boolean;\n\t/**\n\t * Syntax highlighting is copied.\n\t */\n\tcopyWithSyntaxHighlighting?: boolean;\n\t/**\n\t * Enable word based suggestions. Defaults to 'true'\n\t */\n\twordBasedSuggestions?: boolean;\n\t/**\n\t * The history mode for suggestions.\n\t */\n\tsuggestSelection?: 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix';\n\t/**\n\t * The font size for the suggest widget.\n\t * Defaults to the editor font size.\n\t */\n\tsuggestFontSize?: number;\n\t/**\n\t * The line height for the suggest widget.\n\t * Defaults to the editor line height.\n\t */\n\tsuggestLineHeight?: number;\n\t/**\n\t * Enable tab completion.\n\t */\n\ttabCompletion?: boolean | 'on' | 'off' | 'onlySnippets';\n\t/**\n\t * Enable selection highlight.\n\t * Defaults to true.\n\t */\n\tselectionHighlight?: boolean;\n\t/**\n\t * Enable semantic occurrences highlight.\n\t * Defaults to true.\n\t */\n\toccurrencesHighlight?: boolean;\n\t/**\n\t * Show code lens\n\t * Defaults to true.\n\t */\n\tcodeLens?: boolean;\n\t/**\n\t * Control the behavior and rendering of the code action lightbulb.\n\t */\n\tlightbulb?: IEditorLightbulbOptions;\n\t/**\n\t * Code action kinds to be run on save.\n\t */\n\tcodeActionsOnSave?: ICodeActionsOnSaveOptions;\n\t/**\n\t * Timeout for running code actions on save.\n\t */\n\tcodeActionsOnSaveTimeout?: number;\n\t/**\n\t * Enable code folding\n\t * Defaults to true.\n\t */\n\tfolding?: boolean;\n\t/**\n\t * Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\n\t * Defaults to 'auto'.\n\t */\n\tfoldingStrategy?: 'auto' | 'indentation';\n\t/**\n\t * Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowFoldingControls?: 'always' | 'mouseover';\n\t/**\n\t * Enable highlighting of matching brackets.\n\t * Defaults to true.\n\t */\n\tmatchBrackets?: boolean;\n\t/**\n\t * Enable rendering of whitespace.\n\t * Defaults to none.\n\t */\n\trenderWhitespace?: 'none' | 'boundary' | 'all';\n\t/**\n\t * Enable rendering of control characters.\n\t * Defaults to false.\n\t */\n\trenderControlCharacters?: boolean;\n\t/**\n\t * Enable rendering of indent guides.\n\t * Defaults to true.\n\t */\n\trenderIndentGuides?: boolean;\n\t/**\n\t * Enable highlighting of the active indent guide.\n\t * Defaults to true.\n\t */\n\thighlightActiveIndentGuide?: boolean;\n\t/**\n\t * Enable rendering of current line highlight.\n\t * Defaults to all.\n\t */\n\trenderLineHighlight?: 'none' | 'gutter' | 'line' | 'all';\n\t/**\n\t * Inserting and deleting whitespace follows tab stops.\n\t */\n\tuseTabStops?: boolean;\n\t/**\n\t * The font family\n\t */\n\tfontFamily?: string;\n\t/**\n\t * The font weight\n\t */\n\tfontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | 'initial' | 'inherit' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n\t/**\n\t * The font size\n\t */\n\tfontSize?: number;\n\t/**\n\t * The line height\n\t */\n\tlineHeight?: number;\n\t/**\n\t * The letter spacing\n\t */\n\tletterSpacing?: number;\n\t/**\n\t * Controls fading out of unused variables.\n\t */\n\tshowUnused?: boolean;\n}\n\n/**\n * Configuration options for the diff editor.\n */\nexport interface IDiffEditorOptions extends IEditorOptions {\n\t/**\n\t * Allow the user to resize the diff editor split view.\n\t * Defaults to true.\n\t */\n\tenableSplitViewResizing?: boolean;\n\t/**\n\t * Render the differences in two side-by-side editors.\n\t * Defaults to true.\n\t */\n\trenderSideBySide?: boolean;\n\t/**\n\t * Compute the diff by ignoring leading/trailing whitespace\n\t * Defaults to true.\n\t */\n\tignoreTrimWhitespace?: boolean;\n\t/**\n\t * Render +/- indicators for added/deleted changes.\n\t * Defaults to true.\n\t */\n\trenderIndicators?: boolean;\n\t/**\n\t * Original model should be editable?\n\t * Defaults to false.\n\t */\n\toriginalEditable?: boolean;\n}\n\nexport const enum RenderMinimap {\n\tNone = 0,\n\tSmall = 1,\n\tLarge = 2,\n\tSmallBlocks = 3,\n\tLargeBlocks = 4,\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport const enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport const enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n/**\n * @internal\n */\nexport function blinkingStyleToString(blinkingStyle: TextEditorCursorBlinkingStyle): string {\n\tif (blinkingStyle === TextEditorCursorBlinkingStyle.Blink) {\n\t\treturn 'blink';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Expand) {\n\t\treturn 'expand';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Phase) {\n\t\treturn 'phase';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Smooth) {\n\t\treturn 'smooth';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Solid) {\n\t\treturn 'solid';\n\t} else {\n\t\tthrow new Error('blinkingStyleToString: Unknown blinkingStyle');\n\t}\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\n/**\n * @internal\n */\nexport function cursorStyleToString(cursorStyle: TextEditorCursorStyle): string {\n\tif (cursorStyle === TextEditorCursorStyle.Line) {\n\t\treturn 'line';\n\t} else if (cursorStyle === TextEditorCursorStyle.Block) {\n\t\treturn 'block';\n\t} else if (cursorStyle === TextEditorCursorStyle.Underline) {\n\t\treturn 'underline';\n\t} else if (cursorStyle === TextEditorCursorStyle.LineThin) {\n\t\treturn 'line-thin';\n\t} else if (cursorStyle === TextEditorCursorStyle.BlockOutline) {\n\t\treturn 'block-outline';\n\t} else if (cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n\t\treturn 'underline-thin';\n\t} else {\n\t\tthrow new Error('cursorStyleToString: Unknown cursorStyle');\n\t}\n}\n\nfunction _cursorStyleFromString(cursorStyle: string | undefined, defaultValue: TextEditorCursorStyle): TextEditorCursorStyle {\n\tif (typeof cursorStyle !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tif (cursorStyle === 'line') {\n\t\treturn TextEditorCursorStyle.Line;\n\t} else if (cursorStyle === 'block') {\n\t\treturn TextEditorCursorStyle.Block;\n\t} else if (cursorStyle === 'underline') {\n\t\treturn TextEditorCursorStyle.Underline;\n\t} else if (cursorStyle === 'line-thin') {\n\t\treturn TextEditorCursorStyle.LineThin;\n\t} else if (cursorStyle === 'block-outline') {\n\t\treturn TextEditorCursorStyle.BlockOutline;\n\t} else if (cursorStyle === 'underline-thin') {\n\t\treturn TextEditorCursorStyle.UnderlineThin;\n\t}\n\treturn TextEditorCursorStyle.Line;\n}\n\nexport interface InternalEditorScrollbarOptions {\n\treadonly arrowSize: number;\n\treadonly vertical: ScrollbarVisibility;\n\treadonly horizontal: ScrollbarVisibility;\n\treadonly useShadows: boolean;\n\treadonly verticalHasArrows: boolean;\n\treadonly horizontalHasArrows: boolean;\n\treadonly handleMouseWheel: boolean;\n\treadonly horizontalScrollbarSize: number;\n\treadonly horizontalSliderSize: number;\n\treadonly verticalScrollbarSize: number;\n\treadonly verticalSliderSize: number;\n\treadonly mouseWheelScrollSensitivity: number;\n\treadonly fastScrollSensitivity: number;\n}\n\nexport interface InternalEditorMinimapOptions {\n\treadonly enabled: boolean;\n\treadonly side: 'right' | 'left';\n\treadonly showSlider: 'always' | 'mouseover';\n\treadonly renderCharacters: boolean;\n\treadonly maxColumn: number;\n}\n\nexport interface InternalEditorFindOptions {\n\treadonly seedSearchStringFromSelection: boolean;\n\treadonly autoFindInSelection: boolean;\n\treadonly addExtraSpaceOnTop: boolean;\n\t/**\n\t * @internal\n\t */\n\treadonly globalFindClipboard: boolean;\n}\n\nexport interface InternalEditorHoverOptions {\n\treadonly enabled: boolean;\n\treadonly delay: number;\n\treadonly sticky: boolean;\n}\n\nexport interface InternalGoToLocationOptions {\n\treadonly many: 'peek' | 'revealAndPeek' | 'reveal';\n}\n\nexport interface InternalSuggestOptions {\n\treadonly filterGraceful: boolean;\n\treadonly snippets: 'top' | 'bottom' | 'inline' | 'none';\n\treadonly snippetsPreventQuickSuggestions: boolean;\n\treadonly localityBonus: boolean;\n\treadonly shareSuggestSelections: boolean;\n\treadonly showIcons: boolean;\n\treadonly maxVisibleSuggestions: number;\n\treadonly filteredTypes: Record<string, boolean>;\n}\n\nexport interface InternalParameterHintOptions {\n\treadonly enabled: boolean;\n\treadonly cycle: boolean;\n}\n\nexport interface EditorWrappingInfo {\n\treadonly inDiffEditor: boolean;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly isWordWrapMinified: boolean;\n\treadonly isViewportWrapping: boolean;\n\treadonly wrappingColumn: number;\n\treadonly wrappingIndent: WrappingIndent;\n\treadonly wordWrapBreakBeforeCharacters: string;\n\treadonly wordWrapBreakAfterCharacters: string;\n\treadonly wordWrapBreakObtrusiveCharacters: string;\n}\n\nexport const enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\nexport interface InternalEditorViewOptions {\n\treadonly extraEditorClassName: string;\n\treadonly disableMonospaceOptimizations: boolean;\n\treadonly rulers: number[];\n\treadonly ariaLabel: string;\n\treadonly renderLineNumbers: RenderLineNumbersType;\n\treadonly renderCustomLineNumbers: ((lineNumber: number) => string) | null;\n\treadonly renderFinalNewline: boolean;\n\treadonly selectOnLineNumbers: boolean;\n\treadonly glyphMargin: boolean;\n\treadonly revealHorizontalRightPadding: number;\n\treadonly roundedSelection: boolean;\n\treadonly overviewRulerLanes: number;\n\treadonly overviewRulerBorder: boolean;\n\treadonly cursorBlinking: TextEditorCursorBlinkingStyle;\n\treadonly mouseWheelZoom: boolean;\n\treadonly cursorSmoothCaretAnimation: boolean;\n\treadonly cursorStyle: TextEditorCursorStyle;\n\treadonly cursorWidth: number;\n\treadonly hideCursorInOverviewRuler: boolean;\n\treadonly scrollBeyondLastLine: boolean;\n\treadonly scrollBeyondLastColumn: number;\n\treadonly smoothScrolling: boolean;\n\treadonly stopRenderingLineAfter: number;\n\treadonly renderWhitespace: 'none' | 'boundary' | 'all';\n\treadonly renderControlCharacters: boolean;\n\treadonly fontLigatures: boolean;\n\treadonly renderIndentGuides: boolean;\n\treadonly highlightActiveIndentGuide: boolean;\n\treadonly renderLineHighlight: 'none' | 'gutter' | 'line' | 'all';\n\treadonly scrollbar: InternalEditorScrollbarOptions;\n\treadonly minimap: InternalEditorMinimapOptions;\n\treadonly fixedOverflowWidgets: boolean;\n}\n\nexport interface EditorContribOptions {\n\treadonly selectionClipboard: boolean;\n\treadonly hover: InternalEditorHoverOptions;\n\treadonly links: boolean;\n\treadonly contextmenu: boolean;\n\treadonly quickSuggestions: boolean | { other: boolean, comments: boolean, strings: boolean };\n\treadonly quickSuggestionsDelay: number;\n\treadonly parameterHints: InternalParameterHintOptions;\n\treadonly formatOnType: boolean;\n\treadonly formatOnPaste: boolean;\n\treadonly suggestOnTriggerCharacters: boolean;\n\treadonly acceptSuggestionOnEnter: 'on' | 'smart' | 'off';\n\treadonly acceptSuggestionOnCommitCharacter: boolean;\n\treadonly wordBasedSuggestions: boolean;\n\treadonly suggestSelection: 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix';\n\treadonly suggestFontSize: number;\n\treadonly suggestLineHeight: number;\n\treadonly tabCompletion: 'on' | 'off' | 'onlySnippets';\n\treadonly suggest: InternalSuggestOptions;\n\treadonly gotoLocation: InternalGoToLocationOptions;\n\treadonly selectionHighlight: boolean;\n\treadonly occurrencesHighlight: boolean;\n\treadonly codeLens: boolean;\n\treadonly folding: boolean;\n\treadonly foldingStrategy: 'auto' | 'indentation';\n\treadonly showFoldingControls: 'always' | 'mouseover';\n\treadonly matchBrackets: boolean;\n\treadonly find: InternalEditorFindOptions;\n\treadonly colorDecorators: boolean;\n\treadonly lightbulbEnabled: boolean;\n\treadonly codeActionsOnSave: ICodeActionsOnSaveOptions;\n\treadonly codeActionsOnSaveTimeout: number;\n}\n\n/**\n * Validated configuration options for the editor.\n * This is a 1 to 1 validated/parsed version of IEditorOptions merged on top of the defaults.\n * @internal\n */\nexport interface IValidatedEditorOptions {\n\treadonly inDiffEditor: boolean;\n\treadonly wordSeparators: string;\n\treadonly lineNumbersMinChars: number;\n\treadonly lineDecorationsWidth: number | string;\n\treadonly readOnly: boolean;\n\treadonly mouseStyle: 'text' | 'default' | 'copy';\n\treadonly disableLayerHinting: boolean;\n\treadonly automaticLayout: boolean;\n\treadonly wordWrap: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\n\treadonly wordWrapColumn: number;\n\treadonly wordWrapMinified: boolean;\n\treadonly wrappingIndent: WrappingIndent;\n\treadonly wordWrapBreakBeforeCharacters: string;\n\treadonly wordWrapBreakAfterCharacters: string;\n\treadonly wordWrapBreakObtrusiveCharacters: string;\n\treadonly autoClosingBrackets: EditorAutoClosingStrategy;\n\treadonly autoClosingQuotes: EditorAutoClosingStrategy;\n\treadonly autoSurround: EditorAutoSurroundStrategy;\n\treadonly autoIndent: boolean;\n\treadonly dragAndDrop: boolean;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly copyWithSyntaxHighlighting: boolean;\n\treadonly useTabStops: boolean;\n\treadonly multiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey';\n\treadonly multiCursorMergeOverlapping: boolean;\n\treadonly accessibilitySupport: 'auto' | 'off' | 'on';\n\treadonly showUnused: boolean;\n\n\treadonly viewInfo: InternalEditorViewOptions;\n\treadonly contribInfo: EditorContribOptions;\n}\n\n/**\n * Internal configuration options (transformed or computed) for the editor.\n */\nexport class InternalEditorOptions {\n\treadonly _internalEditorOptionsBrand: void;\n\n\treadonly canUseLayerHinting: boolean;\n\treadonly pixelRatio: number;\n\treadonly editorClassName: string;\n\treadonly lineHeight: number;\n\treadonly readOnly: boolean;\n\t/**\n\t * @internal\n\t */\n\treadonly accessibilitySupport: AccessibilitySupport;\n\treadonly multiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey';\n\treadonly multiCursorMergeOverlapping: boolean;\n\treadonly showUnused: boolean;\n\n\t// ---- cursor options\n\treadonly wordSeparators: string;\n\treadonly autoClosingBrackets: EditorAutoClosingStrategy;\n\treadonly autoClosingQuotes: EditorAutoClosingStrategy;\n\treadonly autoSurround: EditorAutoSurroundStrategy;\n\treadonly autoIndent: boolean;\n\treadonly useTabStops: boolean;\n\treadonly tabFocusMode: boolean;\n\treadonly dragAndDrop: boolean;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly copyWithSyntaxHighlighting: boolean;\n\n\t// ---- grouped options\n\treadonly layoutInfo: EditorLayoutInfo;\n\treadonly fontInfo: FontInfo;\n\treadonly viewInfo: InternalEditorViewOptions;\n\treadonly wrappingInfo: EditorWrappingInfo;\n\treadonly contribInfo: EditorContribOptions;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source: {\n\t\tcanUseLayerHinting: boolean;\n\t\tpixelRatio: number;\n\t\teditorClassName: string;\n\t\tlineHeight: number;\n\t\treadOnly: boolean;\n\t\taccessibilitySupport: AccessibilitySupport;\n\t\tmultiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey';\n\t\tmultiCursorMergeOverlapping: boolean;\n\t\twordSeparators: string;\n\t\tautoClosingBrackets: EditorAutoClosingStrategy;\n\t\tautoClosingQuotes: EditorAutoClosingStrategy;\n\t\tautoSurround: EditorAutoSurroundStrategy;\n\t\tautoIndent: boolean;\n\t\tuseTabStops: boolean;\n\t\ttabFocusMode: boolean;\n\t\tdragAndDrop: boolean;\n\t\temptySelectionClipboard: boolean;\n\t\tcopyWithSyntaxHighlighting: boolean;\n\t\tlayoutInfo: EditorLayoutInfo;\n\t\tfontInfo: FontInfo;\n\t\tviewInfo: InternalEditorViewOptions;\n\t\twrappingInfo: EditorWrappingInfo;\n\t\tcontribInfo: EditorContribOptions;\n\t\tshowUnused: boolean;\n\t}) {\n\t\tthis.canUseLayerHinting = source.canUseLayerHinting;\n\t\tthis.pixelRatio = source.pixelRatio;\n\t\tthis.editorClassName = source.editorClassName;\n\t\tthis.lineHeight = source.lineHeight | 0;\n\t\tthis.readOnly = source.readOnly;\n\t\tthis.accessibilitySupport = source.accessibilitySupport;\n\t\tthis.multiCursorModifier = source.multiCursorModifier;\n\t\tthis.multiCursorMergeOverlapping = source.multiCursorMergeOverlapping;\n\t\tthis.wordSeparators = source.wordSeparators;\n\t\tthis.autoClosingBrackets = source.autoClosingBrackets;\n\t\tthis.autoClosingQuotes = source.autoClosingQuotes;\n\t\tthis.autoSurround = source.autoSurround;\n\t\tthis.autoIndent = source.autoIndent;\n\t\tthis.useTabStops = source.useTabStops;\n\t\tthis.tabFocusMode = source.tabFocusMode;\n\t\tthis.dragAndDrop = source.dragAndDrop;\n\t\tthis.emptySelectionClipboard = source.emptySelectionClipboard;\n\t\tthis.copyWithSyntaxHighlighting = source.copyWithSyntaxHighlighting;\n\t\tthis.layoutInfo = source.layoutInfo;\n\t\tthis.fontInfo = source.fontInfo;\n\t\tthis.viewInfo = source.viewInfo;\n\t\tthis.wrappingInfo = source.wrappingInfo;\n\t\tthis.contribInfo = source.contribInfo;\n\t\tthis.showUnused = source.showUnused;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: InternalEditorOptions): boolean {\n\t\treturn (\n\t\t\tthis.canUseLayerHinting === other.canUseLayerHinting\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.editorClassName === other.editorClassName\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.readOnly === other.readOnly\n\t\t\t&& this.accessibilitySupport === other.accessibilitySupport\n\t\t\t&& this.multiCursorModifier === other.multiCursorModifier\n\t\t\t&& this.multiCursorMergeOverlapping === other.multiCursorMergeOverlapping\n\t\t\t&& this.wordSeparators === other.wordSeparators\n\t\t\t&& this.autoClosingBrackets === other.autoClosingBrackets\n\t\t\t&& this.autoClosingQuotes === other.autoClosingQuotes\n\t\t\t&& this.autoSurround === other.autoSurround\n\t\t\t&& this.autoIndent === other.autoIndent\n\t\t\t&& this.useTabStops === other.useTabStops\n\t\t\t&& this.tabFocusMode === other.tabFocusMode\n\t\t\t&& this.dragAndDrop === other.dragAndDrop\n\t\t\t&& this.showUnused === other.showUnused\n\t\t\t&& this.emptySelectionClipboard === other.emptySelectionClipboard\n\t\t\t&& this.copyWithSyntaxHighlighting === other.copyWithSyntaxHighlighting\n\t\t\t&& InternalEditorOptions._equalsLayoutInfo(this.layoutInfo, other.layoutInfo)\n\t\t\t&& this.fontInfo.equals(other.fontInfo)\n\t\t\t&& InternalEditorOptions._equalsViewOptions(this.viewInfo, other.viewInfo)\n\t\t\t&& InternalEditorOptions._equalsWrappingInfo(this.wrappingInfo, other.wrappingInfo)\n\t\t\t&& InternalEditorOptions._equalsContribOptions(this.contribInfo, other.contribInfo)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts: InternalEditorOptions): IConfigurationChangedEvent {\n\t\treturn {\n\t\t\tcanUseLayerHinting: (this.canUseLayerHinting !== newOpts.canUseLayerHinting),\n\t\t\tpixelRatio: (this.pixelRatio !== newOpts.pixelRatio),\n\t\t\teditorClassName: (this.editorClassName !== newOpts.editorClassName),\n\t\t\tlineHeight: (this.lineHeight !== newOpts.lineHeight),\n\t\t\treadOnly: (this.readOnly !== newOpts.readOnly),\n\t\t\taccessibilitySupport: (this.accessibilitySupport !== newOpts.accessibilitySupport),\n\t\t\tmultiCursorModifier: (this.multiCursorModifier !== newOpts.multiCursorModifier),\n\t\t\tmultiCursorMergeOverlapping: (this.multiCursorMergeOverlapping !== newOpts.multiCursorMergeOverlapping),\n\t\t\twordSeparators: (this.wordSeparators !== newOpts.wordSeparators),\n\t\t\tautoClosingBrackets: (this.autoClosingBrackets !== newOpts.autoClosingBrackets),\n\t\t\tautoClosingQuotes: (this.autoClosingQuotes !== newOpts.autoClosingQuotes),\n\t\t\tautoSurround: (this.autoSurround !== newOpts.autoSurround),\n\t\t\tautoIndent: (this.autoIndent !== newOpts.autoIndent),\n\t\t\tuseTabStops: (this.useTabStops !== newOpts.useTabStops),\n\t\t\ttabFocusMode: (this.tabFocusMode !== newOpts.tabFocusMode),\n\t\t\tdragAndDrop: (this.dragAndDrop !== newOpts.dragAndDrop),\n\t\t\temptySelectionClipboard: (this.emptySelectionClipboard !== newOpts.emptySelectionClipboard),\n\t\t\tcopyWithSyntaxHighlighting: (this.copyWithSyntaxHighlighting !== newOpts.copyWithSyntaxHighlighting),\n\t\t\tlayoutInfo: (!InternalEditorOptions._equalsLayoutInfo(this.layoutInfo, newOpts.layoutInfo)),\n\t\t\tfontInfo: (!this.fontInfo.equals(newOpts.fontInfo)),\n\t\t\tviewInfo: (!InternalEditorOptions._equalsViewOptions(this.viewInfo, newOpts.viewInfo)),\n\t\t\twrappingInfo: (!InternalEditorOptions._equalsWrappingInfo(this.wrappingInfo, newOpts.wrappingInfo)),\n\t\t\tcontribInfo: (!InternalEditorOptions._equalsContribOptions(this.contribInfo, newOpts.contribInfo))\n\t\t};\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsLayoutInfo(a: EditorLayoutInfo, b: EditorLayoutInfo): boolean {\n\t\treturn (\n\t\t\ta.width === b.width\n\t\t\t&& a.height === b.height\n\t\t\t&& a.glyphMarginLeft === b.glyphMarginLeft\n\t\t\t&& a.glyphMarginWidth === b.glyphMarginWidth\n\t\t\t&& a.glyphMarginHeight === b.glyphMarginHeight\n\t\t\t&& a.lineNumbersLeft === b.lineNumbersLeft\n\t\t\t&& a.lineNumbersWidth === b.lineNumbersWidth\n\t\t\t&& a.lineNumbersHeight === b.lineNumbersHeight\n\t\t\t&& a.decorationsLeft === b.decorationsLeft\n\t\t\t&& a.decorationsWidth === b.decorationsWidth\n\t\t\t&& a.decorationsHeight === b.decorationsHeight\n\t\t\t&& a.contentLeft === b.contentLeft\n\t\t\t&& a.contentWidth === b.contentWidth\n\t\t\t&& a.contentHeight === b.contentHeight\n\t\t\t&& a.renderMinimap === b.renderMinimap\n\t\t\t&& a.minimapLeft === b.minimapLeft\n\t\t\t&& a.minimapWidth === b.minimapWidth\n\t\t\t&& a.viewportColumn === b.viewportColumn\n\t\t\t&& a.verticalScrollbarWidth === b.verticalScrollbarWidth\n\t\t\t&& a.horizontalScrollbarHeight === b.horizontalScrollbarHeight\n\t\t\t&& this._equalsOverviewRuler(a.overviewRuler, b.overviewRuler)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsOverviewRuler(a: OverviewRulerPosition, b: OverviewRulerPosition): boolean {\n\t\treturn (\n\t\t\ta.width === b.width\n\t\t\t&& a.height === b.height\n\t\t\t&& a.top === b.top\n\t\t\t&& a.right === b.right\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsViewOptions(a: InternalEditorViewOptions, b: InternalEditorViewOptions): boolean {\n\t\treturn (\n\t\t\ta.extraEditorClassName === b.extraEditorClassName\n\t\t\t&& a.disableMonospaceOptimizations === b.disableMonospaceOptimizations\n\t\t\t&& arrays.equals(a.rulers, b.rulers)\n\t\t\t&& a.ariaLabel === b.ariaLabel\n\t\t\t&& a.renderLineNumbers === b.renderLineNumbers\n\t\t\t&& a.renderCustomLineNumbers === b.renderCustomLineNumbers\n\t\t\t&& a.renderFinalNewline === b.renderFinalNewline\n\t\t\t&& a.selectOnLineNumbers === b.selectOnLineNumbers\n\t\t\t&& a.glyphMargin === b.glyphMargin\n\t\t\t&& a.revealHorizontalRightPadding === b.revealHorizontalRightPadding\n\t\t\t&& a.roundedSelection === b.roundedSelection\n\t\t\t&& a.overviewRulerLanes === b.overviewRulerLanes\n\t\t\t&& a.overviewRulerBorder === b.overviewRulerBorder\n\t\t\t&& a.cursorBlinking === b.cursorBlinking\n\t\t\t&& a.mouseWheelZoom === b.mouseWheelZoom\n\t\t\t&& a.cursorSmoothCaretAnimation === b.cursorSmoothCaretAnimation\n\t\t\t&& a.cursorStyle === b.cursorStyle\n\t\t\t&& a.cursorWidth === b.cursorWidth\n\t\t\t&& a.hideCursorInOverviewRuler === b.hideCursorInOverviewRuler\n\t\t\t&& a.scrollBeyondLastLine === b.scrollBeyondLastLine\n\t\t\t&& a.scrollBeyondLastColumn === b.scrollBeyondLastColumn\n\t\t\t&& a.smoothScrolling === b.smoothScrolling\n\t\t\t&& a.stopRenderingLineAfter === b.stopRenderingLineAfter\n\t\t\t&& a.renderWhitespace === b.renderWhitespace\n\t\t\t&& a.renderControlCharacters === b.renderControlCharacters\n\t\t\t&& a.fontLigatures === b.fontLigatures\n\t\t\t&& a.renderIndentGuides === b.renderIndentGuides\n\t\t\t&& a.highlightActiveIndentGuide === b.highlightActiveIndentGuide\n\t\t\t&& a.renderLineHighlight === b.renderLineHighlight\n\t\t\t&& this._equalsScrollbarOptions(a.scrollbar, b.scrollbar)\n\t\t\t&& this._equalsMinimapOptions(a.minimap, b.minimap)\n\t\t\t&& a.fixedOverflowWidgets === b.fixedOverflowWidgets\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsScrollbarOptions(a: InternalEditorScrollbarOptions, b: InternalEditorScrollbarOptions): boolean {\n\t\treturn (\n\t\t\ta.arrowSize === b.arrowSize\n\t\t\t&& a.vertical === b.vertical\n\t\t\t&& a.horizontal === b.horizontal\n\t\t\t&& a.useShadows === b.useShadows\n\t\t\t&& a.verticalHasArrows === b.verticalHasArrows\n\t\t\t&& a.horizontalHasArrows === b.horizontalHasArrows\n\t\t\t&& a.handleMouseWheel === b.handleMouseWheel\n\t\t\t&& a.horizontalScrollbarSize === b.horizontalScrollbarSize\n\t\t\t&& a.horizontalSliderSize === b.horizontalSliderSize\n\t\t\t&& a.verticalScrollbarSize === b.verticalScrollbarSize\n\t\t\t&& a.verticalSliderSize === b.verticalSliderSize\n\t\t\t&& a.mouseWheelScrollSensitivity === b.mouseWheelScrollSensitivity\n\t\t\t&& a.fastScrollSensitivity === b.fastScrollSensitivity\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsMinimapOptions(a: InternalEditorMinimapOptions, b: InternalEditorMinimapOptions): boolean {\n\t\treturn (\n\t\t\ta.enabled === b.enabled\n\t\t\t&& a.side === b.side\n\t\t\t&& a.showSlider === b.showSlider\n\t\t\t&& a.renderCharacters === b.renderCharacters\n\t\t\t&& a.maxColumn === b.maxColumn\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalFindOptions(a: InternalEditorFindOptions, b: InternalEditorFindOptions): boolean {\n\t\treturn (\n\t\t\ta.seedSearchStringFromSelection === b.seedSearchStringFromSelection\n\t\t\t&& a.autoFindInSelection === b.autoFindInSelection\n\t\t\t&& a.globalFindClipboard === b.globalFindClipboard\n\t\t\t&& a.addExtraSpaceOnTop === b.addExtraSpaceOnTop\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsParameterHintOptions(a: InternalParameterHintOptions, b: InternalParameterHintOptions): boolean {\n\t\treturn (\n\t\t\ta.enabled === b.enabled\n\t\t\t&& a.cycle === b.cycle\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsHoverOptions(a: InternalEditorHoverOptions, b: InternalEditorHoverOptions): boolean {\n\t\treturn (\n\t\t\ta.enabled === b.enabled\n\t\t\t&& a.delay === b.delay\n\t\t\t&& a.sticky === b.sticky\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsSuggestOptions(a: InternalSuggestOptions, b: InternalSuggestOptions): any {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t} else if (!a || !b) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn a.filterGraceful === b.filterGraceful\n\t\t\t\t&& a.snippets === b.snippets\n\t\t\t\t&& a.snippetsPreventQuickSuggestions === b.snippetsPreventQuickSuggestions\n\t\t\t\t&& a.localityBonus === b.localityBonus\n\t\t\t\t&& a.shareSuggestSelections === b.shareSuggestSelections\n\t\t\t\t&& a.showIcons === b.showIcons\n\t\t\t\t&& a.maxVisibleSuggestions === b.maxVisibleSuggestions;\n\t\t}\n\t}\n\n\tprivate static _equalsGotoLocationOptions(a: InternalGoToLocationOptions | undefined, b: InternalGoToLocationOptions | undefined): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t} else if (!a || !b) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn a.many === b.many;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsWrappingInfo(a: EditorWrappingInfo, b: EditorWrappingInfo): boolean {\n\t\treturn (\n\t\t\ta.inDiffEditor === b.inDiffEditor\n\t\t\t&& a.isDominatedByLongLines === b.isDominatedByLongLines\n\t\t\t&& a.isWordWrapMinified === b.isWordWrapMinified\n\t\t\t&& a.isViewportWrapping === b.isViewportWrapping\n\t\t\t&& a.wrappingColumn === b.wrappingColumn\n\t\t\t&& a.wrappingIndent === b.wrappingIndent\n\t\t\t&& a.wordWrapBreakBeforeCharacters === b.wordWrapBreakBeforeCharacters\n\t\t\t&& a.wordWrapBreakAfterCharacters === b.wordWrapBreakAfterCharacters\n\t\t\t&& a.wordWrapBreakObtrusiveCharacters === b.wordWrapBreakObtrusiveCharacters\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsContribOptions(a: EditorContribOptions, b: EditorContribOptions): boolean {\n\t\treturn (\n\t\t\ta.selectionClipboard === b.selectionClipboard\n\t\t\t&& this._equalsHoverOptions(a.hover, b.hover)\n\t\t\t&& a.links === b.links\n\t\t\t&& a.contextmenu === b.contextmenu\n\t\t\t&& InternalEditorOptions._equalsQuickSuggestions(a.quickSuggestions, b.quickSuggestions)\n\t\t\t&& a.quickSuggestionsDelay === b.quickSuggestionsDelay\n\t\t\t&& this._equalsParameterHintOptions(a.parameterHints, b.parameterHints)\n\t\t\t&& a.formatOnType === b.formatOnType\n\t\t\t&& a.formatOnPaste === b.formatOnPaste\n\t\t\t&& a.suggestOnTriggerCharacters === b.suggestOnTriggerCharacters\n\t\t\t&& a.acceptSuggestionOnEnter === b.acceptSuggestionOnEnter\n\t\t\t&& a.acceptSuggestionOnCommitCharacter === b.acceptSuggestionOnCommitCharacter\n\t\t\t&& a.wordBasedSuggestions === b.wordBasedSuggestions\n\t\t\t&& a.suggestSelection === b.suggestSelection\n\t\t\t&& a.suggestFontSize === b.suggestFontSize\n\t\t\t&& a.suggestLineHeight === b.suggestLineHeight\n\t\t\t&& a.tabCompletion === b.tabCompletion\n\t\t\t&& this._equalsSuggestOptions(a.suggest, b.suggest)\n\t\t\t&& InternalEditorOptions._equalsGotoLocationOptions(a.gotoLocation, b.gotoLocation)\n\t\t\t&& a.selectionHighlight === b.selectionHighlight\n\t\t\t&& a.occurrencesHighlight === b.occurrencesHighlight\n\t\t\t&& a.codeLens === b.codeLens\n\t\t\t&& a.folding === b.folding\n\t\t\t&& a.foldingStrategy === b.foldingStrategy\n\t\t\t&& a.showFoldingControls === b.showFoldingControls\n\t\t\t&& a.matchBrackets === b.matchBrackets\n\t\t\t&& this._equalFindOptions(a.find, b.find)\n\t\t\t&& a.colorDecorators === b.colorDecorators\n\t\t\t&& objects.equals(a.codeActionsOnSave, b.codeActionsOnSave)\n\t\t\t&& a.codeActionsOnSaveTimeout === b.codeActionsOnSaveTimeout\n\t\t\t&& a.lightbulbEnabled === b.lightbulbEnabled\n\t\t);\n\t}\n\n\tprivate static _equalsQuickSuggestions(a: boolean | { other: boolean, comments: boolean, strings: boolean }, b: boolean | { other: boolean, comments: boolean, strings: boolean }): boolean {\n\t\tif (typeof a === 'boolean') {\n\t\t\tif (typeof b !== 'boolean') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn a === b;\n\t\t}\n\t\tif (typeof b === 'boolean') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\ta.comments === b.comments\n\t\t\t&& a.other === b.other\n\t\t\t&& a.strings === b.strings\n\t\t);\n\t}\n}\n\n/**\n * A description for the overview ruler position.\n */\nexport interface OverviewRulerPosition {\n\t/**\n\t * Width of the overview ruler\n\t */\n\treadonly width: number;\n\t/**\n\t * Height of the overview ruler\n\t */\n\treadonly height: number;\n\t/**\n\t * Top position for the overview ruler\n\t */\n\treadonly top: number;\n\t/**\n\t * Right position for the overview ruler\n\t */\n\treadonly right: number;\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport interface EditorLayoutInfo {\n\n\t/**\n\t * Full editor width.\n\t */\n\treadonly width: number;\n\t/**\n\t * Full editor height.\n\t */\n\treadonly height: number;\n\n\t/**\n\t * Left position for the glyph margin.\n\t */\n\treadonly glyphMarginLeft: number;\n\t/**\n\t * The width of the glyph margin.\n\t */\n\treadonly glyphMarginWidth: number;\n\t/**\n\t * The height of the glyph margin.\n\t */\n\treadonly glyphMarginHeight: number;\n\n\t/**\n\t * Left position for the line numbers.\n\t */\n\treadonly lineNumbersLeft: number;\n\t/**\n\t * The width of the line numbers.\n\t */\n\treadonly lineNumbersWidth: number;\n\t/**\n\t * The height of the line numbers.\n\t */\n\treadonly lineNumbersHeight: number;\n\n\t/**\n\t * Left position for the line decorations.\n\t */\n\treadonly decorationsLeft: number;\n\t/**\n\t * The width of the line decorations.\n\t */\n\treadonly decorationsWidth: number;\n\t/**\n\t * The height of the line decorations.\n\t */\n\treadonly decorationsHeight: number;\n\n\t/**\n\t * Left position for the content (actual text)\n\t */\n\treadonly contentLeft: number;\n\t/**\n\t * The width of the content (actual text)\n\t */\n\treadonly contentWidth: number;\n\t/**\n\t * The height of the content (actual height)\n\t */\n\treadonly contentHeight: number;\n\n\t/**\n\t * The position for the minimap\n\t */\n\treadonly minimapLeft: number;\n\t/**\n\t * The width of the minimap\n\t */\n\treadonly minimapWidth: number;\n\n\t/**\n\t * Minimap render type\n\t */\n\treadonly renderMinimap: RenderMinimap;\n\n\t/**\n\t * The number of columns (of typical characters) fitting on a viewport line.\n\t */\n\treadonly viewportColumn: number;\n\n\t/**\n\t * The width of the vertical scrollbar.\n\t */\n\treadonly verticalScrollbarWidth: number;\n\t/**\n\t * The height of the horizontal scrollbar.\n\t */\n\treadonly horizontalScrollbarHeight: number;\n\n\t/**\n\t * The position of the overview ruler.\n\t */\n\treadonly overviewRuler: OverviewRulerPosition;\n}\n\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport interface IConfigurationChangedEvent {\n\treadonly canUseLayerHinting: boolean;\n\treadonly pixelRatio: boolean;\n\treadonly editorClassName: boolean;\n\treadonly lineHeight: boolean;\n\treadonly readOnly: boolean;\n\treadonly accessibilitySupport: boolean;\n\treadonly multiCursorModifier: boolean;\n\treadonly multiCursorMergeOverlapping: boolean;\n\treadonly wordSeparators: boolean;\n\treadonly autoClosingBrackets: boolean;\n\treadonly autoClosingQuotes: boolean;\n\treadonly autoSurround: boolean;\n\treadonly autoIndent: boolean;\n\treadonly useTabStops: boolean;\n\treadonly tabFocusMode: boolean;\n\treadonly dragAndDrop: boolean;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly copyWithSyntaxHighlighting: boolean;\n\treadonly layoutInfo: boolean;\n\treadonly fontInfo: boolean;\n\treadonly viewInfo: boolean;\n\treadonly wrappingInfo: boolean;\n\treadonly contribInfo: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IEnvironmentalOptions {\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\treadonly fontInfo: FontInfo;\n\treadonly extraEditorClassName: string;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly lineNumbersDigitCount: number;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly pixelRatio: number;\n\treadonly tabFocusMode: boolean;\n\treadonly accessibilitySupport: AccessibilitySupport;\n}\n\nfunction _boolean<T>(value: any, defaultValue: T): boolean | T {\n\tif (typeof value === 'undefined') {\n\t\treturn defaultValue;\n\t}\n\tif (value === 'false') {\n\t\t// treat the string 'false' as false\n\t\treturn false;\n\t}\n\treturn Boolean(value);\n}\n\nfunction _booleanMap(value: { [key: string]: boolean } | undefined, defaultValue: { [key: string]: boolean }): { [key: string]: boolean } {\n\tif (!value) {\n\t\treturn defaultValue;\n\t}\n\n\tconst out = Object.create(null);\n\tfor (const k of Object.keys(value)) {\n\t\tconst v = value[k];\n\t\tif (typeof v === 'boolean') {\n\t\t\tout[k] = v;\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction _string(value: any, defaultValue: string): string {\n\tif (typeof value !== 'string') {\n\t\treturn defaultValue;\n\t}\n\treturn value;\n}\n\nfunction _stringSet<T>(value: T | undefined, defaultValue: T, allowedValues: T[]): T {\n\tif (typeof value !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tif (allowedValues.indexOf(value) === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn value;\n}\n\nfunction _clampedInt(value: any, defaultValue: number, minimum: number, maximum: number): number {\n\tlet r: number;\n\tif (typeof value === 'undefined') {\n\t\tr = defaultValue;\n\t} else {\n\t\tr = parseInt(value, 10);\n\t\tif (isNaN(r)) {\n\t\t\tr = defaultValue;\n\t\t}\n\t}\n\tr = Math.max(minimum, r);\n\tr = Math.min(maximum, r);\n\treturn r | 0;\n}\n\nfunction _float(value: any, defaultValue: number): number {\n\tlet r = parseFloat(value);\n\tif (isNaN(r)) {\n\t\tr = defaultValue;\n\t}\n\treturn r;\n}\n\nfunction _wrappingIndentFromString(wrappingIndent: string | undefined, defaultValue: WrappingIndent): WrappingIndent {\n\tif (typeof wrappingIndent !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tif (wrappingIndent === 'same') {\n\t\treturn WrappingIndent.Same;\n\t} else if (wrappingIndent === 'indent') {\n\t\treturn WrappingIndent.Indent;\n\t} else if (wrappingIndent === 'deepIndent') {\n\t\treturn WrappingIndent.DeepIndent;\n\t} else {\n\t\treturn WrappingIndent.None;\n\t}\n}\n\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle: string | undefined, defaultValue: TextEditorCursorBlinkingStyle): TextEditorCursorBlinkingStyle {\n\tif (typeof cursorBlinkingStyle !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tswitch (cursorBlinkingStyle) {\n\t\tcase 'blink':\n\t\t\treturn TextEditorCursorBlinkingStyle.Blink;\n\t\tcase 'smooth':\n\t\t\treturn TextEditorCursorBlinkingStyle.Smooth;\n\t\tcase 'phase':\n\t\t\treturn TextEditorCursorBlinkingStyle.Phase;\n\t\tcase 'expand':\n\t\t\treturn TextEditorCursorBlinkingStyle.Expand;\n\t\tcase 'visible': // maintain compatibility\n\t\tcase 'solid':\n\t\t\treturn TextEditorCursorBlinkingStyle.Solid;\n\t}\n\treturn TextEditorCursorBlinkingStyle.Blink;\n}\n\nfunction _scrollbarVisibilityFromString(visibility: string | undefined, defaultValue: ScrollbarVisibility): ScrollbarVisibility {\n\tif (typeof visibility !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tswitch (visibility) {\n\t\tcase 'hidden':\n\t\t\treturn ScrollbarVisibility.Hidden;\n\t\tcase 'visible':\n\t\t\treturn ScrollbarVisibility.Visible;\n\t\tdefault:\n\t\t\treturn ScrollbarVisibility.Auto;\n\t}\n}\n\n/**\n * @internal\n */\nexport class EditorOptionsValidator {\n\n\t/**\n\t * Validate raw editor options.\n\t * i.e. since they can be defined by the user, they might be invalid.\n\t */\n\tpublic static validate(opts: IEditorOptions, defaults: IValidatedEditorOptions): IValidatedEditorOptions {\n\t\tlet wordWrap = opts.wordWrap;\n\t\t{\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>wordWrap === true) {\n\t\t\t\twordWrap = 'on';\n\t\t\t} else if (<any>wordWrap === false) {\n\t\t\t\twordWrap = 'off';\n\t\t\t}\n\n\t\t\twordWrap = _stringSet<'off' | 'on' | 'wordWrapColumn' | 'bounded'>(wordWrap, defaults.wordWrap, ['off', 'on', 'wordWrapColumn', 'bounded']);\n\t\t}\n\n\t\tconst viewInfo = this._sanitizeViewInfo(opts, defaults.viewInfo);\n\t\tconst contribInfo = this._sanitizeContribInfo(opts, defaults.contribInfo);\n\n\t\tlet configuredMulticursorModifier: 'altKey' | 'metaKey' | 'ctrlKey' | undefined = undefined;\n\t\tif (typeof opts.multiCursorModifier === 'string') {\n\t\t\tif (opts.multiCursorModifier === 'ctrlCmd') {\n\t\t\t\tconfiguredMulticursorModifier = platform.isMacintosh ? 'metaKey' : 'ctrlKey';\n\t\t\t} else {\n\t\t\t\tconfiguredMulticursorModifier = 'altKey';\n\t\t\t}\n\t\t}\n\t\tconst multiCursorModifier = _stringSet<'altKey' | 'metaKey' | 'ctrlKey'>(configuredMulticursorModifier, defaults.multiCursorModifier, ['altKey', 'metaKey', 'ctrlKey']);\n\n\t\tlet autoClosingBrackets: EditorAutoClosingStrategy;\n\t\tlet autoClosingQuotes: EditorAutoClosingStrategy;\n\t\tlet autoSurround: EditorAutoSurroundStrategy;\n\t\tif (typeof opts.autoClosingBrackets === 'boolean' && opts.autoClosingBrackets === false) {\n\t\t\t// backwards compatibility: disable all on boolean false\n\t\t\tautoClosingBrackets = 'never';\n\t\t\tautoClosingQuotes = 'never';\n\t\t\tautoSurround = 'never';\n\t\t} else {\n\t\t\tautoClosingBrackets = _stringSet<EditorAutoClosingStrategy>(opts.autoClosingBrackets, defaults.autoClosingBrackets, ['always', 'languageDefined', 'beforeWhitespace', 'never']);\n\t\t\tautoClosingQuotes = _stringSet<EditorAutoClosingStrategy>(opts.autoClosingQuotes, defaults.autoClosingQuotes, ['always', 'languageDefined', 'beforeWhitespace', 'never']);\n\t\t\tautoSurround = _stringSet<EditorAutoSurroundStrategy>(opts.autoSurround, defaults.autoSurround, ['languageDefined', 'brackets', 'quotes', 'never']);\n\t\t}\n\n\t\treturn {\n\t\t\tinDiffEditor: _boolean(opts.inDiffEditor, defaults.inDiffEditor),\n\t\t\twordSeparators: _string(opts.wordSeparators, defaults.wordSeparators),\n\t\t\tlineNumbersMinChars: _clampedInt(opts.lineNumbersMinChars, defaults.lineNumbersMinChars, 1, 10),\n\t\t\tlineDecorationsWidth: (typeof opts.lineDecorationsWidth === 'undefined' ? defaults.lineDecorationsWidth : opts.lineDecorationsWidth),\n\t\t\treadOnly: _boolean(opts.readOnly, defaults.readOnly),\n\t\t\tmouseStyle: _stringSet<'text' | 'default' | 'copy'>(opts.mouseStyle, defaults.mouseStyle, ['text', 'default', 'copy']),\n\t\t\tdisableLayerHinting: _boolean(opts.disableLayerHinting, defaults.disableLayerHinting),\n\t\t\tautomaticLayout: _boolean(opts.automaticLayout, defaults.automaticLayout),\n\t\t\twordWrap: wordWrap,\n\t\t\twordWrapColumn: _clampedInt(opts.wordWrapColumn, defaults.wordWrapColumn, 1, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\twordWrapMinified: _boolean(opts.wordWrapMinified, defaults.wordWrapMinified),\n\t\t\twrappingIndent: _wrappingIndentFromString(opts.wrappingIndent, defaults.wrappingIndent),\n\t\t\twordWrapBreakBeforeCharacters: _string(opts.wordWrapBreakBeforeCharacters, defaults.wordWrapBreakBeforeCharacters),\n\t\t\twordWrapBreakAfterCharacters: _string(opts.wordWrapBreakAfterCharacters, defaults.wordWrapBreakAfterCharacters),\n\t\t\twordWrapBreakObtrusiveCharacters: _string(opts.wordWrapBreakObtrusiveCharacters, defaults.wordWrapBreakObtrusiveCharacters),\n\t\t\tautoClosingBrackets,\n\t\t\tautoClosingQuotes,\n\t\t\tautoSurround,\n\t\t\tautoIndent: _boolean(opts.autoIndent, defaults.autoIndent),\n\t\t\tdragAndDrop: _boolean(opts.dragAndDrop, defaults.dragAndDrop),\n\t\t\temptySelectionClipboard: _boolean(opts.emptySelectionClipboard, defaults.emptySelectionClipboard),\n\t\t\tcopyWithSyntaxHighlighting: _boolean(opts.copyWithSyntaxHighlighting, defaults.copyWithSyntaxHighlighting),\n\t\t\tuseTabStops: _boolean(opts.useTabStops, defaults.useTabStops),\n\t\t\tmultiCursorModifier: multiCursorModifier,\n\t\t\tmultiCursorMergeOverlapping: _boolean(opts.multiCursorMergeOverlapping, defaults.multiCursorMergeOverlapping),\n\t\t\taccessibilitySupport: _stringSet<'auto' | 'on' | 'off'>(opts.accessibilitySupport, defaults.accessibilitySupport, ['auto', 'on', 'off']),\n\t\t\tshowUnused: _boolean(opts.showUnused, defaults.showUnused),\n\t\t\tviewInfo: viewInfo,\n\t\t\tcontribInfo: contribInfo,\n\t\t};\n\t}\n\n\tprivate static _sanitizeScrollbarOpts(opts: IEditorScrollbarOptions | undefined, defaults: InternalEditorScrollbarOptions, mouseWheelScrollSensitivity: number, fastScrollSensitivity: number): InternalEditorScrollbarOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\t\tconst horizontalScrollbarSize = _clampedInt(opts.horizontalScrollbarSize, defaults.horizontalScrollbarSize, 0, 1000);\n\t\tconst verticalScrollbarSize = _clampedInt(opts.verticalScrollbarSize, defaults.verticalScrollbarSize, 0, 1000);\n\t\treturn {\n\t\t\tvertical: _scrollbarVisibilityFromString(opts.vertical, defaults.vertical),\n\t\t\thorizontal: _scrollbarVisibilityFromString(opts.horizontal, defaults.horizontal),\n\n\t\t\tarrowSize: _clampedInt(opts.arrowSize, defaults.arrowSize, 0, 1000),\n\t\t\tuseShadows: _boolean(opts.useShadows, defaults.useShadows),\n\n\t\t\tverticalHasArrows: _boolean(opts.verticalHasArrows, defaults.verticalHasArrows),\n\t\t\thorizontalHasArrows: _boolean(opts.horizontalHasArrows, defaults.horizontalHasArrows),\n\n\t\t\thorizontalScrollbarSize: horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: _clampedInt(opts.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n\n\t\t\tverticalScrollbarSize: verticalScrollbarSize,\n\t\t\tverticalSliderSize: _clampedInt(opts.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n\n\t\t\thandleMouseWheel: _boolean(opts.handleMouseWheel, defaults.handleMouseWheel),\n\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t};\n\t}\n\n\tprivate static _sanitizeMinimapOpts(opts: IEditorMinimapOptions | undefined, defaults: InternalEditorMinimapOptions): InternalEditorMinimapOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\t\treturn {\n\t\t\tenabled: _boolean(opts.enabled, defaults.enabled),\n\t\t\tside: _stringSet<'right' | 'left'>(opts.side, defaults.side, ['right', 'left']),\n\t\t\tshowSlider: _stringSet<'always' | 'mouseover'>(opts.showSlider, defaults.showSlider, ['always', 'mouseover']),\n\t\t\trenderCharacters: _boolean(opts.renderCharacters, defaults.renderCharacters),\n\t\t\tmaxColumn: _clampedInt(opts.maxColumn, defaults.maxColumn, 1, 10000),\n\t\t};\n\t}\n\n\tprivate static _sanitizeFindOpts(opts: IEditorFindOptions | undefined, defaults: InternalEditorFindOptions): InternalEditorFindOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\n\t\treturn {\n\t\t\tseedSearchStringFromSelection: _boolean(opts.seedSearchStringFromSelection, defaults.seedSearchStringFromSelection),\n\t\t\tautoFindInSelection: _boolean(opts.autoFindInSelection, defaults.autoFindInSelection),\n\t\t\tglobalFindClipboard: _boolean(opts.globalFindClipboard, defaults.globalFindClipboard),\n\t\t\taddExtraSpaceOnTop: _boolean(opts.addExtraSpaceOnTop, defaults.addExtraSpaceOnTop)\n\t\t};\n\t}\n\n\tprivate static _sanitizeParameterHintOpts(opts: IEditorParameterHintOptions | undefined, defaults: InternalParameterHintOptions): InternalParameterHintOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\n\t\treturn {\n\t\t\tenabled: _boolean(opts.enabled, defaults.enabled),\n\t\t\tcycle: _boolean(opts.cycle, defaults.cycle)\n\t\t};\n\t}\n\n\tprivate static _sanitizeHoverOpts(_opts: boolean | IEditorHoverOptions | undefined, defaults: InternalEditorHoverOptions): InternalEditorHoverOptions {\n\t\tlet opts: IEditorHoverOptions;\n\t\tif (typeof _opts === 'boolean') {\n\t\t\topts = {\n\t\t\t\tenabled: _opts\n\t\t\t};\n\t\t} else if (typeof _opts === 'object') {\n\t\t\topts = _opts;\n\t\t} else {\n\t\t\treturn defaults;\n\t\t}\n\n\t\treturn {\n\t\t\tenabled: _boolean(opts.enabled, defaults.enabled),\n\t\t\tdelay: _clampedInt(opts.delay, defaults.delay, 0, 10000),\n\t\t\tsticky: _boolean(opts.sticky, defaults.sticky)\n\t\t};\n\t}\n\n\tprivate static _sanitizeSuggestOpts(opts: IEditorOptions, defaults: InternalSuggestOptions): InternalSuggestOptions {\n\t\tconst suggestOpts = opts.suggest || {};\n\t\treturn {\n\t\t\tfilterGraceful: _boolean(suggestOpts.filterGraceful, defaults.filterGraceful),\n\t\t\tsnippets: _stringSet<'top' | 'bottom' | 'inline' | 'none'>(opts.snippetSuggestions, defaults.snippets, ['top', 'bottom', 'inline', 'none']),\n\t\t\tsnippetsPreventQuickSuggestions: _boolean(suggestOpts.snippetsPreventQuickSuggestions, defaults.filterGraceful),\n\t\t\tlocalityBonus: _boolean(suggestOpts.localityBonus, defaults.localityBonus),\n\t\t\tshareSuggestSelections: _boolean(suggestOpts.shareSuggestSelections, defaults.shareSuggestSelections),\n\t\t\tshowIcons: _boolean(suggestOpts.showIcons, defaults.showIcons),\n\t\t\tmaxVisibleSuggestions: _clampedInt(suggestOpts.maxVisibleSuggestions, defaults.maxVisibleSuggestions, 1, 12),\n\t\t\tfilteredTypes: isObject(suggestOpts.filteredTypes) ? suggestOpts.filteredTypes : Object.create(null)\n\t\t};\n\t}\n\n\tprivate static _santizeGotoLocationOpts(opts: IEditorOptions, defaults: InternalGoToLocationOptions): InternalGoToLocationOptions {\n\t\tconst gotoOpts = opts.gotoLocation || {};\n\t\treturn {\n\t\t\tmany: _stringSet<'peek' | 'revealAndPeek' | 'reveal'>(gotoOpts.many, defaults.many, ['peek', 'revealAndPeek', 'reveal'])\n\t\t};\n\t}\n\n\tprivate static _sanitizeTabCompletionOpts(opts: boolean | 'on' | 'off' | 'onlySnippets' | undefined, defaults: 'on' | 'off' | 'onlySnippets'): 'on' | 'off' | 'onlySnippets' {\n\t\tif (opts === false) {\n\t\t\treturn 'off';\n\t\t} else if (opts === true) {\n\t\t\treturn 'onlySnippets';\n\t\t} else {\n\t\t\treturn _stringSet<'on' | 'off' | 'onlySnippets'>(opts, defaults, ['on', 'off', 'onlySnippets']);\n\t\t}\n\t}\n\n\tprivate static _sanitizeViewInfo(opts: IEditorOptions, defaults: InternalEditorViewOptions): InternalEditorViewOptions {\n\n\t\tlet rulers: number[] = [];\n\t\tif (Array.isArray(opts.rulers)) {\n\t\t\tfor (let i = 0, len = opts.rulers.length; i < len; i++) {\n\t\t\t\trulers.push(_clampedInt(opts.rulers[i], 0, 0, 10000));\n\t\t\t}\n\t\t\trulers.sort();\n\t\t}\n\n\t\tlet renderLineNumbers: RenderLineNumbersType = defaults.renderLineNumbers;\n\t\tlet renderCustomLineNumbers: ((lineNumber: number) => string) | null = defaults.renderCustomLineNumbers;\n\n\t\tif (typeof opts.lineNumbers !== 'undefined') {\n\t\t\tlet lineNumbers = opts.lineNumbers;\n\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>lineNumbers === true) {\n\t\t\t\tlineNumbers = 'on';\n\t\t\t} else if (<any>lineNumbers === false) {\n\t\t\t\tlineNumbers = 'off';\n\t\t\t}\n\n\t\t\tif (typeof lineNumbers === 'function') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Custom;\n\t\t\t\trenderCustomLineNumbers = lineNumbers;\n\t\t\t} else if (lineNumbers === 'interval') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Interval;\n\t\t\t} else if (lineNumbers === 'relative') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Relative;\n\t\t\t} else if (lineNumbers === 'on') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.On;\n\t\t\t} else {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Off;\n\t\t\t}\n\t\t}\n\n\t\tconst fontLigatures = _boolean(opts.fontLigatures, defaults.fontLigatures);\n\t\tconst disableMonospaceOptimizations = _boolean(opts.disableMonospaceOptimizations, defaults.disableMonospaceOptimizations) || fontLigatures;\n\n\t\tlet renderWhitespace = opts.renderWhitespace;\n\t\t{\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>renderWhitespace === true) {\n\t\t\t\trenderWhitespace = 'boundary';\n\t\t\t} else if (<any>renderWhitespace === false) {\n\t\t\t\trenderWhitespace = 'none';\n\t\t\t}\n\t\t\trenderWhitespace = _stringSet<'none' | 'boundary' | 'all'>(renderWhitespace, defaults.renderWhitespace, ['none', 'boundary', 'all']);\n\t\t}\n\n\t\tlet renderLineHighlight = opts.renderLineHighlight;\n\t\t{\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>renderLineHighlight === true) {\n\t\t\t\trenderLineHighlight = 'line';\n\t\t\t} else if (<any>renderLineHighlight === false) {\n\t\t\t\trenderLineHighlight = 'none';\n\t\t\t}\n\t\t\trenderLineHighlight = _stringSet<'none' | 'gutter' | 'line' | 'all'>(renderLineHighlight, defaults.renderLineHighlight, ['none', 'gutter', 'line', 'all']);\n\t\t}\n\n\t\tlet mouseWheelScrollSensitivity = _float(opts.mouseWheelScrollSensitivity, defaults.scrollbar.mouseWheelScrollSensitivity);\n\t\tif (mouseWheelScrollSensitivity === 0) {\n\t\t\t// Disallow 0, as it would prevent/block scrolling\n\t\t\tmouseWheelScrollSensitivity = 1;\n\t\t}\n\n\t\tlet fastScrollSensitivity = _float(opts.fastScrollSensitivity, defaults.scrollbar.fastScrollSensitivity);\n\t\tif (fastScrollSensitivity <= 0) {\n\t\t\tfastScrollSensitivity = defaults.scrollbar.fastScrollSensitivity;\n\t\t}\n\t\tconst scrollbar = this._sanitizeScrollbarOpts(opts.scrollbar, defaults.scrollbar, mouseWheelScrollSensitivity, fastScrollSensitivity);\n\t\tconst minimap = this._sanitizeMinimapOpts(opts.minimap, defaults.minimap);\n\n\t\treturn {\n\t\t\textraEditorClassName: _string(opts.extraEditorClassName, defaults.extraEditorClassName),\n\t\t\tdisableMonospaceOptimizations: disableMonospaceOptimizations,\n\t\t\trulers: rulers,\n\t\t\tariaLabel: _string(opts.ariaLabel, defaults.ariaLabel),\n\t\t\trenderLineNumbers: renderLineNumbers,\n\t\t\trenderCustomLineNumbers: renderCustomLineNumbers,\n\t\t\trenderFinalNewline: _boolean(opts.renderFinalNewline, defaults.renderFinalNewline),\n\t\t\tselectOnLineNumbers: _boolean(opts.selectOnLineNumbers, defaults.selectOnLineNumbers),\n\t\t\tglyphMargin: _boolean(opts.glyphMargin, defaults.glyphMargin),\n\t\t\trevealHorizontalRightPadding: _clampedInt(opts.revealHorizontalRightPadding, defaults.revealHorizontalRightPadding, 0, 1000),\n\t\t\troundedSelection: _boolean(opts.roundedSelection, defaults.roundedSelection),\n\t\t\toverviewRulerLanes: _clampedInt(opts.overviewRulerLanes, defaults.overviewRulerLanes, 0, 3),\n\t\t\toverviewRulerBorder: _boolean(opts.overviewRulerBorder, defaults.overviewRulerBorder),\n\t\t\tcursorBlinking: _cursorBlinkingStyleFromString(opts.cursorBlinking, defaults.cursorBlinking),\n\t\t\tmouseWheelZoom: _boolean(opts.mouseWheelZoom, defaults.mouseWheelZoom),\n\t\t\tcursorSmoothCaretAnimation: _boolean(opts.cursorSmoothCaretAnimation, defaults.cursorSmoothCaretAnimation),\n\t\t\tcursorStyle: _cursorStyleFromString(opts.cursorStyle, defaults.cursorStyle),\n\t\t\tcursorWidth: _clampedInt(opts.cursorWidth, defaults.cursorWidth, 0, Number.MAX_VALUE),\n\t\t\thideCursorInOverviewRuler: _boolean(opts.hideCursorInOverviewRuler, defaults.hideCursorInOverviewRuler),\n\t\t\tscrollBeyondLastLine: _boolean(opts.scrollBeyondLastLine, defaults.scrollBeyondLastLine),\n\t\t\tscrollBeyondLastColumn: _clampedInt(opts.scrollBeyondLastColumn, defaults.scrollBeyondLastColumn, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\tsmoothScrolling: _boolean(opts.smoothScrolling, defaults.smoothScrolling),\n\t\t\tstopRenderingLineAfter: _clampedInt(opts.stopRenderingLineAfter, defaults.stopRenderingLineAfter, -1, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\trenderWhitespace: renderWhitespace,\n\t\t\trenderControlCharacters: _boolean(opts.renderControlCharacters, defaults.renderControlCharacters),\n\t\t\tfontLigatures: fontLigatures,\n\t\t\trenderIndentGuides: _boolean(opts.renderIndentGuides, defaults.renderIndentGuides),\n\t\t\thighlightActiveIndentGuide: _boolean(opts.highlightActiveIndentGuide, defaults.highlightActiveIndentGuide),\n\t\t\trenderLineHighlight: renderLineHighlight,\n\t\t\tscrollbar: scrollbar,\n\t\t\tminimap: minimap,\n\t\t\tfixedOverflowWidgets: _boolean(opts.fixedOverflowWidgets, defaults.fixedOverflowWidgets),\n\t\t};\n\t}\n\n\tprivate static _sanitizeContribInfo(opts: IEditorOptions, defaults: EditorContribOptions): EditorContribOptions {\n\t\tlet quickSuggestions: boolean | { other: boolean, comments: boolean, strings: boolean };\n\t\tif (typeof opts.quickSuggestions === 'object') {\n\t\t\tquickSuggestions = { other: true, ...opts.quickSuggestions };\n\t\t} else {\n\t\t\tquickSuggestions = _boolean(opts.quickSuggestions, defaults.quickSuggestions);\n\t\t}\n\t\t// Compatibility support for acceptSuggestionOnEnter\n\t\tif (typeof opts.acceptSuggestionOnEnter === 'boolean') {\n\t\t\topts.acceptSuggestionOnEnter = opts.acceptSuggestionOnEnter ? 'on' : 'off';\n\t\t}\n\t\tconst find = this._sanitizeFindOpts(opts.find, defaults.find);\n\t\treturn {\n\t\t\tselectionClipboard: _boolean(opts.selectionClipboard, defaults.selectionClipboard),\n\t\t\thover: this._sanitizeHoverOpts(opts.hover, defaults.hover),\n\t\t\tlinks: _boolean(opts.links, defaults.links),\n\t\t\tcontextmenu: _boolean(opts.contextmenu, defaults.contextmenu),\n\t\t\tquickSuggestions: quickSuggestions,\n\t\t\tquickSuggestionsDelay: _clampedInt(opts.quickSuggestionsDelay, defaults.quickSuggestionsDelay, Constants.MIN_SAFE_SMALL_INTEGER, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\tparameterHints: this._sanitizeParameterHintOpts(opts.parameterHints, defaults.parameterHints),\n\t\t\tformatOnType: _boolean(opts.formatOnType, defaults.formatOnType),\n\t\t\tformatOnPaste: _boolean(opts.formatOnPaste, defaults.formatOnPaste),\n\t\t\tsuggestOnTriggerCharacters: _boolean(opts.suggestOnTriggerCharacters, defaults.suggestOnTriggerCharacters),\n\t\t\tacceptSuggestionOnEnter: _stringSet<'on' | 'smart' | 'off'>(opts.acceptSuggestionOnEnter, defaults.acceptSuggestionOnEnter, ['on', 'smart', 'off']),\n\t\t\tacceptSuggestionOnCommitCharacter: _boolean(opts.acceptSuggestionOnCommitCharacter, defaults.acceptSuggestionOnCommitCharacter),\n\t\t\twordBasedSuggestions: _boolean(opts.wordBasedSuggestions, defaults.wordBasedSuggestions),\n\t\t\tsuggestSelection: _stringSet<'first' | 'recentlyUsed' | 'recentlyUsedByPrefix'>(opts.suggestSelection, defaults.suggestSelection, ['first', 'recentlyUsed', 'recentlyUsedByPrefix']),\n\t\t\tsuggestFontSize: _clampedInt(opts.suggestFontSize, defaults.suggestFontSize, 0, 1000),\n\t\t\tsuggestLineHeight: _clampedInt(opts.suggestLineHeight, defaults.suggestLineHeight, 0, 1000),\n\t\t\ttabCompletion: this._sanitizeTabCompletionOpts(opts.tabCompletion, defaults.tabCompletion),\n\t\t\tsuggest: this._sanitizeSuggestOpts(opts, defaults.suggest),\n\t\t\tgotoLocation: this._santizeGotoLocationOpts(opts, defaults.gotoLocation),\n\t\t\tselectionHighlight: _boolean(opts.selectionHighlight, defaults.selectionHighlight),\n\t\t\toccurrencesHighlight: _boolean(opts.occurrencesHighlight, defaults.occurrencesHighlight),\n\t\t\tcodeLens: _boolean(opts.codeLens, defaults.codeLens),\n\t\t\tfolding: _boolean(opts.folding, defaults.folding),\n\t\t\tfoldingStrategy: _stringSet<'auto' | 'indentation'>(opts.foldingStrategy, defaults.foldingStrategy, ['auto', 'indentation']),\n\t\t\tshowFoldingControls: _stringSet<'always' | 'mouseover'>(opts.showFoldingControls, defaults.showFoldingControls, ['always', 'mouseover']),\n\t\t\tmatchBrackets: _boolean(opts.matchBrackets, defaults.matchBrackets),\n\t\t\tfind: find,\n\t\t\tcolorDecorators: _boolean(opts.colorDecorators, defaults.colorDecorators),\n\t\t\tlightbulbEnabled: _boolean(opts.lightbulb ? opts.lightbulb.enabled : false, defaults.lightbulbEnabled),\n\t\t\tcodeActionsOnSave: _booleanMap(opts.codeActionsOnSave, {}),\n\t\t\tcodeActionsOnSaveTimeout: _clampedInt(opts.codeActionsOnSaveTimeout, defaults.codeActionsOnSaveTimeout, 1, 10000)\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport class InternalEditorOptionsFactory {\n\n\tprivate static _tweakValidatedOptions(opts: IValidatedEditorOptions, accessibilitySupport: AccessibilitySupport): IValidatedEditorOptions {\n\t\tconst accessibilityIsOn = (accessibilitySupport === AccessibilitySupport.Enabled);\n\t\tconst accessibilityIsOff = (accessibilitySupport === AccessibilitySupport.Disabled);\n\t\treturn {\n\t\t\tinDiffEditor: opts.inDiffEditor,\n\t\t\twordSeparators: opts.wordSeparators,\n\t\t\tlineNumbersMinChars: opts.lineNumbersMinChars,\n\t\t\tlineDecorationsWidth: opts.lineDecorationsWidth,\n\t\t\treadOnly: opts.readOnly,\n\t\t\tmouseStyle: opts.mouseStyle,\n\t\t\tdisableLayerHinting: opts.disableLayerHinting,\n\t\t\tautomaticLayout: opts.automaticLayout,\n\t\t\twordWrap: opts.wordWrap,\n\t\t\twordWrapColumn: opts.wordWrapColumn,\n\t\t\twordWrapMinified: opts.wordWrapMinified,\n\t\t\twrappingIndent: opts.wrappingIndent,\n\t\t\twordWrapBreakBeforeCharacters: opts.wordWrapBreakBeforeCharacters,\n\t\t\twordWrapBreakAfterCharacters: opts.wordWrapBreakAfterCharacters,\n\t\t\twordWrapBreakObtrusiveCharacters: opts.wordWrapBreakObtrusiveCharacters,\n\t\t\tautoClosingBrackets: opts.autoClosingBrackets,\n\t\t\tautoClosingQuotes: opts.autoClosingQuotes,\n\t\t\tautoSurround: opts.autoSurround,\n\t\t\tautoIndent: opts.autoIndent,\n\t\t\tdragAndDrop: opts.dragAndDrop,\n\t\t\temptySelectionClipboard: opts.emptySelectionClipboard,\n\t\t\tcopyWithSyntaxHighlighting: opts.copyWithSyntaxHighlighting,\n\t\t\tuseTabStops: opts.useTabStops,\n\t\t\tmultiCursorModifier: opts.multiCursorModifier,\n\t\t\tmultiCursorMergeOverlapping: opts.multiCursorMergeOverlapping,\n\t\t\taccessibilitySupport: opts.accessibilitySupport,\n\t\t\tshowUnused: opts.showUnused,\n\n\t\t\tviewInfo: {\n\t\t\t\textraEditorClassName: opts.viewInfo.extraEditorClassName,\n\t\t\t\tdisableMonospaceOptimizations: opts.viewInfo.disableMonospaceOptimizations,\n\t\t\t\trulers: opts.viewInfo.rulers,\n\t\t\t\tariaLabel: (accessibilityIsOff ? nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press Alt+F1 for options.\") : opts.viewInfo.ariaLabel),\n\t\t\t\trenderLineNumbers: opts.viewInfo.renderLineNumbers,\n\t\t\t\trenderCustomLineNumbers: opts.viewInfo.renderCustomLineNumbers,\n\t\t\t\trenderFinalNewline: opts.viewInfo.renderFinalNewline,\n\t\t\t\tselectOnLineNumbers: opts.viewInfo.selectOnLineNumbers,\n\t\t\t\tglyphMargin: opts.viewInfo.glyphMargin,\n\t\t\t\trevealHorizontalRightPadding: opts.viewInfo.revealHorizontalRightPadding,\n\t\t\t\troundedSelection: (accessibilityIsOn ? false : opts.viewInfo.roundedSelection), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\toverviewRulerLanes: opts.viewInfo.overviewRulerLanes,\n\t\t\t\toverviewRulerBorder: opts.viewInfo.overviewRulerBorder,\n\t\t\t\tcursorBlinking: opts.viewInfo.cursorBlinking,\n\t\t\t\tmouseWheelZoom: opts.viewInfo.mouseWheelZoom,\n\t\t\t\tcursorSmoothCaretAnimation: opts.viewInfo.cursorSmoothCaretAnimation,\n\t\t\t\tcursorStyle: opts.viewInfo.cursorStyle,\n\t\t\t\tcursorWidth: opts.viewInfo.cursorWidth,\n\t\t\t\thideCursorInOverviewRuler: opts.viewInfo.hideCursorInOverviewRuler,\n\t\t\t\tscrollBeyondLastLine: opts.viewInfo.scrollBeyondLastLine,\n\t\t\t\tscrollBeyondLastColumn: opts.viewInfo.scrollBeyondLastColumn,\n\t\t\t\tsmoothScrolling: opts.viewInfo.smoothScrolling,\n\t\t\t\tstopRenderingLineAfter: opts.viewInfo.stopRenderingLineAfter,\n\t\t\t\trenderWhitespace: (accessibilityIsOn ? 'none' : opts.viewInfo.renderWhitespace), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\trenderControlCharacters: (accessibilityIsOn ? false : opts.viewInfo.renderControlCharacters), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfontLigatures: (accessibilityIsOn ? false : opts.viewInfo.fontLigatures), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\trenderIndentGuides: (accessibilityIsOn ? false : opts.viewInfo.renderIndentGuides), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\thighlightActiveIndentGuide: opts.viewInfo.highlightActiveIndentGuide,\n\t\t\t\trenderLineHighlight: opts.viewInfo.renderLineHighlight,\n\t\t\t\tscrollbar: opts.viewInfo.scrollbar,\n\t\t\t\tminimap: {\n\t\t\t\t\tenabled: (accessibilityIsOn ? false : opts.viewInfo.minimap.enabled), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\t\tside: opts.viewInfo.minimap.side,\n\t\t\t\t\trenderCharacters: opts.viewInfo.minimap.renderCharacters,\n\t\t\t\t\tshowSlider: opts.viewInfo.minimap.showSlider,\n\t\t\t\t\tmaxColumn: opts.viewInfo.minimap.maxColumn\n\t\t\t\t},\n\t\t\t\tfixedOverflowWidgets: opts.viewInfo.fixedOverflowWidgets\n\t\t\t},\n\n\t\t\tcontribInfo: {\n\t\t\t\tselectionClipboard: opts.contribInfo.selectionClipboard,\n\t\t\t\thover: opts.contribInfo.hover,\n\t\t\t\tlinks: (accessibilityIsOn ? false : opts.contribInfo.links), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tcontextmenu: opts.contribInfo.contextmenu,\n\t\t\t\tquickSuggestions: opts.contribInfo.quickSuggestions,\n\t\t\t\tquickSuggestionsDelay: opts.contribInfo.quickSuggestionsDelay,\n\t\t\t\tparameterHints: opts.contribInfo.parameterHints,\n\t\t\t\tformatOnType: opts.contribInfo.formatOnType,\n\t\t\t\tformatOnPaste: opts.contribInfo.formatOnPaste,\n\t\t\t\tsuggestOnTriggerCharacters: opts.contribInfo.suggestOnTriggerCharacters,\n\t\t\t\tacceptSuggestionOnEnter: opts.contribInfo.acceptSuggestionOnEnter,\n\t\t\t\tacceptSuggestionOnCommitCharacter: opts.contribInfo.acceptSuggestionOnCommitCharacter,\n\t\t\t\twordBasedSuggestions: opts.contribInfo.wordBasedSuggestions,\n\t\t\t\tsuggestSelection: opts.contribInfo.suggestSelection,\n\t\t\t\tsuggestFontSize: opts.contribInfo.suggestFontSize,\n\t\t\t\tsuggestLineHeight: opts.contribInfo.suggestLineHeight,\n\t\t\t\ttabCompletion: opts.contribInfo.tabCompletion,\n\t\t\t\tsuggest: opts.contribInfo.suggest,\n\t\t\t\tgotoLocation: opts.contribInfo.gotoLocation,\n\t\t\t\tselectionHighlight: (accessibilityIsOn ? false : opts.contribInfo.selectionHighlight), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\toccurrencesHighlight: (accessibilityIsOn ? false : opts.contribInfo.occurrencesHighlight), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tcodeLens: (accessibilityIsOn ? false : opts.contribInfo.codeLens), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfolding: (accessibilityIsOn ? false : opts.contribInfo.folding), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfoldingStrategy: opts.contribInfo.foldingStrategy,\n\t\t\t\tshowFoldingControls: opts.contribInfo.showFoldingControls,\n\t\t\t\tmatchBrackets: (accessibilityIsOn ? false : opts.contribInfo.matchBrackets), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfind: opts.contribInfo.find,\n\t\t\t\tcolorDecorators: opts.contribInfo.colorDecorators,\n\t\t\t\tlightbulbEnabled: opts.contribInfo.lightbulbEnabled,\n\t\t\t\tcodeActionsOnSave: opts.contribInfo.codeActionsOnSave,\n\t\t\t\tcodeActionsOnSaveTimeout: opts.contribInfo.codeActionsOnSaveTimeout\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static createInternalEditorOptions(env: IEnvironmentalOptions, _opts: IValidatedEditorOptions) {\n\n\t\tlet accessibilitySupport: AccessibilitySupport;\n\t\tif (_opts.accessibilitySupport === 'auto') {\n\t\t\t// The editor reads the `accessibilitySupport` from the environment\n\t\t\taccessibilitySupport = env.accessibilitySupport;\n\t\t} else if (_opts.accessibilitySupport === 'on') {\n\t\t\taccessibilitySupport = AccessibilitySupport.Enabled;\n\t\t} else {\n\t\t\taccessibilitySupport = AccessibilitySupport.Disabled;\n\t\t}\n\n\t\t// Disable some non critical features to get as best performance as possible\n\t\t// See https://github.com/Microsoft/vscode/issues/26730\n\t\tconst opts = this._tweakValidatedOptions(_opts, accessibilitySupport);\n\n\t\tlet lineDecorationsWidth: number;\n\t\tif (typeof opts.lineDecorationsWidth === 'string' && /^\\d+(\\.\\d+)?ch$/.test(opts.lineDecorationsWidth)) {\n\t\t\tconst multiple = parseFloat(opts.lineDecorationsWidth.substr(0, opts.lineDecorationsWidth.length - 2));\n\t\t\tlineDecorationsWidth = multiple * env.fontInfo.typicalHalfwidthCharacterWidth;\n\t\t} else {\n\t\t\tlineDecorationsWidth = _clampedInt(opts.lineDecorationsWidth, 0, 0, 1000);\n\t\t}\n\t\tif (opts.contribInfo.folding) {\n\t\t\tlineDecorationsWidth += 16;\n\t\t}\n\n\t\tconst layoutInfo = EditorLayoutProvider.compute({\n\t\t\touterWidth: env.outerWidth,\n\t\t\touterHeight: env.outerHeight,\n\t\t\tshowGlyphMargin: opts.viewInfo.glyphMargin,\n\t\t\tlineHeight: env.fontInfo.lineHeight,\n\t\t\tshowLineNumbers: (opts.viewInfo.renderLineNumbers !== RenderLineNumbersType.Off),\n\t\t\tlineNumbersMinChars: opts.lineNumbersMinChars,\n\t\t\tlineNumbersDigitCount: env.lineNumbersDigitCount,\n\t\t\tlineDecorationsWidth: lineDecorationsWidth,\n\t\t\ttypicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n\t\t\tmaxDigitWidth: env.fontInfo.maxDigitWidth,\n\t\t\tverticalScrollbarWidth: opts.viewInfo.scrollbar.verticalScrollbarSize,\n\t\t\thorizontalScrollbarHeight: opts.viewInfo.scrollbar.horizontalScrollbarSize,\n\t\t\tscrollbarArrowSize: opts.viewInfo.scrollbar.arrowSize,\n\t\t\tverticalScrollbarHasArrows: opts.viewInfo.scrollbar.verticalHasArrows,\n\t\t\tminimap: opts.viewInfo.minimap.enabled,\n\t\t\tminimapSide: opts.viewInfo.minimap.side,\n\t\t\tminimapRenderCharacters: opts.viewInfo.minimap.renderCharacters,\n\t\t\tminimapMaxColumn: opts.viewInfo.minimap.maxColumn,\n\t\t\tpixelRatio: env.pixelRatio\n\t\t});\n\n\t\tlet bareWrappingInfo: { isWordWrapMinified: boolean; isViewportWrapping: boolean; wrappingColumn: number; } | null = null;\n\t\t{\n\t\t\tconst wordWrap = opts.wordWrap;\n\t\t\tconst wordWrapColumn = opts.wordWrapColumn;\n\t\t\tconst wordWrapMinified = opts.wordWrapMinified;\n\n\t\t\tif (accessibilitySupport === AccessibilitySupport.Enabled) {\n\t\t\t\t// See https://github.com/Microsoft/vscode/issues/27766\n\t\t\t\t// Never enable wrapping when a screen reader is attached\n\t\t\t\t// because arrow down etc. will not move the cursor in the way\n\t\t\t\t// a screen reader expects.\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: -1\n\t\t\t\t};\n\t\t\t} else if (wordWrapMinified && env.isDominatedByLongLines) {\n\t\t\t\t// Force viewport width wrapping if model is dominated by long lines\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: true,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'on') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'bounded') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.min(Math.max(1, layoutInfo.viewportColumn), wordWrapColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'wordWrapColumn') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: wordWrapColumn\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: -1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst wrappingInfo: EditorWrappingInfo = {\n\t\t\tinDiffEditor: opts.inDiffEditor,\n\t\t\tisDominatedByLongLines: env.isDominatedByLongLines,\n\t\t\tisWordWrapMinified: bareWrappingInfo.isWordWrapMinified,\n\t\t\tisViewportWrapping: bareWrappingInfo.isViewportWrapping,\n\t\t\twrappingColumn: bareWrappingInfo.wrappingColumn,\n\t\t\twrappingIndent: opts.wrappingIndent,\n\t\t\twordWrapBreakBeforeCharacters: opts.wordWrapBreakBeforeCharacters,\n\t\t\twordWrapBreakAfterCharacters: opts.wordWrapBreakAfterCharacters,\n\t\t\twordWrapBreakObtrusiveCharacters: opts.wordWrapBreakObtrusiveCharacters,\n\t\t};\n\n\t\tlet className = 'monaco-editor';\n\t\tif (opts.viewInfo.extraEditorClassName) {\n\t\t\tclassName += ' ' + opts.viewInfo.extraEditorClassName;\n\t\t}\n\t\tif (env.extraEditorClassName) {\n\t\t\tclassName += ' ' + env.extraEditorClassName;\n\t\t}\n\t\tif (opts.viewInfo.fontLigatures) {\n\t\t\tclassName += ' enable-ligatures';\n\t\t}\n\t\tif (opts.mouseStyle === 'default') {\n\t\t\tclassName += ' mouse-default';\n\t\t} else if (opts.mouseStyle === 'copy') {\n\t\t\tclassName += ' mouse-copy';\n\t\t}\n\n\t\treturn new InternalEditorOptions({\n\t\t\tcanUseLayerHinting: opts.disableLayerHinting ? false : true,\n\t\t\tpixelRatio: env.pixelRatio,\n\t\t\teditorClassName: className,\n\t\t\tlineHeight: env.fontInfo.lineHeight,\n\t\t\treadOnly: opts.readOnly,\n\t\t\taccessibilitySupport: accessibilitySupport,\n\t\t\tmultiCursorModifier: opts.multiCursorModifier,\n\t\t\tmultiCursorMergeOverlapping: opts.multiCursorMergeOverlapping,\n\t\t\twordSeparators: opts.wordSeparators,\n\t\t\tautoClosingBrackets: opts.autoClosingBrackets,\n\t\t\tautoClosingQuotes: opts.autoClosingQuotes,\n\t\t\tautoSurround: opts.autoSurround,\n\t\t\tautoIndent: opts.autoIndent,\n\t\t\tuseTabStops: opts.useTabStops,\n\t\t\ttabFocusMode: opts.readOnly ? true : env.tabFocusMode,\n\t\t\tdragAndDrop: opts.dragAndDrop,\n\t\t\temptySelectionClipboard: opts.emptySelectionClipboard && env.emptySelectionClipboard,\n\t\t\tcopyWithSyntaxHighlighting: opts.copyWithSyntaxHighlighting,\n\t\t\tlayoutInfo: layoutInfo,\n\t\t\tfontInfo: env.fontInfo,\n\t\t\tviewInfo: opts.viewInfo,\n\t\t\twrappingInfo: wrappingInfo,\n\t\t\tcontribInfo: opts.contribInfo,\n\t\t\tshowUnused: opts.showUnused,\n\t\t});\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IEditorLayoutProviderOpts {\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\n\treadonly showGlyphMargin: boolean;\n\treadonly lineHeight: number;\n\n\treadonly showLineNumbers: boolean;\n\treadonly lineNumbersMinChars: number;\n\treadonly lineNumbersDigitCount: number;\n\n\treadonly lineDecorationsWidth: number;\n\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly maxDigitWidth: number;\n\n\treadonly verticalScrollbarWidth: number;\n\treadonly verticalScrollbarHasArrows: boolean;\n\treadonly scrollbarArrowSize: number;\n\treadonly horizontalScrollbarHeight: number;\n\n\treadonly minimap: boolean;\n\treadonly minimapSide: string;\n\treadonly minimapRenderCharacters: boolean;\n\treadonly minimapMaxColumn: number;\n\treadonly pixelRatio: number;\n}\n\n/**\n * @internal\n */\nexport class EditorLayoutProvider {\n\tpublic static compute(_opts: IEditorLayoutProviderOpts): EditorLayoutInfo {\n\t\tconst outerWidth = _opts.outerWidth | 0;\n\t\tconst outerHeight = _opts.outerHeight | 0;\n\t\tconst showGlyphMargin = _opts.showGlyphMargin;\n\t\tconst lineHeight = _opts.lineHeight | 0;\n\t\tconst showLineNumbers = _opts.showLineNumbers;\n\t\tconst lineNumbersMinChars = _opts.lineNumbersMinChars | 0;\n\t\tconst lineNumbersDigitCount = _opts.lineNumbersDigitCount | 0;\n\t\tconst lineDecorationsWidth = _opts.lineDecorationsWidth | 0;\n\t\tconst typicalHalfwidthCharacterWidth = _opts.typicalHalfwidthCharacterWidth;\n\t\tconst maxDigitWidth = _opts.maxDigitWidth;\n\t\tconst verticalScrollbarWidth = _opts.verticalScrollbarWidth | 0;\n\t\tconst verticalScrollbarHasArrows = _opts.verticalScrollbarHasArrows;\n\t\tconst scrollbarArrowSize = _opts.scrollbarArrowSize | 0;\n\t\tconst horizontalScrollbarHeight = _opts.horizontalScrollbarHeight | 0;\n\t\tconst minimap = _opts.minimap;\n\t\tconst minimapSide = _opts.minimapSide;\n\t\tconst minimapRenderCharacters = _opts.minimapRenderCharacters;\n\t\tconst minimapMaxColumn = _opts.minimapMaxColumn | 0;\n\t\tconst pixelRatio = _opts.pixelRatio;\n\n\t\tlet lineNumbersWidth = 0;\n\t\tif (showLineNumbers) {\n\t\t\tconst digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n\t\t\tlineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n\t\t}\n\n\t\tlet glyphMarginWidth = 0;\n\t\tif (showGlyphMargin) {\n\t\t\tglyphMarginWidth = lineHeight;\n\t\t}\n\n\t\tlet glyphMarginLeft = 0;\n\t\tlet lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n\t\tlet decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n\t\tlet contentLeft = decorationsLeft + lineDecorationsWidth;\n\n\t\tconst remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n\n\t\tlet renderMinimap: RenderMinimap;\n\t\tlet minimapLeft: number;\n\t\tlet minimapWidth: number;\n\t\tlet contentWidth: number;\n\t\tif (!minimap) {\n\t\t\tminimapLeft = 0;\n\t\t\tminimapWidth = 0;\n\t\t\trenderMinimap = RenderMinimap.None;\n\t\t\tcontentWidth = remainingWidth;\n\t\t} else {\n\t\t\tlet minimapCharWidth: number;\n\t\t\tif (pixelRatio >= 2) {\n\t\t\t\trenderMinimap = minimapRenderCharacters ? RenderMinimap.Large : RenderMinimap.LargeBlocks;\n\t\t\t\tminimapCharWidth = 2 / pixelRatio;\n\t\t\t} else {\n\t\t\t\trenderMinimap = minimapRenderCharacters ? RenderMinimap.Small : RenderMinimap.SmallBlocks;\n\t\t\t\tminimapCharWidth = 1 / pixelRatio;\n\t\t\t}\n\n\t\t\t// Given:\n\t\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\t\t// viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n\t\t\t// minimapWidth = viewportColumn * minimapCharWidth\n\t\t\t// contentWidth = remainingWidth - minimapWidth\n\t\t\t// What are good values for contentWidth and minimapWidth ?\n\n\t\t\t// minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n\t\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n\n\t\t\tminimapWidth = Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)));\n\t\t\tlet minimapColumns = minimapWidth / minimapCharWidth;\n\t\t\tif (minimapColumns > minimapMaxColumn) {\n\t\t\t\tminimapWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n\t\t\t}\n\t\t\tcontentWidth = remainingWidth - minimapWidth;\n\n\t\t\tif (minimapSide === 'left') {\n\t\t\t\tminimapLeft = 0;\n\t\t\t\tglyphMarginLeft += minimapWidth;\n\t\t\t\tlineNumbersLeft += minimapWidth;\n\t\t\t\tdecorationsLeft += minimapWidth;\n\t\t\t\tcontentLeft += minimapWidth;\n\t\t\t} else {\n\t\t\t\tminimapLeft = outerWidth - minimapWidth - verticalScrollbarWidth;\n\t\t\t}\n\t\t}\n\n\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\tconst viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n\n\t\tconst verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n\n\t\treturn {\n\t\t\twidth: outerWidth,\n\t\t\theight: outerHeight,\n\n\t\t\tglyphMarginLeft: glyphMarginLeft,\n\t\t\tglyphMarginWidth: glyphMarginWidth,\n\t\t\tglyphMarginHeight: outerHeight,\n\n\t\t\tlineNumbersLeft: lineNumbersLeft,\n\t\t\tlineNumbersWidth: lineNumbersWidth,\n\t\t\tlineNumbersHeight: outerHeight,\n\n\t\t\tdecorationsLeft: decorationsLeft,\n\t\t\tdecorationsWidth: lineDecorationsWidth,\n\t\t\tdecorationsHeight: outerHeight,\n\n\t\t\tcontentLeft: contentLeft,\n\t\t\tcontentWidth: contentWidth,\n\t\t\tcontentHeight: outerHeight,\n\n\t\t\trenderMinimap: renderMinimap,\n\t\t\tminimapLeft: minimapLeft,\n\t\t\tminimapWidth: minimapWidth,\n\n\t\t\tviewportColumn: viewportColumn,\n\n\t\t\tverticalScrollbarWidth: verticalScrollbarWidth,\n\t\t\thorizontalScrollbarHeight: horizontalScrollbarHeight,\n\n\t\t\toverviewRuler: {\n\t\t\t\ttop: verticalArrowSize,\n\t\t\t\twidth: verticalScrollbarWidth,\n\t\t\t\theight: (outerHeight - 2 * verticalArrowSize),\n\t\t\t\tright: 0\n\t\t\t}\n\t\t};\n\t}\n}\n\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace, \\'Droid Sans Fallback\\'';\n\n/**\n * @internal\n */\nexport const EDITOR_FONT_DEFAULTS = {\n\tfontFamily: (\n\t\tplatform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)\n\t),\n\tfontWeight: 'normal',\n\tfontSize: (\n\t\tplatform.isMacintosh ? 14 : 14\n\t),\n\tlineHeight: 0,\n\tletterSpacing: 0,\n};\n\n/**\n * @internal\n */\nexport const EDITOR_MODEL_DEFAULTS = {\n\ttabSize: 4,\n\tindentSize: 4,\n\tinsertSpaces: true,\n\tdetectIndentation: true,\n\ttrimAutoWhitespace: true,\n\tlargeFileOptimizations: true\n};\n\n/**\n * @internal\n */\nexport const EDITOR_DEFAULTS: IValidatedEditorOptions = {\n\tinDiffEditor: false,\n\twordSeparators: USUAL_WORD_SEPARATORS,\n\tlineNumbersMinChars: 5,\n\tlineDecorationsWidth: 10,\n\treadOnly: false,\n\tmouseStyle: 'text',\n\tdisableLayerHinting: false,\n\tautomaticLayout: false,\n\twordWrap: 'off',\n\twordWrapColumn: 80,\n\twordWrapMinified: true,\n\twrappingIndent: WrappingIndent.Same,\n\twordWrapBreakBeforeCharacters: '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋',\n\twordWrapBreakAfterCharacters: ' \\t})]?|/&,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣',\n\twordWrapBreakObtrusiveCharacters: '.',\n\tautoClosingBrackets: 'languageDefined',\n\tautoClosingQuotes: 'languageDefined',\n\tautoSurround: 'languageDefined',\n\tautoIndent: true,\n\tdragAndDrop: true,\n\temptySelectionClipboard: true,\n\tcopyWithSyntaxHighlighting: true,\n\tuseTabStops: true,\n\tmultiCursorModifier: 'altKey',\n\tmultiCursorMergeOverlapping: true,\n\taccessibilitySupport: 'auto',\n\tshowUnused: true,\n\n\tviewInfo: {\n\t\textraEditorClassName: '',\n\t\tdisableMonospaceOptimizations: false,\n\t\trulers: [],\n\t\tariaLabel: nls.localize('editorViewAccessibleLabel', \"Editor content\"),\n\t\trenderLineNumbers: RenderLineNumbersType.On,\n\t\trenderCustomLineNumbers: null,\n\t\trenderFinalNewline: (platform.isLinux ? false : true),\n\t\tselectOnLineNumbers: true,\n\t\tglyphMargin: true,\n\t\trevealHorizontalRightPadding: 30,\n\t\troundedSelection: true,\n\t\toverviewRulerLanes: 2,\n\t\toverviewRulerBorder: true,\n\t\tcursorBlinking: TextEditorCursorBlinkingStyle.Blink,\n\t\tmouseWheelZoom: false,\n\t\tcursorSmoothCaretAnimation: false,\n\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\tcursorWidth: 0,\n\t\thideCursorInOverviewRuler: false,\n\t\tscrollBeyondLastLine: true,\n\t\tscrollBeyondLastColumn: 5,\n\t\tsmoothScrolling: false,\n\t\tstopRenderingLineAfter: 10000,\n\t\trenderWhitespace: 'none',\n\t\trenderControlCharacters: false,\n\t\tfontLigatures: false,\n\t\trenderIndentGuides: true,\n\t\thighlightActiveIndentGuide: true,\n\t\trenderLineHighlight: 'line',\n\t\tscrollbar: {\n\t\t\tvertical: ScrollbarVisibility.Auto,\n\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\tarrowSize: 11,\n\t\t\tuseShadows: true,\n\t\t\tverticalHasArrows: false,\n\t\t\thorizontalHasArrows: false,\n\t\t\thorizontalScrollbarSize: 10,\n\t\t\thorizontalSliderSize: 10,\n\t\t\tverticalScrollbarSize: 14,\n\t\t\tverticalSliderSize: 14,\n\t\t\thandleMouseWheel: true,\n\t\t\tmouseWheelScrollSensitivity: 1,\n\t\t\tfastScrollSensitivity: 5,\n\t\t},\n\t\tminimap: {\n\t\t\tenabled: process.env.zenMode ? false : true,\n\t\t\tside: 'right',\n\t\t\tshowSlider: 'mouseover',\n\t\t\trenderCharacters: true,\n\t\t\tmaxColumn: 120\n\t\t},\n\t\tfixedOverflowWidgets: false,\n\t},\n\n\tcontribInfo: {\n\t\tselectionClipboard: true,\n\t\thover: {\n\t\t\tenabled: true,\n\t\t\tdelay: 300,\n\t\t\tsticky: true\n\t\t},\n\t\tlinks: true,\n\t\tcontextmenu: true,\n\t\tquickSuggestions: { other: true, comments: false, strings: false },\n\t\tquickSuggestionsDelay: 10,\n\t\tparameterHints: {\n\t\t\tenabled: true,\n\t\t\tcycle: false\n\t\t},\n\t\tformatOnType: false,\n\t\tformatOnPaste: false,\n\t\tsuggestOnTriggerCharacters: true,\n\t\tacceptSuggestionOnEnter: 'on',\n\t\tacceptSuggestionOnCommitCharacter: true,\n\t\twordBasedSuggestions: true,\n\t\tsuggestSelection: 'recentlyUsed',\n\t\tsuggestFontSize: 0,\n\t\tsuggestLineHeight: 0,\n\t\ttabCompletion: 'off',\n\t\tsuggest: {\n\t\t\tfilterGraceful: true,\n\t\t\tsnippets: 'inline',\n\t\t\tsnippetsPreventQuickSuggestions: true,\n\t\t\tlocalityBonus: false,\n\t\t\tshareSuggestSelections: false,\n\t\t\tshowIcons: true,\n\t\t\tmaxVisibleSuggestions: 12,\n\t\t\tfilteredTypes: Object.create(null)\n\t\t},\n\t\tgotoLocation: {\n\t\t\tmany: 'peek'\n\t\t},\n\t\tselectionHighlight: true,\n\t\toccurrencesHighlight: true,\n\t\tcodeLens: true,\n\t\tfolding: true,\n\t\tfoldingStrategy: 'auto',\n\t\tshowFoldingControls: 'mouseover',\n\t\tmatchBrackets: true,\n\t\tfind: {\n\t\t\tseedSearchStringFromSelection: true,\n\t\t\tautoFindInSelection: false,\n\t\t\tglobalFindClipboard: false,\n\t\t\taddExtraSpaceOnTop: true\n\t\t},\n\t\tcolorDecorators: true,\n\t\tlightbulbEnabled: true,\n\t\tcodeActionsOnSave: {},\n\t\tcodeActionsOnSaveTimeout: 750\n\t},\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = extension => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = 'pprice.better-merge';\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string;\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace';\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind;\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew(first: A1, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>, isOptional?: typeof optional): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<T>(ctor: IConstructorSignature0<T>): T;\n\tcreateInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n\tcreateInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n\tcreateInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[]=[]>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif (target[_util.DI_TARGET] === target) {\n\t\ttarget[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\ttarget[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\ttarget[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): { (...args: any[]): void; type: T; } {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextBufferFactory, ITextModel, ITextModelCreationOptions } from 'vs/editor/common/model';\nimport { ILanguageSelection } from 'vs/editor/common/services/modeService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IModelService = createDecorator<IModelService>('modelService');\n\nexport interface IModelService {\n\t_serviceBrand: any;\n\n\tcreateModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource: URI | undefined, isForSimpleWidget?: boolean): ITextModel;\n\n\tupdateModel(model: ITextModel, value: string | ITextBufferFactory): void;\n\n\tsetMode(model: ITextModel, languageSelection: ILanguageSelection): void;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): ITextModel[];\n\n\tgetCreationOptions(language: string, resource: URI, isForSimpleWidget: boolean): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): ITextModel | null;\n\n\tonModelAdded: Event<ITextModel>;\n\n\tonModelRemoved: Event<ITextModel>;\n\n\tonModelModeChanged: Event<{ model: ITextModel; oldModeId: string; }>;\n}\n\nexport function shouldSynchronizeModel(model: ITextModel): boolean {\n\treturn (\n\t\t!model.isTooLargeForSyncing() && !model.isForSimpleWidget\n\t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { LanguageSelector, score } from 'vs/editor/common/modes/languageSelector';\nimport { shouldSynchronizeModel } from 'vs/editor/common/services/modelService';\n\ninterface Entry<T> {\n\tselector: LanguageSelector;\n\tprovider: T;\n\t_score: number;\n\t_time: number;\n}\n\nfunction isExclusive(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t} else if (Array.isArray(selector)) {\n\t\treturn selector.every(isExclusive);\n\t} else {\n\t\treturn !!selector.exclusive;\n\t}\n}\n\nexport class LanguageFeatureRegistry<T> {\n\n\tprivate _clock: number = 0;\n\tprivate readonly _entries: Entry<T>[] = [];\n\tprivate readonly _onDidChange = new Emitter<number>();\n\n\tconstructor() {\n\t}\n\n\tget onDidChange(): Event<number> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tregister(selector: LanguageSelector, provider: T): IDisposable {\n\n\t\tlet entry: Entry<T> | undefined = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\t_score: -1,\n\t\t\t_time: this._clock++\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (entry) {\n\t\t\t\tlet idx = this._entries.indexOf(entry);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\tentry = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thas(model: ITextModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: ITextModel): T[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model);\n\t\tconst result: T[] = [];\n\n\t\t// from registry\n\t\tfor (let entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: ITextModel): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: ITextModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: ITextModel, callback: (provider: Entry<T>) => any): void {\n\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateScores(model);\n\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tcallback(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: { uri: string; language: string; } | undefined;\n\n\tprivate _updateScores(model: ITextModel): void {\n\n\t\tlet candidate = {\n\t\t\turi: model.uri.toString(),\n\t\t\tlanguage: model.getLanguageIdentifier().language\n\t\t};\n\n\t\tif (this._lastCandidate\n\t\t\t&& this._lastCandidate.language === candidate.language\n\t\t\t&& this._lastCandidate.uri === candidate.uri) {\n\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (let entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, model.uri, model.getLanguageIdentifier().language, shouldSynchronizeModel(model));\n\n\t\t\tif (isExclusive(entry.selector) && entry._score > 0) {\n\t\t\t\t// support for one exclusive selector that overwrites\n\t\t\t\t// any other selector\n\t\t\t\tfor (let entry of this._entries) {\n\t\t\t\t\tentry._score = 0;\n\t\t\t\t}\n\t\t\t\tentry._score = 1000;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// needs sorting\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<any>, b: Entry<any>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t} else if (a._time < b._time) {\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Color } from 'vs/base/common/color';\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isObject } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TokenizationResult, TokenizationResult2 } from 'vs/editor/common/core/token';\nimport * as model from 'vs/editor/common/model';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/modes/languageFeatureRegistry';\nimport { TokenizationRegistryImpl } from 'vs/editor/common/modes/tokenizationRegistry';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\n/**\n * Open ended enum at runtime\n * @internal\n */\nexport const enum LanguageId {\n\tNull = 0,\n\tPlainText = 1\n}\n\n/**\n * @internal\n */\nexport class LanguageIdentifier {\n\n\t/**\n\t * A string identifier. Unique across languages. e.g. 'javascript'.\n\t */\n\tpublic readonly language: string;\n\n\t/**\n\t * A numeric identifier. Unique across languages. e.g. 5\n\t * Will vary at runtime based on registration order, etc.\n\t */\n\tpublic readonly id: LanguageId;\n\n\tconstructor(language: string, id: LanguageId) {\n\t\tthis.language = language;\n\t\tthis.id = id;\n\t}\n}\n\n/**\n * A mode. Will soon be obsolete.\n * @internal\n */\nexport interface IMode {\n\n\tgetId(): string;\n\n\tgetLanguageIdentifier(): LanguageIdentifier;\n\n}\n\n/**\n * A font style. Values are 2^x such that a bit mask can be used.\n * @internal\n */\nexport const enum FontStyle {\n\tNotSet = -1,\n\tNone = 0,\n\tItalic = 1,\n\tBold = 2,\n\tUnderline = 4\n}\n\n/**\n * Open ended enum at runtime\n * @internal\n */\nexport const enum ColorId {\n\tNone = 0,\n\tDefaultForeground = 1,\n\tDefaultBackground = 2\n}\n\n/**\n * A standard token type. Values are 2^x such that a bit mask can be used.\n * @internal\n */\nexport const enum StandardTokenType {\n\tOther = 0,\n\tComment = 1,\n\tString = 2,\n\tRegEx = 4\n}\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (3 bits)\n *  - F = FontStyle (3 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n *\n * @internal\n */\nexport const enum MetadataConsts {\n\tLANGUAGEID_MASK = 0b00000000000000000000000011111111,\n\tTOKEN_TYPE_MASK = 0b00000000000000000000011100000000,\n\tFONT_STYLE_MASK = 0b00000000000000000011100000000000,\n\tFOREGROUND_MASK = 0b00000000011111111100000000000000,\n\tBACKGROUND_MASK = 0b11111111100000000000000000000000,\n\n\tLANGUAGEID_OFFSET = 0,\n\tTOKEN_TYPE_OFFSET = 8,\n\tFONT_STYLE_OFFSET = 11,\n\tFOREGROUND_OFFSET = 14,\n\tBACKGROUND_OFFSET = 23\n}\n\n/**\n * @internal\n */\nexport class TokenMetadata {\n\n\tpublic static getLanguageId(metadata: number): LanguageId {\n\t\treturn (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n\t}\n\n\tpublic static getTokenType(metadata: number): StandardTokenType {\n\t\treturn (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n\t}\n\n\tpublic static getFontStyle(metadata: number): FontStyle {\n\t\treturn (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n\t}\n\n\tpublic static getForeground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n\t}\n\n\tpublic static getBackground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n\t}\n\n\tpublic static getClassNameFromMetadata(metadata: number): string {\n\n\t\tlet foreground = this.getForeground(metadata);\n\t\tlet className = 'mtk' + foreground;\n\n\t\tlet fontStyle = this.getFontStyle(metadata);\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tclassName += ' mtki';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tclassName += ' mtkb';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tclassName += ' mtku';\n\t\t}\n\n\t\treturn className;\n\t}\n\n\tpublic static getInlineStyleFromMetadata(metadata: number, colorMap: string[]): string {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\n\t\tlet result = `color: ${colorMap[foreground]};`;\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tresult += 'font-style: italic;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tresult += 'font-weight: bold;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tresult += 'text-decoration: underline;';\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupport {\n\n\tgetInitialState(): IState;\n\n\t// add offsetDelta to each of the returned indices\n\ttokenize(line: string, state: IState, offsetDelta: number): TokenizationResult;\n\n\ttokenize2(line: string, state: IState, offsetDelta: number): TokenizationResult2;\n}\n\n/**\n * The state of the tokenizer between two lines.\n * It is useful to store flags such as in multiline comment, etc.\n * The model will clone the previous line's state and pass it in to tokenize the next line.\n */\nexport interface IState {\n\tclone(): IState;\n\tequals(other: IState): boolean;\n}\n\n/**\n * A provider result represents the values a provider, like the [`HoverProvider`](#HoverProvider),\n * may return. For once this is the actual result type `T`, like `Hover`, or a thenable that resolves\n * to that type `T`. In addition, `null` and `undefined` can be returned - either directly or from a\n * thenable.\n */\nexport type ProviderResult<T> = T | undefined | null | Thenable<T | undefined | null>;\n\n/**\n * A hover represents additional information for a symbol or word. Hovers are\n * rendered in a tooltip-like widget.\n */\nexport interface Hover {\n\t/**\n\t * The contents of this hover.\n\t */\n\tcontents: IMarkdownString[];\n\n\t/**\n\t * The range to which this hover applies. When missing, the\n\t * editor will use the range at the current position or the\n\t * current position itself.\n\t */\n\trange?: IRange;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface HoverProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideHover(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Hover>;\n}\n\nexport const enum CompletionItemKind {\n\tMethod,\n\tFunction,\n\tConstructor,\n\tField,\n\tVariable,\n\tClass,\n\tStruct,\n\tInterface,\n\tModule,\n\tProperty,\n\tEvent,\n\tOperator,\n\tUnit,\n\tValue,\n\tConstant,\n\tEnum,\n\tEnumMember,\n\tKeyword,\n\tText,\n\tColor,\n\tFile,\n\tReference,\n\tCustomcolor,\n\tFolder,\n\tTypeParameter,\n\tSnippet, // <- highest value (used for compare!)\n}\n\n/**\n * @internal\n */\nexport const completionKindToCssClass = (function () {\n\tlet data = Object.create(null);\n\tdata[CompletionItemKind.Method] = 'method';\n\tdata[CompletionItemKind.Function] = 'function';\n\tdata[CompletionItemKind.Constructor] = 'constructor';\n\tdata[CompletionItemKind.Field] = 'field';\n\tdata[CompletionItemKind.Variable] = 'variable';\n\tdata[CompletionItemKind.Class] = 'class';\n\tdata[CompletionItemKind.Struct] = 'struct';\n\tdata[CompletionItemKind.Interface] = 'interface';\n\tdata[CompletionItemKind.Module] = 'module';\n\tdata[CompletionItemKind.Property] = 'property';\n\tdata[CompletionItemKind.Event] = 'event';\n\tdata[CompletionItemKind.Operator] = 'operator';\n\tdata[CompletionItemKind.Unit] = 'unit';\n\tdata[CompletionItemKind.Value] = 'value';\n\tdata[CompletionItemKind.Constant] = 'constant';\n\tdata[CompletionItemKind.Enum] = 'enum';\n\tdata[CompletionItemKind.EnumMember] = 'enum-member';\n\tdata[CompletionItemKind.Keyword] = 'keyword';\n\tdata[CompletionItemKind.Snippet] = 'snippet';\n\tdata[CompletionItemKind.Text] = 'text';\n\tdata[CompletionItemKind.Color] = 'color';\n\tdata[CompletionItemKind.File] = 'file';\n\tdata[CompletionItemKind.Reference] = 'reference';\n\tdata[CompletionItemKind.Customcolor] = 'customcolor';\n\tdata[CompletionItemKind.Folder] = 'folder';\n\tdata[CompletionItemKind.TypeParameter] = 'type-parameter';\n\n\treturn function (kind: CompletionItemKind) {\n\t\treturn data[kind] || 'property';\n\t};\n})();\n\n/**\n * @internal\n */\nexport let completionKindFromString: {\n\t(value: string): CompletionItemKind;\n\t(value: string, strict: true): CompletionItemKind | undefined;\n} = (function () {\n\tlet data: Record<string, CompletionItemKind> = Object.create(null);\n\tdata['method'] = CompletionItemKind.Method;\n\tdata['function'] = CompletionItemKind.Function;\n\tdata['constructor'] = <any>CompletionItemKind.Constructor;\n\tdata['field'] = CompletionItemKind.Field;\n\tdata['variable'] = CompletionItemKind.Variable;\n\tdata['class'] = CompletionItemKind.Class;\n\tdata['struct'] = CompletionItemKind.Struct;\n\tdata['interface'] = CompletionItemKind.Interface;\n\tdata['module'] = CompletionItemKind.Module;\n\tdata['property'] = CompletionItemKind.Property;\n\tdata['event'] = CompletionItemKind.Event;\n\tdata['operator'] = CompletionItemKind.Operator;\n\tdata['unit'] = CompletionItemKind.Unit;\n\tdata['value'] = CompletionItemKind.Value;\n\tdata['constant'] = CompletionItemKind.Constant;\n\tdata['enum'] = CompletionItemKind.Enum;\n\tdata['enum-member'] = CompletionItemKind.EnumMember;\n\tdata['enumMember'] = CompletionItemKind.EnumMember;\n\tdata['keyword'] = CompletionItemKind.Keyword;\n\tdata['snippet'] = CompletionItemKind.Snippet;\n\tdata['text'] = CompletionItemKind.Text;\n\tdata['color'] = CompletionItemKind.Color;\n\tdata['file'] = CompletionItemKind.File;\n\tdata['reference'] = CompletionItemKind.Reference;\n\tdata['customcolor'] = CompletionItemKind.Customcolor;\n\tdata['folder'] = CompletionItemKind.Folder;\n\tdata['type-parameter'] = CompletionItemKind.TypeParameter;\n\tdata['typeParameter'] = CompletionItemKind.TypeParameter;\n\n\treturn function (value: string, strict?: true) {\n\t\tlet res = data[value];\n\t\tif (typeof res === 'undefined' && !strict) {\n\t\t\tres = CompletionItemKind.Property;\n\t\t}\n\t\treturn res;\n\t};\n})();\n\nexport const enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 0b001,\n\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 0b100,\n}\n\n/**\n * A completion item represents a text snippet that is\n * proposed to complete text that is being typed.\n */\nexport interface CompletionItem {\n\t/**\n\t * The label of this completion item. By default\n\t * this is also the text that is inserted when selecting\n\t * this completion.\n\t */\n\tlabel: string;\n\t/**\n\t * The kind of this completion item. Based on the kind\n\t * an icon is chosen by the editor.\n\t */\n\tkind: CompletionItemKind;\n\t/**\n\t * A human-readable string with additional information\n\t * about this item, like type or symbol information.\n\t */\n\tdetail?: string;\n\t/**\n\t * A human-readable string that represents a doc-comment.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * A string that should be used when comparing this item\n\t * with other items. When `falsy` the [label](#CompletionItem.label)\n\t * is used.\n\t */\n\tsortText?: string;\n\t/**\n\t * A string that should be used when filtering a set of\n\t * completion items. When `falsy` the [label](#CompletionItem.label)\n\t * is used.\n\t */\n\tfilterText?: string;\n\t/**\n\t * Select this item when showing. *Note* that only one completion item can be selected and\n\t * that the editor decides which item that is. The rule is that the *first* item of those\n\t * that match best is selected.\n\t */\n\tpreselect?: boolean;\n\t/**\n\t * A string or snippet that should be inserted in a document when selecting\n\t * this completion.\n\t * is used.\n\t */\n\tinsertText: string;\n\t/**\n\t * Addition rules (as bitmask) that should be applied when inserting\n\t * this completion.\n\t */\n\tinsertTextRules?: CompletionItemInsertTextRule;\n\t/**\n\t * A range of text that should be replaced by this completion item.\n\t *\n\t * Defaults to a range from the start of the [current word](#TextDocument.getWordRangeAtPosition) to the\n\t * current position.\n\t *\n\t * *Note:* The range must be a [single line](#Range.isSingleLine) and it must\n\t * [contain](#Range.contains) the position at which completion has been [requested](#CompletionItemProvider.provideCompletionItems).\n\t */\n\trange: IRange;\n\t/**\n\t * An optional set of characters that when pressed while this completion is active will accept it first and\n\t * then type that character. *Note* that all commit characters should have `length=1` and that superfluous\n\t * characters will be ignored.\n\t */\n\tcommitCharacters?: string[];\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\tadditionalTextEdits?: model.ISingleEditOperation[];\n\t/**\n\t * A command that should be run upon acceptance of this item.\n\t */\n\tcommand?: Command;\n}\n\nexport interface CompletionList {\n\tsuggestions: CompletionItem[];\n\tincomplete?: boolean;\n\tdispose?(): void;\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport const enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n/**\n * Contains additional information about the context in which\n * [completion provider](#CompletionItemProvider.provideCompletionItems) is triggered.\n */\nexport interface CompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\ttriggerKind: CompletionTriggerKind;\n\t/**\n\t * Character that triggered the completion item provider.\n\t *\n\t * `undefined` if provider was not triggered by a character.\n\t */\n\ttriggerCharacter?: string;\n}\n/**\n * The completion item provider interface defines the contract between extensions and\n * the [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense).\n *\n * When computing *complete* completion items is expensive, providers can optionally implement\n * the `resolveCompletionItem`-function. In that case it is enough to return completion\n * items with a [label](#CompletionItem.label) from the\n * [provideCompletionItems](#CompletionItemProvider.provideCompletionItems)-function. Subsequently,\n * when a completion item is shown in the UI and gains focus this provider is asked to resolve\n * the item, like adding [doc-comment](#CompletionItem.documentation) or [details](#CompletionItem.detail).\n */\nexport interface CompletionItemProvider {\n\n\ttriggerCharacters?: string[];\n\t/**\n\t * Provide completion items for the given position and document.\n\t */\n\tprovideCompletionItems(model: model.ITextModel, position: Position, context: CompletionContext, token: CancellationToken): ProviderResult<CompletionList>;\n\n\t/**\n\t * Given a completion item fill in more data, like [doc-comment](#CompletionItem.documentation)\n\t * or [details](#CompletionItem.detail).\n\t *\n\t * The editor will only resolve a completion item once.\n\t */\n\tresolveCompletionItem?(model: model.ITextModel, position: Position, item: CompletionItem, token: CancellationToken): ProviderResult<CompletionItem>;\n}\n\nexport interface CodeAction {\n\ttitle: string;\n\tcommand?: Command;\n\tedit?: WorkspaceEdit;\n\tdiagnostics?: IMarkerData[];\n\tkind?: string;\n\tisPreferred?: boolean;\n}\n\n/**\n * @internal\n */\nexport const enum CodeActionTrigger {\n\tAutomatic = 1,\n\tManual = 2,\n}\n\n/**\n * @internal\n */\nexport interface CodeActionContext {\n\tonly?: string;\n\ttrigger: CodeActionTrigger;\n}\n\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n * @internal\n */\nexport interface CodeActionProvider {\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model: model.ITextModel, range: Range | Selection, context: CodeActionContext, token: CancellationToken): ProviderResult<CodeAction[]>;\n\n\t/**\n\t * Optional list of CodeActionKinds that this provider returns.\n\t */\n\tprovidedCodeActionKinds?: ReadonlyArray<string>;\n}\n\n/**\n * Represents a parameter of a callable-signature. A parameter can\n * have a label and a doc-comment.\n */\nexport interface ParameterInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string | [number, number];\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n}\n/**\n * Represents the signature of something callable. A signature\n * can have a label, like a function-name, a doc-comment, and\n * a set of parameters.\n */\nexport interface SignatureInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * The parameters of this signature.\n\t */\n\tparameters: ParameterInformation[];\n}\n/**\n * Signature help represents the signature of something\n * callable. There can be multiple signatures but only one\n * active and only one active parameter.\n */\nexport interface SignatureHelp {\n\t/**\n\t * One or more signatures.\n\t */\n\tsignatures: SignatureInformation[];\n\t/**\n\t * The active signature.\n\t */\n\tactiveSignature: number;\n\t/**\n\t * The active parameter of the active signature.\n\t */\n\tactiveParameter: number;\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport interface SignatureHelpContext {\n\treadonly triggerKind: SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp?: SignatureHelp;\n}\n\n/**\n * The signature help provider interface defines the contract between extensions and\n * the [parameter hints](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface SignatureHelpProvider {\n\n\treadonly signatureHelpTriggerCharacters?: ReadonlyArray<string>;\n\treadonly signatureHelpRetriggerCharacters?: ReadonlyArray<string>;\n\n\t/**\n\t * Provide help for the signature at the given position and document.\n\t */\n\tprovideSignatureHelp(model: model.ITextModel, position: Position, token: CancellationToken, context: SignatureHelpContext): ProviderResult<SignatureHelp>;\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite\n}\n/**\n * A document highlight is a range inside a text document which deserves\n * special attention. Usually a document highlight is visualized by changing\n * the background color of its range.\n */\nexport interface DocumentHighlight {\n\t/**\n\t * The range this highlight applies to.\n\t */\n\trange: IRange;\n\t/**\n\t * The highlight kind, default is [text](#DocumentHighlightKind.Text).\n\t */\n\tkind?: DocumentHighlightKind;\n}\n/**\n * The document highlight provider interface defines the contract between extensions and\n * the word-highlight-feature.\n */\nexport interface DocumentHighlightProvider {\n\t/**\n\t * Provide a set of document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t */\n\tprovideDocumentHighlights(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]>;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\t/**\n\t * Include the declaration of the current symbol.\n\t */\n\tincludeDeclaration: boolean;\n}\n/**\n * The reference provider interface defines the contract between extensions and\n * the [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature.\n */\nexport interface ReferenceProvider {\n\t/**\n\t * Provide a set of project-wide references for the given position and document.\n\t */\n\tprovideReferences(model: model.ITextModel, position: Position, context: ReferenceContext, token: CancellationToken): ProviderResult<Location[]>;\n}\n\n/**\n * Represents a location inside a resource, such as a line\n * inside a text file.\n */\nexport interface Location {\n\t/**\n\t * The resource identifier of this location.\n\t */\n\turi: URI;\n\t/**\n\t * The document range of this locations.\n\t */\n\trange: IRange;\n}\n\nexport interface LocationLink {\n\t/**\n\t * A range to select where this link originates from.\n\t */\n\toriginSelectionRange?: IRange;\n\n\t/**\n\t * The target uri this link points to.\n\t */\n\turi: URI;\n\n\t/**\n\t * The full range this link points to.\n\t */\n\trange: IRange;\n\n\t/**\n\t * A range to select this link points to. Must be contained\n\t * in `LocationLink.range`.\n\t */\n\ttargetSelectionRange?: IRange;\n}\n\n/**\n * @internal\n */\nexport function isLocationLink(thing: any): thing is LocationLink {\n\treturn thing\n\t\t&& URI.isUri((thing as LocationLink).uri)\n\t\t&& Range.isIRange((thing as LocationLink).range)\n\t\t&& (Range.isIRange((thing as LocationLink).originSelectionRange) || Range.isIRange((thing as LocationLink).targetSelectionRange));\n}\n\nexport type Definition = Location | Location[] | LocationLink[];\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DefinitionProvider {\n\t/**\n\t * Provide the definition of the symbol at the given position and document.\n\t */\n\tprovideDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DeclarationProvider {\n\t/**\n\t * Provide the declaration of the symbol at the given position and document.\n\t */\n\tprovideDeclaration(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The implementation provider interface defines the contract between extensions and\n * the go to implementation feature.\n */\nexport interface ImplementationProvider {\n\t/**\n\t * Provide the implementation of the symbol at the given position and document.\n\t */\n\tprovideImplementation(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The type definition provider interface defines the contract between extensions and\n * the go to type definition feature.\n */\nexport interface TypeDefinitionProvider {\n\t/**\n\t * Provide the type definition of the symbol at the given position and document.\n\t */\n\tprovideTypeDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * A symbol kind.\n */\nexport const enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\n\n/**\n * @internal\n */\nexport const symbolKindToCssClass = (function () {\n\n\tconst _fromMapping: { [n: number]: string } = Object.create(null);\n\t_fromMapping[SymbolKind.File] = 'file';\n\t_fromMapping[SymbolKind.Module] = 'module';\n\t_fromMapping[SymbolKind.Namespace] = 'namespace';\n\t_fromMapping[SymbolKind.Package] = 'package';\n\t_fromMapping[SymbolKind.Class] = 'class';\n\t_fromMapping[SymbolKind.Method] = 'method';\n\t_fromMapping[SymbolKind.Property] = 'property';\n\t_fromMapping[SymbolKind.Field] = 'field';\n\t_fromMapping[SymbolKind.Constructor] = 'constructor';\n\t_fromMapping[SymbolKind.Enum] = 'enum';\n\t_fromMapping[SymbolKind.Interface] = 'interface';\n\t_fromMapping[SymbolKind.Function] = 'function';\n\t_fromMapping[SymbolKind.Variable] = 'variable';\n\t_fromMapping[SymbolKind.Constant] = 'constant';\n\t_fromMapping[SymbolKind.String] = 'string';\n\t_fromMapping[SymbolKind.Number] = 'number';\n\t_fromMapping[SymbolKind.Boolean] = 'boolean';\n\t_fromMapping[SymbolKind.Array] = 'array';\n\t_fromMapping[SymbolKind.Object] = 'object';\n\t_fromMapping[SymbolKind.Key] = 'key';\n\t_fromMapping[SymbolKind.Null] = 'null';\n\t_fromMapping[SymbolKind.EnumMember] = 'enum-member';\n\t_fromMapping[SymbolKind.Struct] = 'struct';\n\t_fromMapping[SymbolKind.Event] = 'event';\n\t_fromMapping[SymbolKind.Operator] = 'operator';\n\t_fromMapping[SymbolKind.TypeParameter] = 'type-parameter';\n\n\treturn function toCssClassName(kind: SymbolKind, inline?: boolean): string {\n\t\treturn `symbol-icon ${inline ? 'inline' : 'block'} ${_fromMapping[kind] || 'property'}`;\n\t};\n})();\n\nexport interface DocumentSymbol {\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\tcontainerName?: string;\n\trange: IRange;\n\tselectionRange: IRange;\n\tchildren?: DocumentSymbol[];\n}\n\n/**\n * The document symbol provider interface defines the contract between extensions and\n * the [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_goto-symbol)-feature.\n */\nexport interface DocumentSymbolProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide symbol information for the given document.\n\t */\n\tprovideDocumentSymbols(model: model.ITextModel, token: CancellationToken): ProviderResult<DocumentSymbol[]>;\n}\n\nexport type TextEdit = { range: IRange; text: string; eol?: model.EndOfLineSequence; };\n\n/**\n * Interface used to format a model\n */\nexport interface FormattingOptions {\n\t/**\n\t * Size of a tab in spaces.\n\t */\n\ttabSize: number;\n\t/**\n\t * Prefer spaces over tabs.\n\t */\n\tinsertSpaces: boolean;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentFormattingEditProvider {\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\t/**\n\t * Provide formatting edits for a whole document.\n\t */\n\tprovideDocumentFormattingEdits(model: model.ITextModel, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentRangeFormattingEditProvider {\n\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\t/**\n\t * Provide formatting edits for a range in a document.\n\t *\n\t * The given range is a hint and providers can decide to format a smaller\n\t * or larger range. Often this is done by adjusting the start and end\n\t * of the range to full syntax nodes.\n\t */\n\tprovideDocumentRangeFormattingEdits(model: model.ITextModel, range: Range, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface OnTypeFormattingEditProvider {\n\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\tautoFormatTriggerCharacters: string[];\n\n\t/**\n\t * Provide formatting edits after a character has been typed.\n\t *\n\t * The given position and character should hint to the provider\n\t * what range the position to expand to, like find the matching `{`\n\t * when `}` has been entered.\n\t */\n\tprovideOnTypeFormattingEdits(model: model.ITextModel, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n\n/**\n * @internal\n */\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange: IRange;\n}\n\n/**\n * A link inside the editor.\n */\nexport interface ILink {\n\trange: IRange;\n\turl?: URI | string;\n}\n/**\n * A provider of links.\n */\nexport interface LinkProvider {\n\tprovideLinks(model: model.ITextModel, token: CancellationToken): ProviderResult<ILink[]>;\n\tresolveLink?: (link: ILink, token: CancellationToken) => ProviderResult<ILink>;\n}\n\n/**\n * A color in RGBA format.\n */\nexport interface IColor {\n\n\t/**\n\t * The red component in the range [0-1].\n\t */\n\treadonly red: number;\n\n\t/**\n\t * The green component in the range [0-1].\n\t */\n\treadonly green: number;\n\n\t/**\n\t * The blue component in the range [0-1].\n\t */\n\treadonly blue: number;\n\n\t/**\n\t * The alpha component in the range [0-1].\n\t */\n\treadonly alpha: number;\n}\n\n/**\n * String representations for a color\n */\nexport interface IColorPresentation {\n\t/**\n\t * The label of this color presentation. It will be shown on the color\n\t * picker header. By default this is also the text that is inserted when selecting\n\t * this color presentation.\n\t */\n\tlabel: string;\n\t/**\n\t * An [edit](#TextEdit) which is applied to a document when selecting\n\t * this presentation for the color.\n\t */\n\ttextEdit?: TextEdit;\n\t/**\n\t * An optional array of additional [text edits](#TextEdit) that are applied when\n\t * selecting this color presentation.\n\t */\n\tadditionalTextEdits?: TextEdit[];\n}\n\n/**\n * A color range is a range in a text model which represents a color.\n */\nexport interface IColorInformation {\n\n\t/**\n\t * The range within the model.\n\t */\n\trange: IRange;\n\n\t/**\n\t * The color represented in this range.\n\t */\n\tcolor: IColor;\n}\n\n/**\n * A provider of colors for editor models.\n */\nexport interface DocumentColorProvider {\n\t/**\n\t * Provides the color ranges for a specific model.\n\t */\n\tprovideDocumentColors(model: model.ITextModel, token: CancellationToken): ProviderResult<IColorInformation[]>;\n\t/**\n\t * Provide the string representations for a color.\n\t */\n\tprovideColorPresentations(model: model.ITextModel, colorInfo: IColorInformation, token: CancellationToken): ProviderResult<IColorPresentation[]>;\n}\n\nexport interface SelectionRange {\n\tkind: string;\n\trange: IRange;\n}\n\nexport interface SelectionRangeProvider {\n\t/**\n\t * Provide ranges that should be selected from the given position.\n\t */\n\tprovideSelectionRanges(model: model.ITextModel, positions: Position[], token: CancellationToken): ProviderResult<SelectionRange[][]>;\n}\n\nexport interface FoldingContext {\n}\n/**\n * A provider of colors for editor models.\n */\nexport interface FoldingRangeProvider {\n\t/**\n\t * Provides the color ranges for a specific model.\n\t */\n\tprovideFoldingRanges(model: model.ITextModel, context: FoldingContext, token: CancellationToken): ProviderResult<FoldingRange[]>;\n}\n\nexport interface FoldingRange {\n\n\t/**\n\t * The one-based start line of the range to fold. The folded area starts after the line's last character.\n\t */\n\tstart: number;\n\n\t/**\n\t * The one-based end line of the range to fold. The folded area ends with the line's last character.\n\t */\n\tend: number;\n\n\t/**\n\t * Describes the [Kind](#FoldingRangeKind) of the folding range such as [Comment](#FoldingRangeKind.Comment) or\n\t * [Region](#FoldingRangeKind.Region). The kind is used to categorize folding ranges and used by commands\n\t * like 'Fold all comments'. See\n\t * [FoldingRangeKind](#FoldingRangeKind) for an enumeration of standardized kinds.\n\t */\n\tkind?: FoldingRangeKind;\n}\nexport class FoldingRangeKind {\n\t/**\n\t * Kind for folding range representing a comment. The value of the kind is 'comment'.\n\t */\n\tstatic readonly Comment = new FoldingRangeKind('comment');\n\t/**\n\t * Kind for folding range representing a import. The value of the kind is 'imports'.\n\t */\n\tstatic readonly Imports = new FoldingRangeKind('imports');\n\t/**\n\t * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n\t * The value of the kind is 'region'.\n\t */\n\tstatic readonly Region = new FoldingRangeKind('region');\n\n\t/**\n\t * Creates a new [FoldingRangeKind](#FoldingRangeKind).\n\t *\n\t * @param value of the kind.\n\t */\n\tpublic constructor(public value: string) {\n\t}\n}\n\n/**\n * @internal\n */\nexport function isResourceFileEdit(thing: any): thing is ResourceFileEdit {\n\treturn isObject(thing) && (Boolean((<ResourceFileEdit>thing).newUri) || Boolean((<ResourceFileEdit>thing).oldUri));\n}\n\n/**\n * @internal\n */\nexport function isResourceTextEdit(thing: any): thing is ResourceTextEdit {\n\treturn isObject(thing) && (<ResourceTextEdit>thing).resource && Array.isArray((<ResourceTextEdit>thing).edits);\n}\n\nexport interface ResourceFileEdit {\n\toldUri: URI;\n\tnewUri: URI;\n\toptions: { overwrite?: boolean, ignoreIfNotExists?: boolean, ignoreIfExists?: boolean, recursive?: boolean };\n}\n\nexport interface ResourceTextEdit {\n\tresource: URI;\n\tmodelVersionId?: number;\n\tedits: TextEdit[];\n}\n\nexport interface WorkspaceEdit {\n\tedits: Array<ResourceTextEdit | ResourceFileEdit>;\n}\n\nexport interface Rejection {\n\trejectReason?: string;\n}\nexport interface RenameLocation {\n\trange: IRange;\n\ttext: string;\n}\n\nexport interface RenameProvider {\n\tprovideRenameEdits(model: model.ITextModel, position: Position, newName: string, token: CancellationToken): ProviderResult<WorkspaceEdit & Rejection>;\n\tresolveRenameLocation?(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<RenameLocation & Rejection>;\n}\n\n\nexport interface Command {\n\tid: string;\n\ttitle: string;\n\ttooltip?: string;\n\targuments?: any[];\n}\n\n/**\n * @internal\n */\nexport interface CommentInfo {\n\textensionId?: string;\n\tthreads: CommentThread[];\n\tcommentingRanges?: (IRange[] | CommentingRanges);\n\treply?: Command;\n\tdraftMode?: DraftMode;\n}\n\n/**\n * @internal\n */\nexport enum DraftMode {\n\tNotSupported,\n\tInDraft,\n\tNotInDraft\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\n\n\n/**\n * @internal\n */\nexport interface CommentWidget {\n\tcommentThread: CommentThread;\n\tcomment?: Comment;\n\tinput: string;\n\tonDidChangeInput: Event<string>;\n}\n\n/**\n * @internal\n */\nexport interface CommentInput {\n\tvalue: string;\n\turi: URI;\n}\n\n/**\n * @internal\n */\nexport interface CommentThread2 {\n\tcommentThreadHandle: number;\n\textensionId?: string;\n\tthreadId: string | null;\n\tresource: string | null;\n\trange: IRange;\n\tlabel: string;\n\tcomments: Comment[];\n\tonDidChangeComments: Event<Comment[]>;\n\tcollapsibleState?: CommentThreadCollapsibleState;\n\tinput?: CommentInput;\n\tonDidChangeInput: Event<CommentInput | undefined>;\n\tacceptInputCommand?: Command;\n\tadditionalCommands: Command[];\n\tonDidChangeAcceptInputCommand: Event<Command>;\n\tonDidChangeAdditionalCommands: Event<Command[]>;\n\tonDidChangeRange: Event<IRange>;\n\tonDidChangeLabel: Event<string>;\n\tonDidChangeCollasibleState: Event<CommentThreadCollapsibleState>;\n}\n\n/**\n * @internal\n */\n\nexport interface CommentingRanges {\n\treadonly resource: URI;\n\tranges: IRange[];\n\tnewCommentThreadCommand?: Command;\n\tnewCommentThreadCallback?: (uri: UriComponents, range: IRange) => void;\n}\n\n/**\n * @internal\n */\nexport interface CommentThread {\n\textensionId?: string;\n\tthreadId: string | null;\n\tresource: string | null;\n\trange: IRange;\n\tcomments: Comment[];\n\tcollapsibleState?: CommentThreadCollapsibleState;\n\treply?: Command;\n}\n\n/**\n * @internal\n */\nexport interface NewCommentAction {\n\tranges: IRange[];\n\tactions: Command[];\n}\n\n/**\n * @internal\n */\nexport interface CommentReaction {\n\treadonly label?: string;\n\treadonly iconPath?: UriComponents;\n\treadonly count?: number;\n\treadonly hasReacted?: boolean;\n\treadonly canEdit?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface Comment {\n\treadonly commentId: string;\n\treadonly body: IMarkdownString;\n\treadonly userName: string;\n\treadonly userIconPath?: string;\n\treadonly canEdit?: boolean;\n\treadonly canDelete?: boolean;\n\treadonly selectCommand?: Command;\n\treadonly editCommand?: Command;\n\treadonly deleteCommand?: Command;\n\treadonly isDraft?: boolean;\n\treadonly commentReactions?: CommentReaction[];\n\treadonly label?: string;\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadChangedEvent {\n\t/**\n\t * Added comment threads.\n\t */\n\treadonly added: (CommentThread | CommentThread2)[];\n\n\t/**\n\t * Removed comment threads.\n\t */\n\treadonly removed: (CommentThread | CommentThread2)[];\n\n\t/**\n\t * Changed comment threads.\n\t */\n\treadonly changed: (CommentThread | CommentThread2)[];\n\n\t/**\n\t * changed draft mode.\n\t */\n\treadonly draftMode?: DraftMode;\n}\n\n/**\n * @internal\n */\nexport interface DocumentCommentProvider {\n\tprovideDocumentComments(resource: URI, token: CancellationToken): Promise<CommentInfo | null>;\n\tcreateNewCommentThread(resource: URI, range: Range, text: string, token: CancellationToken): Promise<CommentThread | null>;\n\treplyToCommentThread(resource: URI, range: Range, thread: CommentThread, text: string, token: CancellationToken): Promise<CommentThread | null>;\n\teditComment(resource: URI, comment: Comment, text: string, token: CancellationToken): Promise<void>;\n\tdeleteComment(resource: URI, comment: Comment, token: CancellationToken): Promise<void>;\n\tstartDraft?(resource: URI, token: CancellationToken): Promise<void>;\n\tdeleteDraft?(resource: URI, token: CancellationToken): Promise<void>;\n\tfinishDraft?(resource: URI, token: CancellationToken): Promise<void>;\n\n\tstartDraftLabel?: string;\n\tdeleteDraftLabel?: string;\n\tfinishDraftLabel?: string;\n\n\taddReaction?(resource: URI, comment: Comment, reaction: CommentReaction, token: CancellationToken): Promise<void>;\n\tdeleteReaction?(resource: URI, comment: Comment, reaction: CommentReaction, token: CancellationToken): Promise<void>;\n\treactionGroup?: CommentReaction[];\n\n\tonDidChangeCommentThreads?(): Event<CommentThreadChangedEvent>;\n}\n\n/**\n * @internal\n */\nexport interface WorkspaceCommentProvider {\n\tprovideWorkspaceComments(token: CancellationToken): Promise<CommentThread[]>;\n\tonDidChangeCommentThreads(): Event<CommentThreadChangedEvent>;\n}\n\nexport interface ICodeLensSymbol {\n\trange: IRange;\n\tid?: string;\n\tcommand?: Command;\n}\nexport interface CodeLensProvider {\n\tonDidChange?: Event<this>;\n\tprovideCodeLenses(model: model.ITextModel, token: CancellationToken): ProviderResult<ICodeLensSymbol[]>;\n\tresolveCodeLens?(model: model.ITextModel, codeLens: ICodeLensSymbol, token: CancellationToken): ProviderResult<ICodeLensSymbol>;\n}\n\n// --- feature registries ------\n\n/**\n * @internal\n */\nexport const ReferenceProviderRegistry = new LanguageFeatureRegistry<ReferenceProvider>();\n\n/**\n * @internal\n */\nexport const RenameProviderRegistry = new LanguageFeatureRegistry<RenameProvider>();\n\n/**\n * @internal\n */\nexport const CompletionProviderRegistry = new LanguageFeatureRegistry<CompletionItemProvider>();\n\n/**\n * @internal\n */\nexport const SignatureHelpProviderRegistry = new LanguageFeatureRegistry<SignatureHelpProvider>();\n\n/**\n * @internal\n */\nexport const HoverProviderRegistry = new LanguageFeatureRegistry<HoverProvider>();\n\n/**\n * @internal\n */\nexport const DocumentSymbolProviderRegistry = new LanguageFeatureRegistry<DocumentSymbolProvider>();\n\n/**\n * @internal\n */\nexport const DocumentHighlightProviderRegistry = new LanguageFeatureRegistry<DocumentHighlightProvider>();\n\n/**\n * @internal\n */\nexport const DefinitionProviderRegistry = new LanguageFeatureRegistry<DefinitionProvider>();\n\n/**\n * @internal\n */\nexport const DeclarationProviderRegistry = new LanguageFeatureRegistry<DeclarationProvider>();\n\n/**\n * @internal\n */\nexport const ImplementationProviderRegistry = new LanguageFeatureRegistry<ImplementationProvider>();\n\n/**\n * @internal\n */\nexport const TypeDefinitionProviderRegistry = new LanguageFeatureRegistry<TypeDefinitionProvider>();\n\n/**\n * @internal\n */\nexport const CodeLensProviderRegistry = new LanguageFeatureRegistry<CodeLensProvider>();\n\n/**\n * @internal\n */\nexport const CodeActionProviderRegistry = new LanguageFeatureRegistry<CodeActionProvider>();\n\n/**\n * @internal\n */\nexport const DocumentFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const DocumentRangeFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const OnTypeFormattingEditProviderRegistry = new LanguageFeatureRegistry<OnTypeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const LinkProviderRegistry = new LanguageFeatureRegistry<LinkProvider>();\n\n/**\n * @internal\n */\nexport const ColorProviderRegistry = new LanguageFeatureRegistry<DocumentColorProvider>();\n\n/**\n * @internal\n */\nexport const SelectionRangeRegistry = new LanguageFeatureRegistry<SelectionRangeProvider>();\n\n/**\n * @internal\n */\nexport const FoldingRangeProviderRegistry = new LanguageFeatureRegistry<FoldingRangeProvider>();\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportChangedEvent {\n\tchangedLanguages: string[];\n\tchangedColorMap: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationRegistry {\n\n\t/**\n\t * An event triggered when:\n\t *  - a tokenization support is registered, unregistered or changed.\n\t *  - the color map is changed.\n\t */\n\tonDidChange: Event<ITokenizationSupportChangedEvent>;\n\n\t/**\n\t * Fire a change event for a language.\n\t * This is useful for languages that embed other languages.\n\t */\n\tfire(languages: string[]): void;\n\n\t/**\n\t * Register a tokenization support.\n\t */\n\tregister(language: string, support: ITokenizationSupport): IDisposable;\n\n\t/**\n\t * Register a promise for a tokenization support.\n\t */\n\tregisterPromise(language: string, promise: Thenable<ITokenizationSupport>): IDisposable;\n\n\t/**\n\t * Get the tokenization support for a language.\n\t * Returns null if not found.\n\t */\n\tget(language: string): ITokenizationSupport;\n\n\t/**\n\t * Get the promise of a tokenization support for a language.\n\t * `null` is returned if no support is available and no promise for the support has been registered yet.\n\t */\n\tgetPromise(language: string): Thenable<ITokenizationSupport> | null;\n\n\t/**\n\t * Set the new color map that all tokens will use in their ColorId binary encoded bits for foreground and background.\n\t */\n\tsetColorMap(colorMap: Color[]): void;\n\n\tgetColorMap(): Color[] | null;\n\n\tgetDefaultBackground(): Color | null;\n}\n\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { TypeConstraint, validateConstraints } from 'vs/base/common/types';\nimport { ServicesAccessor, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\n\nexport const ICommandService = createDecorator<ICommandService>('commandService');\n\nexport interface ICommandEvent {\n\tcommandId: string;\n}\n\nexport interface ICommandService {\n\t_serviceBrand: any;\n\tonWillExecuteCommand: Event<ICommandEvent>;\n\texecuteCommand<T = any>(commandId: string, ...args: any[]): Promise<T | undefined>;\n}\n\nexport interface ICommandsMap {\n\t[id: string]: ICommand;\n}\n\nexport interface ICommandHandler {\n\t(accessor: ServicesAccessor, ...args: any[]): void;\n}\n\nexport interface ICommand {\n\tid: string;\n\thandler: ICommandHandler;\n\tdescription?: ICommandHandlerDescription | null;\n}\n\nexport interface ICommandHandlerDescription {\n\tdescription: string;\n\targs: { name: string; description?: string; constraint?: TypeConstraint; schema?: IJSONSchema; }[];\n\treturns?: string;\n}\n\nexport interface ICommandRegistry {\n\tonDidRegisterCommand: Event<string>;\n\tregisterCommand(id: string, command: ICommandHandler): IDisposable;\n\tregisterCommand(command: ICommand): IDisposable;\n\tregisterCommandAlias(oldId: string, newId: string): IDisposable;\n\tgetCommand(id: string): ICommand | undefined;\n\tgetCommands(): ICommandsMap;\n}\n\nexport const CommandsRegistry: ICommandRegistry = new class implements ICommandRegistry {\n\n\tprivate readonly _commands = new Map<string, LinkedList<ICommand>>();\n\n\tprivate readonly _onDidRegisterCommand = new Emitter<string>();\n\treadonly onDidRegisterCommand: Event<string> = this._onDidRegisterCommand.event;\n\n\tregisterCommand(idOrCommand: string | ICommand, handler?: ICommandHandler): IDisposable {\n\n\t\tif (!idOrCommand) {\n\t\t\tthrow new Error(`invalid command`);\n\t\t}\n\n\t\tif (typeof idOrCommand === 'string') {\n\t\t\tif (!handler) {\n\t\t\t\tthrow new Error(`invalid command`);\n\t\t\t}\n\t\t\treturn this.registerCommand({ id: idOrCommand, handler });\n\t\t}\n\n\t\t// add argument validation if rich command metadata is provided\n\t\tif (idOrCommand.description) {\n\t\t\tconst constraints: Array<TypeConstraint | undefined> = [];\n\t\t\tfor (let arg of idOrCommand.description.args) {\n\t\t\t\tconstraints.push(arg.constraint);\n\t\t\t}\n\t\t\tconst actualHandler = idOrCommand.handler;\n\t\t\tidOrCommand.handler = function (accessor, ...args: any[]) {\n\t\t\t\tvalidateConstraints(args, constraints);\n\t\t\t\treturn actualHandler(accessor, ...args);\n\t\t\t};\n\t\t}\n\n\t\t// find a place to store the command\n\t\tconst { id } = idOrCommand;\n\n\t\tlet commands = this._commands.get(id);\n\t\tif (!commands) {\n\t\t\tcommands = new LinkedList<ICommand>();\n\t\t\tthis._commands.set(id, commands);\n\t\t}\n\n\t\tlet removeFn = commands.unshift(idOrCommand);\n\n\t\tlet ret = toDisposable(() => {\n\t\t\tremoveFn();\n\t\t\tconst command = this._commands.get(id);\n\t\t\tif (command && command.isEmpty()) {\n\t\t\t\tthis._commands.delete(id);\n\t\t\t}\n\t\t});\n\n\t\t// tell the world about this command\n\t\tthis._onDidRegisterCommand.fire(id);\n\n\t\treturn ret;\n\t}\n\n\tregisterCommandAlias(oldId: string, newId: string): IDisposable {\n\t\treturn CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n\t}\n\n\tgetCommand(id: string): ICommand | undefined {\n\t\tconst list = this._commands.get(id);\n\t\tif (!list || list.isEmpty()) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn list.iterator().next().value;\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst result: ICommandsMap = Object.create(null);\n\t\tthis._commands.forEach((value, key) => {\n\t\t\tresult[key] = this.getCommand(key)!;\n\t\t});\n\t\treturn result;\n\t}\n};\n\nexport const NullCommandService: ICommandService = {\n\t_serviceBrand: undefined,\n\tonWillExecuteCommand: () => ({ dispose: () => { } }),\n\texecuteCommand() {\n\t\treturn Promise.resolve(undefined);\n\t}\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const enum ContextKeyExprType {\n\tDefined = 1,\n\tNot = 2,\n\tEquals = 3,\n\tNotEquals = 4,\n\tAnd = 5,\n\tRegex = 6\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyDefinedExpr;\n\tmapNot(key: string): ContextKeyNotExpr;\n\tmapEquals(key: string, value: any): ContextKeyEqualsExpr;\n\tmapNotEquals(key: string, value: any): ContextKeyNotEqualsExpr;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n}\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static has(key: string): ContextKeyExpr {\n\t\treturn new ContextKeyDefinedExpr(key);\n\t}\n\n\tpublic static equals(key: string, value: any): ContextKeyExpr {\n\t\treturn new ContextKeyEqualsExpr(key, value);\n\t}\n\n\tpublic static notEquals(key: string, value: any): ContextKeyExpr {\n\t\treturn new ContextKeyNotEqualsExpr(key, value);\n\t}\n\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpr {\n\t\treturn new ContextKeyRegexExpr(key, value);\n\t}\n\n\tpublic static not(key: string): ContextKeyExpr {\n\t\treturn new ContextKeyNotExpr(key);\n\t}\n\n\tpublic static and(...expr: Array<ContextKeyExpr | undefined | null>): ContextKeyExpr {\n\t\treturn new ContextKeyAndExpr(expr);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpr | null {\n\t\tif (!serialized) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet pieces = serialized.split('&&');\n\t\tlet result = new ContextKeyAndExpr(pieces.map(p => this._deserializeOne(p, strict)));\n\t\treturn result.normalize();\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpr {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn new ContextKeyNotEqualsExpr(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn new ContextKeyEqualsExpr(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tlet pieces = serializedOne.split('=~');\n\t\t\treturn new ContextKeyRegexExpr(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn new ContextKeyNotExpr(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn new ContextKeyDefinedExpr(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet start = serializedValue.indexOf('/');\n\t\tlet end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = serializedValue.slice(start + 1, end);\n\t\tlet caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic abstract getType(): ContextKeyExprType;\n\tpublic abstract equals(other: ContextKeyExpr): boolean;\n\tpublic abstract evaluate(context: IContext): boolean;\n\tpublic abstract normalize(): ContextKeyExpr | null;\n\tpublic abstract serialize(): string;\n\tpublic abstract keys(): string[];\n\tpublic abstract map(mapFnc: IContextKeyExprMapper): ContextKeyExpr;\n}\n\nfunction cmp(a: ContextKeyExpr, b: ContextKeyExpr): number {\n\tlet aType = a.getType();\n\tlet bType = b.getType();\n\tif (aType !== bType) {\n\t\treturn aType - bType;\n\t}\n\tswitch (aType) {\n\t\tcase ContextKeyExprType.Defined:\n\t\t\treturn (<ContextKeyDefinedExpr>a).cmp(<ContextKeyDefinedExpr>b);\n\t\tcase ContextKeyExprType.Not:\n\t\t\treturn (<ContextKeyNotExpr>a).cmp(<ContextKeyNotExpr>b);\n\t\tcase ContextKeyExprType.Equals:\n\t\t\treturn (<ContextKeyEqualsExpr>a).cmp(<ContextKeyEqualsExpr>b);\n\t\tcase ContextKeyExprType.NotEquals:\n\t\t\treturn (<ContextKeyNotEqualsExpr>a).cmp(<ContextKeyNotEqualsExpr>b);\n\t\tcase ContextKeyExprType.Regex:\n\t\t\treturn (<ContextKeyRegexExpr>a).cmp(<ContextKeyRegexExpr>b);\n\t\tdefault:\n\t\t\tthrow new Error('Unknown ContextKeyExpr!');\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements ContextKeyExpr {\n\tconstructor(protected key: string) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.Defined;\n\t}\n\n\tpublic cmp(other: ContextKeyDefinedExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyDefinedExpr) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpr {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements ContextKeyExpr {\n\tconstructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.Equals;\n\t}\n\n\tpublic cmp(other: ContextKeyEqualsExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyEqualsExpr) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t/* tslint:disable:triple-equals */\n\t\t// Intentional ==\n\t\treturn (context.getValue(this.key) == this.value);\n\t\t/* tslint:enable:triple-equals */\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\tif (this.value) {\n\t\t\t\treturn new ContextKeyDefinedExpr(this.key);\n\t\t\t}\n\t\t\treturn new ContextKeyNotExpr(this.key);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\n\t\treturn this.key + ' == \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpr {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements ContextKeyExpr {\n\tconstructor(private key: string, private value: any) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.NotEquals;\n\t}\n\n\tpublic cmp(other: ContextKeyNotEqualsExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyNotEqualsExpr) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t/* tslint:disable:triple-equals */\n\t\t// Intentional !=\n\t\treturn (context.getValue(this.key) != this.value);\n\t\t/* tslint:enable:triple-equals */\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\tif (this.value) {\n\t\t\t\treturn new ContextKeyNotExpr(this.key);\n\t\t\t}\n\t\t\treturn new ContextKeyDefinedExpr(this.key);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\n\t\treturn this.key + ' != \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpr {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotExpr implements ContextKeyExpr {\n\tconstructor(private key: string) {\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.Not;\n\t}\n\n\tpublic cmp(other: ContextKeyNotExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyNotExpr) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn '!' + this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpr {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n}\n\nexport class ContextKeyRegexExpr implements ContextKeyExpr {\n\n\tconstructor(private key: string, private regexp: RegExp | null) {\n\t\t//\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.Regex;\n\t}\n\n\tpublic cmp(other: ContextKeyRegexExpr): number {\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyRegexExpr) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tlet value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic normalize(): ContextKeyExpr {\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n}\n\nexport class ContextKeyAndExpr implements ContextKeyExpr {\n\tpublic readonly expr: ContextKeyExpr[];\n\n\tconstructor(expr: Array<ContextKeyExpr | null | undefined>) {\n\t\tthis.expr = ContextKeyAndExpr._normalizeArr(expr);\n\t}\n\n\tpublic getType(): ContextKeyExprType {\n\t\treturn ContextKeyExprType.And;\n\t}\n\n\tpublic equals(other: ContextKeyExpr): boolean {\n\t\tif (other instanceof ContextKeyAndExpr) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: Array<ContextKeyExpr | null | undefined>): ContextKeyExpr[] {\n\t\tlet expr: ContextKeyExpr[] = [];\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tlet e: ContextKeyExpr | null | undefined = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\te = e.normalize();\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e instanceof ContextKeyAndExpr) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\tpublic normalize(): ContextKeyExpr | null {\n\t\tif (this.expr.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.expr.length === 1) {\n\t\t\treturn this.expr[0];\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (this.expr.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this.expr.length === 1) {\n\t\t\tconst normalized = this.normalize();\n\t\t\tif (!normalized) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn normalized.serialize();\n\t\t}\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpr {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined) {\n\t\tsuper(key);\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpr {\n\t\treturn ContextKeyExpr.not(this.key);\n\t}\n\n\tpublic isEqualTo(value: string): ContextKeyExpr {\n\t\treturn ContextKeyExpr.equals(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: string): ContextKeyExpr {\n\t\treturn ContextKeyExpr.notEquals(this.key, value);\n\t}\n}\n\nexport interface IContext {\n\tgetValue<T>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\t_serviceBrand: any;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tcreateKey<T>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpr | null): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target?: IContextKeyServiceTarget): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\t_serviceBrand: any;\n\n\tdownload(uri: URI, to?: string, cancellationToken?: CancellationToken): Promise<string>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: { [languageId: string]: IGalleryExtensionAsset };\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\treadonly manifest: IExtensionManifest;\n\tmetadata: IGalleryMetadata;\n\treadmeUrl: URI | null;\n\tchangelogUrl: URI | null;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionGalleryService {\n\t_serviceBrand: any;\n\tisEnabled(): boolean;\n\tquery(options?: IQueryOptions): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, operation: InstallOperation): Promise<string>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tloadAllDependencies(dependencies: IExtensionIdentifier[], token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport interface IExtensionManagementService {\n\t_serviceBrand: any;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier>;\n\tinstall(vsix: URI): Promise<IExtensionIdentifier>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<void>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const IExtensionManagementServerService = createDecorator<IExtensionManagementServerService>('extensionManagementServerService');\n\nexport interface IExtensionManagementServer {\n\textensionManagementService: IExtensionManagementService;\n\tauthority: string;\n\tlabel: string;\n}\n\nexport interface IExtensionManagementServerService {\n\t_serviceBrand: any;\n\treadonly localExtensionManagementServer: IExtensionManagementServer;\n\treadonly remoteExtensionManagementServer: IExtensionManagementServer | null;\n\tgetExtensionManagementServer(location: URI): IExtensionManagementServer | null;\n}\n\nexport const enum EnablementState {\n\tDisabled,\n\tWorkspaceDisabled,\n\tEnabled,\n\tWorkspaceEnabled\n}\n\nexport const IExtensionEnablementService = createDecorator<IExtensionEnablementService>('extensionEnablementService');\n\nexport interface IExtensionEnablementService {\n\t_serviceBrand: any;\n\n\treadonly allUserExtensionsDisabled: boolean;\n\n\t/**\n\t * Event to listen on for extension enablement changes\n\t */\n\tonEnablementChanged: Event<IExtension[]>;\n\n\t/**\n\t * Returns all disabled extension identifiers for current workspace\n\t * Returns an empty array if none exist\n\t */\n\tgetDisabledExtensions(): Promise<IExtensionIdentifier[]>;\n\n\t/**\n\t * Returns the enablement state for the given extension\n\t */\n\tgetEnablementState(extension: IExtension): EnablementState;\n\n\t/**\n\t * Returns `true` if the enablement can be changed.\n\t */\n\tcanChangeEnablement(extension: IExtension): boolean;\n\n\t/**\n\t * Returns `true` if the given extension identifier is enabled.\n\t */\n\tisEnabled(extension: IExtension): boolean;\n\n\t/**\n\t * Enable or disable the given extension.\n\t * if `workspace` is `true` then enablement is done for workspace, otherwise globally.\n\t *\n\t * Returns a promise that resolves to boolean value.\n\t * if resolves to `true` then requires restart for the change to take effect.\n\t *\n\t * Throws error if enablement is requested for workspace and there is no workspace\n\t */\n\tsetEnablement(extensions: IExtension[], state: EnablementState): Promise<boolean[]>;\n}\n\nexport interface IExtensionsConfigContent {\n\trecommendations: string[];\n\tunwantedRecommendations: string[];\n}\n\nexport type RecommendationChangeNotification = {\n\textensionId: string,\n\tisRecommended: boolean\n};\n\nexport type DynamicRecommendation = 'dynamic';\nexport type ExecutableRecommendation = 'executable';\nexport type CachedRecommendation = 'cached';\nexport type ApplicationRecommendation = 'application';\nexport type ExtensionRecommendationSource = IWorkspace | IWorkspaceFolder | URI | DynamicRecommendation | ExecutableRecommendation | CachedRecommendation | ApplicationRecommendation;\n\nexport interface IExtensionRecommendation {\n\textensionId: string;\n\tsources: ExtensionRecommendationSource[];\n}\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('extensionTipsService');\n\nexport interface IExtensionTipsService {\n\t_serviceBrand: any;\n\tgetAllRecommendationsWithReason(): { [id: string]: { reasonId: ExtensionRecommendationReason, reasonText: string }; };\n\tgetFileBasedRecommendations(): IExtensionRecommendation[];\n\tgetOtherRecommendations(): Promise<IExtensionRecommendation[]>;\n\tgetWorkspaceRecommendations(): Promise<IExtensionRecommendation[]>;\n\tgetKeymapRecommendations(): IExtensionRecommendation[];\n\ttoggleIgnoredRecommendation(extensionId: string, shouldIgnore: boolean): void;\n\tgetAllIgnoredRecommendations(): { global: string[], workspace: string[] };\n\tonRecommendationChange: Event<RecommendationChangeNotification>;\n}\n\nexport const enum ExtensionRecommendationReason {\n\tWorkspace,\n\tFile,\n\tExecutable,\n\tDynamicWorkspace,\n\tExperimental\n}\n\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { isLinux } from 'vs/base/common/platform';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IResourceEncodings {\n\tgetWriteEncoding(resource: URI, preferredEncoding?: string): IResourceEncoding;\n}\n\nexport interface IResourceEncoding {\n\tencoding: string;\n\thasBOM: boolean;\n}\n\nexport interface IFileService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Helper to determine read/write encoding for resources.\n\t */\n\tencoding: IResourceEncodings;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watchFileChanges() API.\n\t */\n\tonFileChanges: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\tonAfterOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\tonDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Resolve the properties of a file identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t */\n\tresolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolveFile but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveFiles(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file identified by the resource exists.\n\t */\n\texistsFile(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Resolve the contents of a file identified by the resource.\n\t *\n\t * The returned object contains properties of the file and the full value as string.\n\t */\n\tresolveContent(resource: URI, options?: IResolveContentOptions): Promise<IContent>;\n\n\t/**\n\t * Resolve the contents of a file identified by the resource.\n\t *\n\t * The returned object contains properties of the file and the value as a readable stream.\n\t */\n\tresolveStreamContent(resource: URI, options?: IResolveContentOptions): Promise<IStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\tupdateContent(resource: URI, value: string | ITextSnapshot, options?: IUpdateContentOptions): Promise<IFileStat>;\n\n\t/**\n\t * Moves the file to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmoveFile(source: URI, target: URI, overwrite?: boolean): Promise<IFileStat>;\n\n\t/**\n\t * Copies the file to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopyFile(source: URI, target: URI, overwrite?: boolean): Promise<IFileStat>;\n\n\t/**\n\t * Creates a new file with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, content?: string, options?: ICreateFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Reads a folder's content with the given path. The returned promise\n\t * will have the list of children as a result.\n\t */\n\treadFolder(resource: URI): Promise<string[]>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStat>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file change events on the provided resource.\n\t */\n\twatchFileChanges(resource: URI): void;\n\n\t/**\n\t * Allows to stop a watcher on the provided resource or absolute fs path.\n\t */\n\tunwatchFileChanges(resource: URI): void;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\tmtime: number;\n\tctime: number;\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\tonDidChangeCapabilities: Event<void>;\n\n\tonDidChangeFile: Event<IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(private _resource: URI, private _operation: FileOperation, private _target?: IFileStat) {\n\t}\n\n\tget resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tget target(): IFileStat | undefined {\n\t\treturn this._target;\n\t}\n\n\tget operation(): FileOperation {\n\t\treturn this._operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\ttype: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\tresource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate _changes: IFileChange[];\n\n\tconstructor(changes: IFileChange[]) {\n\t\tthis._changes = changes;\n\t}\n\n\tget changes() {\n\t\treturn this._changes;\n\t}\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this._changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource, !isLinux /* ignorecase */);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource, !isLinux /* ignorecase */);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this._changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this._changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport interface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segement\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The last modifictaion date represented\n\t * as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t */\n\tetag?: string;\n\n\t/**\n\t * The resource is readonly.\n\t */\n\tisReadonly?: boolean;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a directory. if {{true}}\n\t * {{encoding}} has no meaning.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink?: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n\n\t/**\n\t * The size of the file if known.\n\t */\n\tsize?: number;\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\n/**\n * Content and meta information of a file.\n */\nexport interface IContent extends IBaseStat {\n\n\t/**\n\t * The content of a text file.\n\t */\n\tvalue: string;\n\n\t/**\n\t * The encoding of the content if known.\n\t */\n\tencoding: string;\n}\n\n// this should eventually replace IContent such\n// that we have a clear separation between content\n// and metadata (TODO@Joh, TODO@Ben)\nexport interface IContentData {\n\tencoding: string;\n\tstream: IStringStream;\n}\n\n/**\n * A Stream emitting strings.\n */\nexport interface IStringStream {\n\ton(event: 'data', callback: (chunk: string) => void): void;\n\ton(event: 'error', callback: (err: any) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: string, callback: any): void;\n}\n\n/**\n * Text snapshot that works like an iterator.\n * Will try to return chunks of roughly ~64KB size.\n * Will return null when finished.\n */\nexport interface ITextSnapshot {\n\tread(): string | null;\n}\n\nexport class StringSnapshot implements ITextSnapshot {\n\tprivate _value: string | null;\n\tconstructor(value: string) {\n\t\tthis._value = value;\n\t}\n\tread(): string | null {\n\t\tlet ret = this._value;\n\t\tthis._value = null;\n\t\treturn ret;\n\t}\n}\n/**\n * Helper method to convert a snapshot into its full string form.\n */\nexport function snapshotToString(snapshot: ITextSnapshot): string {\n\tconst chunks: string[] = [];\n\tlet chunk: string | null;\n\twhile (typeof (chunk = snapshot.read()) === 'string') {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn chunks.join('');\n}\n\n/**\n * Streamable content and meta information of a file.\n */\nexport interface IStreamContent extends IBaseStat {\n\n\t/**\n\t * The streamable content of a text file.\n\t */\n\tvalue: IStringStream;\n\n\t/**\n\t * The encoding of the content if known.\n\t */\n\tencoding: string;\n}\n\nexport interface IResolveContentOptions {\n\n\t/**\n\t * The optional acceptTextOnly parameter allows to fail this request early if the file\n\t * contents are not textual.\n\t */\n\tacceptTextOnly?: boolean;\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\tetag?: string;\n\n\t/**\n\t * The optional encoding parameter allows to specify the desired encoding when resolving\n\t * the contents of the file.\n\t */\n\tencoding?: string;\n\n\t/**\n\t * The optional guessEncoding parameter allows to guess encoding from content of the file.\n\t */\n\tautoGuessEncoding?: boolean;\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is null,\n\t * data will be read from the current file position.\n\t */\n\tposition?: number;\n}\n\nexport interface IUpdateContentOptions {\n\n\t/**\n\t * The encoding to use when updating a file.\n\t */\n\tencoding?: string;\n\n\t/**\n\t * If set to true, will enforce the selected encoding and not perform any detection using BOMs.\n\t */\n\toverwriteEncoding?: boolean;\n\n\t/**\n\t * Whether to overwrite a file even if it is readonly.\n\t */\n\toverwriteReadonly?: boolean;\n\n\t/**\n\t * Wether to write to the file as elevated (admin) user. When setting this option a prompt will\n\t * ask the user to authenticate as super user.\n\t */\n\twriteElevated?: boolean;\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\tetag?: string;\n\n\t/**\n\t * Run mkdirp before saving.\n\t */\n\tmkdirp?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\tresolveTo?: URI[];\n\tresolveSingleChildDescendants?: boolean;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\toverwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IResolveContentOptions & IUpdateContentOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: any): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_BINARY,\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEED_MEMORY_LIMIT\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const CONTENT_CHANGE_EVENT_BUFFER_DELAY = 1000;\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\thotExit: string;\n\t\tuseExperimentalFileWatcher: boolean;\n\t};\n}\n\nexport const SUPPORTED_ENCODINGS: { [encoding: string]: { labelLong: string; labelShort: string; order: number; encodeOnly?: boolean; alias?: string } } = {\n\tutf8: {\n\t\tlabelLong: 'UTF-8',\n\t\tlabelShort: 'UTF-8',\n\t\torder: 1,\n\t\talias: 'utf8bom'\n\t},\n\tutf8bom: {\n\t\tlabelLong: 'UTF-8 with BOM',\n\t\tlabelShort: 'UTF-8 with BOM',\n\t\tencodeOnly: true,\n\t\torder: 2,\n\t\talias: 'utf8'\n\t},\n\tutf16le: {\n\t\tlabelLong: 'UTF-16 LE',\n\t\tlabelShort: 'UTF-16 LE',\n\t\torder: 3\n\t},\n\tutf16be: {\n\t\tlabelLong: 'UTF-16 BE',\n\t\tlabelShort: 'UTF-16 BE',\n\t\torder: 4\n\t},\n\twindows1252: {\n\t\tlabelLong: 'Western (Windows 1252)',\n\t\tlabelShort: 'Windows 1252',\n\t\torder: 5\n\t},\n\tiso88591: {\n\t\tlabelLong: 'Western (ISO 8859-1)',\n\t\tlabelShort: 'ISO 8859-1',\n\t\torder: 6\n\t},\n\tiso88593: {\n\t\tlabelLong: 'Western (ISO 8859-3)',\n\t\tlabelShort: 'ISO 8859-3',\n\t\torder: 7\n\t},\n\tiso885915: {\n\t\tlabelLong: 'Western (ISO 8859-15)',\n\t\tlabelShort: 'ISO 8859-15',\n\t\torder: 8\n\t},\n\tmacroman: {\n\t\tlabelLong: 'Western (Mac Roman)',\n\t\tlabelShort: 'Mac Roman',\n\t\torder: 9\n\t},\n\tcp437: {\n\t\tlabelLong: 'DOS (CP 437)',\n\t\tlabelShort: 'CP437',\n\t\torder: 10\n\t},\n\twindows1256: {\n\t\tlabelLong: 'Arabic (Windows 1256)',\n\t\tlabelShort: 'Windows 1256',\n\t\torder: 11\n\t},\n\tiso88596: {\n\t\tlabelLong: 'Arabic (ISO 8859-6)',\n\t\tlabelShort: 'ISO 8859-6',\n\t\torder: 12\n\t},\n\twindows1257: {\n\t\tlabelLong: 'Baltic (Windows 1257)',\n\t\tlabelShort: 'Windows 1257',\n\t\torder: 13\n\t},\n\tiso88594: {\n\t\tlabelLong: 'Baltic (ISO 8859-4)',\n\t\tlabelShort: 'ISO 8859-4',\n\t\torder: 14\n\t},\n\tiso885914: {\n\t\tlabelLong: 'Celtic (ISO 8859-14)',\n\t\tlabelShort: 'ISO 8859-14',\n\t\torder: 15\n\t},\n\twindows1250: {\n\t\tlabelLong: 'Central European (Windows 1250)',\n\t\tlabelShort: 'Windows 1250',\n\t\torder: 16\n\t},\n\tiso88592: {\n\t\tlabelLong: 'Central European (ISO 8859-2)',\n\t\tlabelShort: 'ISO 8859-2',\n\t\torder: 17\n\t},\n\tcp852: {\n\t\tlabelLong: 'Central European (CP 852)',\n\t\tlabelShort: 'CP 852',\n\t\torder: 18\n\t},\n\twindows1251: {\n\t\tlabelLong: 'Cyrillic (Windows 1251)',\n\t\tlabelShort: 'Windows 1251',\n\t\torder: 19\n\t},\n\tcp866: {\n\t\tlabelLong: 'Cyrillic (CP 866)',\n\t\tlabelShort: 'CP 866',\n\t\torder: 20\n\t},\n\tiso88595: {\n\t\tlabelLong: 'Cyrillic (ISO 8859-5)',\n\t\tlabelShort: 'ISO 8859-5',\n\t\torder: 21\n\t},\n\tkoi8r: {\n\t\tlabelLong: 'Cyrillic (KOI8-R)',\n\t\tlabelShort: 'KOI8-R',\n\t\torder: 22\n\t},\n\tkoi8u: {\n\t\tlabelLong: 'Cyrillic (KOI8-U)',\n\t\tlabelShort: 'KOI8-U',\n\t\torder: 23\n\t},\n\tiso885913: {\n\t\tlabelLong: 'Estonian (ISO 8859-13)',\n\t\tlabelShort: 'ISO 8859-13',\n\t\torder: 24\n\t},\n\twindows1253: {\n\t\tlabelLong: 'Greek (Windows 1253)',\n\t\tlabelShort: 'Windows 1253',\n\t\torder: 25\n\t},\n\tiso88597: {\n\t\tlabelLong: 'Greek (ISO 8859-7)',\n\t\tlabelShort: 'ISO 8859-7',\n\t\torder: 26\n\t},\n\twindows1255: {\n\t\tlabelLong: 'Hebrew (Windows 1255)',\n\t\tlabelShort: 'Windows 1255',\n\t\torder: 27\n\t},\n\tiso88598: {\n\t\tlabelLong: 'Hebrew (ISO 8859-8)',\n\t\tlabelShort: 'ISO 8859-8',\n\t\torder: 28\n\t},\n\tiso885910: {\n\t\tlabelLong: 'Nordic (ISO 8859-10)',\n\t\tlabelShort: 'ISO 8859-10',\n\t\torder: 29\n\t},\n\tiso885916: {\n\t\tlabelLong: 'Romanian (ISO 8859-16)',\n\t\tlabelShort: 'ISO 8859-16',\n\t\torder: 30\n\t},\n\twindows1254: {\n\t\tlabelLong: 'Turkish (Windows 1254)',\n\t\tlabelShort: 'Windows 1254',\n\t\torder: 31\n\t},\n\tiso88599: {\n\t\tlabelLong: 'Turkish (ISO 8859-9)',\n\t\tlabelShort: 'ISO 8859-9',\n\t\torder: 32\n\t},\n\twindows1258: {\n\t\tlabelLong: 'Vietnamese (Windows 1258)',\n\t\tlabelShort: 'Windows 1258',\n\t\torder: 33\n\t},\n\tgbk: {\n\t\tlabelLong: 'Simplified Chinese (GBK)',\n\t\tlabelShort: 'GBK',\n\t\torder: 34\n\t},\n\tgb18030: {\n\t\tlabelLong: 'Simplified Chinese (GB18030)',\n\t\tlabelShort: 'GB18030',\n\t\torder: 35\n\t},\n\tcp950: {\n\t\tlabelLong: 'Traditional Chinese (Big5)',\n\t\tlabelShort: 'Big5',\n\t\torder: 36\n\t},\n\tbig5hkscs: {\n\t\tlabelLong: 'Traditional Chinese (Big5-HKSCS)',\n\t\tlabelShort: 'Big5-HKSCS',\n\t\torder: 37\n\t},\n\tshiftjis: {\n\t\tlabelLong: 'Japanese (Shift JIS)',\n\t\tlabelShort: 'Shift JIS',\n\t\torder: 38\n\t},\n\teucjp: {\n\t\tlabelLong: 'Japanese (EUC-JP)',\n\t\tlabelShort: 'EUC-JP',\n\t\torder: 39\n\t},\n\teuckr: {\n\t\tlabelLong: 'Korean (EUC-KR)',\n\t\tlabelShort: 'EUC-KR',\n\t\torder: 40\n\t},\n\twindows874: {\n\t\tlabelLong: 'Thai (Windows 874)',\n\t\tlabelShort: 'Windows 874',\n\t\torder: 41\n\t},\n\tiso885911: {\n\t\tlabelLong: 'Latin/Thai (ISO 8859-11)',\n\t\tlabelShort: 'ISO 8859-11',\n\t\torder: 42\n\t},\n\tkoi8ru: {\n\t\tlabelLong: 'Cyrillic (KOI8-RU)',\n\t\tlabelShort: 'KOI8-RU',\n\t\torder: 43\n\t},\n\tkoi8t: {\n\t\tlabelLong: 'Tajik (KOI8-T)',\n\t\tlabelShort: 'KOI8-T',\n\t\torder: 44\n\t},\n\tgb2312: {\n\t\tlabelLong: 'Simplified Chinese (GB 2312)',\n\t\tlabelShort: 'GB 2312',\n\t\torder: 45\n\t},\n\tcp865: {\n\t\tlabelLong: 'Nordic DOS (CP 865)',\n\t\tlabelShort: 'CP 865',\n\t\torder: 46\n\t},\n\tcp850: {\n\t\tlabelLong: 'Western European DOS (CP 850)',\n\t\tlabelShort: 'CP 850',\n\t\torder: 47\n\t}\n};\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogService extends IDisposable {\n\t_serviceBrand: any;\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logServices: ILogService[]) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: any;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, NullLogService, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n// @ts-ignore\nimport * as fs from 'fs';\n\nexport function createSpdLogService(processName: string, logLevel: LogLevel, logsFolder: string): ILogService {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\tconst logger = new _spdlog.RotatingLogger(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t\tlogger.setLevel(0);\n\n\t\treturn new SpdLogService(logger, logLevel);\n\t} catch (e) {\n\t\t/** Desktop console.error(e); */\n\t\treturn new NullLogService();\n\t}\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\treturn new _spdlog.RotatingLogger(name, filename, filesize, filecount);\n\t} catch (e) {\n\t\tif (typeof window === 'undefined') {\n\t\t\t// @ts-ignore\n\t\t\tself.postMessage({\n\t\t\t\t$type: 'create-log',\n\t\t\t\t$data: {\n\t\t\t\t\tname, filename, filesize, filecount\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst dirs = filename.split('/');\n\t\t\tdirs.pop();\n\t\t\tlet abDirPath = '';\n\t\t\tdirs.forEach(dir => {\n\t\t\t\tif (!dir) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tabDirPath += `/${dir}`;\n\t\t\t\tif (!fs.existsSync(abDirPath)) {\n\t\t\t\t\tfs.mkdirSync(abDirPath);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!fs.existsSync(filename)) {\n\t\t\t\tfs.writeFileSync(filename, '', 'utf-8');\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tflush: function () {},\n\t\t\tcritical: function (content) {\n\t\t\t\tif (typeof window === 'undefined') {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t$type: 'log-critical',\n\t\t\t\t\t\t$data: {\n\t\t\t\t\t\t\tfilename, content\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst fileContent = fs.readFileSync(filename).toString();\n\t\t\t\t\tfs.writeFileSync(filename, fileContent + content, 'utf-8');\n\t\t\t\t}\n\t\t\t},\n\t\t\tclearFormatters: function () {},\n\t\t} as spdlog.RotatingLogger;\n\t}\n}\n\nclass SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\tprivate readonly logger: spdlog.RotatingLogger,\n\t\tlevel: LogLevel = LogLevel.Error\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.logger.trace(this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.logger.debug(this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.logger.info(this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.logger.warn(this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis.logger.error(this.format(array));\n\t\t\t} else {\n\t\t\t\tthis.logger.error(this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.logger.critical(this.format(arguments));\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.logger.drop();\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport Severity from 'vs/base/common/severity';\n\nexport interface IMarkerService {\n\t_serviceBrand: any;\n\n\tgetStatistics(): MarkerStatistics;\n\n\tchangeOne(owner: string, resource: URI, markers: IMarkerData[]): void;\n\n\tchangeAll(owner: string, data: IResourceMarker[]): void;\n\n\tremove(owner: string, resources: URI[]): void;\n\n\tread(filter?: { owner?: string; resource?: URI; severities?: number, take?: number; }): IMarker[];\n\n\tonMarkerChanged: Event<URI[]>;\n}\n\n/**\n *\n */\nexport interface IRelatedInformation {\n\tresource: URI;\n\tmessage: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n}\n\nexport const enum MarkerTag {\n\tUnnecessary = 1,\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8,\n}\n\nexport namespace MarkerSeverity {\n\n\texport function compare(a: MarkerSeverity, b: MarkerSeverity): number {\n\t\treturn b - a;\n\t}\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n\t_displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n\t_displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n\n\texport function toString(a: MarkerSeverity): string {\n\t\treturn _displayStrings[a] || '';\n\t}\n\n\texport function fromSeverity(severity: Severity): MarkerSeverity {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error: return MarkerSeverity.Error;\n\t\t\tcase Severity.Warning: return MarkerSeverity.Warning;\n\t\t\tcase Severity.Info: return MarkerSeverity.Info;\n\t\t\tcase Severity.Ignore: return MarkerSeverity.Hint;\n\t\t}\n\t}\n}\n\n/**\n * A structure defining a problem/warning/etc.\n */\nexport interface IMarkerData {\n\tcode?: string;\n\tseverity: MarkerSeverity;\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\trelatedInformation?: IRelatedInformation[];\n\ttags?: MarkerTag[];\n}\n\nexport interface IResourceMarker {\n\tresource: URI;\n\tmarker: IMarkerData;\n}\n\nexport interface IMarker {\n\towner: string;\n\tresource: URI;\n\tseverity: MarkerSeverity;\n\tcode?: string;\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\trelatedInformation?: IRelatedInformation[];\n\ttags?: MarkerTag[];\n}\n\nexport interface MarkerStatistics {\n\terrors: number;\n\twarnings: number;\n\tinfos: number;\n\tunknowns: number;\n}\n\nexport namespace IMarkerData {\n\tconst emptyString = '';\n\texport function makeKey(markerData: IMarkerData): string {\n\t\tlet result: string[] = [emptyString];\n\t\tif (markerData.source) {\n\t\t\tresult.push(markerData.source.replace('¦', '\\¦'));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.code) {\n\t\t\tresult.push(markerData.code.replace('¦', '\\¦'));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.severity !== undefined && markerData.severity !== null) {\n\t\t\tresult.push(MarkerSeverity.toString(markerData.severity));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.message) {\n\t\t\tresult.push(markerData.message.replace('¦', '\\¦'));\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n\t\t\tresult.push(markerData.startLineNumber.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n\t\t\tresult.push(markerData.startColumn.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n\t\t\tresult.push(markerData.endLineNumber.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tif (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n\t\t\tresult.push(markerData.endColumn.toString());\n\t\t} else {\n\t\t\tresult.push(emptyString);\n\t\t}\n\t\tresult.push(emptyString);\n\t\treturn result.join('¦');\n\t}\n}\n\nexport const IMarkerService = createDecorator<IMarkerService>('markerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\tsticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\tsilent?: boolean;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\tseverity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\tmessage: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\tsource?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\tprimary?: IAction[];\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\tsecondary?: IAction[];\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\tlabel: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\tisSecondary?: boolean;\n\n\t/**\n\t * Wether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\tkeepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convinient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convinient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convinient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param onCancel will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\treadonly progress = new NoOpProgress();\n\n\tprivate readonly _onDidClose: Emitter<void> = new Emitter();\n\n\tget onDidClose(): Event<void> {\n\t\treturn this._onDidClose.event;\n\t}\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void {\n\t\tthis._onDidClose.dispose();\n\t}\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface IPackageConfiguration {\n\tname: string;\n\tversion: string;\n}\n\nconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\nconst packageJsonPath = path.join(rootPath, 'package.json');\nexport default require.__$__nodeRequire(packageJsonPath) as IPackageConfiguration;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface IProductConfiguration {\n\tnameShort: string;\n\tnameLong: string;\n\tapplicationName: string;\n\twin32AppId: string;\n\twin32x64AppId: string;\n\twin32UserAppId: string;\n\twin32x64UserAppId: string;\n\twin32AppUserModelId: string;\n\twin32MutexName: string;\n\tdarwinBundleIdentifier: string;\n\turlProtocol: string;\n\tdataFolderName: string;\n\tdownloadUrl: string;\n\tupdateUrl?: string;\n\tquality?: string;\n\ttarget?: string;\n\tcommit?: string;\n\tsettingsSearchBuildId?: number;\n\tsettingsSearchUrl?: string;\n\texperimentsUrl?: string;\n\tdate: string;\n\textensionsGallery: {\n\t\tserviceUrl: string;\n\t\titemUrl: string;\n\t\tcontrolUrl: string;\n\t\trecommendationsUrl: string;\n\t};\n\textensionTips: { [id: string]: string; };\n\textensionImportantTips: { [id: string]: { name: string; pattern: string; }; };\n\texeBasedExtensionTips: { [id: string]: { friendlyName: string, windowsPath?: string, recommendations: string[] }; };\n\textensionKeywords: { [extension: string]: string[]; };\n\textensionAllowedBadgeProviders: string[];\n\textensionAllowedProposedApi: string[];\n\tkeymapExtensionTips: string[];\n\tcrashReporter: {\n\t\tcompanyName: string;\n\t\tproductName: string;\n\t};\n\twelcomePage: string;\n\tenableTelemetry: boolean;\n\taiConfig: {\n\t\tasimovKey: string;\n\t};\n\tsendASmile: {\n\t\treportIssueUrl: string,\n\t\trequestFeatureUrl: string\n\t};\n\tdocumentationUrl: string;\n\treleaseNotesUrl: string;\n\tkeyboardShortcutsUrlMac: string;\n\tkeyboardShortcutsUrlLinux: string;\n\tkeyboardShortcutsUrlWin: string;\n\tintroductoryVideosUrl: string;\n\ttipsAndTricksUrl: string;\n\ttwitterUrl: string;\n\trequestFeatureUrl: string;\n\treportIssueUrl: string;\n\tlicenseUrl: string;\n\tprivacyStatementUrl: string;\n\ttelemetryOptOutUrl: string;\n\tnpsSurveyUrl: string;\n\tsurveys: ISurveyData[];\n\tchecksums: { [path: string]: string; };\n\tchecksumFailMoreInfoUrl: string;\n\thockeyApp: {\n\t\t'win32-ia32': string;\n\t\t'win32-x64': string;\n\t\t'linux-ia32': string;\n\t\t'linux-x64': string;\n\t\t'darwin': string;\n\t};\n\tlogUploaderUrl: string;\n\tportable?: string;\n\tuiExtensions?: string[];\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n\nconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\nconst productJsonPath = path.join(rootPath, 'product.json');\nconst product = require.__$__nodeRequire(productJsonPath) as IProductConfiguration;\n\nif (process.env['VSCODE_DEV']) {\n\tproduct.nameShort += ' Dev';\n\tproduct.nameLong += ' Dev';\n\tproduct.dataFolderName += '-dev';\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDisposable, dispose, toDisposable } from 'vs/base/common/lifecycle';\n\nexport const IProgressService = createDecorator<IProgressService>('progressService');\n\nexport interface IProgressService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Show progress customized with the provided flags.\n\t */\n\tshow(infinite: true, delay?: number): IProgressRunner;\n\tshow(total: number, delay?: number): IProgressRunner;\n\n\t/**\n\t * Indicate progress for the duration of the provided promise. Progress will stop in\n\t * any case of promise completion, error or cancellation.\n\t */\n\tshowWhile(promise: Promise<any>, delay?: number): Promise<void>;\n}\n\nexport const enum ProgressLocation {\n\tExplorer = 1,\n\tScm = 3,\n\tExtensions = 5,\n\tWindow = 10,\n\tNotification = 15\n}\n\nexport interface IProgressOptions {\n\tlocation: ProgressLocation | string;\n\ttitle?: string;\n\tsource?: string;\n\ttotal?: number;\n\tcancellable?: boolean;\n}\n\nexport interface IProgressStep {\n\tmessage?: string;\n\tincrement?: number;\n}\n\nexport const IProgressService2 = createDecorator<IProgressService2>('progressService2');\n\nexport interface IProgressService2 {\n\n\t_serviceBrand: any;\n\n\twithProgress<R=any>(options: IProgressOptions, task: (progress: IProgress<IProgressStep>) => Promise<R>, onDidCancel?: () => void): Promise<R>;\n}\n\nexport interface IProgressRunner {\n\ttotal(value: number): void;\n\tworked(value: number): void;\n\tdone(): void;\n}\n\nexport const emptyProgressRunner: IProgressRunner = Object.freeze({\n\ttotal() { },\n\tworked() { },\n\tdone() { }\n});\n\nexport interface IProgress<T> {\n\treport(item: T): void;\n}\n\nexport const emptyProgress: IProgress<any> = Object.freeze({ report() { } });\n\nexport class Progress<T> implements IProgress<T> {\n\n\tprivate _callback: (data: T) => void;\n\tprivate _value: T;\n\n\tconstructor(callback: (data: T) => void) {\n\t\tthis._callback = callback;\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\treport(item: T) {\n\t\tthis._value = item;\n\t\tthis._callback(this._value);\n\t}\n}\n\n/**\n * A helper to show progress during a long running operation. If the operation\n * is started multiple times, only the last invocation will drive the progress.\n */\nexport interface IOperation {\n\tid: number;\n\tisCurrent: () => boolean;\n\ttoken: CancellationToken;\n\tstop(): void;\n}\n\nexport class LongRunningOperation {\n\tprivate currentOperationId = 0;\n\tprivate currentOperationDisposables: IDisposable[] = [];\n\tprivate currentProgressRunner: IProgressRunner;\n\tprivate currentProgressTimeout: any;\n\n\tconstructor(\n\t\tprivate progressService: IProgressService\n\t) { }\n\n\tstart(progressDelay: number): IOperation {\n\n\t\t// Stop any previous operation\n\t\tthis.stop();\n\n\t\t// Start new\n\t\tconst newOperationId = ++this.currentOperationId;\n\t\tconst newOperationToken = new CancellationTokenSource();\n\t\tthis.currentProgressTimeout = setTimeout(() => {\n\t\t\tif (newOperationId === this.currentOperationId) {\n\t\t\t\tthis.currentProgressRunner = this.progressService.show(true);\n\t\t\t}\n\t\t}, progressDelay);\n\n\t\tthis.currentOperationDisposables.push(\n\t\t\ttoDisposable(() => clearTimeout(this.currentProgressTimeout)),\n\t\t\ttoDisposable(() => newOperationToken.cancel()),\n\t\t\ttoDisposable(() => this.currentProgressRunner ? this.currentProgressRunner.done() : undefined)\n\t\t);\n\n\t\treturn {\n\t\t\tid: newOperationId,\n\t\t\ttoken: newOperationToken.token,\n\t\t\tstop: () => this.doStop(newOperationId),\n\t\t\tisCurrent: () => this.currentOperationId === newOperationId\n\t\t};\n\t}\n\n\tstop(): void {\n\t\tthis.doStop(this.currentOperationId);\n\t}\n\n\tprivate doStop(operationId: number): void {\n\t\tif (this.currentOperationId === operationId) {\n\t\t\tthis.currentOperationDisposables = dispose(this.currentOperationDisposables);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.currentOperationDisposables = dispose(this.currentOperationDisposables);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate data: { [id: string]: any; };\n\n\tconstructor() {\n\t\tthis.data = {};\n\t}\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n\n\t\tthis.data[id] = data;\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.hasOwnProperty(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data[id] || null;\n\t}\n}\n\nexport const Registry = <IRegistry>new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport * as strings from 'vs/base/common/strings';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\tAPPLICATION = 1,\n\tWINDOW,\n\tRESOURCE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tcontributedByExtension?: boolean;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\nexport const allSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\n\nexport const editorConfigurationSchemaId = 'vscode://schemas/settings/editor';\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly editorConfigurationSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers: string[] = [];\n\tprivate overridePropertyPattern: string;\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.editorConfigurationSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting' };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t\tthis.updateSchemaForOverrideSettingsConfiguration(configuration);\n\t\t});\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.editorConfigurationSchema.properties![key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tthis.overrideIdentifiers.push(...overrideIdentifiers);\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW, overridable: boolean = false): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\toverridable = configuration.overridable || overridable;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tlet message;\n\t\t\t\tif (validate && (message = validateProperty(key))) {\n\t\t\t\t\tconsole.warn(message);\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\t// Inherit overridable property from parent\n\t\t\t\tif (overridable) {\n\t\t\t\t\tproperty.overridable = true;\n\t\t\t\t}\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope, overridable));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tfunction register(configuration: IConfigurationNode) {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t}\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchemaForOverrideSettingsConfiguration(configuration: IConfigurationNode): void {\n\t\tif (configuration.id !== SETTINGS_OVERRRIDE_NODE_ID) {\n\t\t\tthis.update(configuration);\n\t\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tlet patternProperties: IJSONSchema = allSettings.patternProperties[this.overridePropertyPattern];\n\t\tif (!patternProperties) {\n\t\t\tpatternProperties = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: 'Unknown Identifier. Use language identifiers',\n\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t};\n\t\t}\n\n\t\tdelete allSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete applicationSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete windowSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete resourceSettings.patternProperties[this.overridePropertyPattern];\n\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tallSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tapplicationSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\twindowSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tresourceSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate update(configuration: IConfigurationNode): void {\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (properties[key].overridable) {\n\t\t\t\t\tthis.editorConfigurationSchema.properties![key] = this.getConfigurationProperties()[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tsubNodes.forEach(subNode => this.update(subNode));\n\t\t}\n\t}\n\n\tprivate computeOverridePropertyPattern(): void {\n\t\tthis.overridePropertyPattern = this.overrideIdentifiers.length ? OVERRIDE_PATTERN_WITH_SUBSTITUTION.replace('${0}', this.overrideIdentifiers.map(identifier => strings.createRegExp(identifier, false).source).join('|')) : OVERRIDE_PROPERTY;\n\t}\n}\n\nconst SETTINGS_OVERRRIDE_NODE_ID = 'override';\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nconst OVERRIDE_PATTERN_WITH_SUBSTITUTION = '\\\\[(${0})\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): { [key: string]: ConfigurationScope } {\n\tconst scopes = {};\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes[key] = configurationProperties[key].scope;\n\t}\n\tscopes['launch'] = ConfigurationScope.RESOURCE;\n\tscopes['task'] = ConfigurationScope.RESOURCE;\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ResourceMap } from 'vs/base/common/map';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChangeEvent {\n\n\tsource: ConfigurationTarget;\n\taffectedKeys: string[];\n\taffectsConfiguration(configuration: string, resource?: URI): boolean;\n\n\t// Following data is used for telemetry\n\tsourceConfig: any;\n\n\t// Following data is used for Extension host configuration event\n\tchangedConfiguration: IConfigurationModel;\n\tchangedConfigurationByResource: ResourceMap<IConfigurationModel>;\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: any;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): {\n\t\tdefault: T,\n\t\tuser: T,\n\t\tworkspace?: T,\n\t\tworkspaceFolder?: T,\n\t\tmemory?: T,\n\t\tvalue: T,\n\t};\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: { [folder: string]: IConfigurationModel };\n\tisComplete: boolean;\n}\n\nexport function compare(from: IConfigurationModel, to: IConfigurationModel): { added: string[], removed: string[], updated: string[] } {\n\tconst added = to.keys.filter(key => from.keys.indexOf(key) === -1);\n\tconst removed = from.keys.filter(key => to.keys.indexOf(key) === -1);\n\tconst updated: string[] = [];\n\n\tfor (const key of from.keys) {\n\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\tif (!objects.equals(value1, value2)) {\n\t\t\tupdated.push(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\tif (configurationProperties[keyInOverrideRaw] && configurationProperties[keyInOverrideRaw].overridable) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object') {\n\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.user !== 'undefined' || typeof setting.workspace !== 'undefined' || typeof setting.workspaceFolder !== 'undefined') {\n\t\treturn setting.value;\n\t} else if (typeof legacySetting.user !== 'undefined' || typeof legacySetting.workspace !== 'undefined' || typeof legacySetting.workspaceFolder !== 'undefined') {\n\t\treturn legacySetting.value;\n\t} else {\n\t\treturn setting.default;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, IConfigurationChangeEvent, ConfigurationTarget, removeFromValueTree, toOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`))\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined): void {\n\t\tif (content) {\n\t\t\tconst raw = this.parseContent(content);\n\t\t\tconst configurationModel = this.parseRaw(raw);\n\t\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t\t}\n\t}\n\n\tprotected parseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected parseRaw(raw: any): IConfigurationModel {\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n}\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _userConfiguration: ConfigurationModel,\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): {\n\t\tdefault: C,\n\t\tuser: C,\n\t\tworkspace?: C,\n\t\tworkspaceFolder?: C\n\t\tmemory?: C\n\t\tvalue: C,\n\t} {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\t\treturn {\n\t\t\tdefault: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key),\n\t\t\tuser: overrides.overrideIdentifier ? this._userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._userConfiguration.freeze().getValue(key),\n\t\t\tworkspace: workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined, //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\t\tworkspaceFolder: folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined,\n\t\t\tmemory: overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key),\n\t\t\tvalue: consolidateConfigurationModel.getValue(key)\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this._userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateUserConfiguration(userConfiguration: ConfigurationModel): void {\n\t\tthis._userConfiguration = userConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folders.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tget user(): ConfigurationModel {\n\t\treturn this._userConfiguration;\n\t}\n\n\tget workspace(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folders(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this._userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | null {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri) || null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this._userConfiguration.contents,\n\t\t\t\toverrides: this._userConfiguration.overrides,\n\t\t\t\tkeys: this._userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: this._folderConfigurations.keys().reduce((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult[folder.toString()] = { contents, overrides, keys };\n\t\t\t\treturn result;\n\t\t\t}, Object.create({})),\n\t\t\tisComplete: true\n\t\t};\n\t}\n\n\tallKeys(workspace: Workspace | undefined): string[] {\n\t\tlet keys = this.keys(workspace);\n\t\tlet all = [...keys.default];\n\t\tconst addKeys = (keys) => {\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (all.indexOf(key) === -1) {\n\t\t\t\t\tall.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\taddKeys(keys.user);\n\t\taddKeys(keys.workspace);\n\t\tfor (const resource of this.folders.keys()) {\n\t\t\taddKeys(this.folders.get(resource)!.keys);\n\t\t}\n\t\treturn all;\n\t}\n}\n\nexport class AbstractConfigurationChangeEvent {\n\n\tprotected doesConfigurationContains(configuration: ConfigurationModel, config: string): boolean {\n\t\tlet changedKeysTree = configuration.contents;\n\t\tlet requestedTree = toValuesTree({ [config]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\tchangedKeysTree = changedKeysTree[key];\n\t\t\tif (!changedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected updateKeys(configuration: ConfigurationModel, keys: string[], resource?: URI): void {\n\t\tfor (const key of keys) {\n\t\t\tconfiguration.setValue(key, {});\n\t\t}\n\t}\n}\n\nexport class ConfigurationChangeEvent extends AbstractConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate _source: ConfigurationTarget;\n\tprivate _sourceConfig: any;\n\n\tconstructor(\n\t\tprivate _changedConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _changedConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>()) {\n\t\tsuper();\n\t}\n\n\tget changedConfiguration(): IConfigurationModel {\n\t\treturn this._changedConfiguration;\n\t}\n\n\tget changedConfigurationByResource(): ResourceMap<IConfigurationModel> {\n\t\treturn this._changedConfigurationByResource;\n\t}\n\n\tchange(event: ConfigurationChangeEvent): ConfigurationChangeEvent;\n\tchange(keys: string[], resource?: URI): ConfigurationChangeEvent;\n\tchange(arg1: any, arg2?: any): ConfigurationChangeEvent {\n\t\tif (arg1 instanceof ConfigurationChangeEvent) {\n\t\t\tthis._changedConfiguration = this._changedConfiguration.merge(arg1._changedConfiguration);\n\t\t\tfor (const resource of arg1._changedConfigurationByResource.keys()) {\n\t\t\t\tlet changedConfigurationByResource = this.getOrSetChangedConfigurationForResource(resource);\n\t\t\t\tchangedConfigurationByResource = changedConfigurationByResource.merge(arg1._changedConfigurationByResource.get(resource)!);\n\t\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.changeWithKeys(arg1, arg2);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttelemetryData(source: ConfigurationTarget, sourceConfig: any): ConfigurationChangeEvent {\n\t\tthis._source = source;\n\t\tthis._sourceConfig = sourceConfig;\n\t\treturn this;\n\t}\n\n\tget affectedKeys(): string[] {\n\t\tconst keys = [...this._changedConfiguration.keys];\n\t\tthis._changedConfigurationByResource.forEach(model => keys.push(...model.keys));\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tget source(): ConfigurationTarget {\n\t\treturn this._source;\n\t}\n\n\tget sourceConfig(): any {\n\t\treturn this._sourceConfig;\n\t}\n\n\taffectsConfiguration(config: string, resource?: URI): boolean {\n\t\tlet configurationModelsToSearch: ConfigurationModel[] = [this._changedConfiguration];\n\n\t\tif (resource) {\n\t\t\tlet model = this._changedConfigurationByResource.get(resource);\n\t\t\tif (model) {\n\t\t\t\tconfigurationModelsToSearch.push(model);\n\t\t\t}\n\t\t} else {\n\t\t\tconfigurationModelsToSearch.push(...this._changedConfigurationByResource.values());\n\t\t}\n\n\t\tfor (const configuration of configurationModelsToSearch) {\n\t\t\tif (this.doesConfigurationContains(configuration, config)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate changeWithKeys(keys: string[], resource?: URI): void {\n\t\tlet changedConfiguration = resource ? this.getOrSetChangedConfigurationForResource(resource) : this._changedConfiguration;\n\t\tthis.updateKeys(changedConfiguration, keys);\n\t}\n\n\tprivate getOrSetChangedConfigurationForResource(resource: URI): ConfigurationModel {\n\t\tlet changedConfigurationByResource = this._changedConfigurationByResource.get(resource);\n\t\tif (!changedConfigurationByResource) {\n\t\t\tchangedConfigurationByResource = new ConfigurationModel();\n\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t}\n\t\treturn changedConfigurationByResource;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { IProcessEnvironment, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { ParsedArgs, IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IRecentlyOpened, IRecent } from 'vs/platform/history/common/history';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { ExportData } from 'vs/base/common/performance';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nexport const IWindowsService = createDecorator<IWindowsService>('windowsService');\n\nexport interface INativeOpenDialogOptions {\n\twindowId?: number;\n\tforceNewWindow?: boolean;\n\n\tdialogOptions?: OpenDialogOptions;\n\n\ttelemetryEventName?: string;\n\ttelemetryExtraData?: ITelemetryData;\n}\n\nexport interface IEnterWorkspaceResult {\n\tworkspace: IWorkspaceIdentifier;\n\tbackupPath?: string;\n}\n\nexport interface CrashReporterStartOptions {\n\tcompanyName?: string;\n\tsubmitURL: string;\n\tproductName?: string;\n\tuploadToServer?: boolean;\n\tignoreSystemCrashHandler?: boolean;\n\textra?: any;\n\tcrashesDirectory?: string;\n}\n\nexport interface OpenDialogOptions {\n\ttitle?: string;\n\tdefaultPath?: string;\n\tbuttonLabel?: string;\n\tfilters?: FileFilter[];\n\tproperties?: Array<'openFile' | 'openDirectory' | 'multiSelections' | 'showHiddenFiles' | 'createDirectory' | 'promptToCreate' | 'noResolveAliases' | 'treatPackageAsDirectory'>;\n\tmessage?: string;\n}\n\nexport interface FileFilter {\n\textensions: string[];\n\tname: string;\n}\n\nexport interface MessageBoxOptions {\n\ttype?: string;\n\tbuttons?: string[];\n\tdefaultId?: number;\n\ttitle?: string;\n\tmessage: string;\n\tdetail?: string;\n\tcheckboxLabel?: string;\n\tcheckboxChecked?: boolean;\n\tcancelId?: number;\n\tnoLink?: boolean;\n\tnormalizeAccessKeys?: boolean;\n}\n\nexport interface SaveDialogOptions {\n\ttitle?: string;\n\tdefaultPath?: string;\n\tbuttonLabel?: string;\n\tfilters?: FileFilter[];\n\tmessage?: string;\n\tnameFieldLabel?: string;\n\tshowsTagField?: boolean;\n}\n\nexport interface INewWindowOptions {\n\tremoteAuthority?: string;\n}\n\nexport interface IDevToolsOptions {\n\tmode: 'right' | 'bottom' | 'undocked' | 'detach';\n}\n\nexport interface IWindowsService {\n\n\t_serviceBrand: any;\n\n\tonWindowOpen: Event<number>;\n\tonWindowFocus: Event<number>;\n\tonWindowBlur: Event<number>;\n\tonWindowMaximize: Event<number>;\n\tonWindowUnmaximize: Event<number>;\n\tonRecentlyOpenedChange: Event<void>;\n\n\t// Dialogs\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFileAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tshowMessageBox(windowId: number, options: MessageBoxOptions): Promise<IMessageBoxResult>;\n\tshowSaveDialog(windowId: number, options: SaveDialogOptions): Promise<string>;\n\tshowOpenDialog(windowId: number, options: OpenDialogOptions): Promise<string[]>;\n\n\treloadWindow(windowId: number, args?: ParsedArgs): Promise<void>;\n\topenDevTools(windowId: number, options?: IDevToolsOptions): Promise<void>;\n\ttoggleDevTools(windowId: number): Promise<void>;\n\tcloseWorkspace(windowId: number): Promise<void>;\n\tenterWorkspace(windowId: number, path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\ttoggleFullScreen(windowId: number): Promise<void>;\n\tsetRepresentedFilename(windowId: number, fileName: string): Promise<void>;\n\taddRecentlyOpened(recents: IRecent[]): Promise<void>;\n\tremoveFromRecentlyOpened(paths: URI[]): Promise<void>;\n\tclearRecentlyOpened(): Promise<void>;\n\tgetRecentlyOpened(windowId: number): Promise<IRecentlyOpened>;\n\tfocusWindow(windowId: number): Promise<void>;\n\tcloseWindow(windowId: number): Promise<void>;\n\tisFocused(windowId: number): Promise<boolean>;\n\tisMaximized(windowId: number): Promise<boolean>;\n\tmaximizeWindow(windowId: number): Promise<void>;\n\tunmaximizeWindow(windowId: number): Promise<void>;\n\tminimizeWindow(windowId: number): Promise<void>;\n\tonWindowTitleDoubleClick(windowId: number): Promise<void>;\n\tsetDocumentEdited(windowId: number, flag: boolean): Promise<void>;\n\tquit(): Promise<void>;\n\trelaunch(options: { addArgs?: string[], removeArgs?: string[] }): Promise<void>;\n\n\t// macOS Native Tabs\n\tnewWindowTab(): Promise<void>;\n\tshowPreviousWindowTab(): Promise<void>;\n\tshowNextWindowTab(): Promise<void>;\n\tmoveWindowTabToNewWindow(): Promise<void>;\n\tmergeAllWindowTabs(): Promise<void>;\n\ttoggleWindowTabsBar(): Promise<void>;\n\n\t// macOS TouchBar\n\tupdateTouchBar(windowId: number, items: ISerializableCommandAction[][]): Promise<void>;\n\n\t// Shared process\n\twhenSharedProcessReady(): Promise<void>;\n\ttoggleSharedProcess(): Promise<void>;\n\n\t// Global methods\n\topenWindow(windowId: number, uris: IURIToOpen[], options?: IOpenSettings): Promise<void>;\n\topenNewWindow(options?: INewWindowOptions): Promise<void>;\n\tshowWindow(windowId: number): Promise<void>;\n\tgetWindows(): Promise<{ id: number; workspace?: IWorkspaceIdentifier; folderUri?: ISingleFolderWorkspaceIdentifier; title: string; filename?: string; }[]>;\n\tgetWindowCount(): Promise<number>;\n\tlog(severity: string, ...messages: string[]): Promise<void>;\n\tshowItemInFolder(path: URI): Promise<void>;\n\tgetActiveWindowId(): Promise<number | undefined>;\n\n\t// This needs to be handled from browser process to prevent\n\t// foreground ordering issues on Windows\n\topenExternal(url: string): Promise<boolean>;\n\n\t// TODO: this is a bit backwards\n\tstartCrashReporter(config: CrashReporterStartOptions): Promise<void>;\n\n\topenAboutDialog(): Promise<void>;\n\tresolveProxy(windowId: number, url: string): Promise<string | undefined>;\n}\n\nexport const IWindowService = createDecorator<IWindowService>('windowService');\n\nexport interface IMessageBoxResult {\n\tbutton: number;\n\tcheckboxChecked?: boolean;\n}\n\nexport interface IOpenSettings {\n\tforceNewWindow?: boolean;\n\tforceReuseWindow?: boolean;\n\tforceOpenWorkspaceAsFile?: boolean;\n\tdiffMode?: boolean;\n\taddMode?: boolean;\n\targs?: ParsedArgs;\n}\n\nexport type URIType = 'file' | 'folder';\n\nexport interface IURIToOpen {\n\turi: URI;\n\ttypeHint?: URIType;\n\tlabel?: string;\n}\n\nexport interface IWindowService {\n\n\t_serviceBrand: any;\n\n\treadonly onDidChangeFocus: Event<boolean>;\n\treadonly onDidChangeMaximize: Event<boolean>;\n\n\treadonly hasFocus: boolean;\n\n\tgetConfiguration(): IWindowConfiguration;\n\tgetCurrentWindowId(): number;\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFileAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\treloadWindow(args?: ParsedArgs): Promise<void>;\n\topenDevTools(options?: IDevToolsOptions): Promise<void>;\n\ttoggleDevTools(): Promise<void>;\n\tcloseWorkspace(): Promise<void>;\n\tupdateTouchBar(items: ISerializableCommandAction[][]): Promise<void>;\n\tenterWorkspace(path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\ttoggleFullScreen(): Promise<void>;\n\tsetRepresentedFilename(fileName: string): Promise<void>;\n\tgetRecentlyOpened(): Promise<IRecentlyOpened>;\n\tfocusWindow(): Promise<void>;\n\tcloseWindow(): Promise<void>;\n\topenWindow(uris: IURIToOpen[], options?: IOpenSettings): Promise<void>;\n\tisFocused(): Promise<boolean>;\n\tsetDocumentEdited(flag: boolean): Promise<void>;\n\tisMaximized(): Promise<boolean>;\n\tmaximizeWindow(): Promise<void>;\n\tunmaximizeWindow(): Promise<void>;\n\tminimizeWindow(): Promise<void>;\n\tonWindowTitleDoubleClick(): Promise<void>;\n\tshow(): Promise<void>;\n\tshowMessageBox(options: MessageBoxOptions): Promise<IMessageBoxResult>;\n\tshowSaveDialog(options: SaveDialogOptions): Promise<string>;\n\tshowOpenDialog(options: OpenDialogOptions): Promise<string[]>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport type MenuBarVisibility = 'default' | 'visible' | 'toggle' | 'hidden';\n\nexport interface IWindowsConfiguration {\n\twindow: IWindowSettings;\n}\n\nexport interface IWindowSettings {\n\topenFilesInNewWindow: 'on' | 'off' | 'default';\n\topenFoldersInNewWindow: 'on' | 'off' | 'default';\n\topenWithoutArgumentsInNewWindow: 'on' | 'off';\n\trestoreWindows: 'all' | 'folders' | 'one' | 'none';\n\trestoreFullscreen: boolean;\n\tzoomLevel: number;\n\ttitleBarStyle: 'native' | 'custom';\n\tautoDetectHighContrast: boolean;\n\tmenuBarVisibility: MenuBarVisibility;\n\tnewWindowDimensions: 'default' | 'inherit' | 'maximized' | 'fullscreen';\n\tnativeTabs: boolean;\n\tnativeFullScreen: boolean;\n\tenableMenuBarMnemonics: boolean;\n\tcloseWhenEmpty: boolean;\n\tclickThroughInactive: boolean;\n}\n\nexport function getTitleBarStyle(configurationService: IConfigurationService, environment: IEnvironmentService, isExtensionDevelopment = environment.isExtensionDevelopment): 'native' | 'custom' {\n\tconst configuration = configurationService.getValue<IWindowSettings>('window');\n\n\tconst isDev = !environment.isBuilt || isExtensionDevelopment;\n\tif (isMacintosh && isDev) {\n\t\treturn 'native'; // not enabled when developing due to https://github.com/electron/electron/issues/3647\n\t}\n\n\tif (configuration) {\n\t\tconst useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n\t\tif (useNativeTabs) {\n\t\t\treturn 'native'; // native tabs on sierra do not work with custom title style\n\t\t}\n\n\t\tconst useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n\t\tif (useSimpleFullScreen) {\n\t\t\treturn 'native'; // simple fullscreen does not work well with custom title style (https://github.com/Microsoft/vscode/issues/63291)\n\t\t}\n\n\t\tconst style = configuration.titleBarStyle;\n\t\tif (style === 'native' || style === 'custom') {\n\t\t\treturn style;\n\t\t}\n\t}\n\n\treturn isLinux ? 'native' : 'custom'; // default to custom on all macOS and Windows\n}\n\nexport const enum OpenContext {\n\n\t// opening when running from the command line\n\tCLI,\n\n\t// macOS only: opening from the dock (also when opening files to a running instance from desktop)\n\tDOCK,\n\n\t// opening from the main application window\n\tMENU,\n\n\t// opening from a file or folder dialog\n\tDIALOG,\n\n\t// opening from the OS's UI\n\tDESKTOP,\n\n\t// opening through the API\n\tAPI\n}\n\nexport const enum ReadyState {\n\n\t/**\n\t * This window has not loaded any HTML yet\n\t */\n\tNONE,\n\n\t/**\n\t * This window is loading HTML\n\t */\n\tLOADING,\n\n\t/**\n\t * This window is navigating to another HTML\n\t */\n\tNAVIGATING,\n\n\t/**\n\t * This window is done loading HTML\n\t */\n\tREADY\n}\n\nexport interface IPath extends IPathData {\n\n\t// the file path to open within a Code instance\n\tfileUri?: URI;\n}\n\nexport interface IPathsToWaitFor extends IPathsToWaitForData {\n\tpaths: IPath[];\n}\n\nexport interface IPathsToWaitForData {\n\tpaths: IPathData[];\n\twaitMarkerFilePath: string;\n}\n\nexport interface IPathData {\n\n\t// the file path to open within a Code instance\n\tfileUri?: UriComponents;\n\n\t// the line number in the file path to open\n\tlineNumber?: number;\n\n\t// the column number in the file path to open\n\tcolumnNumber?: number;\n}\n\nexport interface IOpenFileRequest {\n\tfilesToOpen?: IPathData[];\n\tfilesToCreate?: IPathData[];\n\tfilesToDiff?: IPathData[];\n\tfilesToWait?: IPathsToWaitForData;\n\ttermProgram?: string;\n}\n\nexport interface IAddFoldersRequest {\n\tfoldersToAdd: UriComponents[];\n}\n\nexport interface IWindowConfiguration extends ParsedArgs {\n\tmachineId: string;\n\twindowId: number;\n\tlogLevel: LogLevel;\n\n\tmainPid: number;\n\n\tappRoot: string;\n\texecPath: string;\n\tisInitialStartup?: boolean;\n\n\tuserEnv: IProcessEnvironment;\n\tnodeCachedDataDir?: string;\n\n\tbackupPath?: string;\n\n\tworkspace?: IWorkspaceIdentifier;\n\tfolderUri?: ISingleFolderWorkspaceIdentifier;\n\n\tremoteAuthority?: string;\n\n\tzoomLevel?: number;\n\tfullscreen?: boolean;\n\tmaximized?: boolean;\n\thighContrast?: boolean;\n\tframeless?: boolean;\n\taccessibilitySupport?: boolean;\n\tpartsSplashPath?: string;\n\n\tperfStartTime?: number;\n\tperfAppReady?: number;\n\tperfWindowLoadTime?: number;\n\tperfEntries: ExportData;\n\n\tfilesToOpen?: IPath[];\n\tfilesToCreate?: IPath[];\n\tfilesToDiff?: IPath[];\n\tfilesToWait?: IPathsToWaitFor;\n\ttermProgram?: string;\n}\n\nexport interface IRunActionInWindowRequest {\n\tid: string;\n\tfrom: 'menu' | 'touchbar' | 'mouse';\n\targs?: any[];\n}\n\nexport interface IRunKeybindingInWindowRequest {\n\tuserSettingsLabel: string;\n}\n\nexport class ActiveWindowManager implements IDisposable {\n\n\tprivate disposables: IDisposable[] = [];\n\tprivate firstActiveWindowIdPromise: Promise<any> | null;\n\tprivate _activeWindowId: number | undefined;\n\n\tconstructor(@IWindowsService windowsService: IWindowsService) {\n\t\tconst onActiveWindowChange = Event.latch(Event.any(windowsService.onWindowOpen, windowsService.onWindowFocus));\n\t\tonActiveWindowChange(this.setActiveWindow, this, this.disposables);\n\n\t\tthis.firstActiveWindowIdPromise = windowsService.getActiveWindowId()\n\t\t\t.then(id => (typeof this._activeWindowId === 'undefined') && this.setActiveWindow(id));\n\t}\n\n\tprivate setActiveWindow(windowId: number | undefined) {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\tthis.firstActiveWindowIdPromise = null;\n\t\t}\n\n\t\tthis._activeWindowId = windowId;\n\t}\n\n\tgetActiveClientId(): Promise<string> {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\treturn this.firstActiveWindowIdPromise;\n\t\t}\n\n\t\treturn Promise.resolve(`window:${this._activeWindowId}`);\n\t}\n\n\tdispose() {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { isWindows, isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { extname } from 'vs/base/common/path';\nimport { dirname, resolvePath, isEqualAuthority, isEqualOrParent, relativePath } from 'vs/base/common/resources';\nimport * as jsonEdit from 'vs/base/common/jsonEdit';\nimport * as json from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { toSlashes } from 'vs/base/common/extpath';\n\nexport const IWorkspacesMainService = createDecorator<IWorkspacesMainService>('workspacesMainService');\nexport const IWorkspacesService = createDecorator<IWorkspacesService>('workspacesService');\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\n/**\n * A single folder workspace identifier is just the path to the folder.\n */\nexport type ISingleFolderWorkspaceIdentifier = URI;\n\nexport interface IWorkspaceIdentifier {\n\tid: string;\n\tconfigPath: URI;\n}\n\nexport function reviveWorkspaceIdentifier(workspace: { id: string, configPath: UriComponents; }): IWorkspaceIdentifier {\n\treturn { id: workspace.id, configPath: URI.revive(workspace.configPath) };\n}\n\nexport function isStoredWorkspaceFolder(thing: any): thing is IStoredWorkspaceFolder {\n\treturn isRawFileWorkspaceFolder(thing) || isRawUriWorkspaceFolder(thing);\n}\n\nexport function isRawFileWorkspaceFolder(thing: any): thing is IRawFileWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.path === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport function isRawUriWorkspaceFolder(thing: any): thing is IRawUriWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.uri === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport interface IRawFileWorkspaceFolder {\n\tpath: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\turi: string;\n\tname?: string;\n}\n\nexport type IStoredWorkspaceFolder = IRawFileWorkspaceFolder | IRawUriWorkspaceFolder;\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier {\n\tfolders: IWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IStoredWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n}\n\nexport interface IWorkspaceSavedEvent {\n\tworkspace: IWorkspaceIdentifier;\n\toldConfigPath: string;\n}\n\nexport interface IWorkspaceFolderCreationData {\n\turi: URI;\n\tname?: string;\n}\n\nexport interface IUntitledWorkspaceInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IWorkspacesMainService extends IWorkspacesService {\n\t_serviceBrand: any;\n\n\tonUntitledWorkspaceDeleted: Event<IWorkspaceIdentifier>;\n\n\tcreateUntitledWorkspaceSync(folders?: IWorkspaceFolderCreationData[]): IWorkspaceIdentifier;\n\n\tresolveLocalWorkspaceSync(path: URI): IResolvedWorkspace | null;\n\n\tisUntitledWorkspace(workspace: IWorkspaceIdentifier): boolean;\n\n\tdeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void;\n\n\tgetUntitledWorkspacesSync(): IUntitledWorkspaceInfo[];\n}\n\nexport interface IWorkspacesService {\n\t_serviceBrand: any;\n\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n}\n\nexport function isSingleFolderWorkspaceIdentifier(obj: any): obj is ISingleFolderWorkspaceIdentifier {\n\treturn obj instanceof URI;\n}\n\nexport function isWorkspaceIdentifier(obj: any): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier;\n\n\treturn workspaceIdentifier && typeof workspaceIdentifier.id === 'string' && workspaceIdentifier.configPath instanceof URI;\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tconfigPath: workspace.configuration,\n\t\t\tid: workspace.id\n\t\t};\n\t}\n\tif (workspace.folders.length === 1) {\n\t\treturn workspace.folders[0].uri;\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport type IMultiFolderWorkspaceInitializationPayload = IWorkspaceIdentifier;\nexport interface ISingleFolderWorkspaceInitializationPayload { id: string; folder: ISingleFolderWorkspaceIdentifier; }\nexport interface IEmptyWorkspaceInitializationPayload { id: string; }\n\nexport type IWorkspaceInitializationPayload = IMultiFolderWorkspaceInitializationPayload | ISingleFolderWorkspaceInitializationPayload | IEmptyWorkspaceInitializationPayload;\n\nexport function isSingleFolderWorkspaceInitializationPayload(obj: any): obj is ISingleFolderWorkspaceInitializationPayload {\n\treturn isSingleFolderWorkspaceIdentifier((obj.folder as ISingleFolderWorkspaceIdentifier));\n}\n\nconst WORKSPACE_SUFFIX = '.' + WORKSPACE_EXTENSION;\n\nexport function hasWorkspaceFileExtension(path: string) {\n\treturn extname(path) === WORKSPACE_SUFFIX;\n}\n\nconst SLASH = '/';\n\n/**\n * Given a folder URI and the workspace config folder, computes the IStoredWorkspaceFolder using\n* a relative or absolute path or a uri.\n * Undefined is returned if the folderURI and the targetConfigFolderURI don't have the same schema or authority\n *\n * @param folderURI a workspace folder\n * @param folderName a workspace name\n * @param targetConfigFolderURI the folder where the workspace is living in\n * @param useSlashForPath if set, use forward slashes for file paths on windows\n */\nexport function getStoredWorkspaceFolder(folderURI: URI, folderName: string | undefined, targetConfigFolderURI: URI, useSlashForPath = !isWindows): IStoredWorkspaceFolder {\n\n\tif (folderURI.scheme !== targetConfigFolderURI.scheme || !isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t}\n\n\tlet folderPath: string | undefined;\n\tif (isEqualOrParent(folderURI, targetConfigFolderURI)) {\n\t\t// use relative path\n\t\tfolderPath = relativePath(targetConfigFolderURI, folderURI) || '.'; // always uses forward slashes\n\t\tif (isWindows && folderURI.scheme === Schemas.file && !useSlashForPath) {\n\t\t\t// Windows gets special treatment:\n\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\tfolderPath = folderPath.replace(/\\//g, '\\\\');\n\t\t}\n\t} else {\n\t\t// use absolute path\n\t\tif (folderURI.scheme === Schemas.file) {\n\t\t\tfolderPath = folderURI.fsPath;\n\t\t\tif (isWindows) {\n\t\t\t\t// Windows gets special treatment:\n\t\t\t\t// - normalize all paths to get nice casing of drive letters\n\t\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\t\tfolderPath = normalizeDriveLetter(folderPath);\n\t\t\t\tif (useSlashForPath) {\n\t\t\t\t\tfolderPath = toSlashes(folderPath);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfolderPath = folderURI.path;\n\t\t}\n\t}\n\treturn { name: folderName, path: folderPath };\n}\n\n/**\n * Rewrites the content of a workspace file to be saved at a new location.\n * Throws an exception if file is not a valid workspace file\n */\nexport function rewriteWorkspaceFileForNewLocation(rawWorkspaceContents: string, configPathURI: URI, targetConfigPathURI: URI) {\n\tlet storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n\n\tconst sourceConfigFolder = dirname(configPathURI);\n\tconst targetConfigFolder = dirname(targetConfigPathURI);\n\n\tconst rewrittenFolders: IStoredWorkspaceFolder[] = [];\n\tconst slashForPath = useSlashForPath(storedWorkspace.folders);\n\n\t// Rewrite absolute paths to relative paths if the target workspace folder\n\t// is a parent of the location of the workspace file itself. Otherwise keep\n\t// using absolute paths.\n\tfor (const folder of storedWorkspace.folders) {\n\t\tlet folderURI = isRawFileWorkspaceFolder(folder) ? resolvePath(sourceConfigFolder, folder.path) : URI.parse(folder.uri);\n\t\trewrittenFolders.push(getStoredWorkspaceFolder(folderURI, folder.name, targetConfigFolder, slashForPath));\n\t}\n\n\t// Preserve as much of the existing workspace as possible by using jsonEdit\n\t// and only changing the folders portion.\n\tlet newRawWorkspaceContents = rawWorkspaceContents;\n\tconst edits = jsonEdit.setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' });\n\tedits.forEach(edit => {\n\t\tnewRawWorkspaceContents = jsonEdit.applyEdit(rawWorkspaceContents, edit);\n\t});\n\treturn newRawWorkspaceContents;\n}\n\nfunction doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t// Parse workspace file\n\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t// Filter out folders which do not have a path or uri set\n\tif (Array.isArray(storedWorkspace.folders)) {\n\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t}\n\n\t// Validate\n\tif (!Array.isArray(storedWorkspace.folders)) {\n\t\tthrow new Error(`${path} looks like an invalid workspace file.`);\n\t}\n\n\treturn storedWorkspace;\n}\n\nexport function useSlashForPath(storedFolders: IStoredWorkspaceFolder[]): boolean {\n\tif (isWindows) {\n\t\tfor (const folder of storedFolders) {\n\t\t\tif (isRawFileWorkspaceFolder(folder) && folder.path.indexOf(SLASH) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { isAbsolute } from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceIdentifier, IStoredWorkspaceFolder, isRawFileWorkspaceFolder, isRawUriWorkspaceFolder, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { coalesce, distinct } from 'vs/base/common/arrays';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport interface IWorkspaceContextService {\n\t_serviceBrand: any;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\tonDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\tonDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\tonDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdentifier: ISingleFolderWorkspaceIdentifier | IWorkspaceIdentifier): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport namespace IWorkspace {\n\texport function isIWorkspace(thing: any): thing is IWorkspace {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& typeof (thing as IWorkspace).id === 'string'\n\t\t\t&& Array.isArray((thing as IWorkspace).folders);\n\t}\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport interface IWorkspaceFolderData {\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport namespace IWorkspaceFolder {\n\texport function isIWorkspaceFolder(thing: any): thing is IWorkspaceFolder {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& URI.isUri((thing as IWorkspaceFolder).uri)\n\t\t\t&& typeof (thing as IWorkspaceFolder).name === 'string'\n\t\t\t&& typeof (thing as IWorkspaceFolder).toResource === 'function';\n\t}\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<WorkspaceFolder> = TernarySearchTree.forPaths<WorkspaceFolder>();\n\tprivate _folders: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[] = [],\n\t\tprivate _configuration: URI | null = null\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource.toString()) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forPaths<WorkspaceFolder>();\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri.toString(), folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, configuration: this.configuration };\n\t}\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\tname: string;\n\tindex: number;\n\n\tconstructor(data: IWorkspaceFolderData,\n\t\treadonly raw?: IStoredWorkspaceFolder) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn resources.joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], relativeTo?: URI): WorkspaceFolder[] {\n\tlet workspaceFolders = parseWorkspaceFolders(configuredFolders, relativeTo);\n\treturn ensureUnique(coalesce(workspaceFolders))\n\t\t.map(({ uri, raw, name }, index) => new WorkspaceFolder({ uri, name: name || resources.basenameOrAuthority(uri), index }, raw));\n}\n\nfunction parseWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], relativeTo: URI | undefined): Array<WorkspaceFolder | undefined> {\n\treturn configuredFolders.map((configuredFolder, index) => {\n\t\tlet uri: URI | null = null;\n\t\tif (isRawFileWorkspaceFolder(configuredFolder)) {\n\t\t\turi = toUri(configuredFolder.path, relativeTo);\n\t\t} else if (isRawUriWorkspaceFolder(configuredFolder)) {\n\t\t\ttry {\n\t\t\t\turi = URI.parse(configuredFolder.uri);\n\t\t\t\t// this makes sure all workspace folder are absolute\n\t\t\t\tif (uri.path[0] !== '/') {\n\t\t\t\t\turi = uri.with({ path: '/' + uri.path });\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(e);\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\tif (!uri) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new WorkspaceFolder({ uri, name: configuredFolder.name! /*is ensured in caller*/, index }, configuredFolder);\n\t});\n}\n\nfunction toUri(path: string, relativeTo: URI | undefined): URI | null {\n\tif (path) {\n\t\tif (isAbsolute(path)) {\n\t\t\treturn URI.file(path);\n\t\t}\n\t\tif (relativeTo) {\n\t\t\treturn resources.joinPath(relativeTo, path);\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction ensureUnique(folders: WorkspaceFolder[]): WorkspaceFolder[] {\n\treturn distinct(folders, folder => isLinux ? folder.uri.toString() : folder.uri.toString().toLowerCase());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { generateRandomPipeName } from 'vs/base/parts/ipc/node/ipc.net';\nimport * as http from 'http';\nimport * as fs from 'fs';\nimport { ExtHostCommands } from 'vs/workbench/api/node/extHostCommands';\nimport { IURIToOpen, URIType } from 'vs/platform/windows/common/windows';\nimport { URI } from 'vs/base/common/uri';\nimport { hasWorkspaceFileExtension } from 'vs/platform/workspaces/common/workspaces';\n\n\nexport class CLIServer {\n\n\tprivate _server: http.Server;\n\tprivate _ipcHandlePath: string | undefined;\n\n\tconstructor(private _commands: ExtHostCommands) {\n\t\tthis._server = http.createServer((req, res) => this.onRequest(req, res));\n\t\tthis.setup().catch(err => {\n\t\t\tconsole.error(err);\n\t\t\treturn '';\n\t\t});\n\t}\n\n\tpublic get ipcHandlePath() {\n\t\treturn this._ipcHandlePath;\n\t}\n\n\tprivate async setup(): Promise<string> {\n\t\tthis._ipcHandlePath = generateRandomPipeName();\n\n\t\ttry {\n\t\t\tthis._server.listen(this.ipcHandlePath);\n\t\t\tthis._server.on('error', err => console.error(err));\n\t\t} catch (err) {\n\t\t\tconsole.error('Could not start open from terminal server.');\n\t\t}\n\n\t\treturn this._ipcHandlePath;\n\t}\n\tprivate collectURIToOpen(strs: string[], typeHint: URIType, result: IURIToOpen[]): void {\n\t\tif (Array.isArray(strs)) {\n\t\t\tfor (const s of strs) {\n\t\t\t\ttry {\n\t\t\t\t\tresult.push({ uri: URI.parse(s), typeHint });\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onRequest(req: http.IncomingMessage, res: http.ServerResponse): void {\n\t\tconst chunks: string[] = [];\n\t\treq.setEncoding('utf8');\n\t\treq.on('data', (d: string) => chunks.push(d));\n\t\treq.on('end', () => {\n\t\t\tconst data = JSON.parse(chunks.join(''));\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'open':\n\t\t\t\t\tthis.open(data, res);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tres.writeHead(404);\n\t\t\t\t\tres.write(`Unkown message type: ${data.type}`, err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tres.end();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate open(data: any, res: http.ServerResponse) {\n\t\tlet { fileURIs, folderURIs, forceNewWindow, diffMode, addMode, forceReuseWindow } = data;\n\t\tif (folderURIs && folderURIs.length || fileURIs && fileURIs.length) {\n\t\t\tconst urisToOpen: IURIToOpen[] = [];\n\t\t\tthis.collectURIToOpen(folderURIs, 'folder', urisToOpen);\n\t\t\tthis.collectURIToOpen(fileURIs, 'file', urisToOpen);\n\t\t\tif (!forceReuseWindow && urisToOpen.some(o => o.typeHint === 'folder' || (o.typeHint === 'file' && hasWorkspaceFileExtension(o.uri.path)))) {\n\t\t\t\tforceNewWindow = true;\n\t\t\t}\n\t\t\tthis._commands.executeCommand('_files.windowOpen', urisToOpen, { forceNewWindow, diffMode, addMode, forceReuseWindow });\n\t\t}\n\t\tres.writeHead(200);\n\t\tres.end();\n\t}\n\n\tdispose(): void {\n\t\tthis._server.close();\n\n\t\tif (this._ipcHandlePath && process.platform !== 'win32' && fs.existsSync(this._ipcHandlePath)) {\n\t\t\tfs.unlinkSync(this._ipcHandlePath);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport Severity from 'vs/base/common/severity';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/node/extensionDescriptionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nconst NO_OP_VOID_PROMISE = Promise.resolve<void>(undefined);\n\nexport interface IExtensionMemento {\n\tget<T>(key: string, defaultValue: T): T;\n\tupdate(key: string, value: any): Promise<boolean>;\n}\n\nexport interface IExtensionContext {\n\tsubscriptions: IDisposable[];\n\tworkspaceState: IExtensionMemento;\n\tglobalState: IExtensionMemento;\n\textensionPath: string;\n\tstoragePath: string;\n\tglobalStoragePath: string;\n\tasAbsolutePath(relativePath: string): string;\n\treadonly logPath: string;\n}\n\n/**\n * Represents the source code (module) of an extension.\n */\nexport interface IExtensionModule {\n\tactivate?(ctx: IExtensionContext): Promise<IExtensionAPI>;\n\tdeactivate?(): void;\n}\n\n/**\n * Represents the API of an extension (return value of `activate`).\n */\nexport interface IExtensionAPI {\n\t// _extensionAPIBrand: any;\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionActivationTimes\" : {\n\t\t\"startup\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\"codeLoadingTime\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\"activateCallTime\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\"activateResolvedTime\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t}\n*/\nexport class ExtensionActivationTimes {\n\n\tpublic static readonly NONE = new ExtensionActivationTimes(false, -1, -1, -1);\n\n\tpublic readonly startup: boolean;\n\tpublic readonly codeLoadingTime: number;\n\tpublic readonly activateCallTime: number;\n\tpublic readonly activateResolvedTime: number;\n\n\tconstructor(startup: boolean, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number) {\n\t\tthis.startup = startup;\n\t\tthis.codeLoadingTime = codeLoadingTime;\n\t\tthis.activateCallTime = activateCallTime;\n\t\tthis.activateResolvedTime = activateResolvedTime;\n\t}\n}\n\nexport class ExtensionActivationTimesBuilder {\n\n\tprivate readonly _startup: boolean;\n\tprivate _codeLoadingStart: number;\n\tprivate _codeLoadingStop: number;\n\tprivate _activateCallStart: number;\n\tprivate _activateCallStop: number;\n\tprivate _activateResolveStart: number;\n\tprivate _activateResolveStop: number;\n\n\tconstructor(startup: boolean) {\n\t\tthis._startup = startup;\n\t\tthis._codeLoadingStart = -1;\n\t\tthis._codeLoadingStop = -1;\n\t\tthis._activateCallStart = -1;\n\t\tthis._activateCallStop = -1;\n\t\tthis._activateResolveStart = -1;\n\t\tthis._activateResolveStop = -1;\n\t}\n\n\tprivate _delta(start: number, stop: number): number {\n\t\tif (start === -1 || stop === -1) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn stop - start;\n\t}\n\n\tpublic build(): ExtensionActivationTimes {\n\t\treturn new ExtensionActivationTimes(\n\t\t\tthis._startup,\n\t\t\tthis._delta(this._codeLoadingStart, this._codeLoadingStop),\n\t\t\tthis._delta(this._activateCallStart, this._activateCallStop),\n\t\t\tthis._delta(this._activateResolveStart, this._activateResolveStop)\n\t\t);\n\t}\n\n\tpublic codeLoadingStart(): void {\n\t\tthis._codeLoadingStart = Date.now();\n\t}\n\n\tpublic codeLoadingStop(): void {\n\t\tthis._codeLoadingStop = Date.now();\n\t}\n\n\tpublic activateCallStart(): void {\n\t\tthis._activateCallStart = Date.now();\n\t}\n\n\tpublic activateCallStop(): void {\n\t\tthis._activateCallStop = Date.now();\n\t}\n\n\tpublic activateResolveStart(): void {\n\t\tthis._activateResolveStart = Date.now();\n\t}\n\n\tpublic activateResolveStop(): void {\n\t\tthis._activateResolveStop = Date.now();\n\t}\n}\n\nexport class ActivatedExtension {\n\n\tpublic readonly activationFailed: boolean;\n\tpublic readonly activationFailedError: Error | null;\n\tpublic readonly activationTimes: ExtensionActivationTimes;\n\tpublic readonly module: IExtensionModule;\n\tpublic readonly exports: IExtensionAPI | undefined;\n\tpublic readonly subscriptions: IDisposable[];\n\n\tconstructor(\n\t\tactivationFailed: boolean,\n\t\tactivationFailedError: Error | null,\n\t\tactivationTimes: ExtensionActivationTimes,\n\t\tmodule: IExtensionModule,\n\t\texports: IExtensionAPI | undefined,\n\t\tsubscriptions: IDisposable[]\n\t) {\n\t\tthis.activationFailed = activationFailed;\n\t\tthis.activationFailedError = activationFailedError;\n\t\tthis.activationTimes = activationTimes;\n\t\tthis.module = module;\n\t\tthis.exports = exports;\n\t\tthis.subscriptions = subscriptions;\n\t}\n}\n\nexport class EmptyExtension extends ActivatedExtension {\n\tconstructor(activationTimes: ExtensionActivationTimes) {\n\t\tsuper(false, null, activationTimes, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport class HostExtension extends ActivatedExtension {\n\tconstructor() {\n\t\tsuper(false, null, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport class FailedExtension extends ActivatedExtension {\n\tconstructor(activationError: Error) {\n\t\tsuper(true, activationError, ExtensionActivationTimes.NONE, { activate: undefined, deactivate: undefined }, undefined, []);\n\t}\n}\n\nexport interface IExtensionsActivatorHost {\n\tshowMessage(severity: Severity, message: string): void;\n\n\tactualActivateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<ActivatedExtension>;\n}\n\nexport class ExtensionActivatedByEvent {\n\tconstructor(\n\t\tpublic readonly startup: boolean,\n\t\tpublic readonly activationEvent: string\n\t) { }\n}\n\nexport class ExtensionActivatedByAPI {\n\tconstructor(\n\t\tpublic readonly startup: boolean\n\t) { }\n}\n\nexport type ExtensionActivationReason = ExtensionActivatedByEvent | ExtensionActivatedByAPI;\n\nexport class ExtensionsActivator {\n\n\tprivate readonly _registry: ExtensionDescriptionRegistry;\n\tprivate readonly _resolvedExtensionsSet: Set<string>;\n\tprivate readonly _hostExtensionsMap: Map<string, ExtensionIdentifier>;\n\tprivate readonly _host: IExtensionsActivatorHost;\n\tprivate readonly _activatingExtensions: Map<string, Promise<void>>;\n\tprivate readonly _activatedExtensions: Map<string, ActivatedExtension>;\n\t/**\n\t * A map of already activated events to speed things up if the same activation event is triggered multiple times.\n\t */\n\tprivate readonly _alreadyActivatedEvents: { [activationEvent: string]: boolean; };\n\n\tconstructor(registry: ExtensionDescriptionRegistry, resolvedExtensions: ExtensionIdentifier[], hostExtensions: ExtensionIdentifier[], host: IExtensionsActivatorHost) {\n\t\tthis._registry = registry;\n\t\tthis._resolvedExtensionsSet = new Set<string>();\n\t\tresolvedExtensions.forEach((extensionId) => this._resolvedExtensionsSet.add(ExtensionIdentifier.toKey(extensionId)));\n\t\tthis._hostExtensionsMap = new Map<string, ExtensionIdentifier>();\n\t\thostExtensions.forEach((extensionId) => this._hostExtensionsMap.set(ExtensionIdentifier.toKey(extensionId), extensionId));\n\t\tthis._host = host;\n\t\tthis._activatingExtensions = new Map<string, Promise<void>>();\n\t\tthis._activatedExtensions = new Map<string, ActivatedExtension>();\n\t\tthis._alreadyActivatedEvents = Object.create(null);\n\t}\n\n\tpublic isActivated(extensionId: ExtensionIdentifier): boolean {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\treturn this._activatedExtensions.has(extensionKey);\n\t}\n\n\tpublic getActivatedExtension(extensionId: ExtensionIdentifier): ActivatedExtension {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\tconst activatedExtension = this._activatedExtensions.get(extensionKey);\n\t\tif (!activatedExtension) {\n\t\t\tthrow new Error('Extension `' + extensionId.value + '` is not known or not activated');\n\t\t}\n\t\treturn activatedExtension;\n\t}\n\n\tpublic activateByEvent(activationEvent: string, reason: ExtensionActivationReason): Promise<void> {\n\t\tif (this._alreadyActivatedEvents[activationEvent]) {\n\t\t\treturn NO_OP_VOID_PROMISE;\n\t\t}\n\t\tconst activateExtensions = this._registry.getExtensionDescriptionsForActivationEvent(activationEvent);\n\t\treturn this._activateExtensions(activateExtensions.map(e => e.identifier), reason).then(() => {\n\t\t\tthis._alreadyActivatedEvents[activationEvent] = true;\n\t\t});\n\t}\n\n\tpublic activateById(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\tconst desc = this._registry.getExtensionDescription(extensionId);\n\t\tif (!desc) {\n\t\t\tthrow new Error('Extension `' + extensionId + '` is not known');\n\t\t}\n\n\t\treturn this._activateExtensions([desc.identifier], reason);\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentExtension`.\n\t * semantics: `redExtensions` must wait for `greenExtensions`.\n\t */\n\tprivate _handleActivateRequest(currentExtensionId: ExtensionIdentifier, greenExtensions: { [id: string]: ExtensionIdentifier; }, redExtensions: ExtensionIdentifier[]): void {\n\t\tif (this._hostExtensionsMap.has(ExtensionIdentifier.toKey(currentExtensionId))) {\n\t\t\tgreenExtensions[ExtensionIdentifier.toKey(currentExtensionId)] = currentExtensionId;\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentExtension = this._registry.getExtensionDescription(currentExtensionId)!;\n\t\tconst depIds = (typeof currentExtension.extensionDependencies === 'undefined' ? [] : currentExtension.extensionDependencies);\n\t\tlet currentExtensionGetsGreenLight = true;\n\n\t\tfor (let j = 0, lenJ = depIds.length; j < lenJ; j++) {\n\t\t\tconst depId = depIds[j];\n\n\t\t\tif (this._resolvedExtensionsSet.has(ExtensionIdentifier.toKey(depId))) {\n\t\t\t\t// This dependency is already resolved\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst dep = this._activatedExtensions.get(ExtensionIdentifier.toKey(depId));\n\t\t\tif (dep && !dep.activationFailed) {\n\t\t\t\t// the dependency is already activated OK\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (dep && dep.activationFailed) {\n\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\tthis._host.showMessage(Severity.Error, nls.localize('failedDep1', \"Cannot activate extension '{0}' because it depends on extension '{1}', which failed to activate.\", currentExtension.displayName || currentExtension.identifier.value, depId));\n\t\t\t\tconst error = new Error(`Dependency ${depId} failed to activate`);\n\t\t\t\t(<any>error).detail = dep.activationFailedError;\n\t\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentExtension.identifier), new FailedExtension(error));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._hostExtensionsMap.has(ExtensionIdentifier.toKey(depId))) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[ExtensionIdentifier.toKey(depId)] = this._hostExtensionsMap.get(ExtensionIdentifier.toKey(depId))!;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst depDesc = this._registry.getExtensionDescription(depId);\n\t\t\tif (depDesc) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[ExtensionIdentifier.toKey(depId)] = depDesc.identifier;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Error condition 1: unknown dependency\n\t\t\tthis._host.showMessage(Severity.Error, nls.localize('unknownDep', \"Cannot activate extension '{0}' because it depends on extension '{1}', which is not installed or disabled. Please install or enable '{1}' and reload the window.\", currentExtension.displayName || currentExtension.identifier.value, depId));\n\t\t\tconst error = new Error(`Unknown dependency '${depId}'`);\n\t\t\tthis._activatedExtensions.set(ExtensionIdentifier.toKey(currentExtension.identifier), new FailedExtension(error));\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentExtensionGetsGreenLight) {\n\t\t\tgreenExtensions[ExtensionIdentifier.toKey(currentExtension.identifier)] = currentExtensionId;\n\t\t} else {\n\t\t\tredExtensions.push(currentExtensionId);\n\t\t}\n\t}\n\n\tprivate _activateExtensions(extensionIds: ExtensionIdentifier[], reason: ExtensionActivationReason): Promise<void> {\n\t\t// console.log('_activateExtensions: ', extensionIds.map(p => p.value));\n\t\tif (extensionIds.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\textensionIds = extensionIds.filter((p) => !this._activatedExtensions.has(ExtensionIdentifier.toKey(p)));\n\t\tif (extensionIds.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst greenMap: { [id: string]: ExtensionIdentifier; } = Object.create(null),\n\t\t\tred: ExtensionIdentifier[] = [];\n\n\t\tfor (let i = 0, len = extensionIds.length; i < len; i++) {\n\t\t\tthis._handleActivateRequest(extensionIds[i], greenMap, red);\n\t\t}\n\n\t\t// Make sure no red is also green\n\t\tfor (let i = 0, len = red.length; i < len; i++) {\n\t\t\tconst redExtensionKey = ExtensionIdentifier.toKey(red[i]);\n\t\t\tif (greenMap[redExtensionKey]) {\n\t\t\t\tdelete greenMap[redExtensionKey];\n\t\t\t}\n\t\t}\n\n\t\tconst green = Object.keys(greenMap).map(id => greenMap[id]);\n\n\t\t// console.log('greenExtensions: ', green.map(p => p.id));\n\t\t// console.log('redExtensions: ', red.map(p => p.id));\n\n\t\tif (red.length === 0) {\n\t\t\t// Finally reached only leafs!\n\t\t\treturn Promise.all(green.map((p) => this._activateExtension(p, reason))).then(_ => undefined);\n\t\t}\n\n\t\treturn this._activateExtensions(green, reason).then(_ => {\n\t\t\treturn this._activateExtensions(red, reason);\n\t\t});\n\t}\n\n\tprivate _activateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\tconst extensionKey = ExtensionIdentifier.toKey(extensionId);\n\n\t\tif (this._activatedExtensions.has(extensionKey)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst currentlyActivatingExtension = this._activatingExtensions.get(extensionKey);\n\t\tif (currentlyActivatingExtension) {\n\t\t\treturn currentlyActivatingExtension;\n\t\t}\n\n\t\tconst newlyActivatingExtension = this._host.actualActivateExtension(extensionId, reason).then(undefined, (err) => {\n\t\t\tthis._host.showMessage(Severity.Error, nls.localize('activationError', \"Activating extension '{0}' failed: {1}.\", extensionId.value, err.message));\n\t\t\tconsole.error('Activating extension `' + extensionId.value + '` failed: ', err.message);\n\t\t\tconsole.log('Here is the error stack: ', err.stack);\n\t\t\t// Treat the extension as being empty\n\t\t\treturn new FailedExtension(err);\n\t\t}).then((x: ActivatedExtension) => {\n\t\t\tthis._activatedExtensions.set(extensionKey, x);\n\t\t\tthis._activatingExtensions.delete(extensionKey);\n\t\t});\n\n\t\tthis._activatingExtensions.set(extensionKey, newlyActivatingExtension);\n\t\treturn newlyActivatingExtension;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtHostHeapServiceShape } from './extHost.protocol';\n\nexport class ExtHostHeapService implements ExtHostHeapServiceShape {\n\n\tprivate static _idPool = 0;\n\n\tprivate _data = new Map<number, any>();\n\n\tkeep(obj: any): number {\n\t\tconst id = ExtHostHeapService._idPool++;\n\t\tthis._data.set(id, obj);\n\t\treturn id;\n\t}\n\n\tdelete(id: number): boolean {\n\t\treturn this._data.delete(id);\n\t}\n\n\tget<T>(id: number): T {\n\t\treturn this._data.get(id);\n\t}\n\n\t$onGarbageCollection(ids: number[]): void {\n\t\tfor (const id of ids) {\n\t\t\tthis.delete(id);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as crypto from 'crypto';\nimport { coalesce, equals } from 'vs/base/common/arrays';\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { isMarkdownString } from 'vs/base/common/htmlContent';\nimport { values } from 'vs/base/common/map';\nimport { startsWith } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as vscode from 'vscode';\n\n\nfunction es5ClassCompat(target: Function): any {\n\t///@ts-ignore\n\tfunction _() { return Reflect.construct(target, arguments, this.constructor); }\n\tObject.defineProperty(_, 'name', Object.getOwnPropertyDescriptor(target, 'name')!);\n\t///@ts-ignore\n\tObject.setPrototypeOf(_, target);\n\t///@ts-ignore\n\tObject.setPrototypeOf(_.prototype, target.prototype);\n\treturn _;\n}\n\n@es5ClassCompat\nexport class Disposable {\n\n\tstatic from(...inDisposables: { dispose(): any }[]): Disposable {\n\t\tlet disposables: ReadonlyArray<{ dispose(): any }> | undefined = inDisposables;\n\t\treturn new Disposable(function () {\n\t\t\tif (disposables) {\n\t\t\t\tfor (const disposable of disposables) {\n\t\t\t\t\tif (disposable && typeof disposable.dispose === 'function') {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdisposables = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _callOnDispose?: () => any;\n\n\tconstructor(callOnDispose: () => any) {\n\t\tthis._callOnDispose = callOnDispose;\n\t}\n\n\tdispose(): any {\n\t\tif (typeof this._callOnDispose === 'function') {\n\t\t\tthis._callOnDispose();\n\t\t\tthis._callOnDispose = undefined;\n\t\t}\n\t}\n}\n\n@es5ClassCompat\nexport class Position {\n\n\tstatic Min(...positions: Position[]): Position {\n\t\tif (positions.length === 0) {\n\t\t\tthrow new TypeError();\n\t\t}\n\t\tlet result = positions[0];\n\t\tfor (let i = 1; i < positions.length; i++) {\n\t\t\tconst p = positions[i];\n\t\t\tif (p.isBefore(result!)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic Max(...positions: Position[]): Position {\n\t\tif (positions.length === 0) {\n\t\t\tthrow new TypeError();\n\t\t}\n\t\tlet result = positions[0];\n\t\tfor (let i = 1; i < positions.length; i++) {\n\t\t\tconst p = positions[i];\n\t\t\tif (p.isAfter(result!)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic isPosition(other: any): other is Position {\n\t\tif (!other) {\n\t\t\treturn false;\n\t\t}\n\t\tif (other instanceof Position) {\n\t\t\treturn true;\n\t\t}\n\t\tlet { line, character } = <Position>other;\n\t\tif (typeof line === 'number' && typeof character === 'number') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _line: number;\n\tprivate _character: number;\n\n\tget line(): number {\n\t\treturn this._line;\n\t}\n\n\tget character(): number {\n\t\treturn this._character;\n\t}\n\n\tconstructor(line: number, character: number) {\n\t\tif (line < 0) {\n\t\t\tthrow illegalArgument('line must be non-negative');\n\t\t}\n\t\tif (character < 0) {\n\t\t\tthrow illegalArgument('character must be non-negative');\n\t\t}\n\t\tthis._line = line;\n\t\tthis._character = character;\n\t}\n\n\tisBefore(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character < other._character;\n\t}\n\n\tisBeforeOrEqual(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character <= other._character;\n\t}\n\n\tisAfter(other: Position): boolean {\n\t\treturn !this.isBeforeOrEqual(other);\n\t}\n\n\tisAfterOrEqual(other: Position): boolean {\n\t\treturn !this.isBefore(other);\n\t}\n\n\tisEqual(other: Position): boolean {\n\t\treturn this._line === other._line && this._character === other._character;\n\t}\n\n\tcompareTo(other: Position): number {\n\t\tif (this._line < other._line) {\n\t\t\treturn -1;\n\t\t} else if (this._line > other.line) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t// equal line\n\t\t\tif (this._character < other._character) {\n\t\t\t\treturn -1;\n\t\t\t} else if (this._character > other._character) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t// equal line and character\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\ttranslate(change: { lineDelta?: number; characterDelta?: number; }): Position;\n\ttranslate(lineDelta?: number, characterDelta?: number): Position;\n\ttranslate(lineDeltaOrChange: number | undefined | { lineDelta?: number; characterDelta?: number; }, characterDelta: number = 0): Position {\n\n\t\tif (lineDeltaOrChange === null || characterDelta === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet lineDelta: number;\n\t\tif (typeof lineDeltaOrChange === 'undefined') {\n\t\t\tlineDelta = 0;\n\t\t} else if (typeof lineDeltaOrChange === 'number') {\n\t\t\tlineDelta = lineDeltaOrChange;\n\t\t} else {\n\t\t\tlineDelta = typeof lineDeltaOrChange.lineDelta === 'number' ? lineDeltaOrChange.lineDelta : 0;\n\t\t\tcharacterDelta = typeof lineDeltaOrChange.characterDelta === 'number' ? lineDeltaOrChange.characterDelta : 0;\n\t\t}\n\n\t\tif (lineDelta === 0 && characterDelta === 0) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(this.line + lineDelta, this.character + characterDelta);\n\t}\n\n\twith(change: { line?: number; character?: number; }): Position;\n\twith(line?: number, character?: number): Position;\n\twith(lineOrChange: number | undefined | { line?: number; character?: number; }, character: number = this.character): Position {\n\n\t\tif (lineOrChange === null || character === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet line: number;\n\t\tif (typeof lineOrChange === 'undefined') {\n\t\t\tline = this.line;\n\n\t\t} else if (typeof lineOrChange === 'number') {\n\t\t\tline = lineOrChange;\n\n\t\t} else {\n\t\t\tline = typeof lineOrChange.line === 'number' ? lineOrChange.line : this.line;\n\t\t\tcharacter = typeof lineOrChange.character === 'number' ? lineOrChange.character : this.character;\n\t\t}\n\n\t\tif (line === this.line && character === this.character) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(line, character);\n\t}\n\n\ttoJSON(): any {\n\t\treturn { line: this.line, character: this.character };\n\t}\n}\n\n@es5ClassCompat\nexport class Range {\n\n\tstatic isRange(thing: any): thing is vscode.Range {\n\t\tif (thing instanceof Range) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Position.isPosition((<Range>thing).start)\n\t\t\t&& Position.isPosition((<Range>thing.end));\n\t}\n\n\tprotected _start: Position;\n\tprotected _end: Position;\n\n\tget start(): Position {\n\t\treturn this._start;\n\t}\n\n\tget end(): Position {\n\t\treturn this._end;\n\t}\n\n\tconstructor(start: Position, end: Position);\n\tconstructor(startLine: number, startColumn: number, endLine: number, endColumn: number);\n\tconstructor(startLineOrStart: number | Position, startColumnOrEnd: number | Position, endLine?: number, endColumn?: number) {\n\t\tlet start: Position | undefined;\n\t\tlet end: Position | undefined;\n\n\t\tif (typeof startLineOrStart === 'number' && typeof startColumnOrEnd === 'number' && typeof endLine === 'number' && typeof endColumn === 'number') {\n\t\t\tstart = new Position(startLineOrStart, startColumnOrEnd);\n\t\t\tend = new Position(endLine, endColumn);\n\t\t} else if (startLineOrStart instanceof Position && startColumnOrEnd instanceof Position) {\n\t\t\tstart = startLineOrStart;\n\t\t\tend = startColumnOrEnd;\n\t\t}\n\n\t\tif (!start || !end) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tif (start.isBefore(end)) {\n\t\t\tthis._start = start;\n\t\t\tthis._end = end;\n\t\t} else {\n\t\t\tthis._start = end;\n\t\t\tthis._end = start;\n\t\t}\n\t}\n\n\tcontains(positionOrRange: Position | Range): boolean {\n\t\tif (positionOrRange instanceof Range) {\n\t\t\treturn this.contains(positionOrRange._start)\n\t\t\t\t&& this.contains(positionOrRange._end);\n\n\t\t} else if (positionOrRange instanceof Position) {\n\t\t\tif (positionOrRange.isBefore(this._start)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._end.isBefore(positionOrRange)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisEqual(other: Range): boolean {\n\t\treturn this._start.isEqual(other._start) && this._end.isEqual(other._end);\n\t}\n\n\tintersection(other: Range): Range | undefined {\n\t\tconst start = Position.Max(other.start, this._start);\n\t\tconst end = Position.Min(other.end, this._end);\n\t\tif (start.isAfter(end)) {\n\t\t\t// this happens when there is no overlap:\n\t\t\t// |-----|\n\t\t\t//          |----|\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\tunion(other: Range): Range {\n\t\tif (this.contains(other)) {\n\t\t\treturn this;\n\t\t} else if (other.contains(this)) {\n\t\t\treturn other;\n\t\t}\n\t\tconst start = Position.Min(other.start, this._start);\n\t\tconst end = Position.Max(other.end, this.end);\n\t\treturn new Range(start, end);\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this._start.isEqual(this._end);\n\t}\n\n\tget isSingleLine(): boolean {\n\t\treturn this._start.line === this._end.line;\n\t}\n\n\twith(change: { start?: Position, end?: Position }): Range;\n\twith(start?: Position, end?: Position): Range;\n\twith(startOrChange: Position | undefined | { start?: Position, end?: Position }, end: Position = this.end): Range {\n\n\t\tif (startOrChange === null || end === null) {\n\t\t\tthrow illegalArgument();\n\t\t}\n\n\t\tlet start: Position;\n\t\tif (!startOrChange) {\n\t\t\tstart = this.start;\n\n\t\t} else if (Position.isPosition(startOrChange)) {\n\t\t\tstart = startOrChange;\n\n\t\t} else {\n\t\t\tstart = startOrChange.start || this.start;\n\t\t\tend = startOrChange.end || this.end;\n\t\t}\n\n\t\tif (start.isEqual(this._start) && end.isEqual(this.end)) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\ttoJSON(): any {\n\t\treturn [this.start, this.end];\n\t}\n}\n\n@es5ClassCompat\nexport class Selection extends Range {\n\n\tstatic isSelection(thing: any): thing is Selection {\n\t\tif (thing instanceof Selection) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange(thing)\n\t\t\t&& Position.isPosition((<Selection>thing).anchor)\n\t\t\t&& Position.isPosition((<Selection>thing).active)\n\t\t\t&& typeof (<Selection>thing).isReversed === 'boolean';\n\t}\n\n\tprivate _anchor: Position;\n\n\tpublic get anchor(): Position {\n\t\treturn this._anchor;\n\t}\n\n\tprivate _active: Position;\n\n\tpublic get active(): Position {\n\t\treturn this._active;\n\t}\n\n\tconstructor(anchor: Position, active: Position);\n\tconstructor(anchorLine: number, anchorColumn: number, activeLine: number, activeColumn: number);\n\tconstructor(anchorLineOrAnchor: number | Position, anchorColumnOrActive: number | Position, activeLine?: number, activeColumn?: number) {\n\t\tlet anchor: Position | undefined;\n\t\tlet active: Position | undefined;\n\n\t\tif (typeof anchorLineOrAnchor === 'number' && typeof anchorColumnOrActive === 'number' && typeof activeLine === 'number' && typeof activeColumn === 'number') {\n\t\t\tanchor = new Position(anchorLineOrAnchor, anchorColumnOrActive);\n\t\t\tactive = new Position(activeLine, activeColumn);\n\t\t} else if (anchorLineOrAnchor instanceof Position && anchorColumnOrActive instanceof Position) {\n\t\t\tanchor = anchorLineOrAnchor;\n\t\t\tactive = anchorColumnOrActive;\n\t\t}\n\n\t\tif (!anchor || !active) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tsuper(anchor, active);\n\n\t\tthis._anchor = anchor;\n\t\tthis._active = active;\n\t}\n\n\tget isReversed(): boolean {\n\t\treturn this._anchor === this._end;\n\t}\n\n\ttoJSON() {\n\t\treturn {\n\t\t\tstart: this.start,\n\t\t\tend: this.end,\n\t\t\tactive: this.active,\n\t\t\tanchor: this.anchor\n\t\t};\n\t}\n}\n\nexport class ResolvedAuthority {\n\treadonly host: string;\n\treadonly port: number;\n\tdebugListenPort?: number;\n\tdebugConnectPort?: number;\n\n\tconstructor(host: string, port: number) {\n\t\tif (typeof host !== 'string' || host.length === 0) {\n\t\t\tthrow illegalArgument('host');\n\t\t}\n\t\tif (typeof port !== 'number' || port === 0 || Math.round(port) !== port) {\n\t\t\tthrow illegalArgument('port');\n\t\t}\n\t\tthis.host = host;\n\t\tthis.port = Math.round(port);\n\t}\n}\n\nexport enum EndOfLine {\n\tLF = 1,\n\tCRLF = 2\n}\n\n@es5ClassCompat\nexport class TextEdit {\n\n\tstatic isTextEdit(thing: any): thing is TextEdit {\n\t\tif (thing instanceof TextEdit) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange((<TextEdit>thing))\n\t\t\t&& typeof (<TextEdit>thing).newText === 'string';\n\t}\n\n\tstatic replace(range: Range, newText: string): TextEdit {\n\t\treturn new TextEdit(range, newText);\n\t}\n\n\tstatic insert(position: Position, newText: string): TextEdit {\n\t\treturn TextEdit.replace(new Range(position, position), newText);\n\t}\n\n\tstatic delete(range: Range): TextEdit {\n\t\treturn TextEdit.replace(range, '');\n\t}\n\n\tstatic setEndOfLine(eol: EndOfLine): TextEdit {\n\t\tconst ret = new TextEdit(new Range(new Position(0, 0), new Position(0, 0)), '');\n\t\tret.newEol = eol;\n\t\treturn ret;\n\t}\n\n\tprotected _range: Range;\n\tprotected _newText: string | null;\n\tprotected _newEol: EndOfLine;\n\n\tget range(): Range {\n\t\treturn this._range;\n\t}\n\n\tset range(value: Range) {\n\t\tif (value && !Range.isRange(value)) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis._range = value;\n\t}\n\n\tget newText(): string {\n\t\treturn this._newText || '';\n\t}\n\n\tset newText(value: string) {\n\t\tif (value && typeof value !== 'string') {\n\t\t\tthrow illegalArgument('newText');\n\t\t}\n\t\tthis._newText = value;\n\t}\n\n\tget newEol(): EndOfLine {\n\t\treturn this._newEol;\n\t}\n\n\tset newEol(value: EndOfLine) {\n\t\tif (value && typeof value !== 'number') {\n\t\t\tthrow illegalArgument('newEol');\n\t\t}\n\t\tthis._newEol = value;\n\t}\n\n\tconstructor(range: Range, newText: string | null) {\n\t\tthis.range = range;\n\t\tthis._newText = newText;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\trange: this.range,\n\t\t\tnewText: this.newText,\n\t\t\tnewEol: this._newEol\n\t\t};\n\t}\n}\n\n\nexport interface IFileOperationOptions {\n\toverwrite?: boolean;\n\tignoreIfExists?: boolean;\n\tignoreIfNotExists?: boolean;\n\trecursive?: boolean;\n}\n\nexport interface IFileOperation {\n\t_type: 1;\n\tfrom?: URI;\n\tto?: URI;\n\toptions?: IFileOperationOptions;\n}\n\nexport interface IFileTextEdit {\n\t_type: 2;\n\turi: URI;\n\tedit: TextEdit;\n}\n\n@es5ClassCompat\nexport class WorkspaceEdit implements vscode.WorkspaceEdit {\n\n\tprivate _edits = new Array<IFileOperation | IFileTextEdit>();\n\n\trenameFile(from: vscode.Uri, to: vscode.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean }): void {\n\t\tthis._edits.push({ _type: 1, from, to, options });\n\t}\n\n\tcreateFile(uri: vscode.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean }): void {\n\t\tthis._edits.push({ _type: 1, from: undefined, to: uri, options });\n\t}\n\n\tdeleteFile(uri: vscode.Uri, options?: { recursive?: boolean, ignoreIfNotExists?: boolean }): void {\n\t\tthis._edits.push({ _type: 1, from: uri, to: undefined, options });\n\t}\n\n\treplace(uri: URI, range: Range, newText: string): void {\n\t\tthis._edits.push({ _type: 2, uri, edit: new TextEdit(range, newText) });\n\t}\n\n\tinsert(resource: URI, position: Position, newText: string): void {\n\t\tthis.replace(resource, new Range(position, position), newText);\n\t}\n\n\tdelete(resource: URI, range: Range): void {\n\t\tthis.replace(resource, range, '');\n\t}\n\n\thas(uri: URI): boolean {\n\t\tfor (const edit of this._edits) {\n\t\t\tif (edit._type === 2 && edit.uri.toString() === uri.toString()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tset(uri: URI, edits: TextEdit[]): void {\n\t\tif (!edits) {\n\t\t\t// remove all text edits for `uri`\n\t\t\tfor (let i = 0; i < this._edits.length; i++) {\n\t\t\t\tconst element = this._edits[i];\n\t\t\t\tif (element._type === 2 && element.uri.toString() === uri.toString()) {\n\t\t\t\t\tthis._edits[i] = undefined!; // will be coalesced down below\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._edits = coalesce(this._edits);\n\t\t} else {\n\t\t\t// append edit to the end\n\t\t\tfor (const edit of edits) {\n\t\t\t\tif (edit) {\n\t\t\t\t\tthis._edits.push({ _type: 2, uri, edit });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget(uri: URI): TextEdit[] {\n\t\tconst res: TextEdit[] = [];\n\t\tfor (let candidate of this._edits) {\n\t\t\tif (candidate._type === 2 && candidate.uri.toString() === uri.toString()) {\n\t\t\t\tres.push(candidate.edit);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tentries(): [URI, TextEdit[]][] {\n\t\tconst textEdits = new Map<string, [URI, TextEdit[]]>();\n\t\tfor (let candidate of this._edits) {\n\t\t\tif (candidate._type === 2) {\n\t\t\t\tlet textEdit = textEdits.get(candidate.uri.toString());\n\t\t\t\tif (!textEdit) {\n\t\t\t\t\ttextEdit = [candidate.uri, []];\n\t\t\t\t\ttextEdits.set(candidate.uri.toString(), textEdit);\n\t\t\t\t}\n\t\t\t\ttextEdit[1].push(candidate.edit);\n\t\t\t}\n\t\t}\n\t\treturn values(textEdits);\n\t}\n\n\t_allEntries(): ([URI, TextEdit[]] | [URI?, URI?, IFileOperationOptions?])[] {\n\t\tconst res: ([URI, TextEdit[]] | [URI?, URI?, IFileOperationOptions?])[] = [];\n\t\tfor (let edit of this._edits) {\n\t\t\tif (edit._type === 1) {\n\t\t\t\tres.push([edit.from, edit.to, edit.options]);\n\t\t\t} else {\n\t\t\t\tres.push([edit.uri, [edit.edit]]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tget size(): number {\n\t\treturn this.entries().length;\n\t}\n\n\ttoJSON(): any {\n\t\treturn this.entries();\n\t}\n}\n\n@es5ClassCompat\nexport class SnippetString {\n\n\tstatic isSnippetString(thing: any): thing is SnippetString {\n\t\tif (thing instanceof SnippetString) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<SnippetString>thing).value === 'string';\n\t}\n\n\tprivate static _escape(value: string): string {\n\t\treturn value.replace(/\\$|}|\\\\/g, '\\\\$&');\n\t}\n\n\tprivate _tabstop: number = 1;\n\n\tvalue: string;\n\n\tconstructor(value?: string) {\n\t\tthis.value = value || '';\n\t}\n\n\tappendText(string: string): SnippetString {\n\t\tthis.value += SnippetString._escape(string);\n\t\treturn this;\n\t}\n\n\tappendTabstop(number: number = this._tabstop++): SnippetString {\n\t\tthis.value += '$';\n\t\tthis.value += number;\n\t\treturn this;\n\t}\n\n\tappendPlaceholder(value: string | ((snippet: SnippetString) => any), number: number = this._tabstop++): SnippetString {\n\n\t\tif (typeof value === 'function') {\n\t\t\tconst nested = new SnippetString();\n\t\t\tnested._tabstop = this._tabstop;\n\t\t\tvalue(nested);\n\t\t\tthis._tabstop = nested._tabstop;\n\t\t\tvalue = nested.value;\n\t\t} else {\n\t\t\tvalue = SnippetString._escape(value);\n\t\t}\n\n\t\tthis.value += '${';\n\t\tthis.value += number;\n\t\tthis.value += ':';\n\t\tthis.value += value;\n\t\tthis.value += '}';\n\n\t\treturn this;\n\t}\n\n\tappendVariable(name: string, defaultValue?: string | ((snippet: SnippetString) => any)): SnippetString {\n\n\t\tif (typeof defaultValue === 'function') {\n\t\t\tconst nested = new SnippetString();\n\t\t\tnested._tabstop = this._tabstop;\n\t\t\tdefaultValue(nested);\n\t\t\tthis._tabstop = nested._tabstop;\n\t\t\tdefaultValue = nested.value;\n\n\t\t} else if (typeof defaultValue === 'string') {\n\t\t\tdefaultValue = defaultValue.replace(/\\$|}/g, '\\\\$&');\n\t\t}\n\n\t\tthis.value += '${';\n\t\tthis.value += name;\n\t\tif (defaultValue) {\n\t\t\tthis.value += ':';\n\t\t\tthis.value += defaultValue;\n\t\t}\n\t\tthis.value += '}';\n\n\n\t\treturn this;\n\t}\n}\n\nexport enum DiagnosticTag {\n\tUnnecessary = 1,\n}\n\nexport enum DiagnosticSeverity {\n\tHint = 3,\n\tInformation = 2,\n\tWarning = 1,\n\tError = 0\n}\n\n@es5ClassCompat\nexport class Location {\n\n\tstatic isLocation(thing: any): thing is Location {\n\t\tif (thing instanceof Location) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Range.isRange((<Location>thing).range)\n\t\t\t&& URI.isUri((<Location>thing).uri);\n\t}\n\n\turi: URI;\n\trange: Range;\n\n\tconstructor(uri: URI, rangeOrPosition: Range | Position) {\n\t\tthis.uri = uri;\n\n\t\tif (!rangeOrPosition) {\n\t\t\t//that's OK\n\t\t} else if (rangeOrPosition instanceof Range) {\n\t\t\tthis.range = rangeOrPosition;\n\t\t} else if (rangeOrPosition instanceof Position) {\n\t\t\tthis.range = new Range(rangeOrPosition, rangeOrPosition);\n\t\t} else {\n\t\t\tthrow new Error('Illegal argument');\n\t\t}\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\turi: this.uri,\n\t\t\trange: this.range\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class DiagnosticRelatedInformation {\n\n\tstatic is(thing: any): thing is DiagnosticRelatedInformation {\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<DiagnosticRelatedInformation>thing).message === 'string'\n\t\t\t&& (<DiagnosticRelatedInformation>thing).location\n\t\t\t&& Range.isRange((<DiagnosticRelatedInformation>thing).location.range)\n\t\t\t&& URI.isUri((<DiagnosticRelatedInformation>thing).location.uri);\n\t}\n\n\tlocation: Location;\n\tmessage: string;\n\n\tconstructor(location: Location, message: string) {\n\t\tthis.location = location;\n\t\tthis.message = message;\n\t}\n\n\tstatic isEqual(a: DiagnosticRelatedInformation, b: DiagnosticRelatedInformation): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.message === b.message\n\t\t\t&& a.location.range.isEqual(b.location.range)\n\t\t\t&& a.location.uri.toString() === b.location.uri.toString();\n\t}\n}\n\n@es5ClassCompat\nexport class Diagnostic {\n\n\trange: Range;\n\tmessage: string;\n\tsource: string;\n\tcode: string | number;\n\tseverity: DiagnosticSeverity;\n\trelatedInformation: DiagnosticRelatedInformation[];\n\ttags?: DiagnosticTag[];\n\n\tconstructor(range: Range, message: string, severity: DiagnosticSeverity = DiagnosticSeverity.Error) {\n\t\tthis.range = range;\n\t\tthis.message = message;\n\t\tthis.severity = severity;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tseverity: DiagnosticSeverity[this.severity],\n\t\t\tmessage: this.message,\n\t\t\trange: this.range,\n\t\t\tsource: this.source,\n\t\t\tcode: this.code,\n\t\t};\n\t}\n\n\tstatic isEqual(a: Diagnostic | undefined, b: Diagnostic | undefined): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.message === b.message\n\t\t\t&& a.severity === b.severity\n\t\t\t&& a.code === b.code\n\t\t\t&& a.severity === b.severity\n\t\t\t&& a.source === b.source\n\t\t\t&& a.range.isEqual(b.range)\n\t\t\t&& equals(a.tags, b.tags)\n\t\t\t&& equals(a.relatedInformation, b.relatedInformation, DiagnosticRelatedInformation.isEqual);\n\t}\n}\n\n@es5ClassCompat\nexport class Hover {\n\n\tpublic contents: vscode.MarkdownString[] | vscode.MarkedString[];\n\tpublic range: Range | undefined;\n\n\tconstructor(\n\t\tcontents: vscode.MarkdownString | vscode.MarkedString | vscode.MarkdownString[] | vscode.MarkedString[],\n\t\trange?: Range\n\t) {\n\t\tif (!contents) {\n\t\t\tthrow new Error('Illegal argument, contents must be defined');\n\t\t}\n\t\tif (Array.isArray(contents)) {\n\t\t\tthis.contents = <vscode.MarkdownString[] | vscode.MarkedString[]>contents;\n\t\t} else if (isMarkdownString(contents)) {\n\t\t\tthis.contents = [contents];\n\t\t} else {\n\t\t\tthis.contents = [contents];\n\t\t}\n\t\tthis.range = range;\n\t}\n}\n\nexport enum DocumentHighlightKind {\n\tText = 0,\n\tRead = 1,\n\tWrite = 2\n}\n\n@es5ClassCompat\nexport class DocumentHighlight {\n\n\trange: Range;\n\tkind: DocumentHighlightKind;\n\n\tconstructor(range: Range, kind: DocumentHighlightKind = DocumentHighlightKind.Text) {\n\t\tthis.range = range;\n\t\tthis.kind = kind;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\trange: this.range,\n\t\t\tkind: DocumentHighlightKind[this.kind]\n\t\t};\n\t}\n}\n\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\n@es5ClassCompat\nexport class SymbolInformation {\n\n\tstatic validate(candidate: SymbolInformation): void {\n\t\tif (!candidate.name) {\n\t\t\tthrow new Error('name must not be falsy');\n\t\t}\n\t}\n\n\tname: string;\n\tlocation: Location;\n\tkind: SymbolKind;\n\tcontainerName: string | undefined;\n\n\tconstructor(name: string, kind: SymbolKind, containerName: string | undefined, location: Location);\n\tconstructor(name: string, kind: SymbolKind, range: Range, uri?: URI, containerName?: string);\n\tconstructor(name: string, kind: SymbolKind, rangeOrContainer: string | undefined | Range, locationOrUri?: Location | URI, containerName?: string) {\n\t\tthis.name = name;\n\t\tthis.kind = kind;\n\t\tthis.containerName = containerName;\n\n\t\tif (typeof rangeOrContainer === 'string') {\n\t\t\tthis.containerName = rangeOrContainer;\n\t\t}\n\n\t\tif (locationOrUri instanceof Location) {\n\t\t\tthis.location = locationOrUri;\n\t\t} else if (rangeOrContainer instanceof Range) {\n\t\t\tthis.location = new Location(locationOrUri!, rangeOrContainer);\n\t\t}\n\n\t\tSymbolInformation.validate(this);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tkind: SymbolKind[this.kind],\n\t\t\tlocation: this.location,\n\t\t\tcontainerName: this.containerName\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentSymbol {\n\n\tstatic validate(candidate: DocumentSymbol): void {\n\t\tif (!candidate.name) {\n\t\t\tthrow new Error('name must not be falsy');\n\t\t}\n\t\tif (!candidate.range.contains(candidate.selectionRange)) {\n\t\t\tthrow new Error('selectionRange must be contained in fullRange');\n\t\t}\n\t\tif (candidate.children) {\n\t\t\tcandidate.children.forEach(DocumentSymbol.validate);\n\t\t}\n\t}\n\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\trange: Range;\n\tselectionRange: Range;\n\tchildren: DocumentSymbol[];\n\n\tconstructor(name: string, detail: string, kind: SymbolKind, range: Range, selectionRange: Range) {\n\t\tthis.name = name;\n\t\tthis.detail = detail;\n\t\tthis.kind = kind;\n\t\tthis.range = range;\n\t\tthis.selectionRange = selectionRange;\n\t\tthis.children = [];\n\n\t\tDocumentSymbol.validate(this);\n\t}\n}\n\n\nexport enum CodeActionTrigger {\n\tAutomatic = 1,\n\tManual = 2,\n}\n\n@es5ClassCompat\nexport class CodeAction {\n\ttitle: string;\n\n\tcommand?: vscode.Command;\n\n\tedit?: WorkspaceEdit;\n\n\tdiagnostics?: Diagnostic[];\n\n\tkind?: CodeActionKind;\n\n\tconstructor(title: string, kind?: CodeActionKind) {\n\t\tthis.title = title;\n\t\tthis.kind = kind;\n\t}\n}\n\n\n@es5ClassCompat\nexport class CodeActionKind {\n\tprivate static readonly sep = '.';\n\n\tpublic static Empty;\n\tpublic static QuickFix;\n\tpublic static Refactor;\n\tpublic static RefactorExtract;\n\tpublic static RefactorInline;\n\tpublic static RefactorRewrite;\n\tpublic static Source;\n\tpublic static SourceOrganizeImports;\n\tpublic static SourceFixAll;\n\n\tconstructor(\n\t\tpublic readonly value: string\n\t) { }\n\n\tpublic append(parts: string): CodeActionKind {\n\t\treturn new CodeActionKind(this.value ? this.value + CodeActionKind.sep + parts : parts);\n\t}\n\n\tpublic intersects(other: CodeActionKind): boolean {\n\t\treturn this.contains(other) || other.contains(this);\n\t}\n\n\tpublic contains(other: CodeActionKind): boolean {\n\t\treturn this.value === other.value || startsWith(other.value, this.value + CodeActionKind.sep);\n\t}\n}\nCodeActionKind.Empty = new CodeActionKind('');\nCodeActionKind.QuickFix = CodeActionKind.Empty.append('quickfix');\nCodeActionKind.Refactor = CodeActionKind.Empty.append('refactor');\nCodeActionKind.RefactorExtract = CodeActionKind.Refactor.append('extract');\nCodeActionKind.RefactorInline = CodeActionKind.Refactor.append('inline');\nCodeActionKind.RefactorRewrite = CodeActionKind.Refactor.append('rewrite');\nCodeActionKind.Source = CodeActionKind.Empty.append('source');\nCodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\nCodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\n\n@es5ClassCompat\nexport class SelectionRange {\n\n\trange: Range;\n\tparent?: SelectionRange;\n\n\tconstructor(range: Range, parent?: SelectionRange) {\n\t\tthis.range = range;\n\t\tthis.parent = parent;\n\n\t\tif (parent && !parent.range.contains(this.range)) {\n\t\t\tthrow new Error('Invalid argument: parent must contain this range');\n\t\t}\n\t}\n}\n\n\n@es5ClassCompat\nexport class CodeLens {\n\n\trange: Range;\n\n\tcommand: vscode.Command | undefined;\n\n\tconstructor(range: Range, command?: vscode.Command) {\n\t\tthis.range = range;\n\t\tthis.command = command;\n\t}\n\n\tget isResolved(): boolean {\n\t\treturn !!this.command;\n\t}\n}\n\n\nexport class CodeInset {\n\n\trange: Range;\n\theight?: number;\n\n\tconstructor(range: Range, height?: number) {\n\t\tthis.range = range;\n\t\tthis.height = height;\n\t}\n}\n\n\n@es5ClassCompat\nexport class MarkdownString {\n\n\tvalue: string;\n\tisTrusted?: boolean;\n\n\tconstructor(value?: string) {\n\t\tthis.value = value || '';\n\t}\n\n\tappendText(value: string): MarkdownString {\n\t\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\t\tthis.value += value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis.value += value;\n\t\treturn this;\n\t}\n\n\tappendCodeblock(code: string, language: string = ''): MarkdownString {\n\t\tthis.value += '\\n```';\n\t\tthis.value += language;\n\t\tthis.value += '\\n';\n\t\tthis.value += code;\n\t\tthis.value += '\\n```\\n';\n\t\treturn this;\n\t}\n}\n\n@es5ClassCompat\nexport class ParameterInformation {\n\n\tlabel: string | [number, number];\n\tdocumentation?: string | MarkdownString;\n\n\tconstructor(label: string | [number, number], documentation?: string | MarkdownString) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t}\n}\n\n@es5ClassCompat\nexport class SignatureInformation {\n\n\tlabel: string;\n\tdocumentation?: string | MarkdownString;\n\tparameters: ParameterInformation[];\n\n\tconstructor(label: string, documentation?: string | MarkdownString) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t\tthis.parameters = [];\n\t}\n}\n\n@es5ClassCompat\nexport class SignatureHelp {\n\n\tsignatures: SignatureInformation[];\n\tactiveSignature: number;\n\tactiveParameter: number;\n\n\tconstructor() {\n\t\tthis.signatures = [];\n\t}\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\nexport interface CompletionContext {\n\treadonly triggerKind: CompletionTriggerKind;\n\treadonly triggerCharacter?: string;\n}\n\nexport enum CompletionItemKind {\n\tText = 0,\n\tMethod = 1,\n\tFunction = 2,\n\tConstructor = 3,\n\tField = 4,\n\tVariable = 5,\n\tClass = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tUnit = 10,\n\tValue = 11,\n\tEnum = 12,\n\tKeyword = 13,\n\tSnippet = 14,\n\tColor = 15,\n\tFile = 16,\n\tReference = 17,\n\tFolder = 18,\n\tEnumMember = 19,\n\tConstant = 20,\n\tStruct = 21,\n\tEvent = 22,\n\tOperator = 23,\n\tTypeParameter = 24\n}\n\n@es5ClassCompat\nexport class CompletionItem implements vscode.CompletionItem {\n\n\tlabel: string;\n\tkind: CompletionItemKind | undefined;\n\tdetail?: string;\n\tdocumentation?: string | MarkdownString;\n\tsortText?: string;\n\tfilterText?: string;\n\tpreselect?: boolean;\n\tinsertText: string | SnippetString;\n\tkeepWhitespace?: boolean;\n\trange: Range;\n\tcommitCharacters?: string[];\n\ttextEdit: TextEdit;\n\tadditionalTextEdits: TextEdit[];\n\tcommand: vscode.Command;\n\n\tconstructor(label: string, kind?: CompletionItemKind) {\n\t\tthis.label = label;\n\t\tthis.kind = kind;\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\tlabel: this.label,\n\t\t\tkind: this.kind && CompletionItemKind[this.kind],\n\t\t\tdetail: this.detail,\n\t\t\tdocumentation: this.documentation,\n\t\t\tsortText: this.sortText,\n\t\t\tfilterText: this.filterText,\n\t\t\tpreselect: this.preselect,\n\t\t\tinsertText: this.insertText,\n\t\t\ttextEdit: this.textEdit\n\t\t};\n\t}\n}\n\n@es5ClassCompat\nexport class CompletionList {\n\n\tisIncomplete?: boolean;\n\n\titems: vscode.CompletionItem[];\n\n\tconstructor(items: vscode.CompletionItem[] = [], isIncomplete: boolean = false) {\n\t\tthis.items = items;\n\t\tthis.isIncomplete = isIncomplete;\n\t}\n}\n\nexport enum ViewColumn {\n\tActive = -1,\n\tBeside = -2,\n\tOne = 1,\n\tTwo = 2,\n\tThree = 3,\n\tFour = 4,\n\tFive = 5,\n\tSix = 6,\n\tSeven = 7,\n\tEight = 8,\n\tNine = 9\n}\n\nexport enum StatusBarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport enum TextEditorLineNumbersStyle {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2\n}\n\nexport enum TextDocumentSaveReason {\n\tManual = 1,\n\tAfterDelay = 2,\n\tFocusOut = 3\n}\n\nexport enum TextEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport enum TextEditorSelectionChangeKind {\n\tKeyboard = 1,\n\tMouse = 2,\n\tCommand = 3\n}\n\n/**\n * These values match very carefully the values of `TrackedRangeStickiness`\n */\nexport enum DecorationRangeBehavior {\n\t/**\n\t * TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tOpenOpen = 0,\n\t/**\n\t * TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t */\n\tClosedClosed = 1,\n\t/**\n\t * TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n\t */\n\tOpenClosed = 2,\n\t/**\n\t * TrackedRangeStickiness.GrowsOnlyWhenTypingAfter\n\t */\n\tClosedOpen = 3\n}\n\nexport namespace TextEditorSelectionChangeKind {\n\texport function fromValue(s: string | undefined) {\n\t\tswitch (s) {\n\t\t\tcase 'keyboard': return TextEditorSelectionChangeKind.Keyboard;\n\t\t\tcase 'mouse': return TextEditorSelectionChangeKind.Mouse;\n\t\t\tcase 'api': return TextEditorSelectionChangeKind.Command;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n@es5ClassCompat\nexport class DocumentLink {\n\n\trange: Range;\n\n\ttarget?: URI;\n\n\tconstructor(range: Range, target: URI | undefined) {\n\t\tif (target && !(target instanceof URI)) {\n\t\t\tthrow illegalArgument('target');\n\t\t}\n\t\tif (!Range.isRange(range) || range.isEmpty) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis.range = range;\n\t\tthis.target = target;\n\t}\n}\n\n@es5ClassCompat\nexport class Color {\n\treadonly red: number;\n\treadonly green: number;\n\treadonly blue: number;\n\treadonly alpha: number;\n\n\tconstructor(red: number, green: number, blue: number, alpha: number) {\n\t\tthis.red = red;\n\t\tthis.green = green;\n\t\tthis.blue = blue;\n\t\tthis.alpha = alpha;\n\t}\n}\n\nexport type IColorFormat = string | { opaque: string, transparent: string };\n\n@es5ClassCompat\nexport class ColorInformation {\n\trange: Range;\n\n\tcolor: Color;\n\n\tconstructor(range: Range, color: Color) {\n\t\tif (color && !(color instanceof Color)) {\n\t\t\tthrow illegalArgument('color');\n\t\t}\n\t\tif (!Range.isRange(range) || range.isEmpty) {\n\t\t\tthrow illegalArgument('range');\n\t\t}\n\t\tthis.range = range;\n\t\tthis.color = color;\n\t}\n}\n\n@es5ClassCompat\nexport class ColorPresentation {\n\tlabel: string;\n\ttextEdit?: TextEdit;\n\tadditionalTextEdits?: TextEdit[];\n\n\tconstructor(label: string) {\n\t\tif (!label || typeof label !== 'string') {\n\t\t\tthrow illegalArgument('label');\n\t\t}\n\t\tthis.label = label;\n\t}\n}\n\nexport enum ColorFormat {\n\tRGB = 0,\n\tHEX = 1,\n\tHSL = 2\n}\n\nexport enum SourceControlInputBoxValidationType {\n\tError = 0,\n\tWarning = 1,\n\tInformation = 2\n}\n\nexport enum TaskRevealKind {\n\tAlways = 1,\n\n\tSilent = 2,\n\n\tNever = 3\n}\n\nexport enum TaskPanelKind {\n\tShared = 1,\n\n\tDedicated = 2,\n\n\tNew = 3\n}\n\n@es5ClassCompat\nexport class TaskGroup implements vscode.TaskGroup {\n\n\tprivate _id: string;\n\n\tpublic static Clean: TaskGroup = new TaskGroup('clean', 'Clean');\n\n\tpublic static Build: TaskGroup = new TaskGroup('build', 'Build');\n\n\tpublic static Rebuild: TaskGroup = new TaskGroup('rebuild', 'Rebuild');\n\n\tpublic static Test: TaskGroup = new TaskGroup('test', 'Test');\n\n\tpublic static from(value: string) {\n\t\tswitch (value) {\n\t\t\tcase 'clean':\n\t\t\t\treturn TaskGroup.Clean;\n\t\t\tcase 'build':\n\t\t\t\treturn TaskGroup.Build;\n\t\t\tcase 'rebuild':\n\t\t\t\treturn TaskGroup.Rebuild;\n\t\t\tcase 'test':\n\t\t\t\treturn TaskGroup.Test;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(id: string, _label: string) {\n\t\tif (typeof id !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tif (typeof _label !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tthis._id = id;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n}\n\n@es5ClassCompat\nexport class ProcessExecution implements vscode.ProcessExecution {\n\n\tprivate _process: string;\n\tprivate _args: string[];\n\tprivate _options: vscode.ProcessExecutionOptions | undefined;\n\n\tconstructor(process: string, options?: vscode.ProcessExecutionOptions);\n\tconstructor(process: string, args: string[], options?: vscode.ProcessExecutionOptions);\n\tconstructor(process: string, varg1?: string[] | vscode.ProcessExecutionOptions, varg2?: vscode.ProcessExecutionOptions) {\n\t\tif (typeof process !== 'string') {\n\t\t\tthrow illegalArgument('process');\n\t\t}\n\t\tthis._process = process;\n\t\tif (varg1 !== undefined) {\n\t\t\tif (Array.isArray(varg1)) {\n\t\t\t\tthis._args = varg1;\n\t\t\t\tthis._options = varg2;\n\t\t\t} else {\n\t\t\t\tthis._options = varg1;\n\t\t\t}\n\t\t}\n\t\tif (this._args === undefined) {\n\t\t\tthis._args = [];\n\t\t}\n\t}\n\n\n\tget process(): string {\n\t\treturn this._process;\n\t}\n\n\tset process(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('process');\n\t\t}\n\t\tthis._process = value;\n\t}\n\n\tget args(): string[] {\n\t\treturn this._args;\n\t}\n\n\tset args(value: string[]) {\n\t\tif (!Array.isArray(value)) {\n\t\t\tvalue = [];\n\t\t}\n\t\tthis._args = value;\n\t}\n\n\tget options(): vscode.ProcessExecutionOptions | undefined {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.ProcessExecutionOptions | undefined) {\n\t\tthis._options = value;\n\t}\n\n\tpublic computeId(): string {\n\t\tconst hash = crypto.createHash('md5');\n\t\thash.update('process');\n\t\tif (this._process !== undefined) {\n\t\t\thash.update(this._process);\n\t\t}\n\t\tif (this._args && this._args.length > 0) {\n\t\t\tfor (let arg of this._args) {\n\t\t\t\thash.update(arg);\n\t\t\t}\n\t\t}\n\t\treturn hash.digest('hex');\n\t}\n}\n\n@es5ClassCompat\nexport class ShellExecution implements vscode.ShellExecution {\n\n\tprivate _commandLine: string;\n\tprivate _command: string | vscode.ShellQuotedString;\n\tprivate _args: (string | vscode.ShellQuotedString)[];\n\tprivate _options: vscode.ShellExecutionOptions | undefined;\n\n\tconstructor(commandLine: string, options?: vscode.ShellExecutionOptions);\n\tconstructor(command: string | vscode.ShellQuotedString, args: (string | vscode.ShellQuotedString)[], options?: vscode.ShellExecutionOptions);\n\tconstructor(arg0: string | vscode.ShellQuotedString, arg1?: vscode.ShellExecutionOptions | (string | vscode.ShellQuotedString)[], arg2?: vscode.ShellExecutionOptions) {\n\t\tif (Array.isArray(arg1)) {\n\t\t\tif (!arg0) {\n\t\t\t\tthrow illegalArgument('command can\\'t be undefined or null');\n\t\t\t}\n\t\t\tif (typeof arg0 !== 'string' && typeof arg0.value !== 'string') {\n\t\t\t\tthrow illegalArgument('command');\n\t\t\t}\n\t\t\tthis._command = arg0;\n\t\t\tthis._args = arg1 as (string | vscode.ShellQuotedString)[];\n\t\t\tthis._options = arg2;\n\t\t} else {\n\t\t\tif (typeof arg0 !== 'string') {\n\t\t\t\tthrow illegalArgument('commandLine');\n\t\t\t}\n\t\t\tthis._commandLine = arg0;\n\t\t\tthis._options = arg1;\n\t\t}\n\t}\n\n\tget commandLine(): string {\n\t\treturn this._commandLine;\n\t}\n\n\tset commandLine(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('commandLine');\n\t\t}\n\t\tthis._commandLine = value;\n\t}\n\n\tget command(): string | vscode.ShellQuotedString {\n\t\treturn this._command;\n\t}\n\n\tset command(value: string | vscode.ShellQuotedString) {\n\t\tif (typeof value !== 'string' && typeof value.value !== 'string') {\n\t\t\tthrow illegalArgument('command');\n\t\t}\n\t\tthis._command = value;\n\t}\n\n\tget args(): (string | vscode.ShellQuotedString)[] {\n\t\treturn this._args;\n\t}\n\n\tset args(value: (string | vscode.ShellQuotedString)[]) {\n\t\tthis._args = value || [];\n\t}\n\n\tget options(): vscode.ShellExecutionOptions | undefined {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.ShellExecutionOptions | undefined) {\n\t\tthis._options = value;\n\t}\n\n\tpublic computeId(): string {\n\t\tconst hash = crypto.createHash('md5');\n\t\thash.update('shell');\n\t\tif (this._commandLine !== undefined) {\n\t\t\thash.update(this._commandLine);\n\t\t}\n\t\tif (this._command !== undefined) {\n\t\t\thash.update(typeof this._command === 'string' ? this._command : this._command.value);\n\t\t}\n\t\tif (this._args && this._args.length > 0) {\n\t\t\tfor (let arg of this._args) {\n\t\t\t\thash.update(typeof arg === 'string' ? arg : arg.value);\n\t\t\t}\n\t\t}\n\t\treturn hash.digest('hex');\n\t}\n}\n\nexport enum ShellQuoting {\n\tEscape = 1,\n\tStrong = 2,\n\tWeak = 3\n}\n\nexport enum TaskScope {\n\tGlobal = 1,\n\tWorkspace = 2\n}\n\nexport class CustomExecution implements vscode.CustomExecution {\n\tprivate _callback: (args: vscode.TerminalRenderer, cancellationToken: vscode.CancellationToken) => Thenable<number>;\n\n\tconstructor(callback: (args: vscode.TerminalRenderer, cancellationToken: vscode.CancellationToken) => Thenable<number>) {\n\t\tthis._callback = callback;\n\t}\n\n\tpublic computeId(): string {\n\t\tconst hash = crypto.createHash('md5');\n\t\thash.update('customExecution');\n\t\thash.update(generateUuid());\n\t\treturn hash.digest('hex');\n\t}\n\n\tpublic set callback(value: (args: vscode.TerminalRenderer, cancellationToken: vscode.CancellationToken) => Thenable<number>) {\n\t\tthis._callback = value;\n\t}\n\n\tpublic get callback(): (args: vscode.TerminalRenderer, cancellationToken: vscode.CancellationToken) => Thenable<number> {\n\t\treturn this._callback;\n\t}\n}\n\n@es5ClassCompat\nexport class Task implements vscode.Task2 {\n\n\tprivate static ExtensionCallbackType: string = 'customExecution';\n\tprivate static ProcessType: string = 'process';\n\tprivate static ShellType: string = 'shell';\n\tprivate static EmptyType: string = '$empty';\n\n\tprivate __id: string | undefined;\n\n\tprivate _definition: vscode.TaskDefinition;\n\tprivate _scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined;\n\tprivate _name: string;\n\tprivate _execution: ProcessExecution | ShellExecution | CustomExecution | undefined;\n\tprivate _problemMatchers: string[];\n\tprivate _hasDefinedMatchers: boolean;\n\tprivate _isBackground: boolean;\n\tprivate _source: string;\n\tprivate _group: TaskGroup | undefined;\n\tprivate _presentationOptions: vscode.TaskPresentationOptions;\n\tprivate _runOptions: vscode.RunOptions;\n\n\tconstructor(definition: vscode.TaskDefinition, name: string, source: string, execution?: ProcessExecution | ShellExecution | CustomExecution, problemMatchers?: string | string[]);\n\tconstructor(definition: vscode.TaskDefinition, scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder, name: string, source: string, execution?: ProcessExecution | ShellExecution | CustomExecution, problemMatchers?: string | string[]);\n\tconstructor(definition: vscode.TaskDefinition, arg2: string | (vscode.TaskScope.Global | vscode.TaskScope.Workspace) | vscode.WorkspaceFolder, arg3: any, arg4?: any, arg5?: any, arg6?: any) {\n\t\tthis.definition = definition;\n\t\tlet problemMatchers: string | string[];\n\t\tif (typeof arg2 === 'string') {\n\t\t\tthis.name = arg2;\n\t\t\tthis.source = arg3;\n\t\t\tthis.execution = arg4;\n\t\t\tproblemMatchers = arg5;\n\t\t} else if (arg2 === TaskScope.Global || arg2 === TaskScope.Workspace) {\n\t\t\tthis.target = arg2;\n\t\t\tthis.name = arg3;\n\t\t\tthis.source = arg4;\n\t\t\tthis.execution = arg5;\n\t\t\tproblemMatchers = arg6;\n\t\t} else {\n\t\t\tthis.target = arg2;\n\t\t\tthis.name = arg3;\n\t\t\tthis.source = arg4;\n\t\t\tthis.execution = arg5;\n\t\t\tproblemMatchers = arg6;\n\t\t}\n\t\tif (typeof problemMatchers === 'string') {\n\t\t\tthis._problemMatchers = [problemMatchers];\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t} else if (Array.isArray(problemMatchers)) {\n\t\t\tthis._problemMatchers = problemMatchers;\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t} else {\n\t\t\tthis._problemMatchers = [];\n\t\t\tthis._hasDefinedMatchers = false;\n\t\t}\n\t\tthis._isBackground = false;\n\t\tthis._presentationOptions = Object.create(null);\n\t\tthis._runOptions = Object.create(null);\n\t}\n\n\tget _id(): string | undefined {\n\t\treturn this.__id;\n\t}\n\n\tset _id(value: string | undefined) {\n\t\tthis.__id = value;\n\t}\n\n\tprivate clear(): void {\n\t\tif (this.__id === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis.__id = undefined;\n\t\tthis._scope = undefined;\n\t\tthis.computeDefinitionBasedOnExecution();\n\t}\n\n\tprivate computeDefinitionBasedOnExecution(): void {\n\t\tif (this._execution instanceof ProcessExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ProcessType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else if (this._execution instanceof ShellExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ShellType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else if (this._execution instanceof CustomExecution) {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.ExtensionCallbackType,\n\t\t\t\tid: this._execution.computeId()\n\t\t\t};\n\t\t} else {\n\t\t\tthis._definition = {\n\t\t\t\ttype: Task.EmptyType,\n\t\t\t\tid: generateUuid()\n\t\t\t};\n\t\t}\n\t}\n\n\tget definition(): vscode.TaskDefinition {\n\t\treturn this._definition;\n\t}\n\n\tset definition(value: vscode.TaskDefinition) {\n\t\tif (value === undefined || value === null) {\n\t\t\tthrow illegalArgument('Kind can\\'t be undefined or null');\n\t\t}\n\t\tthis.clear();\n\t\tthis._definition = value;\n\t}\n\n\tget scope(): vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined {\n\t\treturn this._scope;\n\t}\n\n\tset target(value: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder) {\n\t\tthis.clear();\n\t\tthis._scope = value;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tset name(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow illegalArgument('name');\n\t\t}\n\t\tthis.clear();\n\t\tthis._name = value;\n\t}\n\n\tget execution(): ProcessExecution | ShellExecution | undefined {\n\t\treturn (this._execution instanceof CustomExecution) ? undefined : this._execution;\n\t}\n\n\tset execution(value: ProcessExecution | ShellExecution | undefined) {\n\t\tthis.execution2 = value;\n\t}\n\n\tget execution2(): ProcessExecution | ShellExecution | CustomExecution | undefined {\n\t\treturn this._execution;\n\t}\n\n\tset execution2(value: ProcessExecution | ShellExecution | CustomExecution | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis.clear();\n\t\tthis._execution = value;\n\t\tconst type = this._definition.type;\n\t\tif (Task.EmptyType === type || Task.ProcessType === type || Task.ShellType === type || Task.ExtensionCallbackType === type) {\n\t\t\tthis.computeDefinitionBasedOnExecution();\n\t\t}\n\t}\n\n\tget problemMatchers(): string[] {\n\t\treturn this._problemMatchers;\n\t}\n\n\tset problemMatchers(value: string[]) {\n\t\tif (!Array.isArray(value)) {\n\t\t\tthis.clear();\n\t\t\tthis._problemMatchers = [];\n\t\t\tthis._hasDefinedMatchers = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.clear();\n\t\t\tthis._problemMatchers = value;\n\t\t\tthis._hasDefinedMatchers = true;\n\t\t}\n\t}\n\n\tget hasDefinedMatchers(): boolean {\n\t\treturn this._hasDefinedMatchers;\n\t}\n\n\tget isBackground(): boolean {\n\t\treturn this._isBackground;\n\t}\n\n\tset isBackground(value: boolean) {\n\t\tif (value !== true && value !== false) {\n\t\t\tvalue = false;\n\t\t}\n\t\tthis.clear();\n\t\tthis._isBackground = value;\n\t}\n\n\tget source(): string {\n\t\treturn this._source;\n\t}\n\n\tset source(value: string) {\n\t\tif (typeof value !== 'string' || value.length === 0) {\n\t\t\tthrow illegalArgument('source must be a string of length > 0');\n\t\t}\n\t\tthis.clear();\n\t\tthis._source = value;\n\t}\n\n\tget group(): TaskGroup | undefined {\n\t\treturn this._group;\n\t}\n\n\tset group(value: TaskGroup | undefined) {\n\t\tif (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\t\tthis.clear();\n\t\tthis._group = value;\n\t}\n\n\tget presentationOptions(): vscode.TaskPresentationOptions {\n\t\treturn this._presentationOptions;\n\t}\n\n\tset presentationOptions(value: vscode.TaskPresentationOptions) {\n\t\tif (value === null || value === undefined) {\n\t\t\tvalue = Object.create(null);\n\t\t}\n\t\tthis.clear();\n\t\tthis._presentationOptions = value;\n\t}\n\n\tget runOptions(): vscode.RunOptions {\n\t\treturn this._runOptions;\n\t}\n\n\tset runOptions(value: vscode.RunOptions) {\n\t\tif (value === null || value === undefined) {\n\t\t\tvalue = Object.create(null);\n\t\t}\n\t\tthis.clear();\n\t\tthis._runOptions = value;\n\t}\n}\n\n\nexport enum ProgressLocation {\n\tSourceControl = 1,\n\tWindow = 10,\n\tNotification = 15\n}\n\n@es5ClassCompat\nexport class TreeItem {\n\n\tlabel?: string | vscode.TreeItemLabel;\n\tresourceUri?: URI;\n\ticonPath?: string | URI | { light: string | URI; dark: string | URI };\n\tcommand?: vscode.Command;\n\tcontextValue?: string;\n\ttooltip?: string;\n\n\tconstructor(label: string | vscode.TreeItemLabel, collapsibleState?: vscode.TreeItemCollapsibleState)\n\tconstructor(resourceUri: URI, collapsibleState?: vscode.TreeItemCollapsibleState)\n\tconstructor(arg1: string | vscode.TreeItemLabel | URI, public collapsibleState: vscode.TreeItemCollapsibleState = TreeItemCollapsibleState.None) {\n\t\tif (arg1 instanceof URI) {\n\t\t\tthis.resourceUri = arg1;\n\t\t} else {\n\t\t\tthis.label = arg1;\n\t\t}\n\t}\n\n}\n\nexport enum TreeItemCollapsibleState {\n\tNone = 0,\n\tCollapsed = 1,\n\tExpanded = 2\n}\n\n@es5ClassCompat\nexport class ThemeIcon {\n\n\tstatic File: ThemeIcon;\n\tstatic Folder: ThemeIcon;\n\n\treadonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n}\nThemeIcon.File = new ThemeIcon('file');\nThemeIcon.Folder = new ThemeIcon('folder');\n\n\n@es5ClassCompat\nexport class ThemeColor {\n\tid: string;\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n}\n\nexport enum ConfigurationTarget {\n\tGlobal = 1,\n\n\tWorkspace = 2,\n\n\tWorkspaceFolder = 3\n}\n\n@es5ClassCompat\nexport class RelativePattern implements IRelativePattern {\n\tbase: string;\n\tbaseFolder?: URI;\n\n\tpattern: string;\n\n\tconstructor(base: vscode.WorkspaceFolder | string, pattern: string) {\n\t\tif (typeof base !== 'string') {\n\t\t\tif (!base || !URI.isUri(base.uri)) {\n\t\t\t\tthrow illegalArgument('base');\n\t\t\t}\n\t\t}\n\n\t\tif (typeof pattern !== 'string') {\n\t\t\tthrow illegalArgument('pattern');\n\t\t}\n\n\t\tif (typeof base === 'string') {\n\t\t\tthis.base = base;\n\t\t} else {\n\t\t\tthis.baseFolder = base.uri;\n\t\t\tthis.base = base.uri.fsPath;\n\t\t}\n\n\t\tthis.pattern = pattern;\n\t}\n}\n\n@es5ClassCompat\nexport class Breakpoint {\n\n\tprivate _id: string | undefined;\n\n\treadonly enabled: boolean;\n\treadonly condition?: string;\n\treadonly hitCondition?: string;\n\treadonly logMessage?: string;\n\n\tprotected constructor(enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tthis.enabled = typeof enabled === 'boolean' ? enabled : true;\n\t\tif (typeof condition === 'string') {\n\t\t\tthis.condition = condition;\n\t\t}\n\t\tif (typeof hitCondition === 'string') {\n\t\t\tthis.hitCondition = hitCondition;\n\t\t}\n\t\tif (typeof logMessage === 'string') {\n\t\t\tthis.logMessage = logMessage;\n\t\t}\n\t}\n\n\tget id(): string {\n\t\tif (!this._id) {\n\t\t\tthis._id = generateUuid();\n\t\t}\n\t\treturn this._id;\n\t}\n}\n\n@es5ClassCompat\nexport class SourceBreakpoint extends Breakpoint {\n\treadonly location: Location;\n\n\tconstructor(location: Location, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tif (location === null) {\n\t\t\tthrow illegalArgument('location');\n\t\t}\n\t\tthis.location = location;\n\t}\n}\n\n@es5ClassCompat\nexport class FunctionBreakpoint extends Breakpoint {\n\treadonly functionName: string;\n\n\tconstructor(functionName: string, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string) {\n\t\tsuper(enabled, condition, hitCondition, logMessage);\n\t\tif (!functionName) {\n\t\t\tthrow illegalArgument('functionName');\n\t\t}\n\t\tthis.functionName = functionName;\n\t}\n}\n\n@es5ClassCompat\nexport class DebugAdapterExecutable implements vscode.DebugAdapterExecutable {\n\treadonly command: string;\n\treadonly args: string[];\n\treadonly options?: vscode.DebugAdapterExecutableOptions;\n\n\tconstructor(command: string, args: string[], options?: vscode.DebugAdapterExecutableOptions) {\n\t\tthis.command = command;\n\t\tthis.args = args || [];\n\t\tthis.options = options;\n\t}\n}\n\n@es5ClassCompat\nexport class DebugAdapterServer implements vscode.DebugAdapterServer {\n\treadonly port: number;\n\treadonly host?: string;\n\n\tconstructor(port: number, host?: string) {\n\t\tthis.port = port;\n\t\tthis.host = host;\n\t}\n}\n\n/*\n@es5ClassCompat\nexport class DebugAdapterImplementation implements vscode.DebugAdapterImplementation {\n\treadonly implementation: any;\n\n\tconstructor(transport: any) {\n\t\tthis.implementation = transport;\n\t}\n}\n*/\n\nexport enum LogLevel {\n\tTrace = 1,\n\tDebug = 2,\n\tInfo = 3,\n\tWarning = 4,\n\tError = 5,\n\tCritical = 6,\n\tOff = 7\n}\n\n//#region file api\n\nexport enum FileChangeType {\n\tChanged = 1,\n\tCreated = 2,\n\tDeleted = 3,\n}\n\n@es5ClassCompat\nexport class FileSystemError extends Error {\n\n\tstatic FileExists(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, 'EntryExists', FileSystemError.FileExists);\n\t}\n\tstatic FileNotFound(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, 'EntryNotFound', FileSystemError.FileNotFound);\n\t}\n\tstatic FileNotADirectory(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, 'EntryNotADirectory', FileSystemError.FileNotADirectory);\n\t}\n\tstatic FileIsADirectory(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, 'EntryIsADirectory', FileSystemError.FileIsADirectory);\n\t}\n\tstatic NoPermissions(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, 'NoPermissions', FileSystemError.NoPermissions);\n\t}\n\tstatic Unavailable(messageOrUri?: string | URI): FileSystemError {\n\t\treturn new FileSystemError(messageOrUri, 'Unavailable', FileSystemError.Unavailable);\n\t}\n\n\tconstructor(uriOrMessage?: string | URI, code?: string, terminator?: Function) {\n\t\tsuper(URI.isUri(uriOrMessage) ? uriOrMessage.toString(true) : uriOrMessage);\n\t\tthis.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, FileSystemError.prototype);\n\t\t}\n\n\t\tif (typeof Error.captureStackTrace === 'function' && typeof terminator === 'function') {\n\t\t\t// nice stack traces\n\t\t\tError.captureStackTrace(this, terminator);\n\t\t}\n\t}\n}\n\n//#endregion\n\n//#region folding api\n\n@es5ClassCompat\nexport class FoldingRange {\n\n\tstart: number;\n\n\tend: number;\n\n\tkind?: FoldingRangeKind;\n\n\tconstructor(start: number, end: number, kind?: FoldingRangeKind) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.kind = kind;\n\t}\n}\n\nexport enum FoldingRangeKind {\n\tComment = 1,\n\tImports = 2,\n\tRegion = 3\n}\n\n//#endregion\n\n\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\n@es5ClassCompat\nexport class QuickInputButtons {\n\n\tstatic readonly Back: vscode.QuickInputButton = { iconPath: 'back.svg' };\n\n\tprivate constructor() { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ok } from 'vs/base/common/assert';\nimport { Schemas } from 'vs/base/common/network';\nimport { regExpLeadsToEndlessLoop } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { MirrorTextModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { MainThreadDocumentsShape } from 'vs/workbench/api/node/extHost.protocol';\nimport { EndOfLine, Position, Range } from 'vs/workbench/api/node/extHostTypes';\nimport * as vscode from 'vscode';\n\nconst _modeId2WordDefinition = new Map<string, RegExp>();\nexport function setWordDefinitionFor(modeId: string, wordDefinition: RegExp | undefined): void {\n\t_modeId2WordDefinition.set(modeId, wordDefinition);\n}\nexport function getWordDefinitionFor(modeId: string): RegExp | undefined {\n\treturn _modeId2WordDefinition.get(modeId);\n}\n\nexport class ExtHostDocumentData extends MirrorTextModel {\n\n\tprivate _proxy: MainThreadDocumentsShape;\n\tprivate _languageId: string;\n\tprivate _isDirty: boolean;\n\tprivate _document: vscode.TextDocument;\n\tprivate _textLines: vscode.TextLine[] = [];\n\tprivate _isDisposed: boolean = false;\n\n\tconstructor(proxy: MainThreadDocumentsShape, uri: URI, lines: string[], eol: string,\n\t\tlanguageId: string, versionId: number, isDirty: boolean\n\t) {\n\t\tsuper(uri, lines, eol, versionId);\n\t\tthis._proxy = proxy;\n\t\tthis._languageId = languageId;\n\t\tthis._isDirty = isDirty;\n\t}\n\n\tdispose(): void {\n\t\t// we don't really dispose documents but let\n\t\t// extensions still read from them. some\n\t\t// operations, live saving, will now error tho\n\t\tok(!this._isDisposed);\n\t\tthis._isDisposed = true;\n\t\tthis._isDirty = false;\n\t}\n\n\tequalLines(lines: string[]): boolean {\n\t\tconst len = lines.length;\n\t\tif (len !== this._lines.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tif (lines[i] !== this._lines[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tget document(): vscode.TextDocument {\n\t\tif (!this._document) {\n\t\t\tconst data = this;\n\t\t\tthis._document = {\n\t\t\t\tget uri() { return data._uri; },\n\t\t\t\tget fileName() { return data._uri.fsPath; },\n\t\t\t\tget isUntitled() { return data._uri.scheme === Schemas.untitled; },\n\t\t\t\tget languageId() { return data._languageId; },\n\t\t\t\tget version() { return data._versionId; },\n\t\t\t\tget isClosed() { return data._isDisposed; },\n\t\t\t\tget isDirty() { return data._isDirty; },\n\t\t\t\tsave() { return data._save(); },\n\t\t\t\tgetText(range?) { return range ? data._getTextInRange(range) : data.getText(); },\n\t\t\t\tget eol() { return data._eol === '\\n' ? EndOfLine.LF : EndOfLine.CRLF; },\n\t\t\t\tget lineCount() { return data._lines.length; },\n\t\t\t\tlineAt(lineOrPos: number | vscode.Position) { return data._lineAt(lineOrPos); },\n\t\t\t\toffsetAt(pos) { return data._offsetAt(pos); },\n\t\t\t\tpositionAt(offset) { return data._positionAt(offset); },\n\t\t\t\tvalidateRange(ran) { return data._validateRange(ran); },\n\t\t\t\tvalidatePosition(pos) { return data._validatePosition(pos); },\n\t\t\t\tgetWordRangeAtPosition(pos, regexp?) { return data._getWordRangeAtPosition(pos, regexp); }\n\t\t\t};\n\t\t}\n\t\treturn Object.freeze(this._document);\n\t}\n\n\t_acceptLanguageId(newLanguageId: string): void {\n\t\tok(!this._isDisposed);\n\t\tthis._languageId = newLanguageId;\n\t}\n\n\t_acceptIsDirty(isDirty: boolean): void {\n\t\tok(!this._isDisposed);\n\t\tthis._isDirty = isDirty;\n\t}\n\n\tprivate _save(): Promise<boolean> {\n\t\tif (this._isDisposed) {\n\t\t\treturn Promise.reject(new Error('Document has been closed'));\n\t\t}\n\t\treturn this._proxy.$trySaveDocument(this._uri);\n\t}\n\n\tprivate _getTextInRange(_range: vscode.Range): string {\n\t\tconst range = this._validateRange(_range);\n\n\t\tif (range.isEmpty) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (range.isSingleLine) {\n\t\t\treturn this._lines[range.start.line].substring(range.start.character, range.end.character);\n\t\t}\n\n\t\tconst lineEnding = this._eol,\n\t\t\tstartLineIndex = range.start.line,\n\t\t\tendLineIndex = range.end.line,\n\t\t\tresultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.start.character));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.end.character));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tprivate _lineAt(lineOrPosition: number | vscode.Position): vscode.TextLine {\n\n\t\tlet line: number | undefined;\n\t\tif (lineOrPosition instanceof Position) {\n\t\t\tline = lineOrPosition.line;\n\t\t} else if (typeof lineOrPosition === 'number') {\n\t\t\tline = lineOrPosition;\n\t\t}\n\n\t\tif (typeof line !== 'number' || line < 0 || line >= this._lines.length) {\n\t\t\tthrow new Error('Illegal value for `line`');\n\t\t}\n\n\t\tlet result = this._textLines[line];\n\t\tif (!result || result.lineNumber !== line || result.text !== this._lines[line]) {\n\n\t\t\tconst text = this._lines[line];\n\t\t\tconst firstNonWhitespaceCharacterIndex = /^(\\s*)/.exec(text)![1].length;\n\t\t\tconst range = new Range(line, 0, line, text.length);\n\t\t\tconst rangeIncludingLineBreak = line < this._lines.length - 1\n\t\t\t\t? new Range(line, 0, line + 1, 0)\n\t\t\t\t: range;\n\n\t\t\tresult = Object.freeze({\n\t\t\t\tlineNumber: line,\n\t\t\t\trange,\n\t\t\t\trangeIncludingLineBreak,\n\t\t\t\ttext,\n\t\t\t\tfirstNonWhitespaceCharacterIndex, //TODO@api, rename to 'leadingWhitespaceLength'\n\t\t\t\tisEmptyOrWhitespace: firstNonWhitespaceCharacterIndex === text.length\n\t\t\t});\n\n\t\t\tthis._textLines[line] = result;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _offsetAt(position: vscode.Position): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getAccumulatedValue(position.line - 1) + position.character;\n\t}\n\n\tprivate _positionAt(offset: number): vscode.Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tconst out = this._lineStarts!.getIndexOf(offset);\n\n\t\tconst lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn new Position(out.index, Math.min(out.remainder, lineLength));\n\t}\n\n\t// ---- range math\n\n\tprivate _validateRange(range: vscode.Range): vscode.Range {\n\t\tif (!(range instanceof Range)) {\n\t\t\tthrow new Error('Invalid argument');\n\t\t}\n\n\t\tconst start = this._validatePosition(range.start);\n\t\tconst end = this._validatePosition(range.end);\n\n\t\tif (start === range.start && end === range.end) {\n\t\t\treturn range;\n\t\t}\n\t\treturn new Range(start.line, start.character, end.line, end.character);\n\t}\n\n\tprivate _validatePosition(position: vscode.Position): vscode.Position {\n\t\tif (!(position instanceof Position)) {\n\t\t\tthrow new Error('Invalid argument');\n\t\t}\n\n\t\tlet { line, character } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (line < 0) {\n\t\t\tline = 0;\n\t\t\tcharacter = 0;\n\t\t\thasChanged = true;\n\t\t}\n\t\telse if (line >= this._lines.length) {\n\t\t\tline = this._lines.length - 1;\n\t\t\tcharacter = this._lines[line].length;\n\t\t\thasChanged = true;\n\t\t}\n\t\telse {\n\t\t\tconst maxCharacter = this._lines[line].length;\n\t\t\tif (character < 0) {\n\t\t\t\tcharacter = 0;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (character > maxCharacter) {\n\t\t\t\tcharacter = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t}\n\t\treturn new Position(line, character);\n\t}\n\n\tprivate _getWordRangeAtPosition(_position: vscode.Position, regexp?: RegExp): vscode.Range | undefined {\n\t\tconst position = this._validatePosition(_position);\n\n\t\tif (!regexp) {\n\t\t\t// use default when custom-regexp isn't provided\n\t\t\tregexp = getWordDefinitionFor(this._languageId);\n\n\t\t} else if (regExpLeadsToEndlessLoop(regexp)) {\n\t\t\t// use default when custom-regexp is bad\n\t\t\tconsole.warn(`[getWordRangeAtPosition]: ignoring custom regexp '${regexp.source}' because it matches the empty string.`);\n\t\t\tregexp = getWordDefinitionFor(this._languageId);\n\t\t}\n\n\t\tconst wordAtText = getWordAtText(\n\t\t\tposition.character + 1,\n\t\t\tensureValidWordDefinition(regexp),\n\t\t\tthis._lines[position.line],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.line, wordAtText.startColumn - 1, position.line, wordAtText.endColumn - 1);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Command } from 'vs/editor/common/modes';\nimport { UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ITreeViewDataProvider } from 'vs/workbench/common/views';\nimport { localize } from 'vs/nls';\nimport { IViewlet } from 'vs/workbench/common/viewlet';\nimport { createDecorator, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { values, keys } from 'vs/base/common/map';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IKeybindings } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IAction } from 'vs/base/common/actions';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport const TEST_VIEW_CONTAINER_ID = 'workbench.view.extension.test';\n\nexport namespace Extensions {\n\texport const ViewContainersRegistry = 'workbench.registry.view.containers';\n\texport const ViewsRegistry = 'workbench.registry.view';\n}\n\nexport interface IViewContainersRegistry {\n\t/**\n\t * An event that is triggerred when a view container is registered.\n\t */\n\treadonly onDidRegister: Event<ViewContainer>;\n\n\t/**\n\t * An event that is triggerred when a view container is deregistered.\n\t */\n\treadonly onDidDeregister: Event<ViewContainer>;\n\n\t/**\n\t * All registered view containers\n\t */\n\treadonly all: ViewContainer[];\n\n\t/**\n\t * Registers a view container with given id\n\t * No op if a view container is already registered with the given id.\n\t *\n\t * @param id of the view container.\n\t *\n\t * @returns the registered ViewContainer.\n\t */\n\tregisterViewContainer(id: string, hideIfEmpty?: boolean, extensionId?: ExtensionIdentifier): ViewContainer;\n\n\t/**\n\t * Deregisters the given view container\n\t * No op if the view container is not registered\n\t */\n\tderegisterViewContainer(viewContainer: ViewContainer): void;\n\n\t/**\n\t * Returns the view container with given id.\n\t *\n\t * @returns the view container with given id.\n\t */\n\tget(id: string): ViewContainer | undefined;\n}\n\nexport class ViewContainer {\n\tprotected constructor(readonly id: string, readonly hideIfEmpty: boolean, readonly extensionId?: ExtensionIdentifier) { }\n}\n\nclass ViewContainersRegistryImpl implements IViewContainersRegistry {\n\n\tprivate readonly _onDidRegister = new Emitter<ViewContainer>();\n\treadonly onDidRegister: Event<ViewContainer> = this._onDidRegister.event;\n\n\tprivate readonly _onDidDeregister = new Emitter<ViewContainer>();\n\treadonly onDidDeregister: Event<ViewContainer> = this._onDidDeregister.event;\n\n\tprivate viewContainers: Map<string, ViewContainer> = new Map<string, ViewContainer>();\n\n\tget all(): ViewContainer[] {\n\t\treturn values(this.viewContainers);\n\t}\n\n\tregisterViewContainer(id: string, hideIfEmpty?: boolean, extensionId?: ExtensionIdentifier): ViewContainer {\n\t\tconst existing = this.viewContainers.get(id);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\n\t\tconst viewContainer = new class extends ViewContainer {\n\t\t\tconstructor() {\n\t\t\t\tsuper(id, !!hideIfEmpty, extensionId);\n\t\t\t}\n\t\t};\n\t\tthis.viewContainers.set(id, viewContainer);\n\t\tthis._onDidRegister.fire(viewContainer);\n\t\treturn viewContainer;\n\t}\n\n\tderegisterViewContainer(viewContainer: ViewContainer): void {\n\t\tconst existing = this.viewContainers.get(viewContainer.id);\n\t\tif (existing) {\n\t\t\tthis.viewContainers.delete(viewContainer.id);\n\t\t\tthis._onDidDeregister.fire(viewContainer);\n\t\t}\n\t}\n\n\tget(id: string): ViewContainer | undefined {\n\t\treturn this.viewContainers.get(id);\n\t}\n}\n\nRegistry.add(Extensions.ViewContainersRegistry, new ViewContainersRegistryImpl());\n\nexport interface IViewDescriptor {\n\n\treadonly id: string;\n\n\treadonly name: string;\n\n\treadonly ctorDescriptor: { ctor: any, arguments?: any[] };\n\n\treadonly when?: ContextKeyExpr;\n\n\treadonly order?: number;\n\n\treadonly weight?: number;\n\n\treadonly collapsed?: boolean;\n\n\treadonly canToggleVisibility?: boolean;\n\n\t// Applies only to newly created views\n\treadonly hideByDefault?: boolean;\n\n\treadonly workspace?: boolean;\n\n\treadonly focusCommand?: { id: string, keybindings?: IKeybindings };\n}\n\nexport interface IViewDescriptorCollection extends IDisposable {\n\treadonly onDidChangeActiveViews: Event<{ added: IViewDescriptor[], removed: IViewDescriptor[] }>;\n\treadonly activeViewDescriptors: IViewDescriptor[];\n\treadonly allViewDescriptors: IViewDescriptor[];\n}\n\nexport interface IViewsRegistry {\n\n\treadonly onViewsRegistered: Event<{ views: IViewDescriptor[], viewContainer: ViewContainer }>;\n\n\treadonly onViewsDeregistered: Event<{ views: IViewDescriptor[], viewContainer: ViewContainer }>;\n\n\treadonly onDidChangeContainer: Event<{ views: IViewDescriptor[], from: ViewContainer, to: ViewContainer }>;\n\n\tregisterViews(views: IViewDescriptor[], viewContainer: ViewContainer): void;\n\n\tderegisterViews(views: IViewDescriptor[], viewContainer: ViewContainer): void;\n\n\tmoveViews(views: IViewDescriptor[], viewContainer: ViewContainer): void;\n\n\tgetViews(viewContainer: ViewContainer): IViewDescriptor[];\n\n\tgetView(id: string): IViewDescriptor | null;\n\n\tgetViewContainer(id: string): ViewContainer | null;\n}\n\nclass ViewsRegistry implements IViewsRegistry {\n\n\tprivate readonly _onViewsRegistered: Emitter<{ views: IViewDescriptor[], viewContainer: ViewContainer }> = new Emitter<{ views: IViewDescriptor[], viewContainer: ViewContainer }>();\n\treadonly onViewsRegistered: Event<{ views: IViewDescriptor[], viewContainer: ViewContainer }> = this._onViewsRegistered.event;\n\n\tprivate readonly _onViewsDeregistered: Emitter<{ views: IViewDescriptor[], viewContainer: ViewContainer }> = new Emitter<{ views: IViewDescriptor[], viewContainer: ViewContainer }>();\n\treadonly onViewsDeregistered: Event<{ views: IViewDescriptor[], viewContainer: ViewContainer }> = this._onViewsDeregistered.event;\n\n\tprivate readonly _onDidChangeContainer: Emitter<{ views: IViewDescriptor[], from: ViewContainer, to: ViewContainer }> = new Emitter<{ views: IViewDescriptor[], from: ViewContainer, to: ViewContainer }>();\n\treadonly onDidChangeContainer: Event<{ views: IViewDescriptor[], from: ViewContainer, to: ViewContainer }> = this._onDidChangeContainer.event;\n\n\tprivate _viewContainers: ViewContainer[] = [];\n\tprivate _views: Map<ViewContainer, IViewDescriptor[]> = new Map<ViewContainer, IViewDescriptor[]>();\n\n\tregisterViews(views: IViewDescriptor[], viewContainer: ViewContainer): void {\n\t\tthis.addViews(views, viewContainer);\n\t\tthis._onViewsRegistered.fire({ views: views, viewContainer });\n\t}\n\n\tderegisterViews(viewDescriptors: IViewDescriptor[], viewContainer: ViewContainer): void {\n\t\tconst views = this.removeViews(viewDescriptors, viewContainer);\n\t\tif (views.length) {\n\t\t\tthis._onViewsDeregistered.fire({ views, viewContainer });\n\t\t}\n\t}\n\n\tmoveViews(viewsToMove: IViewDescriptor[], viewContainer: ViewContainer): void {\n\t\tkeys(this._views).forEach(container => {\n\t\t\tif (container !== viewContainer) {\n\t\t\t\tconst views = this.removeViews(viewsToMove, container);\n\t\t\t\tif (views.length) {\n\t\t\t\t\tthis.addViews(views, viewContainer);\n\t\t\t\t\tthis._onDidChangeContainer.fire({ views, from: container, to: viewContainer });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetViews(loc: ViewContainer): IViewDescriptor[] {\n\t\treturn this._views.get(loc) || [];\n\t}\n\n\tgetView(id: string): IViewDescriptor | null {\n\t\tfor (const viewContainer of this._viewContainers) {\n\t\t\tconst viewDescriptor = (this._views.get(viewContainer) || []).filter(v => v.id === id)[0];\n\t\t\tif (viewDescriptor) {\n\t\t\t\treturn viewDescriptor;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetViewContainer(viewId: string): ViewContainer | null {\n\t\tfor (const viewContainer of this._viewContainers) {\n\t\t\tconst viewDescriptor = (this._views.get(viewContainer) || []).filter(v => v.id === viewId)[0];\n\t\t\tif (viewDescriptor) {\n\t\t\t\treturn viewContainer;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate addViews(viewDescriptors: IViewDescriptor[], viewContainer: ViewContainer): void {\n\t\tlet views = this._views.get(viewContainer);\n\t\tif (!views) {\n\t\t\tviews = [];\n\t\t\tthis._views.set(viewContainer, views);\n\t\t\tthis._viewContainers.push(viewContainer);\n\t\t}\n\t\tfor (const viewDescriptor of viewDescriptors) {\n\t\t\tif (views.some(v => v.id === viewDescriptor.id)) {\n\t\t\t\tthrow new Error(localize('duplicateId', \"A view with id '{0}' is already registered in the container '{1}'\", viewDescriptor.id, viewContainer.id));\n\t\t\t}\n\t\t\tviews.push(viewDescriptor);\n\t\t}\n\t}\n\n\tprivate removeViews(viewDescriptors: IViewDescriptor[], viewContainer: ViewContainer): IViewDescriptor[] {\n\t\tconst views = this._views.get(viewContainer);\n\t\tif (!views) {\n\t\t\treturn [];\n\t\t}\n\t\tconst viewsToDeregister: IViewDescriptor[] = [];\n\t\tconst remaningViews: IViewDescriptor[] = [];\n\t\tfor (const view of views) {\n\t\t\tif (viewDescriptors.indexOf(view) === -1) {\n\t\t\t\tremaningViews.push(view);\n\t\t\t} else {\n\t\t\t\tviewsToDeregister.push(view);\n\t\t\t}\n\t\t}\n\t\tif (viewsToDeregister.length) {\n\t\t\tif (remaningViews.length) {\n\t\t\t\tthis._views.set(viewContainer, remaningViews);\n\t\t\t} else {\n\t\t\t\tthis._views.delete(viewContainer);\n\t\t\t\tthis._viewContainers.splice(this._viewContainers.indexOf(viewContainer), 1);\n\t\t\t}\n\t\t}\n\t\treturn viewsToDeregister;\n\t}\n}\n\nRegistry.add(Extensions.ViewsRegistry, new ViewsRegistry());\n\nexport interface IView {\n\n\treadonly id: string;\n\n}\n\nexport interface IViewsViewlet extends IViewlet {\n\n\topenView(id: string, focus?: boolean): IView;\n\n}\n\nexport const IViewsService = createDecorator<IViewsService>('viewsService');\n\nexport interface IViewsService {\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\topenView(id: string, focus?: boolean): Promise<IView | null>;\n\n\tgetViewDescriptors(container: ViewContainer): IViewDescriptorCollection | null;\n}\n\n// Custom views\n\nexport interface ITreeView extends IDisposable {\n\n\tdataProvider: ITreeViewDataProvider | null;\n\n\tshowCollapseAllAction: boolean;\n\n\tmessage?: string | IMarkdownString;\n\n\treadonly visible: boolean;\n\n\treadonly onDidExpandItem: Event<ITreeItem>;\n\n\treadonly onDidCollapseItem: Event<ITreeItem>;\n\n\treadonly onDidChangeSelection: Event<ITreeItem[]>;\n\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\treadonly onDidChangeActions: Event<void>;\n\n\trefresh(treeItems?: ITreeItem[]): Promise<void>;\n\n\tsetVisibility(visible: boolean): void;\n\n\tfocus(): void;\n\n\tlayout(height: number): void;\n\n\tshow(container: HTMLElement): void;\n\n\tgetOptimalWidth(): number;\n\n\treveal(item: ITreeItem): Promise<void>;\n\n\texpand(itemOrItems: ITreeItem | ITreeItem[]): Promise<void>;\n\n\tsetSelection(items: ITreeItem[]): void;\n\n\tsetFocus(item: ITreeItem): void;\n\n\tgetPrimaryActions(): IAction[];\n\n\tgetSecondaryActions(): IAction[];\n}\n\nexport interface IRevealOptions {\n\n\tselect?: boolean;\n\n\tfocus?: boolean;\n\n\texpand?: boolean | number;\n\n}\n\nexport interface ITreeViewDescriptor extends IViewDescriptor {\n\n\treadonly treeView: ITreeView;\n\n}\n\nexport type TreeViewItemHandleArg = {\n\t$treeViewId: string,\n\t$treeItemHandle: string\n};\n\nexport enum TreeItemCollapsibleState {\n\tNone = 0,\n\tCollapsed = 1,\n\tExpanded = 2\n}\n\nexport interface ITreeItemLabel {\n\n\tlabel: string;\n\n\thighlights?: [number, number][];\n\n}\n\nexport interface ITreeItem {\n\n\thandle: string;\n\n\tparentHandle: string | null;\n\n\tcollapsibleState: TreeItemCollapsibleState;\n\n\tlabel?: ITreeItemLabel;\n\n\tdescription?: string | boolean;\n\n\ticon?: UriComponents;\n\n\ticonDark?: UriComponents;\n\n\tthemeIcon?: ThemeIcon;\n\n\tresourceUri?: UriComponents;\n\n\ttooltip?: string;\n\n\tcontextValue?: string;\n\n\tcommand?: Command;\n\n\tchildren?: ITreeItem[];\n}\n\nexport interface ITreeViewDataProvider {\n\n\tgetChildren(element?: ITreeItem): Promise<ITreeItem[]>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { IConfig, IDebuggerContribution } from 'vs/workbench/contrib/debug/common/debug';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { deepClone } from 'vs/base/common/objects';\n\nconst _formatPIIRegexp = /{([^}]+)}/g;\n\nexport function formatPII(value: string, excludePII: boolean, args: { [key: string]: string }): string {\n\treturn value.replace(_formatPIIRegexp, function (match, group) {\n\t\tif (excludePII && group.length > 0 && group[0] !== '_') {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn args && args.hasOwnProperty(group) ?\n\t\t\targs[group] :\n\t\t\tmatch;\n\t});\n}\n\nexport function isExtensionHostDebugging(config: IConfig) {\n\treturn config.type && equalsIgnoreCase(config.type === 'vslsShare' ? (<any>config).adapterProxy.configuration.type : config.type, 'extensionhost');\n}\n\n// only a debugger contributions with a label, program, or runtime attribute is considered a \"defining\" or \"main\" debugger contribution\nexport function isDebuggerMainContribution(dbg: IDebuggerContribution) {\n\treturn dbg.type && (dbg.label || dbg.program || dbg.runtime);\n}\n\nexport function getExactExpressionStartAndEnd(lineContent: string, looseStart: number, looseEnd: number): { start: number, end: number } {\n\tlet matchingExpression: string | undefined = undefined;\n\tlet startOffset = 0;\n\n\t// Some example supported expressions: myVar.prop, a.b.c.d, myVar?.prop, myVar->prop, MyClass::StaticProp, *myVar\n\t// Match any character except a set of characters which often break interesting sub-expressions\n\tlet expression: RegExp = /([^()\\[\\]{}<>\\s+\\-/%~#^;=|,`!]|\\->)+/g;\n\tlet result: RegExpExecArray | null = null;\n\n\t// First find the full expression under the cursor\n\twhile (result = expression.exec(lineContent)) {\n\t\tlet start = result.index + 1;\n\t\tlet end = start + result[0].length;\n\n\t\tif (start <= looseStart && end >= looseEnd) {\n\t\t\tmatchingExpression = result[0];\n\t\t\tstartOffset = start;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// If there are non-word characters after the cursor, we want to truncate the expression then.\n\t// For example in expression 'a.b.c.d', if the focus was under 'b', 'a.b' would be evaluated.\n\tif (matchingExpression) {\n\t\tlet subExpression: RegExp = /\\w+/g;\n\t\tlet subExpressionResult: RegExpExecArray | null = null;\n\t\twhile (subExpressionResult = subExpression.exec(matchingExpression)) {\n\t\t\tlet subEnd = subExpressionResult.index + 1 + startOffset + subExpressionResult[0].length;\n\t\t\tif (subEnd >= looseEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (subExpressionResult) {\n\t\t\tmatchingExpression = matchingExpression.substring(0, subExpression.lastIndex);\n\t\t}\n\t}\n\n\treturn matchingExpression ?\n\t\t{ start: startOffset, end: startOffset + matchingExpression.length - 1 } :\n\t\t{ start: 0, end: 0 };\n}\n\n// RFC 2396, Appendix A: https://www.ietf.org/rfc/rfc2396.txt\nconst _schemePattern = /^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]+:/;\n\nexport function isUri(s: string | undefined): boolean {\n\t// heuristics: a valid uri starts with a scheme and\n\t// the scheme has at least 2 characters so that it doesn't look like a drive letter.\n\treturn !!(s && s.match(_schemePattern));\n}\n\nfunction stringToUri(path: string): string {\n\tif (typeof path === 'string') {\n\t\tif (isUri(path)) {\n\t\t\treturn <string><unknown>uri.parse(path);\n\t\t} else {\n\t\t\t// assume path\n\t\t\tif (isAbsolute(path)) {\n\t\t\t\treturn <string><unknown>uri.file(path);\n\t\t\t} else {\n\t\t\t\t// leave relative path as is\n\t\t\t}\n\t\t}\n\t}\n\treturn path;\n}\n\nfunction uriToString(path: string): string {\n\tif (typeof path === 'object') {\n\t\tconst u = uri.revive(path);\n\t\tif (u.scheme === 'file') {\n\t\t\treturn u.fsPath;\n\t\t} else {\n\t\t\treturn u.toString();\n\t\t}\n\t}\n\treturn path;\n}\n\n// path hooks helpers\n\ninterface PathContainer {\n\tpath?: string;\n}\n\nexport function convertToDAPaths(message: DebugProtocol.ProtocolMessage, toUri: boolean): DebugProtocol.ProtocolMessage {\n\n\tconst fixPath = toUri ? stringToUri : uriToString;\n\n\t// since we modify Source.paths in the message in place, we need to make a copy of it (see #61129)\n\tconst msg = deepClone(message);\n\n\tconvertPaths(msg, (toDA: boolean, source: PathContainer | undefined) => {\n\t\tif (toDA && source) {\n\t\t\tsource.path = source.path ? fixPath(source.path) : undefined;\n\t\t}\n\t});\n\treturn msg;\n}\n\nexport function convertToVSCPaths(message: DebugProtocol.ProtocolMessage, toUri: boolean): DebugProtocol.ProtocolMessage {\n\n\tconst fixPath = toUri ? stringToUri : uriToString;\n\n\t// since we modify Source.paths in the message in place, we need to make a copy of it (see #61129)\n\tconst msg = deepClone(message);\n\n\tconvertPaths(msg, (toDA: boolean, source: PathContainer | undefined) => {\n\t\tif (!toDA && source) {\n\t\t\tsource.path = source.path ? fixPath(source.path) : undefined;\n\t\t}\n\t});\n\treturn msg;\n}\n\nfunction convertPaths(msg: DebugProtocol.ProtocolMessage, fixSourcePath: (toDA: boolean, source: PathContainer | undefined) => void): void {\n\n\tswitch (msg.type) {\n\t\tcase 'event':\n\t\t\tconst event = <DebugProtocol.Event>msg;\n\t\t\tswitch (event.event) {\n\t\t\t\tcase 'output':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.OutputEvent>event).body.source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'loadedSource':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.LoadedSourceEvent>event).body.source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpoint':\n\t\t\t\t\tfixSourcePath(false, (<DebugProtocol.BreakpointEvent>event).body.breakpoint.source);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'request':\n\t\t\tconst request = <DebugProtocol.Request>msg;\n\t\t\tswitch (request.command) {\n\t\t\t\tcase 'setBreakpoints':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.SetBreakpointsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'source':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.SourceArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gotoTargets':\n\t\t\t\t\tfixSourcePath(true, (<DebugProtocol.GotoTargetsArguments>request.arguments).source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'launchVSCode':\n\t\t\t\t\trequest.arguments.args.forEach(arg => fixSourcePath(false, arg));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'response':\n\t\t\tconst response = <DebugProtocol.Response>msg;\n\t\t\tif (response.success) {\n\t\t\t\tswitch (response.command) {\n\t\t\t\t\tcase 'stackTrace':\n\t\t\t\t\t\t(<DebugProtocol.StackTraceResponse>response).body.stackFrames.forEach(frame => fixSourcePath(false, frame.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'loadedSources':\n\t\t\t\t\t\t(<DebugProtocol.LoadedSourcesResponse>response).body.sources.forEach(source => fixSourcePath(false, source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'scopes':\n\t\t\t\t\t\t(<DebugProtocol.ScopesResponse>response).body.scopes.forEach(scope => fixSourcePath(false, scope.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'setFunctionBreakpoints':\n\t\t\t\t\t\t(<DebugProtocol.SetFunctionBreakpointsResponse>response).body.breakpoints.forEach(bp => fixSourcePath(false, bp.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'setBreakpoints':\n\t\t\t\t\t\t(<DebugProtocol.SetBreakpointsResponse>response).body.breakpoints.forEach(bp => fixSourcePath(false, bp.source));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exists } from 'vs/base/node/pfs';\nimport * as cp from 'child_process';\nimport * as stream from 'stream';\nimport * as nls from 'vs/nls';\nimport * as net from 'net';\nimport * as path from 'vs/base/common/path';\nimport * as strings from 'vs/base/common/strings';\nimport * as objects from 'vs/base/common/objects';\nimport * as platform from 'vs/base/common/platform';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ExtensionsChannelId } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { IOutputService } from 'vs/workbench/contrib/output/common/output';\nimport { IDebugAdapter, IDebugAdapterExecutable, IDebuggerContribution, IPlatformSpecificAdapterContribution, IDebugAdapterServer } from 'vs/workbench/contrib/debug/common/debug';\n\n/**\n * Abstract implementation of the low level API for a debug adapter.\n * Missing is how this API communicates with the debug adapter.\n */\nexport abstract class AbstractDebugAdapter implements IDebugAdapter {\n\n\tprivate sequence: number;\n\tprivate pendingRequests: Map<number, (e: DebugProtocol.Response) => void>;\n\tprivate requestCallback: (request: DebugProtocol.Request) => void;\n\tprivate eventCallback: (request: DebugProtocol.Event) => void;\n\tprivate messageCallback: (message: DebugProtocol.ProtocolMessage) => void;\n\n\tprotected readonly _onError: Emitter<Error>;\n\tprotected readonly _onExit: Emitter<number | null>;\n\n\tconstructor() {\n\t\tthis.sequence = 1;\n\t\tthis.pendingRequests = new Map();\n\n\t\tthis._onError = new Emitter<Error>();\n\t\tthis._onExit = new Emitter<number>();\n\t}\n\n\tabstract startSession(): Promise<void>;\n\tabstract stopSession(): Promise<void>;\n\n\tabstract sendMessage(message: DebugProtocol.ProtocolMessage): void;\n\n\tget onError(): Event<Error> {\n\t\treturn this._onError.event;\n\t}\n\n\tget onExit(): Event<number | null> {\n\t\treturn this._onExit.event;\n\t}\n\n\tonMessage(callback: (message: DebugProtocol.ProtocolMessage) => void): void {\n\t\tif (this.eventCallback) {\n\t\t\tthis._onError.fire(new Error(`attempt to set more than one 'Message' callback`));\n\t\t}\n\t\tthis.messageCallback = callback;\n\t}\n\n\tonEvent(callback: (event: DebugProtocol.Event) => void): void {\n\t\tif (this.eventCallback) {\n\t\t\tthis._onError.fire(new Error(`attempt to set more than one 'Event' callback`));\n\t\t}\n\t\tthis.eventCallback = callback;\n\t}\n\n\tonRequest(callback: (request: DebugProtocol.Request) => void): void {\n\t\tif (this.requestCallback) {\n\t\t\tthis._onError.fire(new Error(`attempt to set more than one 'Request' callback`));\n\t\t}\n\t\tthis.requestCallback = callback;\n\t}\n\n\tsendResponse(response: DebugProtocol.Response): void {\n\t\tif (response.seq > 0) {\n\t\t\tthis._onError.fire(new Error(`attempt to send more than one response for command ${response.command}`));\n\t\t} else {\n\t\t\tthis.internalSend('response', response);\n\t\t}\n\t}\n\n\tsendRequest(command: string, args: any, clb: (result: DebugProtocol.Response) => void, timeout?: number): void {\n\n\t\tconst request: any = {\n\t\t\tcommand: command\n\t\t};\n\t\tif (args && Object.keys(args).length > 0) {\n\t\t\trequest.arguments = args;\n\t\t}\n\n\t\tthis.internalSend('request', request);\n\n\t\tif (typeof timeout === 'number') {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tclearTimeout(timer);\n\t\t\t\tconst clb = this.pendingRequests.get(request.seq);\n\t\t\t\tif (clb) {\n\t\t\t\t\tthis.pendingRequests.delete(request.seq);\n\t\t\t\t\tconst err: DebugProtocol.Response = {\n\t\t\t\t\t\ttype: 'response',\n\t\t\t\t\t\tseq: 0,\n\t\t\t\t\t\trequest_seq: request.seq,\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\tmessage: `timeout after ${timeout} ms`\n\t\t\t\t\t};\n\t\t\t\t\tclb(err);\n\t\t\t\t}\n\t\t\t}, timeout);\n\t\t}\n\n\t\tif (clb) {\n\t\t\t// store callback for this request\n\t\t\tthis.pendingRequests.set(request.seq, clb);\n\t\t}\n\t}\n\n\tacceptMessage(message: DebugProtocol.ProtocolMessage): void {\n\t\tif (this.messageCallback) {\n\t\t\tthis.messageCallback(message);\n\t\t} else {\n\t\t\tswitch (message.type) {\n\t\t\t\tcase 'event':\n\t\t\t\t\tif (this.eventCallback) {\n\t\t\t\t\t\tthis.eventCallback(<DebugProtocol.Event>message);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'request':\n\t\t\t\t\tif (this.requestCallback) {\n\t\t\t\t\t\tthis.requestCallback(<DebugProtocol.Request>message);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'response':\n\t\t\t\t\tconst response = <DebugProtocol.Response>message;\n\t\t\t\t\tconst clb = this.pendingRequests.get(response.request_seq);\n\t\t\t\t\tif (clb) {\n\t\t\t\t\t\tthis.pendingRequests.delete(response.request_seq);\n\t\t\t\t\t\tclb(response);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate internalSend(typ: 'request' | 'response' | 'event', message: DebugProtocol.ProtocolMessage): void {\n\n\t\tmessage.type = typ;\n\t\tmessage.seq = this.sequence++;\n\n\t\tthis.sendMessage(message);\n\t}\n\n\tprotected cancelPending() {\n\t\tconst pending = this.pendingRequests;\n\t\tthis.pendingRequests = new Map();\n\t\tsetTimeout(_ => {\n\t\t\tpending.forEach((callback, request_seq) => {\n\t\t\t\tconst err: DebugProtocol.Response = {\n\t\t\t\t\ttype: 'response',\n\t\t\t\t\tseq: 0,\n\t\t\t\t\trequest_seq,\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tcommand: 'canceled',\n\t\t\t\t\tmessage: 'canceled'\n\t\t\t\t};\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t}, 1000);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelPending();\n\t}\n}\n\n/**\n * An implementation that communicates via two streams with the debug adapter.\n */\nexport abstract class StreamDebugAdapter extends AbstractDebugAdapter {\n\n\tprivate static readonly TWO_CRLF = '\\r\\n\\r\\n';\n\tprivate static readonly HEADER_LINESEPARATOR = /\\r?\\n/;\t// allow for non-RFC 2822 conforming line separators\n\tprivate static readonly HEADER_FIELDSEPARATOR = /: */;\n\n\tprivate outputStream: stream.Writable;\n\tprivate rawData: Buffer;\n\tprivate contentLength: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tprotected connect(readable: stream.Readable, writable: stream.Writable): void {\n\n\t\tthis.outputStream = writable;\n\t\tthis.rawData = Buffer.allocUnsafe(0);\n\t\tthis.contentLength = -1;\n\n\t\treadable.on('data', (data: Buffer) => this.handleData(data));\n\t}\n\n\tsendMessage(message: DebugProtocol.ProtocolMessage): void {\n\n\t\tif (this.outputStream) {\n\t\t\tconst json = JSON.stringify(message);\n\t\t\tthis.outputStream.write(`Content-Length: ${Buffer.byteLength(json, 'utf8')}${StreamDebugAdapter.TWO_CRLF}${json}`, 'utf8');\n\t\t}\n\t}\n\n\tprivate handleData(data: Buffer): void {\n\n\t\tthis.rawData = Buffer.concat([this.rawData, data]);\n\n\t\twhile (true) {\n\t\t\tif (this.contentLength >= 0) {\n\t\t\t\tif (this.rawData.length >= this.contentLength) {\n\t\t\t\t\tconst message = this.rawData.toString('utf8', 0, this.contentLength);\n\t\t\t\t\tthis.rawData = this.rawData.slice(this.contentLength);\n\t\t\t\t\tthis.contentLength = -1;\n\t\t\t\t\tif (message.length > 0) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis.acceptMessage(<DebugProtocol.ProtocolMessage>JSON.parse(message));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthis._onError.fire(new Error((e.message || e) + '\\n' + message));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\t// there may be more complete messages to process\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst idx = this.rawData.indexOf(StreamDebugAdapter.TWO_CRLF);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tconst header = this.rawData.toString('utf8', 0, idx);\n\t\t\t\t\tconst lines = header.split(StreamDebugAdapter.HEADER_LINESEPARATOR);\n\t\t\t\t\tfor (const h of lines) {\n\t\t\t\t\t\tconst kvPair = h.split(StreamDebugAdapter.HEADER_FIELDSEPARATOR);\n\t\t\t\t\t\tif (kvPair[0] === 'Content-Length') {\n\t\t\t\t\t\t\tthis.contentLength = Number(kvPair[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.rawData = this.rawData.slice(idx + StreamDebugAdapter.TWO_CRLF.length);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/**\n * An implementation that connects to a debug adapter via a socket.\n*/\nexport class SocketDebugAdapter extends StreamDebugAdapter {\n\n\tprivate socket?: net.Socket;\n\n\tconstructor(private adapterServer: IDebugAdapterServer) {\n\t\tsuper();\n\t}\n\n\tstartSession(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tlet connected = false;\n\t\t\tthis.socket = net.createConnection(this.adapterServer.port, this.adapterServer.host || '127.0.0.1', () => {\n\t\t\t\tthis.connect(this.socket!, this.socket!);\n\t\t\t\tresolve();\n\t\t\t\tconnected = true;\n\t\t\t});\n\t\t\tthis.socket.on('close', () => {\n\t\t\t\tif (connected) {\n\t\t\t\t\tthis._onError.fire(new Error('connection closed'));\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error('connection closed'));\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.socket.on('error', error => {\n\t\t\t\tif (connected) {\n\t\t\t\t\tthis._onError.fire(error);\n\t\t\t\t} else {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tstopSession(): Promise<void> {\n\n\t\t// Cancel all sent promises on disconnect so debug trees are not left in a broken state #3666.\n\t\tthis.cancelPending();\n\n\t\tif (this.socket) {\n\t\t\tthis.socket.end();\n\t\t\tthis.socket = undefined;\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\n/**\n * An implementation that launches the debug adapter as a separate process and communicates via stdin/stdout.\n*/\nexport class ExecutableDebugAdapter extends StreamDebugAdapter {\n\n\tprivate serverProcess: cp.ChildProcess;\n\n\tconstructor(private adapterExecutable: IDebugAdapterExecutable, private debugType: string, private readonly outputService?: IOutputService) {\n\t\tsuper();\n\t}\n\n\tasync startSession(): Promise<void> {\n\n\t\tconst command = this.adapterExecutable.command;\n\t\tconst args = this.adapterExecutable.args;\n\t\tconst options = this.adapterExecutable.options || {};\n\n\t\ttry {\n\t\t\t// verify executables asynchronously\n\t\t\tif (command) {\n\t\t\t\tif (path.isAbsolute(command)) {\n\t\t\t\t\tconst commandExists = await exists(command);\n\t\t\t\t\tif (!commandExists) {\n\t\t\t\t\t\tthrow new Error(nls.localize('debugAdapterBinNotFound', \"Debug adapter executable '{0}' does not exist.\", command));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// relative path\n\t\t\t\t\tif (command.indexOf('/') < 0 && command.indexOf('\\\\') < 0) {\n\t\t\t\t\t\t// no separators: command looks like a runtime name like 'node' or 'mono'\n\t\t\t\t\t\t// TODO: check that the runtime is available on PATH\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(nls.localize({ key: 'debugAdapterCannotDetermineExecutable', comment: ['Adapter executable file not found'] },\n\t\t\t\t\t\"Cannot determine executable for debug adapter '{0}'.\", this.debugType));\n\t\t\t}\n\n\t\t\tlet env = objects.mixin({}, process.env);\n\t\t\tif (options.env) {\n\t\t\t\tenv = objects.mixin(env, options.env);\n\t\t\t}\n\t\t\tdelete env.VSCODE_PREVENT_FOREIGN_INSPECT;\n\n\t\t\tif (command === 'node') {\n\t\t\t\tif (Array.isArray(args) && args.length > 0) {\n\t\t\t\t\tconst isElectron = !!process.env['ELECTRON_RUN_AS_NODE'] || !!process.versions['electron'];\n\t\t\t\t\tconst forkOptions: cp.ForkOptions = {\n\t\t\t\t\t\tenv: env,\n\t\t\t\t\t\texecArgv: isElectron ? ['-e', 'delete process.env.ELECTRON_RUN_AS_NODE;require(process.argv[1])'] : [],\n\t\t\t\t\t\tsilent: true\n\t\t\t\t\t};\n\t\t\t\t\tif (options.cwd) {\n\t\t\t\t\t\tforkOptions.cwd = options.cwd;\n\t\t\t\t\t}\n\t\t\t\t\tconst child = cp.fork(args[0], args.slice(1), forkOptions);\n\t\t\t\t\tif (!child.pid) {\n\t\t\t\t\t\tthrow new Error(nls.localize('unableToLaunchDebugAdapter', \"Unable to launch debug adapter from '{0}'.\", args[0]));\n\t\t\t\t\t}\n\t\t\t\t\tthis.serverProcess = child;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(nls.localize('unableToLaunchDebugAdapterNoArgs', \"Unable to launch debug adapter.\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst spawnOptions: cp.SpawnOptions = {\n\t\t\t\t\tenv: env\n\t\t\t\t};\n\t\t\t\tif (options.cwd) {\n\t\t\t\t\tspawnOptions.cwd = options.cwd;\n\t\t\t\t}\n\t\t\t\tthis.serverProcess = cp.spawn(command, args, spawnOptions);\n\t\t\t}\n\n\t\t\tthis.serverProcess.on('error', err => {\n\t\t\t\tthis._onError.fire(err);\n\t\t\t});\n\t\t\tthis.serverProcess.on('exit', (code, signal) => {\n\t\t\t\tthis._onExit.fire(code);\n\t\t\t});\n\n\t\t\tthis.serverProcess.stdout.on('close', () => {\n\t\t\t\tthis._onError.fire(new Error('read error'));\n\t\t\t});\n\t\t\tthis.serverProcess.stdout.on('error', error => {\n\t\t\t\tthis._onError.fire(error);\n\t\t\t});\n\n\t\t\tthis.serverProcess.stdin.on('error', error => {\n\t\t\t\tthis._onError.fire(error);\n\t\t\t});\n\n\t\t\tconst outputService = this.outputService;\n\t\t\tif (outputService) {\n\t\t\t\tconst sanitize = (s: string) => s.toString().replace(/\\r?\\n$/mg, '');\n\t\t\t\t// this.serverProcess.stdout.on('data', (data: string) => {\n\t\t\t\t// \tconsole.log('%c' + sanitize(data), 'background: #ddd; font-style: italic;');\n\t\t\t\t// });\n\t\t\t\tthis.serverProcess.stderr.on('data', (data: string) => {\n\t\t\t\t\tconst channel = outputService.getChannel(ExtensionsChannelId);\n\t\t\t\t\tif (channel) {\n\t\t\t\t\t\tchannel.append(sanitize(data));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// finally connect to the DA\n\t\t\tthis.connect(this.serverProcess.stdout, this.serverProcess.stdin);\n\n\t\t} catch (err) {\n\t\t\tthis._onError.fire(err);\n\t\t}\n\t}\n\n\tstopSession(): Promise<void> {\n\n\t\t// Cancel all sent promises on disconnect so debug trees are not left in a broken state #3666.\n\t\tthis.cancelPending();\n\n\t\tif (!this.serverProcess) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// when killing a process in windows its child\n\t\t// processes are *not* killed but become root\n\t\t// processes. Therefore we use TASKKILL.EXE\n\t\tif (platform.isWindows) {\n\t\t\treturn new Promise<void>((c, e) => {\n\t\t\t\tconst killer = cp.exec(`taskkill /F /T /PID ${this.serverProcess.pid}`, function (err, stdout, stderr) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn e(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tkiller.on('exit', c);\n\t\t\t\tkiller.on('error', e);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.serverProcess.kill('SIGTERM');\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t}\n\n\tprivate static extract(platformContribution: IPlatformSpecificAdapterContribution, extensionFolderPath: string): IDebuggerContribution | undefined {\n\t\tif (!platformContribution) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result: IDebuggerContribution = Object.create(null);\n\t\tif (platformContribution.runtime) {\n\t\t\tif (platformContribution.runtime.indexOf('./') === 0) {\t// TODO\n\t\t\t\tresult.runtime = path.join(extensionFolderPath, platformContribution.runtime);\n\t\t\t} else {\n\t\t\t\tresult.runtime = platformContribution.runtime;\n\t\t\t}\n\t\t}\n\t\tif (platformContribution.runtimeArgs) {\n\t\t\tresult.runtimeArgs = platformContribution.runtimeArgs;\n\t\t}\n\t\tif (platformContribution.program) {\n\t\t\tif (!path.isAbsolute(platformContribution.program)) {\n\t\t\t\tresult.program = path.join(extensionFolderPath, platformContribution.program);\n\t\t\t} else {\n\t\t\t\tresult.program = platformContribution.program;\n\t\t\t}\n\t\t}\n\t\tif (platformContribution.args) {\n\t\t\tresult.args = platformContribution.args;\n\t\t}\n\n\t\tconst contribution = platformContribution as IDebuggerContribution;\n\n\t\tif (contribution.win) {\n\t\t\tresult.win = ExecutableDebugAdapter.extract(contribution.win, extensionFolderPath);\n\t\t}\n\t\tif (contribution.winx86) {\n\t\t\tresult.winx86 = ExecutableDebugAdapter.extract(contribution.winx86, extensionFolderPath);\n\t\t}\n\t\tif (contribution.windows) {\n\t\t\tresult.windows = ExecutableDebugAdapter.extract(contribution.windows, extensionFolderPath);\n\t\t}\n\t\tif (contribution.osx) {\n\t\t\tresult.osx = ExecutableDebugAdapter.extract(contribution.osx, extensionFolderPath);\n\t\t}\n\t\tif (contribution.linux) {\n\t\t\tresult.linux = ExecutableDebugAdapter.extract(contribution.linux, extensionFolderPath);\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic platformAdapterExecutable(extensionDescriptions: IExtensionDescription[], debugType: string): IDebugAdapterExecutable | undefined {\n\t\tlet result: IDebuggerContribution = Object.create(null);\n\t\tdebugType = debugType.toLowerCase();\n\n\t\t// merge all contributions into one\n\t\tfor (const ed of extensionDescriptions) {\n\t\t\tif (ed.contributes) {\n\t\t\t\tconst debuggers = <IDebuggerContribution[]>ed.contributes['debuggers'];\n\t\t\t\tif (debuggers && debuggers.length > 0) {\n\t\t\t\t\tdebuggers.filter(dbg => typeof dbg.type === 'string' && strings.equalsIgnoreCase(dbg.type, debugType)).forEach(dbg => {\n\t\t\t\t\t\t// extract relevant attributes and make them absolute where needed\n\t\t\t\t\t\tconst extractedDbg = ExecutableDebugAdapter.extract(dbg, ed.extensionLocation.fsPath);\n\n\t\t\t\t\t\t// merge\n\t\t\t\t\t\tresult = objects.mixin(result, extractedDbg, ed.isBuiltin);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// select the right platform\n\t\tlet platformInfo: IPlatformSpecificAdapterContribution | undefined;\n\t\tif (platform.isWindows && !process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432')) {\n\t\t\tplatformInfo = result.winx86 || result.win || result.windows;\n\t\t} else if (platform.isWindows) {\n\t\t\tplatformInfo = result.win || result.windows;\n\t\t} else if (platform.isMacintosh) {\n\t\t\tplatformInfo = result.osx;\n\t\t} else if (platform.isLinux) {\n\t\t\tplatformInfo = result.linux;\n\t\t}\n\t\tplatformInfo = platformInfo || result;\n\n\t\t// these are the relevant attributes\n\t\tlet program = platformInfo.program || result.program;\n\t\tconst args = platformInfo.args || result.args;\n\t\tlet runtime = platformInfo.runtime || result.runtime;\n\t\tconst runtimeArgs = platformInfo.runtimeArgs || result.runtimeArgs;\n\n\t\tif (runtime) {\n\t\t\treturn {\n\t\t\t\ttype: 'executable',\n\t\t\t\tcommand: runtime,\n\t\t\t\targs: (runtimeArgs || []).concat(typeof program === 'string' ? [program] : []).concat(args || [])\n\t\t\t};\n\t\t} else if (program) {\n\t\t\treturn {\n\t\t\t\ttype: 'executable',\n\t\t\t\tcommand: program,\n\t\t\t\targs: args || []\n\t\t\t};\n\t\t}\n\n\t\t// nothing found\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as env from 'vs/base/common/platform';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { ITerminalLauncher, ITerminalSettings } from 'vs/workbench/contrib/debug/common/debug';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nconst TERMINAL_TITLE = nls.localize('console.title', \"VS Code Console\");\n\nlet terminalLauncher: ITerminalLauncher | undefined = undefined;\n\nexport function getTerminalLauncher() {\n\tif (!terminalLauncher) {\n\t\tif (env.isWindows) {\n\t\t\tterminalLauncher = new WinTerminalService();\n\t\t} else if (env.isMacintosh) {\n\t\t\tterminalLauncher = new MacTerminalService();\n\t\t} else if (env.isLinux) {\n\t\t\tterminalLauncher = new LinuxTerminalService();\n\t\t}\n\t}\n\treturn terminalLauncher;\n}\n\nlet _DEFAULT_TERMINAL_LINUX_READY: Promise<string> | null = null;\nexport function getDefaultTerminalLinuxReady(): Promise<string> {\n\tif (!_DEFAULT_TERMINAL_LINUX_READY) {\n\t\t_DEFAULT_TERMINAL_LINUX_READY = new Promise<string>(c => {\n\t\t\tif (env.isLinux) {\n\t\t\t\tPromise.all<any>([pfs.exists('/etc/debian_version'), process.lazyEnv]).then(([isDebian]) => {\n\t\t\t\t\tif (isDebian) {\n\t\t\t\t\t\tc('x-terminal-emulator');\n\t\t\t\t\t} else if (process.env.DESKTOP_SESSION === 'gnome' || process.env.DESKTOP_SESSION === 'gnome-classic') {\n\t\t\t\t\t\tc('gnome-terminal');\n\t\t\t\t\t} else if (process.env.DESKTOP_SESSION === 'kde-plasma') {\n\t\t\t\t\t\tc('konsole');\n\t\t\t\t\t} else if (process.env.COLORTERM) {\n\t\t\t\t\t\tc(process.env.COLORTERM);\n\t\t\t\t\t} else if (process.env.TERM) {\n\t\t\t\t\t\tc(process.env.TERM);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc('xterm');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tc('xterm');\n\t\t});\n\t}\n\treturn _DEFAULT_TERMINAL_LINUX_READY;\n}\n\nlet _DEFAULT_TERMINAL_WINDOWS: string | null = null;\nexport function getDefaultTerminalWindows(): string {\n\tif (!_DEFAULT_TERMINAL_WINDOWS) {\n\t\tconst isWoW64 = !!process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\t\t_DEFAULT_TERMINAL_WINDOWS = `${process.env.windir ? process.env.windir : 'C:\\\\Windows'}\\\\${isWoW64 ? 'Sysnative' : 'System32'}\\\\cmd.exe`;\n\t}\n\treturn _DEFAULT_TERMINAL_WINDOWS;\n}\n\nabstract class TerminalLauncher implements ITerminalLauncher {\n\trunInTerminal(args: DebugProtocol.RunInTerminalRequestArguments, config: ITerminalSettings): Promise<number | undefined> {\n\t\treturn this.runInTerminal0(args.title!, args.cwd, args.args, args.env || {}, config);\n\t}\n\n\tabstract runInTerminal0(title: string, dir: string, args: string[], envVars: env.IProcessEnvironment | {}, config): Promise<number | undefined>;\n}\n\nclass WinTerminalService extends TerminalLauncher {\n\n\tprivate static readonly CMD = 'cmd.exe';\n\n\trunInTerminal0(title: string, dir: string, args: string[], envVars: env.IProcessEnvironment, configuration: ITerminalSettings): Promise<number | undefined> {\n\n\t\tconst exec = configuration.external.windowsExec || getDefaultTerminalWindows();\n\n\t\treturn new Promise<number | undefined>((c, e) => {\n\n\t\t\tconst title = `\"${dir} - ${TERMINAL_TITLE}\"`;\n\t\t\tconst command = `\"\"${args.join('\" \"')}\" & pause\"`; // use '|' to only pause on non-zero exit code\n\n\t\t\tconst cmdArgs = [\n\t\t\t\t'/c', 'start', title, '/wait', exec, '/c', command\n\t\t\t];\n\n\t\t\t// merge environment variables into a copy of the process.env\n\t\t\tconst env = assign({}, process.env, envVars);\n\n\t\t\t// delete environment variables that have a null value\n\t\t\tObject.keys(env).filter(v => env[v] === null).forEach(key => delete env[key]);\n\n\t\t\tconst options: any = {\n\t\t\t\tcwd: dir,\n\t\t\t\tenv: env,\n\t\t\t\twindowsVerbatimArguments: true\n\t\t\t};\n\n\t\t\tconst cmd = cp.spawn(WinTerminalService.CMD, cmdArgs, options);\n\t\t\tcmd.on('error', e);\n\n\t\t\tc(undefined);\n\t\t});\n\t}\n}\n\nclass MacTerminalService extends TerminalLauncher {\n\n\tprivate static readonly DEFAULT_TERMINAL_OSX = 'Terminal.app';\n\tprivate static readonly OSASCRIPT = '/usr/bin/osascript';\t// osascript is the AppleScript interpreter on OS X\n\n\trunInTerminal0(title: string, dir: string, args: string[], envVars: env.IProcessEnvironment, configuration: ITerminalSettings): Promise<number | undefined> {\n\n\t\tconst terminalApp = configuration.external.osxExec || MacTerminalService.DEFAULT_TERMINAL_OSX;\n\n\t\treturn new Promise<number | undefined>((c, e) => {\n\n\t\t\tif (terminalApp === MacTerminalService.DEFAULT_TERMINAL_OSX || terminalApp === 'iTerm.app') {\n\n\t\t\t\t// On OS X we launch an AppleScript that creates (or reuses) a Terminal window\n\t\t\t\t// and then launches the program inside that window.\n\n\t\t\t\tconst script = terminalApp === MacTerminalService.DEFAULT_TERMINAL_OSX ? 'TerminalHelper' : 'iTermHelper';\n\t\t\t\tconst scriptpath = getPathFromAmdModule(require, `vs/workbench/contrib/externalTerminal/electron-browser/${script}.scpt`);\n\n\t\t\t\tconst osaArgs = [\n\t\t\t\t\tscriptpath,\n\t\t\t\t\t'-t', title || TERMINAL_TITLE,\n\t\t\t\t\t'-w', dir,\n\t\t\t\t];\n\n\t\t\t\tfor (let a of args) {\n\t\t\t\t\tosaArgs.push('-a');\n\t\t\t\t\tosaArgs.push(a);\n\t\t\t\t}\n\n\t\t\t\tif (envVars) {\n\t\t\t\t\tfor (let key in envVars) {\n\t\t\t\t\t\tconst value = envVars[key];\n\t\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\t\tosaArgs.push('-u');\n\t\t\t\t\t\t\tosaArgs.push(key);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tosaArgs.push('-e');\n\t\t\t\t\t\t\tosaArgs.push(`${key}=${value}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stderr = '';\n\t\t\t\tconst osa = cp.spawn(MacTerminalService.OSASCRIPT, osaArgs);\n\t\t\t\tosa.on('error', e);\n\t\t\t\tosa.stderr.on('data', (data) => {\n\t\t\t\t\tstderr += data.toString();\n\t\t\t\t});\n\t\t\t\tosa.on('exit', (code: number) => {\n\t\t\t\t\tif (code === 0) {\t// OK\n\t\t\t\t\t\tc(undefined);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (stderr) {\n\t\t\t\t\t\t\tconst lines = stderr.split('\\n', 1);\n\t\t\t\t\t\t\te(new Error(lines[0]));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\te(new Error(nls.localize('mac.terminal.script.failed', \"Script '{0}' failed with exit code {1}\", script, code)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\te(new Error(nls.localize('mac.terminal.type.not.supported', \"'{0}' not supported\", terminalApp)));\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass LinuxTerminalService extends TerminalLauncher {\n\n\tprivate static readonly WAIT_MESSAGE = nls.localize('press.any.key', \"Press any key to continue...\");\n\n\trunInTerminal0(title: string, dir: string, args: string[], envVars: env.IProcessEnvironment, configuration: ITerminalSettings): Promise<number | undefined> {\n\n\t\tconst terminalConfig = configuration.external;\n\t\tconst execThenable: Promise<string> = terminalConfig.linuxExec ? Promise.resolve(terminalConfig.linuxExec) : getDefaultTerminalLinuxReady();\n\n\t\treturn new Promise<number | undefined>((c, e) => {\n\n\t\t\tlet termArgs: string[] = [];\n\t\t\t//termArgs.push('--title');\n\t\t\t//termArgs.push(`\"${TERMINAL_TITLE}\"`);\n\t\t\texecThenable.then(exec => {\n\t\t\t\tif (exec.indexOf('gnome-terminal') >= 0) {\n\t\t\t\t\ttermArgs.push('-x');\n\t\t\t\t} else {\n\t\t\t\t\ttermArgs.push('-e');\n\t\t\t\t}\n\t\t\t\ttermArgs.push('bash');\n\t\t\t\ttermArgs.push('-c');\n\n\t\t\t\tconst bashCommand = `${quote(args)}; echo; read -p \"${LinuxTerminalService.WAIT_MESSAGE}\" -n1;`;\n\t\t\t\ttermArgs.push(`''${bashCommand}''`);\t// wrapping argument in two sets of ' because node is so \"friendly\" that it removes one set...\n\n\t\t\t\t// merge environment variables into a copy of the process.env\n\t\t\t\tconst env = assign({}, process.env, envVars);\n\n\t\t\t\t// delete environment variables that have a null value\n\t\t\t\tObject.keys(env).filter(v => env[v] === null).forEach(key => delete env[key]);\n\n\t\t\t\tconst options: any = {\n\t\t\t\t\tcwd: dir,\n\t\t\t\t\tenv: env\n\t\t\t\t};\n\n\t\t\t\tlet stderr = '';\n\t\t\t\tconst cmd = cp.spawn(exec, termArgs, options);\n\t\t\t\tcmd.on('error', e);\n\t\t\t\tcmd.stderr.on('data', (data) => {\n\t\t\t\t\tstderr += data.toString();\n\t\t\t\t});\n\t\t\t\tcmd.on('exit', (code: number) => {\n\t\t\t\t\tif (code === 0) {\t// OK\n\t\t\t\t\t\tc(undefined);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (stderr) {\n\t\t\t\t\t\t\tconst lines = stderr.split('\\n', 1);\n\t\t\t\t\t\t\te(new Error(lines[0]));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\te(new Error(nls.localize('linux.term.failed', \"'{0}' failed with exit code {1}\", exec, code)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * Quote args if necessary and combine into a space separated string.\n */\nfunction quote(args: string[]): string {\n\tlet r = '';\n\tfor (let a of args) {\n\t\tif (a.indexOf(' ') >= 0) {\n\t\t\tr += '\"' + a + '\"';\n\t\t} else {\n\t\t\tr += a;\n\t\t}\n\t\tr += ' ';\n\t}\n\treturn r;\n}\n\n\nexport function hasChildProcesses(processId: number): boolean {\n\tif (processId) {\n\t\ttry {\n\t\t\t// if shell has at least one child process, assume that shell is busy\n\t\t\tif (env.isWindows) {\n\t\t\t\tconst result = cp.spawnSync('wmic', ['process', 'get', 'ParentProcessId']);\n\t\t\t\tif (result.stdout) {\n\t\t\t\t\tconst pids = result.stdout.toString().split('\\r\\n');\n\t\t\t\t\tif (!pids.some(p => parseInt(p) === processId)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst result = cp.spawnSync('/usr/bin/pgrep', ['-lP', String(processId)]);\n\t\t\t\tif (result.stdout) {\n\t\t\t\t\tconst r = result.stdout.toString().trim();\n\t\t\t\t\tif (r.length === 0 || r.indexOf(' tmux') >= 0) { // ignore 'tmux'; see #43683\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\t// silently ignore\n\t\t}\n\t}\n\t// fall back to safe side\n\treturn true;\n}\n\nconst enum ShellType { cmd, powershell, bash }\n\nexport function prepareCommand(args: DebugProtocol.RunInTerminalRequestArguments, config: ITerminalSettings): string {\n\n\tlet shellType: ShellType;\n\n\t// get the shell configuration for the current platform\n\tlet shell: string;\n\tconst shell_config = config.integrated.shell;\n\tif (env.isWindows) {\n\t\tshell = shell_config.windows;\n\t\tshellType = ShellType.cmd;\n\t} else if (env.isLinux) {\n\t\tshell = shell_config.linux;\n\t\tshellType = ShellType.bash;\n\t} else if (env.isMacintosh) {\n\t\tshell = shell_config.osx;\n\t\tshellType = ShellType.bash;\n\t} else {\n\t\tthrow new Error('Unknown platform');\n\t}\n\n\t// try to determine the shell type\n\tshell = shell.trim().toLowerCase();\n\tif (shell.indexOf('powershell') >= 0 || shell.indexOf('pwsh') >= 0) {\n\t\tshellType = ShellType.powershell;\n\t} else if (shell.indexOf('cmd.exe') >= 0) {\n\t\tshellType = ShellType.cmd;\n\t} else if (shell.indexOf('bash') >= 0) {\n\t\tshellType = ShellType.bash;\n\t} else if (shell.indexOf('git\\\\bin\\\\bash.exe') >= 0) {\n\t\tshellType = ShellType.bash;\n\t}\n\n\tlet quote: (s: string) => string;\n\tlet command = '';\n\n\tswitch (shellType) {\n\n\t\tcase ShellType.powershell:\n\n\t\t\tquote = (s: string) => {\n\t\t\t\ts = s.replace(/\\'/g, '\\'\\'');\n\t\t\t\treturn `'${s}'`;\n\t\t\t\t//return s.indexOf(' ') >= 0 || s.indexOf('\\'') >= 0 || s.indexOf('\"') >= 0 ? `'${s}'` : s;\n\t\t\t};\n\n\t\t\tif (args.cwd) {\n\t\t\t\tcommand += `cd '${args.cwd}'; `;\n\t\t\t}\n\t\t\tif (args.env) {\n\t\t\t\tfor (let key in args.env) {\n\t\t\t\t\tconst value = args.env[key];\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tcommand += `Remove-Item env:${key}; `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcommand += `\\${env:${key}}='${value}'; `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (args.args && args.args.length > 0) {\n\t\t\t\tconst cmd = quote(args.args.shift()!);\n\t\t\t\tcommand += (cmd[0] === '\\'') ? `& ${cmd} ` : `${cmd} `;\n\t\t\t\tfor (let a of args.args) {\n\t\t\t\t\tcommand += `${quote(a)} `;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase ShellType.cmd:\n\n\t\t\tquote = (s: string) => {\n\t\t\t\ts = s.replace(/\\\"/g, '\"\"');\n\t\t\t\treturn (s.indexOf(' ') >= 0 || s.indexOf('\"') >= 0) ? `\"${s}\"` : s;\n\t\t\t};\n\n\t\t\tif (args.cwd) {\n\t\t\t\tcommand += `cd ${quote(args.cwd)} && `;\n\t\t\t}\n\t\t\tif (args.env) {\n\t\t\t\tcommand += 'cmd /C \"';\n\t\t\t\tfor (let key in args.env) {\n\t\t\t\t\tlet value = args.env[key];\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tcommand += `set \"${key}=\" && `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = value.replace(/[\\^\\&]/g, s => `^${s}`);\n\t\t\t\t\t\tcommand += `set \"${key}=${value}\" && `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let a of args.args) {\n\t\t\t\tcommand += `${quote(a)} `;\n\t\t\t}\n\t\t\tif (args.env) {\n\t\t\t\tcommand += '\"';\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase ShellType.bash:\n\n\t\t\tquote = (s: string) => {\n\t\t\t\ts = s.replace(/\\\"/g, '\\\\\"');\n\t\t\t\treturn (s.indexOf(' ') >= 0 || s.indexOf('\\\\') >= 0) ? `\"${s}\"` : s;\n\t\t\t};\n\n\t\t\tconst hardQuote = (s: string) => {\n\t\t\t\treturn /[^\\w@%\\/+=,.:^-]/.test(s) ? `'${s.replace(/'/g, '\\'\\\\\\'\\'')}'` : s;\n\t\t\t};\n\n\t\t\tif (args.cwd) {\n\t\t\t\tcommand += `cd ${quote(args.cwd)} ; `;\n\t\t\t}\n\t\t\tif (args.env) {\n\t\t\t\tcommand += 'env';\n\t\t\t\tfor (let key in args.env) {\n\t\t\t\t\tconst value = args.env[key];\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tcommand += ` -u ${hardQuote(key)}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcommand += ` ${hardQuote(`${key}=${value}`)}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcommand += ' ';\n\t\t\t}\n\t\t\tfor (let a of args.args) {\n\t\t\t\tcommand += `${quote(a)} `;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn command;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport { RawContextKey, ContextKeyExpr, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { FindReplaceState } from 'vs/editor/contrib/find/findState';\n\nexport const TERMINAL_PANEL_ID = 'workbench.panel.terminal';\n\n/** A context key that is set when there is at least one opened integrated terminal. */\nexport const KEYBINDING_CONTEXT_TERMINAL_IS_OPEN = new RawContextKey<boolean>('terminalIsOpen', false);\n/** A context key that is set when the integrated terminal has focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FOCUS = new RawContextKey<boolean>('terminalFocus', false);\n/** A context key that is set when the integrated terminal does not have focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED: ContextKeyExpr = KEYBINDING_CONTEXT_TERMINAL_FOCUS.toNegated();\n\n/** A keybinding context key that is set when the integrated terminal has text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED = new RawContextKey<boolean>('terminalTextSelected', false);\n/** A keybinding context key that is set when the integrated terminal does not have text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED: ContextKeyExpr = KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED.toNegated();\n\n/**  A context key that is set when the find widget in integrated terminal is visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_VISIBLE = new RawContextKey<boolean>('terminalFindWidgetVisible', false);\n/**  A context key that is set when the find widget in integrated terminal is not visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_NOT_VISIBLE: ContextKeyExpr = KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_VISIBLE.toNegated();\n/**  A context key that is set when the find widget find input in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_INPUT_FOCUSED = new RawContextKey<boolean>('terminalFindWidgetInputFocused', false);\n/**  A context key that is set when the find widget in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_FOCUSED = new RawContextKey<boolean>('terminalFindWidgetFocused', false);\n/**  A context key that is set when the find widget find input in integrated terminal is not focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_INPUT_NOT_FOCUSED: ContextKeyExpr = KEYBINDING_CONTEXT_TERMINAL_FIND_WIDGET_INPUT_FOCUSED.toNegated();\n\nexport const IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY = 'terminal.integrated.isWorkspaceShellAllowed';\nexport const NEVER_SUGGEST_SELECT_WINDOWS_SHELL_STORAGE_KEY = 'terminal.integrated.neverSuggestSelectWindowsShell';\nexport const NEVER_MEASURE_RENDER_TIME_STORAGE_KEY = 'terminal.integrated.neverMeasureRenderTime';\n\n// The creation of extension host terminals is delayed by this value (milliseconds). The purpose of\n// this delay is to allow the terminal instance to initialize correctly and have its ID set before\n// trying to create the corressponding object on the ext host.\nexport const EXT_HOST_CREATION_DELAY = 100;\n\nexport const ITerminalService = createDecorator<ITerminalService>('terminalService');\n\nexport const TerminalCursorStyle = {\n\tBLOCK: 'block',\n\tLINE: 'line',\n\tUNDERLINE: 'underline'\n};\n\nexport const TERMINAL_CONFIG_SECTION = 'terminal.integrated';\n\nexport const DEFAULT_LETTER_SPACING = 0;\nexport const MINIMUM_LETTER_SPACING = -5;\nexport const DEFAULT_LINE_HEIGHT = 1;\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n\nexport interface ITerminalConfiguration {\n\tshell: {\n\t\tlinux: string;\n\t\tosx: string;\n\t\twindows: string;\n\t};\n\tshellArgs: {\n\t\tlinux: string[];\n\t\tosx: string[];\n\t\twindows: string[];\n\t};\n\tmacOptionIsMeta: boolean;\n\tmacOptionClickForcesSelection: boolean;\n\trendererType: 'auto' | 'canvas' | 'dom';\n\trightClickBehavior: 'default' | 'copyPaste' | 'selectWord';\n\tcursorBlinking: boolean;\n\tcursorStyle: string;\n\tdrawBoldTextInBrightColors: boolean;\n\tfontFamily: string;\n\tfontWeight: FontWeight;\n\tfontWeightBold: FontWeight;\n\t// fontLigatures: boolean;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tsetLocaleVariables: boolean;\n\tscrollback: number;\n\tcommandsToSkipShell: string[];\n\tcwd: string;\n\tconfirmOnExit: boolean;\n\tenableBell: boolean;\n\tenv: {\n\t\tlinux: { [key: string]: string };\n\t\tosx: { [key: string]: string };\n\t\twindows: { [key: string]: string };\n\t};\n\tshowExitAlert: boolean;\n\texperimentalBufferImpl: 'JsArray' | 'TypedArray';\n\tsplitCwd: 'workspaceRoot' | 'initial' | 'inherited';\n\twindowsEnableConpty: boolean;\n}\n\nexport interface ITerminalConfigHelper {\n\tconfig: ITerminalConfiguration;\n\tconfigFontIsMonospace(): boolean;\n\tgetFont(): ITerminalFont;\n\t/**\n\t * Merges the default shell path and args into the provided launch configuration\n\t */\n\tmergeDefaultShellPathAndArgs(shell: IShellLaunchConfig, platformOverride?: platform.Platform): void;\n\t/** Sets whether a workspace shell configuration is allowed or not */\n\tsetWorkspaceShellAllowed(isAllowed: boolean): void;\n\tcheckWorkspaceShellPermissions(platformOverride?: platform.Platform): boolean;\n}\n\nexport interface ITerminalFont {\n\tfontFamily: string;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tcharWidth?: number;\n\tcharHeight?: number;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null;\n}\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (eg. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: boolean | string;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, a trailing \\n is added at the end of the string.\n\t * This allows for example the terminal instance to display a styled message as the first line\n\t * of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string;\n\n\t/**\n\t * When true the terminal will be created with no process. This is primarily used to give\n\t * extensions full control over the terminal.\n\t */\n\tisRendererOnly?: boolean;\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n}\n\nexport interface ITerminalService {\n\t_serviceBrand: any;\n\n\tactiveTabIndex: number;\n\tconfigHelper: ITerminalConfigHelper;\n\tonActiveTabChanged: Event<void>;\n\tonTabDisposed: Event<ITerminalTab>;\n\tonInstanceCreated: Event<ITerminalInstance>;\n\tonInstanceDisposed: Event<ITerminalInstance>;\n\tonInstanceProcessIdReady: Event<ITerminalInstance>;\n\tonInstanceDimensionsChanged: Event<ITerminalInstance>;\n\tonInstanceRequestExtHostProcess: Event<ITerminalProcessExtHostRequest>;\n\tonInstancesChanged: Event<void>;\n\tonInstanceTitleChanged: Event<ITerminalInstance>;\n\tonActiveInstanceChanged: Event<ITerminalInstance | undefined>;\n\tterminalInstances: ITerminalInstance[];\n\tterminalTabs: ITerminalTab[];\n\n\t/**\n\t * Creates a terminal.\n\t * @param shell The shell launch configuration to use.\n\t * @param wasNewTerminalAction Whether this was triggered by a new terminal action, if so a\n\t * default shell selection dialog may display.\n\t */\n\tcreateTerminal(shell?: IShellLaunchConfig, wasNewTerminalAction?: boolean): ITerminalInstance;\n\n\t/**\n\t * Creates a terminal renderer.\n\t * @param name The name of the terminal.\n\t */\n\tcreateTerminalRenderer(name: string): ITerminalInstance;\n\n\t/**\n\t * Creates a raw terminal instance, this should not be used outside of the terminal part.\n\t */\n\tcreateInstance(terminalFocusContextKey: IContextKey<boolean>, configHelper: ITerminalConfigHelper, container: HTMLElement | undefined, shellLaunchConfig: IShellLaunchConfig, doCreateProcess: boolean): ITerminalInstance;\n\tgetInstanceFromId(terminalId: number): ITerminalInstance;\n\tgetInstanceFromIndex(terminalIndex: number): ITerminalInstance;\n\tgetTabLabels(): string[];\n\tgetActiveInstance(): ITerminalInstance | null;\n\tsetActiveInstance(terminalInstance: ITerminalInstance): void;\n\tsetActiveInstanceByIndex(terminalIndex: number): void;\n\tgetActiveOrCreateInstance(wasNewTerminalAction?: boolean): ITerminalInstance;\n\tsplitInstance(instance: ITerminalInstance, shell?: IShellLaunchConfig): ITerminalInstance | null;\n\n\tgetActiveTab(): ITerminalTab | null;\n\tsetActiveTabToNext(): void;\n\tsetActiveTabToPrevious(): void;\n\tsetActiveTabByIndex(tabIndex: number): void;\n\n\tshowPanel(focus?: boolean): Promise<void>;\n\thidePanel(): void;\n\tfocusFindWidget(): Promise<void>;\n\thideFindWidget(): void;\n\tgetFindState(): FindReplaceState;\n\tfindNext(): void;\n\tfindPrevious(): void;\n\n\tsetContainers(panelContainer: HTMLElement, terminalContainer: HTMLElement): void;\n\tselectDefaultWindowsShell(): Promise<string | undefined>;\n\tsetWorkspaceShellAllowed(isAllowed: boolean): void;\n\n\t/**\n\t * Takes a path and returns the properly escaped path to send to the terminal.\n\t * On Windows, this included trying to prepare the path for WSL if needed.\n\t *\n\t * @param executable The executable off the shellLaunchConfig\n\t * @param title The terminal's title\n\t * @param path The path to be escaped and formatted.\n\t * @returns An escaped version of the path to be execuded in the terminal.\n\t */\n\tpreparePathForTerminalAsync(path: string, executable: string | undefined, title: string): Promise<string>;\n\n\trequestExtHostProcess(proxy: ITerminalProcessExtHostProxy, shellLaunchConfig: IShellLaunchConfig, activeWorkspaceRootUri: URI, cols: number, rows: number): void;\n}\n\nexport const enum Direction {\n\tLeft = 0,\n\tRight = 1,\n\tUp = 2,\n\tDown = 3\n}\n\nexport interface ITerminalTab {\n\tactiveInstance: ITerminalInstance | null;\n\tterminalInstances: ITerminalInstance[];\n\ttitle: string;\n\tonDisposed: Event<ITerminalTab>;\n\tonInstancesChanged: Event<void>;\n\n\tfocusPreviousPane(): void;\n\tfocusNextPane(): void;\n\tresizePane(direction: Direction): void;\n\tsetActiveInstanceByIndex(index: number): void;\n\tattachToElement(element: HTMLElement): void;\n\tsetVisible(visible: boolean): void;\n\tlayout(width: number, height: number): void;\n\taddDisposable(disposable: IDisposable): void;\n\tsplit(terminalFocusContextKey: IContextKey<boolean>, configHelper: ITerminalConfigHelper, shellLaunchConfig: IShellLaunchConfig): ITerminalInstance | undefined;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\treadonly cols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\treadonly rows: number;\n}\n\ninterface ISearchOptions {\n\t/**\n\t * Whether the find should be done as a regex.\n\t */\n\tregex?: boolean;\n\t/**\n\t * Whether only whole words should match.\n\t */\n\twholeWord?: boolean;\n\t/**\n\t * Whether find should pay attention to case.\n\t */\n\tcaseSensitive?: boolean;\n\t/**\n\t * Whether the search should start at the current search position (not the next row)\n\t */\n\tincremental?: boolean;\n}\n\nexport interface ITerminalInstance {\n\t/**\n\t * The ID of the terminal instance, this is an arbitrary number only used to identify the\n\t * terminal instance.\n\t */\n\treadonly id: number;\n\n\treadonly cols: number;\n\treadonly rows: number;\n\n\t/**\n\t * The process ID of the shell process, this is undefined when there is no process associated\n\t * with this terminal.\n\t */\n\tprocessId: number | undefined;\n\n\t/**\n\t * An event that fires when the terminal instance's title changes.\n\t */\n\tonTitleChanged: Event<ITerminalInstance>;\n\n\t/**\n\t * An event that fires when the terminal instance is disposed.\n\t */\n\tonDisposed: Event<ITerminalInstance>;\n\n\tonFocused: Event<ITerminalInstance>;\n\n\tonProcessIdReady: Event<ITerminalInstance>;\n\n\tonRequestExtHostProcess: Event<ITerminalInstance>;\n\n\tonDimensionsChanged: Event<void>;\n\n\tonFocus: Event<ITerminalInstance>;\n\n\t/**\n\t * Attach a listener to the raw data stream coming from the pty, including ANSI escape\n\t * sequences.\n\t */\n\tonData: Event<string>;\n\n\t/**\n\t * Attach a listener to the \"renderer\" input event, this event fires for terminal renderers on\n\t * keystrokes and when the Terminal.sendText extension API is used.\n\t * @param listener The listener function.\n\t */\n\tonRendererInput: Event<string>;\n\n\t/**\n\t * Attach a listener to listen for new lines added to this terminal instance.\n\t *\n\t * @param listener The listener function which takes new line strings added to the terminal,\n\t * excluding ANSI escape sequences. The line event will fire when an LF character is added to\n\t * the terminal (ie. the line is not wrapped). Note that this means that the line data will\n\t * not fire for the last line, until either the line is ended with a LF character of the process\n\t * is exited. The lineData string will contain the fully wrapped line, not containing any LF/CR\n\t * characters.\n\t */\n\tonLineData: Event<string>;\n\n\t/**\n\t * Attach a listener that fires when the terminal's pty process exits. The number in the event\n\t * is the processes' exit code, an exit code of null means the process was killed as a result of\n\t * the ITerminalInstance being disposed.\n\t */\n\tonExit: Event<number>;\n\n\tprocessReady: Promise<void>;\n\n\t/**\n\t * The title of the terminal. This is either title or the process currently running or an\n\t * explicit name given to the terminal instance through the extension API.\n\t */\n\treadonly title: string;\n\n\t/**\n\t * The focus state of the terminal before exiting.\n\t */\n\treadonly hadFocusOnExit: boolean;\n\n\t/**\n\t * False when the title is set by an API or the user. We check this to make sure we\n\t * do not override the title when the process title changes in the terminal.\n\t */\n\tisTitleSetByProcess: boolean;\n\n\t/**\n\t * The shell launch config used to launch the shell.\n\t */\n\treadonly shellLaunchConfig: IShellLaunchConfig;\n\n\t/**\n\t * Whether to disable layout for the terminal. This is useful when the size of the terminal is\n\t * being manipulating (eg. adding a split pane) and we want the terminal to ignore particular\n\t * resize events.\n\t */\n\tdisableLayout: boolean;\n\n\t/**\n\t * An object that tracks when commands are run and enables navigating and selecting between\n\t * them.\n\t */\n\treadonly commandTracker: ITerminalCommandTracker;\n\n\t/**\n\t * Dispose the terminal instance, removing it from the panel/service and freeing up resources.\n\t *\n\t * @param immediate Whether the kill should be immediate or not. Immediate should only be used\n\t * when VS Code is shutting down or in cases where the terminal dispose was user initiated.\n\t * The immediate===false exists to cover an edge case where the final output of the terminal can\n\t * get cut off. If immediate kill any terminal processes immediately.\n\t */\n\tdispose(immediate?: boolean): void;\n\n\t/**\n\t * Indicates that a consumer of a renderer only terminal is finished with it.\n\t *\n\t * @param exitCode The exit code of the terminal. Zero indicates success, non-zero indicates\n\t * failure.\n\t */\n\trendererExit(exitCode: number): void;\n\n\t/**\n\t * Forces the terminal to redraw its viewport.\n\t */\n\tforceRedraw(): void;\n\n\t/**\n\t * Registers a link matcher, allowing custom link patterns to be matched and handled.\n\t * @param regex The regular expression the search for, specifically this searches the\n\t * textContent of the rows. You will want to use \\s to match a space ' ' character for example.\n\t * @param handler The callback when the link is called.\n\t * @param matchIndex The index of the link from the regex.match(html) call. This defaults to 0\n\t * (for regular expressions without capture groups).\n\t * @param validationCallback A callback which can be used to validate the link after it has been\n\t * added to the DOM.\n\t * @return The ID of the new matcher, this can be used to deregister.\n\t */\n\tregisterLinkMatcher(regex: RegExp, handler: (url: string) => void, matchIndex?: number, validationCallback?: (uri: string, callback: (isValid: boolean) => void) => void): number;\n\n\t/**\n\t * Deregisters a link matcher if it has been registered.\n\t * @param matcherId The link matcher's ID (returned after register)\n\t * @return Whether a link matcher was found and deregistered.\n\t */\n\tderegisterLinkMatcher(matcherId: number): void;\n\n\t/**\n\t * Check if anything is selected in terminal.\n\t */\n\thasSelection(): boolean;\n\n\t/**\n\t * Copies the terminal selection to the clipboard.\n\t */\n\tcopySelection(): void;\n\n\t/**\n\t * Current selection in the terminal.\n\t */\n\treadonly selection: string | undefined;\n\n\t/**\n\t * Clear current selection.\n\t */\n\tclearSelection(): void;\n\n\t/**\n\t * Select all text in the terminal.\n\t */\n\tselectAll(): void;\n\n\t/**\n\t * Find the next instance of the term\n\t*/\n\tfindNext(term: string, searchOptions: ISearchOptions): boolean;\n\n\t/**\n\t * Find the previous instance of the term\n\t */\n\tfindPrevious(term: string, searchOptions: ISearchOptions): boolean;\n\n\t/**\n\t * Notifies the terminal that the find widget's focus state has been changed.\n\t */\n\tnotifyFindWidgetFocusChanged(isFocused: boolean): void;\n\n\t/**\n\t * Focuses the terminal instance if it's able to (xterm.js instance exists).\n\t *\n\t * @param focus Force focus even if there is a selection.\n\t */\n\tfocus(force?: boolean): void;\n\n\t/**\n\t * Focuses the terminal instance when it's ready (the xterm.js instance is created). Use this\n\t * when the terminal is being shown.\n\t *\n\t * @param focus Force focus even if there is a selection.\n\t */\n\tfocusWhenReady(force?: boolean): Promise<void>;\n\n\t/**\n\t * Focuses and pastes the contents of the clipboard into the terminal instance.\n\t */\n\tpaste(): void;\n\n\t/**\n\t * Send text to the terminal instance. The text is written to the stdin of the underlying pty\n\t * process (shell) of the terminal instance.\n\t *\n\t * @param text The text to send.\n\t * @param addNewLine Whether to add a new line to the text being sent, this is normally\n\t * required to run a command in the terminal. The character(s) added are \\n or \\r\\n\n\t * depending on the platform. This defaults to `true`.\n\t */\n\tsendText(text: string, addNewLine: boolean): void;\n\n\t/**\n\t * Write text directly to the terminal, skipping the process if it exists.\n\t * @param text The text to write.\n\t */\n\twrite(text: string): void;\n\n\t/** Scroll the terminal buffer down 1 line. */\n\tscrollDownLine(): void;\n\t/** Scroll the terminal buffer down 1 page. */\n\tscrollDownPage(): void;\n\t/** Scroll the terminal buffer to the bottom. */\n\tscrollToBottom(): void;\n\t/** Scroll the terminal buffer up 1 line. */\n\tscrollUpLine(): void;\n\t/** Scroll the terminal buffer up 1 page. */\n\tscrollUpPage(): void;\n\t/** Scroll the terminal buffer to the top. */\n\tscrollToTop(): void;\n\n\t/**\n\t * Clears the terminal buffer, leaving only the prompt line.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Attaches the terminal instance to an element on the DOM, before this is called the terminal\n\t * instance process may run in the background but cannot be displayed on the UI.\n\t *\n\t * @param container The element to attach the terminal instance to.\n\t */\n\tattachToElement(container: HTMLElement): void;\n\n\t/**\n\t * Updates the configuration of the terminal instance.\n\t */\n\tupdateConfig(): void;\n\n\t/**\n\t * Updates the accessibility support state of the terminal instance.\n\t * @param isEnabled Whether it's enabled.\n\t */\n\tupdateAccessibilitySupport(isEnabled: boolean): void;\n\n\t/**\n\t * Configure the dimensions of the terminal instance.\n\t *\n\t * @param dimension The dimensions of the container.\n\t */\n\tlayout(dimension: { width: number, height: number }): void;\n\n\t/**\n\t * Sets whether the terminal instance's element is visible in the DOM.\n\t *\n\t * @param visible Whether the element is visible.\n\t */\n\tsetVisible(visible: boolean): void;\n\n\t/**\n\t * Immediately kills the terminal's current pty process and launches a new one to replace it.\n\t *\n\t * @param shell The new launch configuration.\n\t */\n\treuseTerminal(shell: IShellLaunchConfig): void;\n\n\t/**\n\t * Sets the title of the terminal instance.\n\t */\n\tsetTitle(title: string, eventFromProcess: boolean): void;\n\n\twaitForTitle(): Promise<string>;\n\n\tsetDimensions(dimensions: ITerminalDimensions): void;\n\n\taddDisposable(disposable: IDisposable): void;\n\n\ttoggleEscapeSequenceLogging(): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n}\n\nexport interface ITerminalCommandTracker {\n\tscrollToPreviousCommand(): void;\n\tscrollToNextCommand(): void;\n\tselectToPreviousCommand(): void;\n\tselectToNextCommand(): void;\n\tselectToPreviousLine(): void;\n\tselectToNextLine(): void;\n}\n\nexport interface ITerminalProcessManager extends IDisposable {\n\treadonly processState: ProcessState;\n\treadonly ptyProcessReady: Promise<void>;\n\treadonly shellProcessId: number;\n\n\treadonly onProcessReady: Event<void>;\n\treadonly onProcessData: Event<string>;\n\treadonly onProcessTitle: Event<string>;\n\treadonly onProcessExit: Event<number>;\n\n\taddDisposable(disposable: IDisposable);\n\tdispose(immediate?: boolean);\n\tcreateProcess(shellLaunchConfig: IShellLaunchConfig, cols: number, rows: number);\n\twrite(data: string): void;\n\tsetDimensions(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n}\n\nexport const enum ProcessState {\n\t// The process has not been initialized yet.\n\tUNINITIALIZED,\n\t// The process is currently launching, the process is marked as launching\n\t// for a short duration after being created and is helpful to indicate\n\t// whether the process died as a result of bad shell and args.\n\tLAUNCHING,\n\t// The process is running normally.\n\tRUNNING,\n\t// The process was killed during launch, likely as a result of bad shell and\n\t// args.\n\tKILLED_DURING_LAUNCH,\n\t// The process was killed by the user (the event originated from VS Code).\n\tKILLED_BY_USER,\n\t// The process was killed by itself, for example the shell crashed or `exit`\n\t// was run.\n\tKILLED_BY_PROCESS\n}\n\n\nexport interface ITerminalProcessExtHostProxy extends IDisposable {\n\treadonly terminalId: number;\n\n\temitData(data: string): void;\n\temitTitle(title: string): void;\n\temitPid(pid: number): void;\n\temitExit(exitCode: number): void;\n\temitInitialCwd(initialCwd: string): void;\n\temitCwd(cwd: string): void;\n\n\tonInput: Event<string>;\n\tonResize: Event<{ cols: number, rows: number }>;\n\tonShutdown: Event<boolean>;\n\tonRequestInitialCwd: Event<void>;\n\tonRequestCwd: Event<void>;\n}\n\nexport interface ITerminalProcessExtHostRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tshellLaunchConfig: IShellLaunchConfig;\n\tactiveWorkspaceRootUri: URI;\n\tcols: number;\n\trows: number;\n}\n\nexport enum LinuxDistro {\n\tFedora,\n\tUbuntu,\n\tUnknown\n}\n\nexport interface IWindowsShellHelper extends IDisposable {\n\tgetShellName(): Promise<string>;\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\tonProcessData: Event<string>;\n\tonProcessExit: Event<number>;\n\tonProcessIdReady: Event<number>;\n\tonProcessTitleChanged: Event<string>;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tresize(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { URI as Uri } from 'vs/base/common/uri';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IShellLaunchConfig, ITerminalEnvironment } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\n\n/**\n * This module contains utility functions related to the environment, cwd and paths.\n */\n\nexport function mergeEnvironments(parent: platform.IProcessEnvironment, other?: ITerminalEnvironment): void {\n\tif (!other) {\n\t\treturn;\n\t}\n\n\t// On Windows apply the new values ignoring case, while still retaining\n\t// the case of the original key.\n\tif (platform.isWindows) {\n\t\tfor (const configKey in other) {\n\t\t\tlet actualKey = configKey;\n\t\t\tfor (const envKey in parent) {\n\t\t\t\tif (configKey.toLowerCase() === envKey.toLowerCase()) {\n\t\t\t\t\tactualKey = envKey;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst value = other[configKey];\n\t\t\t_mergeEnvironmentValue(parent, actualKey, value);\n\t\t}\n\t} else {\n\t\tObject.keys(other).forEach((key) => {\n\t\t\tconst value = other[key];\n\t\t\t_mergeEnvironmentValue(parent, key, value);\n\t\t});\n\t}\n}\n\nfunction _mergeEnvironmentValue(env: ITerminalEnvironment, key: string, value: string | null): void {\n\tif (typeof value === 'string') {\n\t\tenv[key] = value;\n\t} else {\n\t\tdelete env[key];\n\t}\n}\n\nexport function addTerminalEnvironmentKeys(env: ITerminalEnvironment, version: string | undefined, locale: string | undefined, setLocaleVariables: boolean): void {\n\tenv['TERM_PROGRAM'] = 'vscode';\n\tenv['TERM_PROGRAM_VERSION'] = version ? version : null;\n\tif (setLocaleVariables) {\n\t\tenv['LANG'] = _getLangEnvVariable(locale);\n\t}\n}\n\nexport function resolveConfigurationVariables(configurationResolverService: IConfigurationResolverService, env: ITerminalEnvironment, lastActiveWorkspaceRoot: IWorkspaceFolder | null): ITerminalEnvironment {\n\tObject.keys(env).forEach((key) => {\n\t\tconst value = env[key];\n\t\tif (typeof value === 'string' && lastActiveWorkspaceRoot !== null) {\n\t\t\tenv[key] = configurationResolverService.resolve(lastActiveWorkspaceRoot, value);\n\t\t}\n\t});\n\treturn env;\n}\n\nfunction _getLangEnvVariable(locale?: string) {\n\tconst parts = locale ? locale.split('-') : [];\n\tconst n = parts.length;\n\tif (n === 0) {\n\t\t// Fallback to en_US to prevent possible encoding issues.\n\t\treturn 'en_US.UTF-8';\n\t}\n\tif (n === 1) {\n\t\t// app.getLocale can return just a language without a variant, fill in the variant for\n\t\t// supported languages as many shells expect a 2-part locale.\n\t\tconst languageVariants = {\n\t\t\tde: 'DE',\n\t\t\ten: 'US',\n\t\t\tes: 'ES',\n\t\t\tfi: 'FI',\n\t\t\tfr: 'FR',\n\t\t\tit: 'IT',\n\t\t\tja: 'JP',\n\t\t\tko: 'KR',\n\t\t\tpl: 'PL',\n\t\t\tru: 'RU',\n\t\t\tzh: 'CN'\n\t\t};\n\t\tif (parts[0] in languageVariants) {\n\t\t\tparts.push(languageVariants[parts[0]]);\n\t\t}\n\t} else {\n\t\t// Ensure the variant is uppercase\n\t\tparts[1] = parts[1].toUpperCase();\n\t}\n\treturn parts.join('_') + '.UTF-8';\n}\n\nexport function getCwd(shell: IShellLaunchConfig, userHome: string, root?: Uri, customCwd?: string): string {\n\tif (shell.cwd) {\n\t\treturn (typeof shell.cwd === 'object') ? shell.cwd.fsPath : shell.cwd;\n\t}\n\n\tlet cwd: string | undefined;\n\n\t// TODO: Handle non-existent customCwd\n\tif (!shell.ignoreConfigurationCwd && customCwd) {\n\t\tif (path.isAbsolute(customCwd)) {\n\t\t\tcwd = customCwd;\n\t\t} else if (root) {\n\t\t\tcwd = path.join(root.fsPath, customCwd);\n\t\t}\n\t}\n\n\t// If there was no custom cwd or it was relative with no workspace\n\tif (!cwd) {\n\t\tcwd = root ? root.fsPath : userHome;\n\t}\n\n\treturn _sanitizeCwd(cwd);\n}\n\nfunction _sanitizeCwd(cwd: string): string {\n\t// Make the drive letter uppercase on Windows (see #9448)\n\tif (platform.platform === platform.Platform.Windows && cwd && cwd[1] === ':') {\n\t\treturn cwd[0].toUpperCase() + cwd.substr(1);\n\t}\n\treturn cwd;\n}\n\nexport function escapeNonWindowsPath(path: string): string {\n\tlet newPath = path;\n\tif (newPath.indexOf('\\\\') !== 0) {\n\t\tnewPath = newPath.replace(/\\\\/g, '\\\\\\\\');\n\t}\n\tif (!newPath && (newPath.indexOf('\"') !== -1)) {\n\t\tnewPath = '\\'' + newPath + '\\'';\n\t} else if (newPath.indexOf(' ') !== -1) {\n\t\tnewPath = newPath.replace(/ /g, '\\\\ ');\n\t}\n\treturn newPath;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport * as processes from 'vs/base/node/processes';\nimport { readFile, fileExists } from 'vs/base/node/pfs';\nimport { LinuxDistro } from 'vs/workbench/contrib/terminal/common/terminal';\n\nexport function getDefaultShell(p: platform.Platform): string {\n\tif (p === platform.Platform.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getTerminalDefaultShellWindows();\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell();\n\t}\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && p === platform.Platform.Mac || platform.isMacintosh && p === platform.Platform.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\treturn getTerminalDefaultShellUnixLike();\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getTerminalDefaultShellUnixLike(): string {\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal = 'sh';\n\t\tif (!platform.isWindows && process.env.SHELL) {\n\t\t\tunixLikeTerminal = process.env.SHELL;\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nfunction getTerminalDefaultShellWindows(): string {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(os.release()) >= 10;\n\t\tconst is32ProcessOn64Windows = process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\t\tconst powerShellPath = `${process.env.windir}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell();\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nlet detectedDistro = LinuxDistro.Unknown;\nif (platform.isLinux) {\n\tconst file = '/etc/os-release';\n\tfileExists(file).then(exists => {\n\t\tif (!exists) {\n\t\t\treturn;\n\t\t}\n\t\treadFile(file).then(b => {\n\t\t\tconst contents = b.toString();\n\t\t\tif (/NAME=\"?Fedora\"?/.test(contents)) {\n\t\t\t\tdetectedDistro = LinuxDistro.Fedora;\n\t\t\t} else if (/NAME=\"?Ubuntu\"?/.test(contents)) {\n\t\t\t\tdetectedDistro = LinuxDistro.Ubuntu;\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport const linuxDistro = detectedDistro;\n\nexport function getWindowsBuildNumber(): number {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tlet buildNumber: number = 0;\n\tif (osVersion && osVersion.length === 4) {\n\t\tbuildNumber = parseInt(osVersion[3]);\n\t}\n\treturn buildNumber;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport * as pty from 'node-pty';\nimport * as fs from 'fs';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { getWindowsBuildNumber } from 'vs/workbench/contrib/terminal/node/terminal';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IShellLaunchConfig, ITerminalChildProcess } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { exec } from 'child_process';\n\nexport class TerminalProcess implements ITerminalChildProcess, IDisposable {\n\tprivate _exitCode: number;\n\tprivate _closeTimeout: any;\n\tprivate _ptyProcess: pty.IPty;\n\tprivate _currentTitle: string = '';\n\tprivate _processStartupComplete: Promise<void>;\n\tprivate _isDisposed: boolean = false;\n\tprivate _titleInterval: NodeJS.Timer | null = null;\n\tprivate _initialCwd: string;\n\n\tprivate readonly _onProcessData = new Emitter<string>();\n\tpublic get onProcessData(): Event<string> { return this._onProcessData.event; }\n\tprivate readonly _onProcessExit = new Emitter<number>();\n\tpublic get onProcessExit(): Event<number> { return this._onProcessExit.event; }\n\tprivate readonly _onProcessIdReady = new Emitter<number>();\n\tpublic get onProcessIdReady(): Event<number> { return this._onProcessIdReady.event; }\n\tprivate readonly _onProcessTitleChanged = new Emitter<string>();\n\tpublic get onProcessTitleChanged(): Event<string> { return this._onProcessTitleChanged.event; }\n\n\tconstructor(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tenv: platform.IProcessEnvironment,\n\t\twindowsEnableConpty: boolean\n\t) {\n\t\tlet shellName: string;\n\t\tif (os.platform() === 'win32') {\n\t\t\tshellName = path.basename(shellLaunchConfig.executable || '');\n\t\t} else {\n\t\t\t// Using 'xterm-256color' here helps ensure that the majority of Linux distributions will use a\n\t\t\t// color prompt as defined in the default ~/.bashrc file.\n\t\t\tshellName = 'xterm-256color';\n\t\t}\n\n\t\tthis._initialCwd = cwd;\n\t\tconst useConpty = windowsEnableConpty && process.platform === 'win32' && getWindowsBuildNumber() >= 18309;\n\t\tconst options: pty.IPtyForkOptions = {\n\t\t\tname: shellName,\n\t\t\tcwd,\n\t\t\tenv,\n\t\t\tcols,\n\t\t\trows,\n\t\t\texperimentalUseConpty: useConpty\n\t\t};\n\n\t\ttry {\n\t\t\tthis._ptyProcess = pty.spawn(shellLaunchConfig.executable!, shellLaunchConfig.args || [], options);\n\t\t\tthis._processStartupComplete = new Promise<void>(c => {\n\t\t\t\tthis.onProcessIdReady((pid) => {\n\t\t\t\t\tc();\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t// The only time this is expected to happen is when the file specified to launch with does not exist.\n\t\t\tthis._exitCode = 2;\n\t\t\tthis._queueProcessExit();\n\t\t\tthis._processStartupComplete = Promise.resolve(undefined);\n\t\t\treturn;\n\t\t}\n\t\tthis._ptyProcess.on('data', (data) => {\n\t\t\tthis._onProcessData.fire(data);\n\t\t\tif (this._closeTimeout) {\n\t\t\t\tclearTimeout(this._closeTimeout);\n\t\t\t\tthis._queueProcessExit();\n\t\t\t}\n\t\t});\n\t\tthis._ptyProcess.on('exit', (code) => {\n\t\t\tthis._exitCode = code;\n\t\t\tthis._queueProcessExit();\n\t\t});\n\n\t\t// TODO: We should no longer need to delay this since pty.spawn is sync\n\t\tsetTimeout(() => {\n\t\t\tthis._sendProcessId();\n\t\t}, 500);\n\t\tthis._setupTitlePolling();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tif (this._titleInterval) {\n\t\t\tclearInterval(this._titleInterval);\n\t\t}\n\t\tthis._titleInterval = null;\n\t\tthis._onProcessData.dispose();\n\t\tthis._onProcessExit.dispose();\n\t\tthis._onProcessIdReady.dispose();\n\t\tthis._onProcessTitleChanged.dispose();\n\t}\n\n\tprivate _setupTitlePolling() {\n\t\t// Send initial timeout async to give event listeners a chance to init\n\t\tsetTimeout(() => {\n\t\t\tthis._sendProcessTitle();\n\t\t}, 0);\n\t\t// Setup polling\n\t\tthis._titleInterval = setInterval(() => {\n\t\t\tif (this._currentTitle !== this._ptyProcess.process) {\n\t\t\t\tthis._sendProcessTitle();\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\t// Allow any trailing data events to be sent before the exit event is sent.\n\t// See https://github.com/Tyriar/node-pty/issues/72\n\tprivate _queueProcessExit() {\n\t\tif (this._closeTimeout) {\n\t\t\tclearTimeout(this._closeTimeout);\n\t\t}\n\t\tthis._closeTimeout = setTimeout(() => this._kill(), 250);\n\t}\n\n\tprivate _kill(): void {\n\t\t// Wait to kill to process until the start up code has run. This prevents us from firing a process exit before a\n\t\t// process start.\n\t\tthis._processStartupComplete.then(() => {\n\t\t\tif (this._isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Attempt to kill the pty, it may have already been killed at this\n\t\t\t// point but we want to make sure\n\t\t\ttry {\n\t\t\t\tthis._ptyProcess.kill();\n\t\t\t} catch (ex) {\n\t\t\t\t// Swallow, the pty has already been killed\n\t\t\t}\n\t\t\tthis._onProcessExit.fire(this._exitCode);\n\t\t\tthis.dispose();\n\t\t});\n\t}\n\n\tprivate _sendProcessId() {\n\t\tthis._onProcessIdReady.fire(this._ptyProcess.pid);\n\t}\n\n\tprivate _sendProcessTitle(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentTitle = this._ptyProcess.process;\n\t\tthis._onProcessTitleChanged.fire(this._currentTitle);\n\t}\n\n\tpublic shutdown(immediate: boolean): void {\n\t\tif (immediate) {\n\t\t\tthis._kill();\n\t\t} else {\n\t\t\tthis._queueProcessExit();\n\t\t}\n\t}\n\n\tpublic input(data: string): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._ptyProcess.write(data);\n\t}\n\n\tpublic resize(cols: number, rows: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\t// Ensure that cols and rows are always >= 1, this prevents a native\n\t\t// exception in winpty.\n\t\tthis._ptyProcess.resize(Math.max(cols, 1), Math.max(rows, 1));\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn Promise.resolve(this._initialCwd);\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\tif (platform.isMacintosh) {\n\t\t\treturn new Promise<string>(resolve => {\n\t\t\t\texec('lsof -p ' + this._ptyProcess.pid + ' | grep cwd', (error, stdout, stderr) => {\n\t\t\t\t\tif (stdout !== '') {\n\t\t\t\t\t\tresolve(stdout.substring(stdout.indexOf('/'), stdout.length - 1));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (platform.isLinux) {\n\t\t\treturn new Promise<string>(resolve => {\n\t\t\t\tfs.readlink('/proc/' + this._ptyProcess.pid + '/cwd', (err, linkedstr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(linkedstr);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn new Promise<string>(resolve => {\n\t\t\tresolve(this._initialCwd);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/objects';\nimport { compare, toValuesTree, IConfigurationChangeEvent, ConfigurationTarget, IConfigurationModel, IConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Configuration as BaseConfiguration, ConfigurationModelParser, ConfigurationChangeEvent, ConfigurationModel, AbstractConfigurationChangeEvent } from 'vs/platform/configuration/common/configurationModels';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, IConfigurationPropertySchema, Extensions, ConfigurationScope, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStoredWorkspaceFolder } from 'vs/platform/workspaces/common/workspaces';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { URI } from 'vs/base/common/uri';\n\nexport class WorkspaceConfigurationModelParser extends ConfigurationModelParser {\n\n\tprivate _folders: IStoredWorkspaceFolder[] = [];\n\tprivate _settingsModelParser: FolderSettingsModelParser;\n\tprivate _launchModel: ConfigurationModel;\n\n\tconstructor(name: string) {\n\t\tsuper(name);\n\t\tthis._settingsModelParser = new FolderSettingsModelParser(name, [ConfigurationScope.WINDOW, ConfigurationScope.RESOURCE]);\n\t\tthis._launchModel = new ConfigurationModel();\n\t}\n\n\tget folders(): IStoredWorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tget settingsModel(): ConfigurationModel {\n\t\treturn this._settingsModelParser.configurationModel;\n\t}\n\n\tget launchModel(): ConfigurationModel {\n\t\treturn this._launchModel;\n\t}\n\n\treprocessWorkspaceSettings(): void {\n\t\tthis._settingsModelParser.reprocess();\n\t}\n\n\tprotected parseRaw(raw: any): IConfigurationModel {\n\t\tthis._folders = (raw['folders'] || []) as IStoredWorkspaceFolder[];\n\t\tthis._settingsModelParser.parse(raw['settings']);\n\t\tthis._launchModel = this.createConfigurationModelFrom(raw, 'launch');\n\t\treturn super.parseRaw(raw);\n\t}\n\n\tprivate createConfigurationModelFrom(raw: any, key: string): ConfigurationModel {\n\t\tconst data = raw[key];\n\t\tif (data) {\n\t\t\tconst contents = toValuesTree(data, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\t\tconst scopedContents = Object.create(null);\n\t\t\tscopedContents[key] = contents;\n\t\t\tconst keys = Object.keys(data).map(k => `${key}.${k}`);\n\t\t\treturn new ConfigurationModel(scopedContents, keys, []);\n\t\t}\n\t\treturn new ConfigurationModel();\n\t}\n}\n\nexport class StandaloneConfigurationModelParser extends ConfigurationModelParser {\n\n\tconstructor(name: string, private readonly scope: string) {\n\t\tsuper(name);\n\t}\n\n\tprotected parseRaw(raw: any): IConfigurationModel {\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst scopedContents = Object.create(null);\n\t\tscopedContents[this.scope] = contents;\n\t\tconst keys = Object.keys(raw).map(key => `${this.scope}.${key}`);\n\t\treturn { contents: scopedContents, keys, overrides: [] };\n\t}\n\n}\n\nexport class FolderSettingsModelParser extends ConfigurationModelParser {\n\n\tprivate _raw: any;\n\tprivate _settingsModel: ConfigurationModel;\n\n\tconstructor(name: string, private scopes: ConfigurationScope[]) {\n\t\tsuper(name);\n\t}\n\n\tparse(content: string | any): void {\n\t\tthis._raw = typeof content === 'string' ? this.parseContent(content) : content;\n\t\tthis.parseWorkspaceSettings(this._raw);\n\t}\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._settingsModel || new ConfigurationModel();\n\t}\n\n\treprocess(): void {\n\t\tthis.parse(this._raw);\n\t}\n\n\tprivate parseWorkspaceSettings(rawSettings: any): void {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst rawWorkspaceSettings = this.filterByScope(rawSettings, configurationProperties, true);\n\t\tconst configurationModel = this.parseRaw(rawWorkspaceSettings);\n\t\tthis._settingsModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tprivate filterByScope(properties: {}, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean): {} {\n\t\tconst result = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\tif (this.scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema && typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW;\n\t}\n}\n\nexport class Configuration extends BaseConfiguration {\n\n\tconstructor(\n\t\tdefaults: ConfigurationModel,\n\t\tuser: ConfigurationModel,\n\t\tworkspaceConfiguration: ConfigurationModel,\n\t\tfolders: ResourceMap<ConfigurationModel>,\n\t\tmemoryConfiguration: ConfigurationModel,\n\t\tmemoryConfigurationByResource: ResourceMap<ConfigurationModel>,\n\t\tprivate readonly _workspace?: Workspace) {\n\t\tsuper(defaults, user, workspaceConfiguration, folders, memoryConfiguration, memoryConfigurationByResource);\n\t}\n\n\tgetValue(key: string | undefined, overrides: IConfigurationOverrides = {}): any {\n\t\treturn super.getValue(key, overrides, this._workspace);\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides = {}): {\n\t\tdefault: C,\n\t\tuser: C,\n\t\tworkspace?: C,\n\t\tworkspaceFolder?: C\n\t\tmemory?: C\n\t\tvalue: C,\n\t} {\n\t\treturn super.inspect(key, overrides, this._workspace);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn super.keys(this._workspace);\n\t}\n\n\tcompareAndUpdateUserConfiguration(user: ConfigurationModel): ConfigurationChangeEvent {\n\t\tconst { added, updated, removed } = compare(this.user, user);\n\t\tlet changedKeys = [...added, ...updated, ...removed];\n\t\tif (changedKeys.length) {\n\t\t\tsuper.updateUserConfiguration(user);\n\t\t}\n\t\treturn new ConfigurationChangeEvent().change(changedKeys);\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): ConfigurationChangeEvent {\n\t\tconst { added, updated, removed } = compare(this.workspace, workspaceConfiguration);\n\t\tlet changedKeys = [...added, ...updated, ...removed];\n\t\tif (changedKeys.length) {\n\t\t\tsuper.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn new ConfigurationChangeEvent().change(changedKeys);\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): ConfigurationChangeEvent {\n\t\tconst currentFolderConfiguration = this.folders.get(resource);\n\t\tif (currentFolderConfiguration) {\n\t\t\tconst { added, updated, removed } = compare(currentFolderConfiguration, folderConfiguration);\n\t\t\tlet changedKeys = [...added, ...updated, ...removed];\n\t\t\tif (changedKeys.length) {\n\t\t\t\tsuper.updateFolderConfiguration(resource, folderConfiguration);\n\t\t\t}\n\t\t\treturn new ConfigurationChangeEvent().change(changedKeys, resource);\n\t\t} else {\n\t\t\tsuper.updateFolderConfiguration(resource, folderConfiguration);\n\t\t\treturn new ConfigurationChangeEvent().change(folderConfiguration.keys, resource);\n\t\t}\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): ConfigurationChangeEvent {\n\t\tif (this._workspace && this._workspace.folders.length > 0 && this._workspace.folders[0].uri.toString() === folder.toString()) {\n\t\t\t// Do not remove workspace configuration\n\t\t\treturn new ConfigurationChangeEvent();\n\t\t}\n\t\tconst folderConfig = this.folders.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tconst keys = folderConfig.keys;\n\t\tsuper.deleteFolderConfiguration(folder);\n\t\treturn new ConfigurationChangeEvent().change(keys, folder);\n\t}\n\n\tcompare(other: Configuration): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const key of this.allKeys()) {\n\t\t\tif (!equals(this.getValue(key), other.getValue(key))\n\t\t\t\t|| (this._workspace && this._workspace.folders.some(folder => !equals(this.getValue(key, { resource: folder.uri }), other.getValue(key, { resource: folder.uri }))))) {\n\t\t\t\tresult.push(key);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tallKeys(): string[] {\n\t\treturn super.allKeys(this._workspace);\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends AbstractConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate _changedConfiguration: ConfigurationModel | null = null;\n\n\tconstructor(private _configuration: Configuration, readonly source: ConfigurationTarget, readonly sourceConfig: any) { super(); }\n\n\tget changedConfiguration(): ConfigurationModel {\n\t\tif (!this._changedConfiguration) {\n\t\t\tthis._changedConfiguration = new ConfigurationModel();\n\t\t\tthis.updateKeys(this._changedConfiguration, this.affectedKeys);\n\t\t}\n\t\treturn this._changedConfiguration;\n\t}\n\n\tget changedConfigurationByResource(): ResourceMap<IConfigurationModel> {\n\t\treturn new ResourceMap();\n\t}\n\n\tget affectedKeys(): string[] {\n\t\treturn this._configuration.allKeys();\n\t}\n\n\taffectsConfiguration(config: string, resource?: URI): boolean {\n\t\treturn this.doesConfigurationContains(this.changedConfiguration, config);\n\t}\n}\n\nexport class WorkspaceConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tconstructor(private configurationChangeEvent: IConfigurationChangeEvent, private workspace: Workspace | undefined) { }\n\n\tget changedConfiguration(): IConfigurationModel {\n\t\treturn this.configurationChangeEvent.changedConfiguration;\n\t}\n\n\tget changedConfigurationByResource(): ResourceMap<IConfigurationModel> {\n\t\treturn this.configurationChangeEvent.changedConfigurationByResource;\n\t}\n\n\tget affectedKeys(): string[] {\n\t\treturn this.configurationChangeEvent.affectedKeys;\n\t}\n\n\tget source(): ConfigurationTarget {\n\t\treturn this.configurationChangeEvent.source;\n\t}\n\n\tget sourceConfig(): any {\n\t\treturn this.configurationChangeEvent.sourceConfig;\n\t}\n\n\taffectsConfiguration(config: string, resource?: URI): boolean {\n\t\tif (this.configurationChangeEvent.affectsConfiguration(config, resource)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (resource && this.workspace) {\n\t\t\tlet workspaceFolder = this.workspace.getFolder(resource);\n\t\t\tif (workspaceFolder) {\n\t\t\t\treturn this.configurationChangeEvent.affectsConfiguration(config, workspaceFolder.uri);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mixin, deepClone } from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as vscode from 'vscode';\nimport { ExtHostWorkspace } from 'vs/workbench/api/node/extHostWorkspace';\nimport { ExtHostConfigurationShape, MainThreadConfigurationShape, IWorkspaceConfigurationChangeEventData, IConfigurationInitData } from './extHost.protocol';\nimport { ConfigurationTarget as ExtHostConfigurationTarget } from './extHostTypes';\nimport { IConfigurationData, ConfigurationTarget, IConfigurationModel } from 'vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationChangeEvent, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { WorkspaceConfigurationChangeEvent } from 'vs/workbench/services/configuration/common/configurationModels';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { ConfigurationScope, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { isObject } from 'vs/base/common/types';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { Barrier } from 'vs/base/common/async';\n\nfunction lookUp(tree: any, key: string) {\n\tif (key) {\n\t\tconst parts = key.split('.');\n\t\tlet node = tree;\n\t\tfor (let i = 0; node && i < parts.length; i++) {\n\t\t\tnode = node[parts[i]];\n\t\t}\n\t\treturn node;\n\t}\n}\n\ntype ConfigurationInspect<T> = {\n\tkey: string;\n\tdefaultValue?: T;\n\tglobalValue?: T;\n\tworkspaceValue?: T;\n\tworkspaceFolderValue?: T;\n};\n\nexport class ExtHostConfiguration implements ExtHostConfigurationShape {\n\n\tprivate readonly _proxy: MainThreadConfigurationShape;\n\tprivate readonly _extHostWorkspace: ExtHostWorkspace;\n\tprivate readonly _barrier: Barrier;\n\tprivate _actual: ExtHostConfigProvider | null;\n\n\tconstructor(proxy: MainThreadConfigurationShape, extHostWorkspace: ExtHostWorkspace) {\n\t\tthis._proxy = proxy;\n\t\tthis._extHostWorkspace = extHostWorkspace;\n\t\tthis._barrier = new Barrier();\n\t\tthis._actual = null;\n\t}\n\n\tpublic getConfigProvider(): Promise<ExtHostConfigProvider> {\n\t\treturn this._barrier.wait().then(_ => this._actual!);\n\t}\n\n\t$initializeConfiguration(data: IConfigurationInitData): void {\n\t\tthis._actual = new ExtHostConfigProvider(this._proxy, this._extHostWorkspace, data);\n\t\tthis._barrier.open();\n\t}\n\n\t$acceptConfigurationChanged(data: IConfigurationInitData, eventData: IWorkspaceConfigurationChangeEventData): void {\n\t\tthis.getConfigProvider().then(provider => provider.$acceptConfigurationChanged(data, eventData));\n\t}\n}\n\nexport class ExtHostConfigProvider {\n\n\tprivate readonly _onDidChangeConfiguration = new Emitter<vscode.ConfigurationChangeEvent>();\n\tprivate readonly _proxy: MainThreadConfigurationShape;\n\tprivate readonly _extHostWorkspace: ExtHostWorkspace;\n\tprivate _configurationScopes: { [key: string]: ConfigurationScope };\n\tprivate _configuration: Configuration;\n\n\tconstructor(proxy: MainThreadConfigurationShape, extHostWorkspace: ExtHostWorkspace, data: IConfigurationInitData) {\n\t\tthis._proxy = proxy;\n\t\tthis._extHostWorkspace = extHostWorkspace;\n\t\tthis._configuration = ExtHostConfigProvider.parse(data);\n\t\tthis._configurationScopes = data.configurationScopes;\n\t}\n\n\tget onDidChangeConfiguration(): Event<vscode.ConfigurationChangeEvent> {\n\t\treturn this._onDidChangeConfiguration && this._onDidChangeConfiguration.event;\n\t}\n\n\t$acceptConfigurationChanged(data: IConfigurationInitData, eventData: IWorkspaceConfigurationChangeEventData) {\n\t\tthis._configuration = ExtHostConfigProvider.parse(data);\n\t\tthis._configurationScopes = data.configurationScopes;\n\t\tthis._onDidChangeConfiguration.fire(this._toConfigurationChangeEvent(eventData));\n\t}\n\n\tgetConfiguration(section?: string, resource?: URI, extensionId?: ExtensionIdentifier): vscode.WorkspaceConfiguration {\n\t\tconst config = this._toReadonlyValue(section\n\t\t\t? lookUp(this._configuration.getValue(undefined, { resource }, this._extHostWorkspace.workspace), section)\n\t\t\t: this._configuration.getValue(undefined, { resource }, this._extHostWorkspace.workspace));\n\n\t\tif (section) {\n\t\t\tthis._validateConfigurationAccess(section, resource, extensionId);\n\t\t}\n\n\t\tfunction parseConfigurationTarget(arg: boolean | ExtHostConfigurationTarget): ConfigurationTarget | null {\n\t\t\tif (arg === undefined || arg === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (typeof arg === 'boolean') {\n\t\t\t\treturn arg ? ConfigurationTarget.USER : ConfigurationTarget.WORKSPACE;\n\t\t\t}\n\n\t\t\tswitch (arg) {\n\t\t\t\tcase ExtHostConfigurationTarget.Global: return ConfigurationTarget.USER;\n\t\t\t\tcase ExtHostConfigurationTarget.Workspace: return ConfigurationTarget.WORKSPACE;\n\t\t\t\tcase ExtHostConfigurationTarget.WorkspaceFolder: return ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t\t}\n\t\t}\n\n\t\tconst result: vscode.WorkspaceConfiguration = {\n\t\t\thas(key: string): boolean {\n\t\t\t\treturn typeof lookUp(config, key) !== 'undefined';\n\t\t\t},\n\t\t\tget: <T>(key: string, defaultValue?: T) => {\n\t\t\t\tthis._validateConfigurationAccess(section ? `${section}.${key}` : key, resource, extensionId);\n\t\t\t\tlet result = lookUp(config, key);\n\t\t\t\tif (typeof result === 'undefined') {\n\t\t\t\t\tresult = defaultValue;\n\t\t\t\t} else {\n\t\t\t\t\tlet clonedConfig = undefined;\n\t\t\t\t\tconst cloneOnWriteProxy = (target: any, accessor: string): any => {\n\t\t\t\t\t\tlet clonedTarget: any | undefined = undefined;\n\t\t\t\t\t\tconst cloneTarget = () => {\n\t\t\t\t\t\t\tclonedConfig = clonedConfig ? clonedConfig : deepClone(config);\n\t\t\t\t\t\t\tclonedTarget = clonedTarget ? clonedTarget : lookUp(clonedConfig, accessor);\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn isObject(target) ?\n\t\t\t\t\t\t\tnew Proxy(target, {\n\t\t\t\t\t\t\t\tget: (target: any, property: string) => {\n\t\t\t\t\t\t\t\t\tif (typeof property === 'string' && property.toLowerCase() === 'tojson') {\n\t\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\t\treturn () => clonedTarget;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (clonedConfig) {\n\t\t\t\t\t\t\t\t\t\tclonedTarget = clonedTarget ? clonedTarget : lookUp(clonedConfig, accessor);\n\t\t\t\t\t\t\t\t\t\treturn clonedTarget[property];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst result = target[property];\n\t\t\t\t\t\t\t\t\tif (typeof property === 'string') {\n\t\t\t\t\t\t\t\t\t\treturn cloneOnWriteProxy(result, `${accessor}.${property}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tset: (_target: any, property: string, value: any) => {\n\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\tif (clonedTarget) {\n\t\t\t\t\t\t\t\t\t\tclonedTarget[property] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdeleteProperty: (_target: any, property: string) => {\n\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\tif (clonedTarget) {\n\t\t\t\t\t\t\t\t\t\tdelete clonedTarget[property];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefineProperty: (_target: any, property: string, descriptor: any) => {\n\t\t\t\t\t\t\t\t\tcloneTarget();\n\t\t\t\t\t\t\t\t\tif (clonedTarget) {\n\t\t\t\t\t\t\t\t\t\tObject.defineProperty(clonedTarget, property, descriptor);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}) : target;\n\t\t\t\t\t};\n\t\t\t\t\tresult = cloneOnWriteProxy(result, key);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tupdate: (key: string, value: any, arg: ExtHostConfigurationTarget | boolean) => {\n\t\t\t\tkey = section ? `${section}.${key}` : key;\n\t\t\t\tconst target = parseConfigurationTarget(arg);\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\treturn this._proxy.$updateConfigurationOption(target, key, value, resource);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._proxy.$removeConfigurationOption(target, key, resource);\n\t\t\t\t}\n\t\t\t},\n\t\t\tinspect: <T>(key: string): ConfigurationInspect<T> | undefined => {\n\t\t\t\tkey = section ? `${section}.${key}` : key;\n\t\t\t\tconst config = deepClone(this._configuration.inspect<T>(key, { resource }, this._extHostWorkspace.workspace));\n\t\t\t\tif (config) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tdefaultValue: config.default,\n\t\t\t\t\t\tglobalValue: config.user,\n\t\t\t\t\t\tworkspaceValue: config.workspace,\n\t\t\t\t\t\tworkspaceFolderValue: config.workspaceFolder\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t};\n\n\t\tif (typeof config === 'object') {\n\t\t\tmixin(result, config, false);\n\t\t}\n\n\t\treturn <vscode.WorkspaceConfiguration>Object.freeze(result);\n\t}\n\n\tprivate _toReadonlyValue(result: any): any {\n\t\tconst readonlyProxy = (target) => {\n\t\t\treturn isObject(target) ?\n\t\t\t\tnew Proxy(target, {\n\t\t\t\t\tget: (target: any, property: string) => readonlyProxy(target[property]),\n\t\t\t\t\tset: (_target: any, property: string, _value: any) => { throw new Error(`TypeError: Cannot assign to read only property '${property}' of object`); },\n\t\t\t\t\tdeleteProperty: (_target: any, property: string) => { throw new Error(`TypeError: Cannot delete read only property '${property}' of object`); },\n\t\t\t\t\tdefineProperty: (_target: any, property: string) => { throw new Error(`TypeError: Cannot define property '${property}' for a readonly object`); },\n\t\t\t\t\tsetPrototypeOf: (_target: any) => { throw new Error(`TypeError: Cannot set prototype for a readonly object`); },\n\t\t\t\t\tisExtensible: () => false,\n\t\t\t\t\tpreventExtensions: () => true\n\t\t\t\t}) : target;\n\t\t};\n\t\treturn readonlyProxy(result);\n\t}\n\n\tprivate _validateConfigurationAccess(key: string, resource: URI | undefined, extensionId?: ExtensionIdentifier): void {\n\t\tconst scope = OVERRIDE_PROPERTY_PATTERN.test(key) ? ConfigurationScope.RESOURCE : this._configurationScopes[key];\n\t\tconst extensionIdText = extensionId ? `[${extensionId.value}] ` : '';\n\t\tif (ConfigurationScope.RESOURCE === scope) {\n\t\t\tif (resource === undefined) {\n\t\t\t\tconsole.warn(`${extensionIdText}Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for '${key}', provide the URI of a resource or 'null' for any resource.`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (ConfigurationScope.WINDOW === scope) {\n\t\t\tif (resource) {\n\t\t\t\tconsole.warn(`${extensionIdText}Accessing a window scoped configuration for a resource is not expected. To associate '${key}' to a resource, define its scope to 'resource' in configuration contributions in 'package.json'.`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _toConfigurationChangeEvent(data: IWorkspaceConfigurationChangeEventData): vscode.ConfigurationChangeEvent {\n\t\tconst changedConfiguration = new ConfigurationModel(data.changedConfiguration.contents, data.changedConfiguration.keys, data.changedConfiguration.overrides);\n\t\tconst changedConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\t\tfor (const key of Object.keys(data.changedConfigurationByResource)) {\n\t\t\tconst resource = URI.parse(key);\n\t\t\tconst model = data.changedConfigurationByResource[key];\n\t\t\tchangedConfigurationByResource.set(resource, new ConfigurationModel(model.contents, model.keys, model.overrides));\n\t\t}\n\t\tconst event = new WorkspaceConfigurationChangeEvent(new ConfigurationChangeEvent(changedConfiguration, changedConfigurationByResource), this._extHostWorkspace.workspace);\n\t\treturn Object.freeze({\n\t\t\taffectsConfiguration: (section: string, resource?: URI) => event.affectsConfiguration(section, resource)\n\t\t});\n\t}\n\n\tprivate static parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = ExtHostConfigProvider.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = ExtHostConfigProvider.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = ExtHostConfigProvider.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = Object.keys(data.folders).reduce((result, key) => {\n\t\t\tresult.set(URI.parse(key), ExtHostConfigProvider.parseConfigurationModel(data.folders[key]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as paths from 'vs/base/common/path';\nimport * as process from 'vs/base/common/process';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IProcessEnvironment, isWindows, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { localize } from 'vs/nls';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport interface IVariableResolveContext {\n\tgetFolderUri(folderName: string): uri | undefined;\n\tgetWorkspaceFolderCount(): number;\n\tgetConfigurationValue(folderUri: uri, section: string): string | undefined;\n\tgetExecPath(): string | undefined;\n\tgetFilePath(): string | undefined;\n\tgetSelectedText(): string | undefined;\n\tgetLineNumber(): string;\n}\n\nexport class AbstractVariableResolverService implements IConfigurationResolverService {\n\n\tstatic VARIABLE_REGEXP = /\\$\\{(.*?)\\}/g;\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\tprivate _context: IVariableResolveContext,\n\t\tprivate _envVariables: IProcessEnvironment\n\t) {\n\t\tif (isWindows) {\n\t\t\tthis._envVariables = Object.create(null);\n\t\t\tObject.keys(_envVariables).forEach(key => {\n\t\t\t\tthis._envVariables[key.toLowerCase()] = _envVariables[key];\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string): string;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string[]): string[];\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: IStringDictionary<string>): IStringDictionary<string>;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: any): any {\n\t\treturn this.recursiveResolve(root ? root.uri : undefined, value);\n\t}\n\n\tpublic resolveAnyBase(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\n\t\tconst result = objects.deepClone(config) as any;\n\n\t\t// hoist platform specific attributes to top level\n\t\tif (isWindows && result.windows) {\n\t\t\tObject.keys(result.windows).forEach(key => result[key] = result.windows[key]);\n\t\t} else if (isMacintosh && result.osx) {\n\t\t\tObject.keys(result.osx).forEach(key => result[key] = result.osx[key]);\n\t\t} else if (isLinux && result.linux) {\n\t\t\tObject.keys(result.linux).forEach(key => result[key] = result.linux[key]);\n\t\t}\n\n\t\t// delete all platform specific sections\n\t\tdelete result.windows;\n\t\tdelete result.osx;\n\t\tdelete result.linux;\n\n\t\t// substitute all variables recursively in string values\n\t\treturn this.recursiveResolve(workspaceFolder ? workspaceFolder.uri : undefined, result, commandValueMapping, resolvedVariables);\n\t}\n\n\tpublic resolveAny(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): any {\n\t\treturn this.resolveAnyBase(workspaceFolder, config, commandValueMapping);\n\t}\n\n\tpublic resolveAnyMap(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): { newConfig: any, resolvedVariables: Map<string, string> } {\n\t\tconst resolvedVariables = new Map<string, string>();\n\t\tconst newConfig = this.resolveAnyBase(workspaceFolder, config, commandValueMapping, resolvedVariables);\n\t\treturn { newConfig, resolvedVariables };\n\t}\n\n\tpublic resolveWithInteractionReplace(folder: IWorkspaceFolder, config: any): Promise<any> {\n\t\tthrow new Error('resolveWithInteractionReplace not implemented.');\n\t}\n\n\tpublic resolveWithInteraction(folder: IWorkspaceFolder, config: any): Promise<any> {\n\t\tthrow new Error('resolveWithInteraction not implemented.');\n\t}\n\n\tprivate recursiveResolve(folderUri: uri, value: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\t\tif (types.isString(value)) {\n\t\t\tconst resolved = this.resolveString(folderUri, value, commandValueMapping);\n\t\t\tif (resolvedVariables) {\n\t\t\t\tresolvedVariables.set(resolved.variableName, resolved.resolvedValue);\n\t\t\t}\n\t\t\treturn resolved.replaced;\n\t\t} else if (types.isArray(value)) {\n\t\t\treturn value.map(s => this.recursiveResolve(folderUri, s, commandValueMapping, resolvedVariables));\n\t\t} else if (types.isObject(value)) {\n\t\t\tlet result: IStringDictionary<string | IStringDictionary<string> | string[]> = Object.create(null);\n\t\t\tObject.keys(value).forEach(key => {\n\t\t\t\tconst resolvedKey = this.resolveString(folderUri, key, commandValueMapping);\n\t\t\t\tif (resolvedVariables) {\n\t\t\t\t\tresolvedVariables.set(resolvedKey.variableName, resolvedKey.resolvedValue);\n\t\t\t\t}\n\t\t\t\tresult[resolvedKey.replaced] = this.recursiveResolve(folderUri, value[key], commandValueMapping, resolvedVariables);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate resolveString(folderUri: uri, value: string, commandValueMapping: IStringDictionary<string>): { replaced: string, variableName: string, resolvedValue: string } {\n\n\t\tconst filePath = this._context.getFilePath();\n\t\tlet variableName: string | undefined;\n\t\tlet resolvedValue: string | undefined;\n\t\tconst replaced = value.replace(AbstractVariableResolverService.VARIABLE_REGEXP, (match: string, variable: string) => {\n\n\t\t\tvariableName = variable;\n\t\t\tlet argument: string | undefined;\n\t\t\tconst parts = variable.split(':');\n\t\t\tif (parts && parts.length > 1) {\n\t\t\t\tvariable = parts[0];\n\t\t\t\targument = parts[1];\n\t\t\t}\n\n\t\t\tswitch (variable) {\n\n\t\t\t\tcase 'env':\n\t\t\t\t\tif (argument) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\targument = argument.toLowerCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst env = this._envVariables[argument];\n\t\t\t\t\t\tif (types.isString(env)) {\n\t\t\t\t\t\t\treturn resolvedValue = env;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// For `env` we should do the same as a normal shell does - evaluates missing envs to an empty string #46436\n\t\t\t\t\t\treturn resolvedValue = '';\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(localize('missingEnvVarName', \"'{0}' can not be resolved because no environment variable name is given.\", match));\n\n\t\t\t\tcase 'config':\n\t\t\t\t\tif (argument) {\n\t\t\t\t\t\tconst config = this._context.getConfigurationValue(folderUri, argument);\n\t\t\t\t\t\tif (types.isUndefinedOrNull(config)) {\n\t\t\t\t\t\t\tthrow new Error(localize('configNotFound', \"'{0}' can not be resolved because setting '{1}' not found.\", match, argument));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (types.isObject(config)) {\n\t\t\t\t\t\t\tthrow new Error(localize('configNoString', \"'{0}' can not be resolved because '{1}' is a structured value.\", match, argument));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn resolvedValue = config;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(localize('missingConfigName', \"'{0}' can not be resolved because no settings name is given.\", match));\n\n\t\t\t\tcase 'command':\n\t\t\t\t\treturn resolvedValue = this.resolveFromMap(match, argument, commandValueMapping, 'command');\n\t\t\t\tcase 'input':\n\t\t\t\t\treturn resolvedValue = this.resolveFromMap(match, argument, commandValueMapping, 'input');\n\n\t\t\t\tdefault: {\n\n\t\t\t\t\t// common error handling for all variables that require an open folder and accept a folder name argument\n\t\t\t\t\tswitch (variable) {\n\t\t\t\t\t\tcase 'workspaceRoot':\n\t\t\t\t\t\tcase 'workspaceFolder':\n\t\t\t\t\t\tcase 'workspaceRootFolderName':\n\t\t\t\t\t\tcase 'workspaceFolderBasename':\n\t\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\t\tif (argument) {\n\t\t\t\t\t\t\t\tconst folder = this._context.getFolderUri(argument);\n\t\t\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\t\t\tfolderUri = folder;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new Error(localize('canNotFindFolder', \"'{0}' can not be resolved. No such folder '{1}'.\", match, argument));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!folderUri) {\n\t\t\t\t\t\t\t\tif (this._context.getWorkspaceFolderCount() > 1) {\n\t\t\t\t\t\t\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolderMultiRoot', \"'{0}' can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.\", match));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolder', \"'{0}' can not be resolved. Please open a folder.\", match));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// common error handling for all variables that require an open file\n\t\t\t\t\tswitch (variable) {\n\t\t\t\t\t\tcase 'file':\n\t\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\tcase 'fileDirname':\n\t\t\t\t\t\tcase 'fileExtname':\n\t\t\t\t\t\tcase 'fileBasename':\n\t\t\t\t\t\tcase 'fileBasenameNoExtension':\n\t\t\t\t\t\t\tif (!filePath) {\n\t\t\t\t\t\t\t\tthrow new Error(localize('canNotResolveFile', \"'{0}' can not be resolved. Please open an editor.\", match));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (variable) {\n\t\t\t\t\t\tcase 'workspaceRoot':\n\t\t\t\t\t\tcase 'workspaceFolder':\n\t\t\t\t\t\t\treturn resolvedValue = normalizeDriveLetter(folderUri.fsPath);\n\n\t\t\t\t\t\tcase 'cwd':\n\t\t\t\t\t\t\treturn resolvedValue = (folderUri ? normalizeDriveLetter(folderUri.fsPath) : process.cwd());\n\n\t\t\t\t\t\tcase 'workspaceRootFolderName':\n\t\t\t\t\t\tcase 'workspaceFolderBasename':\n\t\t\t\t\t\t\treturn resolvedValue = paths.basename(folderUri.fsPath);\n\n\t\t\t\t\t\tcase 'lineNumber':\n\t\t\t\t\t\t\tconst lineNumber = this._context.getLineNumber();\n\t\t\t\t\t\t\tif (lineNumber) {\n\t\t\t\t\t\t\t\treturn resolvedValue = lineNumber;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new Error(localize('canNotResolveLineNumber', \"'{0}' can not be resolved. Make sure to have a line selected in the active editor.\", match));\n\n\t\t\t\t\t\tcase 'selectedText':\n\t\t\t\t\t\t\tconst selectedText = this._context.getSelectedText();\n\t\t\t\t\t\t\tif (selectedText) {\n\t\t\t\t\t\t\t\treturn resolvedValue = selectedText;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new Error(localize('canNotResolveSelectedText', \"'{0}' can not be resolved. Make sure to have some text selected in the active editor.\", match));\n\n\t\t\t\t\t\tcase 'file':\n\t\t\t\t\t\t\treturn resolvedValue = filePath;\n\n\t\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\t\tif (folderUri) {\n\t\t\t\t\t\t\t\treturn resolvedValue = paths.normalize(paths.relative(folderUri.fsPath, filePath));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn resolvedValue = filePath;\n\n\t\t\t\t\t\tcase 'fileDirname':\n\t\t\t\t\t\t\treturn resolvedValue = paths.dirname(filePath);\n\n\t\t\t\t\t\tcase 'fileExtname':\n\t\t\t\t\t\t\treturn resolvedValue = paths.extname(filePath);\n\n\t\t\t\t\t\tcase 'fileBasename':\n\t\t\t\t\t\t\treturn resolvedValue = paths.basename(filePath);\n\n\t\t\t\t\t\tcase 'fileBasenameNoExtension':\n\t\t\t\t\t\t\tconst basename = paths.basename(filePath);\n\t\t\t\t\t\t\treturn resolvedValue = (basename.slice(0, basename.length - paths.extname(basename).length));\n\n\t\t\t\t\t\tcase 'execPath':\n\t\t\t\t\t\t\tconst ep = this._context.getExecPath();\n\t\t\t\t\t\t\tif (ep) {\n\t\t\t\t\t\t\t\treturn resolvedValue = ep;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn resolvedValue = match;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn resolvedValue = match;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn { replaced, variableName, resolvedValue };\n\t}\n\n\tprivate resolveFromMap(match: string, argument: string, commandValueMapping: IStringDictionary<string>, prefix: string): string {\n\t\tif (argument && commandValueMapping) {\n\t\t\tconst v = commandValueMapping[prefix + ':' + argument];\n\t\t\tif (typeof v === 'string') {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tthrow new Error(localize('noValueForCommand', \"'{0}' can not be resolved because the command has no value.\", match));\n\t\t}\n\t\treturn match;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, ServiceIdentifier, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceInput, IEditorOptions, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorInput, IEditor, GroupIdentifier, IEditorInputWithOptions, IUntitledResourceInput, IResourceDiffInput, IResourceSideBySideInput, ITextEditor, ITextDiffEditor, ITextSideBySideEditor } from 'vs/workbench/common/editor';\nimport { Event } from 'vs/base/common/event';\nimport { IEditor as ICodeEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorGroup, IEditorReplacement } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport const IEditorService = createDecorator<IEditorService>('editorService');\n\nexport type IResourceEditor = IResourceInput | IUntitledResourceInput | IResourceDiffInput | IResourceSideBySideInput;\n\nexport interface IResourceEditorReplacement {\n\teditor: IResourceEditor;\n\treplacement: IResourceEditor;\n}\n\nexport const ACTIVE_GROUP = -1;\nexport type ACTIVE_GROUP_TYPE = typeof ACTIVE_GROUP;\n\nexport const SIDE_GROUP = -2;\nexport type SIDE_GROUP_TYPE = typeof SIDE_GROUP;\n\nexport interface IOpenEditorOverrideHandler {\n\t(editor: IEditorInput, options: IEditorOptions | ITextEditorOptions | undefined, group: IEditorGroup): IOpenEditorOverride | undefined;\n}\n\nexport interface IOpenEditorOverride {\n\n\t/**\n\t * If defined, will prevent the opening of an editor and replace the resulting\n\t * promise with the provided promise for the openEditor() call.\n\t */\n\toverride?: Promise<IEditor | null | undefined>;\n}\n\nexport interface IVisibleEditor extends IEditor {\n\tinput: IEditorInput;\n\tgroup: IEditorGroup;\n}\n\nexport interface IEditorService {\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\t/**\n\t * Emitted when the currently active editor changes.\n\t *\n\t * @see `IEditorService.activeEditor`\n\t */\n\treadonly onDidActiveEditorChange: Event<void>;\n\n\t/**\n\t * Emitted when any of the current visible editors changes.\n\t *\n\t * @see `IEditorService.visibleEditors`\n\t */\n\treadonly onDidVisibleEditorsChange: Event<void>;\n\n\t/**\n\t * The currently active editor or `undefined` if none. An editor is active when it is\n\t * located in the currently active editor group. It will be `undefined` if the active\n\t * editor group has no editors open.\n\t */\n\treadonly activeEditor: IEditorInput | undefined;\n\n\t/**\n\t * The currently active editor control or `undefined` if none. The editor control is\n\t * the workbench container for editors of any kind.\n\t *\n\t * @see `IEditorService.activeEditor`\n\t */\n\treadonly activeControl: IVisibleEditor | undefined;\n\n\t/**\n\t * The currently active text editor widget or `undefined` if there is currently no active\n\t * editor or the active editor widget is neither a text nor a diff editor.\n\t *\n\t * @see `IEditorService.activeEditor`\n\t */\n\treadonly activeTextEditorWidget: ICodeEditor | undefined;\n\n\t/**\n\t * All editors that are currently visible. An editor is visible when it is opened in an\n\t * editor group and active in that group. Multiple editor groups can be opened at the same time.\n\t */\n\treadonly visibleEditors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * All editor controls that are currently visible across all editor groups.\n\t */\n\treadonly visibleControls: ReadonlyArray<IVisibleEditor>;\n\n\t/**\n\t * All text editor widgets that are currently visible across all editor groups. A text editor\n\t * widget is either a text or a diff editor.\n\t */\n\treadonly visibleTextEditorWidgets: ReadonlyArray<ICodeEditor>;\n\n\t/**\n\t * All editors that are opened across all editor groups. This includes active as well as inactive\n\t * editors in each editor group.\n\t */\n\treadonly editors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * Open an editor in an editor group.\n\t *\n\t * @param editor the editor to open\n\t * @param options the options to use for the editor\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editor that opened or NULL if the operation failed or the editor was not\n\t * opened to be active.\n\t */\n\topenEditor(editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditor | null>;\n\topenEditor(editor: IResourceInput | IUntitledResourceInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextEditor | null>;\n\topenEditor(editor: IResourceDiffInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditor | null>;\n\topenEditor(editor: IResourceSideBySideInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextSideBySideEditor | null>;\n\n\t/**\n\t * Open editors in an editor group.\n\t *\n\t * @param editors the editors to open with associated options\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editors that opened. The array can be empty or have less elements for editors\n\t * that failed to open or were instructed to open as inactive.\n\t */\n\topenEditors(editors: IEditorInputWithOptions[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditor>>;\n\topenEditors(editors: IResourceEditor[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditor>>;\n\n\t/**\n\t * Replaces editors in an editor group with the provided replacement.\n\t *\n\t * @param editors the editors to replace\n\t *\n\t * @returns a promise that is resolved when the replaced active\n\t * editor (if any) has finished loading.\n\t */\n\treplaceEditors(editors: IResourceEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\treplaceEditors(editors: IEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\n\t/**\n\t * Find out if the provided editor (or resource of an editor) is opened in any or\n\t * a specific editor group.\n\t *\n\t * Note: An editor can be opened but not actively visible.\n\t *\n\t * @param group optional to specify a group to check for the editor being opened\n\t */\n\tisOpen(editor: IEditorInput | IResourceInput | IUntitledResourceInput, group?: IEditorGroup | GroupIdentifier): boolean;\n\n\t/**\n\t * Get the actual opened editor input in any or a specific editor group based on the resource.\n\t *\n\t * Note: An editor can be opened but not actively visible.\n\t *\n\t * @param group optional to specify a group to check for the editor\n\t */\n\tgetOpened(editor: IResourceInput | IUntitledResourceInput, group?: IEditorGroup | GroupIdentifier): IEditorInput | undefined;\n\n\t/**\n\t * Allows to override the opening of editors by installing a handler that will\n\t * be called each time an editor is about to open allowing to override the\n\t * operation to open a different editor.\n\t */\n\toverrideOpenEditor(handler: IOpenEditorOverrideHandler): IDisposable;\n\n\t/**\n\t * Invoke a function in the context of the services of the active editor.\n\t */\n\tinvokeWithinEditorContext<T>(fn: (accessor: ServicesAccessor) => T): T;\n\n\t/**\n\t * Converts a lightweight input to a workbench editor input.\n\t */\n\tcreateInput(input: IResourceEditor): IEditorInput | null;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as modes from 'vs/editor/common/modes';\nimport * as types from './extHostTypes';\nimport * as search from 'vs/workbench/contrib/search/common/search';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { EditorViewColumn } from 'vs/workbench/api/shared/editor';\nimport { IDecorationOptions, IThemeDecorationRenderOptions, IDecorationRenderOptions, IContentDecorationRenderOptions } from 'vs/editor/common/editorCommon';\nimport { EndOfLineSequence, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport * as vscode from 'vscode';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ProgressLocation as MainProgressLocation } from 'vs/platform/progress/common/progress';\nimport { SaveReason } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport * as htmlContent from 'vs/base/common/htmlContent';\nimport * as languageSelector from 'vs/editor/common/modes/languageSelector';\nimport { WorkspaceEditDto, ResourceTextEditDto, ResourceFileEditDto } from 'vs/workbench/api/node/extHost.protocol';\nimport { MarkerSeverity, IRelatedInformation, IMarkerData, MarkerTag } from 'vs/platform/markers/common/markers';\nimport { ACTIVE_GROUP, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/node/extHostDocumentsAndEditors';\nimport { isString, isNumber } from 'vs/base/common/types';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { parse } from 'vs/base/common/marshalling';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { LogLevel as _MainLogLevel } from 'vs/platform/log/common/log';\nimport { coalesce } from 'vs/base/common/arrays';\n\nexport interface PositionLike {\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface RangeLike {\n\tstart: PositionLike;\n\tend: PositionLike;\n}\n\nexport interface SelectionLike extends RangeLike {\n\tanchor: PositionLike;\n\tactive: PositionLike;\n}\nexport namespace Selection {\n\n\texport function to(selection: ISelection): types.Selection {\n\t\tconst { selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn } = selection;\n\t\tconst start = new types.Position(selectionStartLineNumber - 1, selectionStartColumn - 1);\n\t\tconst end = new types.Position(positionLineNumber - 1, positionColumn - 1);\n\t\treturn new types.Selection(start, end);\n\t}\n\n\texport function from(selection: SelectionLike): ISelection {\n\t\tconst { anchor, active } = selection;\n\t\treturn {\n\t\t\tselectionStartLineNumber: anchor.line + 1,\n\t\t\tselectionStartColumn: anchor.character + 1,\n\t\t\tpositionLineNumber: active.line + 1,\n\t\t\tpositionColumn: active.character + 1\n\t\t};\n\t}\n}\nexport namespace Range {\n\n\texport function from(range: undefined): undefined;\n\texport function from(range: RangeLike): IRange;\n\texport function from(range: RangeLike | undefined): IRange | undefined;\n\texport function from(range: RangeLike | undefined): IRange | undefined {\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { start, end } = range;\n\t\treturn {\n\t\t\tstartLineNumber: start.line + 1,\n\t\t\tstartColumn: start.character + 1,\n\t\t\tendLineNumber: end.line + 1,\n\t\t\tendColumn: end.character + 1\n\t\t};\n\t}\n\n\texport function to(range: undefined): types.Range;\n\texport function to(range: IRange): types.Range;\n\texport function to(range: IRange | undefined): types.Range | undefined;\n\texport function to(range: IRange | undefined): types.Range | undefined {\n\t\tif (!range) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n\t\treturn new types.Range(startLineNumber - 1, startColumn - 1, endLineNumber - 1, endColumn - 1);\n\t}\n}\n\nexport namespace Position {\n\texport function to(position: IPosition): types.Position {\n\t\treturn new types.Position(position.lineNumber - 1, position.column - 1);\n\t}\n\texport function from(position: types.Position): IPosition {\n\t\treturn { lineNumber: position.line + 1, column: position.character + 1 };\n\t}\n}\n\nexport namespace DiagnosticTag {\n\texport function from(value: vscode.DiagnosticTag): MarkerTag | undefined {\n\t\tswitch (value) {\n\t\t\tcase types.DiagnosticTag.Unnecessary:\n\t\t\t\treturn MarkerTag.Unnecessary;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport namespace Diagnostic {\n\texport function from(value: vscode.Diagnostic): IMarkerData {\n\t\treturn {\n\t\t\t...Range.from(value.range),\n\t\t\tmessage: value.message,\n\t\t\tsource: value.source,\n\t\t\tcode: isString(value.code) || isNumber(value.code) ? String(value.code) : undefined,\n\t\t\tseverity: DiagnosticSeverity.from(value.severity),\n\t\t\trelatedInformation: value.relatedInformation && value.relatedInformation.map(DiagnosticRelatedInformation.from),\n\t\t\ttags: Array.isArray(value.tags) ? coalesce(value.tags.map(DiagnosticTag.from)) : undefined,\n\t\t};\n\t}\n}\n\nexport namespace DiagnosticRelatedInformation {\n\texport function from(value: types.DiagnosticRelatedInformation): IRelatedInformation {\n\t\treturn {\n\t\t\t...Range.from(value.location.range),\n\t\t\tmessage: value.message,\n\t\t\tresource: value.location.uri\n\t\t};\n\t}\n\texport function to(value: IRelatedInformation): types.DiagnosticRelatedInformation {\n\t\treturn new types.DiagnosticRelatedInformation(new types.Location(value.resource, Range.to(value)), value.message);\n\t}\n}\nexport namespace DiagnosticSeverity {\n\n\texport function from(value: number): MarkerSeverity {\n\t\tswitch (value) {\n\t\t\tcase types.DiagnosticSeverity.Error:\n\t\t\t\treturn MarkerSeverity.Error;\n\t\t\tcase types.DiagnosticSeverity.Warning:\n\t\t\t\treturn MarkerSeverity.Warning;\n\t\t\tcase types.DiagnosticSeverity.Information:\n\t\t\t\treturn MarkerSeverity.Info;\n\t\t\tcase types.DiagnosticSeverity.Hint:\n\t\t\t\treturn MarkerSeverity.Hint;\n\t\t}\n\t\treturn MarkerSeverity.Error;\n\t}\n\n\texport function to(value: MarkerSeverity): types.DiagnosticSeverity {\n\t\tswitch (value) {\n\t\t\tcase MarkerSeverity.Info:\n\t\t\t\treturn types.DiagnosticSeverity.Information;\n\t\t\tcase MarkerSeverity.Warning:\n\t\t\t\treturn types.DiagnosticSeverity.Warning;\n\t\t\tcase MarkerSeverity.Error:\n\t\t\t\treturn types.DiagnosticSeverity.Error;\n\t\t\tcase MarkerSeverity.Hint:\n\t\t\t\treturn types.DiagnosticSeverity.Hint;\n\t\t}\n\t\treturn types.DiagnosticSeverity.Error;\n\t}\n}\n\nexport namespace ViewColumn {\n\texport function from(column?: vscode.ViewColumn): EditorViewColumn {\n\t\tif (typeof column === 'number' && column >= types.ViewColumn.One) {\n\t\t\treturn column - 1; // adjust zero index (ViewColumn.ONE => 0)\n\t\t}\n\n\t\tif (column === types.ViewColumn.Beside) {\n\t\t\treturn SIDE_GROUP;\n\t\t}\n\n\t\treturn ACTIVE_GROUP; // default is always the active group\n\t}\n\n\texport function to(position: EditorViewColumn): vscode.ViewColumn {\n\t\tif (typeof position === 'number' && position >= 0) {\n\t\t\treturn position + 1; // adjust to index (ViewColumn.ONE => 1)\n\t\t}\n\n\t\tthrow new Error(`invalid 'EditorViewColumn'`);\n\t}\n}\n\nfunction isDecorationOptions(something: any): something is vscode.DecorationOptions {\n\treturn (typeof something.range !== 'undefined');\n}\n\nexport function isDecorationOptionsArr(something: vscode.Range[] | vscode.DecorationOptions[]): something is vscode.DecorationOptions[] {\n\tif (something.length === 0) {\n\t\treturn true;\n\t}\n\treturn isDecorationOptions(something[0]) ? true : false;\n}\n\nexport namespace MarkdownString {\n\n\texport function fromMany(markup: (vscode.MarkdownString | vscode.MarkedString)[]): htmlContent.IMarkdownString[] {\n\t\treturn markup.map(MarkdownString.from);\n\t}\n\n\tinterface Codeblock {\n\t\tlanguage: string;\n\t\tvalue: string;\n\t}\n\n\tfunction isCodeblock(thing: any): thing is Codeblock {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& typeof (<Codeblock>thing).language === 'string'\n\t\t\t&& typeof (<Codeblock>thing).value === 'string';\n\t}\n\n\texport function from(markup: vscode.MarkdownString | vscode.MarkedString): htmlContent.IMarkdownString {\n\t\tlet res: htmlContent.IMarkdownString;\n\t\tif (isCodeblock(markup)) {\n\t\t\tconst { language, value } = markup;\n\t\t\tres = { value: '```' + language + '\\n' + value + '\\n```\\n' };\n\t\t} else if (htmlContent.isMarkdownString(markup)) {\n\t\t\tres = markup;\n\t\t} else if (typeof markup === 'string') {\n\t\t\tres = { value: <string>markup };\n\t\t} else {\n\t\t\tres = { value: '' };\n\t\t}\n\n\t\t// extract uris into a separate object\n\t\tconst resUris: { [href: string]: UriComponents } = Object.create(null);\n\t\tres.uris = resUris;\n\n\t\tconst renderer = new marked.Renderer();\n\t\trenderer.image = renderer.link = (href: string): string => {\n\t\t\ttry {\n\t\t\t\tlet uri = URI.parse(href, true);\n\t\t\t\turi = uri.with({ query: _uriMassage(uri.query, resUris) });\n\t\t\t\tresUris[href] = uri;\n\t\t\t} catch (e) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\treturn '';\n\t\t};\n\t\tmarked(res.value, { renderer });\n\n\t\treturn res;\n\t}\n\n\tfunction _uriMassage(part: string, bucket: { [n: string]: UriComponents }): string {\n\t\tif (!part) {\n\t\t\treturn part;\n\t\t}\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = parse(decodeURIComponent(part));\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tif (!data) {\n\t\t\treturn part;\n\t\t}\n\t\tdata = cloneAndChange(data, value => {\n\t\t\tif (value instanceof URI) {\n\t\t\t\tconst key = `__uri_${Math.random().toString(16).slice(2, 8)}`;\n\t\t\t\tbucket[key] = value;\n\t\t\t\treturn key;\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t\treturn encodeURIComponent(JSON.stringify(data));\n\t}\n\n\texport function to(value: htmlContent.IMarkdownString): vscode.MarkdownString {\n\t\tconst ret = new htmlContent.MarkdownString(value.value);\n\t\tret.isTrusted = value.isTrusted;\n\t\treturn ret;\n\t}\n\n\texport function fromStrict(value: string | types.MarkdownString): undefined | string | htmlContent.IMarkdownString {\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn typeof value === 'string' ? value : MarkdownString.from(value);\n\t}\n}\n\nexport function fromRangeOrRangeWithMessage(ranges: vscode.Range[] | vscode.DecorationOptions[]): IDecorationOptions[] {\n\tif (isDecorationOptionsArr(ranges)) {\n\t\treturn ranges.map((r): IDecorationOptions => {\n\t\t\treturn {\n\t\t\t\trange: Range.from(r.range),\n\t\t\t\thoverMessage: Array.isArray(r.hoverMessage)\n\t\t\t\t\t? MarkdownString.fromMany(r.hoverMessage)\n\t\t\t\t\t: (r.hoverMessage ? MarkdownString.from(r.hoverMessage) : undefined),\n\t\t\t\trenderOptions: <any> /* URI vs Uri */r.renderOptions\n\t\t\t};\n\t\t});\n\t} else {\n\t\treturn ranges.map((r): IDecorationOptions => {\n\t\t\treturn {\n\t\t\t\trange: Range.from(r)\n\t\t\t};\n\t\t});\n\t}\n}\n\nexport function pathOrURIToURI(value: string | URI): URI {\n\tif (typeof value === 'undefined') {\n\t\treturn value;\n\t}\n\tif (typeof value === 'string') {\n\t\treturn URI.file(value);\n\t} else {\n\t\treturn value;\n\t}\n}\n\nexport namespace ThemableDecorationAttachmentRenderOptions {\n\texport function from(options: vscode.ThemableDecorationAttachmentRenderOptions): IContentDecorationRenderOptions {\n\t\tif (typeof options === 'undefined') {\n\t\t\treturn options;\n\t\t}\n\t\treturn {\n\t\t\tcontentText: options.contentText,\n\t\t\tcontentIconPath: options.contentIconPath ? pathOrURIToURI(options.contentIconPath) : undefined,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\tmargin: options.margin,\n\t\t\twidth: options.width,\n\t\t\theight: options.height,\n\t\t};\n\t}\n}\n\nexport namespace ThemableDecorationRenderOptions {\n\texport function from(options: vscode.ThemableDecorationRenderOptions): IThemeDecorationRenderOptions {\n\t\tif (typeof options === 'undefined') {\n\t\t\treturn options;\n\t\t}\n\t\treturn {\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\toutline: options.outline,\n\t\t\toutlineColor: <string | types.ThemeColor>options.outlineColor,\n\t\t\toutlineStyle: options.outlineStyle,\n\t\t\toutlineWidth: options.outlineWidth,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tborderRadius: options.borderRadius,\n\t\t\tborderSpacing: options.borderSpacing,\n\t\t\tborderStyle: options.borderStyle,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcursor: options.cursor,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\topacity: options.opacity,\n\t\t\tletterSpacing: options.letterSpacing,\n\t\t\tgutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n\t\t\tgutterIconSize: options.gutterIconSize,\n\t\t\toverviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n\t\t\tbefore: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n\t\t\tafter: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n\t\t};\n\t}\n}\n\nexport namespace DecorationRangeBehavior {\n\texport function from(value: types.DecorationRangeBehavior): TrackedRangeStickiness {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn value;\n\t\t}\n\t\tswitch (value) {\n\t\t\tcase types.DecorationRangeBehavior.OpenOpen:\n\t\t\t\treturn TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges;\n\t\t\tcase types.DecorationRangeBehavior.ClosedClosed:\n\t\t\t\treturn TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges;\n\t\t\tcase types.DecorationRangeBehavior.OpenClosed:\n\t\t\t\treturn TrackedRangeStickiness.GrowsOnlyWhenTypingBefore;\n\t\t\tcase types.DecorationRangeBehavior.ClosedOpen:\n\t\t\t\treturn TrackedRangeStickiness.GrowsOnlyWhenTypingAfter;\n\t\t}\n\t}\n}\n\nexport namespace DecorationRenderOptions {\n\texport function from(options: vscode.DecorationRenderOptions): IDecorationRenderOptions {\n\t\treturn {\n\t\t\tisWholeLine: options.isWholeLine,\n\t\t\trangeBehavior: options.rangeBehavior ? DecorationRangeBehavior.from(options.rangeBehavior) : undefined,\n\t\t\toverviewRulerLane: options.overviewRulerLane,\n\t\t\tlight: options.light ? ThemableDecorationRenderOptions.from(options.light) : undefined,\n\t\t\tdark: options.dark ? ThemableDecorationRenderOptions.from(options.dark) : undefined,\n\n\t\t\tbackgroundColor: <string | types.ThemeColor>options.backgroundColor,\n\t\t\toutline: options.outline,\n\t\t\toutlineColor: <string | types.ThemeColor>options.outlineColor,\n\t\t\toutlineStyle: options.outlineStyle,\n\t\t\toutlineWidth: options.outlineWidth,\n\t\t\tborder: options.border,\n\t\t\tborderColor: <string | types.ThemeColor>options.borderColor,\n\t\t\tborderRadius: options.borderRadius,\n\t\t\tborderSpacing: options.borderSpacing,\n\t\t\tborderStyle: options.borderStyle,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tfontStyle: options.fontStyle,\n\t\t\tfontWeight: options.fontWeight,\n\t\t\ttextDecoration: options.textDecoration,\n\t\t\tcursor: options.cursor,\n\t\t\tcolor: <string | types.ThemeColor>options.color,\n\t\t\topacity: options.opacity,\n\t\t\tletterSpacing: options.letterSpacing,\n\t\t\tgutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n\t\t\tgutterIconSize: options.gutterIconSize,\n\t\t\toverviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n\t\t\tbefore: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n\t\t\tafter: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n\t\t};\n\t}\n}\n\nexport namespace TextEdit {\n\n\texport function from(edit: vscode.TextEdit): modes.TextEdit {\n\t\treturn <modes.TextEdit>{\n\t\t\ttext: edit.newText,\n\t\t\teol: EndOfLine.from(edit.newEol),\n\t\t\trange: Range.from(edit.range)\n\t\t};\n\t}\n\n\texport function to(edit: modes.TextEdit): types.TextEdit {\n\t\tconst result = new types.TextEdit(Range.to(edit.range), edit.text);\n\t\tresult.newEol = (typeof edit.eol === 'undefined' ? undefined : EndOfLine.to(edit.eol))!;\n\t\treturn result;\n\t}\n}\n\nexport namespace WorkspaceEdit {\n\texport function from(value: vscode.WorkspaceEdit, documents?: ExtHostDocumentsAndEditors): WorkspaceEditDto {\n\t\tconst result: WorkspaceEditDto = {\n\t\t\tedits: []\n\t\t};\n\t\tfor (const entry of (value as types.WorkspaceEdit)._allEntries()) {\n\t\t\tconst [uri, uriOrEdits] = entry;\n\t\t\tif (Array.isArray(uriOrEdits)) {\n\t\t\t\t// text edits\n\t\t\t\tconst doc = documents && uri ? documents.getDocument(uri) : undefined;\n\t\t\t\tresult.edits.push(<ResourceTextEditDto>{ resource: uri, modelVersionId: doc && doc.version, edits: uriOrEdits.map(TextEdit.from) });\n\t\t\t} else {\n\t\t\t\t// resource edits\n\t\t\t\tresult.edits.push(<ResourceFileEditDto>{ oldUri: uri, newUri: uriOrEdits, options: entry[2] });\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function to(value: WorkspaceEditDto) {\n\t\tconst result = new types.WorkspaceEdit();\n\t\tfor (const edit of value.edits) {\n\t\t\tif (Array.isArray((<ResourceTextEditDto>edit).edits)) {\n\t\t\t\tresult.set(\n\t\t\t\t\tURI.revive((<ResourceTextEditDto>edit).resource),\n\t\t\t\t\t<types.TextEdit[]>(<ResourceTextEditDto>edit).edits.map(TextEdit.to)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult.renameFile(\n\t\t\t\t\tURI.revive((<ResourceFileEditDto>edit).oldUri),\n\t\t\t\t\tURI.revive((<ResourceFileEditDto>edit).newUri),\n\t\t\t\t\t(<ResourceFileEditDto>edit).options\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n\nexport namespace SymbolKind {\n\n\tconst _fromMapping: { [kind: number]: modes.SymbolKind } = Object.create(null);\n\t_fromMapping[types.SymbolKind.File] = modes.SymbolKind.File;\n\t_fromMapping[types.SymbolKind.Module] = modes.SymbolKind.Module;\n\t_fromMapping[types.SymbolKind.Namespace] = modes.SymbolKind.Namespace;\n\t_fromMapping[types.SymbolKind.Package] = modes.SymbolKind.Package;\n\t_fromMapping[types.SymbolKind.Class] = modes.SymbolKind.Class;\n\t_fromMapping[types.SymbolKind.Method] = modes.SymbolKind.Method;\n\t_fromMapping[types.SymbolKind.Property] = modes.SymbolKind.Property;\n\t_fromMapping[types.SymbolKind.Field] = modes.SymbolKind.Field;\n\t_fromMapping[types.SymbolKind.Constructor] = modes.SymbolKind.Constructor;\n\t_fromMapping[types.SymbolKind.Enum] = modes.SymbolKind.Enum;\n\t_fromMapping[types.SymbolKind.Interface] = modes.SymbolKind.Interface;\n\t_fromMapping[types.SymbolKind.Function] = modes.SymbolKind.Function;\n\t_fromMapping[types.SymbolKind.Variable] = modes.SymbolKind.Variable;\n\t_fromMapping[types.SymbolKind.Constant] = modes.SymbolKind.Constant;\n\t_fromMapping[types.SymbolKind.String] = modes.SymbolKind.String;\n\t_fromMapping[types.SymbolKind.Number] = modes.SymbolKind.Number;\n\t_fromMapping[types.SymbolKind.Boolean] = modes.SymbolKind.Boolean;\n\t_fromMapping[types.SymbolKind.Array] = modes.SymbolKind.Array;\n\t_fromMapping[types.SymbolKind.Object] = modes.SymbolKind.Object;\n\t_fromMapping[types.SymbolKind.Key] = modes.SymbolKind.Key;\n\t_fromMapping[types.SymbolKind.Null] = modes.SymbolKind.Null;\n\t_fromMapping[types.SymbolKind.EnumMember] = modes.SymbolKind.EnumMember;\n\t_fromMapping[types.SymbolKind.Struct] = modes.SymbolKind.Struct;\n\t_fromMapping[types.SymbolKind.Event] = modes.SymbolKind.Event;\n\t_fromMapping[types.SymbolKind.Operator] = modes.SymbolKind.Operator;\n\t_fromMapping[types.SymbolKind.TypeParameter] = modes.SymbolKind.TypeParameter;\n\n\texport function from(kind: vscode.SymbolKind): modes.SymbolKind {\n\t\treturn typeof _fromMapping[kind] === 'number' ? _fromMapping[kind] : modes.SymbolKind.Property;\n\t}\n\n\texport function to(kind: modes.SymbolKind): vscode.SymbolKind {\n\t\tfor (const k in _fromMapping) {\n\t\t\tif (_fromMapping[k] === kind) {\n\t\t\t\treturn Number(k);\n\t\t\t}\n\t\t}\n\t\treturn types.SymbolKind.Property;\n\t}\n}\n\nexport namespace WorkspaceSymbol {\n\texport function from(info: vscode.SymbolInformation): search.IWorkspaceSymbol {\n\t\treturn <search.IWorkspaceSymbol>{\n\t\t\tname: info.name,\n\t\t\tkind: SymbolKind.from(info.kind),\n\t\t\tcontainerName: info.containerName,\n\t\t\tlocation: location.from(info.location)\n\t\t};\n\t}\n\texport function to(info: search.IWorkspaceSymbol): types.SymbolInformation {\n\t\treturn new types.SymbolInformation(\n\t\t\tinfo.name,\n\t\t\tSymbolKind.to(info.kind),\n\t\t\tinfo.containerName,\n\t\t\tlocation.to(info.location)\n\t\t);\n\t}\n}\n\nexport namespace DocumentSymbol {\n\texport function from(info: vscode.DocumentSymbol): modes.DocumentSymbol {\n\t\tconst result: modes.DocumentSymbol = {\n\t\t\tname: info.name || '!!MISSING: name!!',\n\t\t\tdetail: info.detail,\n\t\t\trange: Range.from(info.range),\n\t\t\tselectionRange: Range.from(info.selectionRange),\n\t\t\tkind: SymbolKind.from(info.kind)\n\t\t};\n\t\tif (info.children) {\n\t\t\tresult.children = info.children.map(from);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(info: modes.DocumentSymbol): vscode.DocumentSymbol {\n\t\tconst result = new types.DocumentSymbol(\n\t\t\tinfo.name,\n\t\t\tinfo.detail,\n\t\t\tSymbolKind.to(info.kind),\n\t\t\tRange.to(info.range),\n\t\t\tRange.to(info.selectionRange),\n\t\t);\n\t\tif (info.children) {\n\t\t\tresult.children = info.children.map(to) as any;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport namespace location {\n\texport function from(value: vscode.Location): modes.Location {\n\t\treturn {\n\t\t\trange: value.range && Range.from(value.range),\n\t\t\turi: value.uri\n\t\t};\n\t}\n\n\texport function to(value: modes.Location): types.Location {\n\t\treturn new types.Location(value.uri, Range.to(value.range));\n\t}\n}\n\nexport namespace DefinitionLink {\n\texport function from(value: vscode.Location | vscode.DefinitionLink): modes.LocationLink {\n\t\tconst definitionLink = <vscode.DefinitionLink>value;\n\t\tconst location = <vscode.Location>value;\n\t\treturn {\n\t\t\toriginSelectionRange: definitionLink.originSelectionRange\n\t\t\t\t? Range.from(definitionLink.originSelectionRange)\n\t\t\t\t: undefined,\n\t\t\turi: definitionLink.targetUri ? definitionLink.targetUri : location.uri,\n\t\t\trange: Range.from(definitionLink.targetRange ? definitionLink.targetRange : location.range),\n\t\t\ttargetSelectionRange: definitionLink.targetSelectionRange\n\t\t\t\t? Range.from(definitionLink.targetSelectionRange)\n\t\t\t\t: undefined,\n\t\t};\n\t}\n}\n\nexport namespace Hover {\n\texport function from(hover: vscode.Hover): modes.Hover {\n\t\treturn <modes.Hover>{\n\t\t\trange: Range.from(hover.range),\n\t\t\tcontents: MarkdownString.fromMany(hover.contents)\n\t\t};\n\t}\n\n\texport function to(info: modes.Hover): types.Hover {\n\t\treturn new types.Hover(info.contents.map(MarkdownString.to), Range.to(info.range));\n\t}\n}\nexport namespace DocumentHighlight {\n\texport function from(documentHighlight: vscode.DocumentHighlight): modes.DocumentHighlight {\n\t\treturn {\n\t\t\trange: Range.from(documentHighlight.range),\n\t\t\tkind: documentHighlight.kind\n\t\t};\n\t}\n\texport function to(occurrence: modes.DocumentHighlight): types.DocumentHighlight {\n\t\treturn new types.DocumentHighlight(Range.to(occurrence.range), occurrence.kind);\n\t}\n}\n\nexport namespace CompletionTriggerKind {\n\texport function to(kind: modes.CompletionTriggerKind) {\n\t\tswitch (kind) {\n\t\t\tcase modes.CompletionTriggerKind.TriggerCharacter:\n\t\t\t\treturn types.CompletionTriggerKind.TriggerCharacter;\n\t\t\tcase modes.CompletionTriggerKind.TriggerForIncompleteCompletions:\n\t\t\t\treturn types.CompletionTriggerKind.TriggerForIncompleteCompletions;\n\t\t\tcase modes.CompletionTriggerKind.Invoke:\n\t\t\tdefault:\n\t\t\t\treturn types.CompletionTriggerKind.Invoke;\n\t\t}\n\t}\n}\n\nexport namespace CompletionContext {\n\texport function to(context: modes.CompletionContext): types.CompletionContext {\n\t\treturn {\n\t\t\ttriggerKind: CompletionTriggerKind.to(context.triggerKind),\n\t\t\ttriggerCharacter: context.triggerCharacter\n\t\t};\n\t}\n}\n\nexport namespace CompletionItemKind {\n\n\texport function from(kind: types.CompletionItemKind | undefined): modes.CompletionItemKind {\n\t\tswitch (kind) {\n\t\t\tcase types.CompletionItemKind.Method: return modes.CompletionItemKind.Method;\n\t\t\tcase types.CompletionItemKind.Function: return modes.CompletionItemKind.Function;\n\t\t\tcase types.CompletionItemKind.Constructor: return modes.CompletionItemKind.Constructor;\n\t\t\tcase types.CompletionItemKind.Field: return modes.CompletionItemKind.Field;\n\t\t\tcase types.CompletionItemKind.Variable: return modes.CompletionItemKind.Variable;\n\t\t\tcase types.CompletionItemKind.Class: return modes.CompletionItemKind.Class;\n\t\t\tcase types.CompletionItemKind.Interface: return modes.CompletionItemKind.Interface;\n\t\t\tcase types.CompletionItemKind.Struct: return modes.CompletionItemKind.Struct;\n\t\t\tcase types.CompletionItemKind.Module: return modes.CompletionItemKind.Module;\n\t\t\tcase types.CompletionItemKind.Property: return modes.CompletionItemKind.Property;\n\t\t\tcase types.CompletionItemKind.Unit: return modes.CompletionItemKind.Unit;\n\t\t\tcase types.CompletionItemKind.Value: return modes.CompletionItemKind.Value;\n\t\t\tcase types.CompletionItemKind.Constant: return modes.CompletionItemKind.Constant;\n\t\t\tcase types.CompletionItemKind.Enum: return modes.CompletionItemKind.Enum;\n\t\t\tcase types.CompletionItemKind.EnumMember: return modes.CompletionItemKind.EnumMember;\n\t\t\tcase types.CompletionItemKind.Keyword: return modes.CompletionItemKind.Keyword;\n\t\t\tcase types.CompletionItemKind.Snippet: return modes.CompletionItemKind.Snippet;\n\t\t\tcase types.CompletionItemKind.Text: return modes.CompletionItemKind.Text;\n\t\t\tcase types.CompletionItemKind.Color: return modes.CompletionItemKind.Color;\n\t\t\tcase types.CompletionItemKind.File: return modes.CompletionItemKind.File;\n\t\t\tcase types.CompletionItemKind.Reference: return modes.CompletionItemKind.Reference;\n\t\t\tcase types.CompletionItemKind.Folder: return modes.CompletionItemKind.Folder;\n\t\t\tcase types.CompletionItemKind.Event: return modes.CompletionItemKind.Event;\n\t\t\tcase types.CompletionItemKind.Operator: return modes.CompletionItemKind.Operator;\n\t\t\tcase types.CompletionItemKind.TypeParameter: return modes.CompletionItemKind.TypeParameter;\n\t\t}\n\t\treturn modes.CompletionItemKind.Property;\n\t}\n\n\texport function to(kind: modes.CompletionItemKind): types.CompletionItemKind {\n\t\tswitch (kind) {\n\t\t\tcase modes.CompletionItemKind.Method: return types.CompletionItemKind.Method;\n\t\t\tcase modes.CompletionItemKind.Function: return types.CompletionItemKind.Function;\n\t\t\tcase modes.CompletionItemKind.Constructor: return types.CompletionItemKind.Constructor;\n\t\t\tcase modes.CompletionItemKind.Field: return types.CompletionItemKind.Field;\n\t\t\tcase modes.CompletionItemKind.Variable: return types.CompletionItemKind.Variable;\n\t\t\tcase modes.CompletionItemKind.Class: return types.CompletionItemKind.Class;\n\t\t\tcase modes.CompletionItemKind.Interface: return types.CompletionItemKind.Interface;\n\t\t\tcase modes.CompletionItemKind.Struct: return types.CompletionItemKind.Struct;\n\t\t\tcase modes.CompletionItemKind.Module: return types.CompletionItemKind.Module;\n\t\t\tcase modes.CompletionItemKind.Property: return types.CompletionItemKind.Property;\n\t\t\tcase modes.CompletionItemKind.Unit: return types.CompletionItemKind.Unit;\n\t\t\tcase modes.CompletionItemKind.Value: return types.CompletionItemKind.Value;\n\t\t\tcase modes.CompletionItemKind.Constant: return types.CompletionItemKind.Constant;\n\t\t\tcase modes.CompletionItemKind.Enum: return types.CompletionItemKind.Enum;\n\t\t\tcase modes.CompletionItemKind.EnumMember: return types.CompletionItemKind.EnumMember;\n\t\t\tcase modes.CompletionItemKind.Keyword: return types.CompletionItemKind.Keyword;\n\t\t\tcase modes.CompletionItemKind.Snippet: return types.CompletionItemKind.Snippet;\n\t\t\tcase modes.CompletionItemKind.Text: return types.CompletionItemKind.Text;\n\t\t\tcase modes.CompletionItemKind.Color: return types.CompletionItemKind.Color;\n\t\t\tcase modes.CompletionItemKind.File: return types.CompletionItemKind.File;\n\t\t\tcase modes.CompletionItemKind.Reference: return types.CompletionItemKind.Reference;\n\t\t\tcase modes.CompletionItemKind.Folder: return types.CompletionItemKind.Folder;\n\t\t\tcase modes.CompletionItemKind.Event: return types.CompletionItemKind.Event;\n\t\t\tcase modes.CompletionItemKind.Operator: return types.CompletionItemKind.Operator;\n\t\t\tcase modes.CompletionItemKind.TypeParameter: return types.CompletionItemKind.TypeParameter;\n\t\t}\n\t\treturn types.CompletionItemKind.Property;\n\t}\n}\n\nexport namespace CompletionItem {\n\n\texport function to(suggestion: modes.CompletionItem): types.CompletionItem {\n\t\tconst result = new types.CompletionItem(suggestion.label);\n\t\tresult.insertText = suggestion.insertText;\n\t\tresult.kind = CompletionItemKind.to(suggestion.kind);\n\t\tresult.detail = suggestion.detail;\n\t\tresult.documentation = htmlContent.isMarkdownString(suggestion.documentation) ? MarkdownString.to(suggestion.documentation) : suggestion.documentation;\n\t\tresult.sortText = suggestion.sortText;\n\t\tresult.filterText = suggestion.filterText;\n\t\tresult.preselect = suggestion.preselect;\n\t\tresult.commitCharacters = suggestion.commitCharacters;\n\t\tresult.range = Range.to(suggestion.range);\n\t\tresult.keepWhitespace = typeof suggestion.insertTextRules === 'undefined' ? false : Boolean(suggestion.insertTextRules & modes.CompletionItemInsertTextRule.KeepWhitespace);\n\t\t// 'inserText'-logic\n\t\tif (typeof suggestion.insertTextRules !== 'undefined' && suggestion.insertTextRules & modes.CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\tresult.insertText = new types.SnippetString(suggestion.insertText);\n\t\t} else {\n\t\t\tresult.insertText = suggestion.insertText;\n\t\t\tresult.textEdit = new types.TextEdit(result.range, result.insertText);\n\t\t}\n\t\t// TODO additionalEdits, command\n\n\t\treturn result;\n\t}\n}\n\nexport namespace ParameterInformation {\n\texport function from(info: types.ParameterInformation): modes.ParameterInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: info.documentation ? MarkdownString.fromStrict(info.documentation) : undefined\n\t\t};\n\t}\n\texport function to(info: modes.ParameterInformation): types.ParameterInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: htmlContent.isMarkdownString(info.documentation) ? MarkdownString.to(info.documentation) : info.documentation\n\t\t};\n\t}\n}\n\nexport namespace SignatureInformation {\n\n\texport function from(info: types.SignatureInformation): modes.SignatureInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: info.documentation ? MarkdownString.fromStrict(info.documentation) : undefined,\n\t\t\tparameters: info.parameters && info.parameters.map(ParameterInformation.from)\n\t\t};\n\t}\n\n\texport function to(info: modes.SignatureInformation): types.SignatureInformation {\n\t\treturn {\n\t\t\tlabel: info.label,\n\t\t\tdocumentation: htmlContent.isMarkdownString(info.documentation) ? MarkdownString.to(info.documentation) : info.documentation,\n\t\t\tparameters: info.parameters && info.parameters.map(ParameterInformation.to)\n\t\t};\n\t}\n}\n\nexport namespace SignatureHelp {\n\n\texport function from(help: types.SignatureHelp): modes.SignatureHelp {\n\t\treturn {\n\t\t\tactiveSignature: help.activeSignature,\n\t\t\tactiveParameter: help.activeParameter,\n\t\t\tsignatures: help.signatures && help.signatures.map(SignatureInformation.from)\n\t\t};\n\t}\n\n\texport function to(help: modes.SignatureHelp): types.SignatureHelp {\n\t\treturn {\n\t\t\tactiveSignature: help.activeSignature,\n\t\t\tactiveParameter: help.activeParameter,\n\t\t\tsignatures: help.signatures && help.signatures.map(SignatureInformation.to)\n\t\t};\n\t}\n}\n\nexport namespace DocumentLink {\n\n\texport function from(link: vscode.DocumentLink): modes.ILink {\n\t\treturn {\n\t\t\trange: Range.from(link.range),\n\t\t\turl: link.target\n\t\t};\n\t}\n\n\texport function to(link: modes.ILink): vscode.DocumentLink {\n\t\tlet target: URI | undefined = undefined;\n\t\tif (link.url) {\n\t\t\ttry {\n\t\t\t\ttarget = typeof link.url === 'string' ? URI.parse(link.url, true) : URI.revive(link.url);\n\t\t\t} catch (err) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\treturn new types.DocumentLink(Range.to(link.range), target);\n\t}\n}\n\nexport namespace ColorPresentation {\n\texport function to(colorPresentation: modes.IColorPresentation): types.ColorPresentation {\n\t\tconst cp = new types.ColorPresentation(colorPresentation.label);\n\t\tif (colorPresentation.textEdit) {\n\t\t\tcp.textEdit = TextEdit.to(colorPresentation.textEdit);\n\t\t}\n\t\tif (colorPresentation.additionalTextEdits) {\n\t\t\tcp.additionalTextEdits = colorPresentation.additionalTextEdits.map(value => TextEdit.to(value));\n\t\t}\n\t\treturn cp;\n\t}\n\n\texport function from(colorPresentation: vscode.ColorPresentation): modes.IColorPresentation {\n\t\treturn {\n\t\t\tlabel: colorPresentation.label,\n\t\t\ttextEdit: colorPresentation.textEdit ? TextEdit.from(colorPresentation.textEdit) : undefined,\n\t\t\tadditionalTextEdits: colorPresentation.additionalTextEdits ? colorPresentation.additionalTextEdits.map(value => TextEdit.from(value)) : undefined\n\t\t};\n\t}\n}\n\nexport namespace Color {\n\texport function to(c: [number, number, number, number]): types.Color {\n\t\treturn new types.Color(c[0], c[1], c[2], c[3]);\n\t}\n\texport function from(color: types.Color): [number, number, number, number] {\n\t\treturn [color.red, color.green, color.blue, color.alpha];\n\t}\n}\n\n\nexport namespace SelectionRange {\n\texport function from(obj: vscode.SelectionRange): modes.SelectionRange {\n\t\treturn {\n\t\t\tkind: '',\n\t\t\trange: Range.from(obj.range)\n\t\t};\n\t}\n\n\texport function to(obj: modes.SelectionRange): vscode.SelectionRange {\n\t\treturn new types.SelectionRange(Range.to(obj.range));\n\t}\n}\n\nexport namespace TextDocumentSaveReason {\n\n\texport function to(reason: SaveReason): vscode.TextDocumentSaveReason {\n\t\tswitch (reason) {\n\t\t\tcase SaveReason.AUTO:\n\t\t\t\treturn types.TextDocumentSaveReason.AfterDelay;\n\t\t\tcase SaveReason.EXPLICIT:\n\t\t\t\treturn types.TextDocumentSaveReason.Manual;\n\t\t\tcase SaveReason.FOCUS_CHANGE:\n\t\t\tcase SaveReason.WINDOW_CHANGE:\n\t\t\t\treturn types.TextDocumentSaveReason.FocusOut;\n\t\t}\n\t}\n}\n\n\nexport namespace EndOfLine {\n\n\texport function from(eol: vscode.EndOfLine): EndOfLineSequence | undefined {\n\t\tif (eol === types.EndOfLine.CRLF) {\n\t\t\treturn EndOfLineSequence.CRLF;\n\t\t} else if (eol === types.EndOfLine.LF) {\n\t\t\treturn EndOfLineSequence.LF;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function to(eol: EndOfLineSequence): vscode.EndOfLine | undefined {\n\t\tif (eol === EndOfLineSequence.CRLF) {\n\t\t\treturn types.EndOfLine.CRLF;\n\t\t} else if (eol === EndOfLineSequence.LF) {\n\t\t\treturn types.EndOfLine.LF;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport namespace ProgressLocation {\n\texport function from(loc: vscode.ProgressLocation): MainProgressLocation {\n\t\tswitch (loc) {\n\t\t\tcase types.ProgressLocation.SourceControl: return MainProgressLocation.Scm;\n\t\t\tcase types.ProgressLocation.Window: return MainProgressLocation.Window;\n\t\t\tcase types.ProgressLocation.Notification: return MainProgressLocation.Notification;\n\t\t}\n\t\tthrow new Error(`Unknown 'ProgressLocation'`);\n\t}\n}\n\nexport namespace FoldingRange {\n\texport function from(r: vscode.FoldingRange): modes.FoldingRange {\n\t\tconst range: modes.FoldingRange = { start: r.start + 1, end: r.end + 1 };\n\t\tif (r.kind) {\n\t\t\trange.kind = FoldingRangeKind.from(r.kind);\n\t\t}\n\t\treturn range;\n\t}\n}\n\nexport namespace FoldingRangeKind {\n\texport function from(kind: vscode.FoldingRangeKind | undefined): modes.FoldingRangeKind | undefined {\n\t\tif (kind) {\n\t\t\tswitch (kind) {\n\t\t\t\tcase types.FoldingRangeKind.Comment:\n\t\t\t\t\treturn modes.FoldingRangeKind.Comment;\n\t\t\t\tcase types.FoldingRangeKind.Imports:\n\t\t\t\t\treturn modes.FoldingRangeKind.Imports;\n\t\t\t\tcase types.FoldingRangeKind.Region:\n\t\t\t\t\treturn modes.FoldingRangeKind.Region;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport namespace TextEditorOptions {\n\n\texport function from(options?: vscode.TextDocumentShowOptions): ITextEditorOptions | undefined {\n\t\tif (options) {\n\t\t\treturn {\n\t\t\t\tpinned: typeof options.preview === 'boolean' ? !options.preview : undefined,\n\t\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\t\tselection: typeof options.selection === 'object' ? Range.from(options.selection) : undefined\n\t\t\t} as ITextEditorOptions;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n}\n\nexport namespace GlobPattern {\n\n\texport function from(pattern: vscode.GlobPattern): string | types.RelativePattern;\n\texport function from(pattern: undefined | null): undefined | null;\n\texport function from(pattern: vscode.GlobPattern | undefined | null): string | types.RelativePattern | undefined | null;\n\texport function from(pattern: vscode.GlobPattern | undefined | null): string | types.RelativePattern | undefined | null {\n\t\tif (pattern instanceof types.RelativePattern) {\n\t\t\treturn pattern;\n\t\t}\n\n\t\tif (typeof pattern === 'string') {\n\t\t\treturn pattern;\n\t\t}\n\n\t\tif (isRelativePattern(pattern)) {\n\t\t\treturn new types.RelativePattern(pattern.base, pattern.pattern);\n\t\t}\n\n\t\treturn pattern; // preserve `undefined` and `null`\n\t}\n\n\tfunction isRelativePattern(obj: any): obj is vscode.RelativePattern {\n\t\tconst rp = obj as vscode.RelativePattern;\n\t\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n\t}\n}\n\nexport namespace LanguageSelector {\n\n\texport function from(selector: undefined): undefined;\n\texport function from(selector: vscode.DocumentSelector): languageSelector.LanguageSelector;\n\texport function from(selector: vscode.DocumentSelector | undefined): languageSelector.LanguageSelector | undefined;\n\texport function from(selector: vscode.DocumentSelector | undefined): languageSelector.LanguageSelector | undefined {\n\t\tif (!selector) {\n\t\t\treturn undefined;\n\t\t} else if (Array.isArray(selector)) {\n\t\t\treturn <languageSelector.LanguageSelector>selector.map(from);\n\t\t} else if (typeof selector === 'string') {\n\t\t\treturn selector;\n\t\t} else {\n\t\t\treturn <languageSelector.LanguageFilter>{\n\t\t\t\tlanguage: selector.language,\n\t\t\t\tscheme: selector.scheme,\n\t\t\t\tpattern: typeof selector.pattern === 'undefined' ? undefined : GlobPattern.from(selector.pattern),\n\t\t\t\texclusive: selector.exclusive\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport namespace LogLevel {\n\texport function from(extLevel: types.LogLevel): _MainLogLevel {\n\t\tswitch (extLevel) {\n\t\t\tcase types.LogLevel.Trace:\n\t\t\t\treturn _MainLogLevel.Trace;\n\t\t\tcase types.LogLevel.Debug:\n\t\t\t\treturn _MainLogLevel.Debug;\n\t\t\tcase types.LogLevel.Info:\n\t\t\t\treturn _MainLogLevel.Info;\n\t\t\tcase types.LogLevel.Warning:\n\t\t\t\treturn _MainLogLevel.Warning;\n\t\t\tcase types.LogLevel.Error:\n\t\t\t\treturn _MainLogLevel.Error;\n\t\t\tcase types.LogLevel.Critical:\n\t\t\t\treturn _MainLogLevel.Critical;\n\t\t\tcase types.LogLevel.Off:\n\t\t\t\treturn _MainLogLevel.Off;\n\t\t}\n\n\t\treturn _MainLogLevel.Info;\n\t}\n\n\texport function to(mainLevel: _MainLogLevel): types.LogLevel {\n\t\tswitch (mainLevel) {\n\t\t\tcase _MainLogLevel.Trace:\n\t\t\t\treturn types.LogLevel.Trace;\n\t\t\tcase _MainLogLevel.Debug:\n\t\t\t\treturn types.LogLevel.Debug;\n\t\t\tcase _MainLogLevel.Info:\n\t\t\t\treturn types.LogLevel.Info;\n\t\t\tcase _MainLogLevel.Warning:\n\t\t\t\treturn types.LogLevel.Warning;\n\t\t\tcase _MainLogLevel.Error:\n\t\t\t\treturn types.LogLevel.Error;\n\t\t\tcase _MainLogLevel.Critical:\n\t\t\t\treturn types.LogLevel.Critical;\n\t\t\tcase _MainLogLevel.Off:\n\t\t\t\treturn types.LogLevel.Off;\n\t\t}\n\n\t\treturn types.LogLevel.Info;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport * as typeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport { CommandsRegistry, ICommandService, ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { EditorViewColumn } from 'vs/workbench/api/shared/editor';\nimport { EditorGroupLayout } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IWindowsService, IOpenSettings } from 'vs/platform/windows/common/windows';\nimport { IDownloadService } from 'vs/platform/download/common/download';\n\n// -----------------------------------------------------------------\n// The following commands are registered on both sides separately.\n//\n// We are trying to maintain backwards compatibility for cases where\n// API commands are encoded as markdown links, for example.\n// -----------------------------------------------------------------\n\nexport interface ICommandsExecutor {\n\texecuteCommand<T>(id: string, ...args: any[]): Promise<T | undefined>;\n}\n\nfunction adjustHandler(handler: (executor: ICommandsExecutor, ...args: any[]) => any): ICommandHandler {\n\treturn (accessor, ...args: any[]) => {\n\t\treturn handler(accessor.get(ICommandService), ...args);\n\t};\n}\n\ninterface IOpenFolderAPICommandOptions {\n\tforceNewWindow?: boolean;\n\tnoRecentEntry?: boolean;\n\trecentEntryLabel?: string;\n}\n\nexport class OpenFolderAPICommand {\n\tpublic static ID = 'vscode.openFolder';\n\tpublic static execute(executor: ICommandsExecutor, uri?: URI, forceNewWindow?: boolean): Promise<any>;\n\tpublic static execute(executor: ICommandsExecutor, uri?: URI, options?: IOpenFolderAPICommandOptions): Promise<any>;\n\tpublic static execute(executor: ICommandsExecutor, uri?: URI, arg: boolean | IOpenFolderAPICommandOptions = {}): Promise<any> {\n\t\tif (typeof arg === 'boolean') {\n\t\t\targ = { forceNewWindow: arg };\n\t\t}\n\t\tif (!uri) {\n\t\t\treturn executor.executeCommand('_files.pickFolderAndOpen', arg.forceNewWindow);\n\t\t}\n\t\tconst options: IOpenSettings = { forceNewWindow: arg.forceNewWindow };\n\t\tif (arg.noRecentEntry) {\n\t\t\toptions.args = { _: [], 'skip-add-to-recently-opened': true };\n\t\t}\n\t\turi = URI.revive(uri);\n\t\treturn executor.executeCommand('_files.windowOpen', [{ uri, label: arg.recentEntryLabel }], options);\n\t}\n}\nCommandsRegistry.registerCommand({\n\tid: OpenFolderAPICommand.ID,\n\thandler: adjustHandler(OpenFolderAPICommand.execute),\n\tdescription: {\n\t\tdescription: 'Open a folder or workspace in the current window or new window depending on the newWindow argument. Note that opening in the same window will shutdown the current extension host process and start a new one on the given folder/workspace unless the newWindow parameter is set to true.',\n\t\targs: [\n\t\t\t{ name: 'uri', description: '(optional) Uri of the folder or workspace file to open. If not provided, a native dialog will ask the user for the folder', constraint: (value: any) => value === undefined || value instanceof URI },\n\t\t\t{ name: 'options', description: '(optional) Options. Object with the following properties: `forceNewWindow `: Whether to open the folder/workspace in a new window or the same. Defaults to opening in the same window. `noRecentEntry`: Wheter the opened URI will appear in the \\'Open Recent\\' list. Defaults to true. `recentEntryLabel`: The label used for \\'Open Recent\\' list. Note, for backward compatibility, options can also be of type boolean, representing the `forceNewWindow` setting.', constraint: (value: any) => value === undefined || typeof value === 'object' || typeof value === 'boolean' }\n\t\t]\n\t}\n});\n\nexport class DiffAPICommand {\n\tpublic static ID = 'vscode.diff';\n\tpublic static execute(executor: ICommandsExecutor, left: URI, right: URI, label: string, options?: vscode.TextDocumentShowOptions): Promise<any> {\n\t\treturn executor.executeCommand('_workbench.diff', [\n\t\t\tleft, right,\n\t\t\tlabel,\n\t\t\tundefined,\n\t\t\ttypeConverters.TextEditorOptions.from(options),\n\t\t\toptions ? typeConverters.ViewColumn.from(options.viewColumn) : undefined\n\t\t]);\n\t}\n}\nCommandsRegistry.registerCommand(DiffAPICommand.ID, adjustHandler(DiffAPICommand.execute));\n\nexport class OpenAPICommand {\n\tpublic static ID = 'vscode.open';\n\tpublic static execute(executor: ICommandsExecutor, resource: URI, columnOrOptions?: vscode.ViewColumn | vscode.TextDocumentShowOptions, label?: string): Promise<any> {\n\t\tlet options: ITextEditorOptions | undefined;\n\t\tlet position: EditorViewColumn | undefined;\n\n\t\tif (columnOrOptions) {\n\t\t\tif (typeof columnOrOptions === 'number') {\n\t\t\t\tposition = typeConverters.ViewColumn.from(columnOrOptions);\n\t\t\t} else {\n\t\t\t\toptions = typeConverters.TextEditorOptions.from(columnOrOptions);\n\t\t\t\tposition = typeConverters.ViewColumn.from(columnOrOptions.viewColumn);\n\t\t\t}\n\t\t}\n\n\t\treturn executor.executeCommand('_workbench.open', [\n\t\t\tresource,\n\t\t\toptions,\n\t\t\tposition,\n\t\t\tlabel\n\t\t]);\n\t}\n}\nCommandsRegistry.registerCommand(OpenAPICommand.ID, adjustHandler(OpenAPICommand.execute));\n\nCommandsRegistry.registerCommand('_workbench.removeFromRecentlyOpened', function (accessor: ServicesAccessor, uri: URI) {\n\tconst windowsService = accessor.get(IWindowsService);\n\treturn windowsService.removeFromRecentlyOpened([uri]).then(() => undefined);\n});\n\nexport class RemoveFromRecentlyOpenedAPICommand {\n\tpublic static ID = 'vscode.removeFromRecentlyOpened';\n\tpublic static execute(executor: ICommandsExecutor, path: string | URI): Promise<any> {\n\t\tif (typeof path === 'string') {\n\t\t\tpath = path.match(/^[^:/?#]+:\\/\\//) ? URI.parse(path) : URI.file(path);\n\t\t} else {\n\t\t\tpath = URI.revive(path); // called from extension host\n\t\t}\n\t\treturn executor.executeCommand('_workbench.removeFromRecentlyOpened', path);\n\t}\n}\nCommandsRegistry.registerCommand(RemoveFromRecentlyOpenedAPICommand.ID, adjustHandler(RemoveFromRecentlyOpenedAPICommand.execute));\n\nexport class SetEditorLayoutAPICommand {\n\tpublic static ID = 'vscode.setEditorLayout';\n\tpublic static execute(executor: ICommandsExecutor, layout: EditorGroupLayout): Promise<any> {\n\t\treturn executor.executeCommand('layoutEditorGroups', layout);\n\t}\n}\nCommandsRegistry.registerCommand({\n\tid: SetEditorLayoutAPICommand.ID,\n\thandler: adjustHandler(SetEditorLayoutAPICommand.execute),\n\tdescription: {\n\t\tdescription: 'Set Editor Layout',\n\t\targs: [{\n\t\t\tname: 'args',\n\t\t\tschema: {\n\t\t\t\t'type': 'object',\n\t\t\t\t'required': ['groups'],\n\t\t\t\t'properties': {\n\t\t\t\t\t'orientation': {\n\t\t\t\t\t\t'type': 'number',\n\t\t\t\t\t\t'default': 0,\n\t\t\t\t\t\t'enum': [0, 1]\n\t\t\t\t\t},\n\t\t\t\t\t'groups': {\n\t\t\t\t\t\t'$ref': '#/definitions/editorGroupsSchema', // defined in keybindingService.ts ...\n\t\t\t\t\t\t'default': [{}, {}],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}]\n\t}\n});\n\nCommandsRegistry.registerCommand('_workbench.downloadResource', function (accessor: ServicesAccessor, resource: URI) {\n\tconst downloadService = accessor.get(IDownloadService);\n\treturn downloadService.download(resource).then(location => URI.file(location));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as vscode from 'vscode';\nimport * as typeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport * as types from 'vs/workbench/api/node/extHostTypes';\nimport { IRawColorInfo, WorkspaceEditDto } from 'vs/workbench/api/node/extHost.protocol';\nimport { ISingleEditOperation } from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport * as search from 'vs/workbench/contrib/search/common/search';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ExtHostCommands } from 'vs/workbench/api/node/extHostCommands';\nimport { CustomCodeAction } from 'vs/workbench/api/node/extHostLanguageFeatures';\nimport { ICommandsExecutor, OpenFolderAPICommand, DiffAPICommand, OpenAPICommand, RemoveFromRecentlyOpenedAPICommand, SetEditorLayoutAPICommand } from './apiCommands';\nimport { EditorGroupLayout } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { isFalsyOrEmpty } from 'vs/base/common/arrays';\n\nexport class ExtHostApiCommands {\n\n\tstatic register(commands: ExtHostCommands) {\n\t\treturn new ExtHostApiCommands(commands).registerCommands();\n\t}\n\n\tprivate _commands: ExtHostCommands;\n\tprivate _disposables: IDisposable[] = [];\n\n\tprivate constructor(commands: ExtHostCommands) {\n\t\tthis._commands = commands;\n\t}\n\n\tregisterCommands() {\n\t\tthis._register('vscode.executeWorkspaceSymbolProvider', this._executeWorkspaceSymbolProvider, {\n\t\t\tdescription: 'Execute all workspace symbol provider.',\n\t\t\targs: [{ name: 'query', description: 'Search string', constraint: String }],\n\t\t\treturns: 'A promise that resolves to an array of SymbolInformation-instances.'\n\n\t\t});\n\t\tthis._register('vscode.executeDefinitionProvider', this._executeDefinitionProvider, {\n\t\t\tdescription: 'Execute all definition provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position of a symbol', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Location-instances.'\n\t\t});\n\t\tthis._register('vscode.executeDeclarationProvider', this._executeDeclaraionProvider, {\n\t\t\tdescription: 'Execute all declaration provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position of a symbol', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Location-instances.'\n\t\t});\n\t\tthis._register('vscode.executeTypeDefinitionProvider', this._executeTypeDefinitionProvider, {\n\t\t\tdescription: 'Execute all type definition providers.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position of a symbol', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Location-instances.'\n\t\t});\n\t\tthis._register('vscode.executeImplementationProvider', this._executeImplementationProvider, {\n\t\t\tdescription: 'Execute all implementation providers.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position of a symbol', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Location-instance.'\n\t\t});\n\t\tthis._register('vscode.executeHoverProvider', this._executeHoverProvider, {\n\t\t\tdescription: 'Execute all hover provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position of a symbol', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Hover-instances.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentHighlights', this._executeDocumentHighlights, {\n\t\t\tdescription: 'Execute document highlight provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of DocumentHighlight-instances.'\n\t\t});\n\t\tthis._register('vscode.executeReferenceProvider', this._executeReferenceProvider, {\n\t\t\tdescription: 'Execute reference provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Location-instances.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentRenameProvider', this._executeDocumentRenameProvider, {\n\t\t\tdescription: 'Execute rename provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'newName', description: 'The new symbol name', constraint: String }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to a WorkspaceEdit.'\n\t\t});\n\t\tthis._register('vscode.executeSignatureHelpProvider', this._executeSignatureHelpProvider, {\n\t\t\tdescription: 'Execute signature help provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'triggerCharacter', description: '(optional) Trigger signature help when the user types the character, like `,` or `(`', constraint: (value: any) => value === undefined || typeof value === 'string' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to SignatureHelp.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentSymbolProvider', this._executeDocumentSymbolProvider, {\n\t\t\tdescription: 'Execute document symbol provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of SymbolInformation and DocumentSymbol instances.'\n\t\t});\n\t\tthis._register('vscode.executeCompletionItemProvider', this._executeCompletionItemProvider, {\n\t\t\tdescription: 'Execute completion item provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'triggerCharacter', description: '(optional) Trigger completion when the user types the character, like `,` or `(`', constraint: (value: any) => value === undefined || typeof value === 'string' },\n\t\t\t\t{ name: 'itemResolveCount', description: '(optional) Number of completions to resolve (too large numbers slow down completions)', constraint: (value: any) => value === undefined || typeof value === 'number' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to a CompletionList-instance.'\n\t\t});\n\t\tthis._register('vscode.executeCodeActionProvider', this._executeCodeActionProvider, {\n\t\t\tdescription: 'Execute code action provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'range', description: 'Range in a text document', constraint: types.Range },\n\t\t\t\t{ name: 'kind', description: '(optional) Code action kind to return code actions for', constraint: (value: any) => !value || typeof value.value === 'string' },\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Command-instances.'\n\t\t});\n\t\tthis._register('vscode.executeCodeLensProvider', this._executeCodeLensProvider, {\n\t\t\tdescription: 'Execute CodeLens provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'itemResolveCount', description: '(optional) Number of lenses that should be resolved and returned. Will only retrun resolved lenses, will impact performance)', constraint: (value: any) => value === undefined || typeof value === 'number' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of CodeLens-instances.'\n\t\t});\n\t\tthis._register('vscode.executeFormatDocumentProvider', this._executeFormatDocumentProvider, {\n\t\t\tdescription: 'Execute document format provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'options', description: 'Formatting options' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of TextEdits.'\n\t\t});\n\t\tthis._register('vscode.executeFormatRangeProvider', this._executeFormatRangeProvider, {\n\t\t\tdescription: 'Execute range format provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'range', description: 'Range in a text document', constraint: types.Range },\n\t\t\t\t{ name: 'options', description: 'Formatting options' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of TextEdits.'\n\t\t});\n\t\tthis._register('vscode.executeFormatOnTypeProvider', this._executeFormatOnTypeProvider, {\n\t\t\tdescription: 'Execute document format provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'ch', description: 'Character that got typed', constraint: String },\n\t\t\t\t{ name: 'options', description: 'Formatting options' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of TextEdits.'\n\t\t});\n\t\tthis._register('vscode.executeLinkProvider', this._executeDocumentLinkProvider, {\n\t\t\tdescription: 'Execute document link provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of DocumentLink-instances.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentColorProvider', this._executeDocumentColorProvider, {\n\t\t\tdescription: 'Execute document color provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of ColorInformation objects.'\n\t\t});\n\t\tthis._register('vscode.executeColorPresentationProvider', this._executeColorPresentationProvider, {\n\t\t\tdescription: 'Execute color presentation provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'color', description: 'The color to show and insert', constraint: types.Color },\n\t\t\t\t{ name: 'context', description: 'Context object with uri and range' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of ColorPresentation objects.'\n\t\t});\n\t\tthis._register('vscode.executeSelectionRangeProvider', this._executeSelectionRangeProvider, {\n\t\t\tdescription: 'Execute selection range provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'positions', description: 'Positions in a text document', constraint: a => Array.isArray(a) }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of ranges.'\n\t\t});\n\n\t\t// -----------------------------------------------------------------\n\t\t// The following commands are registered on both sides separately.\n\t\t//\n\t\t// We are trying to maintain backwards compatibility for cases where\n\t\t// API commands are encoded as markdown links, for example.\n\t\t// -----------------------------------------------------------------\n\n\t\ttype ICommandHandler = (...args: any[]) => any;\n\t\tconst adjustHandler = (handler: (executor: ICommandsExecutor, ...args: any[]) => any): ICommandHandler => {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\treturn handler(this._commands, ...args);\n\t\t\t};\n\t\t};\n\n\t\tthis._register(OpenFolderAPICommand.ID, adjustHandler(OpenFolderAPICommand.execute), {\n\t\t\tdescription: 'Open a folder or workspace in the current window or new window depending on the newWindow argument. Note that opening in the same window will shutdown the current extension host process and start a new one on the given folder/workspace unless the newWindow parameter is set to true.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: '(optional) Uri of the folder or workspace file to open. If not provided, a native dialog will ask the user for the folder', constraint: (value: any) => value === undefined || value instanceof URI },\n\t\t\t\t{ name: 'options', description: '(optional) Options. Object with the following properties: `forceNewWindow `: Whether to open the folder/workspace in a new window or the same. Defaults to opening in the same window. `noRecentEntry`: Wheter the opened URI will appear in the \\'Open Recent\\' list. Defaults to true. Note, for backward compatibility, options can also be of type boolean, representing the `forceNewWindow` setting.', constraint: (value: any) => value === undefined || typeof value === 'object' || typeof value === 'boolean' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(DiffAPICommand.ID, adjustHandler(DiffAPICommand.execute), {\n\t\t\tdescription: 'Opens the provided resources in the diff editor to compare their contents.',\n\t\t\targs: [\n\t\t\t\t{ name: 'left', description: 'Left-hand side resource of the diff editor', constraint: URI },\n\t\t\t\t{ name: 'right', description: 'Right-hand side resource of the diff editor', constraint: URI },\n\t\t\t\t{ name: 'title', description: '(optional) Human readable title for the diff editor', constraint: (v: any) => v === undefined || typeof v === 'string' },\n\t\t\t\t{ name: 'options', description: '(optional) Editor options, see vscode.TextDocumentShowOptions' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(OpenAPICommand.ID, adjustHandler(OpenAPICommand.execute), {\n\t\t\tdescription: 'Opens the provided resource in the editor. Can be a text or binary file, or a http(s) url. If you need more control over the options for opening a text file, use vscode.window.showTextDocument instead.',\n\t\t\targs: [\n\t\t\t\t{ name: 'resource', description: 'Resource to open', constraint: URI },\n\t\t\t\t{ name: 'columnOrOptions', description: '(optional) Either the column in which to open or editor options, see vscode.TextDocumentShowOptions', constraint: (v: any) => v === undefined || typeof v === 'number' || typeof v === 'object' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(RemoveFromRecentlyOpenedAPICommand.ID, adjustHandler(RemoveFromRecentlyOpenedAPICommand.execute), {\n\t\t\tdescription: 'Removes an entry with the given path from the recently opened list.',\n\t\t\targs: [\n\t\t\t\t{ name: 'path', description: 'Path to remove from recently opened.', constraint: (value: any) => typeof value === 'string' }\n\t\t\t]\n\t\t});\n\n\t\tthis._register(SetEditorLayoutAPICommand.ID, adjustHandler(SetEditorLayoutAPICommand.execute), {\n\t\t\tdescription: 'Sets the editor layout. The layout is described as object with an initial (optional) orientation (0 = horizontal, 1 = vertical) and an array of editor groups within. Each editor group can have a size and another array of editor groups that will be laid out orthogonal to the orientation. If editor group sizes are provided, their sum must be 1 to be applied per row or column. Example for a 2x2 grid: `{ orientation: 0, groups: [{ groups: [{}, {}], size: 0.5 }, { groups: [{}, {}], size: 0.5 }] }`',\n\t\t\targs: [\n\t\t\t\t{ name: 'layout', description: 'The editor layout to set.', constraint: (value: EditorGroupLayout) => typeof value === 'object' && Array.isArray(value.groups) }\n\t\t\t]\n\t\t});\n\t}\n\n\t// --- command impl\n\n\tprivate _register(id: string, handler: (...args: any[]) => any, description?: ICommandHandlerDescription): void {\n\t\tconst disposable = this._commands.registerCommand(false, id, handler, this, description);\n\t\tthis._disposables.push(disposable);\n\t}\n\n\t/**\n\t * Execute workspace symbol provider.\n\t *\n\t * @param query Search string to match query symbol names\n\t * @return A promise that resolves to an array of symbol information.\n\t */\n\tprivate _executeWorkspaceSymbolProvider(query: string): Promise<types.SymbolInformation[]> {\n\t\treturn this._commands.executeCommand<[search.IWorkspaceSymbolProvider, search.IWorkspaceSymbol[]][]>('_executeWorkspaceSymbolProvider', { query }).then(value => {\n\t\t\tconst result: types.SymbolInformation[] = [];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tfor (let tuple of value) {\n\t\t\t\t\tresult.push(...tuple[1].map(typeConverters.WorkspaceSymbol.to));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate _executeDefinitionProvider(resource: URI, position: types.Position): Promise<types.Location[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.Location[]>('_executeDefinitionProvider', args)\n\t\t\t.then(tryMapWith(typeConverters.location.to));\n\t}\n\n\tprivate _executeDeclaraionProvider(resource: URI, position: types.Position): Promise<types.Location[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.Location[]>('_executeDeclarationProvider', args)\n\t\t\t.then(tryMapWith(typeConverters.location.to));\n\t}\n\n\tprivate _executeTypeDefinitionProvider(resource: URI, position: types.Position): Promise<types.Location[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.Location[]>('_executeTypeDefinitionProvider', args)\n\t\t\t.then(tryMapWith(typeConverters.location.to));\n\t}\n\n\tprivate _executeImplementationProvider(resource: URI, position: types.Position): Promise<types.Location[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.Location[]>('_executeImplementationProvider', args)\n\t\t\t.then(tryMapWith(typeConverters.location.to));\n\t}\n\n\tprivate _executeHoverProvider(resource: URI, position: types.Position): Promise<types.Hover[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.Hover[]>('_executeHoverProvider', args)\n\t\t\t.then(tryMapWith(typeConverters.Hover.to));\n\t}\n\n\tprivate _executeDocumentHighlights(resource: URI, position: types.Position): Promise<types.DocumentHighlight[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.DocumentHighlight[]>('_executeDocumentHighlights', args)\n\t\t\t.then(tryMapWith(typeConverters.DocumentHighlight.to));\n\t}\n\n\tprivate _executeReferenceProvider(resource: URI, position: types.Position): Promise<types.Location[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.Location[]>('_executeReferenceProvider', args)\n\t\t\t.then(tryMapWith(typeConverters.location.to));\n\t}\n\n\tprivate _executeDocumentRenameProvider(resource: URI, position: types.Position, newName: string): Promise<types.WorkspaceEdit> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position),\n\t\t\tnewName\n\t\t};\n\t\treturn this._commands.executeCommand<WorkspaceEditDto>('_executeDocumentRenameProvider', args).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (value.rejectReason) {\n\t\t\t\treturn Promise.reject<any>(new Error(value.rejectReason));\n\t\t\t}\n\t\t\treturn typeConverters.WorkspaceEdit.to(value);\n\t\t});\n\t}\n\n\tprivate _executeSignatureHelpProvider(resource: URI, position: types.Position, triggerCharacter: string): Promise<types.SignatureHelp | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position),\n\t\t\ttriggerCharacter\n\t\t};\n\t\treturn this._commands.executeCommand<modes.SignatureHelp>('_executeSignatureHelpProvider', args).then(value => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConverters.SignatureHelp.to(value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate _executeCompletionItemProvider(resource: URI, position: types.Position, triggerCharacter: string, maxItemsToResolve: number): Promise<types.CompletionList | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.Position.from(position),\n\t\t\ttriggerCharacter,\n\t\t\tmaxItemsToResolve\n\t\t};\n\t\treturn this._commands.executeCommand<modes.CompletionList>('_executeCompletionItemProvider', args).then(result => {\n\t\t\tif (result) {\n\t\t\t\tconst items = result.suggestions.map(suggestion => typeConverters.CompletionItem.to(suggestion));\n\t\t\t\treturn new types.CompletionList(items, result.incomplete);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate _executeDocumentColorProvider(resource: URI): Promise<types.ColorInformation[]> {\n\t\tconst args = {\n\t\t\tresource\n\t\t};\n\t\treturn this._commands.executeCommand<IRawColorInfo[]>('_executeDocumentColorProvider', args).then(result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(ci => ({ range: typeConverters.Range.to(ci.range), color: typeConverters.Color.to(ci.color) }));\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate _executeSelectionRangeProvider(resource: URI, positions: types.Position[]): Promise<vscode.SelectionRange[][]> {\n\t\tconst pos = positions.map(typeConverters.Position.from);\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: pos[0],\n\t\t\tpositions: pos\n\t\t};\n\t\treturn this._commands.executeCommand<modes.SelectionRange[][]>('_executeSelectionRangeProvider', args).then(result => {\n\t\t\treturn result.map(oneResult => oneResult.map(typeConverters.SelectionRange.to));\n\t\t});\n\t}\n\n\tprivate _executeColorPresentationProvider(color: types.Color, context: { uri: URI, range: types.Range }): Promise<types.ColorPresentation[]> {\n\t\tconst args = {\n\t\t\tresource: context.uri,\n\t\t\tcolor: typeConverters.Color.from(color),\n\t\t\trange: typeConverters.Range.from(context.range),\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IColorPresentation[]>('_executeColorPresentationProvider', args).then(result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(typeConverters.ColorPresentation.to);\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate _executeDocumentSymbolProvider(resource: URI): Promise<vscode.SymbolInformation[] | undefined> {\n\t\tconst args = {\n\t\t\tresource\n\t\t};\n\t\treturn this._commands.executeCommand<modes.DocumentSymbol[]>('_executeDocumentSymbolProvider', args).then((value): vscode.SymbolInformation[] | undefined => {\n\t\t\tif (isFalsyOrEmpty(value)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tclass MergedInfo extends types.SymbolInformation implements vscode.DocumentSymbol {\n\t\t\t\tstatic to(symbol: modes.DocumentSymbol): MergedInfo {\n\t\t\t\t\tconst res = new MergedInfo(\n\t\t\t\t\t\tsymbol.name,\n\t\t\t\t\t\ttypeConverters.SymbolKind.to(symbol.kind),\n\t\t\t\t\t\tsymbol.containerName || '',\n\t\t\t\t\t\tnew types.Location(resource, typeConverters.Range.to(symbol.range))\n\t\t\t\t\t);\n\t\t\t\t\tres.detail = symbol.detail;\n\t\t\t\t\tres.range = res.location.range;\n\t\t\t\t\tres.selectionRange = typeConverters.Range.to(symbol.selectionRange);\n\t\t\t\t\tres.children = symbol.children ? symbol.children.map(MergedInfo.to) : [];\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\n\t\t\t\tdetail: string;\n\t\t\t\trange: vscode.Range;\n\t\t\t\tselectionRange: vscode.Range;\n\t\t\t\tchildren: vscode.DocumentSymbol[];\n\t\t\t\tcontainerName: string;\n\t\t\t}\n\t\t\treturn value.map(MergedInfo.to);\n\t\t});\n\t}\n\n\tprivate _executeCodeActionProvider(resource: URI, range: types.Range, kind?: string): Promise<(vscode.CodeAction | vscode.Command)[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\trange: typeConverters.Range.from(range),\n\t\t\tkind\n\t\t};\n\t\treturn this._commands.executeCommand<CustomCodeAction[]>('_executeCodeActionProvider', args)\n\t\t\t.then(tryMapWith(codeAction => {\n\t\t\t\tif (codeAction._isSynthetic) {\n\t\t\t\t\tif (!codeAction.command) {\n\t\t\t\t\t\tthrow new Error('Synthetic code actions must have a command');\n\t\t\t\t\t}\n\t\t\t\t\treturn this._commands.converter.fromInternal(codeAction.command);\n\t\t\t\t} else {\n\t\t\t\t\tconst ret = new types.CodeAction(\n\t\t\t\t\t\tcodeAction.title,\n\t\t\t\t\t\tcodeAction.kind ? new types.CodeActionKind(codeAction.kind) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tif (codeAction.edit) {\n\t\t\t\t\t\tret.edit = typeConverters.WorkspaceEdit.to(codeAction.edit);\n\t\t\t\t\t}\n\t\t\t\t\tif (codeAction.command) {\n\t\t\t\t\t\tret.command = this._commands.converter.fromInternal(codeAction.command);\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tprivate _executeCodeLensProvider(resource: URI, itemResolveCount: number): Promise<vscode.CodeLens[] | undefined> {\n\t\tconst args = { resource, itemResolveCount };\n\t\treturn this._commands.executeCommand<modes.ICodeLensSymbol[]>('_executeCodeLensProvider', args)\n\t\t\t.then(tryMapWith(item => {\n\t\t\t\treturn new types.CodeLens(\n\t\t\t\t\ttypeConverters.Range.to(item.range),\n\t\t\t\t\titem.command ? this._commands.converter.fromInternal(item.command) : undefined);\n\t\t\t}));\n\n\t}\n\n\tprivate _executeFormatDocumentProvider(resource: URI, options: vscode.FormattingOptions): Promise<vscode.TextEdit[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\toptions\n\t\t};\n\t\treturn this._commands.executeCommand<ISingleEditOperation[]>('_executeFormatDocumentProvider', args)\n\t\t\t.then(tryMapWith(edit => new types.TextEdit(typeConverters.Range.to(edit.range), edit.text)));\n\t}\n\n\tprivate _executeFormatRangeProvider(resource: URI, range: types.Range, options: vscode.FormattingOptions): Promise<vscode.TextEdit[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\trange: typeConverters.Range.from(range),\n\t\t\toptions\n\t\t};\n\t\treturn this._commands.executeCommand<ISingleEditOperation[]>('_executeFormatRangeProvider', args)\n\t\t\t.then(tryMapWith(edit => new types.TextEdit(typeConverters.Range.to(edit.range), edit.text)));\n\t}\n\n\tprivate _executeFormatOnTypeProvider(resource: URI, position: types.Position, ch: string, options: vscode.FormattingOptions): Promise<vscode.TextEdit[] | undefined> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: typeConverters.Position.from(position),\n\t\t\tch,\n\t\t\toptions\n\t\t};\n\t\treturn this._commands.executeCommand<ISingleEditOperation[]>('_executeFormatOnTypeProvider', args)\n\t\t\t.then(tryMapWith(edit => new types.TextEdit(typeConverters.Range.to(edit.range), edit.text)));\n\t}\n\n\tprivate _executeDocumentLinkProvider(resource: URI): Promise<vscode.DocumentLink[] | undefined> {\n\t\treturn this._commands.executeCommand<modes.ILink[]>('_executeLinkProvider', resource)\n\t\t\t.then(tryMapWith(typeConverters.DocumentLink.to));\n\t}\n}\n\nfunction tryMapWith<T, R>(f: (x: T) => R) {\n\treturn (value: T[]) => {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map(f);\n\t\t}\n\t\treturn undefined;\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { sequence } from 'vs/base/common/async';\nimport { illegalState } from 'vs/base/common/errors';\nimport { ExtHostDocumentSaveParticipantShape, MainThreadTextEditorsShape, ResourceTextEditDto } from 'vs/workbench/api/node/extHost.protocol';\nimport { TextEdit } from 'vs/workbench/api/node/extHostTypes';\nimport { Range, TextDocumentSaveReason, EndOfLine } from 'vs/workbench/api/node/extHostTypeConverters';\nimport { ExtHostDocuments } from 'vs/workbench/api/node/extHostDocuments';\nimport { SaveReason } from 'vs/workbench/services/textfile/common/textfiles';\nimport * as vscode from 'vscode';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype Listener = [Function, any, IExtensionDescription];\n\nexport class ExtHostDocumentSaveParticipant implements ExtHostDocumentSaveParticipantShape {\n\n\tprivate readonly _callbacks = new LinkedList<Listener>();\n\tprivate readonly _badListeners = new WeakMap<Function, number>();\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _mainThreadEditors: MainThreadTextEditorsShape,\n\t\tprivate readonly _thresholds: { timeout: number; errors: number; } = { timeout: 1500, errors: 3 }\n\t) {\n\t\t//\n\t}\n\n\tdispose(): void {\n\t\tthis._callbacks.clear();\n\t}\n\n\tgetOnWillSaveTextDocumentEvent(extension: IExtensionDescription): Event<vscode.TextDocumentWillSaveEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst remove = this._callbacks.push([listener, thisArg, extension]);\n\t\t\tconst result = { dispose: remove };\n\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(result);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t$participateInSave(data: UriComponents, reason: SaveReason): Promise<boolean[]> {\n\t\tconst resource = URI.revive(data);\n\t\tconst entries = this._callbacks.toArray();\n\n\t\tlet didTimeout = false;\n\t\tconst didTimeoutHandle = setTimeout(() => didTimeout = true, this._thresholds.timeout);\n\n\t\tconst promise = sequence(entries.map(listener => {\n\t\t\treturn () => {\n\n\t\t\t\tif (didTimeout) {\n\t\t\t\t\t// timeout - no more listeners\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\n\t\t\t\tconst document = this._documents.getDocument(resource);\n\t\t\t\treturn this._deliverEventAsyncAndBlameBadListeners(listener, <any>{ document, reason: TextDocumentSaveReason.to(reason) });\n\t\t\t};\n\t\t}));\n\t\treturn promise.finally(() => clearTimeout(didTimeoutHandle));\n\t}\n\n\tprivate _deliverEventAsyncAndBlameBadListeners([listener, thisArg, extension]: Listener, stubEvent: vscode.TextDocumentWillSaveEvent): Promise<any> {\n\t\tconst errors = this._badListeners.get(listener);\n\t\tif (typeof errors === 'number' && errors > this._thresholds.errors) {\n\t\t\t// bad listener - ignore\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn this._deliverEventAsync(extension, listener, thisArg, stubEvent).then(() => {\n\t\t\t// don't send result across the wire\n\t\t\treturn true;\n\n\t\t}, err => {\n\n\t\t\tthis._logService.error(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' threw ERROR`);\n\t\t\tthis._logService.error(err);\n\n\t\t\tif (!(err instanceof Error) || (<Error>err).message !== 'concurrent_edits') {\n\t\t\t\tconst errors = this._badListeners.get(listener);\n\t\t\t\tthis._badListeners.set(listener, !errors ? 1 : errors + 1);\n\n\t\t\t\tif (typeof errors === 'number' && errors > this._thresholds.errors) {\n\t\t\t\t\tthis._logService.info(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' will now be IGNORED because of timeouts and/or errors`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate _deliverEventAsync(extension: IExtensionDescription, listener: Function, thisArg: any, stubEvent: vscode.TextDocumentWillSaveEvent): Promise<any> {\n\n\t\tconst promises: Promise<vscode.TextEdit[]>[] = [];\n\n\t\tconst t1 = Date.now();\n\t\tconst { document, reason } = stubEvent;\n\t\tconst { version } = document;\n\n\t\tconst event = Object.freeze(<vscode.TextDocumentWillSaveEvent>{\n\t\t\tdocument,\n\t\t\treason,\n\t\t\twaitUntil(p: Promise<any | vscode.TextEdit[]>) {\n\t\t\t\tif (Object.isFrozen(promises)) {\n\t\t\t\t\tthrow illegalState('waitUntil can not be called async');\n\t\t\t\t}\n\t\t\t\tpromises.push(Promise.resolve(p));\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\t// fire event\n\t\t\tlistener.apply(thisArg, [event]);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\n\t\t// freeze promises after event call\n\t\tObject.freeze(promises);\n\n\t\treturn new Promise<vscode.TextEdit[][]>((resolve, reject) => {\n\t\t\t// join on all listener promises, reject after timeout\n\t\t\tconst handle = setTimeout(() => reject(new Error('timeout')), this._thresholds.timeout);\n\n\t\t\treturn Promise.all(promises).then(edits => {\n\t\t\t\tthis._logService.debug(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' finished after ${(Date.now() - t1)}ms`);\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tresolve(edits);\n\t\t\t}).catch(err => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\treject(err);\n\t\t\t});\n\n\t\t}).then(values => {\n\n\t\t\tconst resourceEdit: ResourceTextEditDto = {\n\t\t\t\tresource: document.uri,\n\t\t\t\tedits: []\n\t\t\t};\n\n\t\t\tfor (const value of values) {\n\t\t\t\tif (Array.isArray(value) && (<vscode.TextEdit[]>value).every(e => e instanceof TextEdit)) {\n\t\t\t\t\tfor (const { newText, newEol, range } of value) {\n\t\t\t\t\t\tresourceEdit.edits.push({\n\t\t\t\t\t\t\trange: range && Range.from(range),\n\t\t\t\t\t\t\ttext: newText,\n\t\t\t\t\t\t\teol: EndOfLine.from(newEol)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// apply edits if any and if document\n\t\t\t// didn't change somehow in the meantime\n\t\t\tif (resourceEdit.edits.length === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (version === document.version) {\n\t\t\t\treturn this._mainThreadEditors.$tryApplyWorkspaceEdit({ edits: [resourceEdit] });\n\t\t\t}\n\n\t\t\treturn Promise.reject(new Error('concurrent_edits'));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProgressOptions } from 'vscode';\nimport { MainThreadProgressShape, ExtHostProgressShape } from './extHost.protocol';\nimport { ProgressLocation } from './extHostTypeConverters';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { Progress, IProgressStep } from 'vs/platform/progress/common/progress';\nimport { localize } from 'vs/nls';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { debounce } from 'vs/base/common/decorators';\n\nexport class ExtHostProgress implements ExtHostProgressShape {\n\n\tprivate _proxy: MainThreadProgressShape;\n\tprivate _handles: number = 0;\n\tprivate _mapHandleToCancellationSource: Map<number, CancellationTokenSource> = new Map();\n\n\tconstructor(proxy: MainThreadProgressShape) {\n\t\tthis._proxy = proxy;\n\t}\n\n\twithProgress<R>(extension: IExtensionDescription, options: ProgressOptions, task: (progress: Progress<IProgressStep>, token: CancellationToken) => Thenable<R>): Thenable<R> {\n\t\tconst handle = this._handles++;\n\t\tconst { title, location, cancellable } = options;\n\t\tconst source = localize('extensionSource', \"{0} (Extension)\", extension.displayName || extension.name);\n\t\tthis._proxy.$startProgress(handle, { location: ProgressLocation.from(location), title, source, cancellable });\n\t\treturn this._withProgress(handle, task, !!cancellable);\n\t}\n\n\tprivate _withProgress<R>(handle: number, task: (progress: Progress<IProgressStep>, token: CancellationToken) => Thenable<R>, cancellable: boolean): Thenable<R> {\n\t\tlet source: CancellationTokenSource | undefined;\n\t\tif (cancellable) {\n\t\t\tsource = new CancellationTokenSource();\n\t\t\tthis._mapHandleToCancellationSource.set(handle, source);\n\t\t}\n\n\t\tconst progressEnd = (handle: number): void => {\n\t\t\tthis._proxy.$progressEnd(handle);\n\t\t\tthis._mapHandleToCancellationSource.delete(handle);\n\t\t\tif (source) {\n\t\t\t\tsource.dispose();\n\t\t\t}\n\t\t};\n\n\t\tlet p: Thenable<R>;\n\n\t\ttry {\n\t\t\tp = task(new ProgressCallback(this._proxy, handle), cancellable && source ? source.token : CancellationToken.None);\n\t\t} catch (err) {\n\t\t\tprogressEnd(handle);\n\t\t\tthrow err;\n\t\t}\n\n\t\tp.then(result => progressEnd(handle), err => progressEnd(handle));\n\t\treturn p;\n\t}\n\n\tpublic $acceptProgressCanceled(handle: number): void {\n\t\tconst source = this._mapHandleToCancellationSource.get(handle);\n\t\tif (source) {\n\t\t\tsource.cancel();\n\t\t\tthis._mapHandleToCancellationSource.delete(handle);\n\t\t}\n\t}\n}\n\nfunction mergeProgress(result: IProgressStep, currentValue: IProgressStep): IProgressStep {\n\tresult.message = currentValue.message;\n\tif (typeof currentValue.increment === 'number') {\n\t\tif (typeof result.increment === 'number') {\n\t\t\tresult.increment += currentValue.increment;\n\t\t} else {\n\t\t\tresult.increment = currentValue.increment;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass ProgressCallback extends Progress<IProgressStep> {\n\tconstructor(private _proxy: MainThreadProgressShape, private _handle: number) {\n\t\tsuper(p => this.throttledReport(p));\n\t}\n\n\t@debounce(100, (result: IProgressStep, currentValue: IProgressStep) => mergeProgress(result, currentValue), () => Object.create(null))\n\tthrottledReport(p: IProgressStep): void {\n\t\tthis._proxy.$progressReport(this._handle, p);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ok } from 'vs/base/common/assert';\nimport { illegalArgument, readonly } from 'vs/base/common/errors';\nimport { IdGenerator } from 'vs/base/common/idGenerator';\nimport { TextEditorCursorStyle } from 'vs/editor/common/config/editorOptions';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISingleEditOperation } from 'vs/editor/common/model';\nimport { IResolvedTextEditorConfiguration, ITextEditorConfigurationUpdate, MainThreadTextEditorsShape } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostDocumentData } from 'vs/workbench/api/node/extHostDocumentData';\nimport * as TypeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport { EndOfLine, Position, Range, Selection, SnippetString, TextEditorLineNumbersStyle, TextEditorRevealType } from 'vs/workbench/api/node/extHostTypes';\nimport * as vscode from 'vscode';\n\nexport class TextEditorDecorationType implements vscode.TextEditorDecorationType {\n\n\tprivate static readonly _Keys = new IdGenerator('TextEditorDecorationType');\n\n\tprivate _proxy: MainThreadTextEditorsShape;\n\tpublic key: string;\n\n\tconstructor(proxy: MainThreadTextEditorsShape, options: vscode.DecorationRenderOptions) {\n\t\tthis.key = TextEditorDecorationType._Keys.nextId();\n\t\tthis._proxy = proxy;\n\t\tthis._proxy.$registerTextEditorDecorationType(this.key, TypeConverters.DecorationRenderOptions.from(options));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._proxy.$removeTextEditorDecorationType(this.key);\n\t}\n}\n\nexport interface ITextEditOperation {\n\trange: vscode.Range;\n\ttext: string | null;\n\tforceMoveMarkers: boolean;\n}\n\nexport interface IEditData {\n\tdocumentVersionId: number;\n\tedits: ITextEditOperation[];\n\tsetEndOfLine: EndOfLine;\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n}\n\nexport class TextEditorEdit {\n\n\tprivate readonly _document: vscode.TextDocument;\n\tprivate readonly _documentVersionId: number;\n\tprivate _collectedEdits: ITextEditOperation[];\n\tprivate _setEndOfLine: EndOfLine;\n\tprivate readonly _undoStopBefore: boolean;\n\tprivate readonly _undoStopAfter: boolean;\n\n\tconstructor(document: vscode.TextDocument, options: { undoStopBefore: boolean; undoStopAfter: boolean; }) {\n\t\tthis._document = document;\n\t\tthis._documentVersionId = document.version;\n\t\tthis._collectedEdits = [];\n\t\tthis._setEndOfLine = 0;\n\t\tthis._undoStopBefore = options.undoStopBefore;\n\t\tthis._undoStopAfter = options.undoStopAfter;\n\t}\n\n\tfinalize(): IEditData {\n\t\treturn {\n\t\t\tdocumentVersionId: this._documentVersionId,\n\t\t\tedits: this._collectedEdits,\n\t\t\tsetEndOfLine: this._setEndOfLine,\n\t\t\tundoStopBefore: this._undoStopBefore,\n\t\t\tundoStopAfter: this._undoStopAfter\n\t\t};\n\t}\n\n\treplace(location: Position | Range | Selection, value: string): void {\n\t\tlet range: Range | null = null;\n\n\t\tif (location instanceof Position) {\n\t\t\trange = new Range(location, location);\n\t\t} else if (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._pushEdit(range, value, false);\n\t}\n\n\tinsert(location: Position, value: string): void {\n\t\tthis._pushEdit(new Range(location, location), value, true);\n\t}\n\n\tdelete(location: Range | Selection): void {\n\t\tlet range: Range | null = null;\n\n\t\tif (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._pushEdit(range, null, true);\n\t}\n\n\tprivate _pushEdit(range: Range, text: string | null, forceMoveMarkers: boolean): void {\n\t\tconst validRange = this._document.validateRange(range);\n\t\tthis._collectedEdits.push({\n\t\t\trange: validRange,\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: forceMoveMarkers\n\t\t});\n\t}\n\n\tsetEndOfLine(endOfLine: EndOfLine): void {\n\t\tif (endOfLine !== EndOfLine.LF && endOfLine !== EndOfLine.CRLF) {\n\t\t\tthrow illegalArgument('endOfLine');\n\t\t}\n\n\t\tthis._setEndOfLine = endOfLine;\n\t}\n}\n\n\nfunction deprecated(name: string, message: string = 'Refer to the documentation for further details.') {\n\treturn (target: Object, key: string, descriptor: TypedPropertyDescriptor<any>) => {\n\t\tconst originalMethod = descriptor.value;\n\t\tdescriptor.value = function (...args: any[]) {\n\t\t\tconsole.warn(`[Deprecation Warning] method '${name}' is deprecated and should no longer be used. ${message}`);\n\t\t\treturn originalMethod.apply(this, args);\n\t\t};\n\n\t\treturn descriptor;\n\t};\n}\n\nexport class ExtHostTextEditorOptions implements vscode.TextEditorOptions {\n\n\tprivate _proxy: MainThreadTextEditorsShape;\n\tprivate _id: string;\n\n\tprivate _tabSize: number;\n\tprivate _indentSize: number;\n\tprivate _insertSpaces: boolean;\n\tprivate _cursorStyle: TextEditorCursorStyle;\n\tprivate _lineNumbers: TextEditorLineNumbersStyle;\n\n\tconstructor(proxy: MainThreadTextEditorsShape, id: string, source: IResolvedTextEditorConfiguration) {\n\t\tthis._proxy = proxy;\n\t\tthis._id = id;\n\t\tthis._accept(source);\n\t}\n\n\tpublic _accept(source: IResolvedTextEditorConfiguration): void {\n\t\tthis._tabSize = source.tabSize;\n\t\tthis._indentSize = source.indentSize;\n\t\tthis._insertSpaces = source.insertSpaces;\n\t\tthis._cursorStyle = source.cursorStyle;\n\t\tthis._lineNumbers = source.lineNumbers;\n\t}\n\n\tpublic get tabSize(): number | string {\n\t\treturn this._tabSize;\n\t}\n\n\tprivate _validateTabSize(value: number | string): number | 'auto' | null {\n\t\tif (value === 'auto') {\n\t\t\treturn 'auto';\n\t\t}\n\t\tif (typeof value === 'number') {\n\t\t\tconst r = Math.floor(value);\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tconst r = parseInt(value, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set tabSize(value: number | string) {\n\t\tconst tabSize = this._validateTabSize(value);\n\t\tif (tabSize === null) {\n\t\t\t// ignore invalid call\n\t\t\treturn;\n\t\t}\n\t\tif (typeof tabSize === 'number') {\n\t\t\tif (this._tabSize === tabSize) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new tabSize value immediately\n\t\t\tthis._tabSize = tabSize;\n\t\t}\n\t\twarnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\ttabSize: tabSize\n\t\t}));\n\t}\n\n\tpublic get indentSize(): number | string {\n\t\treturn this._indentSize;\n\t}\n\n\tprivate _validateIndentSize(value: number | string): number | 'tabSize' | null {\n\t\tif (value === 'tabSize') {\n\t\t\treturn 'tabSize';\n\t\t}\n\t\tif (typeof value === 'number') {\n\t\t\tconst r = Math.floor(value);\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tconst r = parseInt(value, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set indentSize(value: number | string) {\n\t\tconst indentSize = this._validateIndentSize(value);\n\t\tif (indentSize === null) {\n\t\t\t// ignore invalid call\n\t\t\treturn;\n\t\t}\n\t\tif (typeof indentSize === 'number') {\n\t\t\tif (this._indentSize === indentSize) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new indentSize value immediately\n\t\t\tthis._indentSize = indentSize;\n\t\t}\n\t\twarnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tindentSize: indentSize\n\t\t}));\n\t}\n\n\tpublic get insertSpaces(): boolean | string {\n\t\treturn this._insertSpaces;\n\t}\n\n\tprivate _validateInsertSpaces(value: boolean | string): boolean | 'auto' {\n\t\tif (value === 'auto') {\n\t\t\treturn 'auto';\n\t\t}\n\t\treturn (value === 'false' ? false : Boolean(value));\n\t}\n\n\tpublic set insertSpaces(value: boolean | string) {\n\t\tconst insertSpaces = this._validateInsertSpaces(value);\n\t\tif (typeof insertSpaces === 'boolean') {\n\t\t\tif (this._insertSpaces === insertSpaces) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new insertSpaces value immediately\n\t\t\tthis._insertSpaces = insertSpaces;\n\t\t}\n\t\twarnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tinsertSpaces: insertSpaces\n\t\t}));\n\t}\n\n\tpublic get cursorStyle(): TextEditorCursorStyle {\n\t\treturn this._cursorStyle;\n\t}\n\n\tpublic set cursorStyle(value: TextEditorCursorStyle) {\n\t\tif (this._cursorStyle === value) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._cursorStyle = value;\n\t\twarnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tcursorStyle: value\n\t\t}));\n\t}\n\n\tpublic get lineNumbers(): TextEditorLineNumbersStyle {\n\t\treturn this._lineNumbers;\n\t}\n\n\tpublic set lineNumbers(value: TextEditorLineNumbersStyle) {\n\t\tif (this._lineNumbers === value) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._lineNumbers = value;\n\t\twarnOnError(this._proxy.$trySetOptions(this._id, {\n\t\t\tlineNumbers: value\n\t\t}));\n\t}\n\n\tpublic assign(newOptions: vscode.TextEditorOptions) {\n\t\tconst bulkConfigurationUpdate: ITextEditorConfigurationUpdate = {};\n\t\tlet hasUpdate = false;\n\n\t\tif (typeof newOptions.tabSize !== 'undefined') {\n\t\t\tconst tabSize = this._validateTabSize(newOptions.tabSize);\n\t\t\tif (tabSize === 'auto') {\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.tabSize = tabSize;\n\t\t\t} else if (typeof tabSize === 'number' && this._tabSize !== tabSize) {\n\t\t\t\t// reflect the new tabSize value immediately\n\t\t\t\tthis._tabSize = tabSize;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.tabSize = tabSize;\n\t\t\t}\n\t\t}\n\n\t\t// if (typeof newOptions.indentSize !== 'undefined') {\n\t\t// \tconst indentSize = this._validateIndentSize(newOptions.indentSize);\n\t\t// \tif (indentSize === 'tabSize') {\n\t\t// \t\thasUpdate = true;\n\t\t// \t\tbulkConfigurationUpdate.indentSize = indentSize;\n\t\t// \t} else if (typeof indentSize === 'number' && this._indentSize !== indentSize) {\n\t\t// \t\t// reflect the new indentSize value immediately\n\t\t// \t\tthis._indentSize = indentSize;\n\t\t// \t\thasUpdate = true;\n\t\t// \t\tbulkConfigurationUpdate.indentSize = indentSize;\n\t\t// \t}\n\t\t// }\n\n\t\tif (typeof newOptions.insertSpaces !== 'undefined') {\n\t\t\tconst insertSpaces = this._validateInsertSpaces(newOptions.insertSpaces);\n\t\t\tif (insertSpaces === 'auto') {\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.insertSpaces = insertSpaces;\n\t\t\t} else if (this._insertSpaces !== insertSpaces) {\n\t\t\t\t// reflect the new insertSpaces value immediately\n\t\t\t\tthis._insertSpaces = insertSpaces;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.insertSpaces = insertSpaces;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.cursorStyle !== 'undefined') {\n\t\t\tif (this._cursorStyle !== newOptions.cursorStyle) {\n\t\t\t\tthis._cursorStyle = newOptions.cursorStyle;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.cursorStyle = newOptions.cursorStyle;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.lineNumbers !== 'undefined') {\n\t\t\tif (this._lineNumbers !== newOptions.lineNumbers) {\n\t\t\t\tthis._lineNumbers = newOptions.lineNumbers;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.lineNumbers = newOptions.lineNumbers;\n\t\t\t}\n\t\t}\n\n\t\tif (hasUpdate) {\n\t\t\twarnOnError(this._proxy.$trySetOptions(this._id, bulkConfigurationUpdate));\n\t\t}\n\t}\n}\n\nexport class ExtHostTextEditor implements vscode.TextEditor {\n\n\tprivate readonly _proxy: MainThreadTextEditorsShape;\n\tprivate readonly _id: string;\n\tprivate readonly _documentData: ExtHostDocumentData;\n\n\tprivate _selections: Selection[];\n\tprivate _options: ExtHostTextEditorOptions;\n\tprivate _visibleRanges: Range[];\n\tprivate _viewColumn: vscode.ViewColumn | undefined;\n\tprivate _disposed: boolean = false;\n\tprivate _hasDecorationsForKey: { [key: string]: boolean; };\n\n\tget id(): string { return this._id; }\n\n\tconstructor(\n\t\tproxy: MainThreadTextEditorsShape, id: string, document: ExtHostDocumentData,\n\t\tselections: Selection[], options: IResolvedTextEditorConfiguration,\n\t\tvisibleRanges: Range[], viewColumn: vscode.ViewColumn | undefined\n\t) {\n\t\tthis._proxy = proxy;\n\t\tthis._id = id;\n\t\tthis._documentData = document;\n\t\tthis._selections = selections;\n\t\tthis._options = new ExtHostTextEditorOptions(this._proxy, this._id, options);\n\t\tthis._visibleRanges = visibleRanges;\n\t\tthis._viewColumn = viewColumn;\n\t\tthis._hasDecorationsForKey = Object.create(null);\n\t}\n\n\tdispose() {\n\t\tok(!this._disposed);\n\t\tthis._disposed = true;\n\t}\n\n\t@deprecated('TextEditor.show') show(column: vscode.ViewColumn) {\n\t\tthis._proxy.$tryShowEditor(this._id, TypeConverters.ViewColumn.from(column));\n\t}\n\n\t@deprecated('TextEditor.hide') hide() {\n\t\tthis._proxy.$tryHideEditor(this._id);\n\t}\n\n\t// ---- the document\n\n\tget document(): vscode.TextDocument {\n\t\treturn this._documentData.document;\n\t}\n\n\tset document(value) {\n\t\tthrow readonly('document');\n\t}\n\n\t// ---- options\n\n\tget options(): vscode.TextEditorOptions {\n\t\treturn this._options;\n\t}\n\n\tset options(value: vscode.TextEditorOptions) {\n\t\tif (!this._disposed) {\n\t\t\tthis._options.assign(value);\n\t\t}\n\t}\n\n\t_acceptOptions(options: IResolvedTextEditorConfiguration): void {\n\t\tok(!this._disposed);\n\t\tthis._options._accept(options);\n\t}\n\n\t// ---- visible ranges\n\n\tget visibleRanges(): Range[] {\n\t\treturn this._visibleRanges;\n\t}\n\n\tset visibleRanges(value: Range[]) {\n\t\tthrow readonly('visibleRanges');\n\t}\n\n\t_acceptVisibleRanges(value: Range[]): void {\n\t\tok(!this._disposed);\n\t\tthis._visibleRanges = value;\n\t}\n\n\t// ---- view column\n\n\tget viewColumn(): vscode.ViewColumn | undefined {\n\t\treturn this._viewColumn;\n\t}\n\n\tset viewColumn(value) {\n\t\tthrow readonly('viewColumn');\n\t}\n\n\t_acceptViewColumn(value: vscode.ViewColumn) {\n\t\tok(!this._disposed);\n\t\tthis._viewColumn = value;\n\t}\n\n\t// ---- selections\n\n\tget selection(): Selection {\n\t\treturn this._selections && this._selections[0];\n\t}\n\n\tset selection(value: Selection) {\n\t\tif (!(value instanceof Selection)) {\n\t\t\tthrow illegalArgument('selection');\n\t\t}\n\t\tthis._selections = [value];\n\t\tthis._trySetSelection();\n\t}\n\n\tget selections(): Selection[] {\n\t\treturn this._selections;\n\t}\n\n\tset selections(value: Selection[]) {\n\t\tif (!Array.isArray(value) || value.some(a => !(a instanceof Selection))) {\n\t\t\tthrow illegalArgument('selections');\n\t\t}\n\t\tthis._selections = value;\n\t\tthis._trySetSelection();\n\t}\n\n\tsetDecorations(decorationType: vscode.TextEditorDecorationType, ranges: Range[] | vscode.DecorationOptions[]): void {\n\t\tconst willBeEmpty = (ranges.length === 0);\n\t\tif (willBeEmpty && !this._hasDecorationsForKey[decorationType.key]) {\n\t\t\t// avoid no-op call to the renderer\n\t\t\treturn;\n\t\t}\n\t\tif (willBeEmpty) {\n\t\t\tdelete this._hasDecorationsForKey[decorationType.key];\n\t\t} else {\n\t\t\tthis._hasDecorationsForKey[decorationType.key] = true;\n\t\t}\n\t\tthis._runOnProxy(\n\t\t\t() => {\n\t\t\t\tif (TypeConverters.isDecorationOptionsArr(ranges)) {\n\t\t\t\t\treturn this._proxy.$trySetDecorations(\n\t\t\t\t\t\tthis._id,\n\t\t\t\t\t\tdecorationType.key,\n\t\t\t\t\t\tTypeConverters.fromRangeOrRangeWithMessage(ranges)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst _ranges: number[] = new Array<number>(4 * ranges.length);\n\t\t\t\t\tfor (let i = 0, len = ranges.length; i < len; i++) {\n\t\t\t\t\t\tconst range = ranges[i];\n\t\t\t\t\t\t_ranges[4 * i] = range.start.line + 1;\n\t\t\t\t\t\t_ranges[4 * i + 1] = range.start.character + 1;\n\t\t\t\t\t\t_ranges[4 * i + 2] = range.end.line + 1;\n\t\t\t\t\t\t_ranges[4 * i + 3] = range.end.character + 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._proxy.$trySetDecorationsFast(\n\t\t\t\t\t\tthis._id,\n\t\t\t\t\t\tdecorationType.key,\n\t\t\t\t\t\t_ranges\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\trevealRange(range: Range, revealType: vscode.TextEditorRevealType): void {\n\t\tthis._runOnProxy(\n\t\t\t() => this._proxy.$tryRevealRange(\n\t\t\t\tthis._id,\n\t\t\t\tTypeConverters.Range.from(range),\n\t\t\t\t(revealType || TextEditorRevealType.Default)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate _trySetSelection(): Promise<vscode.TextEditor | null | undefined> {\n\t\tconst selection = this._selections.map(TypeConverters.Selection.from);\n\t\treturn this._runOnProxy(() => this._proxy.$trySetSelections(this._id, selection));\n\t}\n\n\t_acceptSelections(selections: Selection[]): void {\n\t\tok(!this._disposed);\n\t\tthis._selections = selections;\n\t}\n\n\t// ---- editing\n\n\tedit(callback: (edit: TextEditorEdit) => void, options: { undoStopBefore: boolean; undoStopAfter: boolean; } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.reject(new Error('TextEditor#edit not possible on closed editors'));\n\t\t}\n\t\tconst edit = new TextEditorEdit(this._documentData.document, options);\n\t\tcallback(edit);\n\t\treturn this._applyEdit(edit);\n\t}\n\n\tprivate _applyEdit(editBuilder: TextEditorEdit): Promise<boolean> {\n\t\tconst editData = editBuilder.finalize();\n\n\t\t// return when there is nothing to do\n\t\tif (editData.edits.length === 0 && !editData.setEndOfLine) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\t// check that the edits are not overlapping (i.e. illegal)\n\t\tconst editRanges = editData.edits.map(edit => edit.range);\n\n\t\t// sort ascending (by end and then by start)\n\t\teditRanges.sort((a, b) => {\n\t\t\tif (a.end.line === b.end.line) {\n\t\t\t\tif (a.end.character === b.end.character) {\n\t\t\t\t\tif (a.start.line === b.start.line) {\n\t\t\t\t\t\treturn a.start.character - b.start.character;\n\t\t\t\t\t}\n\t\t\t\t\treturn a.start.line - b.start.line;\n\t\t\t\t}\n\t\t\t\treturn a.end.character - b.end.character;\n\t\t\t}\n\t\t\treturn a.end.line - b.end.line;\n\t\t});\n\n\t\t// check that no edits are overlapping\n\t\tfor (let i = 0, count = editRanges.length - 1; i < count; i++) {\n\t\t\tconst rangeEnd = editRanges[i].end;\n\t\t\tconst nextRangeStart = editRanges[i + 1].start;\n\n\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t// overlapping ranges\n\t\t\t\treturn Promise.reject(\n\t\t\t\t\tnew Error('Overlapping ranges are not allowed!')\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// prepare data for serialization\n\t\tconst edits = editData.edits.map((edit): ISingleEditOperation => {\n\t\t\treturn {\n\t\t\t\trange: TypeConverters.Range.from(edit.range),\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t};\n\t\t});\n\n\t\treturn this._proxy.$tryApplyEdits(this._id, editData.documentVersionId, edits, {\n\t\t\tsetEndOfLine: editData.setEndOfLine,\n\t\t\tundoStopBefore: editData.undoStopBefore,\n\t\t\tundoStopAfter: editData.undoStopAfter\n\t\t});\n\t}\n\n\tinsertSnippet(snippet: SnippetString, where?: Position | Position[] | Range | Range[], options: { undoStopBefore: boolean; undoStopAfter: boolean; } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.reject(new Error('TextEditor#insertSnippet not possible on closed editors'));\n\t\t}\n\t\tlet ranges: IRange[];\n\n\t\tif (!where || (Array.isArray(where) && where.length === 0)) {\n\t\t\tranges = this._selections.map(range => TypeConverters.Range.from(range));\n\n\t\t} else if (where instanceof Position) {\n\t\t\tconst { lineNumber, column } = TypeConverters.Position.from(where);\n\t\t\tranges = [{ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column }];\n\n\t\t} else if (where instanceof Range) {\n\t\t\tranges = [TypeConverters.Range.from(where)];\n\t\t} else {\n\t\t\tranges = [];\n\t\t\tfor (const posOrRange of where) {\n\t\t\t\tif (posOrRange instanceof Range) {\n\t\t\t\t\tranges.push(TypeConverters.Range.from(posOrRange));\n\t\t\t\t} else {\n\t\t\t\t\tconst { lineNumber, column } = TypeConverters.Position.from(posOrRange);\n\t\t\t\t\tranges.push({ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy.$tryInsertSnippet(this._id, snippet.value, ranges, options);\n\t}\n\n\t// ---- util\n\n\tprivate _runOnProxy(callback: () => Promise<any>): Promise<ExtHostTextEditor | undefined | null> {\n\t\tif (this._disposed) {\n\t\t\tconsole.warn('TextEditor is closed/disposed');\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn callback().then(() => this, err => {\n\t\t\tif (!(err instanceof Error && err.name === 'DISPOSED')) {\n\t\t\t\tconsole.warn(err);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nfunction warnOnError(promise: Promise<any>): void {\n\tpromise.then(undefined, (err) => {\n\t\tconsole.warn(err);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtensionPoint } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { ExtensionIdentifier, IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport const nullExtensionDescription = Object.freeze(<IExtensionDescription>{\n\tidentifier: new ExtensionIdentifier('nullExtensionDescription'),\n\tname: 'Null Extension Description',\n\tversion: '0.0.0',\n\tpublisher: 'vscode',\n\tenableProposedApi: false,\n\tengines: { vscode: '' },\n\textensionLocation: URI.parse('void:location'),\n\tisBuiltin: false,\n});\n\nexport const IExtensionService = createDecorator<IExtensionService>('extensionService');\n\nexport interface IMessage {\n\ttype: Severity;\n\tmessage: string;\n\textensionId: ExtensionIdentifier;\n\textensionPointId: string;\n}\n\nexport interface IExtensionsStatus {\n\tmessages: IMessage[];\n\tactivationTimes: ActivationTimes;\n\truntimeErrors: Error[];\n}\n\n/**\n * e.g.\n * ```\n * {\n *    startTime: 1511954813493000,\n *    endTime: 1511954835590000,\n *    deltas: [ 100, 1500, 123456, 1500, 100000 ],\n *    ids: [ 'idle', 'self', 'extension1', 'self', 'idle' ]\n * }\n * ```\n */\nexport interface IExtensionHostProfile {\n\t/**\n\t * Profiling start timestamp in microseconds.\n\t */\n\tstartTime: number;\n\t/**\n\t * Profiling end timestamp in microseconds.\n\t */\n\tendTime: number;\n\t/**\n\t * Duration of segment in microseconds.\n\t */\n\tdeltas: number[];\n\t/**\n\t * Segment identifier: extension id or one of the four known strings.\n\t */\n\tids: ProfileSegmentId[];\n\n\t/**\n\t * Get the information as a .cpuprofile.\n\t */\n\tdata: object;\n\n\t/**\n\t * Get the aggregated time per segmentId\n\t */\n\tgetAggregatedTimes(): Map<ProfileSegmentId, number>;\n}\n\n/**\n * Extension id or one of the four known program states.\n */\nexport type ProfileSegmentId = string | 'idle' | 'program' | 'gc' | 'self';\n\nexport class ActivationTimes {\n\tconstructor(\n\t\tpublic readonly startup: boolean,\n\t\tpublic readonly codeLoadingTime: number,\n\t\tpublic readonly activateCallTime: number,\n\t\tpublic readonly activateResolvedTime: number,\n\t\tpublic readonly activationEvent: string\n\t) {\n\t}\n}\n\nexport class ExtensionPointContribution<T> {\n\treadonly description: IExtensionDescription;\n\treadonly value: T;\n\n\tconstructor(description: IExtensionDescription, value: T) {\n\t\tthis.description = description;\n\t\tthis.value = value;\n\t}\n}\n\nexport const ExtensionHostLogFileName = 'exthost';\n\nexport interface IWillActivateEvent {\n\treadonly event: string;\n\treadonly activation: Promise<void>;\n}\n\nexport interface IResponsiveStateChangeEvent {\n\ttarget: ICpuProfilerTarget;\n\tisResponsive: boolean;\n}\n\nexport interface IExtensionService extends ICpuProfilerTarget {\n\t_serviceBrand: any;\n\n\t/**\n\t * An event emitted when extensions are registered after their extension points got handled.\n\t *\n\t * This event will also fire on startup to signal the installed extensions.\n\t *\n\t * @returns the extensions that got registered\n\t */\n\tonDidRegisterExtensions: Event<void>;\n\n\t/**\n\t * @event\n\t * Fired when extensions status changes.\n\t * The event contains the ids of the extensions that have changed.\n\t */\n\tonDidChangeExtensionsStatus: Event<ExtensionIdentifier[]>;\n\n\t/**\n\t * Fired when the available extensions change (i.e. when extensions are added or removed).\n\t */\n\tonDidChangeExtensions: Event<void>;\n\n\t/**\n\t * An event that is fired when activation happens.\n\t */\n\tonWillActivateByEvent: Event<IWillActivateEvent>;\n\n\t/**\n\t * An event that is fired when an extension host changes its\n\t * responsive-state.\n\t */\n\tonDidChangeResponsiveChange: Event<IResponsiveStateChangeEvent>;\n\n\t/**\n\t * Send an activation event and activate interested extensions.\n\t */\n\tactivateByEvent(activationEvent: string): Promise<void>;\n\n\t/**\n\t * An promise that resolves when the installed extensions are registered after\n\t * their extension points got handled.\n\t */\n\twhenInstalledExtensionsRegistered(): Promise<boolean>;\n\n\t/**\n\t * Return all registered extensions\n\t */\n\tgetExtensions(): Promise<IExtensionDescription[]>;\n\n\t/**\n\t * Return a specific extension\n\t * @param id An extension id\n\t */\n\tgetExtension(id: string): Promise<IExtensionDescription | undefined>;\n\n\t/**\n\t * Returns `true` if the given extension can be added. Otherwise `false`.\n\t * @param extension An extension\n\t */\n\tcanAddExtension(extension: IExtensionDescription): boolean;\n\n\t/**\n\t * Returns `true` if the given extension can be removed. Otherwise `false`.\n\t * @param extension An extension\n\t */\n\tcanRemoveExtension(extension: IExtensionDescription): boolean;\n\n\t/**\n\t * Read all contributions to an extension point.\n\t */\n\treadExtensionPointContributions<T>(extPoint: IExtensionPoint<T>): Promise<ExtensionPointContribution<T>[]>;\n\n\t/**\n\t * Get information about extensions status.\n\t */\n\tgetExtensionsStatus(): { [id: string]: IExtensionsStatus };\n\n\t/**\n\t * Return the inspect port or 0.\n\t */\n\tgetInspectPort(): number;\n\n\t/**\n\t * Restarts the extension host.\n\t */\n\trestartExtensionHost(): void;\n\n\t/**\n\t * Starts the extension host.\n\t */\n\tstartExtensionHost(): void;\n\n\t/**\n\t * Stops the extension host.\n\t */\n\tstopExtensionHost(): void;\n}\n\nexport interface ICpuProfilerTarget {\n\n\t/**\n\t * Check if the extension host can be profiled.\n\t */\n\tcanProfileExtensionHost(): boolean;\n\n\t/**\n\t * Begin an extension host process profile session.\n\t */\n\tstartExtensionHostProfile(): Promise<ProfileSession>;\n}\n\nexport interface ProfileSession {\n\tstop(): Promise<IExtensionHostProfile>;\n}\n\nexport function checkProposedApiEnabled(extension: IExtensionDescription): void {\n\tif (!extension.enableProposedApi) {\n\t\tthrowProposedApiError(extension);\n\t}\n}\n\nexport function throwProposedApiError(extension: IExtensionDescription): never {\n\tthrow new Error(`[${extension.identifier.value}]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api ${extension.identifier.value}`);\n}\n\nexport function toExtension(extensionDescription: IExtensionDescription): IExtension {\n\treturn {\n\t\ttype: extensionDescription.isBuiltin ? ExtensionType.System : ExtensionType.User,\n\t\tidentifier: { id: getGalleryExtensionId(extensionDescription.publisher, extensionDescription.name), uuid: extensionDescription.uuid },\n\t\tmanifest: extensionDescription,\n\t\tlocation: extensionDescription.extensionLocation,\n\t};\n}\n\n\nexport class NullExtensionService implements IExtensionService {\n\t_serviceBrand: any;\n\tonDidRegisterExtensions: Event<void> = Event.None;\n\tonDidChangeExtensionsStatus: Event<ExtensionIdentifier[]> = Event.None;\n\tonDidChangeExtensions: Event<void> = Event.None;\n\tonWillActivateByEvent: Event<IWillActivateEvent> = Event.None;\n\tonDidChangeResponsiveChange: Event<IResponsiveStateChangeEvent> = Event.None;\n\tactivateByEvent(_activationEvent: string): Promise<void> { return Promise.resolve(undefined); }\n\twhenInstalledExtensionsRegistered(): Promise<boolean> { return Promise.resolve(true); }\n\tgetExtensions(): Promise<IExtensionDescription[]> { return Promise.resolve([]); }\n\tgetExtension() { return Promise.resolve(undefined); }\n\treadExtensionPointContributions<T>(_extPoint: IExtensionPoint<T>): Promise<ExtensionPointContribution<T>[]> { return Promise.resolve(Object.create(null)); }\n\tgetExtensionsStatus(): { [id: string]: IExtensionsStatus; } { return Object.create(null); }\n\tcanProfileExtensionHost(): boolean { return false; }\n\tgetInspectPort(): number { return 0; }\n\tstartExtensionHostProfile(): Promise<ProfileSession> { return Promise.resolve(Object.create(null)); }\n\trestartExtensionHost(): void { }\n\tstartExtensionHost(): void { }\n\tstopExtensionHost(): void { }\n\tcanAddExtension(): boolean { return false; }\n\tcanRemoveExtension(): boolean { return false; }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { ILogService, DelegatedLogService, LogLevel } from 'vs/platform/log/common/log';\nimport { createSpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { ExtHostLogServiceShape } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtensionHostLogFileName } from 'vs/workbench/services/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtHostLogService extends DelegatedLogService implements ILogService, ExtHostLogServiceShape {\n\n\tprivate _logsPath: string;\n\treadonly logFile: URI;\n\n\tconstructor(\n\t\tlogLevel: LogLevel,\n\t\tlogsPath: string,\n\t) {\n\t\tsuper(createSpdLogService(ExtensionHostLogFileName, logLevel, logsPath));\n\t\tthis._logsPath = logsPath;\n\t\tthis.logFile = URI.file(join(logsPath, `${ExtensionHostLogFileName}.log`));\n\t}\n\n\t$setLevel(level: LogLevel): void {\n\t\tthis.setLevel(level);\n\t}\n\n\tgetLogDirectory(extensionID: ExtensionIdentifier): string {\n\t\treturn join(this._logsPath, extensionID.value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport * as vscode from 'vscode';\nimport { basename } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ExtHostTreeViewsShape, MainThreadTreeViewsShape } from './extHost.protocol';\nimport { ITreeItem, TreeViewItemHandleArg, ITreeItemLabel, IRevealOptions } from 'vs/workbench/common/views';\nimport { ExtHostCommands, CommandsConverter } from 'vs/workbench/api/node/extHostCommands';\nimport { asPromise } from 'vs/base/common/async';\nimport { TreeItemCollapsibleState, ThemeIcon, MarkdownString } from 'vs/workbench/api/node/extHostTypes';\nimport { isUndefinedOrNull, isString } from 'vs/base/common/types';\nimport { equals, coalesce } from 'vs/base/common/arrays';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionDescription, checkProposedApiEnabled } from 'vs/workbench/services/extensions/common/extensions';\n\ntype TreeItemHandle = string;\n\nfunction toTreeItemLabel(label: any, extension: IExtensionDescription): ITreeItemLabel {\n\tif (isString(label)) {\n\t\treturn { label };\n\t}\n\n\tif (label\n\t\t&& typeof label === 'object'\n\t\t&& typeof label.label === 'string') {\n\t\tcheckProposedApiEnabled(extension);\n\t\tlet highlights: [number, number][] = undefined;\n\t\tif (Array.isArray(label.highlights)) {\n\t\t\thighlights = (<[number, number][]>label.highlights).filter((highlight => highlight.length === 2 && typeof highlight[0] === 'number' && typeof highlight[1] === 'number'));\n\t\t\thighlights = highlights.length ? highlights : undefined;\n\t\t}\n\t\treturn { label: label.label, highlights };\n\t}\n\n\treturn undefined;\n}\n\n\nexport class ExtHostTreeViews implements ExtHostTreeViewsShape {\n\n\tprivate treeViews: Map<string, ExtHostTreeView<any>> = new Map<string, ExtHostTreeView<any>>();\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadTreeViewsShape,\n\t\tprivate commands: ExtHostCommands,\n\t\tprivate logService: ILogService\n\t) {\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$treeViewId && arg.$treeItemHandle) {\n\t\t\t\t\treturn this.convertArgument(arg);\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterTreeDataProvider<T>(id: string, treeDataProvider: vscode.TreeDataProvider<T>, extension: IExtensionDescription): vscode.Disposable {\n\t\tconst treeView = this.createTreeView(id, { treeDataProvider }, extension);\n\t\treturn { dispose: () => treeView.dispose() };\n\t}\n\n\tcreateTreeView<T>(viewId: string, options: vscode.TreeViewOptions<T>, extension: IExtensionDescription): vscode.TreeView<T> {\n\t\tif (!options || !options.treeDataProvider) {\n\t\t\tthrow new Error('Options with treeDataProvider is mandatory');\n\t\t}\n\n\t\tconst treeView = this.createExtHostTreeView(viewId, options, extension);\n\t\treturn {\n\t\t\tget onDidCollapseElement() { return treeView.onDidCollapseElement; },\n\t\t\tget onDidExpandElement() { return treeView.onDidExpandElement; },\n\t\t\tget selection() { return treeView.selectedElements; },\n\t\t\tget onDidChangeSelection() { return treeView.onDidChangeSelection; },\n\t\t\tget visible() { return treeView.visible; },\n\t\t\tget onDidChangeVisibility() { return treeView.onDidChangeVisibility; },\n\t\t\tget message() { return treeView.message; },\n\t\t\tset message(message: string | MarkdownString) { checkProposedApiEnabled(extension); treeView.message = message; },\n\t\t\treveal: (element: T, options?: IRevealOptions): Promise<void> => {\n\t\t\t\treturn treeView.reveal(element, options);\n\t\t\t},\n\t\t\tdispose: () => {\n\t\t\t\tthis.treeViews.delete(viewId);\n\t\t\t\ttreeView.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\t$getChildren(treeViewId: string, treeItemHandle?: string): Promise<ITreeItem[]> {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\treturn Promise.reject(new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId)));\n\t\t}\n\t\treturn treeView.getChildren(treeItemHandle);\n\t}\n\n\t$setExpanded(treeViewId: string, treeItemHandle: string, expanded: boolean): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId));\n\t\t}\n\t\ttreeView.setExpanded(treeItemHandle, expanded);\n\t}\n\n\t$setSelection(treeViewId: string, treeItemHandles: string[]): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId));\n\t\t}\n\t\ttreeView.setSelection(treeItemHandles);\n\t}\n\n\t$setVisible(treeViewId: string, isVisible: boolean): void {\n\t\tconst treeView = this.treeViews.get(treeViewId);\n\t\tif (!treeView) {\n\t\t\tthrow new Error(localize('treeView.notRegistered', 'No tree view with id \\'{0}\\' registered.', treeViewId));\n\t\t}\n\t\ttreeView.setVisible(isVisible);\n\t}\n\n\tprivate createExtHostTreeView<T>(id: string, options: vscode.TreeViewOptions<T>, extension: IExtensionDescription): ExtHostTreeView<T> {\n\t\tconst treeView = new ExtHostTreeView<T>(id, options, this._proxy, this.commands.converter, this.logService, extension);\n\t\tthis.treeViews.set(id, treeView);\n\t\treturn treeView;\n\t}\n\n\tprivate convertArgument(arg: TreeViewItemHandleArg): any {\n\t\tconst treeView = this.treeViews.get(arg.$treeViewId);\n\t\treturn treeView ? treeView.getExtensionElement(arg.$treeItemHandle) : null;\n\t}\n}\n\ninterface TreeNode {\n\titem: ITreeItem;\n\tparent: TreeNode;\n\tchildren: TreeNode[];\n}\n\ntype TreeData<T> = { message: boolean, element: T | null | undefined | false };\n\nclass ExtHostTreeView<T> extends Disposable {\n\n\tprivate static LABEL_HANDLE_PREFIX = '0';\n\tprivate static ID_HANDLE_PREFIX = '1';\n\n\tprivate readonly dataProvider: vscode.TreeDataProvider<T>;\n\n\tprivate roots: TreeNode[] | null = null;\n\tprivate elements: Map<TreeItemHandle, T> = new Map<TreeItemHandle, T>();\n\tprivate nodes: Map<T, TreeNode> = new Map<T, TreeNode>();\n\n\tprivate _visible: boolean = false;\n\tget visible(): boolean { return this._visible; }\n\n\tprivate _selectedHandles: TreeItemHandle[] = [];\n\tget selectedElements(): T[] { return this._selectedHandles.map(handle => this.getExtensionElement(handle)).filter(element => !isUndefinedOrNull(element)); }\n\n\tprivate _onDidExpandElement: Emitter<vscode.TreeViewExpansionEvent<T>> = this._register(new Emitter<vscode.TreeViewExpansionEvent<T>>());\n\treadonly onDidExpandElement: Event<vscode.TreeViewExpansionEvent<T>> = this._onDidExpandElement.event;\n\n\tprivate _onDidCollapseElement: Emitter<vscode.TreeViewExpansionEvent<T>> = this._register(new Emitter<vscode.TreeViewExpansionEvent<T>>());\n\treadonly onDidCollapseElement: Event<vscode.TreeViewExpansionEvent<T>> = this._onDidCollapseElement.event;\n\n\tprivate _onDidChangeSelection: Emitter<vscode.TreeViewSelectionChangeEvent<T>> = this._register(new Emitter<vscode.TreeViewSelectionChangeEvent<T>>());\n\treadonly onDidChangeSelection: Event<vscode.TreeViewSelectionChangeEvent<T>> = this._onDidChangeSelection.event;\n\n\tprivate _onDidChangeVisibility: Emitter<vscode.TreeViewVisibilityChangeEvent> = this._register(new Emitter<vscode.TreeViewVisibilityChangeEvent>());\n\treadonly onDidChangeVisibility: Event<vscode.TreeViewVisibilityChangeEvent> = this._onDidChangeVisibility.event;\n\n\tprivate _onDidChangeData: Emitter<TreeData<T>> = this._register(new Emitter<TreeData<T>>());\n\n\tprivate refreshPromise: Promise<void> = Promise.resolve();\n\n\tconstructor(private viewId: string, options: vscode.TreeViewOptions<T>, private proxy: MainThreadTreeViewsShape, private commands: CommandsConverter, private logService: ILogService, private extension: IExtensionDescription) {\n\t\tsuper();\n\t\tthis.dataProvider = options.treeDataProvider;\n\t\tthis.proxy.$registerTreeViewDataProvider(viewId, { showCollapseAll: !!options.showCollapseAll });\n\t\tif (this.dataProvider.onDidChangeTreeData) {\n\t\t\tthis._register(this.dataProvider.onDidChangeTreeData(element => this._onDidChangeData.fire({ message: false, element })));\n\t\t}\n\n\t\tlet refreshingPromise, promiseCallback;\n\t\tthis._register(Event.debounce<TreeData<T>, { message: boolean, elements: T[] }>(this._onDidChangeData.event, (result, current) => {\n\t\t\tif (!result) {\n\t\t\t\tresult = { message: false, elements: [] };\n\t\t\t}\n\t\t\tif (current.element !== false) {\n\t\t\t\tif (!refreshingPromise) {\n\t\t\t\t\t// New refresh has started\n\t\t\t\t\trefreshingPromise = new Promise(c => promiseCallback = c);\n\t\t\t\t\tthis.refreshPromise = this.refreshPromise.then(() => refreshingPromise);\n\t\t\t\t}\n\t\t\t\tresult.elements.push(current.element);\n\t\t\t}\n\t\t\tif (current.message) {\n\t\t\t\tresult.message = true;\n\t\t\t}\n\t\t\treturn result;\n\t\t}, 200)(({ message, elements }) => {\n\t\t\tif (elements.length) {\n\t\t\t\tconst _promiseCallback = promiseCallback;\n\t\t\t\trefreshingPromise = null;\n\t\t\t\tthis.refresh(elements).then(() => _promiseCallback());\n\t\t\t}\n\t\t\tif (message) {\n\t\t\t\tthis.proxy.$setMessage(this.viewId, this._message);\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetChildren(parentHandle?: TreeItemHandle): Promise<ITreeItem[]> {\n\t\tconst parentElement = parentHandle ? this.getExtensionElement(parentHandle) : undefined;\n\t\tif (parentHandle && !parentElement) {\n\t\t\tconsole.error(`No tree item with id \\'${parentHandle}\\' found.`);\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst childrenNodes = this.getChildrenNodes(parentHandle); // Get it from cache\n\t\treturn (childrenNodes ? Promise.resolve(childrenNodes) : this.fetchChildrenNodes(parentElement))\n\t\t\t.then(nodes => nodes.map(n => n.item));\n\t}\n\n\tgetExtensionElement(treeItemHandle: TreeItemHandle): T {\n\t\treturn this.elements.get(treeItemHandle);\n\t}\n\n\treveal(element: T, options?: IRevealOptions): Promise<void> {\n\t\toptions = options ? options : { select: true, focus: false };\n\t\tconst select = isUndefinedOrNull(options.select) ? true : options.select;\n\t\tconst focus = isUndefinedOrNull(options.focus) ? false : options.focus;\n\t\tconst expand = isUndefinedOrNull(options.expand) ? false : options.expand;\n\n\t\tif (typeof this.dataProvider.getParent !== 'function') {\n\t\t\treturn Promise.reject(new Error(`Required registered TreeDataProvider to implement 'getParent' method to access 'reveal' method`));\n\t\t}\n\t\treturn this.refreshPromise\n\t\t\t.then(() => this.resolveUnknownParentChain(element))\n\t\t\t.then(parentChain => this.resolveTreeNode(element, parentChain[parentChain.length - 1])\n\t\t\t\t.then(treeNode => this.proxy.$reveal(this.viewId, treeNode.item, parentChain.map(p => p.item), { select, focus, expand })), error => this.logService.error(error));\n\t}\n\n\tprivate _message: string | MarkdownString;\n\tget message(): string | MarkdownString {\n\t\treturn this._message;\n\t}\n\n\tset message(message: string | MarkdownString) {\n\t\tthis._message = message;\n\t\tthis._onDidChangeData.fire({ message: true, element: false });\n\t}\n\n\tsetExpanded(treeItemHandle: TreeItemHandle, expanded: boolean): void {\n\t\tconst element = this.getExtensionElement(treeItemHandle);\n\t\tif (element) {\n\t\t\tif (expanded) {\n\t\t\t\tthis._onDidExpandElement.fire(Object.freeze({ element }));\n\t\t\t} else {\n\t\t\t\tthis._onDidCollapseElement.fire(Object.freeze({ element }));\n\t\t\t}\n\t\t}\n\t}\n\n\tsetSelection(treeItemHandles: TreeItemHandle[]): void {\n\t\tif (!equals(this._selectedHandles, treeItemHandles)) {\n\t\t\tthis._selectedHandles = treeItemHandles;\n\t\t\tthis._onDidChangeSelection.fire(Object.freeze({ selection: this.selectedElements }));\n\t\t}\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (visible !== this._visible) {\n\t\t\tthis._visible = visible;\n\t\t\tthis._onDidChangeVisibility.fire(Object.freeze({ visible: this._visible }));\n\t\t}\n\t}\n\n\tprivate resolveUnknownParentChain(element: T): Promise<TreeNode[]> {\n\t\treturn this.resolveParent(element)\n\t\t\t.then((parent) => {\n\t\t\t\tif (!parent) {\n\t\t\t\t\treturn Promise.resolve([]);\n\t\t\t\t}\n\t\t\t\treturn this.resolveUnknownParentChain(parent)\n\t\t\t\t\t.then(result => this.resolveTreeNode(parent, result[result.length - 1])\n\t\t\t\t\t\t.then(parentNode => {\n\t\t\t\t\t\t\tresult.push(parentNode);\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}));\n\t\t\t});\n\t}\n\n\tprivate resolveParent(element: T): Promise<T> {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\treturn Promise.resolve(node.parent ? this.elements.get(node.parent.item.handle) : null);\n\t\t}\n\t\treturn asPromise(() => this.dataProvider.getParent(element));\n\t}\n\n\tprivate resolveTreeNode(element: T, parent?: TreeNode): Promise<TreeNode> {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node) {\n\t\t\treturn Promise.resolve(node);\n\t\t}\n\t\treturn asPromise(() => this.dataProvider.getTreeItem(element))\n\t\t\t.then(extTreeItem => this.createHandle(element, extTreeItem, parent, true))\n\t\t\t.then(handle => this.getChildren(parent ? parent.item.handle : null)\n\t\t\t\t.then(() => {\n\t\t\t\t\tconst cachedElement = this.getExtensionElement(handle);\n\t\t\t\t\tif (cachedElement) {\n\t\t\t\t\t\tconst node = this.nodes.get(cachedElement);\n\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\treturn Promise.resolve(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Cannot resolve tree item for element ${handle}`);\n\t\t\t\t}));\n\t}\n\n\tprivate getChildrenNodes(parentNodeOrHandle?: TreeNode | TreeItemHandle): TreeNode[] {\n\t\tif (parentNodeOrHandle) {\n\t\t\tlet parentNode: TreeNode;\n\t\t\tif (typeof parentNodeOrHandle === 'string') {\n\t\t\t\tconst parentElement = this.getExtensionElement(parentNodeOrHandle);\n\t\t\t\tparentNode = parentElement ? this.nodes.get(parentElement) : null;\n\t\t\t} else {\n\t\t\t\tparentNode = parentNodeOrHandle;\n\t\t\t}\n\t\t\treturn parentNode ? parentNode.children : null;\n\t\t}\n\t\treturn this.roots;\n\t}\n\n\tprivate fetchChildrenNodes(parentElement?: T): Promise<TreeNode[]> {\n\t\t// clear children cache\n\t\tthis.clearChildren(parentElement);\n\n\t\tconst parentNode = parentElement ? this.nodes.get(parentElement) : undefined;\n\t\treturn asPromise(() => this.dataProvider.getChildren(parentElement))\n\t\t\t.then(elements => Promise.all(\n\t\t\t\tcoalesce(elements || [])\n\t\t\t\t\t.map(element => asPromise(() => this.dataProvider.getTreeItem(element))\n\t\t\t\t\t\t.then(extTreeItem => extTreeItem ? this.createAndRegisterTreeNode(element, extTreeItem, parentNode) : null))))\n\t\t\t.then(coalesce);\n\t}\n\n\tprivate refresh(elements: T[]): Promise<void> {\n\t\tconst hasRoot = elements.some(element => !element);\n\t\tif (hasRoot) {\n\t\t\tthis.clearAll(); // clear cache\n\t\t\treturn this.proxy.$refresh(this.viewId);\n\t\t} else {\n\t\t\tconst handlesToRefresh = this.getHandlesToRefresh(elements);\n\t\t\tif (handlesToRefresh.length) {\n\t\t\t\treturn this.refreshHandles(handlesToRefresh);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate getHandlesToRefresh(elements: T[]): TreeItemHandle[] {\n\t\tconst elementsToUpdate = new Set<TreeItemHandle>();\n\t\tfor (const element of elements) {\n\t\t\tconst elementNode = this.nodes.get(element);\n\t\t\tif (elementNode && !elementsToUpdate.has(elementNode.item.handle)) {\n\t\t\t\t// check if an ancestor of extElement is already in the elements to update list\n\t\t\t\tlet currentNode = elementNode;\n\t\t\t\twhile (currentNode && currentNode.parent && !elementsToUpdate.has(currentNode.parent.item.handle)) {\n\t\t\t\t\tconst parentElement = this.elements.get(currentNode.parent.item.handle);\n\t\t\t\t\tcurrentNode = this.nodes.get(parentElement);\n\t\t\t\t}\n\t\t\t\tif (!currentNode.parent) {\n\t\t\t\t\telementsToUpdate.add(elementNode.item.handle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst handlesToUpdate: TreeItemHandle[] = [];\n\t\t// Take only top level elements\n\t\telementsToUpdate.forEach((handle) => {\n\t\t\tconst element = this.elements.get(handle);\n\t\t\tconst node = this.nodes.get(element);\n\t\t\tif (node && (!node.parent || !elementsToUpdate.has(node.parent.item.handle))) {\n\t\t\t\thandlesToUpdate.push(handle);\n\t\t\t}\n\t\t});\n\n\t\treturn handlesToUpdate;\n\t}\n\n\tprivate refreshHandles(itemHandles: TreeItemHandle[]): Promise<void> {\n\t\tconst itemsToRefresh: { [treeItemHandle: string]: ITreeItem } = {};\n\t\treturn Promise.all(itemHandles.map(treeItemHandle =>\n\t\t\tthis.refreshNode(treeItemHandle)\n\t\t\t\t.then(node => {\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\titemsToRefresh[treeItemHandle] = node.item;\n\t\t\t\t\t}\n\t\t\t\t})))\n\t\t\t.then(() => Object.keys(itemsToRefresh).length ? this.proxy.$refresh(this.viewId, itemsToRefresh) : null);\n\t}\n\n\tprivate refreshNode(treeItemHandle: TreeItemHandle): Promise<TreeNode> {\n\t\tconst extElement = this.getExtensionElement(treeItemHandle);\n\t\tconst existing = this.nodes.get(extElement);\n\t\tthis.clearChildren(extElement); // clear children cache\n\t\treturn asPromise(() => this.dataProvider.getTreeItem(extElement))\n\t\t\t.then(extTreeItem => {\n\t\t\t\tif (extTreeItem) {\n\t\t\t\t\tconst newNode = this.createTreeNode(extElement, extTreeItem, existing.parent);\n\t\t\t\t\tthis.updateNodeCache(extElement, newNode, existing, existing.parent);\n\t\t\t\t\treturn newNode;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate createAndRegisterTreeNode(element: T, extTreeItem: vscode.TreeItem, parentNode: TreeNode): TreeNode {\n\t\tconst node = this.createTreeNode(element, extTreeItem, parentNode);\n\t\tif (extTreeItem.id && this.elements.has(node.item.handle)) {\n\t\t\tthrow new Error(localize('treeView.duplicateElement', 'Element with id {0} is already registered', extTreeItem.id));\n\t\t}\n\t\tthis.addNodeToCache(element, node);\n\t\tthis.addNodeToParentCache(node, parentNode);\n\t\treturn node;\n\t}\n\n\tprivate createTreeNode(element: T, extensionTreeItem: vscode.TreeItem, parent: TreeNode): TreeNode {\n\t\treturn {\n\t\t\titem: this.createTreeItem(element, extensionTreeItem, parent),\n\t\t\tparent,\n\t\t\tchildren: undefined\n\t\t};\n\t}\n\n\tprivate createTreeItem(element: T, extensionTreeItem: vscode.TreeItem, parent?: TreeNode): ITreeItem {\n\n\t\tconst handle = this.createHandle(element, extensionTreeItem, parent);\n\t\tconst icon = this.getLightIconPath(extensionTreeItem);\n\t\tconst item = {\n\t\t\thandle,\n\t\t\tparentHandle: parent ? parent.item.handle : undefined,\n\t\t\tlabel: toTreeItemLabel(extensionTreeItem.label, this.extension),\n\t\t\tdescription: extensionTreeItem.description,\n\t\t\tresourceUri: extensionTreeItem.resourceUri,\n\t\t\ttooltip: typeof extensionTreeItem.tooltip === 'string' ? extensionTreeItem.tooltip : undefined,\n\t\t\tcommand: extensionTreeItem.command ? this.commands.toInternal(extensionTreeItem.command) : undefined,\n\t\t\tcontextValue: extensionTreeItem.contextValue,\n\t\t\ticon,\n\t\t\ticonDark: this.getDarkIconPath(extensionTreeItem) || icon,\n\t\t\tthemeIcon: extensionTreeItem.iconPath instanceof ThemeIcon ? { id: extensionTreeItem.iconPath.id } : undefined,\n\t\t\tcollapsibleState: isUndefinedOrNull(extensionTreeItem.collapsibleState) ? TreeItemCollapsibleState.None : extensionTreeItem.collapsibleState\n\t\t};\n\n\t\treturn item;\n\t}\n\n\tprivate createHandle(element: T, { id, label, resourceUri }: vscode.TreeItem, parent: TreeNode, returnFirst?: boolean): TreeItemHandle {\n\t\tif (id) {\n\t\t\treturn `${ExtHostTreeView.ID_HANDLE_PREFIX}/${id}`;\n\t\t}\n\n\t\tconst treeItemLabel = toTreeItemLabel(label, this.extension);\n\t\tconst prefix: string = parent ? parent.item.handle : ExtHostTreeView.LABEL_HANDLE_PREFIX;\n\t\tlet elementId = treeItemLabel ? treeItemLabel.label : resourceUri ? basename(resourceUri) : '';\n\t\telementId = elementId.indexOf('/') !== -1 ? elementId.replace('/', '//') : elementId;\n\t\tconst existingHandle = this.nodes.has(element) ? this.nodes.get(element).item.handle : undefined;\n\t\tconst childrenNodes = (this.getChildrenNodes(parent) || []);\n\n\t\tlet handle: TreeItemHandle;\n\t\tlet counter = 0;\n\t\tdo {\n\t\t\thandle = `${prefix}/${counter}:${elementId}`;\n\t\t\tif (returnFirst || !this.elements.has(handle) || existingHandle === handle) {\n\t\t\t\t// Return first if asked for or\n\t\t\t\t// Return if handle does not exist or\n\t\t\t\t// Return if handle is being reused\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcounter++;\n\t\t} while (counter <= childrenNodes.length);\n\n\t\treturn handle;\n\t}\n\n\tprivate getLightIconPath(extensionTreeItem: vscode.TreeItem): URI {\n\t\tif (extensionTreeItem.iconPath && !(extensionTreeItem.iconPath instanceof ThemeIcon)) {\n\t\t\tif (typeof extensionTreeItem.iconPath === 'string'\n\t\t\t\t|| extensionTreeItem.iconPath instanceof URI) {\n\t\t\t\treturn this.getIconPath(extensionTreeItem.iconPath);\n\t\t\t}\n\t\t\treturn this.getIconPath(extensionTreeItem.iconPath['light']);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getDarkIconPath(extensionTreeItem: vscode.TreeItem): URI {\n\t\tif (extensionTreeItem.iconPath && !(extensionTreeItem.iconPath instanceof ThemeIcon) && extensionTreeItem.iconPath['dark']) {\n\t\t\treturn this.getIconPath(extensionTreeItem.iconPath['dark']);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getIconPath(iconPath: string | URI): URI {\n\t\tif (iconPath instanceof URI) {\n\t\t\treturn iconPath;\n\t\t}\n\t\treturn URI.file(iconPath);\n\t}\n\n\tprivate addNodeToCache(element: T, node: TreeNode): void {\n\t\tthis.elements.set(node.item.handle, element);\n\t\tthis.nodes.set(element, node);\n\t}\n\n\tprivate updateNodeCache(element: T, newNode: TreeNode, existing: TreeNode, parentNode: TreeNode): void {\n\t\t// Remove from the cache\n\t\tthis.elements.delete(newNode.item.handle);\n\t\tthis.nodes.delete(element);\n\t\tif (newNode.item.handle !== existing.item.handle) {\n\t\t\tthis.elements.delete(existing.item.handle);\n\t\t}\n\n\t\t// Add the new node to the cache\n\t\tthis.addNodeToCache(element, newNode);\n\n\t\t// Replace the node in parent's children nodes\n\t\tconst childrenNodes = (this.getChildrenNodes(parentNode) || []);\n\t\tconst childNode = childrenNodes.filter(c => c.item.handle === existing.item.handle)[0];\n\t\tif (childNode) {\n\t\t\tchildrenNodes.splice(childrenNodes.indexOf(childNode), 1, newNode);\n\t\t}\n\t}\n\n\tprivate addNodeToParentCache(node: TreeNode, parentNode: TreeNode): void {\n\t\tif (parentNode) {\n\t\t\tif (!parentNode.children) {\n\t\t\t\tparentNode.children = [];\n\t\t\t}\n\t\t\tparentNode.children.push(node);\n\t\t} else {\n\t\t\tif (!this.roots) {\n\t\t\t\tthis.roots = [];\n\t\t\t}\n\t\t\tthis.roots.push(node);\n\t\t}\n\t}\n\n\tprivate clearChildren(parentElement?: T): void {\n\t\tif (parentElement) {\n\t\t\tconst node = this.nodes.get(parentElement);\n\t\t\tif (node.children) {\n\t\t\t\tfor (const child of node.children) {\n\t\t\t\t\tconst childEleement = this.elements.get(child.item.handle);\n\t\t\t\t\tif (childEleement) {\n\t\t\t\t\t\tthis.clear(childEleement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode.children = undefined;\n\t\t} else {\n\t\t\tthis.clearAll();\n\t\t}\n\t}\n\n\tprivate clear(element: T): void {\n\t\tconst node = this.nodes.get(element);\n\t\tif (node.children) {\n\t\t\tfor (const child of node.children) {\n\t\t\t\tconst childEleement = this.elements.get(child.item.handle);\n\t\t\t\tif (childEleement) {\n\t\t\t\t\tthis.clear(childEleement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.nodes.delete(element);\n\t\tthis.elements.delete(node.item.handle);\n\t}\n\n\tprivate clearAll(): void {\n\t\tthis.roots = null;\n\t\tthis.elements.clear();\n\t\tthis.nodes.clear();\n\t}\n\n\tdispose() {\n\t\tthis.clearAll();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { Emitter } from 'vs/base/common/event';\n\nexport class DeltaExtensionsResult {\n\tconstructor(\n\t\tpublic readonly removedDueToLooping: IExtensionDescription[]\n\t) { }\n}\n\nexport class ExtensionDescriptionRegistry {\n\tprivate readonly _onDidChange = new Emitter<void>();\n\tpublic readonly onDidChange = this._onDidChange.event;\n\n\tprivate _extensionDescriptions: IExtensionDescription[];\n\tprivate _extensionsMap: Map<string, IExtensionDescription>;\n\tprivate _extensionsArr: IExtensionDescription[];\n\tprivate _activationMap: Map<string, IExtensionDescription[]>;\n\n\tconstructor(extensionDescriptions: IExtensionDescription[]) {\n\t\tthis._extensionDescriptions = extensionDescriptions;\n\t\tthis._initialize();\n\t}\n\n\tprivate _initialize(): void {\n\t\tthis._extensionsMap = new Map<string, IExtensionDescription>();\n\t\tthis._extensionsArr = [];\n\t\tthis._activationMap = new Map<string, IExtensionDescription[]>();\n\n\t\tfor (const extensionDescription of this._extensionDescriptions) {\n\t\t\tif (this._extensionsMap.has(ExtensionIdentifier.toKey(extensionDescription.identifier))) {\n\t\t\t\t// No overwriting allowed!\n\t\t\t\tconsole.error('Extension `' + extensionDescription.identifier.value + '` is already registered');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._extensionsMap.set(ExtensionIdentifier.toKey(extensionDescription.identifier), extensionDescription);\n\t\t\tthis._extensionsArr.push(extensionDescription);\n\n\t\t\tif (Array.isArray(extensionDescription.activationEvents)) {\n\t\t\t\tfor (let activationEvent of extensionDescription.activationEvents) {\n\t\t\t\t\t// TODO@joao: there's no easy way to contribute this\n\t\t\t\t\tif (activationEvent === 'onUri') {\n\t\t\t\t\t\tactivationEvent = `onUri:${ExtensionIdentifier.toKey(extensionDescription.identifier)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this._activationMap.has(activationEvent)) {\n\t\t\t\t\t\tthis._activationMap.set(activationEvent, []);\n\t\t\t\t\t}\n\t\t\t\t\tthis._activationMap.get(activationEvent)!.push(extensionDescription);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic keepOnly(extensionIds: ExtensionIdentifier[]): void {\n\t\tconst toKeep = new Set<string>();\n\t\textensionIds.forEach(extensionId => toKeep.add(ExtensionIdentifier.toKey(extensionId)));\n\t\tthis._extensionDescriptions = this._extensionDescriptions.filter(extension => toKeep.has(ExtensionIdentifier.toKey(extension.identifier)));\n\t\tthis._initialize();\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tpublic deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): DeltaExtensionsResult {\n\t\tif (toAdd.length > 0) {\n\t\t\tthis._extensionDescriptions = this._extensionDescriptions.concat(toAdd);\n\t\t}\n\n\t\t// Immediately remove looping extensions!\n\t\tconst looping = ExtensionDescriptionRegistry._findLoopingExtensions(this._extensionDescriptions);\n\t\ttoRemove = toRemove.concat(looping.map(ext => ext.identifier));\n\n\t\tif (toRemove.length > 0) {\n\t\t\tconst toRemoveSet = new Set<string>();\n\t\t\ttoRemove.forEach(extensionId => toRemoveSet.add(ExtensionIdentifier.toKey(extensionId)));\n\t\t\tthis._extensionDescriptions = this._extensionDescriptions.filter(extension => !toRemoveSet.has(ExtensionIdentifier.toKey(extension.identifier)));\n\t\t}\n\n\t\tthis._initialize();\n\t\tthis._onDidChange.fire(undefined);\n\t\treturn new DeltaExtensionsResult(looping);\n\t}\n\n\tprivate static _findLoopingExtensions(extensionDescriptions: IExtensionDescription[]): IExtensionDescription[] {\n\t\tconst G = new class {\n\n\t\t\tprivate _arcs = new Map<string, string[]>();\n\t\t\tprivate _nodesSet = new Set<string>();\n\t\t\tprivate _nodesArr: string[] = [];\n\n\t\t\taddNode(id: string): void {\n\t\t\t\tif (!this._nodesSet.has(id)) {\n\t\t\t\t\tthis._nodesSet.add(id);\n\t\t\t\t\tthis._nodesArr.push(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taddArc(from: string, to: string): void {\n\t\t\t\tthis.addNode(from);\n\t\t\t\tthis.addNode(to);\n\t\t\t\tif (this._arcs.has(from)) {\n\t\t\t\t\tthis._arcs.get(from)!.push(to);\n\t\t\t\t} else {\n\t\t\t\t\tthis._arcs.set(from, [to]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgetArcs(id: string): string[] {\n\t\t\t\tif (this._arcs.has(id)) {\n\t\t\t\t\treturn this._arcs.get(id)!;\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\thasOnlyGoodArcs(id: string, good: Set<string>): boolean {\n\t\t\t\tconst dependencies = G.getArcs(id);\n\t\t\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\t\t\tif (!good.has(dependencies[i])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tgetNodes(): string[] {\n\t\t\t\treturn this._nodesArr;\n\t\t\t}\n\t\t};\n\n\t\tlet descs = new Map<string, IExtensionDescription>();\n\t\tfor (let extensionDescription of extensionDescriptions) {\n\t\t\tconst extensionId = ExtensionIdentifier.toKey(extensionDescription.identifier);\n\t\t\tdescs.set(extensionId, extensionDescription);\n\t\t\tif (extensionDescription.extensionDependencies) {\n\t\t\t\tfor (let _depId of extensionDescription.extensionDependencies) {\n\t\t\t\t\tconst depId = ExtensionIdentifier.toKey(_depId);\n\t\t\t\t\tG.addArc(extensionId, depId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// initialize with all extensions with no dependencies.\n\t\tlet good = new Set<string>();\n\t\tG.getNodes().filter(id => G.getArcs(id).length === 0).forEach(id => good.add(id));\n\n\t\t// all other extensions will be processed below.\n\t\tlet nodes = G.getNodes().filter(id => !good.has(id));\n\n\t\tlet madeProgress: boolean;\n\t\tdo {\n\t\t\tmadeProgress = false;\n\n\t\t\t// find one extension which has only good deps\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tconst id = nodes[i];\n\n\t\t\t\tif (G.hasOnlyGoodArcs(id, good)) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t\tgood.add(id);\n\t\t\t\t\tmadeProgress = true;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (madeProgress);\n\n\t\t// The remaining nodes are bad and have loops\n\t\treturn nodes.map(id => descs.get(id)!);\n\t}\n\n\tpublic containsActivationEvent(activationEvent: string): boolean {\n\t\treturn this._activationMap.has(activationEvent);\n\t}\n\n\tpublic containsExtension(extensionId: ExtensionIdentifier): boolean {\n\t\treturn this._extensionsMap.has(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tpublic getExtensionDescriptionsForActivationEvent(activationEvent: string): IExtensionDescription[] {\n\t\tconst extensions = this._activationMap.get(activationEvent);\n\t\treturn extensions ? extensions.slice(0) : [];\n\t}\n\n\tpublic getAllExtensionDescriptions(): IExtensionDescription[] {\n\t\treturn this._extensionsArr.slice(0);\n\t}\n\n\tpublic getExtensionDescription(extensionId: ExtensionIdentifier | string): IExtensionDescription | undefined {\n\t\tconst extension = this._extensionsMap.get(ExtensionIdentifier.toKey(extensionId));\n\t\treturn extension ? extension : undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum MessageType {\n\tInitialized,\n\tReady,\n\tTerminate\n}\n\nexport function createMessageOfType(type: MessageType): Buffer {\n\tconst result = Buffer.allocUnsafe(1);\n\n\tswitch (type) {\n\t\tcase MessageType.Initialized: result.writeUInt8(1, 0); break;\n\t\tcase MessageType.Ready: result.writeUInt8(2, 0); break;\n\t\tcase MessageType.Terminate: result.writeUInt8(3, 0); break;\n\t}\n\n\treturn result;\n}\n\nexport function isMessageOfType(message: Buffer, type: MessageType): boolean {\n\tif (message.length !== 1) {\n\t\treturn false;\n\t}\n\n\tswitch (message.readUInt8(0)) {\n\t\tcase 1: return type === MessageType.Initialized;\n\t\tcase 2: return type === MessageType.Ready;\n\t\tcase 3: return type === MessageType.Terminate;\n\t\tdefault: return false;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport class LazyPromise implements Promise<any> {\n\n\tprivate _actual: Promise<any> | null;\n\tprivate _actualOk: ((value?: any) => any) | null;\n\tprivate _actualErr: ((err?: any) => any) | null;\n\n\tprivate _hasValue: boolean;\n\tprivate _value: any;\n\n\tprivate _hasErr: boolean;\n\tprivate _err: any;\n\n\tconstructor() {\n\t\tthis._actual = null;\n\t\tthis._actualOk = null;\n\t\tthis._actualErr = null;\n\t\tthis._hasValue = false;\n\t\tthis._value = null;\n\t\tthis._hasErr = false;\n\t\tthis._err = null;\n\t}\n\n\tprivate _ensureActual(): Promise<any> {\n\t\tif (!this._actual) {\n\t\t\tthis._actual = new Promise<any>((c, e) => {\n\t\t\t\tthis._actualOk = c;\n\t\t\t\tthis._actualErr = e;\n\n\t\t\t\tif (this._hasValue) {\n\t\t\t\t\tthis._actualOk(this._value);\n\t\t\t\t}\n\n\t\t\t\tif (this._hasErr) {\n\t\t\t\t\tthis._actualErr(this._err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this._actual;\n\t}\n\n\tpublic resolveOk(value: any): void {\n\t\tif (this._hasValue || this._hasErr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasValue = true;\n\t\tthis._value = value;\n\n\t\tif (this._actual) {\n\t\t\tthis._actualOk!(value);\n\t\t}\n\t}\n\n\tpublic resolveErr(err: any): void {\n\t\tif (this._hasValue || this._hasErr) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hasErr = true;\n\t\tthis._err = err;\n\n\t\tif (this._actual) {\n\t\t\tthis._actualErr!(err);\n\t\t} else {\n\t\t\t// If nobody's listening at this point, it is safe to assume they never will,\n\t\t\t// since resolving this promise is always \"async\"\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic then(success: any, error: any): any {\n\t\treturn this._ensureActual().then(success, error);\n\t}\n\n\tpublic catch(error: any): any {\n\t\treturn this._ensureActual().then(undefined, error);\n\t}\n\n\tpublic finally(callback): any {\n\t\treturn this._ensureActual().finally(callback);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IRPCProtocol {\n\t/**\n\t * Returns a proxy to an object addressable/named in the extension host process or in the renderer process.\n\t */\n\tgetProxy<T>(identifier: ProxyIdentifier<T>): T;\n\n\t/**\n\t * Register manually created instance.\n\t */\n\tset<T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R;\n\n\t/**\n\t * Assert these identifiers are already registered via `.set`.\n\t */\n\tassertRegistered(identifiers: ProxyIdentifier<any>[]): void;\n}\n\nexport class ProxyIdentifier<T> {\n\tpublic static count = 0;\n\t_proxyIdentifierBrand: void;\n\t_suppressCompilerUnusedWarning: T;\n\n\tpublic readonly isMain: boolean;\n\tpublic readonly sid: string;\n\tpublic readonly nid: number;\n\n\tconstructor(isMain: boolean, sid: string) {\n\t\tthis.isMain = isMain;\n\t\tthis.sid = sid;\n\t\tthis.nid = (++ProxyIdentifier.count);\n\t}\n}\n\nconst identifiers: ProxyIdentifier<any>[] = [];\n\nexport function createMainContextProxyIdentifier<T>(identifier: string): ProxyIdentifier<T> {\n\tconst result = new ProxyIdentifier<T>(true, identifier);\n\tidentifiers[result.nid] = result;\n\treturn result;\n}\n\nexport function createExtHostContextProxyIdentifier<T>(identifier: string): ProxyIdentifier<T> {\n\tconst result = new ProxyIdentifier<T>(false, identifier);\n\tidentifiers[result.nid] = result;\n\treturn result;\n}\n\nexport function getStringIdentifierForProxy(nid: number): string {\n\treturn identifiers[nid].sid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { SerializedError } from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport Severity from 'vs/base/common/severity';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { TextEditorCursorStyle } from 'vs/editor/common/config/editorOptions';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { ISingleEditOperation } from 'vs/editor/common/model';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport * as modes from 'vs/editor/common/modes';\nimport { CharacterPair, CommentRule, EnterAction } from 'vs/editor/common/modes/languageConfiguration';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ConfigurationTarget, IConfigurationData, IConfigurationModel } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, FileWriteOptions, IStat, IWatchOptions, FileOpenOptions } from 'vs/platform/files/common/files';\nimport { ResourceLabelFormatter } from 'vs/platform/label/common/label';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { IPickOptions, IQuickInputButton, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { IPatternInfo, IRawFileMatch2, IRawQuery, IRawTextQuery, ISearchCompleteStats } from 'vs/workbench/services/search/common/search';\nimport { StatusbarAlignment as MainThreadStatusBarAlignment } from 'vs/platform/statusbar/common/statusbar';\nimport { ITelemetryInfo } from 'vs/platform/telemetry/common/telemetry';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { EndOfLine, IFileOperationOptions, TextEditorLineNumbersStyle } from 'vs/workbench/api/node/extHostTypes';\nimport { EditorViewColumn } from 'vs/workbench/api/shared/editor';\nimport { TaskDTO, TaskExecutionDTO, TaskFilterDTO, TaskHandleDTO, TaskProcessEndedDTO, TaskProcessStartedDTO, TaskSystemInfoDTO, TaskSetDTO } from 'vs/workbench/api/shared/tasks';\nimport { ITreeItem, IRevealOptions } from 'vs/workbench/common/views';\nimport { IAdapterDescriptor, IConfig, ITerminalSettings } from 'vs/workbench/contrib/debug/common/debug';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { ITerminalDimensions } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { IRPCProtocol, createExtHostContextProxyIdentifier as createExtId, createMainContextProxyIdentifier as createMainId } from 'vs/workbench/services/extensions/node/proxyIdentifier';\nimport { IProgressOptions, IProgressStep } from 'vs/platform/progress/common/progress';\nimport { SaveReason } from 'vs/workbench/services/textfile/common/textfiles';\nimport * as vscode from 'vscode';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { ResolvedAuthority } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IRemoteConsoleLog } from 'vs/base/node/console';\nimport * as codeInset from 'vs/workbench/contrib/codeinset/common/codeInset';\n\nexport interface IEnvironment {\n\tisExtensionDevelopmentDebug: boolean;\n\tappRoot?: URI;\n\tappSettingsHome?: URI;\n\textensionDevelopmentLocationURI?: URI;\n\textensionTestsLocationURI?: URI;\n\tglobalStorageHome: URI;\n\tuserHome: URI;\n}\n\nexport interface IStaticWorkspaceData {\n\tid: string;\n\tname: string;\n\tconfiguration?: UriComponents;\n}\n\nexport interface IWorkspaceData extends IStaticWorkspaceData {\n\tfolders: { uri: UriComponents, name: string, index: number }[];\n}\n\nexport interface IInitData {\n\tcommit?: string;\n\tparentPid: number;\n\tenvironment: IEnvironment;\n\tworkspace?: IStaticWorkspaceData;\n\tresolvedExtensions: ExtensionIdentifier[];\n\thostExtensions: ExtensionIdentifier[];\n\textensions: IExtensionDescription[];\n\ttelemetryInfo: ITelemetryInfo;\n\tlogLevel: LogLevel;\n\tlogsLocation: URI;\n\tautoStart: boolean;\n\tremoteAuthority?: string | null;\n}\n\nexport interface IConfigurationInitData extends IConfigurationData {\n\tconfigurationScopes: { [key: string]: ConfigurationScope };\n}\n\nexport interface IWorkspaceConfigurationChangeEventData {\n\tchangedConfiguration: IConfigurationModel;\n\tchangedConfigurationByResource: { [folder: string]: IConfigurationModel };\n}\n\nexport interface IExtHostContext extends IRPCProtocol {\n\tremoteAuthority: string;\n}\n\nexport interface IMainContext extends IRPCProtocol {\n}\n\n// --- main thread\n\nexport interface MainThreadClipboardShape extends IDisposable {\n\t$readText(): Promise<string>;\n\t$writeText(value: string): Promise<void>;\n}\n\nexport interface MainThreadCommandsShape extends IDisposable {\n\t$registerCommand(id: string): void;\n\t$unregisterCommand(id: string): void;\n\t$executeCommand<T>(id: string, args: any[]): Promise<T | undefined>;\n\t$getCommands(): Promise<string[]>;\n}\n\nexport interface CommentProviderFeatures {\n\tstartDraftLabel?: string;\n\tdeleteDraftLabel?: string;\n\tfinishDraftLabel?: string;\n\treactionGroup?: modes.CommentReaction[];\n}\n\nexport interface MainThreadCommentsShape extends IDisposable {\n\t$registerCommentController(handle: number, id: string, label: string): void;\n\t$updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void;\n\t$createCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, range: IRange, comments: modes.Comment[], acceptInputCommand: modes.Command | undefined, additionalCommands: modes.Command[], collapseState: modes.CommentThreadCollapsibleState): modes.CommentThread2 | undefined;\n\t$deleteCommentThread(handle: number, commentThreadHandle: number): void;\n\t$updateComments(handle: number, commentThreadHandle: number, comments: modes.Comment[]): void;\n\t$setInputValue(handle: number, input: string): void;\n\t$updateCommentThreadAcceptInputCommand(handle: number, commentThreadHandle: number, acceptInputCommand: modes.Command): void;\n\t$updateCommentThreadAdditionalCommands(handle: number, commentThreadHandle: number, additionalCommands: modes.Command[]): void;\n\t$updateCommentThreadCollapsibleState(handle: number, commentThreadHandle: number, collapseState: modes.CommentThreadCollapsibleState): void;\n\t$updateCommentThreadRange(handle: number, commentThreadHandle: number, range: IRange): void;\n\t$updateCommentThreadLabel(handle: number, commentThreadHandle: number, label: string): void;\n\t$registerDocumentCommentProvider(handle: number, features: CommentProviderFeatures): void;\n\t$unregisterDocumentCommentProvider(handle: number): void;\n\t$registerWorkspaceCommentProvider(handle: number, extensionId: ExtensionIdentifier): void;\n\t$unregisterWorkspaceCommentProvider(handle: number): void;\n\t$onDidCommentThreadsChange(handle: number, event: modes.CommentThreadChangedEvent): void;\n}\n\nexport interface MainThreadConfigurationShape extends IDisposable {\n\t$updateConfigurationOption(target: ConfigurationTarget | null, key: string, value: any, resource: UriComponents | undefined): Promise<void>;\n\t$removeConfigurationOption(target: ConfigurationTarget | null, key: string, resource: UriComponents | undefined): Promise<void>;\n}\n\nexport interface MainThreadDiagnosticsShape extends IDisposable {\n\t$changeMany(owner: string, entries: [UriComponents, IMarkerData[] | undefined][]): void;\n\t$clear(owner: string): void;\n}\n\nexport interface MainThreadDialogOpenOptions {\n\tdefaultUri?: UriComponents;\n\topenLabel?: string;\n\tcanSelectFiles?: boolean;\n\tcanSelectFolders?: boolean;\n\tcanSelectMany?: boolean;\n\tfilters?: { [name: string]: string[] };\n}\n\nexport interface MainThreadDialogSaveOptions {\n\tdefaultUri?: UriComponents;\n\tsaveLabel?: string;\n\tfilters?: { [name: string]: string[] };\n}\n\nexport interface MainThreadDiaglogsShape extends IDisposable {\n\t$showOpenDialog(options: MainThreadDialogOpenOptions): Promise<UriComponents[] | undefined>;\n\t$showSaveDialog(options: MainThreadDialogSaveOptions): Promise<UriComponents | undefined>;\n}\n\nexport interface MainThreadDecorationsShape extends IDisposable {\n\t$registerDecorationProvider(handle: number, label: string): void;\n\t$unregisterDecorationProvider(handle: number): void;\n\t$onDidChange(handle: number, resources: UriComponents[] | null): void;\n}\n\nexport interface MainThreadDocumentContentProvidersShape extends IDisposable {\n\t$registerTextContentProvider(handle: number, scheme: string): void;\n\t$unregisterTextContentProvider(handle: number): void;\n\t$onVirtualDocumentChange(uri: UriComponents, value: string): void;\n}\n\nexport interface MainThreadDocumentsShape extends IDisposable {\n\t$tryCreateDocument(options?: { language?: string; content?: string; }): Promise<UriComponents>;\n\t$tryOpenDocument(uri: UriComponents): Promise<void>;\n\t$trySaveDocument(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface ITextEditorConfigurationUpdate {\n\ttabSize?: number | 'auto';\n\tindentSize?: number | 'tabSize';\n\tinsertSpaces?: boolean | 'auto';\n\tcursorStyle?: TextEditorCursorStyle;\n\tlineNumbers?: TextEditorLineNumbersStyle;\n}\n\nexport interface IResolvedTextEditorConfiguration {\n\ttabSize: number;\n\tindentSize: number;\n\tinsertSpaces: boolean;\n\tcursorStyle: TextEditorCursorStyle;\n\tlineNumbers: TextEditorLineNumbersStyle;\n}\n\nexport enum TextEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport interface IUndoStopOptions {\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n}\n\nexport interface IApplyEditsOptions extends IUndoStopOptions {\n\tsetEndOfLine: EndOfLine;\n}\n\nexport interface ITextDocumentShowOptions {\n\tposition?: EditorViewColumn;\n\tpreserveFocus?: boolean;\n\tpinned?: boolean;\n\tselection?: IRange;\n}\n\nexport interface MainThreadTextEditorsShape extends IDisposable {\n\t$tryShowTextDocument(resource: UriComponents, options: ITextDocumentShowOptions): Promise<string | undefined>;\n\t$registerTextEditorDecorationType(key: string, options: editorCommon.IDecorationRenderOptions): void;\n\t$removeTextEditorDecorationType(key: string): void;\n\t$tryShowEditor(id: string, position: EditorViewColumn): Promise<void>;\n\t$tryHideEditor(id: string): Promise<void>;\n\t$trySetOptions(id: string, options: ITextEditorConfigurationUpdate): Promise<void>;\n\t$trySetDecorations(id: string, key: string, ranges: editorCommon.IDecorationOptions[]): Promise<void>;\n\t$trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void>;\n\t$tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): Promise<void>;\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void>;\n\t$tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): Promise<boolean>;\n\t$tryApplyWorkspaceEdit(workspaceEditDto: WorkspaceEditDto): Promise<boolean>;\n\t$tryInsertSnippet(id: string, template: string, selections: IRange[], opts: IUndoStopOptions): Promise<boolean>;\n\t$getDiffInformation(id: string): Promise<editorCommon.ILineChange[]>;\n}\n\nexport interface MainThreadTreeViewsShape extends IDisposable {\n\t$registerTreeViewDataProvider(treeViewId: string, options: { showCollapseAll: boolean }): void;\n\t$refresh(treeViewId: string, itemsToRefresh?: { [treeItemHandle: string]: ITreeItem }): Promise<void>;\n\t$reveal(treeViewId: string, treeItem: ITreeItem, parentChain: ITreeItem[], options: IRevealOptions): Promise<void>;\n\t$setMessage(treeViewId: string, message: string | IMarkdownString): void;\n}\n\nexport interface MainThreadErrorsShape extends IDisposable {\n\t$onUnexpectedError(err: any | SerializedError): void;\n}\n\nexport interface MainThreadConsoleShape extends IDisposable {\n\t$logExtensionHostMessage(msg: IRemoteConsoleLog): void;\n}\n\nexport interface ISerializedRegExp {\n\tpattern: string;\n\tflags?: string;\n}\nexport interface ISerializedIndentationRule {\n\tdecreaseIndentPattern: ISerializedRegExp;\n\tincreaseIndentPattern: ISerializedRegExp;\n\tindentNextLinePattern?: ISerializedRegExp;\n\tunIndentedLinePattern?: ISerializedRegExp;\n}\nexport interface ISerializedOnEnterRule {\n\tbeforeText: ISerializedRegExp;\n\tafterText?: ISerializedRegExp;\n\toneLineAboveText?: ISerializedRegExp;\n\taction: EnterAction;\n}\nexport interface ISerializedLanguageConfiguration {\n\tcomments?: CommentRule;\n\tbrackets?: CharacterPair[];\n\twordPattern?: ISerializedRegExp;\n\tindentationRules?: ISerializedIndentationRule;\n\tonEnterRules?: ISerializedOnEnterRule[];\n\t__electricCharacterSupport?: {\n\t\tbrackets?: any;\n\t\tdocComment?: {\n\t\t\tscope: string;\n\t\t\topen: string;\n\t\t\tlineStart: string;\n\t\t\tclose?: string;\n\t\t};\n\t};\n\t__characterPairSupport?: {\n\t\tautoClosingPairs: {\n\t\t\topen: string;\n\t\t\tclose: string;\n\t\t\tnotIn?: string[];\n\t\t}[];\n\t};\n}\n\nexport interface ISerializedDocumentFilter {\n\t$serialized: true;\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: vscode.GlobPattern;\n\texclusive?: boolean;\n}\n\nexport interface ISerializedSignatureHelpProviderMetadata {\n\treadonly triggerCharacters: ReadonlyArray<string>;\n\treadonly retriggerCharacters: ReadonlyArray<string>;\n}\n\nexport interface MainThreadLanguageFeaturesShape extends IDisposable {\n\t$unregister(handle: number): void;\n\t$registerDocumentSymbolProvider(handle: number, selector: ISerializedDocumentFilter[], label: string): void;\n\t$registerCodeLensSupport(handle: number, selector: ISerializedDocumentFilter[], eventHandle: number | undefined): void;\n\t$registerCodeInsetSupport(handle: number, selector: ISerializedDocumentFilter[], eventHandle: number | undefined): void;\n\t$emitCodeLensEvent(eventHandle: number, event?: any): void;\n\t$registerDefinitionSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerDeclarationSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerImplementationSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerTypeDefinitionSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerHoverProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerDocumentHighlightProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerReferenceSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerQuickFixSupport(handle: number, selector: ISerializedDocumentFilter[], supportedKinds?: string[]): void;\n\t$registerDocumentFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], extensionId: ExtensionIdentifier): void;\n\t$registerRangeFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], extensionId: ExtensionIdentifier): void;\n\t$registerOnTypeFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], autoFormatTriggerCharacters: string[], extensionId: ExtensionIdentifier): void;\n\t$registerNavigateTypeSupport(handle: number): void;\n\t$registerRenameSupport(handle: number, selector: ISerializedDocumentFilter[], supportsResolveInitialValues: boolean): void;\n\t$registerSuggestSupport(handle: number, selector: ISerializedDocumentFilter[], triggerCharacters: string[], supportsResolveDetails: boolean): void;\n\t$registerSignatureHelpProvider(handle: number, selector: ISerializedDocumentFilter[], metadata: ISerializedSignatureHelpProviderMetadata): void;\n\t$registerDocumentLinkProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerDocumentColorProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerFoldingRangeProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerSelectionRangeProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$setLanguageConfiguration(handle: number, languageId: string, configuration: ISerializedLanguageConfiguration): void;\n}\n\nexport interface MainThreadLanguagesShape extends IDisposable {\n\t$getLanguages(): Promise<string[]>;\n\t$changeLanguage(resource: UriComponents, languageId: string): Promise<void>;\n}\n\nexport interface MainThreadMessageOptions {\n\textension?: IExtensionDescription;\n\tmodal?: boolean;\n}\n\nexport interface MainThreadMessageServiceShape extends IDisposable {\n\t$showMessage(severity: Severity, message: string, options: MainThreadMessageOptions, commands: { title: string; isCloseAffordance: boolean; handle: number; }[]): Promise<number | undefined>;\n}\n\nexport interface MainThreadOutputServiceShape extends IDisposable {\n\t$register(label: string, log: boolean, file?: UriComponents): Promise<string>;\n\t$append(channelId: string, value: string): Promise<void> | undefined;\n\t$update(channelId: string): Promise<void> | undefined;\n\t$clear(channelId: string, till: number): Promise<void> | undefined;\n\t$reveal(channelId: string, preserveFocus: boolean): Promise<void> | undefined;\n\t$close(channelId: string): Promise<void> | undefined;\n\t$dispose(channelId: string): Promise<void> | undefined;\n}\n\nexport interface MainThreadProgressShape extends IDisposable {\n\n\t$startProgress(handle: number, options: IProgressOptions): void;\n\t$progressReport(handle: number, message: IProgressStep): void;\n\t$progressEnd(handle: number): void;\n}\n\nexport interface MainThreadTerminalServiceShape extends IDisposable {\n\t$createTerminal(name?: string, shellPath?: string, shellArgs?: string[], cwd?: string | UriComponents, env?: { [key: string]: string }, waitOnExit?: boolean, strictEnv?: boolean): Promise<{ id: number, name: string }>;\n\t$createTerminalRenderer(name: string): Promise<number>;\n\t$dispose(terminalId: number): void;\n\t$hide(terminalId: number): void;\n\t$sendText(terminalId: number, text: string, addNewLine: boolean): void;\n\t$show(terminalId: number, preserveFocus: boolean): void;\n\t$registerOnDataListener(terminalId: number): void;\n\n\t// Process\n\t$sendProcessTitle(terminalId: number, title: string): void;\n\t$sendProcessData(terminalId: number, data: string): void;\n\t$sendProcessPid(terminalId: number, pid: number): void;\n\t$sendProcessExit(terminalId: number, exitCode: number): void;\n\t$sendProcessInitialCwd(terminalId: number, cwd: string): void;\n\t$sendProcessCwd(terminalId: number, initialCwd: string): void;\n\n\t// Renderer\n\t$terminalRendererSetName(terminalId: number, name: string): void;\n\t$terminalRendererSetDimensions(terminalId: number, dimensions: ITerminalDimensions): void;\n\t$terminalRendererWrite(terminalId: number, text: string): void;\n\t$terminalRendererRegisterOnInputListener(terminalId: number): void;\n}\n\nexport interface TransferQuickPickItems extends IQuickPickItem {\n\thandle: number;\n}\n\nexport interface TransferQuickInputButton extends IQuickInputButton {\n\thandle: number;\n}\n\nexport type TransferQuickInput = TransferQuickPick | TransferInputBox;\n\nexport interface BaseTransferQuickInput {\n\n\tid: number;\n\n\ttype?: 'quickPick' | 'inputBox';\n\n\tenabled?: boolean;\n\n\tbusy?: boolean;\n\n\tvisible?: boolean;\n}\n\nexport interface TransferQuickPick extends BaseTransferQuickInput {\n\n\ttype?: 'quickPick';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\titems?: TransferQuickPickItems[];\n\n\tactiveItems?: number[];\n\n\tselectedItems?: number[];\n\n\tcanSelectMany?: boolean;\n\n\tignoreFocusOut?: boolean;\n\n\tmatchOnDescription?: boolean;\n\n\tmatchOnDetail?: boolean;\n}\n\nexport interface TransferInputBox extends BaseTransferQuickInput {\n\n\ttype?: 'inputBox';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tpassword?: boolean;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\tprompt?: string;\n\n\tvalidationMessage?: string;\n}\n\nexport interface MainThreadQuickOpenShape extends IDisposable {\n\t$show(instance: number, options: IPickOptions<TransferQuickPickItems>, token: CancellationToken): Promise<number | number[] | undefined>;\n\t$setItems(instance: number, items: TransferQuickPickItems[]): Promise<void>;\n\t$setError(instance: number, error: Error): Promise<void>;\n\t$input(options: vscode.InputBoxOptions | undefined, validateInput: boolean, token: CancellationToken): Promise<string>;\n\t$createOrUpdate(params: TransferQuickInput): Promise<void>;\n\t$dispose(id: number): Promise<void>;\n}\n\nexport interface MainThreadStatusBarShape extends IDisposable {\n\t$setEntry(id: number, extensionId: ExtensionIdentifier | undefined, text: string, tooltip: string, command: string, color: string | ThemeColor, alignment: MainThreadStatusBarAlignment, priority: number | undefined): void;\n\t$dispose(id: number): void;\n}\n\nexport interface MainThreadStorageShape extends IDisposable {\n\t$getValue<T>(shared: boolean, key: string): Promise<T | undefined>;\n\t$setValue(shared: boolean, key: string, value: object): Promise<void>;\n}\n\nexport interface MainThreadTelemetryShape extends IDisposable {\n\t$publicLog(eventName: string, data?: any): void;\n}\n\nexport type WebviewPanelHandle = string;\n\nexport type WebviewInsetHandle = number;\n\nexport interface WebviewPanelShowOptions {\n\treadonly viewColumn?: EditorViewColumn;\n\treadonly preserveFocus?: boolean;\n}\n\nexport interface MainThreadWebviewsShape extends IDisposable {\n\t$createWebviewPanel(handle: WebviewPanelHandle, viewType: string, title: string, showOptions: WebviewPanelShowOptions, options: vscode.WebviewPanelOptions & vscode.WebviewOptions, extensionId: ExtensionIdentifier, extensionLocation: UriComponents): void;\n\t$createWebviewCodeInset(handle: WebviewInsetHandle, symbolId: string, options: vscode.WebviewOptions, extensionLocation: UriComponents | undefined): void;\n\t$disposeWebview(handle: WebviewPanelHandle): void;\n\t$reveal(handle: WebviewPanelHandle, showOptions: WebviewPanelShowOptions): void;\n\t$setTitle(handle: WebviewPanelHandle, value: string): void;\n\t$setIconPath(handle: WebviewPanelHandle, value: { light: UriComponents, dark: UriComponents } | undefined): void;\n\n\t$setHtml(handle: WebviewPanelHandle | WebviewInsetHandle, value: string): void;\n\t$setOptions(handle: WebviewPanelHandle | WebviewInsetHandle, options: vscode.WebviewOptions): void;\n\t$postMessage(handle: WebviewPanelHandle | WebviewInsetHandle, value: any): Promise<boolean>;\n\n\t$registerSerializer(viewType: string): void;\n\t$unregisterSerializer(viewType: string): void;\n}\n\nexport interface WebviewPanelViewState {\n\treadonly active: boolean;\n\treadonly visible: boolean;\n\treadonly position: EditorViewColumn;\n}\n\nexport interface ExtHostWebviewsShape {\n\t$onMessage(handle: WebviewPanelHandle, message: any): void;\n\t$onDidChangeWebviewPanelViewState(handle: WebviewPanelHandle, newState: WebviewPanelViewState): void;\n\t$onDidDisposeWebviewPanel(handle: WebviewPanelHandle): Promise<void>;\n\t$deserializeWebviewPanel(newWebviewHandle: WebviewPanelHandle, viewType: string, title: string, state: any, position: EditorViewColumn, options: vscode.WebviewOptions): Promise<void>;\n}\n\nexport interface MainThreadUrlsShape extends IDisposable {\n\t$registerUriHandler(handle: number, extensionId: ExtensionIdentifier): Promise<void>;\n\t$unregisterUriHandler(handle: number): Promise<void>;\n}\n\nexport interface ExtHostUrlsShape {\n\t$handleExternalUri(handle: number, uri: UriComponents): Promise<void>;\n}\n\nexport interface MainThreadWorkspaceShape extends IDisposable {\n\t$startFileSearch(includePattern: string | undefined, includeFolder: UriComponents | undefined, excludePatternOrDisregardExcludes: string | false | undefined, maxResults: number | undefined, token: CancellationToken): Promise<UriComponents[] | undefined>;\n\t$startTextSearch(query: IPatternInfo, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<vscode.TextSearchComplete>;\n\t$checkExists(includes: string[], token: CancellationToken): Promise<boolean>;\n\t$saveAll(includeUntitled?: boolean): Promise<boolean>;\n\t$updateWorkspaceFolders(extensionName: string, index: number, deleteCount: number, workspaceFoldersToAdd: { uri: UriComponents, name?: string }[]): Promise<void>;\n\t$resolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport interface MainThreadFileSystemShape extends IDisposable {\n\t$registerFileSystemProvider(handle: number, scheme: string, capabilities: FileSystemProviderCapabilities): void;\n\t$unregisterProvider(handle: number): void;\n\t$registerResourceLabelFormatter(handle: number, formatter: ResourceLabelFormatter): void;\n\t$unregisterResourceLabelFormatter(handle: number): void;\n\t$onFileSystemChange(handle: number, resource: IFileChangeDto[]): void;\n}\n\nexport interface MainThreadSearchShape extends IDisposable {\n\t$registerFileSearchProvider(handle: number, scheme: string): void;\n\t$registerTextSearchProvider(handle: number, scheme: string): void;\n\t$unregisterProvider(handle: number): void;\n\t$handleFileMatch(handle: number, session: number, data: UriComponents[]): void;\n\t$handleTextMatch(handle: number, session: number, data: IRawFileMatch2[]): void;\n\t$handleTelemetry(eventName: string, data: any): void;\n}\n\nexport interface MainThreadTaskShape extends IDisposable {\n\t$createTaskId(task: TaskDTO): Promise<string>;\n\t$registerTaskProvider(handle: number): Promise<void>;\n\t$unregisterTaskProvider(handle: number): Promise<void>;\n\t$fetchTasks(filter?: TaskFilterDTO): Promise<TaskDTO[]>;\n\t$executeTask(task: TaskHandleDTO | TaskDTO): Promise<TaskExecutionDTO>;\n\t$terminateTask(id: string): Promise<void>;\n\t$registerTaskSystem(scheme: string, info: TaskSystemInfoDTO): void;\n\t$customExecutionComplete(id: string, result?: number): Promise<void>;\n}\n\nexport interface MainThreadExtensionServiceShape extends IDisposable {\n\t$localShowMessage(severity: Severity, msg: string): void;\n\t$activateExtension(extensionId: ExtensionIdentifier, activationEvent: string | null): Promise<void>;\n\t$onWillActivateExtension(extensionId: ExtensionIdentifier): void;\n\t$onDidActivateExtension(extensionId: ExtensionIdentifier, startup: boolean, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number, activationEvent: string | null): void;\n\t$onExtensionActivationFailed(extensionId: ExtensionIdentifier): void;\n\t$onExtensionRuntimeError(extensionId: ExtensionIdentifier, error: SerializedError): void;\n\t$addMessage(extensionId: ExtensionIdentifier, severity: Severity, message: string): void;\n}\n\nexport interface SCMProviderFeatures {\n\thasQuickDiffProvider?: boolean;\n\tcount?: number;\n\tcommitTemplate?: string;\n\tacceptInputCommand?: modes.Command;\n\tstatusBarCommands?: CommandDto[];\n}\n\nexport interface SCMGroupFeatures {\n\thideWhenEmpty?: boolean;\n}\n\nexport type SCMRawResource = [\n\tnumber /*handle*/,\n\tUriComponents /*resourceUri*/,\n\tstring[] /*icons: light, dark*/,\n\tstring /*tooltip*/,\n\tboolean /*strike through*/,\n\tboolean /*faded*/,\n\n\tstring | undefined /*source*/,\n\tstring | undefined /*letter*/,\n\tThemeColor | null /*color*/\n];\n\nexport type SCMRawResourceSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tSCMRawResource[]\n];\n\nexport type SCMRawResourceSplices = [\n\tnumber, /*handle*/\n\tSCMRawResourceSplice[]\n];\n\nexport interface MainThreadSCMShape extends IDisposable {\n\t$registerSourceControl(handle: number, id: string, label: string, rootUri: UriComponents | undefined): void;\n\t$updateSourceControl(handle: number, features: SCMProviderFeatures): void;\n\t$unregisterSourceControl(handle: number): void;\n\n\t$registerGroup(sourceControlHandle: number, handle: number, id: string, label: string): void;\n\t$updateGroup(sourceControlHandle: number, handle: number, features: SCMGroupFeatures): void;\n\t$updateGroupLabel(sourceControlHandle: number, handle: number, label: string): void;\n\t$unregisterGroup(sourceControlHandle: number, handle: number): void;\n\n\t$spliceResourceStates(sourceControlHandle: number, splices: SCMRawResourceSplices[]): void;\n\n\t$setInputBoxValue(sourceControlHandle: number, value: string): void;\n\t$setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): void;\n\t$setInputBoxVisibility(sourceControlHandle: number, visible: boolean): void;\n\t$setValidationProviderIsEnabled(sourceControlHandle: number, enabled: boolean): void;\n}\n\nexport type DebugSessionUUID = string;\n\nexport interface MainThreadDebugServiceShape extends IDisposable {\n\t$registerDebugTypes(debugTypes: string[]): void;\n\t$sessionCached(sessionID: string): void;\n\t$acceptDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$acceptDAError(handle: number, name: string, message: string, stack: string): void;\n\t$acceptDAExit(handle: number, code: number, signal: string): void;\n\t$registerDebugConfigurationProvider(type: string, hasProvideMethod: boolean, hasResolveMethod: boolean, hasProvideDaMethod: boolean, handle: number): Promise<void>;\n\t$registerDebugAdapterDescriptorFactory(type: string, handle: number): Promise<void>;\n\t$registerDebugAdapterTrackerFactory(type: string, handle: number);\n\t$unregisterDebugConfigurationProvider(handle: number): void;\n\t$unregisterDebugAdapterDescriptorFactory(handle: number): void;\n\t$unregisterDebugAdapterTrackerFactory(handle: number): void;\n\t$startDebugging(folder: UriComponents | undefined, nameOrConfig: string | vscode.DebugConfiguration): Promise<boolean>;\n\t$customDebugAdapterRequest(id: DebugSessionUUID, command: string, args: any): Promise<any>;\n\t$appendDebugConsole(value: string): void;\n\t$startBreakpointEvents(): void;\n\t$registerBreakpoints(breakpoints: Array<ISourceMultiBreakpointDto | IFunctionBreakpointDto>): Promise<void>;\n\t$unregisterBreakpoints(breakpointIds: string[], functionBreakpointIds: string[]): Promise<void>;\n}\n\nexport interface MainThreadWindowShape extends IDisposable {\n\t$getWindowVisibility(): Promise<boolean>;\n\t$openUri(uri: UriComponents): Promise<boolean>;\n}\n\n// -- extension host\n\nexport interface ExtHostCommandsShape {\n\t$executeContributedCommand<T>(id: string, ...args: any[]): Promise<T>;\n\t$getContributedCommandHandlerDescriptions(): Promise<{ [id: string]: string | ICommandHandlerDescription }>;\n}\n\nexport interface ExtHostConfigurationShape {\n\t$initializeConfiguration(data: IConfigurationInitData): void;\n\t$acceptConfigurationChanged(data: IConfigurationInitData, eventData: IWorkspaceConfigurationChangeEventData): void;\n}\n\nexport interface ExtHostDiagnosticsShape {\n\n}\n\nexport interface ExtHostDocumentContentProvidersShape {\n\t$provideTextDocumentContent(handle: number, uri: UriComponents): Promise<string | null | undefined>;\n}\n\nexport interface IModelAddedData {\n\turi: UriComponents;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n\tmodeId: string;\n\tisDirty: boolean;\n}\nexport interface ExtHostDocumentsShape {\n\t$acceptModelModeChanged(strURL: UriComponents, oldModeId: string, newModeId: string): void;\n\t$acceptModelSaved(strURL: UriComponents): void;\n\t$acceptDirtyStateChanged(strURL: UriComponents, isDirty: boolean): void;\n\t$acceptModelChanged(strURL: UriComponents, e: IModelChangedEvent, isDirty: boolean): void;\n}\n\nexport interface ExtHostDocumentSaveParticipantShape {\n\t$participateInSave(resource: UriComponents, reason: SaveReason): Promise<boolean[]>;\n}\n\nexport interface ITextEditorAddData {\n\tid: string;\n\tdocumentUri: UriComponents;\n\toptions: IResolvedTextEditorConfiguration;\n\tselections: ISelection[];\n\tvisibleRanges: IRange[];\n\teditorPosition: EditorViewColumn | undefined;\n}\nexport interface ITextEditorPositionData {\n\t[id: string]: EditorViewColumn;\n}\nexport interface IEditorPropertiesChangeData {\n\toptions: IResolvedTextEditorConfiguration | null;\n\tselections: ISelectionChangeEvent | null;\n\tvisibleRanges: IRange[] | null;\n}\nexport interface ISelectionChangeEvent {\n\tselections: Selection[];\n\tsource?: string;\n}\n\nexport interface ExtHostEditorsShape {\n\t$acceptEditorPropertiesChanged(id: string, props: IEditorPropertiesChangeData): void;\n\t$acceptEditorPositionData(data: ITextEditorPositionData): void;\n}\n\nexport interface IDocumentsAndEditorsDelta {\n\tremovedDocuments?: UriComponents[];\n\taddedDocuments?: IModelAddedData[];\n\tremovedEditors?: string[];\n\taddedEditors?: ITextEditorAddData[];\n\tnewActiveEditor?: string | null;\n}\n\nexport interface ExtHostDocumentsAndEditorsShape {\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void;\n}\n\nexport interface ExtHostTreeViewsShape {\n\t$getChildren(treeViewId: string, treeItemHandle?: string): Promise<ITreeItem[]>;\n\t$setExpanded(treeViewId: string, treeItemHandle: string, expanded: boolean): void;\n\t$setSelection(treeViewId: string, treeItemHandles: string[]): void;\n\t$setVisible(treeViewId: string, visible: boolean): void;\n}\n\nexport interface ExtHostWorkspaceShape {\n\t$initializeWorkspace(workspace: IWorkspaceData | null): void;\n\t$acceptWorkspaceData(workspace: IWorkspaceData | null): void;\n\t$handleTextSearchResult(result: IRawFileMatch2, requestId: number): void;\n}\n\nexport interface ExtHostFileSystemShape {\n\t$stat(handle: number, resource: UriComponents): Promise<IStat>;\n\t$readdir(handle: number, resource: UriComponents): Promise<[string, FileType][]>;\n\t$readFile(handle: number, resource: UriComponents): Promise<Buffer>;\n\t$writeFile(handle: number, resource: UriComponents, content: Buffer, opts: FileWriteOptions): Promise<void>;\n\t$rename(handle: number, resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void>;\n\t$copy(handle: number, resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void>;\n\t$mkdir(handle: number, resource: UriComponents): Promise<void>;\n\t$delete(handle: number, resource: UriComponents, opts: FileDeleteOptions): Promise<void>;\n\t$watch(handle: number, session: number, resource: UriComponents, opts: IWatchOptions): void;\n\t$unwatch(handle: number, session: number): void;\n\t$open(handle: number, resource: UriComponents, opts: FileOpenOptions): Promise<number>;\n\t$close(handle: number, fd: number): Promise<void>;\n\t$read(handle: number, fd: number, pos: number, length: number): Promise<Buffer>;\n\t$write(handle: number, fd: number, pos: number, data: Buffer): Promise<number>;\n}\n\nexport interface ExtHostSearchShape {\n\t$provideFileSearchResults(handle: number, session: number, query: IRawQuery, token: CancellationToken): Promise<ISearchCompleteStats>;\n\t$provideTextSearchResults(handle: number, session: number, query: IRawTextQuery, token: CancellationToken): Promise<ISearchCompleteStats>;\n\t$clearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface ExtHostExtensionServiceShape {\n\t$resolveAuthority(remoteAuthority: string): Promise<ResolvedAuthority>;\n\t$startExtensionHost(enabledExtensionIds: ExtensionIdentifier[]): Promise<void>;\n\t$activateByEvent(activationEvent: string): Promise<void>;\n\t$activate(extensionId: ExtensionIdentifier, activationEvent: string): Promise<boolean>;\n\n\t$deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): Promise<void>;\n\n\t$test_latency(n: number): Promise<number>;\n\t$test_up(b: Buffer): Promise<number>;\n\t$test_down(size: number): Promise<Buffer>;\n}\n\nexport interface FileSystemEvents {\n\tcreated: UriComponents[];\n\tchanged: UriComponents[];\n\tdeleted: UriComponents[];\n}\nexport interface ExtHostFileSystemEventServiceShape {\n\t$onFileEvent(events: FileSystemEvents): void;\n\t$onFileRename(oldUri: UriComponents, newUri: UriComponents): void;\n\t$onWillRename(oldUri: UriComponents, newUri: UriComponents): Promise<any>;\n}\n\nexport interface ObjectIdentifier {\n\t$ident?: number;\n}\n\nexport namespace ObjectIdentifier {\n\texport const name = '$ident';\n\texport function mixin<T>(obj: T, id: number): T & ObjectIdentifier {\n\t\tObject.defineProperty(obj, name, { value: id, enumerable: true });\n\t\treturn <T & ObjectIdentifier>obj;\n\t}\n\texport function of(obj: any): number {\n\t\treturn obj[name];\n\t}\n}\n\nexport interface ExtHostHeapServiceShape {\n\t$onGarbageCollection(ids: number[]): void;\n}\nexport interface IRawColorInfo {\n\tcolor: [number, number, number, number];\n\trange: IRange;\n}\n\nexport class IdObject {\n\t_id?: number;\n\tprivate static _n = 0;\n\tstatic mixin<T extends object>(object: T): T & IdObject {\n\t\t(<any>object)._id = IdObject._n++;\n\t\treturn <any>object;\n\t}\n}\n\nexport interface SuggestionDto extends modes.CompletionItem {\n\t_id: number;\n\t_parentId: number;\n}\n\nexport interface SuggestResultDto extends IdObject {\n\tsuggestions: SuggestionDto[];\n\tincomplete?: boolean;\n}\n\nexport interface LocationDto {\n\turi: UriComponents;\n\trange: IRange;\n}\n\nexport interface DefinitionLinkDto {\n\toriginSelectionRange?: IRange;\n\turi: UriComponents;\n\trange: IRange;\n\ttargetSelectionRange?: IRange;\n}\n\nexport interface WorkspaceSymbolDto extends IdObject {\n\tname: string;\n\tcontainerName?: string;\n\tkind: modes.SymbolKind;\n\tlocation: LocationDto;\n}\n\nexport interface WorkspaceSymbolsDto extends IdObject {\n\tsymbols: WorkspaceSymbolDto[];\n}\n\nexport interface ResourceFileEditDto {\n\toldUri?: UriComponents;\n\tnewUri?: UriComponents;\n\toptions?: IFileOperationOptions;\n}\n\nexport interface ResourceTextEditDto {\n\tresource: UriComponents;\n\tmodelVersionId?: number;\n\tedits: modes.TextEdit[];\n}\n\nexport interface WorkspaceEditDto {\n\tedits: Array<ResourceFileEditDto | ResourceTextEditDto>;\n\n\t// todo@joh reject should go into rename\n\trejectReason?: string;\n}\n\nexport function reviveWorkspaceEditDto(data: WorkspaceEditDto | undefined): modes.WorkspaceEdit {\n\tif (data && data.edits) {\n\t\tfor (const edit of data.edits) {\n\t\t\tif (typeof (<ResourceTextEditDto>edit).resource === 'object') {\n\t\t\t\t(<ResourceTextEditDto>edit).resource = URI.revive((<ResourceTextEditDto>edit).resource);\n\t\t\t} else {\n\t\t\t\t(<ResourceFileEditDto>edit).newUri = URI.revive((<ResourceFileEditDto>edit).newUri);\n\t\t\t\t(<ResourceFileEditDto>edit).oldUri = URI.revive((<ResourceFileEditDto>edit).oldUri);\n\t\t\t}\n\t\t}\n\t}\n\treturn <modes.WorkspaceEdit>data;\n}\n\nexport type CommandDto = ObjectIdentifier & modes.Command;\n\nexport interface CodeActionDto {\n\ttitle: string;\n\tedit?: WorkspaceEditDto;\n\tdiagnostics?: IMarkerData[];\n\tcommand?: CommandDto;\n\tkind?: string;\n\tisPreferred?: boolean;\n}\n\nexport interface LinkDto extends ObjectIdentifier {\n\trange: IRange;\n\turl?: string | UriComponents;\n}\n\nexport interface CodeLensDto extends ObjectIdentifier {\n\trange: IRange;\n\tid?: string;\n\tcommand?: CommandDto;\n}\n\nexport type CodeInsetDto = ObjectIdentifier & codeInset.ICodeInsetSymbol;\n\nexport interface ExtHostLanguageFeaturesShape {\n\t$provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined>;\n\t$provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<CodeLensDto[]>;\n\t$resolveCodeLens(handle: number, resource: UriComponents, symbol: CodeLensDto, token: CancellationToken): Promise<CodeLensDto | undefined>;\n\t$provideCodeInsets(handle: number, resource: UriComponents, token: CancellationToken): Promise<CodeInsetDto[] | undefined>;\n\t$resolveCodeInset(handle: number, resource: UriComponents, symbol: CodeInsetDto, token: CancellationToken): Promise<CodeInsetDto>;\n\t$provideDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideDeclaration(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideImplementation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideTypeDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideHover(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.Hover | undefined>;\n\t$provideDocumentHighlights(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined>;\n\t$provideReferences(handle: number, resource: UriComponents, position: IPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<LocationDto[] | undefined>;\n\t$provideCodeActions(handle: number, resource: UriComponents, rangeOrSelection: IRange | ISelection, context: modes.CodeActionContext, token: CancellationToken): Promise<CodeActionDto[] | undefined>;\n\t$provideDocumentFormattingEdits(handle: number, resource: UriComponents, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: IRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideOnTypeFormattingEdits(handle: number, resource: UriComponents, position: IPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideWorkspaceSymbols(handle: number, search: string, token: CancellationToken): Promise<WorkspaceSymbolsDto>;\n\t$resolveWorkspaceSymbol(handle: number, symbol: WorkspaceSymbolDto, token: CancellationToken): Promise<WorkspaceSymbolDto | undefined>;\n\t$releaseWorkspaceSymbols(handle: number, id: number): void;\n\t$provideRenameEdits(handle: number, resource: UriComponents, position: IPosition, newName: string, token: CancellationToken): Promise<WorkspaceEditDto | undefined>;\n\t$resolveRenameLocation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.RenameLocation | undefined>;\n\t$provideCompletionItems(handle: number, resource: UriComponents, position: IPosition, context: modes.CompletionContext, token: CancellationToken): Promise<SuggestResultDto | undefined>;\n\t$resolveCompletionItem(handle: number, resource: UriComponents, position: IPosition, suggestion: modes.CompletionItem, token: CancellationToken): Promise<modes.CompletionItem>;\n\t$releaseCompletionItems(handle: number, id: number): void;\n\t$provideSignatureHelp(handle: number, resource: UriComponents, position: IPosition, context: modes.SignatureHelpContext, token: CancellationToken): Promise<modes.SignatureHelp | undefined>;\n\t$provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<LinkDto[] | undefined>;\n\t$resolveDocumentLink(handle: number, link: LinkDto, token: CancellationToken): Promise<LinkDto | undefined>;\n\t$provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): Promise<IRawColorInfo[]>;\n\t$provideColorPresentations(handle: number, resource: UriComponents, colorInfo: IRawColorInfo, token: CancellationToken): Promise<modes.IColorPresentation[] | undefined>;\n\t$provideFoldingRanges(handle: number, resource: UriComponents, context: modes.FoldingContext, token: CancellationToken): Promise<modes.FoldingRange[] | undefined>;\n\t$provideSelectionRanges(handle: number, resource: UriComponents, positions: IPosition[], token: CancellationToken): Promise<modes.SelectionRange[][]>;\n}\n\nexport interface ExtHostQuickOpenShape {\n\t$onItemSelected(handle: number): void;\n\t$validateInput(input: string): Promise<string | null | undefined>;\n\t$onDidChangeActive(sessionId: number, handles: number[]): void;\n\t$onDidChangeSelection(sessionId: number, handles: number[]): void;\n\t$onDidAccept(sessionId: number): void;\n\t$onDidChangeValue(sessionId: number, value: string): void;\n\t$onDidTriggerButton(sessionId: number, handle: number): void;\n\t$onDidHide(sessionId: number): void;\n}\n\nexport interface ShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: { [key: string]: string | null };\n}\n\nexport interface ExtHostTerminalServiceShape {\n\t$acceptTerminalClosed(id: number): void;\n\t$acceptTerminalOpened(id: number, name: string): void;\n\t$acceptActiveTerminalChanged(id: number | null): void;\n\t$acceptTerminalProcessId(id: number, processId: number): void;\n\t$acceptTerminalProcessData(id: number, data: string): void;\n\t$acceptTerminalRendererInput(id: number, data: string): void;\n\t$acceptTerminalTitleChange(id: number, name: string): void;\n\t$acceptTerminalDimensions(id: number, cols: number, rows: number): void;\n\t$createProcess(id: number, shellLaunchConfig: ShellLaunchConfigDto, activeWorkspaceRootUri: UriComponents, cols: number, rows: number): void;\n\t$acceptProcessInput(id: number, data: string): void;\n\t$acceptProcessResize(id: number, cols: number, rows: number): void;\n\t$acceptProcessShutdown(id: number, immediate: boolean): void;\n\t$acceptProcessRequestInitialCwd(id: number): void;\n\t$acceptProcessRequestCwd(id: number): void;\n}\n\nexport interface ExtHostSCMShape {\n\t$provideOriginalResource(sourceControlHandle: number, uri: UriComponents, token: CancellationToken): Promise<UriComponents | null>;\n\t$onInputBoxValueChange(sourceControlHandle: number, value: string): void;\n\t$executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number): Promise<void>;\n\t$validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined>;\n\t$setSelectedSourceControls(selectedSourceControlHandles: number[]): Promise<void>;\n}\n\nexport interface ExtHostTaskShape {\n\t$provideTasks(handle: number, validTypes: { [key: string]: boolean; }): Thenable<TaskSetDTO>;\n\t$onDidStartTask(execution: TaskExecutionDTO, terminalId: number): void;\n\t$onDidStartTaskProcess(value: TaskProcessStartedDTO): void;\n\t$onDidEndTaskProcess(value: TaskProcessEndedDTO): void;\n\t$OnDidEndTask(execution: TaskExecutionDTO): void;\n\t$resolveVariables(workspaceFolder: UriComponents, toResolve: { process?: { name: string; cwd?: string }, variables: string[] }): Promise<{ process?: string; variables: { [key: string]: string } }>;\n}\n\nexport interface IBreakpointDto {\n\ttype: string;\n\tid?: string;\n\tenabled: boolean;\n\tcondition?: string;\n\thitCondition?: string;\n\tlogMessage?: string;\n}\n\nexport interface IFunctionBreakpointDto extends IBreakpointDto {\n\ttype: 'function';\n\tfunctionName: string;\n}\n\nexport interface ISourceBreakpointDto extends IBreakpointDto {\n\ttype: 'source';\n\turi: UriComponents;\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface IBreakpointsDeltaDto {\n\tadded?: Array<ISourceBreakpointDto | IFunctionBreakpointDto>;\n\tremoved?: string[];\n\tchanged?: Array<ISourceBreakpointDto | IFunctionBreakpointDto>;\n}\n\nexport interface ISourceMultiBreakpointDto {\n\ttype: 'sourceMulti';\n\turi: UriComponents;\n\tlines: {\n\t\tid: string;\n\t\tenabled: boolean;\n\t\tcondition?: string;\n\t\thitCondition?: string;\n\t\tlogMessage?: string;\n\t\tline: number;\n\t\tcharacter: number;\n\t}[];\n}\n\nexport interface IDebugSessionFullDto {\n\tid: DebugSessionUUID;\n\ttype: string;\n\tname: string;\n\tfolderUri: UriComponents | undefined;\n\tconfiguration: IConfig;\n}\n\nexport type IDebugSessionDto = IDebugSessionFullDto | DebugSessionUUID;\n\nexport interface ExtHostDebugServiceShape {\n\t$substituteVariables(folder: UriComponents | undefined, config: IConfig): Promise<IConfig>;\n\t$runInTerminal(args: DebugProtocol.RunInTerminalRequestArguments, config: ITerminalSettings): Promise<number | undefined>;\n\t$startDASession(handle: number, session: IDebugSessionDto): Promise<void>;\n\t$stopDASession(handle: number): Promise<void>;\n\t$sendDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$resolveDebugConfiguration(handle: number, folder: UriComponents | undefined, debugConfiguration: IConfig): Promise<IConfig>;\n\t$provideDebugConfigurations(handle: number, folder: UriComponents | undefined): Promise<IConfig[]>;\n\t$legacyDebugAdapterExecutable(handle: number, folderUri: UriComponents | undefined): Promise<IAdapterDescriptor>; // TODO@AW legacy\n\t$provideDebugAdapter(handle: number, session: IDebugSessionDto): Promise<IAdapterDescriptor>;\n\t$acceptDebugSessionStarted(session: IDebugSessionDto): void;\n\t$acceptDebugSessionTerminated(session: IDebugSessionDto): void;\n\t$acceptDebugSessionActiveChanged(session: IDebugSessionDto | undefined): void;\n\t$acceptDebugSessionCustomEvent(session: IDebugSessionDto, event: any): void;\n\t$acceptBreakpointsDelta(delta: IBreakpointsDeltaDto): void;\n}\n\n\nexport interface DecorationRequest {\n\treadonly id: number;\n\treadonly handle: number;\n\treadonly uri: UriComponents;\n}\n\nexport type DecorationData = [number, boolean, string, string, ThemeColor, string];\nexport type DecorationReply = { [id: number]: DecorationData };\n\nexport interface ExtHostDecorationsShape {\n\t$provideDecorations(requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply>;\n}\n\nexport interface ExtHostWindowShape {\n\t$onDidChangeWindowFocus(value: boolean): void;\n}\n\nexport interface ExtHostLogServiceShape {\n\t$setLevel(level: LogLevel): void;\n}\n\nexport interface ExtHostOutputServiceShape {\n\t$setVisibleChannel(channelId: string | null): void;\n}\n\nexport interface ExtHostProgressShape {\n\t$acceptProgressCanceled(handle: number): void;\n}\n\nexport interface ExtHostCommentsShape {\n\t$provideDocumentComments(handle: number, document: UriComponents): Promise<modes.CommentInfo | null>;\n\t$createNewCommentThread(handle: number, document: UriComponents, range: IRange, text: string): Promise<modes.CommentThread | null>;\n\t$onCommentWidgetInputChange(commentControllerHandle: number, input: string | undefined): Promise<number | undefined>;\n\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<IRange[] | undefined>;\n\t$provideReactionGroup(commentControllerHandle: number): Promise<modes.CommentReaction[] | undefined>;\n\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void>;\n\t$createNewCommentWidgetCallback(commentControllerHandle: number, uriComponents: UriComponents, range: IRange, token: CancellationToken): void;\n\t$replyToCommentThread(handle: number, document: UriComponents, range: IRange, commentThread: modes.CommentThread, text: string): Promise<modes.CommentThread | null>;\n\t$editComment(handle: number, document: UriComponents, comment: modes.Comment, text: string): Promise<void>;\n\t$deleteComment(handle: number, document: UriComponents, comment: modes.Comment): Promise<void>;\n\t$startDraft(handle: number, document: UriComponents): Promise<void>;\n\t$deleteDraft(handle: number, document: UriComponents): Promise<void>;\n\t$finishDraft(handle: number, document: UriComponents): Promise<void>;\n\t$addReaction(handle: number, document: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void>;\n\t$deleteReaction(handle: number, document: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void>;\n\t$provideWorkspaceComments(handle: number): Promise<modes.CommentThread[] | null>;\n}\n\nexport interface ExtHostStorageShape {\n\t$acceptValue(shared: boolean, key: string, value: object | undefined): void;\n}\n\n// --- proxy identifiers\n\nexport const MainContext = {\n\tMainThreadClipboard: createMainId<MainThreadClipboardShape>('MainThreadClipboard'),\n\tMainThreadCommands: createMainId<MainThreadCommandsShape>('MainThreadCommands'),\n\tMainThreadComments: createMainId<MainThreadCommentsShape>('MainThreadComments'),\n\tMainThreadConfiguration: createMainId<MainThreadConfigurationShape>('MainThreadConfiguration'),\n\tMainThreadConsole: createMainId<MainThreadConsoleShape>('MainThreadConsole'),\n\tMainThreadDebugService: createMainId<MainThreadDebugServiceShape>('MainThreadDebugService'),\n\tMainThreadDecorations: createMainId<MainThreadDecorationsShape>('MainThreadDecorations'),\n\tMainThreadDiagnostics: createMainId<MainThreadDiagnosticsShape>('MainThreadDiagnostics'),\n\tMainThreadDialogs: createMainId<MainThreadDiaglogsShape>('MainThreadDiaglogs'),\n\tMainThreadDocuments: createMainId<MainThreadDocumentsShape>('MainThreadDocuments'),\n\tMainThreadDocumentContentProviders: createMainId<MainThreadDocumentContentProvidersShape>('MainThreadDocumentContentProviders'),\n\tMainThreadTextEditors: createMainId<MainThreadTextEditorsShape>('MainThreadTextEditors'),\n\tMainThreadErrors: createMainId<MainThreadErrorsShape>('MainThreadErrors'),\n\tMainThreadTreeViews: createMainId<MainThreadTreeViewsShape>('MainThreadTreeViews'),\n\tMainThreadLanguageFeatures: createMainId<MainThreadLanguageFeaturesShape>('MainThreadLanguageFeatures'),\n\tMainThreadLanguages: createMainId<MainThreadLanguagesShape>('MainThreadLanguages'),\n\tMainThreadMessageService: createMainId<MainThreadMessageServiceShape>('MainThreadMessageService'),\n\tMainThreadOutputService: createMainId<MainThreadOutputServiceShape>('MainThreadOutputService'),\n\tMainThreadProgress: createMainId<MainThreadProgressShape>('MainThreadProgress'),\n\tMainThreadQuickOpen: createMainId<MainThreadQuickOpenShape>('MainThreadQuickOpen'),\n\tMainThreadStatusBar: createMainId<MainThreadStatusBarShape>('MainThreadStatusBar'),\n\tMainThreadStorage: createMainId<MainThreadStorageShape>('MainThreadStorage'),\n\tMainThreadTelemetry: createMainId<MainThreadTelemetryShape>('MainThreadTelemetry'),\n\tMainThreadTerminalService: createMainId<MainThreadTerminalServiceShape>('MainThreadTerminalService'),\n\tMainThreadWebviews: createMainId<MainThreadWebviewsShape>('MainThreadWebviews'),\n\tMainThreadUrls: createMainId<MainThreadUrlsShape>('MainThreadUrls'),\n\tMainThreadWorkspace: createMainId<MainThreadWorkspaceShape>('MainThreadWorkspace'),\n\tMainThreadFileSystem: createMainId<MainThreadFileSystemShape>('MainThreadFileSystem'),\n\tMainThreadExtensionService: createMainId<MainThreadExtensionServiceShape>('MainThreadExtensionService'),\n\tMainThreadSCM: createMainId<MainThreadSCMShape>('MainThreadSCM'),\n\tMainThreadSearch: createMainId<MainThreadSearchShape>('MainThreadSearch'),\n\tMainThreadTask: createMainId<MainThreadTaskShape>('MainThreadTask'),\n\tMainThreadWindow: createMainId<MainThreadWindowShape>('MainThreadWindow'),\n};\n\nexport const ExtHostContext = {\n\tExtHostCommands: createExtId<ExtHostCommandsShape>('ExtHostCommands'),\n\tExtHostConfiguration: createExtId<ExtHostConfigurationShape>('ExtHostConfiguration'),\n\tExtHostDiagnostics: createExtId<ExtHostDiagnosticsShape>('ExtHostDiagnostics'),\n\tExtHostDebugService: createExtId<ExtHostDebugServiceShape>('ExtHostDebugService'),\n\tExtHostDecorations: createExtId<ExtHostDecorationsShape>('ExtHostDecorations'),\n\tExtHostDocumentsAndEditors: createExtId<ExtHostDocumentsAndEditorsShape>('ExtHostDocumentsAndEditors'),\n\tExtHostDocuments: createExtId<ExtHostDocumentsShape>('ExtHostDocuments'),\n\tExtHostDocumentContentProviders: createExtId<ExtHostDocumentContentProvidersShape>('ExtHostDocumentContentProviders'),\n\tExtHostDocumentSaveParticipant: createExtId<ExtHostDocumentSaveParticipantShape>('ExtHostDocumentSaveParticipant'),\n\tExtHostEditors: createExtId<ExtHostEditorsShape>('ExtHostEditors'),\n\tExtHostTreeViews: createExtId<ExtHostTreeViewsShape>('ExtHostTreeViews'),\n\tExtHostFileSystem: createExtId<ExtHostFileSystemShape>('ExtHostFileSystem'),\n\tExtHostFileSystemEventService: createExtId<ExtHostFileSystemEventServiceShape>('ExtHostFileSystemEventService'),\n\tExtHostHeapService: createExtId<ExtHostHeapServiceShape>('ExtHostHeapMonitor'),\n\tExtHostLanguageFeatures: createExtId<ExtHostLanguageFeaturesShape>('ExtHostLanguageFeatures'),\n\tExtHostQuickOpen: createExtId<ExtHostQuickOpenShape>('ExtHostQuickOpen'),\n\tExtHostExtensionService: createExtId<ExtHostExtensionServiceShape>('ExtHostExtensionService'),\n\tExtHostLogService: createExtId<ExtHostLogServiceShape>('ExtHostLogService'),\n\tExtHostTerminalService: createExtId<ExtHostTerminalServiceShape>('ExtHostTerminalService'),\n\tExtHostSCM: createExtId<ExtHostSCMShape>('ExtHostSCM'),\n\tExtHostSearch: createExtId<ExtHostSearchShape>('ExtHostSearch'),\n\tExtHostTask: createExtId<ExtHostTaskShape>('ExtHostTask'),\n\tExtHostWorkspace: createExtId<ExtHostWorkspaceShape>('ExtHostWorkspace'),\n\tExtHostWindow: createExtId<ExtHostWindowShape>('ExtHostWindow'),\n\tExtHostWebviews: createExtId<ExtHostWebviewsShape>('ExtHostWebviews'),\n\tExtHostProgress: createMainId<ExtHostProgressShape>('ExtHostProgress'),\n\tExtHostComments: createMainId<ExtHostCommentsShape>('ExtHostComments'),\n\tExtHostStorage: createMainId<ExtHostStorageShape>('ExtHostStorage'),\n\tExtHostUrls: createExtId<ExtHostUrlsShape>('ExtHostUrls'),\n\tExtHostOutputService: createMainId<ExtHostOutputServiceShape>('ExtHostOutputService'),\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMainContext, MainContext, MainThreadClipboardShape } from 'vs/workbench/api/node/extHost.protocol';\nimport * as vscode from 'vscode';\n\nexport class ExtHostClipboard implements vscode.Clipboard {\n\n\tprivate readonly _proxy: MainThreadClipboardShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadClipboard);\n\t}\n\n\treadText(): Promise<string> {\n\t\treturn this._proxy.$readText();\n\t}\n\n\twriteText(value: string): Promise<void> {\n\t\treturn this._proxy.$writeText(value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { validateConstraint } from 'vs/base/common/types';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport * as extHostTypes from 'vs/workbench/api/node/extHostTypes';\nimport * as extHostTypeConverter from 'vs/workbench/api/node/extHostTypeConverters';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { MainContext, MainThreadCommandsShape, ExtHostCommandsShape, ObjectIdentifier, IMainContext, CommandDto } from './extHost.protocol';\nimport { ExtHostHeapService } from 'vs/workbench/api/node/extHostHeapService';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport * as modes from 'vs/editor/common/modes';\nimport * as vscode from 'vscode';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { revive } from 'vs/base/common/marshalling';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Position } from 'vs/editor/common/core/position';\nimport { URI } from 'vs/base/common/uri';\n\ninterface CommandHandler {\n\tcallback: Function;\n\tthisArg: any;\n\tdescription?: ICommandHandlerDescription;\n}\n\nexport interface ArgumentProcessor {\n\tprocessArgument(arg: any): any;\n}\n\nexport class ExtHostCommands implements ExtHostCommandsShape {\n\n\tprivate readonly _commands = new Map<string, CommandHandler>();\n\tprivate readonly _proxy: MainThreadCommandsShape;\n\tprivate readonly _converter: CommandsConverter;\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _argumentProcessors: ArgumentProcessor[];\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\theapService: ExtHostHeapService,\n\t\tlogService: ILogService\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadCommands);\n\t\tthis._logService = logService;\n\t\tthis._converter = new CommandsConverter(this, heapService);\n\t\tthis._argumentProcessors = [\n\t\t\t{\n\t\t\t\tprocessArgument(a) {\n\t\t\t\t\t// URI, Regex\n\t\t\t\t\treturn revive(a, 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tprocessArgument(arg) {\n\t\t\t\t\treturn cloneAndChange(arg, function (obj) {\n\t\t\t\t\t\t// Reverse of https://github.com/Microsoft/vscode/blob/1f28c5fc681f4c01226460b6d1c7e91b8acb4a5b/src/vs/workbench/api/node/extHostCommands.ts#L112-L127\n\t\t\t\t\t\tif (Range.isIRange(obj)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.Range.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Position.isIPosition(obj)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.Position.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Range.isIRange((obj as modes.Location).range) && URI.isUri((obj as modes.Location).uri)) {\n\t\t\t\t\t\t\treturn extHostTypeConverter.location.to(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!Array.isArray(obj)) {\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\tget converter(): CommandsConverter {\n\t\treturn this._converter;\n\t}\n\n\tregisterArgumentProcessor(processor: ArgumentProcessor): void {\n\t\tthis._argumentProcessors.push(processor);\n\t}\n\n\tregisterCommand(global: boolean, id: string, callback: <T>(...args: any[]) => T | Thenable<T>, thisArg?: any, description?: ICommandHandlerDescription): extHostTypes.Disposable {\n\t\tthis._logService.trace('ExtHostCommands#registerCommand', id);\n\n\t\tif (!id.trim().length) {\n\t\t\tthrow new Error('invalid id');\n\t\t}\n\n\t\tif (this._commands.has(id)) {\n\t\t\tthrow new Error(`command '${id}' already exists`);\n\t\t}\n\n\t\tthis._commands.set(id, { callback, thisArg, description });\n\t\tif (global) {\n\t\t\tthis._proxy.$registerCommand(id);\n\t\t}\n\n\t\treturn new extHostTypes.Disposable(() => {\n\t\t\tif (this._commands.delete(id)) {\n\t\t\t\tif (global) {\n\t\t\t\t\tthis._proxy.$unregisterCommand(id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\texecuteCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tthis._logService.trace('ExtHostCommands#executeCommand', id);\n\n\t\tif (this._commands.has(id)) {\n\t\t\t// we stay inside the extension host and support\n\t\t\t// to pass any kind of parameters around\n\t\t\treturn this._executeContributedCommand<T>(id, args);\n\n\t\t} else {\n\t\t\t// automagically convert some argument types\n\n\t\t\targs = cloneAndChange(args, function (value) {\n\t\t\t\tif (value instanceof extHostTypes.Position) {\n\t\t\t\t\treturn extHostTypeConverter.Position.from(value);\n\t\t\t\t}\n\t\t\t\tif (value instanceof extHostTypes.Range) {\n\t\t\t\t\treturn extHostTypeConverter.Range.from(value);\n\t\t\t\t}\n\t\t\t\tif (value instanceof extHostTypes.Location) {\n\t\t\t\t\treturn extHostTypeConverter.location.from(value);\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn this._proxy.$executeCommand<T>(id, args).then(result => revive(result, 0));\n\t\t}\n\t}\n\n\tprivate _executeContributedCommand<T>(id: string, args: any[]): Promise<T> {\n\t\tconst command = this._commands.get(id);\n\t\tif (!command) {\n\t\t\tthrow new Error('Unknown command');\n\t\t}\n\t\tlet { callback, thisArg, description } = command;\n\t\tif (description) {\n\t\t\tfor (let i = 0; i < description.args.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateConstraint(args[i], description.args[i].constraint);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn Promise.reject(new Error(`Running the contributed command:'${id}' failed. Illegal argument '${description.args[i].name}' - ${description.args[i].description}`));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = callback.apply(thisArg, args);\n\t\t\treturn Promise.resolve(result);\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err, id);\n\t\t\treturn Promise.reject(new Error(`Running the contributed command:'${id}' failed.`));\n\t\t}\n\t}\n\n\t$executeContributedCommand<T>(id: string, ...args: any[]): Promise<T> {\n\t\tthis._logService.trace('ExtHostCommands#$executeContributedCommand', id);\n\n\t\tif (!this._commands.has(id)) {\n\t\t\treturn Promise.reject(new Error(`Contributed command '${id}' does not exist.`));\n\t\t} else {\n\t\t\targs = args.map(arg => this._argumentProcessors.reduce((r, p) => p.processArgument(r), arg));\n\t\t\treturn this._executeContributedCommand(id, args);\n\t\t}\n\t}\n\n\tgetCommands(filterUnderscoreCommands: boolean = false): Promise<string[]> {\n\t\tthis._logService.trace('ExtHostCommands#getCommands', filterUnderscoreCommands);\n\n\t\treturn this._proxy.$getCommands().then(result => {\n\t\t\tif (filterUnderscoreCommands) {\n\t\t\t\tresult = result.filter(command => command[0] !== '_');\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t$getContributedCommandHandlerDescriptions(): Promise<{ [id: string]: string | ICommandHandlerDescription }> {\n\t\tconst result: { [id: string]: string | ICommandHandlerDescription } = Object.create(null);\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tlet { description } = command;\n\t\t\tif (description) {\n\t\t\t\tresult[id] = description;\n\t\t\t}\n\t\t});\n\t\treturn Promise.resolve(result);\n\t}\n}\n\n\nexport class CommandsConverter {\n\n\tprivate readonly _delegatingCommandId: string;\n\tprivate _commands: ExtHostCommands;\n\tprivate _heap: ExtHostHeapService;\n\n\t// --- conversion between internal and api commands\n\tconstructor(commands: ExtHostCommands, heap: ExtHostHeapService) {\n\t\tthis._delegatingCommandId = `_internal_command_delegation_${Date.now()}`;\n\t\tthis._commands = commands;\n\t\tthis._heap = heap;\n\t\tthis._commands.registerCommand(true, this._delegatingCommandId, this._executeConvertedCommand, this);\n\t}\n\n\ttoInternal(command: vscode.Command): CommandDto;\n\ttoInternal(command: undefined): undefined;\n\ttoInternal(command: vscode.Command | undefined): CommandDto | undefined;\n\ttoInternal(command: vscode.Command | undefined): CommandDto | undefined {\n\n\t\tif (!command) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result: CommandDto = {\n\t\t\t$ident: undefined,\n\t\t\tid: command.command,\n\t\t\ttitle: command.title,\n\t\t};\n\n\t\tif (command.command && isNonEmptyArray(command.arguments)) {\n\t\t\t// we have a contributed command with arguments. that\n\t\t\t// means we don't want to send the arguments around\n\n\t\t\tconst id = this._heap.keep(command);\n\t\t\tresult.$ident = id;\n\n\t\t\tresult.id = this._delegatingCommandId;\n\t\t\tresult.arguments = [id];\n\t\t}\n\n\t\tif (command.tooltip) {\n\t\t\tresult.tooltip = command.tooltip;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfromInternal(command: modes.Command): vscode.Command {\n\n\t\tconst id = ObjectIdentifier.of(command);\n\t\tif (typeof id === 'number') {\n\t\t\treturn this._heap.get<vscode.Command>(id);\n\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcommand: command.id,\n\t\t\t\ttitle: command.title,\n\t\t\t\targuments: command.arguments\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate _executeConvertedCommand<R>(...args: any[]): Promise<R> {\n\t\tconst actualCmd = this._heap.get<vscode.Command>(args[0]);\n\t\treturn this._commands.executeCommand(actualCmd.command, ...(actualCmd.arguments || []));\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asPromise } from 'vs/base/common/async';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as modes from 'vs/editor/common/modes';\nimport { ExtHostDocuments } from 'vs/workbench/api/node/extHostDocuments';\nimport * as extHostTypeConverter from 'vs/workbench/api/node/extHostTypeConverters';\nimport * as types from 'vs/workbench/api/node/extHostTypes';\nimport * as vscode from 'vscode';\nimport { ExtHostCommentsShape, IMainContext, MainContext, MainThreadCommentsShape } from './extHost.protocol';\nimport { CommandsConverter, ExtHostCommands } from './extHostCommands';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { Event, Emitter } from 'vs/base/common/event';\n\ninterface HandlerData<T> {\n\n\textensionId: ExtensionIdentifier;\n\tprovider: T;\n}\n\ntype ProviderHandle = number;\n\nexport class ExtHostComments implements ExtHostCommentsShape {\n\tprivate static handlePool = 0;\n\n\tprivate _proxy: MainThreadCommentsShape;\n\n\tprivate _commentControllers: Map<ProviderHandle, ExtHostCommentController> = new Map<ProviderHandle, ExtHostCommentController>();\n\n\tprivate _commentControllersByExtension: Map<string, ExtHostCommentController[]> = new Map<string, ExtHostCommentController[]>();\n\n\tprivate _documentProviders = new Map<number, HandlerData<vscode.DocumentCommentProvider>>();\n\tprivate _workspaceProviders = new Map<number, HandlerData<vscode.WorkspaceCommentProvider>>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadComments);\n\n\t\t_commands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 6) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.handle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn commentController;\n\t\t\t\t} else if (arg && arg.$mid === 7) {\n\t\t\t\t\tconst commentController = this._commentControllers.get(arg.commentControlHandle);\n\n\t\t\t\t\tif (!commentController) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst commentThread = commentController.getCommentThread(arg.commentThreadHandle);\n\n\t\t\t\t\tif (!commentThread) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn commentThread;\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateCommentController(extension: IExtensionDescription, id: string, label: string): vscode.CommentController {\n\t\tconst handle = ExtHostComments.handlePool++;\n\t\tconst commentController = new ExtHostCommentController(extension, handle, this._commands.converter, this._proxy, id, label);\n\t\tthis._commentControllers.set(commentController.handle, commentController);\n\n\t\tconst commentControllers = this._commentControllersByExtension.get(ExtensionIdentifier.toKey(extension.identifier)) || [];\n\t\tcommentControllers.push(commentController);\n\t\tthis._commentControllersByExtension.set(ExtensionIdentifier.toKey(extension.identifier), commentControllers);\n\n\t\treturn commentController;\n\t}\n\n\t$onCommentWidgetInputChange(commentControllerHandle: number, input: string): Promise<number | undefined> {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tcommentController.$onCommentWidgetInputChange(input);\n\t\treturn Promise.resolve(commentControllerHandle);\n\t}\n\n\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<IRange[] | undefined> {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.commentingRangeProvider) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst document = this._documents.getDocument(URI.revive(uriComponents));\n\t\treturn asPromise(() => {\n\t\t\treturn commentController.commentingRangeProvider!.provideCommentingRanges(document, token);\n\t\t}).then(ranges => ranges ? ranges.map(x => extHostTypeConverter.Range.from(x)) : undefined);\n\t}\n\n\t$provideReactionGroup(commentControllerHandle: number): Promise<modes.CommentReaction[] | undefined> {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.reactionProvider) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => {\n\t\t\treturn commentController!.reactionProvider!.availableReactions;\n\t\t}).then(reactions => reactions.map(reaction => convertToReaction2(commentController.reactionProvider, reaction)));\n\t}\n\n\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.reactionProvider || !commentController.reactionProvider.toggleReaction) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => {\n\t\t\tconst commentThread = commentController.getCommentThread(threadHandle);\n\t\t\tif (commentThread) {\n\t\t\t\tconst vscodeComment = commentThread.getComment(comment.commentId);\n\n\t\t\t\tif (commentController !== undefined && commentController.reactionProvider && commentController.reactionProvider.toggleReaction && vscodeComment) {\n\t\t\t\t\treturn commentController.reactionProvider.toggleReaction(document, vscodeComment, convertFromReaction(reaction));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t});\n\t}\n\n\t$createNewCommentWidgetCallback(commentControllerHandle: number, uriComponents: UriComponents, range: IRange, token: CancellationToken): void {\n\t\tconst commentController = this._commentControllers.get(commentControllerHandle);\n\n\t\tif (!commentController || !commentController.emptyCommentThreadFactory) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst document = this._documents.getDocument(URI.revive(uriComponents));\n\t\tcommentController.emptyCommentThreadFactory.createEmptyCommentThread(document, extHostTypeConverter.Range.to(range));\n\t}\n\n\tregisterWorkspaceCommentProvider(\n\t\textensionId: ExtensionIdentifier,\n\t\tprovider: vscode.WorkspaceCommentProvider\n\t): vscode.Disposable {\n\t\tconst handle = ExtHostComments.handlePool++;\n\t\tthis._workspaceProviders.set(handle, {\n\t\t\textensionId,\n\t\t\tprovider\n\t\t});\n\t\tthis._proxy.$registerWorkspaceCommentProvider(handle, extensionId);\n\t\tthis.registerListeners(handle, extensionId, provider);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._proxy.$unregisterWorkspaceCommentProvider(handle);\n\t\t\t\tthis._workspaceProviders.delete(handle);\n\t\t\t}\n\t\t};\n\t}\n\n\tregisterDocumentCommentProvider(\n\t\textensionId: ExtensionIdentifier,\n\t\tprovider: vscode.DocumentCommentProvider\n\t): vscode.Disposable {\n\t\tconst handle = ExtHostComments.handlePool++;\n\t\tthis._documentProviders.set(handle, {\n\t\t\textensionId,\n\t\t\tprovider\n\t\t});\n\t\tthis._proxy.$registerDocumentCommentProvider(handle, {\n\t\t\tstartDraftLabel: provider.startDraftLabel,\n\t\t\tdeleteDraftLabel: provider.deleteDraftLabel,\n\t\t\tfinishDraftLabel: provider.finishDraftLabel,\n\t\t\treactionGroup: provider.reactionGroup ? provider.reactionGroup.map(reaction => convertToReaction(provider, reaction)) : undefined\n\t\t});\n\t\tthis.registerListeners(handle, extensionId, provider);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._proxy.$unregisterDocumentCommentProvider(handle);\n\t\t\t\tthis._documentProviders.delete(handle);\n\t\t\t}\n\t\t};\n\t}\n\n\t$createNewCommentThread(handle: number, uri: UriComponents, range: IRange, text: string): Promise<modes.CommentThread | null> {\n\t\tconst data = this._documents.getDocumentData(URI.revive(uri));\n\t\tconst ran = <vscode.Range>extHostTypeConverter.Range.to(range);\n\n\t\tif (!data || !data.document) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.createNewCommentThread(data.document, ran, text, CancellationToken.None);\n\t\t}).then(commentThread => commentThread ? convertToCommentThread(handlerData.extensionId, handlerData.provider, commentThread, this._commands.converter) : null);\n\t}\n\n\t$replyToCommentThread(handle: number, uri: UriComponents, range: IRange, thread: modes.CommentThread, text: string): Promise<modes.CommentThread | null> {\n\t\tconst data = this._documents.getDocumentData(URI.revive(uri));\n\t\tconst ran = <vscode.Range>extHostTypeConverter.Range.to(range);\n\n\t\tif (!data || !data.document) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.replyToCommentThread(data.document, ran, convertFromCommentThread(thread), text, CancellationToken.None);\n\t\t}).then(commentThread => commentThread ? convertToCommentThread(handlerData.extensionId, handlerData.provider, commentThread, this._commands.converter) : null);\n\t}\n\n\t$editComment(handle: number, uri: UriComponents, comment: modes.Comment, text: string): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\tif (!handlerData.provider.editComment) {\n\t\t\treturn Promise.reject(new Error('not implemented'));\n\t\t}\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.editComment!(document, convertFromComment(comment), text, CancellationToken.None);\n\t\t});\n\t}\n\n\t$deleteComment(handle: number, uri: UriComponents, comment: modes.Comment): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\tif (!handlerData.provider.deleteComment) {\n\t\t\treturn Promise.reject(new Error('not implemented'));\n\t\t}\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.deleteComment!(document, convertFromComment(comment), CancellationToken.None);\n\t\t});\n\t}\n\n\t$startDraft(handle: number, uri: UriComponents): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\tif (!handlerData.provider.startDraft) {\n\t\t\treturn Promise.reject(new Error('not implemented'));\n\t\t}\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.startDraft!(document, CancellationToken.None);\n\t\t});\n\t}\n\n\t$deleteDraft(handle: number, uri: UriComponents): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\tif (!handlerData.provider.deleteDraft) {\n\t\t\treturn Promise.reject(new Error('not implemented'));\n\t\t}\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.deleteDraft!(document, CancellationToken.None);\n\t\t});\n\t}\n\n\t$finishDraft(handle: number, uri: UriComponents): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\tif (!handlerData.provider.finishDraft) {\n\t\t\treturn Promise.reject(new Error('not implemented'));\n\t\t}\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.finishDraft!(document, CancellationToken.None);\n\t\t});\n\t}\n\n\t$addReaction(handle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\tif (!handlerData.provider.addReaction) {\n\t\t\treturn Promise.reject(new Error('not implemented'));\n\t\t}\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.addReaction!(document, convertFromComment(comment), convertFromReaction(reaction));\n\t\t});\n\t}\n\n\t$deleteReaction(handle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\tif (!handlerData.provider.deleteReaction) {\n\t\t\treturn Promise.reject(new Error('not implemented'));\n\t\t}\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.deleteReaction!(document, convertFromComment(comment), convertFromReaction(reaction));\n\t\t});\n\t}\n\n\t$provideDocumentComments(handle: number, uri: UriComponents): Promise<modes.CommentInfo | null> {\n\t\tconst document = this._documents.getDocument(URI.revive(uri));\n\t\tconst handlerData = this.getDocumentProvider(handle);\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.provideDocumentComments(document, CancellationToken.None);\n\t\t}).then(commentInfo => commentInfo ? convertCommentInfo(handle, handlerData.extensionId, handlerData.provider, commentInfo, this._commands.converter) : null);\n\t}\n\n\t$provideWorkspaceComments(handle: number): Promise<modes.CommentThread[] | null> {\n\t\tconst handlerData = this._workspaceProviders.get(handle);\n\t\tif (!handlerData) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn asPromise(() => {\n\t\t\treturn handlerData.provider.provideWorkspaceComments(CancellationToken.None);\n\t\t}).then(comments =>\n\t\t\tcomments.map(comment => convertToCommentThread(handlerData.extensionId, handlerData.provider, comment, this._commands.converter)\n\t\t\t));\n\t}\n\n\tprivate registerListeners(handle: number, extensionId: ExtensionIdentifier, provider: vscode.DocumentCommentProvider | vscode.WorkspaceCommentProvider) {\n\t\tprovider.onDidChangeCommentThreads(event => {\n\n\t\t\tthis._proxy.$onDidCommentThreadsChange(handle, {\n\t\t\t\tchanged: event.changed.map(thread => convertToCommentThread(extensionId, provider, thread, this._commands.converter)),\n\t\t\t\tadded: event.added.map(thread => convertToCommentThread(extensionId, provider, thread, this._commands.converter)),\n\t\t\t\tremoved: event.removed.map(thread => convertToCommentThread(extensionId, provider, thread, this._commands.converter)),\n\t\t\t\tdraftMode: !!(provider as vscode.DocumentCommentProvider).startDraft && !!(provider as vscode.DocumentCommentProvider).finishDraft ? (event.inDraftMode ? modes.DraftMode.InDraft : modes.DraftMode.NotInDraft) : modes.DraftMode.NotSupported\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getDocumentProvider(handle: number): HandlerData<vscode.DocumentCommentProvider> {\n\t\tconst provider = this._documentProviders.get(handle);\n\t\tif (!provider) {\n\t\t\tthrow new Error('unknown provider');\n\t\t}\n\t\treturn provider;\n\t}\n}\n\nexport class ExtHostCommentThread implements vscode.CommentThread {\n\tprivate static _handlePool: number = 0;\n\treadonly handle = ExtHostCommentThread._handlePool++;\n\tget threadId(): string {\n\t\treturn this._threadId;\n\t}\n\n\tget resource(): vscode.Uri {\n\t\treturn this._resource;\n\t}\n\n\tset range(range: vscode.Range) {\n\t\tif (range.isEqual(this._range)) {\n\t\t\tthis._range = range;\n\t\t\tthis._proxy.$updateCommentThreadRange(this._commentController.handle, this.handle, extHostTypeConverter.Range.from(this._range));\n\t\t}\n\t}\n\n\tget range(): vscode.Range {\n\t\treturn this._range;\n\t}\n\n\tprivate _label: string;\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tset label(label: string) {\n\t\tthis._label = label;\n\t\tthis._proxy.$updateCommentThreadLabel(this._commentController.handle, this.handle, this._label);\n\t}\n\n\tprivate _comments: vscode.Comment[] = [];\n\n\tget comments(): vscode.Comment[] {\n\t\treturn this._comments;\n\t}\n\n\tset comments(newComments: vscode.Comment[]) {\n\t\tthis._proxy.$updateComments(this._commentController.handle, this.handle, newComments.map(cmt => { return convertToModeComment(this._commentController, cmt, this._commandsConverter); }));\n\t\tthis._comments = newComments;\n\t}\n\n\tprivate _acceptInputCommand: vscode.Command;\n\tget acceptInputCommand(): vscode.Command {\n\t\treturn this._acceptInputCommand;\n\t}\n\n\tset acceptInputCommand(acceptInputCommand: vscode.Command) {\n\t\tthis._acceptInputCommand = acceptInputCommand;\n\n\t\tconst internal = this._commandsConverter.toInternal(acceptInputCommand);\n\t\tthis._proxy.$updateCommentThreadAcceptInputCommand(this._commentController.handle, this.handle, internal);\n\t}\n\n\tprivate _additionalCommands: vscode.Command[] = [];\n\tget additionalCommands(): vscode.Command[] {\n\t\treturn this._additionalCommands;\n\t}\n\n\tset additionalCommands(additionalCommands: vscode.Command[]) {\n\t\tthis._additionalCommands = additionalCommands;\n\n\t\tconst internals = additionalCommands.map(x => this._commandsConverter.toInternal(x));\n\t\tthis._proxy.$updateCommentThreadAdditionalCommands(this._commentController.handle, this.handle, internals);\n\t}\n\n\tprivate _collapseState?: vscode.CommentThreadCollapsibleState;\n\n\tget collapsibleState(): vscode.CommentThreadCollapsibleState {\n\t\treturn this._collapseState!;\n\t}\n\n\tset collapsibleState(newState: vscode.CommentThreadCollapsibleState) {\n\t\tthis._collapseState = newState;\n\t\tthis._proxy.$updateCommentThreadCollapsibleState(this._commentController.handle, this.handle, convertToCollapsibleState(newState));\n\t}\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadCommentsShape,\n\t\tprivate readonly _commandsConverter: CommandsConverter,\n\t\tprivate _commentController: ExtHostCommentController,\n\t\tprivate _threadId: string,\n\t\tprivate _resource: vscode.Uri,\n\t\tprivate _range: vscode.Range\n\t) {\n\t\tthis._proxy.$createCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle,\n\t\t\tthis._threadId,\n\t\t\tthis._resource,\n\t\t\textHostTypeConverter.Range.from(this._range),\n\t\t\tthis._comments.map(comment => { return convertToModeComment(this._commentController, comment, this._commandsConverter); }),\n\t\t\tthis._acceptInputCommand ? this._commandsConverter.toInternal(this._acceptInputCommand) : undefined,\n\t\t\tthis._additionalCommands ? this._additionalCommands.map(x => this._commandsConverter.toInternal(x)) : [],\n\t\t\tthis._collapseState!\n\t\t);\n\t}\n\n\tgetComment(commentId: string): vscode.Comment | undefined {\n\t\tconst comments = this._comments.filter(comment => comment.commentId === commentId);\n\n\t\tif (comments && comments.length) {\n\t\t\treturn comments[0];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdispose() {\n\t\tthis._proxy.$deleteCommentThread(\n\t\t\tthis._commentController.handle,\n\t\t\tthis.handle\n\t\t);\n\t}\n\n}\n\nexport class ExtHostCommentInputBox implements vscode.CommentInputBox {\n\tprivate _onDidChangeValue = new Emitter<string>();\n\n\tget onDidChangeValue(): Event<string> {\n\t\treturn this._onDidChangeValue.event;\n\t}\n\tprivate _value: string = '';\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\tset value(newInput: string) {\n\t\tthis._value = newInput;\n\t\tthis._onDidChangeValue.fire(this._value);\n\t\tthis._proxy.$setInputValue(this.commentControllerHandle, newInput);\n\t}\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadCommentsShape,\n\n\t\tpublic commentControllerHandle: number,\n\t\tinput: string\n\t) {\n\t\tthis._value = input;\n\t}\n\n\tsetInput(input: string) {\n\t\tthis._value = input;\n\t}\n}\nclass ExtHostCommentController implements vscode.CommentController {\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tpublic inputBox?: ExtHostCommentInputBox;\n\tpublic activeCommentingRange?: vscode.Range;\n\n\tpublic get handle(): number {\n\t\treturn this._handle;\n\t}\n\n\tprivate _threads: Map<number, ExtHostCommentThread> = new Map<number, ExtHostCommentThread>();\n\tcommentingRangeProvider?: vscode.CommentingRangeProvider;\n\temptyCommentThreadFactory: vscode.EmptyCommentThreadFactory;\n\n\n\tprivate _commentReactionProvider?: vscode.CommentReactionProvider;\n\n\tget reactionProvider(): vscode.CommentReactionProvider | undefined {\n\t\treturn this._commentReactionProvider;\n\t}\n\n\tset reactionProvider(provider: vscode.CommentReactionProvider | undefined) {\n\t\tthis._commentReactionProvider = provider;\n\t\tif (provider) {\n\t\t\tthis._proxy.$updateCommentControllerFeatures(this.handle, { reactionGroup: provider.availableReactions.map(reaction => convertToReaction2(provider, reaction)) });\n\t\t}\n\t}\n\n\tconstructor(\n\t\t_extension: IExtensionDescription,\n\t\tprivate _handle: number,\n\t\tprivate readonly _commandsConverter: CommandsConverter,\n\t\tprivate _proxy: MainThreadCommentsShape,\n\t\tprivate _id: string,\n\t\tprivate _label: string\n\t) {\n\t\tthis._proxy.$registerCommentController(this.handle, _id, _label);\n\t}\n\n\tcreateCommentThread(id: string, resource: vscode.Uri, range: vscode.Range): vscode.CommentThread {\n\t\tconst commentThread = new ExtHostCommentThread(this._proxy, this._commandsConverter, this, id, resource, range);\n\t\tthis._threads.set(commentThread.handle, commentThread);\n\t\treturn commentThread;\n\t}\n\n\t$onCommentWidgetInputChange(input: string) {\n\t\tif (!this.inputBox) {\n\t\t\tthis.inputBox = new ExtHostCommentInputBox(this._proxy, this.handle, input);\n\t\t} else {\n\t\t\tthis.inputBox.setInput(input);\n\t\t}\n\t}\n\n\tgetCommentThread(handle: number) {\n\t\treturn this._threads.get(handle);\n\t}\n\n\tdispose(): void {\n\t\tthis._threads.forEach(value => {\n\t\t\tvalue.dispose();\n\t\t});\n\t}\n}\n\nfunction convertCommentInfo(owner: number, extensionId: ExtensionIdentifier, provider: vscode.DocumentCommentProvider, vscodeCommentInfo: vscode.CommentInfo, commandsConverter: CommandsConverter): modes.CommentInfo {\n\treturn {\n\t\textensionId: extensionId.value,\n\t\tthreads: vscodeCommentInfo.threads.map(x => convertToCommentThread(extensionId, provider, x, commandsConverter)),\n\t\tcommentingRanges: vscodeCommentInfo.commentingRanges ? vscodeCommentInfo.commentingRanges.map(range => extHostTypeConverter.Range.from(range)) : [],\n\t\tdraftMode: provider.startDraft && provider.finishDraft ? (vscodeCommentInfo.inDraftMode ? modes.DraftMode.InDraft : modes.DraftMode.NotInDraft) : modes.DraftMode.NotSupported\n\t};\n}\n\nfunction convertToCommentThread(extensionId: ExtensionIdentifier, provider: vscode.DocumentCommentProvider | vscode.WorkspaceCommentProvider, vscodeCommentThread: vscode.CommentThread, commandsConverter: CommandsConverter): modes.CommentThread {\n\treturn {\n\t\textensionId: extensionId.value,\n\t\tthreadId: vscodeCommentThread.threadId,\n\t\tresource: vscodeCommentThread.resource.toString(),\n\t\trange: extHostTypeConverter.Range.from(vscodeCommentThread.range),\n\t\tcomments: vscodeCommentThread.comments.map(comment => convertToComment(provider, comment, commandsConverter)),\n\t\tcollapsibleState: vscodeCommentThread.collapsibleState\n\t};\n}\n\nfunction convertFromCommentThread(commentThread: modes.CommentThread): vscode.CommentThread {\n\treturn {\n\t\tthreadId: commentThread.threadId!,\n\t\tresource: URI.parse(commentThread.resource!),\n\t\trange: extHostTypeConverter.Range.to(commentThread.range),\n\t\tcomments: commentThread.comments.map(convertFromComment),\n\t\tcollapsibleState: commentThread.collapsibleState\n\t};\n}\n\nfunction convertFromComment(comment: modes.Comment): vscode.Comment {\n\tlet userIconPath: URI | undefined;\n\tif (comment.userIconPath) {\n\t\ttry {\n\t\t\tuserIconPath = URI.parse(comment.userIconPath);\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\treturn {\n\t\tcommentId: comment.commentId,\n\t\tbody: extHostTypeConverter.MarkdownString.to(comment.body),\n\t\tuserName: comment.userName,\n\t\tuserIconPath: userIconPath,\n\t\tcanEdit: comment.canEdit,\n\t\tcanDelete: comment.canDelete,\n\t\tisDraft: comment.isDraft,\n\t\tcommentReactions: comment.commentReactions ? comment.commentReactions.map(reaction => {\n\t\t\treturn {\n\t\t\t\tlabel: reaction.label,\n\t\t\t\tcount: reaction.count,\n\t\t\t\thasReacted: reaction.hasReacted\n\t\t\t};\n\t\t}) : undefined\n\t};\n}\n\nfunction convertToModeComment(commentController: ExtHostCommentController, vscodeComment: vscode.Comment, commandsConverter: CommandsConverter): modes.Comment {\n\tconst iconPath = vscodeComment.userIconPath ? vscodeComment.userIconPath.toString() : vscodeComment.gravatar;\n\n\treturn {\n\t\tcommentId: vscodeComment.commentId,\n\t\tbody: extHostTypeConverter.MarkdownString.from(vscodeComment.body),\n\t\tuserName: vscodeComment.userName,\n\t\tuserIconPath: iconPath,\n\t\tisDraft: vscodeComment.isDraft,\n\t\tselectCommand: vscodeComment.selectCommand ? commandsConverter.toInternal(vscodeComment.selectCommand) : undefined,\n\t\teditCommand: vscodeComment.editCommand ? commandsConverter.toInternal(vscodeComment.editCommand) : undefined,\n\t\tdeleteCommand: vscodeComment.editCommand ? commandsConverter.toInternal(vscodeComment.deleteCommand) : undefined,\n\t\tlabel: vscodeComment.label,\n\t\tcommentReactions: vscodeComment.commentReactions ? vscodeComment.commentReactions.map(reaction => convertToReaction2(commentController.reactionProvider, reaction)) : undefined\n\t};\n}\n\nfunction convertToComment(provider: vscode.DocumentCommentProvider | vscode.WorkspaceCommentProvider, vscodeComment: vscode.Comment, commandsConverter: CommandsConverter): modes.Comment {\n\tconst canEdit = !!(provider as vscode.DocumentCommentProvider).editComment && vscodeComment.canEdit;\n\tconst canDelete = !!(provider as vscode.DocumentCommentProvider).deleteComment && vscodeComment.canDelete;\n\tconst iconPath = vscodeComment.userIconPath ? vscodeComment.userIconPath.toString() : vscodeComment.gravatar;\n\n\treturn {\n\t\tcommentId: vscodeComment.commentId,\n\t\tbody: extHostTypeConverter.MarkdownString.from(vscodeComment.body),\n\t\tuserName: vscodeComment.userName,\n\t\tuserIconPath: iconPath,\n\t\tcanEdit: canEdit,\n\t\tcanDelete: canDelete,\n\t\tselectCommand: vscodeComment.command ? commandsConverter.toInternal(vscodeComment.command) : undefined,\n\t\tisDraft: vscodeComment.isDraft,\n\t\tcommentReactions: vscodeComment.commentReactions ? vscodeComment.commentReactions.map(reaction => convertToReaction(provider, reaction)) : undefined\n\t};\n}\n\nfunction convertToReaction(provider: vscode.DocumentCommentProvider | vscode.WorkspaceCommentProvider, reaction: vscode.CommentReaction): modes.CommentReaction {\n\tconst providerCanDeleteReaction = !!(provider as vscode.DocumentCommentProvider).deleteReaction;\n\tconst providerCanAddReaction = !!(provider as vscode.DocumentCommentProvider).addReaction;\n\n\treturn {\n\t\tlabel: reaction.label,\n\t\ticonPath: reaction.iconPath ? extHostTypeConverter.pathOrURIToURI(reaction.iconPath) : undefined,\n\t\tcount: reaction.count,\n\t\thasReacted: reaction.hasReacted,\n\t\tcanEdit: (reaction.hasReacted && providerCanDeleteReaction) || (!reaction.hasReacted && providerCanAddReaction)\n\t};\n}\n\nfunction convertToReaction2(provider: vscode.CommentReactionProvider | undefined, reaction: vscode.CommentReaction): modes.CommentReaction {\n\treturn {\n\t\tlabel: reaction.label,\n\t\ticonPath: reaction.iconPath ? extHostTypeConverter.pathOrURIToURI(reaction.iconPath) : undefined,\n\t\tcount: reaction.count,\n\t\thasReacted: reaction.hasReacted,\n\t\tcanEdit: provider !== undefined ? !!provider.toggleReaction : false\n\t};\n}\n\nfunction convertFromReaction(reaction: modes.CommentReaction): vscode.CommentReaction {\n\treturn {\n\t\tlabel: reaction.label,\n\t\tcount: reaction.count,\n\t\thasReacted: reaction.hasReacted\n\t};\n}\n\nfunction convertToCollapsibleState(kind: vscode.CommentThreadCollapsibleState | undefined): modes.CommentThreadCollapsibleState {\n\tif (kind !== undefined) {\n\t\tswitch (kind) {\n\t\t\tcase types.CommentThreadCollapsibleState.Expanded:\n\t\t\t\treturn modes.CommentThreadCollapsibleState.Expanded;\n\t\t\tcase types.CommentThreadCollapsibleState.Collapsed:\n\t\t\t\treturn modes.CommentThreadCollapsibleState.Collapsed;\n\t\t}\n\t}\n\treturn modes.CommentThreadCollapsibleState.Collapsed;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { asPromise } from 'vs/base/common/async';\nimport * as nls from 'vs/nls';\nimport {\n\tMainContext, MainThreadDebugServiceShape, ExtHostDebugServiceShape, DebugSessionUUID,\n\tIMainContext, IBreakpointsDeltaDto, ISourceMultiBreakpointDto, IFunctionBreakpointDto, IDebugSessionDto\n} from 'vs/workbench/api/node/extHost.protocol';\nimport * as vscode from 'vscode';\nimport { Disposable, Position, Location, SourceBreakpoint, FunctionBreakpoint, DebugAdapterServer, DebugAdapterExecutable } from 'vs/workbench/api/node/extHostTypes';\nimport { ExecutableDebugAdapter, SocketDebugAdapter, AbstractDebugAdapter } from 'vs/workbench/contrib/debug/node/debugAdapter';\nimport { IExtHostWorkspaceProvider } from 'vs/workbench/api/node/extHostWorkspace';\nimport { ExtHostExtensionService } from 'vs/workbench/api/node/extHostExtensionService';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/node/extHostDocumentsAndEditors';\nimport { ITerminalSettings, IDebuggerContribution, IConfig, IDebugAdapter, IDebugAdapterServer, IDebugAdapterExecutable, IAdapterDescriptor } from 'vs/workbench/contrib/debug/common/debug';\nimport { getTerminalLauncher, hasChildProcesses, prepareCommand } from 'vs/workbench/contrib/debug/node/terminals';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ExtHostConfiguration, ExtHostConfigProvider } from './extHostConfiguration';\nimport { convertToVSCPaths, convertToDAPaths, isDebuggerMainContribution } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { ExtHostTerminalService } from 'vs/workbench/api/node/extHostTerminalService';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtHostCommands } from 'vs/workbench/api/node/extHostCommands';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/node/extensionDescriptionRegistry';\n\n\nexport class ExtHostDebugService implements ExtHostDebugServiceShape {\n\n\tprivate _configProviderHandleCounter: number;\n\tprivate _configProviders: ConfigProviderTuple[];\n\n\tprivate _adapterFactoryHandleCounter: number;\n\tprivate _adapterFactories: DescriptorFactoryTuple[];\n\n\tprivate _trackerFactoryHandleCounter: number;\n\tprivate _trackerFactories: TrackerFactoryTuple[];\n\n\tprivate _debugServiceProxy: MainThreadDebugServiceShape;\n\tprivate _debugSessions: Map<DebugSessionUUID, ExtHostDebugSession> = new Map<DebugSessionUUID, ExtHostDebugSession>();\n\n\tprivate readonly _onDidStartDebugSession: Emitter<vscode.DebugSession>;\n\tget onDidStartDebugSession(): Event<vscode.DebugSession> { return this._onDidStartDebugSession.event; }\n\n\tprivate readonly _onDidTerminateDebugSession: Emitter<vscode.DebugSession>;\n\tget onDidTerminateDebugSession(): Event<vscode.DebugSession> { return this._onDidTerminateDebugSession.event; }\n\n\tprivate readonly _onDidChangeActiveDebugSession: Emitter<vscode.DebugSession | undefined>;\n\tget onDidChangeActiveDebugSession(): Event<vscode.DebugSession | undefined> { return this._onDidChangeActiveDebugSession.event; }\n\n\tprivate _activeDebugSession: ExtHostDebugSession | undefined;\n\tget activeDebugSession(): ExtHostDebugSession | undefined { return this._activeDebugSession; }\n\n\tprivate readonly _onDidReceiveDebugSessionCustomEvent: Emitter<vscode.DebugSessionCustomEvent>;\n\tget onDidReceiveDebugSessionCustomEvent(): Event<vscode.DebugSessionCustomEvent> { return this._onDidReceiveDebugSessionCustomEvent.event; }\n\n\tprivate _activeDebugConsole: ExtHostDebugConsole;\n\tget activeDebugConsole(): ExtHostDebugConsole { return this._activeDebugConsole; }\n\n\tprivate _breakpoints: Map<string, vscode.Breakpoint>;\n\tprivate _breakpointEventsActive: boolean;\n\n\tprivate readonly _onDidChangeBreakpoints: Emitter<vscode.BreakpointsChangeEvent>;\n\n\tprivate _aexCommands: Map<string, string>;\n\tprivate _debugAdapters: Map<number, IDebugAdapter>;\n\tprivate _debugAdaptersTrackers: Map<number, vscode.DebugAdapterTracker>;\n\n\tprivate _variableResolver: IConfigurationResolverService;\n\n\tprivate _integratedTerminalInstance: vscode.Terminal;\n\tprivate _terminalDisposedListener: IDisposable;\n\n\n\tconstructor(mainContext: IMainContext,\n\t\tprivate _workspaceService: IExtHostWorkspaceProvider,\n\t\tprivate _extensionService: ExtHostExtensionService,\n\t\tprivate _editorsService: ExtHostDocumentsAndEditors,\n\t\tprivate _configurationService: ExtHostConfiguration,\n\t\tprivate _terminalService: ExtHostTerminalService,\n\t\tprivate _commandService: ExtHostCommands\n\t) {\n\t\tthis._configProviderHandleCounter = 0;\n\t\tthis._configProviders = [];\n\n\t\tthis._adapterFactoryHandleCounter = 0;\n\t\tthis._adapterFactories = [];\n\n\t\tthis._trackerFactoryHandleCounter = 0;\n\t\tthis._trackerFactories = [];\n\n\t\tthis._aexCommands = new Map();\n\t\tthis._debugAdapters = new Map();\n\t\tthis._debugAdaptersTrackers = new Map();\n\n\t\tthis._onDidStartDebugSession = new Emitter<vscode.DebugSession>();\n\t\tthis._onDidTerminateDebugSession = new Emitter<vscode.DebugSession>();\n\t\tthis._onDidChangeActiveDebugSession = new Emitter<vscode.DebugSession>();\n\t\tthis._onDidReceiveDebugSessionCustomEvent = new Emitter<vscode.DebugSessionCustomEvent>();\n\n\t\tthis._debugServiceProxy = mainContext.getProxy(MainContext.MainThreadDebugService);\n\n\t\tthis._onDidChangeBreakpoints = new Emitter<vscode.BreakpointsChangeEvent>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis.startBreakpoints();\n\t\t\t}\n\t\t});\n\n\t\tthis._activeDebugConsole = new ExtHostDebugConsole(this._debugServiceProxy);\n\n\t\tthis._breakpoints = new Map<string, vscode.Breakpoint>();\n\t\tthis._breakpointEventsActive = false;\n\n\t\tthis._extensionService.getExtensionRegistry().then((extensionRegistry: ExtensionDescriptionRegistry) => {\n\t\t\textensionRegistry.onDidChange(_ => {\n\t\t\t\tthis.registerAllDebugTypes(extensionRegistry);\n\t\t\t});\n\t\t\tthis.registerAllDebugTypes(extensionRegistry);\n\t\t});\n\t}\n\n\tprivate registerAllDebugTypes(extensionRegistry: ExtensionDescriptionRegistry) {\n\n\t\tconst debugTypes: string[] = [];\n\t\tthis._aexCommands.clear();\n\n\t\tfor (const ed of extensionRegistry.getAllExtensionDescriptions()) {\n\t\t\tif (ed.contributes) {\n\t\t\t\tconst debuggers = <IDebuggerContribution[]>ed.contributes['debuggers'];\n\t\t\t\tif (debuggers && debuggers.length > 0) {\n\t\t\t\t\tfor (const dbg of debuggers) {\n\t\t\t\t\t\tif (isDebuggerMainContribution(dbg)) {\n\t\t\t\t\t\t\tdebugTypes.push(dbg.type);\n\t\t\t\t\t\t\tif (dbg.adapterExecutableCommand) {\n\t\t\t\t\t\t\t\tthis._aexCommands.set(dbg.type, dbg.adapterExecutableCommand);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._debugServiceProxy.$registerDebugTypes(debugTypes);\n\t}\n\n\t// extension debug API\n\n\tget onDidChangeBreakpoints(): Event<vscode.BreakpointsChangeEvent> {\n\t\treturn this._onDidChangeBreakpoints.event;\n\t}\n\n\tget breakpoints(): vscode.Breakpoint[] {\n\n\t\tthis.startBreakpoints();\n\n\t\tconst result: vscode.Breakpoint[] = [];\n\t\tthis._breakpoints.forEach(bp => result.push(bp));\n\t\treturn result;\n\t}\n\n\tpublic addBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void> {\n\n\t\tthis.startBreakpoints();\n\n\t\t// filter only new breakpoints\n\t\tconst breakpoints = breakpoints0.filter(bp => {\n\t\t\tconst id = bp.id;\n\t\t\tif (!this._breakpoints.has(id)) {\n\t\t\t\tthis._breakpoints.set(id, bp);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\t// send notification for added breakpoints\n\t\tthis.fireBreakpointChanges(breakpoints, [], []);\n\n\t\t// convert added breakpoints to DTOs\n\t\tconst dtos: Array<ISourceMultiBreakpointDto | IFunctionBreakpointDto> = [];\n\t\tconst map = new Map<string, ISourceMultiBreakpointDto>();\n\t\tfor (const bp of breakpoints) {\n\t\t\tif (bp instanceof SourceBreakpoint) {\n\t\t\t\tlet dto = map.get(bp.location.uri.toString());\n\t\t\t\tif (!dto) {\n\t\t\t\t\tdto = <ISourceMultiBreakpointDto>{\n\t\t\t\t\t\ttype: 'sourceMulti',\n\t\t\t\t\t\turi: bp.location.uri,\n\t\t\t\t\t\tlines: []\n\t\t\t\t\t};\n\t\t\t\t\tmap.set(bp.location.uri.toString(), dto);\n\t\t\t\t\tdtos.push(dto);\n\t\t\t\t}\n\t\t\t\tdto.lines.push({\n\t\t\t\t\tid: bp.id,\n\t\t\t\t\tenabled: bp.enabled,\n\t\t\t\t\tcondition: bp.condition,\n\t\t\t\t\thitCondition: bp.hitCondition,\n\t\t\t\t\tlogMessage: bp.logMessage,\n\t\t\t\t\tline: bp.location.range.start.line,\n\t\t\t\t\tcharacter: bp.location.range.start.character\n\t\t\t\t});\n\t\t\t} else if (bp instanceof FunctionBreakpoint) {\n\t\t\t\tdtos.push({\n\t\t\t\t\ttype: 'function',\n\t\t\t\t\tid: bp.id,\n\t\t\t\t\tenabled: bp.enabled,\n\t\t\t\t\thitCondition: bp.hitCondition,\n\t\t\t\t\tlogMessage: bp.logMessage,\n\t\t\t\t\tcondition: bp.condition,\n\t\t\t\t\tfunctionName: bp.functionName\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// send DTOs to VS Code\n\t\treturn this._debugServiceProxy.$registerBreakpoints(dtos);\n\t}\n\n\tpublic removeBreakpoints(breakpoints0: vscode.Breakpoint[]): Promise<void> {\n\n\t\tthis.startBreakpoints();\n\n\t\t// remove from array\n\t\tconst breakpoints = breakpoints0.filter(b => this._breakpoints.delete(b.id));\n\n\t\t// send notification\n\t\tthis.fireBreakpointChanges([], breakpoints, []);\n\n\t\t// unregister with VS Code\n\t\tconst ids = breakpoints.filter(bp => bp instanceof SourceBreakpoint).map(bp => bp.id);\n\t\tconst fids = breakpoints.filter(bp => bp instanceof FunctionBreakpoint).map(bp => bp.id);\n\t\treturn this._debugServiceProxy.$unregisterBreakpoints(ids, fids);\n\t}\n\n\tpublic startDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration): Promise<boolean> {\n\t\treturn this._debugServiceProxy.$startDebugging(folder ? folder.uri : undefined, nameOrConfig);\n\t}\n\n\tpublic registerDebugConfigurationProvider(type: string, provider: vscode.DebugConfigurationProvider): vscode.Disposable {\n\n\t\tif (!provider) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\tif (provider.debugAdapterExecutable) {\n\t\t\tconsole.error('DebugConfigurationProvider.debugAdapterExecutable is deprecated and will be removed soon; please use DebugAdapterDescriptorFactory.createDebugAdapterDescriptor instead.');\n\t\t}\n\n\t\tconst handle = this._configProviderHandleCounter++;\n\t\tthis._configProviders.push({ type, handle, provider });\n\n\t\tthis._debugServiceProxy.$registerDebugConfigurationProvider(type,\n\t\t\t!!provider.provideDebugConfigurations,\n\t\t\t!!provider.resolveDebugConfiguration,\n\t\t\t!!provider.debugAdapterExecutable,\t\t// TODO@AW: deprecated\n\t\t\thandle);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._configProviders = this._configProviders.filter(p => p.provider !== provider);\t\t// remove\n\t\t\tthis._debugServiceProxy.$unregisterDebugConfigurationProvider(handle);\n\t\t});\n\t}\n\n\tpublic registerDebugAdapterDescriptorFactory(extension: IExtensionDescription, type: string, factory: vscode.DebugAdapterDescriptorFactory): vscode.Disposable {\n\n\t\tif (!factory) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\t// a DebugAdapterDescriptorFactory can only be registered in the extension that contributes the debugger\n\t\tif (!this.definesDebugType(extension, type)) {\n\t\t\tthrow new Error(`a DebugAdapterDescriptorFactory can only be registered from the extension that defines the '${type}' debugger.`);\n\t\t}\n\n\t\t// make sure that only one factory for this type is registered\n\t\tif (this.getAdapterFactoryByType(type)) {\n\t\t\tthrow new Error(`a DebugAdapterDescriptorFactory can only be registered once per a type.`);\n\t\t}\n\n\t\tconst handle = this._adapterFactoryHandleCounter++;\n\t\tthis._adapterFactories.push({ type, handle, factory });\n\n\t\tthis._debugServiceProxy.$registerDebugAdapterDescriptorFactory(type, handle);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._adapterFactories = this._adapterFactories.filter(p => p.factory !== factory);\t\t// remove\n\t\t\tthis._debugServiceProxy.$unregisterDebugAdapterDescriptorFactory(handle);\n\t\t});\n\t}\n\n\tpublic registerDebugAdapterTrackerFactory(type: string, factory: vscode.DebugAdapterTrackerFactory): vscode.Disposable {\n\n\t\tif (!factory) {\n\t\t\treturn new Disposable(() => { });\n\t\t}\n\n\t\tconst handle = this._trackerFactoryHandleCounter++;\n\t\tthis._trackerFactories.push({ type, handle, factory });\n\n\t\tthis._debugServiceProxy.$registerDebugAdapterTrackerFactory(type, handle);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._trackerFactories = this._trackerFactories.filter(p => p.factory !== factory);\t\t// remove\n\t\t\tthis._debugServiceProxy.$unregisterDebugAdapterTrackerFactory(handle);\n\t\t});\n\t}\n\n\t// RPC methods (ExtHostDebugServiceShape)\n\n\tpublic $runInTerminal(args: DebugProtocol.RunInTerminalRequestArguments, config: ITerminalSettings): Promise<number | undefined> {\n\n\t\tif (args.kind === 'integrated') {\n\n\t\t\tif (!this._terminalDisposedListener) {\n\t\t\t\t// React on terminal disposed and check if that is the debug terminal #12956\n\t\t\t\tthis._terminalDisposedListener = this._terminalService.onDidCloseTerminal(terminal => {\n\t\t\t\t\tif (this._integratedTerminalInstance && this._integratedTerminalInstance === terminal) {\n\t\t\t\t\t\tthis._integratedTerminalInstance = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tif (this._integratedTerminalInstance) {\n\t\t\t\t\tthis._integratedTerminalInstance.processId.then(pid => {\n\t\t\t\t\t\tresolve(hasChildProcesses(pid));\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t}).then(needNewTerminal => {\n\n\t\t\t\tif (needNewTerminal) {\n\t\t\t\t\tthis._integratedTerminalInstance = this._terminalService.createTerminal(args.title || nls.localize('debug.terminal.title', \"debuggee\"));\n\t\t\t\t}\n\n\t\t\t\tthis._integratedTerminalInstance.show();\n\n\t\t\t\treturn this._integratedTerminalInstance.processId.then(shellProcessId => {\n\n\t\t\t\t\tconst command = prepareCommand(args, config);\n\t\t\t\t\tthis._integratedTerminalInstance.sendText(command, true);\n\n\t\t\t\t\treturn shellProcessId;\n\t\t\t\t});\n\t\t\t});\n\n\t\t} else if (args.kind === 'external') {\n\n\t\t\tconst terminalLauncher = getTerminalLauncher();\n\t\t\tif (terminalLauncher) {\n\t\t\t\treturn terminalLauncher.runInTerminal(args, config);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic async $substituteVariables(folderUri: UriComponents | undefined, config: IConfig): Promise<IConfig> {\n\t\tconst [workspaceFolders, configProvider] = await Promise.all([this._workspaceService.getWorkspaceFolders2(), this._configurationService.getConfigProvider()]);\n\t\tif (!this._variableResolver) {\n\t\t\tthis._variableResolver = new ExtHostVariableResolverService(workspaceFolders, this._editorsService, configProvider);\n\t\t}\n\t\tlet ws: IWorkspaceFolder | undefined;\n\t\tconst folder = await this.getFolder(folderUri);\n\t\tif (folder) {\n\t\t\tws = {\n\t\t\t\turi: folder.uri,\n\t\t\t\tname: folder.name,\n\t\t\t\tindex: folder.index,\n\t\t\t\ttoResource: () => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._variableResolver.resolveAny(ws, config);\n\t}\n\n\tpublic async $startDASession(debugAdapterHandle: number, sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst mythis = this;\n\n\t\tconst session = await this.getSession(sessionDto);\n\t\treturn this.getAdapterDescriptor(this.getAdapterFactoryByType(session.type), session).then(x => {\n\n\t\t\tconst adapter = this.convertToDto(x);\n\t\t\tlet da: AbstractDebugAdapter | undefined = undefined;\n\n\t\t\tswitch (adapter.type) {\n\n\t\t\t\tcase 'server':\n\t\t\t\t\tda = new SocketDebugAdapter(adapter);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'executable':\n\t\t\t\t\tda = new ExecutableDebugAdapter(adapter, session.type);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'implementation':\n\t\t\t\t\tda = new DirectDebugAdapter(adapter.implementation);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (da) {\n\t\t\t\tthis._debugAdapters.set(debugAdapterHandle, da);\n\n\t\t\t\treturn this.getDebugAdapterTrackers(session).then(tracker => {\n\n\t\t\t\t\tif (tracker) {\n\t\t\t\t\t\tthis._debugAdaptersTrackers.set(debugAdapterHandle, tracker);\n\t\t\t\t\t}\n\n\t\t\t\t\tda.onMessage(message => {\n\n\t\t\t\t\t\tif (tracker) {\n\t\t\t\t\t\t\ttracker.onDidSendMessage(message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// DA -> VS Code\n\t\t\t\t\t\tmessage = convertToVSCPaths(message, true);\n\n\t\t\t\t\t\tmythis._debugServiceProxy.$acceptDAMessage(debugAdapterHandle, message);\n\t\t\t\t\t});\n\t\t\t\t\tda.onError(err => {\n\t\t\t\t\t\tif (tracker) {\n\t\t\t\t\t\t\ttracker.onError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._debugServiceProxy.$acceptDAError(debugAdapterHandle, err.name, err.message, err.stack);\n\t\t\t\t\t});\n\t\t\t\t\tda.onExit(code => {\n\t\t\t\t\t\tif (tracker) {\n\t\t\t\t\t\t\ttracker.onExit(code, undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._debugServiceProxy.$acceptDAExit(debugAdapterHandle, code, null);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (tracker) {\n\t\t\t\t\t\ttracker.onWillStartSession();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn da.startSession();\n\t\t\t\t});\n\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tpublic $sendDAMessage(debugAdapterHandle: number, message: DebugProtocol.ProtocolMessage): Promise<void> {\n\n\t\t// VS Code -> DA\n\t\tmessage = convertToDAPaths(message, false);\n\n\t\tconst tracker = this._debugAdaptersTrackers.get(debugAdapterHandle);\t// TODO@AW: same handle?\n\t\tif (tracker) {\n\t\t\ttracker.onWillReceiveMessage(message);\n\t\t}\n\n\t\tconst da = this._debugAdapters.get(debugAdapterHandle);\n\t\tif (da) {\n\t\t\tda.sendMessage(message);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic $stopDASession(debugAdapterHandle: number): Promise<void> {\n\n\t\tconst tracker = this._debugAdaptersTrackers.get(debugAdapterHandle);\n\t\tthis._debugAdaptersTrackers.delete(debugAdapterHandle);\n\t\tif (tracker) {\n\t\t\ttracker.onWillStopSession();\n\t\t}\n\n\t\tconst da = this._debugAdapters.get(debugAdapterHandle);\n\t\tthis._debugAdapters.delete(debugAdapterHandle);\n\t\tif (da) {\n\t\t\treturn da.stopSession();\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tpublic $acceptBreakpointsDelta(delta: IBreakpointsDeltaDto): void {\n\n\t\tconst a: vscode.Breakpoint[] = [];\n\t\tconst r: vscode.Breakpoint[] = [];\n\t\tconst c: vscode.Breakpoint[] = [];\n\n\t\tif (delta.added) {\n\t\t\tfor (const bpd of delta.added) {\n\n\t\t\t\tif (!this._breakpoints.has(bpd.id)) {\n\t\t\t\t\tlet bp: vscode.Breakpoint;\n\t\t\t\t\tif (bpd.type === 'function') {\n\t\t\t\t\t\tbp = new FunctionBreakpoint(bpd.functionName, bpd.enabled, bpd.condition, bpd.hitCondition, bpd.logMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst uri = URI.revive(bpd.uri);\n\t\t\t\t\t\tbp = new SourceBreakpoint(new Location(uri, new Position(bpd.line, bpd.character)), bpd.enabled, bpd.condition, bpd.hitCondition, bpd.logMessage);\n\t\t\t\t\t}\n\t\t\t\t\t(bp as any)._id = bpd.id;\n\t\t\t\t\tthis._breakpoints.set(bpd.id, bp);\n\t\t\t\t\ta.push(bp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.removed) {\n\t\t\tfor (const id of delta.removed) {\n\t\t\t\tconst bp = this._breakpoints.get(id);\n\t\t\t\tif (bp) {\n\t\t\t\t\tthis._breakpoints.delete(id);\n\t\t\t\t\tr.push(bp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.changed) {\n\t\t\tfor (const bpd of delta.changed) {\n\t\t\t\tconst bp = this._breakpoints.get(bpd.id);\n\t\t\t\tif (bp) {\n\t\t\t\t\tif (bp instanceof FunctionBreakpoint && bpd.type === 'function') {\n\t\t\t\t\t\tconst fbp = <any>bp;\n\t\t\t\t\t\tfbp.enabled = bpd.enabled;\n\t\t\t\t\t\tfbp.condition = bpd.condition;\n\t\t\t\t\t\tfbp.hitCondition = bpd.hitCondition;\n\t\t\t\t\t\tfbp.logMessage = bpd.logMessage;\n\t\t\t\t\t\tfbp.functionName = bpd.functionName;\n\t\t\t\t\t} else if (bp instanceof SourceBreakpoint && bpd.type === 'source') {\n\t\t\t\t\t\tconst sbp = <any>bp;\n\t\t\t\t\t\tsbp.enabled = bpd.enabled;\n\t\t\t\t\t\tsbp.condition = bpd.condition;\n\t\t\t\t\t\tsbp.hitCondition = bpd.hitCondition;\n\t\t\t\t\t\tsbp.logMessage = bpd.logMessage;\n\t\t\t\t\t\tsbp.location = new Location(URI.revive(bpd.uri), new Position(bpd.line, bpd.character));\n\t\t\t\t\t}\n\t\t\t\t\tc.push(bp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.fireBreakpointChanges(a, r, c);\n\t}\n\n\tpublic async $provideDebugConfigurations(configProviderHandle: number, folderUri: UriComponents | undefined): Promise<vscode.DebugConfiguration[]> {\n\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\tif (!provider) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\t\tif (!provider.provideDebugConfigurations) {\n\t\t\treturn Promise.reject(new Error('handler has no method provideDebugConfigurations'));\n\t\t}\n\t\tconst folder = await this.getFolder(folderUri);\n\t\treturn asPromise(() => provider.provideDebugConfigurations(folder, CancellationToken.None));\n\t}\n\n\tpublic async $resolveDebugConfiguration(configProviderHandle: number, folderUri: UriComponents | undefined, debugConfiguration: vscode.DebugConfiguration): Promise<vscode.DebugConfiguration> {\n\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\tif (!provider) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\t\tif (!provider.resolveDebugConfiguration) {\n\t\t\treturn Promise.reject(new Error('handler has no method resolveDebugConfiguration'));\n\t\t}\n\t\tconst folder = await this.getFolder(folderUri);\n\t\treturn asPromise(() => provider.resolveDebugConfiguration(folder, debugConfiguration, CancellationToken.None));\n\t}\n\n\t// TODO@AW legacy\n\tpublic async $legacyDebugAdapterExecutable(configProviderHandle: number, folderUri: UriComponents | undefined): Promise<IAdapterDescriptor> {\n\t\tconst provider = this.getConfigProviderByHandle(configProviderHandle);\n\t\tif (!provider) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\t\tif (!provider.debugAdapterExecutable) {\n\t\t\treturn Promise.reject(new Error('handler has no method debugAdapterExecutable'));\n\t\t}\n\t\tconst folder = await this.getFolder(folderUri);\n\t\treturn asPromise(() => provider.debugAdapterExecutable(folder, CancellationToken.None)).then(x => this.convertToDto(x));\n\t}\n\n\tpublic async $provideDebugAdapter(adapterProviderHandle: number, sessionDto: IDebugSessionDto): Promise<IAdapterDescriptor> {\n\t\tconst adapterProvider = this.getAdapterProviderByHandle(adapterProviderHandle);\n\t\tif (!adapterProvider) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\t\tconst session = await this.getSession(sessionDto);\n\t\treturn this.getAdapterDescriptor(adapterProvider, session).then(x => this.convertToDto(x));\n\t}\n\n\tpublic async $acceptDebugSessionStarted(sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tthis._onDidStartDebugSession.fire(session);\n\t}\n\n\tpublic async $acceptDebugSessionTerminated(sessionDto: IDebugSessionDto): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tif (session) {\n\t\t\tthis._onDidTerminateDebugSession.fire(session);\n\t\t\tthis._debugSessions.delete(session.id);\n\t\t}\n\t}\n\n\tpublic async $acceptDebugSessionActiveChanged(sessionDto: IDebugSessionDto | undefined): Promise<void> {\n\t\tthis._activeDebugSession = sessionDto ? await this.getSession(sessionDto) : undefined;\n\t\tthis._onDidChangeActiveDebugSession.fire(this._activeDebugSession);\n\t}\n\n\tpublic async $acceptDebugSessionCustomEvent(sessionDto: IDebugSessionDto, event: any): Promise<void> {\n\t\tconst session = await this.getSession(sessionDto);\n\t\tconst ee: vscode.DebugSessionCustomEvent = {\n\t\t\tsession: session,\n\t\t\tevent: event.event,\n\t\t\tbody: event.body\n\t\t};\n\t\tthis._onDidReceiveDebugSessionCustomEvent.fire(ee);\n\t}\n\n\t// private & dto helpers\n\n\tprivate convertToDto(x: vscode.DebugAdapterDescriptor): IAdapterDescriptor {\n\t\tif (x instanceof DebugAdapterExecutable) {\n\t\t\treturn <IDebugAdapterExecutable>{\n\t\t\t\ttype: 'executable',\n\t\t\t\tcommand: x.command,\n\t\t\t\targs: x.args,\n\t\t\t\toptions: x.options\n\t\t\t};\n\t\t} else if (x instanceof DebugAdapterServer) {\n\t\t\treturn <IDebugAdapterServer>{\n\t\t\t\ttype: 'server',\n\t\t\t\tport: x.port,\n\t\t\t\thost: x.host\n\t\t\t};\n\t\t} else /* if (x instanceof DebugAdapterImplementation) {\n\t\t\treturn <IDebugAdapterImplementation>{\n\t\t\t\ttype: 'implementation',\n\t\t\t\timplementation: x.implementation\n\t\t\t};\n\t\t} else */ {\n\t\t\tthrow new Error('unexpected type');\n\t\t}\n\t}\n\n\tprivate getAdapterFactoryByType(type: string): vscode.DebugAdapterDescriptorFactory {\n\t\tconst results = this._adapterFactories.filter(p => p.type === type);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].factory;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getAdapterProviderByHandle(handle: number): vscode.DebugAdapterDescriptorFactory {\n\t\tconst results = this._adapterFactories.filter(p => p.handle === handle);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].factory;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getConfigProviderByHandle(handle: number): vscode.DebugConfigurationProvider {\n\t\tconst results = this._configProviders.filter(p => p.handle === handle);\n\t\tif (results.length > 0) {\n\t\t\treturn results[0].provider;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate definesDebugType(ed: IExtensionDescription, type: string) {\n\t\tif (ed.contributes) {\n\t\t\tconst debuggers = <IDebuggerContribution[]>ed.contributes['debuggers'];\n\t\t\tif (debuggers && debuggers.length > 0) {\n\t\t\t\tfor (const dbg of debuggers) {\n\t\t\t\t\t// only debugger contributions with a \"label\" are considered a \"defining\" debugger contribution\n\t\t\t\t\tif (dbg.label && dbg.type) {\n\t\t\t\t\t\tif (dbg.type === type) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate getDebugAdapterTrackers(session: ExtHostDebugSession): Promise<vscode.DebugAdapterTracker> {\n\n\t\tconst config = session.configuration;\n\t\tconst type = config.type;\n\n\t\tconst promises = this._trackerFactories\n\t\t\t.filter(tuple => tuple.type === type || tuple.type === '*')\n\t\t\t.map(tuple => asPromise(() => tuple.factory.createDebugAdapterTracker(session)).then(p => p).catch(err => null));\n\n\t\treturn Promise.race([\n\t\t\tPromise.all(promises).then(trackers => {\n\t\t\t\ttrackers = trackers.filter(t => t);\t// filter null\n\t\t\t\tif (trackers.length > 0) {\n\t\t\t\t\treturn new MultiTracker(trackers);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\treject(new Error('timeout'));\n\t\t\t\t}, 1000);\n\t\t\t})\n\t\t]).catch(err => {\n\t\t\t// ignore errors\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate async getAdapterDescriptor(adapterProvider: vscode.DebugAdapterDescriptorFactory, session: ExtHostDebugSession): Promise<vscode.DebugAdapterDescriptor> {\n\n\t\t// a \"debugServer\" attribute in the launch config takes precedence\n\t\tconst serverPort = session.configuration.debugServer;\n\t\tif (typeof serverPort === 'number') {\n\t\t\treturn Promise.resolve(new DebugAdapterServer(serverPort));\n\t\t}\n\n\t\t// TODO@AW legacy\n\t\tconst pairs = this._configProviders.filter(p => p.type === session.type);\n\t\tif (pairs.length > 0) {\n\t\t\tif (pairs[0].provider.debugAdapterExecutable) {\n\t\t\t\treturn asPromise(() => pairs[0].provider.debugAdapterExecutable(session.workspaceFolder, CancellationToken.None));\n\t\t\t}\n\t\t}\n\n\t\tif (adapterProvider) {\n\t\t\tconst extensionRegistry = await this._extensionService.getExtensionRegistry();\n\t\t\treturn asPromise(() => adapterProvider.createDebugAdapterDescriptor(session, this.daExecutableFromPackage(session, extensionRegistry)));\n\t\t}\n\n\t\t// try deprecated command based extension API \"adapterExecutableCommand\" to determine the executable\n\t\t// TODO@AW legacy\n\t\tconst aex = this._aexCommands.get(session.type);\n\t\tif (aex) {\n\t\t\tconst folder = session.workspaceFolder;\n\t\t\tconst rootFolder = folder ? folder.uri.toString() : undefined;\n\t\t\treturn this._commandService.executeCommand(aex, rootFolder).then((ae: { command: string, args: string[] }) => {\n\t\t\t\treturn new DebugAdapterExecutable(ae.command, ae.args || []);\n\t\t\t});\n\t\t}\n\n\t\t// fallback: use executable information from package.json\n\t\tconst extensionRegistry = await this._extensionService.getExtensionRegistry();\n\t\treturn Promise.resolve(this.daExecutableFromPackage(session, extensionRegistry));\n\t}\n\n\tprivate daExecutableFromPackage(session: ExtHostDebugSession, extensionRegistry: ExtensionDescriptionRegistry): DebugAdapterExecutable | undefined {\n\t\tconst dae = ExecutableDebugAdapter.platformAdapterExecutable(extensionRegistry.getAllExtensionDescriptions(), session.type);\n\t\tif (dae) {\n\t\t\treturn new DebugAdapterExecutable(dae.command, dae.args, dae.options);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate startBreakpoints() {\n\t\tif (!this._breakpointEventsActive) {\n\t\t\tthis._breakpointEventsActive = true;\n\t\t\tthis._debugServiceProxy.$startBreakpointEvents();\n\t\t}\n\t}\n\n\tprivate fireBreakpointChanges(added: vscode.Breakpoint[], removed: vscode.Breakpoint[], changed: vscode.Breakpoint[]) {\n\t\tif (added.length > 0 || removed.length > 0 || changed.length > 0) {\n\t\t\tthis._onDidChangeBreakpoints.fire(Object.freeze({\n\t\t\t\tadded,\n\t\t\t\tremoved,\n\t\t\t\tchanged,\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async getSession(dto: IDebugSessionDto): Promise<ExtHostDebugSession> {\n\t\tif (dto) {\n\t\t\tif (typeof dto === 'string') {\n\t\t\t\treturn this._debugSessions.get(dto);\n\t\t\t} else {\n\t\t\t\tlet ds = this._debugSessions.get(dto.id);\n\t\t\t\tif (!ds) {\n\t\t\t\t\tconst folder = await this.getFolder(dto.folderUri);\n\t\t\t\t\tds = new ExtHostDebugSession(this._debugServiceProxy, dto.id, dto.type, dto.name, folder, dto.configuration);\n\t\t\t\t\tthis._debugSessions.set(ds.id, ds);\n\t\t\t\t\tthis._debugServiceProxy.$sessionCached(ds.id);\n\t\t\t\t}\n\t\t\t\treturn ds;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate getFolder(_folderUri: UriComponents | undefined): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tif (_folderUri) {\n\t\t\tconst folderURI = URI.revive(_folderUri);\n\t\t\treturn this._workspaceService.resolveWorkspaceFolder(folderURI);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport class ExtHostDebugSession implements vscode.DebugSession {\n\n\tconstructor(\n\t\tprivate _debugServiceProxy: MainThreadDebugServiceShape,\n\t\tprivate _id: DebugSessionUUID,\n\t\tprivate _type: string,\n\t\tprivate _name: string,\n\t\tprivate _workspaceFolder: vscode.WorkspaceFolder | undefined,\n\t\tprivate _configuration: vscode.DebugConfiguration) {\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get type(): string {\n\t\treturn this._type;\n\t}\n\n\tpublic get name(): string {\n\t\treturn this._name;\n\t}\n\n\tpublic get workspaceFolder(): vscode.WorkspaceFolder | undefined {\n\t\treturn this._workspaceFolder;\n\t}\n\n\tpublic get configuration(): vscode.DebugConfiguration {\n\t\treturn this._configuration;\n\t}\n\n\tpublic customRequest(command: string, args: any): Promise<any> {\n\t\treturn this._debugServiceProxy.$customDebugAdapterRequest(this._id, command, args);\n\t}\n}\n\nexport class ExtHostDebugConsole implements vscode.DebugConsole {\n\n\tprivate _debugServiceProxy: MainThreadDebugServiceShape;\n\n\tconstructor(proxy: MainThreadDebugServiceShape) {\n\t\tthis._debugServiceProxy = proxy;\n\t}\n\n\tappend(value: string): void {\n\t\tthis._debugServiceProxy.$appendDebugConsole(value);\n\t}\n\n\tappendLine(value: string): void {\n\t\tthis.append(value + '\\n');\n\t}\n}\n\nexport class ExtHostVariableResolverService extends AbstractVariableResolverService {\n\n\tconstructor(folders: vscode.WorkspaceFolder[], editorService: ExtHostDocumentsAndEditors, configurationService: ExtHostConfigProvider) {\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI => {\n\t\t\t\tconst found = folders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn folders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI, section: string) => {\n\t\t\t\treturn configurationService.getConfiguration(undefined, folderUri).get<string>(section);\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn process.env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\tconst resource = activeEditor.document.uri;\n\t\t\t\t\tif (resource.scheme === Schemas.file) {\n\t\t\t\t\t\treturn path.normalize(resource.fsPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor && !activeEditor.selection.isEmpty) {\n\t\t\t\t\treturn activeEditor.document.getText(activeEditor.selection);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetLineNumber: (): string => {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\treturn String(activeEditor.selection.end.line + 1);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}, process.env);\n\t}\n}\n\ninterface ConfigProviderTuple {\n\ttype: string;\n\thandle: number;\n\tprovider: vscode.DebugConfigurationProvider;\n}\n\ninterface DescriptorFactoryTuple {\n\ttype: string;\n\thandle: number;\n\tfactory: vscode.DebugAdapterDescriptorFactory;\n}\n\ninterface TrackerFactoryTuple {\n\ttype: string;\n\thandle: number;\n\tfactory: vscode.DebugAdapterTrackerFactory;\n}\n\nclass MultiTracker implements vscode.DebugAdapterTracker {\n\n\tconstructor(private trackers: vscode.DebugAdapterTracker[]) {\n\t}\n\n\tonWillStartSession(): void {\n\t\tthis.trackers.forEach(t => t.onWillStartSession ? t.onWillStartSession() : undefined);\n\t}\n\n\tonWillReceiveMessage(message: any): void {\n\t\tthis.trackers.forEach(t => t.onWillReceiveMessage ? t.onWillReceiveMessage(message) : undefined);\n\t}\n\n\tonDidSendMessage(message: any): void {\n\t\tthis.trackers.forEach(t => t.onDidSendMessage ? t.onDidSendMessage(message) : undefined);\n\t}\n\n\tonWillStopSession(): void {\n\t\tthis.trackers.forEach(t => t.onWillStopSession ? t.onWillStopSession() : undefined);\n\t}\n\n\tonError(error: Error): void {\n\t\tthis.trackers.forEach(t => t.onError ? t.onError(error) : undefined);\n\t}\n\n\tonExit(code: number, signal: string): void {\n\t\tthis.trackers.forEach(t => t.onExit ? t.onExit(code, signal) : undefined);\n\t}\n}\n\ninterface IDapTransport {\n\tstart(cb: (msg: DebugProtocol.ProtocolMessage) => void, errorcb: (event: DebugProtocol.Event) => void);\n\tsend(message: DebugProtocol.ProtocolMessage);\n\tstop(): void;\n}\n\nclass DirectDebugAdapter extends AbstractDebugAdapter implements IDapTransport {\n\n\treadonly onError: Event<Error>;\n\treadonly onExit: Event<number>;\n\n\tprivate _sendUp: (msg: DebugProtocol.ProtocolMessage) => void;\n\n\tconstructor(implementation: any) {\n\t\tsuper();\n\t\tif (implementation.__setTransport) {\n\t\t\timplementation.__setTransport(this);\n\t\t}\n\t}\n\n\t// IDapTransport\n\tstart(cb: (msg: DebugProtocol.ProtocolMessage) => void, errorcb: (event: DebugProtocol.Event) => void) {\n\t\tthis._sendUp = cb;\n\t}\n\n\t// AbstractDebugAdapter\n\tstartSession(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t// AbstractDebugAdapter\n\t// VSCode -> DA\n\tsendMessage(message: DebugProtocol.ProtocolMessage): void {\n\t\tthis._sendUp(message);\n\t}\n\n\t// AbstractDebugAdapter\n\tstopSession(): Promise<void> {\n\t\tthis.stop();\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t// IDapTransport\n\t// DA -> VSCode\n\tsend(message: DebugProtocol.ProtocolMessage) {\n\t\tthis.acceptMessage(message);\n\t}\n\n\t// IDapTransport\n\tstop(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { MainContext, IMainContext, ExtHostDecorationsShape, MainThreadDecorationsShape, DecorationData, DecorationRequest, DecorationReply } from 'vs/workbench/api/node/extHost.protocol';\nimport { Disposable } from 'vs/workbench/api/node/extHostTypes';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\ninterface ProviderData {\n\tprovider: vscode.DecorationProvider;\n\textensionId: ExtensionIdentifier;\n}\n\nexport class ExtHostDecorations implements ExtHostDecorationsShape {\n\n\tprivate static _handlePool = 0;\n\n\tprivate readonly _provider = new Map<number, ProviderData>();\n\tprivate readonly _proxy: MainThreadDecorationsShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDecorations);\n\t}\n\n\tregisterDecorationProvider(provider: vscode.DecorationProvider, extensionId: ExtensionIdentifier): vscode.Disposable {\n\t\tconst handle = ExtHostDecorations._handlePool++;\n\t\tthis._provider.set(handle, { provider, extensionId });\n\t\tthis._proxy.$registerDecorationProvider(handle, extensionId.value);\n\n\t\tconst listener = provider.onDidChangeDecorations(e => {\n\t\t\tthis._proxy.$onDidChange(handle, !e ? null : Array.isArray(e) ? e : [e]);\n\t\t});\n\n\t\treturn new Disposable(() => {\n\t\t\tlistener.dispose();\n\t\t\tthis._proxy.$unregisterDecorationProvider(handle);\n\t\t\tthis._provider.delete(handle);\n\t\t});\n\t}\n\n\t$provideDecorations(requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply> {\n\t\tconst result: DecorationReply = Object.create(null);\n\t\treturn Promise.all(requests.map(request => {\n\t\t\tconst { handle, uri, id } = request;\n\t\t\tconst entry = this._provider.get(handle);\n\t\t\tif (!entry) {\n\t\t\t\t// might have been unregistered in the meantime\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst { provider, extensionId } = entry;\n\t\t\treturn Promise.resolve(provider.provideDecoration(URI.revive(uri), token)).then(data => {\n\t\t\t\tif (data && data.letter && data.letter.length !== 1) {\n\t\t\t\t\tconsole.warn(`INVALID decoration from extension '${extensionId.value}'. The 'letter' must be set and be one character, not '${data.letter}'.`);\n\t\t\t\t}\n\t\t\t\tif (data) {\n\t\t\t\t\tresult[id] = <DecorationData>[data.priority, data.bubble, data.title, data.letter, data.color, data.source];\n\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\n\t\t})).then(() => {\n\t\t\treturn result;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IMarkerData, MarkerSeverity } from 'vs/platform/markers/common/markers';\nimport { URI } from 'vs/base/common/uri';\nimport * as vscode from 'vscode';\nimport { MainContext, MainThreadDiagnosticsShape, ExtHostDiagnosticsShape, IMainContext } from './extHost.protocol';\nimport { DiagnosticSeverity } from './extHostTypes';\nimport * as converter from './extHostTypeConverters';\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { keys } from 'vs/base/common/map';\n\nexport class DiagnosticCollection implements vscode.DiagnosticCollection {\n\n\tprivate readonly _name: string;\n\tprivate readonly _owner: string;\n\tprivate readonly _maxDiagnosticsPerFile: number;\n\tprivate readonly _onDidChangeDiagnostics: Emitter<(vscode.Uri | string)[]>;\n\tprivate readonly _proxy: MainThreadDiagnosticsShape;\n\n\tprivate _isDisposed = false;\n\tprivate _data = new Map<string, vscode.Diagnostic[]>();\n\n\tconstructor(name: string, owner: string, maxDiagnosticsPerFile: number, proxy: MainThreadDiagnosticsShape, onDidChangeDiagnostics: Emitter<(vscode.Uri | string)[]>) {\n\t\tthis._name = name;\n\t\tthis._owner = owner;\n\t\tthis._maxDiagnosticsPerFile = maxDiagnosticsPerFile;\n\t\tthis._proxy = proxy;\n\t\tthis._onDidChangeDiagnostics = onDidChangeDiagnostics;\n\t}\n\n\tdispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._onDidChangeDiagnostics.fire(keys(this._data));\n\t\t\tthis._proxy.$clear(this._owner);\n\t\t\tthis._data = undefined!;\n\t\t\tthis._isDisposed = true;\n\t\t}\n\t}\n\n\tget name(): string {\n\t\tthis._checkDisposed();\n\t\treturn this._name;\n\t}\n\n\tset(uri: vscode.Uri, diagnostics: vscode.Diagnostic[]): void;\n\tset(entries: [vscode.Uri, vscode.Diagnostic[]][]): void;\n\tset(first: vscode.Uri | [vscode.Uri, vscode.Diagnostic[]][], diagnostics?: vscode.Diagnostic[]) {\n\n\t\tif (!first) {\n\t\t\t// this set-call is a clear-call\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\n\t\t// the actual implementation for #set\n\n\t\tthis._checkDisposed();\n\t\tlet toSync: vscode.Uri[] = [];\n\n\t\tif (first instanceof URI) {\n\n\t\t\tif (!diagnostics) {\n\t\t\t\t// remove this entry\n\t\t\t\tthis.delete(first);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update single row\n\t\t\tthis._data.set(first.toString(), diagnostics.slice());\n\t\t\ttoSync = [first];\n\n\t\t} else if (Array.isArray(first)) {\n\t\t\t// update many rows\n\t\t\ttoSync = [];\n\t\t\tlet lastUri: vscode.Uri | undefined;\n\n\t\t\t// ensure stable-sort\n\t\t\tmergeSort(first, DiagnosticCollection._compareIndexedTuplesByUri);\n\n\t\t\tfor (const tuple of first) {\n\t\t\t\tconst [uri, diagnostics] = tuple;\n\t\t\t\tif (!lastUri || uri.toString() !== lastUri.toString()) {\n\t\t\t\t\tif (lastUri && this._data.get(lastUri.toString())!.length === 0) {\n\t\t\t\t\t\tthis._data.delete(lastUri.toString());\n\t\t\t\t\t}\n\t\t\t\t\tlastUri = uri;\n\t\t\t\t\ttoSync.push(uri);\n\t\t\t\t\tthis._data.set(uri.toString(), []);\n\t\t\t\t}\n\n\t\t\t\tif (!diagnostics) {\n\t\t\t\t\t// [Uri, undefined] means clear this\n\t\t\t\t\tconst currentDiagnostics = this._data.get(uri.toString());\n\t\t\t\t\tif (currentDiagnostics) {\n\t\t\t\t\t\tcurrentDiagnostics.length = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst currentDiagnostics = this._data.get(uri.toString());\n\t\t\t\t\tif (currentDiagnostics) {\n\t\t\t\t\t\tcurrentDiagnostics.push(...diagnostics);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// send event for extensions\n\t\tthis._onDidChangeDiagnostics.fire(toSync);\n\n\t\t// compute change and send to main side\n\t\tconst entries: [URI, IMarkerData[]][] = [];\n\t\tfor (let uri of toSync) {\n\t\t\tlet marker: IMarkerData[] = [];\n\t\t\tconst diagnostics = this._data.get(uri.toString());\n\t\t\tif (diagnostics) {\n\n\t\t\t\t// no more than N diagnostics per file\n\t\t\t\tif (diagnostics.length > this._maxDiagnosticsPerFile) {\n\t\t\t\t\tmarker = [];\n\t\t\t\t\tconst order = [DiagnosticSeverity.Error, DiagnosticSeverity.Warning, DiagnosticSeverity.Information, DiagnosticSeverity.Hint];\n\t\t\t\t\torderLoop: for (let i = 0; i < 4; i++) {\n\t\t\t\t\t\tfor (let diagnostic of diagnostics) {\n\t\t\t\t\t\t\tif (diagnostic.severity === order[i]) {\n\t\t\t\t\t\t\t\tconst len = marker.push(converter.Diagnostic.from(diagnostic));\n\t\t\t\t\t\t\t\tif (len === this._maxDiagnosticsPerFile) {\n\t\t\t\t\t\t\t\t\tbreak orderLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add 'signal' marker for showing omitted errors/warnings\n\t\t\t\t\tmarker.push({\n\t\t\t\t\t\tseverity: MarkerSeverity.Info,\n\t\t\t\t\t\tmessage: localize({ key: 'limitHit', comment: ['amount of errors/warning skipped due to limits'] }, \"Not showing {0} further errors and warnings.\", diagnostics.length - this._maxDiagnosticsPerFile),\n\t\t\t\t\t\tstartLineNumber: marker[marker.length - 1].startLineNumber,\n\t\t\t\t\t\tstartColumn: marker[marker.length - 1].startColumn,\n\t\t\t\t\t\tendLineNumber: marker[marker.length - 1].endLineNumber,\n\t\t\t\t\t\tendColumn: marker[marker.length - 1].endColumn\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tmarker = diagnostics.map(diag => converter.Diagnostic.from(diag));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tentries.push([uri, marker]);\n\t\t}\n\n\t\tthis._proxy.$changeMany(this._owner, entries);\n\t}\n\n\tdelete(uri: vscode.Uri): void {\n\t\tthis._checkDisposed();\n\t\tthis._onDidChangeDiagnostics.fire([uri]);\n\t\tthis._data.delete(uri.toString());\n\t\tthis._proxy.$changeMany(this._owner, [[uri, undefined]]);\n\t}\n\n\tclear(): void {\n\t\tthis._checkDisposed();\n\t\tthis._onDidChangeDiagnostics.fire(keys(this._data));\n\t\tthis._data.clear();\n\t\tthis._proxy.$clear(this._owner);\n\t}\n\n\tforEach(callback: (uri: URI, diagnostics: vscode.Diagnostic[], collection: DiagnosticCollection) => any, thisArg?: any): void {\n\t\tthis._checkDisposed();\n\t\tthis._data.forEach((value, key) => {\n\t\t\tconst uri = URI.parse(key);\n\t\t\tcallback.apply(thisArg, [uri, this.get(uri), this]);\n\t\t});\n\t}\n\n\tget(uri: URI): vscode.Diagnostic[] {\n\t\tthis._checkDisposed();\n\t\tconst result = this._data.get(uri.toString());\n\t\tif (Array.isArray(result)) {\n\t\t\treturn <vscode.Diagnostic[]>Object.freeze(result.slice(0));\n\t\t}\n\t\treturn [];\n\t}\n\n\thas(uri: URI): boolean {\n\t\tthis._checkDisposed();\n\t\treturn Array.isArray(this._data.get(uri.toString()));\n\t}\n\n\tprivate _checkDisposed() {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('illegal state - object is disposed');\n\t\t}\n\t}\n\n\tprivate static _compareIndexedTuplesByUri(a: [vscode.Uri, vscode.Diagnostic[]], b: [vscode.Uri, vscode.Diagnostic[]]): number {\n\t\tif (a[0].toString() < b[0].toString()) {\n\t\t\treturn -1;\n\t\t} else if (a[0].toString() > b[0].toString()) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nexport class ExtHostDiagnostics implements ExtHostDiagnosticsShape {\n\n\tprivate static _idPool: number = 0;\n\tprivate static readonly _maxDiagnosticsPerFile: number = 1000;\n\n\tprivate readonly _proxy: MainThreadDiagnosticsShape;\n\tprivate readonly _collections = new Map<string, DiagnosticCollection>();\n\tprivate readonly _onDidChangeDiagnostics = new Emitter<(vscode.Uri | string)[]>();\n\n\tstatic _debouncer(last: (vscode.Uri | string)[], current: (vscode.Uri | string)[]): (vscode.Uri | string)[] {\n\t\tif (!last) {\n\t\t\treturn current;\n\t\t} else {\n\t\t\treturn last.concat(current);\n\t\t}\n\t}\n\n\tstatic _mapper(last: (vscode.Uri | string)[]): { uris: vscode.Uri[] } {\n\t\tconst uris: vscode.Uri[] = [];\n\t\tconst map = new Set<string>();\n\t\tfor (const uri of last) {\n\t\t\tif (typeof uri === 'string') {\n\t\t\t\tif (!map.has(uri)) {\n\t\t\t\t\tmap.add(uri);\n\t\t\t\t\turis.push(URI.parse(uri));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!map.has(uri.toString())) {\n\t\t\t\t\tmap.add(uri.toString());\n\t\t\t\t\turis.push(uri);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tObject.freeze(uris);\n\t\treturn { uris };\n\t}\n\n\treadonly onDidChangeDiagnostics: Event<vscode.DiagnosticChangeEvent> = Event.map(Event.debounce(this._onDidChangeDiagnostics.event, ExtHostDiagnostics._debouncer, 50), ExtHostDiagnostics._mapper);\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDiagnostics);\n\t}\n\n\tcreateDiagnosticCollection(name?: string): vscode.DiagnosticCollection {\n\t\tlet { _collections, _proxy, _onDidChangeDiagnostics } = this;\n\t\tlet owner: string;\n\t\tif (!name) {\n\t\t\tname = '_generated_diagnostic_collection_name_#' + ExtHostDiagnostics._idPool++;\n\t\t\towner = name;\n\t\t} else if (!_collections.has(name)) {\n\t\t\towner = name;\n\t\t} else {\n\t\t\tconsole.warn(`DiagnosticCollection with name '${name}' does already exist.`);\n\t\t\tdo {\n\t\t\t\towner = name + ExtHostDiagnostics._idPool++;\n\t\t\t} while (_collections.has(owner));\n\t\t}\n\n\t\tconst result = new class extends DiagnosticCollection {\n\t\t\tconstructor() {\n\t\t\t\tsuper(name!, owner, ExtHostDiagnostics._maxDiagnosticsPerFile, _proxy, _onDidChangeDiagnostics);\n\t\t\t\t_collections.set(owner, this);\n\t\t\t}\n\t\t\tdispose() {\n\t\t\t\tsuper.dispose();\n\t\t\t\t_collections.delete(owner);\n\t\t\t}\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tgetDiagnostics(resource: vscode.Uri): vscode.Diagnostic[];\n\tgetDiagnostics(): [vscode.Uri, vscode.Diagnostic[]][];\n\tgetDiagnostics(resource?: vscode.Uri): vscode.Diagnostic[] | [vscode.Uri, vscode.Diagnostic[]][];\n\tgetDiagnostics(resource?: vscode.Uri): vscode.Diagnostic[] | [vscode.Uri, vscode.Diagnostic[]][] {\n\t\tif (resource) {\n\t\t\treturn this._getDiagnostics(resource);\n\t\t} else {\n\t\t\tconst index = new Map<string, number>();\n\t\t\tconst res: [vscode.Uri, vscode.Diagnostic[]][] = [];\n\t\t\tthis._collections.forEach(collection => {\n\t\t\t\tcollection.forEach((uri, diagnostics) => {\n\t\t\t\t\tlet idx = index.get(uri.toString());\n\t\t\t\t\tif (typeof idx === 'undefined') {\n\t\t\t\t\t\tidx = res.length;\n\t\t\t\t\t\tindex.set(uri.toString(), idx);\n\t\t\t\t\t\tres.push([uri, []]);\n\t\t\t\t\t}\n\t\t\t\t\tres[idx][1] = res[idx][1].concat(...diagnostics);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _getDiagnostics(resource: vscode.Uri): vscode.Diagnostic[] {\n\t\tlet res: vscode.Diagnostic[] = [];\n\t\tthis._collections.forEach(collection => {\n\t\t\tif (collection.has(resource)) {\n\t\t\t\tres = res.concat(collection.get(resource));\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { MainContext, MainThreadDiaglogsShape, IMainContext } from 'vs/workbench/api/node/extHost.protocol';\n\nexport class ExtHostDialogs {\n\n\tprivate readonly _proxy: MainThreadDiaglogsShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDialogs);\n\t}\n\n\tshowOpenDialog(options: vscode.OpenDialogOptions): Promise<URI[] | undefined> {\n\t\treturn this._proxy.$showOpenDialog(options).then(filepaths => {\n\t\t\treturn filepaths ? filepaths.map(URI.revive) : undefined;\n\t\t});\n\t}\n\n\tshowSaveDialog(options: vscode.SaveDialogOptions): Promise<URI | undefined> {\n\t\treturn this._proxy.$showSaveDialog(options).then(filepath => {\n\t\t\treturn filepath ? URI.revive(filepath) : undefined;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Disposable } from 'vs/workbench/api/node/extHostTypes';\nimport * as vscode from 'vscode';\nimport { MainContext, ExtHostDocumentContentProvidersShape, MainThreadDocumentContentProvidersShape, IMainContext } from './extHost.protocol';\nimport { ExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport class ExtHostDocumentContentProvider implements ExtHostDocumentContentProvidersShape {\n\n\tprivate static _handlePool = 0;\n\n\tprivate readonly _documentContentProviders = new Map<number, vscode.TextDocumentContentProvider>();\n\tprivate readonly _proxy: MainThreadDocumentContentProvidersShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _documentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDocumentContentProviders);\n\t}\n\n\tdispose(): void {\n\t\t// todo@joh\n\t}\n\n\tregisterTextDocumentContentProvider(scheme: string, provider: vscode.TextDocumentContentProvider): vscode.Disposable {\n\t\t// todo@remote\n\t\t// check with scheme from fs-providers!\n\t\tif (scheme === Schemas.file || scheme === Schemas.untitled) {\n\t\t\tthrow new Error(`scheme '${scheme}' already registered`);\n\t\t}\n\n\t\tconst handle = ExtHostDocumentContentProvider._handlePool++;\n\n\t\tthis._documentContentProviders.set(handle, provider);\n\t\tthis._proxy.$registerTextContentProvider(handle, scheme);\n\n\t\tlet subscription: IDisposable | undefined;\n\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\tsubscription = provider.onDidChange(uri => {\n\t\t\t\tif (uri.scheme !== scheme) {\n\t\t\t\t\tthis._logService.warn(`Provider for scheme '${scheme}' is firing event for schema '${uri.scheme}' which will be IGNORED`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this._documentsAndEditors.getDocument(uri)) {\n\t\t\t\t\tthis.$provideTextDocumentContent(handle, uri).then(value => {\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst document = this._documentsAndEditors.getDocument(uri);\n\t\t\t\t\t\tif (!document) {\n\t\t\t\t\t\t\t// disposed in the meantime\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// create lines and compare\n\t\t\t\t\t\tconst lines = value.split(/\\r\\n|\\r|\\n/);\n\n\t\t\t\t\t\t// broadcast event when content changed\n\t\t\t\t\t\tif (!document.equalLines(lines)) {\n\t\t\t\t\t\t\treturn this._proxy.$onVirtualDocumentChange(uri, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, onUnexpectedError);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn new Disposable(() => {\n\t\t\tif (this._documentContentProviders.delete(handle)) {\n\t\t\t\tthis._proxy.$unregisterTextContentProvider(handle);\n\t\t\t}\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.dispose();\n\t\t\t\tsubscription = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t$provideTextDocumentContent(handle: number, uri: UriComponents): Promise<string | null | undefined> {\n\t\tconst provider = this._documentContentProviders.get(handle);\n\t\tif (!provider) {\n\t\t\treturn Promise.reject(new Error(`unsupported uri-scheme: ${uri.scheme}`));\n\t\t}\n\t\treturn Promise.resolve(provider.provideTextDocumentContent(URI.revive(uri), CancellationToken.None));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport { ExtHostDocumentsShape, IMainContext, MainContext, MainThreadDocumentsShape } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostDocumentData, setWordDefinitionFor } from 'vs/workbench/api/node/extHostDocumentData';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/node/extHostDocumentsAndEditors';\nimport * as TypeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport * as vscode from 'vscode';\n\nexport class ExtHostDocuments implements ExtHostDocumentsShape {\n\n\tprivate _onDidAddDocument = new Emitter<vscode.TextDocument>();\n\tprivate _onDidRemoveDocument = new Emitter<vscode.TextDocument>();\n\tprivate _onDidChangeDocument = new Emitter<vscode.TextDocumentChangeEvent>();\n\tprivate _onDidSaveDocument = new Emitter<vscode.TextDocument>();\n\n\treadonly onDidAddDocument: Event<vscode.TextDocument> = this._onDidAddDocument.event;\n\treadonly onDidRemoveDocument: Event<vscode.TextDocument> = this._onDidRemoveDocument.event;\n\treadonly onDidChangeDocument: Event<vscode.TextDocumentChangeEvent> = this._onDidChangeDocument.event;\n\treadonly onDidSaveDocument: Event<vscode.TextDocument> = this._onDidSaveDocument.event;\n\n\tprivate _toDispose: IDisposable[];\n\tprivate _proxy: MainThreadDocumentsShape;\n\tprivate _documentsAndEditors: ExtHostDocumentsAndEditors;\n\tprivate _documentLoader = new Map<string, Promise<ExtHostDocumentData>>();\n\n\tconstructor(mainContext: IMainContext, documentsAndEditors: ExtHostDocumentsAndEditors) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDocuments);\n\t\tthis._documentsAndEditors = documentsAndEditors;\n\n\t\tthis._toDispose = [\n\t\t\tthis._documentsAndEditors.onDidRemoveDocuments(documents => {\n\t\t\t\tfor (const data of documents) {\n\t\t\t\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tthis._documentsAndEditors.onDidAddDocuments(documents => {\n\t\t\t\tfor (const data of documents) {\n\t\t\t\t\tthis._onDidAddDocument.fire(data.document);\n\t\t\t\t}\n\t\t\t})\n\t\t];\n\t}\n\n\tpublic dispose(): void {\n\t\tdispose(this._toDispose);\n\t}\n\n\tpublic getAllDocumentData(): ExtHostDocumentData[] {\n\t\treturn this._documentsAndEditors.allDocuments();\n\t}\n\n\tpublic getDocumentData(resource: vscode.Uri): ExtHostDocumentData | undefined {\n\t\tif (!resource) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst data = this._documentsAndEditors.getDocument(resource);\n\t\tif (data) {\n\t\t\treturn data;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getDocument(resource: vscode.Uri): vscode.TextDocument {\n\t\tconst data = this.getDocumentData(resource);\n\t\tif (!data || !data.document) {\n\t\t\tthrow new Error('Unable to retrieve document from URI');\n\t\t}\n\t\treturn data.document;\n\t}\n\n\tpublic ensureDocumentData(uri: URI): Promise<ExtHostDocumentData> {\n\n\t\tconst cached = this._documentsAndEditors.getDocument(uri);\n\t\tif (cached) {\n\t\t\treturn Promise.resolve(cached);\n\t\t}\n\n\t\tlet promise = this._documentLoader.get(uri.toString());\n\t\tif (!promise) {\n\t\t\tpromise = this._proxy.$tryOpenDocument(uri).then(() => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\treturn this._documentsAndEditors.getDocument(uri);\n\t\t\t}, err => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t\tthis._documentLoader.set(uri.toString(), promise);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tpublic createDocumentData(options?: { language?: string; content?: string }): Promise<URI> {\n\t\treturn this._proxy.$tryCreateDocument(options).then(data => URI.revive(data));\n\t}\n\n\tpublic $acceptModelModeChanged(uriComponents: UriComponents, oldModeId: string, newModeId: string): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\t// Treat a mode change as a remove + add\n\n\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\tdata._acceptLanguageId(newModeId);\n\t\tthis._onDidAddDocument.fire(data.document);\n\t}\n\n\tpublic $acceptModelSaved(uriComponents: UriComponents): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tthis.$acceptDirtyStateChanged(uriComponents, false);\n\t\tthis._onDidSaveDocument.fire(data.document);\n\t}\n\n\tpublic $acceptDirtyStateChanged(uriComponents: UriComponents, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tthis._onDidChangeDocument.fire({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: []\n\t\t});\n\t}\n\n\tpublic $acceptModelChanged(uriComponents: UriComponents, events: IModelChangedEvent, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tdata.onEvents(events);\n\t\tthis._onDidChangeDocument.fire({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: events.changes.map((change) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: TypeConverters.Range.to(change.range),\n\t\t\t\t\trangeOffset: change.rangeOffset,\n\t\t\t\t\trangeLength: change.rangeLength,\n\t\t\t\t\ttext: change.text\n\t\t\t\t};\n\t\t\t})\n\t\t});\n\t}\n\n\tpublic setWordDefinitionFor(modeId: string, wordDefinition: RegExp | undefined): void {\n\t\tsetWordDefinitionFor(modeId, wordDefinition);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'vs/base/common/assert';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ExtHostDocumentsAndEditorsShape, IDocumentsAndEditorsDelta, IMainContext, MainContext } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostDocumentData } from 'vs/workbench/api/node/extHostDocumentData';\nimport { ExtHostTextEditor } from 'vs/workbench/api/node/extHostTextEditor';\nimport * as typeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport { Disposable } from 'vs/workbench/api/node/extHostTypes';\n\nexport class ExtHostDocumentsAndEditors implements ExtHostDocumentsAndEditorsShape {\n\n\tprivate _disposables: Disposable[] = [];\n\n\tprivate _activeEditorId: string | null;\n\n\tprivate readonly _editors = new Map<string, ExtHostTextEditor>();\n\tprivate readonly _documents = new Map<string, ExtHostDocumentData>();\n\n\tprivate readonly _onDidAddDocuments = new Emitter<ExtHostDocumentData[]>();\n\tprivate readonly _onDidRemoveDocuments = new Emitter<ExtHostDocumentData[]>();\n\tprivate readonly _onDidChangeVisibleTextEditors = new Emitter<ExtHostTextEditor[]>();\n\tprivate readonly _onDidChangeActiveTextEditor = new Emitter<ExtHostTextEditor | undefined>();\n\n\treadonly onDidAddDocuments: Event<ExtHostDocumentData[]> = this._onDidAddDocuments.event;\n\treadonly onDidRemoveDocuments: Event<ExtHostDocumentData[]> = this._onDidRemoveDocuments.event;\n\treadonly onDidChangeVisibleTextEditors: Event<ExtHostTextEditor[]> = this._onDidChangeVisibleTextEditors.event;\n\treadonly onDidChangeActiveTextEditor: Event<ExtHostTextEditor | undefined> = this._onDidChangeActiveTextEditor.event;\n\n\tconstructor(\n\t\tprivate readonly _mainContext: IMainContext,\n\t) { }\n\n\tdispose() {\n\t\tthis._disposables = dispose(this._disposables);\n\t}\n\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void {\n\n\t\tconst removedDocuments: ExtHostDocumentData[] = [];\n\t\tconst addedDocuments: ExtHostDocumentData[] = [];\n\t\tconst removedEditors: ExtHostTextEditor[] = [];\n\n\t\tif (delta.removedDocuments) {\n\t\t\tfor (const uriComponent of delta.removedDocuments) {\n\t\t\t\tconst uri = URI.revive(uriComponent);\n\t\t\t\tconst id = uri.toString();\n\t\t\t\tconst data = this._documents.get(id);\n\t\t\t\tthis._documents.delete(id);\n\t\t\t\tif (data) {\n\t\t\t\t\tremovedDocuments.push(data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedDocuments) {\n\t\t\tfor (const data of delta.addedDocuments) {\n\t\t\t\tconst resource = URI.revive(data.uri);\n\t\t\t\tassert.ok(!this._documents.has(resource.toString()), `document '${resource} already exists!'`);\n\n\t\t\t\tconst documentData = new ExtHostDocumentData(\n\t\t\t\t\tthis._mainContext.getProxy(MainContext.MainThreadDocuments),\n\t\t\t\t\tresource,\n\t\t\t\t\tdata.lines,\n\t\t\t\t\tdata.EOL,\n\t\t\t\t\tdata.modeId,\n\t\t\t\t\tdata.versionId,\n\t\t\t\t\tdata.isDirty\n\t\t\t\t);\n\t\t\t\tthis._documents.set(resource.toString(), documentData);\n\t\t\t\taddedDocuments.push(documentData);\n\t\t\t}\n\t\t}\n\n\t\tif (delta.removedEditors) {\n\t\t\tfor (const id of delta.removedEditors) {\n\t\t\t\tconst editor = this._editors.get(id);\n\t\t\t\tthis._editors.delete(id);\n\t\t\t\tif (editor) {\n\t\t\t\t\tremovedEditors.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedEditors) {\n\t\t\tfor (const data of delta.addedEditors) {\n\t\t\t\tconst resource = URI.revive(data.documentUri);\n\t\t\t\tassert.ok(this._documents.has(resource.toString()), `document '${resource}' does not exist`);\n\t\t\t\tassert.ok(!this._editors.has(data.id), `editor '${data.id}' already exists!`);\n\n\t\t\t\tconst documentData = this._documents.get(resource.toString())!;\n\t\t\t\tconst editor = new ExtHostTextEditor(\n\t\t\t\t\tthis._mainContext.getProxy(MainContext.MainThreadTextEditors),\n\t\t\t\t\tdata.id,\n\t\t\t\t\tdocumentData,\n\t\t\t\t\tdata.selections.map(typeConverters.Selection.to),\n\t\t\t\t\tdata.options,\n\t\t\t\t\tdata.visibleRanges.map(range => typeConverters.Range.to(range)),\n\t\t\t\t\ttypeof data.editorPosition === 'number' ? typeConverters.ViewColumn.to(data.editorPosition) : undefined\n\t\t\t\t);\n\t\t\t\tthis._editors.set(data.id, editor);\n\t\t\t}\n\t\t}\n\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tassert.ok(delta.newActiveEditor === null || this._editors.has(delta.newActiveEditor), `active editor '${delta.newActiveEditor}' does not exist`);\n\t\t\tthis._activeEditorId = delta.newActiveEditor;\n\t\t}\n\n\t\tdispose(removedDocuments);\n\t\tdispose(removedEditors);\n\n\t\t// now that the internal state is complete, fire events\n\t\tif (delta.removedDocuments) {\n\t\t\tthis._onDidRemoveDocuments.fire(removedDocuments);\n\t\t}\n\t\tif (delta.addedDocuments) {\n\t\t\tthis._onDidAddDocuments.fire(addedDocuments);\n\t\t}\n\n\t\tif (delta.removedEditors || delta.addedEditors) {\n\t\t\tthis._onDidChangeVisibleTextEditors.fire(this.allEditors());\n\t\t}\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tthis._onDidChangeActiveTextEditor.fire(this.activeEditor());\n\t\t}\n\t}\n\n\tgetDocument(uri: URI): ExtHostDocumentData | undefined {\n\t\treturn this._documents.get(uri.toString());\n\t}\n\n\tallDocuments(): ExtHostDocumentData[] {\n\t\tconst result: ExtHostDocumentData[] = [];\n\t\tthis._documents.forEach(data => result.push(data));\n\t\treturn result;\n\t}\n\n\tgetEditor(id: string): ExtHostTextEditor | undefined {\n\t\treturn this._editors.get(id);\n\t}\n\n\tactiveEditor(): ExtHostTextEditor | undefined {\n\t\tif (!this._activeEditorId) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn this._editors.get(this._activeEditorId);\n\t\t}\n\t}\n\n\tallEditors(): ExtHostTextEditor[] {\n\t\tconst result: ExtHostTextEditor[] = [];\n\t\tthis._editors.forEach(data => result.push(data));\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MainContext, IMainContext, ExtHostFileSystemShape, MainThreadFileSystemShape, IFileChangeDto } from './extHost.protocol';\nimport * as vscode from 'vscode';\nimport * as files from 'vs/platform/files/common/files';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { FileChangeType } from 'vs/workbench/api/node/extHostTypes';\nimport * as typeConverter from 'vs/workbench/api/node/extHostTypeConverters';\nimport { ExtHostLanguageFeatures } from 'vs/workbench/api/node/extHostLanguageFeatures';\nimport { Schemas } from 'vs/base/common/network';\nimport { ResourceLabelFormatter } from 'vs/platform/label/common/label';\nimport { State, StateMachine, LinkComputer, Edge } from 'vs/editor/common/modes/linkComputer';\nimport { commonPrefixLength } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\n\nclass FsLinkProvider {\n\n\tprivate _schemes: string[] = [];\n\tprivate _stateMachine?: StateMachine;\n\n\tadd(scheme: string): void {\n\t\tthis._stateMachine = undefined;\n\t\tthis._schemes.push(scheme);\n\t}\n\n\tdelete(scheme: string): void {\n\t\tconst idx = this._schemes.indexOf(scheme);\n\t\tif (idx >= 0) {\n\t\t\tthis._schemes.splice(idx, 1);\n\t\t\tthis._stateMachine = undefined;\n\t\t}\n\t}\n\n\tprivate _initStateMachine(): void {\n\t\tif (!this._stateMachine) {\n\n\t\t\t// sort and compute common prefix with previous scheme\n\t\t\t// then build state transitions based on the data\n\t\t\tconst schemes = this._schemes.sort();\n\t\t\tconst edges: Edge[] = [];\n\t\t\tlet prevScheme: string | undefined;\n\t\t\tlet prevState: State;\n\t\t\tlet nextState = State.LastKnownState;\n\t\t\tfor (const scheme of schemes) {\n\n\t\t\t\t// skip the common prefix of the prev scheme\n\t\t\t\t// and continue with its last state\n\t\t\t\tlet pos = !prevScheme ? 0 : commonPrefixLength(prevScheme, scheme);\n\t\t\t\tif (pos === 0) {\n\t\t\t\t\tprevState = State.Start;\n\t\t\t\t} else {\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tfor (; pos < scheme.length; pos++) {\n\t\t\t\t\t// keep creating new (next) states until the\n\t\t\t\t\t// end (and the BeforeColon-state) is reached\n\t\t\t\t\tif (pos + 1 === scheme.length) {\n\t\t\t\t\t\tnextState = State.BeforeColon;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextState += 1;\n\t\t\t\t\t}\n\t\t\t\t\tedges.push([prevState, scheme.toUpperCase().charCodeAt(pos), nextState]);\n\t\t\t\t\tedges.push([prevState, scheme.toLowerCase().charCodeAt(pos), nextState]);\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tprevScheme = scheme;\n\t\t\t}\n\n\t\t\t// all link must match this pattern `<scheme>:/<more>`\n\t\t\tedges.push([State.BeforeColon, CharCode.Colon, State.AfterColon]);\n\t\t\tedges.push([State.AfterColon, CharCode.Slash, State.End]);\n\n\t\t\tthis._stateMachine = new StateMachine(edges);\n\t\t}\n\t}\n\n\tprovideDocumentLinks(document: vscode.TextDocument): vscode.ProviderResult<vscode.DocumentLink[]> {\n\t\tthis._initStateMachine();\n\n\t\tconst result: vscode.DocumentLink[] = [];\n\t\tconst links = LinkComputer.computeLinks({\n\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\treturn document.lineAt(lineNumber - 1).text;\n\t\t\t},\n\t\t\tgetLineCount(): number {\n\t\t\t\treturn document.lineCount;\n\t\t\t}\n\t\t}, this._stateMachine);\n\n\t\tfor (const link of links) {\n\t\t\tconst docLink = typeConverter.DocumentLink.to(link);\n\t\t\tif (docLink.target) {\n\t\t\t\tresult.push(docLink);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ExtHostFileSystem implements ExtHostFileSystemShape {\n\n\tprivate readonly _proxy: MainThreadFileSystemShape;\n\tprivate readonly _linkProvider = new FsLinkProvider();\n\tprivate readonly _fsProvider = new Map<number, vscode.FileSystemProvider>();\n\tprivate readonly _usedSchemes = new Set<string>();\n\tprivate readonly _watches = new Map<number, IDisposable>();\n\n\tprivate _linkProviderRegistration: IDisposable;\n\t// Used as a handle both for file system providers and resource label formatters (being lazy)\n\tprivate _handlePool: number = 0;\n\n\tconstructor(mainContext: IMainContext, private _extHostLanguageFeatures: ExtHostLanguageFeatures) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadFileSystem);\n\t\tthis._usedSchemes.add(Schemas.file);\n\t\tthis._usedSchemes.add(Schemas.untitled);\n\t\tthis._usedSchemes.add(Schemas.vscode);\n\t\tthis._usedSchemes.add(Schemas.inMemory);\n\t\tthis._usedSchemes.add(Schemas.internal);\n\t\tthis._usedSchemes.add(Schemas.http);\n\t\tthis._usedSchemes.add(Schemas.https);\n\t\tthis._usedSchemes.add(Schemas.mailto);\n\t\tthis._usedSchemes.add(Schemas.data);\n\t\tthis._usedSchemes.add(Schemas.command);\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._linkProviderRegistration);\n\t}\n\n\tprivate _registerLinkProviderIfNotYetRegistered(): void {\n\t\tif (!this._linkProviderRegistration) {\n\t\t\tthis._linkProviderRegistration = this._extHostLanguageFeatures.registerDocumentLinkProvider(undefined, '*', this._linkProvider);\n\t\t}\n\t}\n\n\tregisterFileSystemProvider(scheme: string, provider: vscode.FileSystemProvider, options: { isCaseSensitive?: boolean, isReadonly?: boolean } = {}) {\n\n\t\tif (this._usedSchemes.has(scheme)) {\n\t\t\tthrow new Error(`a provider for the scheme '${scheme}' is already registered`);\n\t\t}\n\n\t\t//\n\t\tthis._registerLinkProviderIfNotYetRegistered();\n\n\t\tconst handle = this._handlePool++;\n\t\tthis._linkProvider.add(scheme);\n\t\tthis._usedSchemes.add(scheme);\n\t\tthis._fsProvider.set(handle, provider);\n\n\t\tlet capabilites = files.FileSystemProviderCapabilities.FileReadWrite;\n\t\tif (options.isCaseSensitive) {\n\t\t\tcapabilites += files.FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\t\tif (options.isReadonly) {\n\t\t\tcapabilites += files.FileSystemProviderCapabilities.Readonly;\n\t\t}\n\t\tif (typeof provider.copy === 'function') {\n\t\t\tcapabilites += files.FileSystemProviderCapabilities.FileFolderCopy;\n\t\t}\n\t\tif (typeof provider.open === 'function' && typeof provider.close === 'function'\n\t\t\t&& typeof provider.read === 'function' && typeof provider.write === 'function'\n\t\t) {\n\t\t\tcapabilites += files.FileSystemProviderCapabilities.FileOpenReadWriteClose;\n\t\t}\n\n\t\tthis._proxy.$registerFileSystemProvider(handle, scheme, capabilites);\n\n\t\tconst subscription = provider.onDidChangeFile(event => {\n\t\t\tconst mapped: IFileChangeDto[] = [];\n\t\t\tfor (const e of event) {\n\t\t\t\tlet { uri: resource, type } = e;\n\t\t\t\tif (resource.scheme !== scheme) {\n\t\t\t\t\t// dropping events for wrong scheme\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet newType: files.FileChangeType | undefined;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase FileChangeType.Changed:\n\t\t\t\t\t\tnewType = files.FileChangeType.UPDATED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Created:\n\t\t\t\t\t\tnewType = files.FileChangeType.ADDED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Deleted:\n\t\t\t\t\t\tnewType = files.FileChangeType.DELETED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Unknown FileChangeType');\n\t\t\t\t}\n\t\t\t\tmapped.push({ resource, type: newType });\n\t\t\t}\n\t\t\tthis._proxy.$onFileSystemChange(handle, mapped);\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\tsubscription.dispose();\n\t\t\tthis._linkProvider.delete(scheme);\n\t\t\tthis._usedSchemes.delete(scheme);\n\t\t\tthis._fsProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\tregisterResourceLabelFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tconst handle = this._handlePool++;\n\t\tthis._proxy.$registerResourceLabelFormatter(handle, formatter);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unregisterResourceLabelFormatter(handle);\n\t\t});\n\t}\n\n\tprivate static _asIStat(stat: vscode.FileStat): files.IStat {\n\t\tconst { type, ctime, mtime, size } = stat;\n\t\treturn { type, ctime, mtime, size };\n\t}\n\n\t$stat(handle: number, resource: UriComponents): Promise<files.IStat> {\n\t\treturn Promise.resolve(this.getProvider(handle).stat(URI.revive(resource))).then(ExtHostFileSystem._asIStat);\n\t}\n\n\t$readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]> {\n\t\treturn Promise.resolve(this.getProvider(handle).readDirectory(URI.revive(resource)));\n\t}\n\n\t$readFile(handle: number, resource: UriComponents): Promise<Buffer> {\n\t\treturn Promise.resolve(this.getProvider(handle).readFile(URI.revive(resource))).then(data => {\n\t\t\treturn Buffer.isBuffer(data) ? data : Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n\t\t});\n\t}\n\n\t$writeFile(handle: number, resource: UriComponents, content: Buffer, opts: files.FileWriteOptions): Promise<void> {\n\t\treturn Promise.resolve(this.getProvider(handle).writeFile(URI.revive(resource), content, opts));\n\t}\n\n\t$delete(handle: number, resource: UriComponents, opts: files.FileDeleteOptions): Promise<void> {\n\t\treturn Promise.resolve(this.getProvider(handle).delete(URI.revive(resource), opts));\n\t}\n\n\t$rename(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.FileOverwriteOptions): Promise<void> {\n\t\treturn Promise.resolve(this.getProvider(handle).rename(URI.revive(oldUri), URI.revive(newUri), opts));\n\t}\n\n\t$copy(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.FileOverwriteOptions): Promise<void> {\n\t\tconst provider = this.getProvider(handle);\n\t\tif (!provider.copy) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"copy\"');\n\t\t}\n\t\treturn Promise.resolve(provider.copy(URI.revive(oldUri), URI.revive(newUri), opts));\n\t}\n\n\t$mkdir(handle: number, resource: UriComponents): Promise<void> {\n\t\treturn Promise.resolve(this.getProvider(handle).createDirectory(URI.revive(resource)));\n\t}\n\n\t$watch(handle: number, session: number, resource: UriComponents, opts: files.IWatchOptions): void {\n\t\tconst subscription = this.getProvider(handle).watch(URI.revive(resource), opts);\n\t\tthis._watches.set(session, subscription);\n\t}\n\n\t$unwatch(_handle: number, session: number): void {\n\t\tconst subscription = this._watches.get(session);\n\t\tif (subscription) {\n\t\t\tsubscription.dispose();\n\t\t\tthis._watches.delete(session);\n\t\t}\n\t}\n\n\t$open(handle: number, resource: UriComponents, opts: files.FileOpenOptions): Promise<number> {\n\t\tconst provider = this.getProvider(handle);\n\t\tif (!provider.open) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"open\"');\n\t\t}\n\t\treturn Promise.resolve(provider.open(URI.revive(resource), opts));\n\t}\n\n\t$close(handle: number, fd: number): Promise<void> {\n\t\tconst provider = this.getProvider(handle);\n\t\tif (!provider.close) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"close\"');\n\t\t}\n\t\treturn Promise.resolve(provider.close(fd));\n\t}\n\n\t$read(handle: number, fd: number, pos: number, length: number): Promise<Buffer> {\n\t\tconst provider = this.getProvider(handle);\n\t\tif (!provider.read) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"read\"');\n\t\t}\n\t\tconst data = Buffer.allocUnsafe(length);\n\t\treturn Promise.resolve(provider.read(fd, pos, data, 0, length)).then(read => {\n\t\t\treturn data.slice(0, read); // don't send zeros\n\t\t});\n\t}\n\n\t$write(handle: number, fd: number, pos: number, data: Buffer): Promise<number> {\n\t\tconst provider = this.getProvider(handle);\n\t\tif (!provider.write) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"write\"');\n\t\t}\n\t\treturn Promise.resolve(provider.write(fd, pos, data, 0, data.length));\n\t}\n\n\tprivate getProvider(handle: number): vscode.FileSystemProvider {\n\t\tconst provider = this._fsProvider.get(handle);\n\t\tif (!provider) {\n\t\t\tconst err = new Error();\n\t\t\terr.name = 'ENOPRO';\n\t\t\terr.message = `no provider`;\n\t\t\tthrow err;\n\t\t}\n\t\treturn provider;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten } from 'vs/base/common/arrays';\nimport { AsyncEmitter, Emitter, Event } from 'vs/base/common/event';\nimport { IRelativePattern, parse } from 'vs/base/common/glob';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/node/extHostDocumentsAndEditors';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport * as vscode from 'vscode';\nimport { ExtHostFileSystemEventServiceShape, FileSystemEvents, IMainContext, MainContext, ResourceFileEditDto, ResourceTextEditDto, MainThreadTextEditorsShape } from './extHost.protocol';\nimport * as typeConverter from './extHostTypeConverters';\nimport { Disposable, WorkspaceEdit } from './extHostTypes';\n\nclass FileSystemWatcher implements vscode.FileSystemWatcher {\n\n\tprivate _onDidCreate = new Emitter<vscode.Uri>();\n\tprivate _onDidChange = new Emitter<vscode.Uri>();\n\tprivate _onDidDelete = new Emitter<vscode.Uri>();\n\tprivate _disposable: Disposable;\n\tprivate _config: number;\n\n\tget ignoreCreateEvents(): boolean {\n\t\treturn Boolean(this._config & 0b001);\n\t}\n\n\tget ignoreChangeEvents(): boolean {\n\t\treturn Boolean(this._config & 0b010);\n\t}\n\n\tget ignoreDeleteEvents(): boolean {\n\t\treturn Boolean(this._config & 0b100);\n\t}\n\n\tconstructor(dispatcher: Event<FileSystemEvents>, globPattern: string | IRelativePattern, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean) {\n\n\t\tthis._config = 0;\n\t\tif (ignoreCreateEvents) {\n\t\t\tthis._config += 0b001;\n\t\t}\n\t\tif (ignoreChangeEvents) {\n\t\t\tthis._config += 0b010;\n\t\t}\n\t\tif (ignoreDeleteEvents) {\n\t\t\tthis._config += 0b100;\n\t\t}\n\n\t\tconst parsedPattern = parse(globPattern);\n\n\t\tconst subscription = dispatcher(events => {\n\t\t\tif (!ignoreCreateEvents) {\n\t\t\t\tfor (let created of events.created) {\n\t\t\t\t\tconst uri = URI.revive(created);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidCreate.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreChangeEvents) {\n\t\t\t\tfor (let changed of events.changed) {\n\t\t\t\t\tconst uri = URI.revive(changed);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidChange.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreDeleteEvents) {\n\t\t\t\tfor (let deleted of events.deleted) {\n\t\t\t\t\tconst uri = URI.revive(deleted);\n\t\t\t\t\tif (parsedPattern(uri.fsPath)) {\n\t\t\t\t\t\tthis._onDidDelete.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposable = Disposable.from(this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\n\t}\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n\n\tget onDidCreate(): Event<vscode.Uri> {\n\t\treturn this._onDidCreate.event;\n\t}\n\n\tget onDidChange(): Event<vscode.Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget onDidDelete(): Event<vscode.Uri> {\n\t\treturn this._onDidDelete.event;\n\t}\n}\n\ninterface WillRenameListener {\n\textension: IExtensionDescription;\n\t(e: vscode.FileWillRenameEvent): any;\n}\n\nexport class ExtHostFileSystemEventService implements ExtHostFileSystemEventServiceShape {\n\n\tprivate readonly _onFileEvent = new Emitter<FileSystemEvents>();\n\tprivate readonly _onDidRenameFile = new Emitter<vscode.FileRenameEvent>();\n\tprivate readonly _onWillRenameFile = new AsyncEmitter<vscode.FileWillRenameEvent>();\n\n\treadonly onDidRenameFile: Event<vscode.FileRenameEvent> = this._onDidRenameFile.event;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _mainThreadTextEditors: MainThreadTextEditorsShape = mainContext.getProxy(MainContext.MainThreadTextEditors)\n\t) {\n\t\t//\n\t}\n\n\tpublic createFileSystemWatcher(globPattern: string | IRelativePattern, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): vscode.FileSystemWatcher {\n\t\treturn new FileSystemWatcher(this._onFileEvent.event, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\n\t}\n\n\t$onFileEvent(events: FileSystemEvents) {\n\t\tthis._onFileEvent.fire(events);\n\t}\n\n\t$onFileRename(oldUri: UriComponents, newUri: UriComponents) {\n\t\tthis._onDidRenameFile.fire(Object.freeze({ oldUri: URI.revive(oldUri), newUri: URI.revive(newUri) }));\n\t}\n\n\tgetOnWillRenameFileEvent(extension: IExtensionDescription): Event<vscode.FileWillRenameEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: WillRenameListener = <any>((e: vscode.FileWillRenameEvent) => {\n\t\t\t\tlistener.call(thisArg, e);\n\t\t\t});\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn this._onWillRenameFile.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\t$onWillRename(oldUriDto: UriComponents, newUriDto: UriComponents): Promise<any> {\n\t\tconst oldUri = URI.revive(oldUriDto);\n\t\tconst newUri = URI.revive(newUriDto);\n\n\t\tconst edits: WorkspaceEdit[] = [];\n\t\treturn Promise.resolve(this._onWillRenameFile.fireAsync((bucket, _listener) => {\n\t\t\treturn {\n\t\t\t\toldUri,\n\t\t\t\tnewUri,\n\t\t\t\twaitUntil: (thenable: Promise<vscode.WorkspaceEdit>): void => {\n\t\t\t\t\tif (Object.isFrozen(bucket)) {\n\t\t\t\t\t\tthrow new TypeError('waitUntil cannot be called async');\n\t\t\t\t\t}\n\t\t\t\t\tconst index = bucket.length;\n\t\t\t\t\tconst wrappedThenable = Promise.resolve(thenable).then(result => {\n\t\t\t\t\t\t// ignore all results except for WorkspaceEdits. Those\n\t\t\t\t\t\t// are stored in a spare array\n\t\t\t\t\t\tif (result instanceof WorkspaceEdit) {\n\t\t\t\t\t\t\tedits[index] = result;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbucket.push(wrappedThenable);\n\t\t\t\t}\n\t\t\t};\n\t\t}).then((): any => {\n\t\t\tif (edits.length === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// flatten all WorkspaceEdits collected via waitUntil-call\n\t\t\t// and apply them in one go.\n\t\t\tconst allEdits = new Array<Array<ResourceFileEditDto | ResourceTextEditDto>>();\n\t\t\tfor (let edit of edits) {\n\t\t\t\tif (edit) { // sparse array\n\t\t\t\t\tlet { edits } = typeConverter.WorkspaceEdit.from(edit, this._extHostDocumentsAndEditors);\n\t\t\t\t\tallEdits.push(edits);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._mainThreadTextEditors.$tryApplyWorkspaceEdit({ edits: flatten(allEdits) });\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadLanguagesShape, IMainContext } from './extHost.protocol';\nimport * as vscode from 'vscode';\nimport { ExtHostDocuments } from 'vs/workbench/api/node/extHostDocuments';\n\nexport class ExtHostLanguages {\n\n\tprivate readonly _proxy: MainThreadLanguagesShape;\n\tprivate readonly _documents: ExtHostDocuments;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tdocuments: ExtHostDocuments\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadLanguages);\n\t\tthis._documents = documents;\n\t}\n\n\tgetLanguages(): Promise<string[]> {\n\t\treturn this._proxy.$getLanguages();\n\t}\n\n\tchangeLanguage(uri: vscode.Uri, languageId: string): Promise<vscode.TextDocument | undefined> {\n\t\treturn this._proxy.$changeLanguage(uri, languageId).then(() => {\n\t\t\tconst data = this._documents.getDocumentData(uri);\n\t\t\treturn data ? data.document : undefined;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport Severity from 'vs/base/common/severity';\nimport * as vscode from 'vscode';\nimport { MainContext, MainThreadMessageServiceShape, MainThreadMessageOptions, IMainContext } from './extHost.protocol';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\n\nfunction isMessageItem(item: any): item is vscode.MessageItem {\n\treturn item && item.title;\n}\n\nexport class ExtHostMessageService {\n\n\tprivate _proxy: MainThreadMessageServiceShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadMessageService);\n\t}\n\n\tshowMessage(extension: IExtensionDescription, severity: Severity, message: string, optionsOrFirstItem: vscode.MessageOptions | string, rest: string[]): Promise<string | undefined>;\n\tshowMessage(extension: IExtensionDescription, severity: Severity, message: string, optionsOrFirstItem: vscode.MessageOptions | vscode.MessageItem, rest: vscode.MessageItem[]): Promise<vscode.MessageItem | undefined>;\n\tshowMessage(extension: IExtensionDescription, severity: Severity, message: string, optionsOrFirstItem: vscode.MessageOptions | string | vscode.MessageItem, rest: (string | vscode.MessageItem)[]): Promise<string | vscode.MessageItem | undefined> {\n\n\t\tconst options: MainThreadMessageOptions = { extension };\n\t\tlet items: (string | vscode.MessageItem)[];\n\n\t\tif (typeof optionsOrFirstItem === 'string' || isMessageItem(optionsOrFirstItem)) {\n\t\t\titems = [optionsOrFirstItem, ...rest];\n\t\t} else {\n\t\t\toptions.modal = optionsOrFirstItem && optionsOrFirstItem.modal;\n\t\t\titems = rest;\n\t\t}\n\n\t\tconst commands: { title: string; isCloseAffordance: boolean; handle: number; }[] = [];\n\n\t\tfor (let handle = 0; handle < items.length; handle++) {\n\t\t\tconst command = items[handle];\n\t\t\tif (typeof command === 'string') {\n\t\t\t\tcommands.push({ title: command, handle, isCloseAffordance: false });\n\t\t\t} else if (typeof command === 'object') {\n\t\t\t\tlet { title, isCloseAffordance } = command;\n\t\t\t\tcommands.push({ title, isCloseAffordance: !!isCloseAffordance, handle });\n\t\t\t} else {\n\t\t\t\tconsole.warn('Invalid message item:', command);\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy.$showMessage(severity, message, options, commands).then(handle => {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\treturn items[handle];\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asPromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtHostCommands } from 'vs/workbench/api/node/extHostCommands';\nimport { IExtHostWorkspaceProvider } from 'vs/workbench/api/node/extHostWorkspace';\nimport { InputBox, InputBoxOptions, QuickInput, QuickInputButton, QuickPick, QuickPickItem, QuickPickOptions, WorkspaceFolder, WorkspaceFolderPickOptions } from 'vscode';\nimport { ExtHostQuickOpenShape, IMainContext, MainContext, MainThreadQuickOpenShape, TransferQuickPickItems, TransferQuickInput, TransferQuickInputButton } from './extHost.protocol';\nimport { URI } from 'vs/base/common/uri';\nimport { ThemeIcon, QuickInputButtons } from 'vs/workbench/api/node/extHostTypes';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { coalesce } from 'vs/base/common/arrays';\n\nexport type Item = string | QuickPickItem;\n\nexport class ExtHostQuickOpen implements ExtHostQuickOpenShape {\n\n\tprivate _proxy: MainThreadQuickOpenShape;\n\tprivate _workspace: IExtHostWorkspaceProvider;\n\tprivate _commands: ExtHostCommands;\n\n\tprivate _onDidSelectItem?: (handle: number) => void;\n\tprivate _validateInput?: (input: string) => string | undefined | null | Thenable<string | undefined | null>;\n\n\tprivate _sessions = new Map<number, ExtHostQuickInput>();\n\n\tprivate _instances = 0;\n\n\tconstructor(mainContext: IMainContext, workspace: IExtHostWorkspaceProvider, commands: ExtHostCommands) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadQuickOpen);\n\t\tthis._workspace = workspace;\n\t\tthis._commands = commands;\n\t}\n\n\tshowQuickPick(itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, enableProposedApi: boolean, options: QuickPickOptions & { canPickMany: true; }, token?: CancellationToken): Promise<QuickPickItem[] | undefined>;\n\tshowQuickPick(itemsOrItemsPromise: string[] | Promise<string[]>, enableProposedApi: boolean, options?: QuickPickOptions, token?: CancellationToken): Promise<string | undefined>;\n\tshowQuickPick(itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, enableProposedApi: boolean, options?: QuickPickOptions, token?: CancellationToken): Promise<QuickPickItem | undefined>;\n\tshowQuickPick(itemsOrItemsPromise: Item[] | Promise<Item[]>, enableProposedApi: boolean, options?: QuickPickOptions, token: CancellationToken = CancellationToken.None): Promise<Item | Item[] | undefined> {\n\n\t\t// clear state from last invocation\n\t\tthis._onDidSelectItem = undefined;\n\n\t\tconst itemsPromise = <Promise<Item[]>>Promise.resolve(itemsOrItemsPromise);\n\n\t\tconst instance = ++this._instances;\n\n\t\tconst quickPickWidget = this._proxy.$show(instance, {\n\t\t\tplaceHolder: options && options.placeHolder,\n\t\t\tmatchOnDescription: options && options.matchOnDescription,\n\t\t\tmatchOnDetail: options && options.matchOnDetail,\n\t\t\tignoreFocusLost: options && options.ignoreFocusOut,\n\t\t\tcanPickMany: options && options.canPickMany\n\t\t}, token);\n\n\t\tconst widgetClosedMarker = {};\n\t\tconst widgetClosedPromise = quickPickWidget.then(() => widgetClosedMarker);\n\n\t\treturn Promise.race([widgetClosedPromise, itemsPromise]).then(result => {\n\t\t\tif (result === widgetClosedMarker) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn itemsPromise.then(items => {\n\n\t\t\t\tconst pickItems: TransferQuickPickItems[] = [];\n\t\t\t\tfor (let handle = 0; handle < items.length; handle++) {\n\n\t\t\t\t\tconst item = items[handle];\n\t\t\t\t\tlet label: string;\n\t\t\t\t\tlet description: string | undefined;\n\t\t\t\t\tlet detail: string | undefined;\n\t\t\t\t\tlet picked: boolean | undefined;\n\t\t\t\t\tlet alwaysShow: boolean | undefined;\n\n\t\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\t\tlabel = item;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlabel = item.label;\n\t\t\t\t\t\tdescription = item.description;\n\t\t\t\t\t\tdetail = item.detail;\n\t\t\t\t\t\tpicked = item.picked;\n\t\t\t\t\t\talwaysShow = item.alwaysShow;\n\t\t\t\t\t}\n\t\t\t\t\tpickItems.push({\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tdescription,\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tdetail,\n\t\t\t\t\t\tpicked,\n\t\t\t\t\t\talwaysShow\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// handle selection changes\n\t\t\t\tif (options && typeof options.onDidSelectItem === 'function') {\n\t\t\t\t\tthis._onDidSelectItem = (handle) => {\n\t\t\t\t\t\toptions.onDidSelectItem!(items[handle]);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// show items\n\t\t\t\tthis._proxy.$setItems(instance, pickItems);\n\n\t\t\t\treturn quickPickWidget.then(handle => {\n\t\t\t\t\tif (typeof handle === 'number') {\n\t\t\t\t\t\treturn items[handle];\n\t\t\t\t\t} else if (Array.isArray(handle)) {\n\t\t\t\t\t\treturn handle.map(h => items[h]);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}).then(undefined, err => {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tthis._proxy.$setError(instance, err);\n\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\t$onItemSelected(handle: number): void {\n\t\tif (this._onDidSelectItem) {\n\t\t\tthis._onDidSelectItem(handle);\n\t\t}\n\t}\n\n\t// ---- input\n\n\tshowInput(options?: InputBoxOptions, token: CancellationToken = CancellationToken.None): Promise<string> {\n\n\t\t// global validate fn used in callback below\n\t\tthis._validateInput = options ? options.validateInput : undefined;\n\n\t\treturn this._proxy.$input(options, typeof this._validateInput === 'function', token)\n\t\t\t.then(undefined, err => {\n\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t}\n\n\t$validateInput(input: string): Promise<string | null | undefined> {\n\t\tif (this._validateInput) {\n\t\t\treturn asPromise(() => this._validateInput!(input));\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t// ---- workspace folder picker\n\n\tshowWorkspaceFolderPick(options?: WorkspaceFolderPickOptions, token = CancellationToken.None): Promise<WorkspaceFolder | undefined> {\n\t\treturn this._commands.executeCommand('_workbench.pickWorkspaceFolder', [options]).then(async (selectedFolder: WorkspaceFolder) => {\n\t\t\tif (!selectedFolder) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst workspaceFolders = await this._workspace.getWorkspaceFolders2();\n\t\t\tif (!workspaceFolders) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn workspaceFolders.filter(folder => folder.uri.toString() === selectedFolder.uri.toString())[0];\n\t\t});\n\t}\n\n\t// ---- QuickInput\n\n\tcreateQuickPick<T extends QuickPickItem>(extensionId: ExtensionIdentifier, enableProposedApi: boolean): QuickPick<T> {\n\t\tconst session = new ExtHostQuickPick(this._proxy, extensionId, enableProposedApi, () => this._sessions.delete(session._id));\n\t\tthis._sessions.set(session._id, session);\n\t\treturn session;\n\t}\n\n\tcreateInputBox(extensionId: ExtensionIdentifier): InputBox {\n\t\tconst session = new ExtHostInputBox(this._proxy, extensionId, () => this._sessions.delete(session._id));\n\t\tthis._sessions.set(session._id, session);\n\t\treturn session;\n\t}\n\n\t$onDidChangeValue(sessionId: number, value: string): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidChangeValue(value);\n\t\t}\n\t}\n\n\t$onDidAccept(sessionId: number): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidAccept();\n\t\t}\n\t}\n\n\t$onDidChangeActive(sessionId: number, handles: number[]): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session instanceof ExtHostQuickPick) {\n\t\t\tsession._fireDidChangeActive(handles);\n\t\t}\n\t}\n\n\t$onDidChangeSelection(sessionId: number, handles: number[]): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session instanceof ExtHostQuickPick) {\n\t\t\tsession._fireDidChangeSelection(handles);\n\t\t}\n\t}\n\n\t$onDidTriggerButton(sessionId: number, handle: number): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidTriggerButton(handle);\n\t\t}\n\t}\n\n\t$onDidHide(sessionId: number): void {\n\t\tconst session = this._sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession._fireDidHide();\n\t\t}\n\t}\n}\n\nclass ExtHostQuickInput implements QuickInput {\n\n\tprivate static _nextId = 1;\n\t_id = ExtHostQuickPick._nextId++;\n\n\tprivate _title: string;\n\tprivate _steps: number;\n\tprivate _totalSteps: number;\n\tprivate _visible = false;\n\tprivate _expectingHide = false;\n\tprivate _enabled = true;\n\tprivate _busy = false;\n\tprivate _ignoreFocusOut = true;\n\tprivate _value = '';\n\tprivate _placeholder: string;\n\tprivate _buttons: QuickInputButton[] = [];\n\tprivate _handlesToButtons = new Map<number, QuickInputButton>();\n\tprivate _onDidAcceptEmitter = new Emitter<void>();\n\tprivate _onDidChangeValueEmitter = new Emitter<string>();\n\tprivate _onDidTriggerButtonEmitter = new Emitter<QuickInputButton>();\n\tprivate _onDidHideEmitter = new Emitter<void>();\n\tprivate _updateTimeout: any;\n\tprivate _pendingUpdate: TransferQuickInput = { id: this._id };\n\n\tprivate _disposed = false;\n\tprotected _disposables: IDisposable[] = [\n\t\tthis._onDidTriggerButtonEmitter,\n\t\tthis._onDidHideEmitter,\n\t\tthis._onDidAcceptEmitter,\n\t\tthis._onDidChangeValueEmitter\n\t];\n\n\tconstructor(protected _proxy: MainThreadQuickOpenShape, protected _extensionId: ExtensionIdentifier, private _onDidDispose: () => void) {\n\t}\n\n\tget title() {\n\t\treturn this._title;\n\t}\n\n\tset title(title: string) {\n\t\tthis._title = title;\n\t\tthis.update({ title });\n\t}\n\n\tget step() {\n\t\treturn this._steps;\n\t}\n\n\tset step(step: number) {\n\t\tthis._steps = step;\n\t\tthis.update({ step });\n\t}\n\n\tget totalSteps() {\n\t\treturn this._totalSteps;\n\t}\n\n\tset totalSteps(totalSteps: number) {\n\t\tthis._totalSteps = totalSteps;\n\t\tthis.update({ totalSteps });\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tthis._enabled = enabled;\n\t\tthis.update({ enabled });\n\t}\n\n\tget busy() {\n\t\treturn this._busy;\n\t}\n\n\tset busy(busy: boolean) {\n\t\tthis._busy = busy;\n\t\tthis.update({ busy });\n\t}\n\n\tget ignoreFocusOut() {\n\t\treturn this._ignoreFocusOut;\n\t}\n\n\tset ignoreFocusOut(ignoreFocusOut: boolean) {\n\t\tthis._ignoreFocusOut = ignoreFocusOut;\n\t\tthis.update({ ignoreFocusOut });\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis._value = value;\n\t\tthis.update({ value });\n\t}\n\n\tget placeholder() {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis._placeholder = placeholder;\n\t\tthis.update({ placeholder });\n\t}\n\n\tonDidChangeValue = this._onDidChangeValueEmitter.event;\n\n\tonDidAccept = this._onDidAcceptEmitter.event;\n\n\tget buttons() {\n\t\treturn this._buttons;\n\t}\n\n\tset buttons(buttons: QuickInputButton[]) {\n\t\tthis._buttons = buttons.slice();\n\t\tthis._handlesToButtons.clear();\n\t\tbuttons.forEach((button, i) => {\n\t\t\tconst handle = button === QuickInputButtons.Back ? -1 : i;\n\t\t\tthis._handlesToButtons.set(handle, button);\n\t\t});\n\t\tthis.update({\n\t\t\tbuttons: buttons.map<TransferQuickInputButton>((button, i) => ({\n\t\t\t\ticonPath: getIconUris(button.iconPath),\n\t\t\t\ttooltip: button.tooltip,\n\t\t\t\thandle: button === QuickInputButtons.Back ? -1 : i,\n\t\t\t}))\n\t\t});\n\t}\n\n\tonDidTriggerButton = this._onDidTriggerButtonEmitter.event;\n\n\tshow(): void {\n\t\tthis._visible = true;\n\t\tthis._expectingHide = true;\n\t\tthis.update({ visible: true });\n\t}\n\n\thide(): void {\n\t\tthis._visible = false;\n\t\tthis.update({ visible: false });\n\t}\n\n\tonDidHide = this._onDidHideEmitter.event;\n\n\t_fireDidAccept() {\n\t\tthis._onDidAcceptEmitter.fire();\n\t}\n\n\t_fireDidChangeValue(value) {\n\t\tthis._value = value;\n\t\tthis._onDidChangeValueEmitter.fire(value);\n\t}\n\n\t_fireDidTriggerButton(handle: number) {\n\t\tconst button = this._handlesToButtons.get(handle);\n\t\tif (button) {\n\t\t\tthis._onDidTriggerButtonEmitter.fire(button);\n\t\t}\n\t}\n\n\t_fireDidHide() {\n\t\tif (this._expectingHide) {\n\t\t\tthis._expectingHide = false;\n\t\t\tthis._onDidHideEmitter.fire();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposed = true;\n\t\tthis._fireDidHide();\n\t\tthis._disposables = dispose(this._disposables);\n\t\tif (this._updateTimeout) {\n\t\t\tclearTimeout(this._updateTimeout);\n\t\t\tthis._updateTimeout = undefined;\n\t\t}\n\t\tthis._onDidDispose();\n\t\tthis._proxy.$dispose(this._id);\n\t}\n\n\tprotected update(properties: Record<string, any>): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const key of Object.keys(properties)) {\n\t\t\tconst value = properties[key];\n\t\t\tthis._pendingUpdate[key] = value === undefined ? null : value;\n\t\t}\n\n\t\tif ('visible' in this._pendingUpdate) {\n\t\t\tif (this._updateTimeout) {\n\t\t\t\tclearTimeout(this._updateTimeout);\n\t\t\t\tthis._updateTimeout = undefined;\n\t\t\t}\n\t\t\tthis.dispatchUpdate();\n\t\t} else if (this._visible && !this._updateTimeout) {\n\t\t\t// Defer the update so that multiple changes to setters dont cause a redraw each\n\t\t\tthis._updateTimeout = setTimeout(() => {\n\t\t\t\tthis._updateTimeout = undefined;\n\t\t\t\tthis.dispatchUpdate();\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tprivate dispatchUpdate() {\n\t\tthis._proxy.$createOrUpdate(this._pendingUpdate);\n\t\tthis._pendingUpdate = { id: this._id };\n\t}\n}\n\nfunction getIconUris(iconPath: QuickInputButton['iconPath']): { dark: URI, light?: URI } | undefined {\n\tconst dark = getDarkIconUri(iconPath);\n\tconst light = getLightIconUri(iconPath);\n\tif (!light && !dark) {\n\t\treturn undefined;\n\t}\n\treturn { dark: (dark || light)!, light };\n}\n\nfunction getLightIconUri(iconPath: QuickInputButton['iconPath']) {\n\tif (iconPath && !(iconPath instanceof ThemeIcon)) {\n\t\tif (typeof iconPath === 'string'\n\t\t\t|| iconPath instanceof URI) {\n\t\t\treturn getIconUri(iconPath);\n\t\t}\n\t\treturn getIconUri(iconPath['light']);\n\t}\n\treturn undefined;\n}\n\nfunction getDarkIconUri(iconPath: QuickInputButton['iconPath']) {\n\tif (iconPath && !(iconPath instanceof ThemeIcon) && iconPath['dark']) {\n\t\treturn getIconUri(iconPath['dark']);\n\t}\n\treturn undefined;\n}\n\nfunction getIconUri(iconPath: string | URI) {\n\tif (iconPath instanceof URI) {\n\t\treturn iconPath;\n\t}\n\treturn URI.file(iconPath);\n}\n\nclass ExtHostQuickPick<T extends QuickPickItem> extends ExtHostQuickInput implements QuickPick<T> {\n\n\tprivate _items: T[] = [];\n\tprivate _handlesToItems = new Map<number, T>();\n\tprivate _itemsToHandles = new Map<T, number>();\n\tprivate _canSelectMany = false;\n\tprivate _matchOnDescription = true;\n\tprivate _matchOnDetail = true;\n\tprivate _activeItems: T[] = [];\n\tprivate _onDidChangeActiveEmitter = new Emitter<T[]>();\n\tprivate _selectedItems: T[] = [];\n\tprivate _onDidChangeSelectionEmitter = new Emitter<T[]>();\n\n\tconstructor(proxy: MainThreadQuickOpenShape, extensionId: ExtensionIdentifier, enableProposedApi: boolean, onDispose: () => void) {\n\t\tsuper(proxy, extensionId, onDispose);\n\t\tthis._disposables.push(\n\t\t\tthis._onDidChangeActiveEmitter,\n\t\t\tthis._onDidChangeSelectionEmitter,\n\t\t);\n\t\tthis.update({ type: 'quickPick' });\n\t}\n\n\tget items() {\n\t\treturn this._items;\n\t}\n\n\tset items(items: T[]) {\n\t\tthis._items = items.slice();\n\t\tthis._handlesToItems.clear();\n\t\tthis._itemsToHandles.clear();\n\t\titems.forEach((item, i) => {\n\t\t\tthis._handlesToItems.set(i, item);\n\t\t\tthis._itemsToHandles.set(item, i);\n\t\t});\n\t\tthis.update({\n\t\t\titems: items.map((item, i) => ({\n\t\t\t\tlabel: item.label,\n\t\t\t\tdescription: item.description,\n\t\t\t\thandle: i,\n\t\t\t\tdetail: item.detail,\n\t\t\t\tpicked: item.picked,\n\t\t\t\talwaysShow: item.alwaysShow\n\t\t\t}))\n\t\t});\n\t}\n\n\tget canSelectMany() {\n\t\treturn this._canSelectMany;\n\t}\n\n\tset canSelectMany(canSelectMany: boolean) {\n\t\tthis._canSelectMany = canSelectMany;\n\t\tthis.update({ canSelectMany });\n\t}\n\n\tget matchOnDescription() {\n\t\treturn this._matchOnDescription;\n\t}\n\n\tset matchOnDescription(matchOnDescription: boolean) {\n\t\tthis._matchOnDescription = matchOnDescription;\n\t\tthis.update({ matchOnDescription });\n\t}\n\n\tget matchOnDetail() {\n\t\treturn this._matchOnDetail;\n\t}\n\n\tset matchOnDetail(matchOnDetail: boolean) {\n\t\tthis._matchOnDetail = matchOnDetail;\n\t\tthis.update({ matchOnDetail });\n\t}\n\n\tget activeItems() {\n\t\treturn this._activeItems;\n\t}\n\n\tset activeItems(activeItems: T[]) {\n\t\tthis._activeItems = activeItems.filter(item => this._itemsToHandles.has(item));\n\t\tthis.update({ activeItems: this._activeItems.map(item => this._itemsToHandles.get(item)) });\n\t}\n\n\tonDidChangeActive = this._onDidChangeActiveEmitter.event;\n\n\tget selectedItems() {\n\t\treturn this._selectedItems;\n\t}\n\n\tset selectedItems(selectedItems: T[]) {\n\t\tthis._selectedItems = selectedItems.filter(item => this._itemsToHandles.has(item));\n\t\tthis.update({ selectedItems: this._selectedItems.map(item => this._itemsToHandles.get(item)) });\n\t}\n\n\tonDidChangeSelection = this._onDidChangeSelectionEmitter.event;\n\n\t_fireDidChangeActive(handles: number[]) {\n\t\tconst items = coalesce(handles.map(handle => this._handlesToItems.get(handle)));\n\t\tthis._activeItems = items;\n\t\tthis._onDidChangeActiveEmitter.fire(items);\n\t}\n\n\t_fireDidChangeSelection(handles: number[]) {\n\t\tconst items = coalesce(handles.map(handle => this._handlesToItems.get(handle)));\n\t\tthis._selectedItems = items;\n\t\tthis._onDidChangeSelectionEmitter.fire(items);\n\t}\n}\n\nclass ExtHostInputBox extends ExtHostQuickInput implements InputBox {\n\n\tprivate _password: boolean;\n\tprivate _prompt: string;\n\tprivate _validationMessage: string;\n\n\tconstructor(proxy: MainThreadQuickOpenShape, extensionId: ExtensionIdentifier, onDispose: () => void) {\n\t\tsuper(proxy, extensionId, onDispose);\n\t\tthis.update({ type: 'inputBox' });\n\t}\n\n\tget password() {\n\t\treturn this._password;\n\t}\n\n\tset password(password: boolean) {\n\t\tthis._password = password;\n\t\tthis.update({ password });\n\t}\n\n\tget prompt() {\n\t\treturn this._prompt;\n\t}\n\n\tset prompt(prompt: string) {\n\t\tthis._prompt = prompt;\n\t\tthis.update({ prompt });\n\t}\n\n\tget validationMessage() {\n\t\treturn this._validationMessage;\n\t}\n\n\tset validationMessage(validationMessage: string) {\n\t\tthis._validationMessage = validationMessage;\n\t\tthis.update({ validationMessage });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { debounce } from 'vs/base/common/decorators';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { asPromise } from 'vs/base/common/async';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtHostCommands } from 'vs/workbench/api/node/extHostCommands';\nimport { MainContext, MainThreadSCMShape, SCMRawResource, SCMRawResourceSplice, SCMRawResourceSplices, IMainContext, ExtHostSCMShape, CommandDto } from './extHost.protocol';\nimport { sortedDiff } from 'vs/base/common/arrays';\nimport { comparePaths } from 'vs/base/common/comparers';\nimport * as vscode from 'vscode';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\ntype ProviderHandle = number;\ntype GroupHandle = number;\ntype ResourceStateHandle = number;\n\nfunction getIconPath(decorations?: vscode.SourceControlResourceThemableDecorations): string | undefined {\n\tif (!decorations) {\n\t\treturn undefined;\n\t} else if (typeof decorations.iconPath === 'string') {\n\t\treturn URI.file(decorations.iconPath).toString();\n\t} else if (decorations.iconPath) {\n\t\treturn `${decorations.iconPath}`;\n\t}\n\treturn undefined;\n}\n\nfunction compareResourceThemableDecorations(a: vscode.SourceControlResourceThemableDecorations, b: vscode.SourceControlResourceThemableDecorations): number {\n\tif (!a.iconPath && !b.iconPath) {\n\t\treturn 0;\n\t} else if (!a.iconPath) {\n\t\treturn -1;\n\t} else if (!b.iconPath) {\n\t\treturn 1;\n\t}\n\n\tconst aPath = typeof a.iconPath === 'string' ? a.iconPath : a.iconPath.fsPath;\n\tconst bPath = typeof b.iconPath === 'string' ? b.iconPath : b.iconPath.fsPath;\n\treturn comparePaths(aPath, bPath);\n}\n\nfunction compareResourceStatesDecorations(a: vscode.SourceControlResourceDecorations, b: vscode.SourceControlResourceDecorations): number {\n\tlet result = 0;\n\n\tif (a.strikeThrough !== b.strikeThrough) {\n\t\treturn a.strikeThrough ? 1 : -1;\n\t}\n\n\tif (a.faded !== b.faded) {\n\t\treturn a.faded ? 1 : -1;\n\t}\n\n\tif (a.tooltip !== b.tooltip) {\n\t\treturn (a.tooltip || '').localeCompare(b.tooltip || '');\n\t}\n\n\tresult = compareResourceThemableDecorations(a, b);\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.light && b.light) {\n\t\tresult = compareResourceThemableDecorations(a.light, b.light);\n\t} else if (a.light) {\n\t\treturn 1;\n\t} else if (b.light) {\n\t\treturn -1;\n\t}\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.dark && b.dark) {\n\t\tresult = compareResourceThemableDecorations(a.dark, b.dark);\n\t} else if (a.dark) {\n\t\treturn 1;\n\t} else if (b.dark) {\n\t\treturn -1;\n\t}\n\n\treturn result;\n}\n\nfunction compareResourceStates(a: vscode.SourceControlResourceState, b: vscode.SourceControlResourceState): number {\n\tlet result = comparePaths(a.resourceUri.fsPath, b.resourceUri.fsPath, true);\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.decorations && b.decorations) {\n\t\tresult = compareResourceStatesDecorations(a.decorations, b.decorations);\n\t} else if (a.decorations) {\n\t\treturn 1;\n\t} else if (b.decorations) {\n\t\treturn -1;\n\t}\n\n\treturn result;\n}\n\nfunction compareArgs(a: any[], b: any[]): boolean {\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction commandEquals(a: vscode.Command, b: vscode.Command): boolean {\n\treturn a.command === b.command\n\t\t&& a.title === b.title\n\t\t&& a.tooltip === b.tooltip\n\t\t&& (a.arguments && b.arguments ? compareArgs(a.arguments, b.arguments) : a.arguments === b.arguments);\n}\n\nfunction commandListEquals(a: vscode.Command[], b: vscode.Command[]): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (!commandEquals(a[i], b[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport interface IValidateInput {\n\t(value: string, cursorPosition: number): vscode.ProviderResult<vscode.SourceControlInputBoxValidation | undefined | null>;\n}\n\nexport class ExtHostSCMInputBox implements vscode.SourceControlInputBox {\n\n\tprivate _value: string = '';\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis._proxy.$setInputBoxValue(this._sourceControlHandle, value);\n\t\tthis.updateValue(value);\n\t}\n\n\tprivate _onDidChange = new Emitter<string>();\n\n\tget onDidChange(): Event<string> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tprivate _placeholder: string = '';\n\n\tget placeholder(): string {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis._proxy.$setInputBoxPlaceholder(this._sourceControlHandle, placeholder);\n\t\tthis._placeholder = placeholder;\n\t}\n\n\tprivate _validateInput: IValidateInput;\n\n\tget validateInput(): IValidateInput {\n\t\tif (!this._extension.enableProposedApi) {\n\t\t\tthrow new Error(`[${this._extension.identifier.value}]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api ${this._extension.identifier.value}`);\n\t\t}\n\n\t\treturn this._validateInput;\n\t}\n\n\tset validateInput(fn: IValidateInput) {\n\t\tif (!this._extension.enableProposedApi) {\n\t\t\tthrow new Error(`[${this._extension.identifier.value}]: Proposed API is only available when running out of dev or with the following command line switch: --enable-proposed-api ${this._extension.identifier.value}`);\n\t\t}\n\n\t\tif (fn && typeof fn !== 'function') {\n\t\t\tconsole.warn('Invalid SCM input box validation function');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._validateInput = fn;\n\t\tthis._proxy.$setValidationProviderIsEnabled(this._sourceControlHandle, !!fn);\n\t}\n\n\tprivate _visible: boolean = true;\n\n\tget visible(): boolean {\n\t\treturn this._visible;\n\t}\n\n\tset visible(visible: boolean) {\n\t\tvisible = !!visible;\n\t\tthis._visible = visible;\n\t\tthis._proxy.$setInputBoxVisibility(this._sourceControlHandle, visible);\n\t}\n\n\tconstructor(private _extension: IExtensionDescription, private _proxy: MainThreadSCMShape, private _sourceControlHandle: number) {\n\t\t// noop\n\t}\n\n\t$onInputBoxValueChange(value: string): void {\n\t\tthis.updateValue(value);\n\t}\n\n\tprivate updateValue(value: string): void {\n\t\tthis._value = value;\n\t\tthis._onDidChange.fire(value);\n\t}\n}\n\nclass ExtHostSourceControlResourceGroup implements vscode.SourceControlResourceGroup {\n\n\tprivate static _handlePool: number = 0;\n\tprivate _resourceHandlePool: number = 0;\n\tprivate _resourceStates: vscode.SourceControlResourceState[] = [];\n\n\tprivate _resourceStatesMap: Map<ResourceStateHandle, vscode.SourceControlResourceState> = new Map<ResourceStateHandle, vscode.SourceControlResourceState>();\n\tprivate _resourceStatesCommandsMap: Map<ResourceStateHandle, vscode.Command> = new Map<ResourceStateHandle, vscode.Command>();\n\n\tprivate _onDidUpdateResourceStates = new Emitter<void>();\n\treadonly onDidUpdateResourceStates = this._onDidUpdateResourceStates.event;\n\tprivate _onDidDispose = new Emitter<void>();\n\treadonly onDidDispose = this._onDidDispose.event;\n\n\tprivate _handlesSnapshot: number[] = [];\n\tprivate _resourceSnapshot: vscode.SourceControlResourceState[] = [];\n\n\tget id(): string { return this._id; }\n\n\tget label(): string { return this._label; }\n\tset label(label: string) {\n\t\tthis._label = label;\n\t\tthis._proxy.$updateGroupLabel(this._sourceControlHandle, this.handle, label);\n\t}\n\n\tprivate _hideWhenEmpty: boolean | undefined = undefined;\n\tget hideWhenEmpty(): boolean | undefined { return this._hideWhenEmpty; }\n\tset hideWhenEmpty(hideWhenEmpty: boolean | undefined) {\n\t\tthis._hideWhenEmpty = hideWhenEmpty;\n\t\tthis._proxy.$updateGroup(this._sourceControlHandle, this.handle, { hideWhenEmpty });\n\t}\n\n\tget resourceStates(): vscode.SourceControlResourceState[] { return [...this._resourceStates]; }\n\tset resourceStates(resources: vscode.SourceControlResourceState[]) {\n\t\tthis._resourceStates = [...resources];\n\t\tthis._onDidUpdateResourceStates.fire();\n\t}\n\n\treadonly handle = ExtHostSourceControlResourceGroup._handlePool++;\n\tprivate _disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadSCMShape,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate _sourceControlHandle: number,\n\t\tprivate _id: string,\n\t\tprivate _label: string,\n\t) {\n\t\tthis._proxy.$registerGroup(_sourceControlHandle, this.handle, _id, _label);\n\t}\n\n\tgetResourceState(handle: number): vscode.SourceControlResourceState | undefined {\n\t\treturn this._resourceStatesMap.get(handle);\n\t}\n\n\t$executeResourceCommand(handle: number): Promise<void> {\n\t\tconst command = this._resourceStatesCommandsMap.get(handle);\n\n\t\tif (!command) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => this._commands.executeCommand(command.command, ...(command.arguments || [])));\n\t}\n\n\t_takeResourceStateSnapshot(): SCMRawResourceSplice[] {\n\t\tconst snapshot = [...this._resourceStates].sort(compareResourceStates);\n\t\tconst diffs = sortedDiff(this._resourceSnapshot, snapshot, compareResourceStates);\n\n\t\tconst splices = diffs.map<ISplice<{ rawResource: SCMRawResource, handle: number }>>(diff => {\n\t\t\tconst toInsert = diff.toInsert.map(r => {\n\t\t\t\tconst handle = this._resourceHandlePool++;\n\t\t\t\tthis._resourceStatesMap.set(handle, r);\n\n\t\t\t\tconst sourceUri = r.resourceUri;\n\t\t\t\tconst iconPath = getIconPath(r.decorations);\n\t\t\t\tconst lightIconPath = r.decorations && getIconPath(r.decorations.light) || iconPath;\n\t\t\t\tconst darkIconPath = r.decorations && getIconPath(r.decorations.dark) || iconPath;\n\t\t\t\tconst icons: string[] = [];\n\n\t\t\t\tif (r.command) {\n\t\t\t\t\tthis._resourceStatesCommandsMap.set(handle, r.command);\n\t\t\t\t}\n\n\t\t\t\tif (lightIconPath) {\n\t\t\t\t\ticons.push(lightIconPath);\n\t\t\t\t}\n\n\t\t\t\tif (darkIconPath && (darkIconPath !== lightIconPath)) {\n\t\t\t\t\ticons.push(darkIconPath);\n\t\t\t\t}\n\n\t\t\t\tconst tooltip = (r.decorations && r.decorations.tooltip) || '';\n\t\t\t\tconst strikeThrough = r.decorations && !!r.decorations.strikeThrough;\n\t\t\t\tconst faded = r.decorations && !!r.decorations.faded;\n\n\t\t\t\tconst source = r.decorations && r.decorations.source || undefined;\n\t\t\t\tconst letter = r.decorations && r.decorations.letter || undefined;\n\t\t\t\tconst color = r.decorations && r.decorations.color || undefined;\n\n\t\t\t\tconst rawResource = [handle, <UriComponents>sourceUri, icons, tooltip, strikeThrough, faded, source, letter, color] as SCMRawResource;\n\n\t\t\t\treturn { rawResource, handle };\n\t\t\t});\n\n\t\t\treturn { start: diff.start, deleteCount: diff.deleteCount, toInsert };\n\t\t});\n\n\t\tconst rawResourceSplices = splices\n\t\t\t.map(({ start, deleteCount, toInsert }) => [start, deleteCount, toInsert.map(i => i.rawResource)] as SCMRawResourceSplice);\n\n\t\tconst reverseSplices = splices.reverse();\n\n\t\tfor (const { start, deleteCount, toInsert } of reverseSplices) {\n\t\t\tconst handles = toInsert.map(i => i.handle);\n\t\t\tconst handlesToDelete = this._handlesSnapshot.splice(start, deleteCount, ...handles);\n\n\t\t\tfor (const handle of handlesToDelete) {\n\t\t\t\tthis._resourceStatesMap.delete(handle);\n\t\t\t\tthis._resourceStatesCommandsMap.delete(handle);\n\t\t\t}\n\t\t}\n\n\t\tthis._resourceSnapshot = snapshot;\n\t\treturn rawResourceSplices;\n\t}\n\n\tdispose(): void {\n\t\tthis._proxy.$unregisterGroup(this._sourceControlHandle, this.handle);\n\t\tthis._disposables = dispose(this._disposables);\n\t\tthis._onDidDispose.fire();\n\t}\n}\n\nclass ExtHostSourceControl implements vscode.SourceControl {\n\n\tprivate static _handlePool: number = 0;\n\tprivate _groups: Map<GroupHandle, ExtHostSourceControlResourceGroup> = new Map<GroupHandle, ExtHostSourceControlResourceGroup>();\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tget rootUri(): vscode.Uri | undefined {\n\t\treturn this._rootUri;\n\t}\n\n\tprivate _inputBox: ExtHostSCMInputBox;\n\tget inputBox(): ExtHostSCMInputBox { return this._inputBox; }\n\n\tprivate _count: number | undefined = undefined;\n\n\tget count(): number | undefined {\n\t\treturn this._count;\n\t}\n\n\tset count(count: number | undefined) {\n\t\tif (this._count === count) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._count = count;\n\t\tthis._proxy.$updateSourceControl(this.handle, { count });\n\t}\n\n\tprivate _quickDiffProvider: vscode.QuickDiffProvider | undefined = undefined;\n\n\tget quickDiffProvider(): vscode.QuickDiffProvider | undefined {\n\t\treturn this._quickDiffProvider;\n\t}\n\n\tset quickDiffProvider(quickDiffProvider: vscode.QuickDiffProvider | undefined) {\n\t\tthis._quickDiffProvider = quickDiffProvider;\n\t\tthis._proxy.$updateSourceControl(this.handle, { hasQuickDiffProvider: !!quickDiffProvider });\n\t}\n\n\tprivate _commitTemplate: string | undefined = undefined;\n\n\tget commitTemplate(): string | undefined {\n\t\treturn this._commitTemplate;\n\t}\n\n\tset commitTemplate(commitTemplate: string | undefined) {\n\t\tthis._commitTemplate = commitTemplate;\n\t\tthis._proxy.$updateSourceControl(this.handle, { commitTemplate });\n\t}\n\n\tprivate _acceptInputCommand: vscode.Command | undefined = undefined;\n\n\tget acceptInputCommand(): vscode.Command | undefined {\n\t\treturn this._acceptInputCommand;\n\t}\n\n\tset acceptInputCommand(acceptInputCommand: vscode.Command | undefined) {\n\t\tthis._acceptInputCommand = acceptInputCommand;\n\n\t\tconst internal = this._commands.converter.toInternal(acceptInputCommand);\n\t\tthis._proxy.$updateSourceControl(this.handle, { acceptInputCommand: internal });\n\t}\n\n\tprivate _statusBarCommands: vscode.Command[] | undefined = undefined;\n\n\tget statusBarCommands(): vscode.Command[] | undefined {\n\t\treturn this._statusBarCommands;\n\t}\n\n\tset statusBarCommands(statusBarCommands: vscode.Command[] | undefined) {\n\t\tif (this._statusBarCommands && statusBarCommands && commandListEquals(this._statusBarCommands, statusBarCommands)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._statusBarCommands = statusBarCommands;\n\n\t\tconst internal = (statusBarCommands || []).map(c => this._commands.converter.toInternal(c)) as CommandDto[];\n\t\tthis._proxy.$updateSourceControl(this.handle, { statusBarCommands: internal });\n\t}\n\n\tprivate _selected: boolean = false;\n\n\tget selected(): boolean {\n\t\treturn this._selected;\n\t}\n\n\tprivate _onDidChangeSelection = new Emitter<boolean>();\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprivate handle: number = ExtHostSourceControl._handlePool++;\n\n\tconstructor(\n\t\t_extension: IExtensionDescription,\n\t\tprivate _proxy: MainThreadSCMShape,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate _id: string,\n\t\tprivate _label: string,\n\t\tprivate _rootUri?: vscode.Uri\n\t) {\n\t\tthis._inputBox = new ExtHostSCMInputBox(_extension, this._proxy, this.handle);\n\t\tthis._proxy.$registerSourceControl(this.handle, _id, _label, _rootUri);\n\t}\n\n\tprivate updatedResourceGroups = new Set<ExtHostSourceControlResourceGroup>();\n\n\tcreateResourceGroup(id: string, label: string): ExtHostSourceControlResourceGroup {\n\t\tconst group = new ExtHostSourceControlResourceGroup(this._proxy, this._commands, this.handle, id, label);\n\n\t\tconst updateListener = group.onDidUpdateResourceStates(() => {\n\t\t\tthis.updatedResourceGroups.add(group);\n\t\t\tthis.eventuallyUpdateResourceStates();\n\t\t});\n\n\t\tEvent.once(group.onDidDispose)(() => {\n\t\t\tthis.updatedResourceGroups.delete(group);\n\t\t\tupdateListener.dispose();\n\t\t\tthis._groups.delete(group.handle);\n\t\t});\n\n\t\tthis._groups.set(group.handle, group);\n\t\treturn group;\n\t}\n\n\t@debounce(100)\n\teventuallyUpdateResourceStates(): void {\n\t\tconst splices: SCMRawResourceSplices[] = [];\n\n\t\tthis.updatedResourceGroups.forEach(group => {\n\t\t\tconst snapshot = group._takeResourceStateSnapshot();\n\n\t\t\tif (snapshot.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsplices.push([group.handle, snapshot]);\n\t\t});\n\n\t\tif (splices.length > 0) {\n\t\t\tthis._proxy.$spliceResourceStates(this.handle, splices);\n\t\t}\n\n\t\tthis.updatedResourceGroups.clear();\n\t}\n\n\tgetResourceGroup(handle: GroupHandle): ExtHostSourceControlResourceGroup | undefined {\n\t\treturn this._groups.get(handle);\n\t}\n\n\tsetSelectionState(selected: boolean): void {\n\t\tthis._selected = selected;\n\t\tthis._onDidChangeSelection.fire(selected);\n\t}\n\n\tdispose(): void {\n\t\tthis._groups.forEach(group => group.dispose());\n\t\tthis._proxy.$unregisterSourceControl(this.handle);\n\t}\n}\n\nexport class ExtHostSCM implements ExtHostSCMShape {\n\n\tprivate static _handlePool: number = 0;\n\n\tprivate _proxy: MainThreadSCMShape;\n\tprivate _sourceControls: Map<ProviderHandle, ExtHostSourceControl> = new Map<ProviderHandle, ExtHostSourceControl>();\n\tprivate _sourceControlsByExtension: Map<string, ExtHostSourceControl[]> = new Map<string, ExtHostSourceControl[]>();\n\n\tprivate _onDidChangeActiveProvider = new Emitter<vscode.SourceControl>();\n\tget onDidChangeActiveProvider(): Event<vscode.SourceControl> { return this._onDidChangeActiveProvider.event; }\n\n\tprivate _selectedSourceControlHandles = new Set<number>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate _commands: ExtHostCommands,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadSCM);\n\n\t\t_commands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === 3) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.sourceControlHandle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst group = sourceControl.getResourceGroup(arg.groupHandle);\n\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn group.getResourceState(arg.handle);\n\t\t\t\t} else if (arg && arg.$mid === 4) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.sourceControlHandle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sourceControl.getResourceGroup(arg.groupHandle);\n\t\t\t\t} else if (arg && arg.$mid === 5) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.handle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sourceControl;\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateSourceControl(extension: IExtensionDescription, id: string, label: string, rootUri: vscode.Uri | undefined): vscode.SourceControl {\n\t\tthis.logService.trace('ExtHostSCM#createSourceControl', extension.identifier.value, id, label, rootUri);\n\n\t\tconst handle = ExtHostSCM._handlePool++;\n\t\tconst sourceControl = new ExtHostSourceControl(extension, this._proxy, this._commands, id, label, rootUri);\n\t\tthis._sourceControls.set(handle, sourceControl);\n\n\t\tconst sourceControls = this._sourceControlsByExtension.get(ExtensionIdentifier.toKey(extension.identifier)) || [];\n\t\tsourceControls.push(sourceControl);\n\t\tthis._sourceControlsByExtension.set(ExtensionIdentifier.toKey(extension.identifier), sourceControls);\n\n\t\treturn sourceControl;\n\t}\n\n\t// Deprecated\n\tgetLastInputBox(extension: IExtensionDescription): ExtHostSCMInputBox | undefined {\n\t\tthis.logService.trace('ExtHostSCM#getLastInputBox', extension.identifier.value);\n\n\t\tconst sourceControls = this._sourceControlsByExtension.get(ExtensionIdentifier.toKey(extension.identifier));\n\t\tconst sourceControl = sourceControls && sourceControls[sourceControls.length - 1];\n\t\treturn sourceControl && sourceControl.inputBox;\n\t}\n\n\t$provideOriginalResource(sourceControlHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<UriComponents | null> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tthis.logService.trace('ExtHostSCM#$provideOriginalResource', sourceControlHandle, uri.toString());\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl || !sourceControl.quickDiffProvider || !sourceControl.quickDiffProvider.provideOriginalResource) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn asPromise(() => sourceControl.quickDiffProvider!.provideOriginalResource!(uri, token))\n\t\t\t.then<UriComponents | null>(r => r || null);\n\t}\n\n\t$onInputBoxValueChange(sourceControlHandle: number, value: string): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$onInputBoxValueChange', sourceControlHandle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tsourceControl.inputBox.$onInputBoxValueChange(value);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$executeResourceCommand', sourceControlHandle, groupHandle, handle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst group = sourceControl.getResourceGroup(groupHandle);\n\n\t\tif (!group) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn group.$executeResourceCommand(handle);\n\t}\n\n\t$validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined> {\n\t\tthis.logService.trace('ExtHostSCM#$validateInput', sourceControlHandle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (!sourceControl.inputBox.validateInput) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => sourceControl.inputBox.validateInput(value, cursorPosition)).then(result => {\n\t\t\tif (!result) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\treturn Promise.resolve<[string, number]>([result.message, result.type]);\n\t\t});\n\t}\n\n\t$setSelectedSourceControls(selectedSourceControlHandles: number[]): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$setSelectedSourceControls', selectedSourceControlHandles);\n\n\t\tconst set = new Set<number>();\n\n\t\tfor (const handle of selectedSourceControlHandles) {\n\t\t\tset.add(handle);\n\t\t}\n\n\t\tset.forEach(handle => {\n\t\t\tif (!this._selectedSourceControlHandles.has(handle)) {\n\t\t\t\tconst sourceControl = this._sourceControls.get(handle);\n\n\t\t\t\tif (!sourceControl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsourceControl.setSelectionState(true);\n\t\t\t}\n\t\t});\n\n\t\tthis._selectedSourceControlHandles.forEach(handle => {\n\t\t\tif (!set.has(handle)) {\n\t\t\t\tconst sourceControl = this._sourceControls.get(handle);\n\n\t\t\t\tif (!sourceControl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsourceControl.setSelectionState(false);\n\t\t\t}\n\t\t});\n\n\t\tthis._selectedSourceControlHandles = set;\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { StatusbarAlignment as MainThreadStatusBarAlignment } from 'vs/platform/statusbar/common/statusbar';\nimport { StatusBarAlignment as ExtHostStatusBarAlignment, Disposable, ThemeColor } from './extHostTypes';\nimport { StatusBarItem, StatusBarAlignment } from 'vscode';\nimport { MainContext, MainThreadStatusBarShape, IMainContext } from './extHost.protocol';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtHostStatusBarEntry implements StatusBarItem {\n\tprivate static ID_GEN = 0;\n\n\tprivate _id: number;\n\tprivate _alignment: number;\n\tprivate _priority?: number;\n\tprivate _disposed: boolean;\n\tprivate _visible: boolean;\n\n\tprivate _text: string;\n\tprivate _tooltip: string;\n\tprivate _color: string | ThemeColor;\n\tprivate _command: string;\n\n\tprivate _timeoutHandle: any;\n\tprivate _proxy: MainThreadStatusBarShape;\n\n\tprivate _extensionId?: ExtensionIdentifier;\n\n\tconstructor(proxy: MainThreadStatusBarShape, extensionId: ExtensionIdentifier | undefined, alignment: ExtHostStatusBarAlignment = ExtHostStatusBarAlignment.Left, priority?: number) {\n\t\tthis._id = ExtHostStatusBarEntry.ID_GEN++;\n\t\tthis._proxy = proxy;\n\t\tthis._alignment = alignment;\n\t\tthis._priority = priority;\n\t\tthis._extensionId = extensionId;\n\t}\n\n\tpublic get id(): number {\n\t\treturn this._id;\n\t}\n\n\tpublic get alignment(): StatusBarAlignment {\n\t\treturn this._alignment;\n\t}\n\n\tpublic get priority(): number | undefined {\n\t\treturn this._priority;\n\t}\n\n\tpublic get text(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic get tooltip(): string {\n\t\treturn this._tooltip;\n\t}\n\n\tpublic get color(): string | ThemeColor {\n\t\treturn this._color;\n\t}\n\n\tpublic get command(): string {\n\t\treturn this._command;\n\t}\n\n\tpublic set text(text: string) {\n\t\tthis._text = text;\n\t\tthis.update();\n\t}\n\n\tpublic set tooltip(tooltip: string) {\n\t\tthis._tooltip = tooltip;\n\t\tthis.update();\n\t}\n\n\tpublic set color(color: string | ThemeColor) {\n\t\tthis._color = color;\n\t\tthis.update();\n\t}\n\n\tpublic set command(command: string) {\n\t\tthis._command = command;\n\t\tthis.update();\n\t}\n\n\tpublic show(): void {\n\t\tthis._visible = true;\n\t\tthis.update();\n\t}\n\n\tpublic hide(): void {\n\t\tclearTimeout(this._timeoutHandle);\n\t\tthis._visible = false;\n\t\tthis._proxy.$dispose(this.id);\n\t}\n\n\tprivate update(): void {\n\t\tif (this._disposed || !this._visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(this._timeoutHandle);\n\n\t\t// Defer the update so that multiple changes to setters dont cause a redraw each\n\t\tthis._timeoutHandle = setTimeout(() => {\n\t\t\tthis._timeoutHandle = undefined;\n\n\t\t\t// Set to status bar\n\t\t\tthis._proxy.$setEntry(this.id, this._extensionId, this.text, this.tooltip, this.command, this.color,\n\t\t\t\tthis._alignment === ExtHostStatusBarAlignment.Left ? MainThreadStatusBarAlignment.LEFT : MainThreadStatusBarAlignment.RIGHT,\n\t\t\t\tthis._priority);\n\t\t}, 0);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.hide();\n\t\tthis._disposed = true;\n\t}\n}\n\nclass StatusBarMessage {\n\n\tprivate _item: StatusBarItem;\n\tprivate _messages: { message: string }[] = [];\n\n\tconstructor(statusBar: ExtHostStatusBar) {\n\t\tthis._item = statusBar.createStatusBarEntry(undefined, ExtHostStatusBarAlignment.Left, Number.MIN_VALUE);\n\t}\n\n\tdispose() {\n\t\tthis._messages.length = 0;\n\t\tthis._item.dispose();\n\t}\n\n\tsetMessage(message: string): Disposable {\n\t\tconst data: { message: string } = { message }; // use object to not confuse equal strings\n\t\tthis._messages.unshift(data);\n\t\tthis._update();\n\n\t\treturn new Disposable(() => {\n\t\t\tconst idx = this._messages.indexOf(data);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._messages.splice(idx, 1);\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _update() {\n\t\tif (this._messages.length > 0) {\n\t\t\tthis._item.text = this._messages[0].message;\n\t\t\tthis._item.show();\n\t\t} else {\n\t\t\tthis._item.hide();\n\t\t}\n\t}\n}\n\nexport class ExtHostStatusBar {\n\n\tprivate _proxy: MainThreadStatusBarShape;\n\tprivate _statusMessage: StatusBarMessage;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadStatusBar);\n\t\tthis._statusMessage = new StatusBarMessage(this);\n\t}\n\n\tcreateStatusBarEntry(extensionId: ExtensionIdentifier | undefined, alignment?: ExtHostStatusBarAlignment, priority?: number): StatusBarItem {\n\t\treturn new ExtHostStatusBarEntry(this._proxy, extensionId, alignment, priority);\n\t}\n\n\tsetStatusBarMessage(text: string, timeoutOrThenable?: number | Thenable<any>): Disposable {\n\n\t\tconst d = this._statusMessage.setMessage(text);\n\t\tlet handle: any;\n\n\t\tif (typeof timeoutOrThenable === 'number') {\n\t\t\thandle = setTimeout(() => d.dispose(), timeoutOrThenable);\n\t\t} else if (typeof timeoutOrThenable !== 'undefined') {\n\t\t\ttimeoutOrThenable.then(() => d.dispose(), () => d.dispose());\n\t\t}\n\n\t\treturn new Disposable(() => {\n\t\t\td.dispose();\n\t\t\tclearTimeout(handle);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadStorageShape, IMainContext, ExtHostStorageShape } from './extHost.protocol';\nimport { Emitter } from 'vs/base/common/event';\n\nexport interface IStorageChangeEvent {\n\tshared: boolean;\n\tkey: string;\n\tvalue: object;\n}\n\nexport class ExtHostStorage implements ExtHostStorageShape {\n\n\tprivate _proxy: MainThreadStorageShape;\n\n\tprivate _onDidChangeStorage = new Emitter<IStorageChangeEvent>();\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadStorage);\n\t}\n\n\tgetValue<T>(shared: boolean, key: string, defaultValue?: T): Promise<T | undefined> {\n\t\treturn this._proxy.$getValue<T>(shared, key).then(value => value || defaultValue);\n\t}\n\n\tsetValue(shared: boolean, key: string, value: object): Promise<void> {\n\t\treturn this._proxy.$setValue(shared, key, value);\n\t}\n\n\t$acceptValue(shared: boolean, key: string, value: object): void {\n\t\tthis._onDidChangeStorage.fire({ shared, key, value });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport pkg from 'vs/platform/product/node/package';\nimport * as os from 'os';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\nimport * as terminalEnvironment from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtHostTerminalServiceShape, MainContext, MainThreadTerminalServiceShape, IMainContext, ShellLaunchConfigDto } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostConfiguration } from 'vs/workbench/api/node/extHostConfiguration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { EXT_HOST_CREATION_DELAY, IShellLaunchConfig } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalProcess } from 'vs/workbench/contrib/terminal/node/terminalProcess';\nimport { timeout } from 'vs/base/common/async';\nimport { sanitizeProcessEnvironment } from 'vs/base/common/processes';\n\nconst RENDERER_NO_PROCESS_ID = -1;\n\nexport class BaseExtHostTerminal {\n\tpublic _id: number;\n\tprotected _idPromise: Promise<number>;\n\tprivate _idPromiseComplete: (value: number) => any;\n\tprivate _disposed: boolean = false;\n\tprivate _queuedRequests: ApiRequest[] = [];\n\n\tconstructor(\n\t\tprotected _proxy: MainThreadTerminalServiceShape,\n\t\tid?: number\n\t) {\n\t\tthis._idPromise = new Promise<number>(c => {\n\t\t\tif (id !== undefined) {\n\t\t\t\tthis._id = id;\n\t\t\t\tc(id);\n\t\t\t} else {\n\t\t\t\tthis._idPromiseComplete = c;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._queueApiRequest(this._proxy.$dispose, []);\n\t\t}\n\t}\n\n\tprotected _checkDisposed() {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error('Terminal has already been disposed');\n\t\t}\n\t}\n\n\tprotected _queueApiRequest(callback: (...args: any[]) => void, args: any[]): void {\n\t\tconst request: ApiRequest = new ApiRequest(callback, args);\n\t\tif (!this._id) {\n\t\t\tthis._queuedRequests.push(request);\n\t\t\treturn;\n\t\t}\n\t\trequest.run(this._proxy, this._id);\n\t}\n\n\tpublic _runQueuedRequests(id: number): void {\n\t\tthis._id = id;\n\t\tthis._idPromiseComplete(id);\n\t\tthis._queuedRequests.forEach((r) => {\n\t\t\tr.run(this._proxy, this._id);\n\t\t});\n\t\tthis._queuedRequests.length = 0;\n\t}\n}\n\nexport class ExtHostTerminal extends BaseExtHostTerminal implements vscode.Terminal {\n\tprivate _pidPromise: Promise<number>;\n\tprivate _pidPromiseComplete: (value: number) => any;\n\tprivate _cols: number | undefined;\n\tprivate _rows: number | undefined;\n\n\tprivate readonly _onData = new Emitter<string>();\n\tpublic get onDidWriteData(): Event<string> {\n\t\t// Tell the main side to start sending data if it's not already\n\t\tthis._idPromise.then(c => {\n\t\t\tthis._proxy.$registerOnDataListener(this._id);\n\t\t});\n\t\treturn this._onData && this._onData.event;\n\t}\n\n\tconstructor(\n\t\tproxy: MainThreadTerminalServiceShape,\n\t\tprivate _name: string,\n\t\tid?: number,\n\t\tpid?: number\n\t) {\n\t\tsuper(proxy, id);\n\t\tthis._pidPromise = new Promise<number>(c => {\n\t\t\tif (pid === RENDERER_NO_PROCESS_ID) {\n\t\t\t\tc(undefined);\n\t\t\t} else {\n\t\t\t\tthis._pidPromiseComplete = c;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic create(\n\t\tshellPath?: string,\n\t\tshellArgs?: string[],\n\t\tcwd?: string | URI,\n\t\tenv?: { [key: string]: string },\n\t\twaitOnExit?: boolean,\n\t\tstrictEnv?: boolean\n\t): void {\n\t\tthis._proxy.$createTerminal(this._name, shellPath, shellArgs, cwd, env, waitOnExit, strictEnv).then(terminal => {\n\t\t\tthis._name = terminal.name;\n\t\t\tthis._runQueuedRequests(terminal.id);\n\t\t});\n\t}\n\n\tpublic get name(): string {\n\t\treturn this._name;\n\t}\n\n\tpublic set name(name: string) {\n\t\tthis._name = name;\n\t}\n\n\tpublic get dimensions(): vscode.TerminalDimensions | undefined {\n\t\tif (this._cols === undefined && this._rows === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\tcolumns: this._cols,\n\t\t\trows: this._rows\n\t\t};\n\t}\n\n\tpublic setDimensions(cols: number, rows: number): boolean {\n\t\tif (cols === this._cols && rows === this._rows) {\n\t\t\t// Nothing changed\n\t\t\treturn false;\n\t\t}\n\t\tthis._cols = cols;\n\t\tthis._rows = rows;\n\t\treturn true;\n\t}\n\n\tpublic get processId(): Promise<number> {\n\t\treturn this._pidPromise;\n\t}\n\n\tpublic sendText(text: string, addNewLine: boolean = true): void {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$sendText, [text, addNewLine]);\n\t}\n\n\tpublic show(preserveFocus: boolean): void {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$show, [preserveFocus]);\n\t}\n\n\tpublic hide(): void {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$hide, []);\n\t}\n\n\tpublic _setProcessId(processId: number): void {\n\t\t// The event may fire 2 times when the panel is restored\n\t\tif (this._pidPromiseComplete) {\n\t\t\tthis._pidPromiseComplete(processId);\n\t\t\tthis._pidPromiseComplete = null;\n\t\t} else {\n\t\t\t// Recreate the promise if this is the nth processId set (eg. reused task terminals)\n\t\t\tthis._pidPromise.then(pid => {\n\t\t\t\tif (pid !== processId) {\n\t\t\t\t\tthis._pidPromise = Promise.resolve(processId);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _fireOnData(data: string): void {\n\t\tthis._onData.fire(data);\n\t}\n}\n\nexport class ExtHostTerminalRenderer extends BaseExtHostTerminal implements vscode.TerminalRenderer {\n\tpublic get name(): string { return this._name; }\n\tpublic set name(newName: string) {\n\t\tthis._name = newName;\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$terminalRendererSetName, [this._name]);\n\t}\n\n\tprivate readonly _onInput = new Emitter<string>();\n\tpublic get onDidAcceptInput(): Event<string> {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$terminalRendererRegisterOnInputListener, [this._id]);\n\t\t// Tell the main side to start sending data if it's not already\n\t\t// this._proxy.$terminalRendererRegisterOnDataListener(this._id);\n\t\treturn this._onInput && this._onInput.event;\n\t}\n\n\tprivate _dimensions: vscode.TerminalDimensions | undefined;\n\tpublic get dimensions(): vscode.TerminalDimensions { return this._dimensions; }\n\tpublic set dimensions(dimensions: vscode.TerminalDimensions) {\n\t\tthis._checkDisposed();\n\t\tthis._dimensions = dimensions;\n\t\tthis._queueApiRequest(this._proxy.$terminalRendererSetDimensions, [dimensions]);\n\t}\n\n\tprivate _maximumDimensions: vscode.TerminalDimensions;\n\tpublic get maximumDimensions(): vscode.TerminalDimensions {\n\t\tif (!this._maximumDimensions) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\trows: this._maximumDimensions.rows,\n\t\t\tcolumns: this._maximumDimensions.columns\n\t\t};\n\t}\n\n\tprivate readonly _onDidChangeMaximumDimensions: Emitter<vscode.TerminalDimensions> = new Emitter<vscode.TerminalDimensions>();\n\tpublic get onDidChangeMaximumDimensions(): Event<vscode.TerminalDimensions> {\n\t\treturn this._onDidChangeMaximumDimensions && this._onDidChangeMaximumDimensions.event;\n\t}\n\n\tpublic get terminal(): ExtHostTerminal {\n\t\treturn this._terminal;\n\t}\n\n\tconstructor(\n\t\tproxy: MainThreadTerminalServiceShape,\n\t\tprivate _name: string,\n\t\tprivate _terminal: ExtHostTerminal,\n\t\tid?: number\n\t) {\n\t\tsuper(proxy, id);\n\n\t\tif (!id) {\n\t\t\tthis._proxy.$createTerminalRenderer(this._name).then(id => {\n\t\t\t\tthis._runQueuedRequests(id);\n\t\t\t\t(<any>this._terminal)._runQueuedRequests(id);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic write(data: string): void {\n\t\tthis._checkDisposed();\n\t\tthis._queueApiRequest(this._proxy.$terminalRendererWrite, [data]);\n\t}\n\n\tpublic _fireOnInput(data: string): void {\n\t\tthis._onInput.fire(data);\n\t}\n\n\tpublic _setMaximumDimensions(columns: number, rows: number): void {\n\t\tif (this._maximumDimensions && this._maximumDimensions.columns === columns && this._maximumDimensions.rows === rows) {\n\t\t\treturn;\n\t\t}\n\t\tthis._maximumDimensions = { columns, rows };\n\t\tthis._onDidChangeMaximumDimensions.fire(this.maximumDimensions);\n\t}\n}\n\nexport class ExtHostTerminalService implements ExtHostTerminalServiceShape {\n\tprivate _proxy: MainThreadTerminalServiceShape;\n\tprivate _activeTerminal: ExtHostTerminal;\n\tprivate _terminals: ExtHostTerminal[] = [];\n\tprivate _terminalProcesses: { [id: number]: TerminalProcess } = {};\n\tprivate _terminalRenderers: ExtHostTerminalRenderer[] = [];\n\tprivate _getTerminalPromises: { [id: number]: Promise<ExtHostTerminal> } = {};\n\n\tpublic get activeTerminal(): ExtHostTerminal { return this._activeTerminal; }\n\tpublic get terminals(): ExtHostTerminal[] { return this._terminals; }\n\n\tprivate readonly _onDidCloseTerminal: Emitter<vscode.Terminal> = new Emitter<vscode.Terminal>();\n\tpublic get onDidCloseTerminal(): Event<vscode.Terminal> { return this._onDidCloseTerminal && this._onDidCloseTerminal.event; }\n\tprivate readonly _onDidOpenTerminal: Emitter<vscode.Terminal> = new Emitter<vscode.Terminal>();\n\tpublic get onDidOpenTerminal(): Event<vscode.Terminal> { return this._onDidOpenTerminal && this._onDidOpenTerminal.event; }\n\tprivate readonly _onDidChangeActiveTerminal: Emitter<vscode.Terminal | undefined> = new Emitter<vscode.Terminal | undefined>();\n\tpublic get onDidChangeActiveTerminal(): Event<vscode.Terminal | undefined> { return this._onDidChangeActiveTerminal && this._onDidChangeActiveTerminal.event; }\n\tprivate readonly _onDidChangeTerminalDimensions: Emitter<vscode.TerminalDimensionsChangeEvent> = new Emitter<vscode.TerminalDimensionsChangeEvent>();\n\tpublic get onDidChangeTerminalDimensions(): Event<vscode.TerminalDimensionsChangeEvent> { return this._onDidChangeTerminalDimensions && this._onDidChangeTerminalDimensions.event; }\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate _extHostConfiguration: ExtHostConfiguration,\n\t\tprivate _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTerminalService);\n\t}\n\n\tpublic createTerminal(name?: string, shellPath?: string, shellArgs?: string[]): vscode.Terminal {\n\t\tconst terminal = new ExtHostTerminal(this._proxy, name);\n\t\tterminal.create(shellPath, shellArgs);\n\t\tthis._terminals.push(terminal);\n\t\treturn terminal;\n\t}\n\n\tpublic createTerminalFromOptions(options: vscode.TerminalOptions): vscode.Terminal {\n\t\tconst terminal = new ExtHostTerminal(this._proxy, options.name);\n\t\tterminal.create(options.shellPath, options.shellArgs, options.cwd, options.env, /*options.waitOnExit*/ undefined, options.strictEnv);\n\t\tthis._terminals.push(terminal);\n\t\treturn terminal;\n\t}\n\n\tpublic createTerminalRenderer(name: string): vscode.TerminalRenderer {\n\t\tconst terminal = new ExtHostTerminal(this._proxy, name);\n\t\tterminal._setProcessId(undefined);\n\t\tthis._terminals.push(terminal);\n\n\t\tconst renderer = new ExtHostTerminalRenderer(this._proxy, name, terminal);\n\t\tthis._terminalRenderers.push(renderer);\n\n\t\treturn renderer;\n\t}\n\n\tpublic async resolveTerminalRenderer(id: number): Promise<vscode.TerminalRenderer> {\n\t\t// Check to see if the extension host already knows about this terminal.\n\t\tfor (const terminalRenderer of this._terminalRenderers) {\n\t\t\tif (terminalRenderer._id === id) {\n\t\t\t\treturn terminalRenderer;\n\t\t\t}\n\t\t}\n\n\t\tconst terminal = this._getTerminalById(id);\n\t\tconst renderer = new ExtHostTerminalRenderer(this._proxy, terminal.name, terminal, terminal._id);\n\t\tthis._terminalRenderers.push(renderer);\n\n\t\treturn renderer;\n\t}\n\n\tpublic $acceptActiveTerminalChanged(id: number | null): void {\n\t\tconst original = this._activeTerminal;\n\t\tif (id === null) {\n\t\t\tthis._activeTerminal = undefined;\n\t\t\tif (original !== this._activeTerminal) {\n\t\t\t\tthis._onDidChangeActiveTerminal.fire(this._activeTerminal);\n\t\t\t}\n\t\t}\n\t\tthis._performTerminalIdAction(id, terminal => {\n\t\t\tif (terminal) {\n\t\t\t\tthis._activeTerminal = terminal;\n\t\t\t\tif (original !== this._activeTerminal) {\n\t\t\t\t\tthis._onDidChangeActiveTerminal.fire(this._activeTerminal);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic $acceptTerminalProcessData(id: number, data: string): void {\n\t\tthis._getTerminalByIdEventually(id).then(terminal => {\n\t\t\tif (terminal) {\n\t\t\t\tterminal._fireOnData(data);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async $acceptTerminalDimensions(id: number, cols: number, rows: number): Promise<void> {\n\t\tconst terminal = this._getTerminalById(id);\n\t\tif (terminal) {\n\t\t\tif (terminal.setDimensions(cols, rows)) {\n\t\t\t\tthis._onDidChangeTerminalDimensions.fire({\n\t\t\t\t\tterminal: terminal,\n\t\t\t\t\tdimensions: terminal.dimensions\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// When a terminal's dimensions change, a renderer's _maximum_ dimensions change\n\t\tconst renderer = this._getTerminalRendererById(id);\n\t\tif (renderer) {\n\t\t\trenderer._setMaximumDimensions(cols, rows);\n\t\t}\n\t}\n\n\tpublic $acceptTerminalRendererInput(id: number, data: string): void {\n\t\tconst renderer = this._getTerminalRendererById(id);\n\t\tif (renderer) {\n\t\t\trenderer._fireOnInput(data);\n\t\t}\n\t}\n\n\tpublic $acceptTerminalTitleChange(id: number, name: string): void {\n\t\tconst extHostTerminal = this._getTerminalObjectById(this.terminals, id);\n\t\tif (extHostTerminal) {\n\t\t\textHostTerminal.name = name;\n\t\t}\n\t}\n\n\tpublic $acceptTerminalClosed(id: number): void {\n\t\tconst index = this._getTerminalObjectIndexById(this.terminals, id);\n\t\tif (index !== null) {\n\t\t\tconst terminal = this._terminals.splice(index, 1)[0];\n\t\t\tthis._onDidCloseTerminal.fire(terminal);\n\t\t}\n\t}\n\n\tpublic $acceptTerminalOpened(id: number, name: string): void {\n\t\tconst index = this._getTerminalObjectIndexById(this._terminals, id);\n\t\tif (index !== null) {\n\t\t\t// The terminal has already been created (via createTerminal*), only fire the event\n\t\t\tthis._onDidOpenTerminal.fire(this.terminals[index]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst renderer = this._getTerminalRendererById(id);\n\t\tconst terminal = new ExtHostTerminal(this._proxy, name, id, renderer ? RENDERER_NO_PROCESS_ID : undefined);\n\t\tthis._terminals.push(terminal);\n\t\tthis._onDidOpenTerminal.fire(terminal);\n\t}\n\n\tpublic $acceptTerminalProcessId(id: number, processId: number): void {\n\t\tthis._performTerminalIdAction(id, terminal => terminal._setProcessId(processId));\n\t}\n\n\tprivate _performTerminalIdAction(id: number, callback: (terminal: ExtHostTerminal) => void): void {\n\t\tlet terminal = this._getTerminalById(id);\n\t\tif (terminal) {\n\t\t\tcallback(terminal);\n\t\t} else {\n\t\t\t// Retry one more time in case the terminal has not yet been initialized.\n\t\t\tsetTimeout(() => {\n\t\t\t\tterminal = this._getTerminalById(id);\n\t\t\t\tif (terminal) {\n\t\t\t\t\tcallback(terminal);\n\t\t\t\t}\n\t\t\t}, EXT_HOST_CREATION_DELAY);\n\t\t}\n\t}\n\n\tpublic async $createProcess(id: number, shellLaunchConfigDto: ShellLaunchConfigDto, activeWorkspaceRootUriComponents: UriComponents, cols: number, rows: number): Promise<void> {\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: shellLaunchConfigDto.name,\n\t\t\texecutable: shellLaunchConfigDto.executable,\n\t\t\targs: shellLaunchConfigDto.args,\n\t\t\tcwd: typeof shellLaunchConfigDto.cwd === 'string' ? shellLaunchConfigDto.cwd : URI.revive(shellLaunchConfigDto.cwd),\n\t\t\tenv: shellLaunchConfigDto.env\n\t\t};\n\n\t\t// TODO: This function duplicates a lot of TerminalProcessManager.createProcess, ideally\n\t\t// they would be merged into a single implementation.\n\t\tconst configProvider = await this._extHostConfiguration.getConfigProvider();\n\t\tconst terminalConfig = configProvider.getConfiguration('terminal.integrated');\n\n\t\tif (!shellLaunchConfig.executable) {\n\t\t\t// TODO: This duplicates some of TerminalConfigHelper.mergeDefaultShellPathAndArgs and should be merged\n\t\t\t// this._configHelper.mergeDefaultShellPathAndArgs(shellLaunchConfig);\n\n\t\t\tconst platformKey = platform.isWindows ? 'windows' : platform.isMacintosh ? 'osx' : 'linux';\n\t\t\tconst shellConfigValue: string = terminalConfig.get(`shell.${platformKey}`);\n\t\t\tconst shellArgsConfigValue: string = terminalConfig.get(`shellArgs.${platformKey}`);\n\n\t\t\tshellLaunchConfig.executable = shellConfigValue;\n\t\t\tshellLaunchConfig.args = shellArgsConfigValue;\n\t\t}\n\n\t\t// TODO: @daniel\n\t\tconst activeWorkspaceRootUri = URI.revive(activeWorkspaceRootUriComponents);\n\t\tconst initialCwd = terminalEnvironment.getCwd(shellLaunchConfig, os.homedir(), activeWorkspaceRootUri, terminalConfig.cwd);\n\n\t\t// TODO: Pull in and resolve config settings\n\t\t// // Resolve env vars from config and shell\n\t\t// const lastActiveWorkspaceRoot = this._workspaceContextService.getWorkspaceFolder(lastActiveWorkspaceRootUri);\n\t\tconst platformKey = platform.isWindows ? 'windows' : (platform.isMacintosh ? 'osx' : 'linux');\n\t\t// const envFromConfig = terminalEnvironment.resolveConfigurationVariables(this._configurationResolverService, { ...terminalConfig.env[platformKey] }, lastActiveWorkspaceRoot);\n\t\tconst envFromConfig = { ...terminalConfig.env[platformKey] };\n\t\t// const envFromShell = terminalEnvironment.resolveConfigurationVariables(this._configurationResolverService, { ...shellLaunchConfig.env }, lastActiveWorkspaceRoot);\n\n\t\t// Merge process env with the env from config\n\t\tconst env = { ...process.env };\n\t\tterminalEnvironment.mergeEnvironments(env, envFromConfig);\n\t\tterminalEnvironment.mergeEnvironments(env, shellLaunchConfig.env);\n\n\t\t// Sanitize the environment, removing any undesirable VS Code and Electron environment\n\t\t// variables\n\t\tsanitizeProcessEnvironment(env, 'VSCODE_IPC_HOOK_CLI');\n\n\t\t// Continue env initialization, merging in the env from the launch\n\t\t// config and adding keys that are needed to create the process\n\t\tterminalEnvironment.addTerminalEnvironmentKeys(env, pkg.version, platform.locale, terminalConfig.get('setLocaleVariables'));\n\n\t\t// Fork the process and listen for messages\n\t\tthis._logService.debug(`Terminal process launching on ext host`, shellLaunchConfig, initialCwd, cols, rows, env);\n\t\tconst p = new TerminalProcess(shellLaunchConfig, initialCwd, cols, rows, env, terminalConfig.get('windowsEnableConpty'));\n\t\tp.onProcessIdReady(pid => this._proxy.$sendProcessPid(id, pid));\n\t\tp.onProcessTitleChanged(title => this._proxy.$sendProcessTitle(id, title));\n\t\tp.onProcessData(data => this._proxy.$sendProcessData(id, data));\n\t\tp.onProcessExit((exitCode) => this._onProcessExit(id, exitCode));\n\t\tthis._terminalProcesses[id] = p;\n\t}\n\n\n\tpublic $acceptProcessInput(id: number, data: string): void {\n\t\tthis._terminalProcesses[id].input(data);\n\t}\n\n\tpublic $acceptProcessResize(id: number, cols: number, rows: number): void {\n\t\ttry {\n\t\t\tthis._terminalProcesses[id].resize(cols, rows);\n\t\t} catch (error) {\n\t\t\t// We tried to write to a closed pipe / channel.\n\t\t\tif (error.code !== 'EPIPE' && error.code !== 'ERR_IPC_CHANNEL_CLOSED') {\n\t\t\t\tthrow (error);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic $acceptProcessShutdown(id: number, immediate: boolean): void {\n\t\tthis._terminalProcesses[id].shutdown(immediate);\n\t}\n\n\tpublic $acceptProcessRequestInitialCwd(id: number): void {\n\t\tthis._terminalProcesses[id].getInitialCwd().then(initialCwd => this._proxy.$sendProcessInitialCwd(id, initialCwd));\n\t}\n\n\tpublic $acceptProcessRequestCwd(id: number): void {\n\t\tthis._terminalProcesses[id].getCwd().then(cwd => this._proxy.$sendProcessCwd(id, cwd));\n\t}\n\n\tprivate _onProcessExit(id: number, exitCode: number): void {\n\t\t// Remove listeners\n\t\tthis._terminalProcesses[id].dispose();\n\n\t\t// Remove process reference\n\t\tdelete this._terminalProcesses[id];\n\n\t\t// Send exit event to main side\n\t\tthis._proxy.$sendProcessExit(id, exitCode);\n\n\t}\n\n\tprivate _getTerminalByIdEventually(id: number, retries: number = 5): Promise<ExtHostTerminal> {\n\t\tif (!this._getTerminalPromises[id]) {\n\t\t\tthis._getTerminalPromises[id] = this._createGetTerminalPromise(id, retries);\n\t\t} else {\n\t\t\tthis._getTerminalPromises[id].then(c => {\n\t\t\t\treturn this._createGetTerminalPromise(id, retries);\n\t\t\t});\n\t\t}\n\t\treturn this._getTerminalPromises[id];\n\t}\n\n\tprivate _createGetTerminalPromise(id: number, retries: number = 5): Promise<ExtHostTerminal> {\n\t\treturn new Promise(c => {\n\t\t\tif (retries === 0) {\n\t\t\t\tc(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst terminal = this._getTerminalById(id);\n\t\t\tif (terminal) {\n\t\t\t\tc(terminal);\n\t\t\t} else {\n\t\t\t\t// This should only be needed immediately after createTerminalRenderer is called as\n\t\t\t\t// the ExtHostTerminal has not yet been iniitalized\n\t\t\t\ttimeout(200).then(() => c(this._getTerminalByIdEventually(id, retries - 1)));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _getTerminalById(id: number): ExtHostTerminal {\n\t\treturn this._getTerminalObjectById(this._terminals, id);\n\t}\n\n\tprivate _getTerminalRendererById(id: number): ExtHostTerminalRenderer {\n\t\treturn this._getTerminalObjectById(this._terminalRenderers, id);\n\t}\n\n\tprivate _getTerminalObjectById<T extends ExtHostTerminal | ExtHostTerminalRenderer>(array: T[], id: number): T {\n\t\tconst index = this._getTerminalObjectIndexById(array, id);\n\t\treturn index !== null ? array[index] : null;\n\t}\n\n\tprivate _getTerminalObjectIndexById<T extends ExtHostTerminal | ExtHostTerminalRenderer>(array: T[], id: number): number {\n\t\tlet index: number | null = null;\n\t\tarray.some((item, i) => {\n\t\t\tconst thisId = item._id;\n\t\t\tif (thisId === id) {\n\t\t\t\tindex = i;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\treturn index;\n\t}\n}\n\nclass ApiRequest {\n\tprivate _callback: (...args: any[]) => void;\n\tprivate _args: any[];\n\n\tconstructor(callback: (...args: any[]) => void, args: any[]) {\n\t\tthis._callback = callback;\n\t\tthis._args = args;\n\t}\n\n\tpublic run(proxy: MainThreadTerminalServiceShape, id: number) {\n\t\tthis._callback.apply(proxy, [id].concat(this._args));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as Objects from 'vs/base/common/objects';\nimport { asPromise } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { win32 } from 'vs/base/node/processes';\n\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\n\nimport { MainContext, MainThreadTaskShape, ExtHostTaskShape, IMainContext } from 'vs/workbench/api/node/extHost.protocol';\n\nimport * as types from 'vs/workbench/api/node/extHostTypes';\nimport { ExtHostWorkspace, IExtHostWorkspaceProvider } from 'vs/workbench/api/node/extHostWorkspace';\nimport * as vscode from 'vscode';\nimport {\n\tTaskDefinitionDTO, TaskExecutionDTO, TaskPresentationOptionsDTO,\n\tProcessExecutionOptionsDTO, ProcessExecutionDTO,\n\tShellExecutionOptionsDTO, ShellExecutionDTO,\n\tCustomExecutionDTO,\n\tTaskDTO, TaskHandleDTO, TaskFilterDTO, TaskProcessStartedDTO, TaskProcessEndedDTO, TaskSystemInfoDTO, TaskSetDTO\n} from '../shared/tasks';\nimport { ExtHostVariableResolverService } from 'vs/workbench/api/node/extHostDebugService';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/node/extHostDocumentsAndEditors';\nimport { ExtHostConfiguration } from 'vs/workbench/api/node/extHostConfiguration';\nimport { ExtHostTerminalService, ExtHostTerminal } from 'vs/workbench/api/node/extHostTerminalService';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nnamespace TaskDefinitionDTO {\n\texport function from(value: vscode.TaskDefinition): TaskDefinitionDTO {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: TaskDefinitionDTO): vscode.TaskDefinition {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace TaskPresentationOptionsDTO {\n\texport function from(value: vscode.TaskPresentationOptions): TaskPresentationOptionsDTO {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: TaskPresentationOptionsDTO): vscode.TaskPresentationOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace ProcessExecutionOptionsDTO {\n\texport function from(value: vscode.ProcessExecutionOptions): ProcessExecutionOptionsDTO {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: ProcessExecutionOptionsDTO): vscode.ProcessExecutionOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace ProcessExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is ProcessExecutionDTO {\n\t\tconst candidate = value as ProcessExecutionDTO;\n\t\treturn candidate && !!candidate.process;\n\t}\n\texport function from(value: vscode.ProcessExecution): ProcessExecutionDTO {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: ProcessExecutionDTO = {\n\t\t\tprocess: value.process,\n\t\t\targs: value.args\n\t\t};\n\t\tif (value.options) {\n\t\t\tresult.options = ProcessExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ProcessExecutionDTO): types.ProcessExecution {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new types.ProcessExecution(value.process, value.args, value.options);\n\t}\n}\n\nnamespace ShellExecutionOptionsDTO {\n\texport function from(value: vscode.ShellExecutionOptions): ShellExecutionOptionsDTO {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n\texport function to(value: ShellExecutionOptionsDTO): vscode.ShellExecutionOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn value;\n\t}\n}\n\nnamespace ShellExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is ShellExecutionDTO {\n\t\tconst candidate = value as ShellExecutionDTO;\n\t\treturn candidate && (!!candidate.commandLine || !!candidate.command);\n\t}\n\texport function from(value: vscode.ShellExecution): ShellExecutionDTO {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: ShellExecutionDTO = {\n\t\t};\n\t\tif (value.commandLine !== undefined) {\n\t\t\tresult.commandLine = value.commandLine;\n\t\t} else {\n\t\t\tresult.command = value.command;\n\t\t\tresult.args = value.args;\n\t\t}\n\t\tif (value.options) {\n\t\t\tresult.options = ShellExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ShellExecutionDTO): types.ShellExecution {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (value.commandLine) {\n\t\t\treturn new types.ShellExecution(value.commandLine, value.options);\n\t\t} else {\n\t\t\treturn new types.ShellExecution(value.command, value.args ? value.args : [], value.options);\n\t\t}\n\t}\n}\n\nnamespace CustomExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is CustomExecutionDTO {\n\t\tlet candidate = value as CustomExecutionDTO;\n\t\treturn candidate && candidate.customExecution === 'customExecution';\n\t}\n\n\texport function from(value: vscode.CustomExecution): CustomExecutionDTO {\n\t\treturn {\n\t\t\tcustomExecution: 'customExecution'\n\t\t};\n\t}\n}\n\nnamespace TaskHandleDTO {\n\texport function from(value: types.Task): TaskHandleDTO {\n\t\tlet folder: UriComponents | undefined;\n\t\tif (value.scope !== undefined && typeof value.scope !== 'number') {\n\t\t\tfolder = value.scope.uri;\n\t\t}\n\t\treturn {\n\t\t\tid: value._id,\n\t\t\tworkspaceFolder: folder\n\t\t};\n\t}\n}\n\nnamespace TaskDTO {\n\n\texport function fromMany(tasks: vscode.Task[], extension: IExtensionDescription): TaskDTO[] {\n\t\tif (tasks === undefined || tasks === null) {\n\t\t\treturn [];\n\t\t}\n\t\tconst result: TaskDTO[] = [];\n\t\tfor (let task of tasks) {\n\t\t\tconst converted = from(task, extension);\n\t\t\tif (converted) {\n\t\t\t\tresult.push(converted);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function from(value: vscode.Task, extension: IExtensionDescription): TaskDTO {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet execution: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO | undefined;\n\t\tif (value.execution instanceof types.ProcessExecution) {\n\t\t\texecution = ProcessExecutionDTO.from(value.execution);\n\t\t} else if (value.execution instanceof types.ShellExecution) {\n\t\t\texecution = ShellExecutionDTO.from(value.execution);\n\t\t} else if ((<vscode.Task2>value).execution2 && (<vscode.Task2>value).execution2 instanceof types.CustomExecution) {\n\t\t\texecution = CustomExecutionDTO.from(<types.CustomExecution>(<vscode.Task2>value).execution2);\n\t\t}\n\t\tconst definition: TaskDefinitionDTO = TaskDefinitionDTO.from(value.definition);\n\t\tlet scope: number | UriComponents;\n\t\tif (value.scope) {\n\t\t\tif (typeof value.scope === 'number') {\n\t\t\t\tscope = value.scope;\n\t\t\t} else {\n\t\t\t\tscope = value.scope.uri;\n\t\t\t}\n\t\t} else {\n\t\t\t// To continue to support the deprecated task constructor that doesn't take a scope, we must add a scope here:\n\t\t\tscope = types.TaskScope.Workspace;\n\t\t}\n\t\tif (!definition || !scope) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst group = (value.group as types.TaskGroup) ? (value.group as types.TaskGroup).id : undefined;\n\t\tconst result: TaskDTO = {\n\t\t\t_id: (value as types.Task)._id,\n\t\t\tdefinition,\n\t\t\tname: value.name,\n\t\t\tsource: {\n\t\t\t\textensionId: extension.identifier.value,\n\t\t\t\tlabel: value.source,\n\t\t\t\tscope: scope\n\t\t\t},\n\t\t\texecution,\n\t\t\tisBackground: value.isBackground,\n\t\t\tgroup: group,\n\t\t\tpresentationOptions: TaskPresentationOptionsDTO.from(value.presentationOptions),\n\t\t\tproblemMatchers: value.problemMatchers,\n\t\t\thasDefinedMatchers: (value as types.Task).hasDefinedMatchers,\n\t\t\trunOptions: (<vscode.Task>value).runOptions ? (<vscode.Task>value).runOptions : { reevaluateOnRerun: true },\n\t\t};\n\t\treturn result;\n\t}\n\texport async function to(value: TaskDTO, workspace: IExtHostWorkspaceProvider): Promise<types.Task> {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet execution: types.ShellExecution | types.ProcessExecution | undefined;\n\t\tif (ProcessExecutionDTO.is(value.execution)) {\n\t\t\texecution = ProcessExecutionDTO.to(value.execution);\n\t\t} else if (ShellExecutionDTO.is(value.execution)) {\n\t\t\texecution = ShellExecutionDTO.to(value.execution);\n\t\t}\n\t\tconst definition: vscode.TaskDefinition = TaskDefinitionDTO.to(value.definition);\n\t\tlet scope: vscode.TaskScope.Global | vscode.TaskScope.Workspace | vscode.WorkspaceFolder | undefined;\n\t\tif (value.source) {\n\t\t\tif (value.source.scope !== undefined) {\n\t\t\t\tif (typeof value.source.scope === 'number') {\n\t\t\t\t\tscope = value.source.scope;\n\t\t\t\t} else {\n\t\t\t\t\tscope = await workspace.resolveWorkspaceFolder(URI.revive(value.source.scope));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscope = types.TaskScope.Workspace;\n\t\t\t}\n\t\t}\n\t\tif (!definition || !scope) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result = new types.Task(definition, scope, value.name, value.source.label, execution, value.problemMatchers);\n\t\tif (value.isBackground !== undefined) {\n\t\t\tresult.isBackground = value.isBackground;\n\t\t}\n\t\tif (value.group !== undefined) {\n\t\t\tresult.group = types.TaskGroup.from(value.group);\n\t\t}\n\t\tif (value.presentationOptions) {\n\t\t\tresult.presentationOptions = TaskPresentationOptionsDTO.to(value.presentationOptions);\n\t\t}\n\t\tif (value._id) {\n\t\t\tresult._id = value._id;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace TaskFilterDTO {\n\texport function from(value: vscode.TaskFilter): TaskFilterDTO {\n\t\treturn value;\n\t}\n\n\texport function to(value: TaskFilterDTO): vscode.TaskFilter {\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Objects.assign(Object.create(null), value);\n\t}\n}\n\nclass TaskExecutionImpl implements vscode.TaskExecution {\n\n\tconstructor(private readonly _tasks: ExtHostTask, readonly _id: string, private readonly _task: vscode.Task) {\n\t}\n\n\tpublic get task(): vscode.Task {\n\t\treturn this._task;\n\t}\n\n\tpublic terminate(): void {\n\t\tthis._tasks.terminateTask(this);\n\t}\n\n\tpublic fireDidStartProcess(value: TaskProcessStartedDTO): void {\n\t}\n\n\tpublic fireDidEndProcess(value: TaskProcessEndedDTO): void {\n\t}\n}\n\nnamespace TaskExecutionDTO {\n\texport async function to(value: TaskExecutionDTO, tasks: ExtHostTask, workspaceProvider: IExtHostWorkspaceProvider): Promise<vscode.TaskExecution> {\n\t\treturn new TaskExecutionImpl(tasks, value.id, await TaskDTO.to(value.task, workspaceProvider));\n\t}\n\texport function from(value: vscode.TaskExecution): TaskExecutionDTO {\n\t\treturn {\n\t\t\tid: (value as TaskExecutionImpl)._id,\n\t\t\ttask: undefined\n\t\t};\n\t}\n}\n\ninterface HandlerData {\n\tprovider: vscode.TaskProvider;\n\textension: IExtensionDescription;\n}\n\nclass CustomExecutionData implements IDisposable {\n\tprivate static waitForDimensionsTimeoutInMs: number = 5000;\n\tprivate _cancellationSource?: CancellationTokenSource;\n\tprivate readonly _onTaskExecutionComplete: Emitter<CustomExecutionData> = new Emitter<CustomExecutionData>();\n\tprivate readonly _disposables: IDisposable[] = [];\n\tprivate terminal?: vscode.Terminal;\n\tprivate terminalId?: number;\n\tpublic result: number | undefined;\n\n\tconstructor(\n\t\tprivate readonly customExecution: vscode.CustomExecution,\n\t\tprivate readonly terminalService: ExtHostTerminalService) {\n\t}\n\n\tpublic dispose(): void {\n\t\tdispose(this._disposables);\n\t}\n\n\tpublic get onTaskExecutionComplete(): Event<CustomExecutionData> {\n\t\treturn this._onTaskExecutionComplete.event;\n\t}\n\n\tprivate onDidCloseTerminal(terminal: vscode.Terminal): void {\n\t\tif (this.terminal === terminal) {\n\t\t\tthis._cancellationSource.cancel();\n\t\t}\n\t}\n\n\tprivate onDidOpenTerminal(terminal: vscode.Terminal): void {\n\t\tif (!(terminal instanceof ExtHostTerminal)) {\n\t\t\tthrow new Error('How could this not be a extension host terminal?');\n\t\t}\n\n\t\tif (this.terminalId && terminal._id === this.terminalId) {\n\t\t\tthis.startCallback(this.terminalId);\n\t\t}\n\t}\n\n\tpublic async startCallback(terminalId: number): Promise<void> {\n\t\tthis.terminalId = terminalId;\n\n\t\t// If we have already started the extension task callback, then\n\t\t// do not start it again.\n\t\t// It is completely valid for multiple terminals to be opened\n\t\t// before the one for our task.\n\t\tif (this._cancellationSource) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst callbackTerminals: vscode.Terminal[] = this.terminalService.terminals.filter((terminal) => terminal._id === terminalId);\n\n\t\tif (!callbackTerminals || callbackTerminals.length === 0) {\n\t\t\tthis._disposables.push(this.terminalService.onDidOpenTerminal(this.onDidOpenTerminal.bind(this)));\n\t\t\treturn;\n\t\t}\n\n\t\tif (callbackTerminals.length !== 1) {\n\t\t\tthrow new Error(`Expected to only have one terminal at this point`);\n\t\t}\n\n\t\tthis.terminal = callbackTerminals[0];\n\t\tconst terminalRenderer: vscode.TerminalRenderer = await this.terminalService.resolveTerminalRenderer(terminalId);\n\n\t\t// If we don't have the maximum dimensions yet, then we need to wait for them (but not indefinitely).\n\t\t// Custom executions will expect the dimensions to be set properly before they are launched.\n\t\t// BUT, due to the API contract VSCode has for terminals and dimensions, they are still responsible for\n\t\t// handling cases where they are not set.\n\t\tif (!terminalRenderer.maximumDimensions) {\n\t\t\tconst dimensionTimeout: Promise<void> = new Promise((resolve) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t}, CustomExecutionData.waitForDimensionsTimeoutInMs);\n\t\t\t});\n\n\t\t\tlet dimensionsRegistration: IDisposable | undefined;\n\t\t\tconst dimensionsPromise: Promise<void> = new Promise((resolve) => {\n\t\t\t\tdimensionsRegistration = terminalRenderer.onDidChangeMaximumDimensions((newDimensions) => {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tawait Promise.race([dimensionTimeout, dimensionsPromise]);\n\t\t\tif (dimensionsRegistration) {\n\t\t\t\tdimensionsRegistration.dispose();\n\t\t\t}\n\t\t}\n\n\t\tthis._cancellationSource = new CancellationTokenSource();\n\t\tthis._disposables.push(this._cancellationSource);\n\n\t\tthis._disposables.push(this.terminalService.onDidCloseTerminal(this.onDidCloseTerminal.bind(this)));\n\n\t\t// Regardless of how the task completes, we are done with this custom execution task.\n\t\tthis.customExecution.callback(terminalRenderer, this._cancellationSource.token).then(\n\t\t\t(success) => {\n\t\t\t\tthis.result = success;\n\t\t\t\tthis._onTaskExecutionComplete.fire(this);\n\t\t\t}, (rejected) => {\n\t\t\t\tthis._onTaskExecutionComplete.fire(this);\n\t\t\t});\n\t}\n}\n\nexport class ExtHostTask implements ExtHostTaskShape {\n\n\tprivate _proxy: MainThreadTaskShape;\n\tprivate _workspaceProvider: IExtHostWorkspaceProvider;\n\tprivate _editorService: ExtHostDocumentsAndEditors;\n\tprivate _configurationService: ExtHostConfiguration;\n\tprivate _terminalService: ExtHostTerminalService;\n\tprivate _handleCounter: number;\n\tprivate _handlers: Map<number, HandlerData>;\n\tprivate _taskExecutions: Map<string, TaskExecutionImpl>;\n\tprivate _providedCustomExecutions: Map<string, CustomExecutionData>;\n\tprivate _activeCustomExecutions: Map<string, CustomExecutionData>;\n\n\tprivate readonly _onDidExecuteTask: Emitter<vscode.TaskStartEvent> = new Emitter<vscode.TaskStartEvent>();\n\tprivate readonly _onDidTerminateTask: Emitter<vscode.TaskEndEvent> = new Emitter<vscode.TaskEndEvent>();\n\n\tprivate readonly _onDidTaskProcessStarted: Emitter<vscode.TaskProcessStartEvent> = new Emitter<vscode.TaskProcessStartEvent>();\n\tprivate readonly _onDidTaskProcessEnded: Emitter<vscode.TaskProcessEndEvent> = new Emitter<vscode.TaskProcessEndEvent>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tworkspaceService: ExtHostWorkspace,\n\t\teditorService: ExtHostDocumentsAndEditors,\n\t\tconfigurationService: ExtHostConfiguration,\n\t\textHostTerminalService: ExtHostTerminalService) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTask);\n\t\tthis._workspaceProvider = workspaceService;\n\t\tthis._editorService = editorService;\n\t\tthis._configurationService = configurationService;\n\t\tthis._terminalService = extHostTerminalService;\n\t\tthis._handleCounter = 0;\n\t\tthis._handlers = new Map<number, HandlerData>();\n\t\tthis._taskExecutions = new Map<string, TaskExecutionImpl>();\n\t\tthis._providedCustomExecutions = new Map<string, CustomExecutionData>();\n\t\tthis._activeCustomExecutions = new Map<string, CustomExecutionData>();\n\t}\n\n\tpublic registerTaskProvider(extension: IExtensionDescription, provider: vscode.TaskProvider): vscode.Disposable {\n\t\tif (!provider) {\n\t\t\treturn new types.Disposable(() => { });\n\t\t}\n\t\tconst handle = this.nextHandle();\n\t\tthis._handlers.set(handle, { provider, extension });\n\t\tthis._proxy.$registerTaskProvider(handle);\n\t\treturn new types.Disposable(() => {\n\t\t\tthis._handlers.delete(handle);\n\t\t\tthis._proxy.$unregisterTaskProvider(handle);\n\t\t});\n\t}\n\n\tpublic registerTaskSystem(scheme: string, info: TaskSystemInfoDTO): void {\n\t\tthis._proxy.$registerTaskSystem(scheme, info);\n\t}\n\n\tpublic fetchTasks(filter?: vscode.TaskFilter): Promise<vscode.Task[]> {\n\t\treturn this._proxy.$fetchTasks(TaskFilterDTO.from(filter)).then(async (values) => {\n\t\t\tconst result: vscode.Task[] = [];\n\t\t\tfor (let value of values) {\n\t\t\t\tconst task = await TaskDTO.to(value, this._workspaceProvider);\n\t\t\t\tif (task) {\n\t\t\t\t\tresult.push(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tpublic async executeTask(extension: IExtensionDescription, task: vscode.Task): Promise<vscode.TaskExecution> {\n\t\tconst tTask = (task as types.Task);\n\t\t// We have a preserved ID. So the task didn't change.\n\t\tif (tTask._id !== undefined) {\n\t\t\treturn this._proxy.$executeTask(TaskHandleDTO.from(tTask)).then(value => this.getTaskExecution(value, task));\n\t\t} else {\n\t\t\tconst dto = TaskDTO.from(task, extension);\n\t\t\tif (dto === undefined) {\n\t\t\t\treturn Promise.reject(new Error('Task is not valid'));\n\t\t\t}\n\t\t\treturn this._proxy.$executeTask(dto).then(value => this.getTaskExecution(value, task));\n\t\t}\n\t}\n\n\tpublic get taskExecutions(): vscode.TaskExecution[] {\n\t\tconst result: vscode.TaskExecution[] = [];\n\t\tthis._taskExecutions.forEach(value => result.push(value));\n\t\treturn result;\n\t}\n\n\tpublic terminateTask(execution: vscode.TaskExecution): Promise<void> {\n\t\tif (!(execution instanceof TaskExecutionImpl)) {\n\t\t\tthrow new Error('No valid task execution provided');\n\t\t}\n\t\treturn this._proxy.$terminateTask((execution as TaskExecutionImpl)._id);\n\t}\n\n\tpublic get onDidStartTask(): Event<vscode.TaskStartEvent> {\n\t\treturn this._onDidExecuteTask.event;\n\t}\n\n\tpublic async $onDidStartTask(execution: TaskExecutionDTO, terminalId: number): Promise<void> {\n\t\t// Once a terminal is spun up for the custom execution task this event will be fired.\n\t\t// At that point, we need to actually start the callback, but\n\t\t// only if it hasn't already begun.\n\t\tconst extensionCallback: CustomExecutionData | undefined = this._providedCustomExecutions.get(execution.id);\n\t\tif (extensionCallback) {\n\t\t\tif (this._activeCustomExecutions.get(execution.id) !== undefined) {\n\t\t\t\tthrow new Error('We should not be trying to start the same custom task executions twice.');\n\t\t\t}\n\n\t\t\tthis._activeCustomExecutions.set(execution.id, extensionCallback);\n\n\t\t\tconst taskExecutionComplete: IDisposable = extensionCallback.onTaskExecutionComplete(() => {\n\t\t\t\tthis.customExecutionComplete(execution);\n\t\t\t\ttaskExecutionComplete.dispose();\n\t\t\t});\n\n\t\t\textensionCallback.startCallback(terminalId);\n\t\t}\n\n\t\tthis._onDidExecuteTask.fire({\n\t\t\texecution: await this.getTaskExecution(execution)\n\t\t});\n\t}\n\n\tpublic get onDidEndTask(): Event<vscode.TaskEndEvent> {\n\t\treturn this._onDidTerminateTask.event;\n\t}\n\n\tpublic async $OnDidEndTask(execution: TaskExecutionDTO): Promise<void> {\n\t\tconst _execution = await this.getTaskExecution(execution);\n\t\tthis._taskExecutions.delete(execution.id);\n\t\tthis.customExecutionComplete(execution);\n\t\tthis._onDidTerminateTask.fire({\n\t\t\texecution: _execution\n\t\t});\n\t}\n\n\tpublic get onDidStartTaskProcess(): Event<vscode.TaskProcessStartEvent> {\n\t\treturn this._onDidTaskProcessStarted.event;\n\t}\n\n\tpublic async $onDidStartTaskProcess(value: TaskProcessStartedDTO): Promise<void> {\n\t\tconst execution = await this.getTaskExecution(value.id);\n\t\tif (execution) {\n\t\t\tthis._onDidTaskProcessStarted.fire({\n\t\t\t\texecution: execution,\n\t\t\t\tprocessId: value.processId\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic get onDidEndTaskProcess(): Event<vscode.TaskProcessEndEvent> {\n\t\treturn this._onDidTaskProcessEnded.event;\n\t}\n\n\tpublic async $onDidEndTaskProcess(value: TaskProcessEndedDTO): Promise<void> {\n\t\tconst execution = await this.getTaskExecution(value.id);\n\t\tif (execution) {\n\t\t\tthis._onDidTaskProcessEnded.fire({\n\t\t\t\texecution: execution,\n\t\t\t\texitCode: value.exitCode\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic $provideTasks(handle: number, validTypes: { [key: string]: boolean; }): Thenable<TaskSetDTO> {\n\t\tconst handler = this._handlers.get(handle);\n\t\tif (!handler) {\n\t\t\treturn Promise.reject(new Error('no handler found'));\n\t\t}\n\n\t\t// For custom execution tasks, we need to store the execution objects locally\n\t\t// since we obviously cannot send callback functions through the proxy.\n\t\t// So, clear out any existing ones.\n\t\tthis._providedCustomExecutions.clear();\n\n\t\t// Set up a list of task ID promises that we can wait on\n\t\t// before returning the provided tasks. The ensures that\n\t\t// our task IDs are calculated for any custom execution tasks.\n\t\t// Knowing this ID ahead of time is needed because when a task\n\t\t// start event is fired this is when the custom execution is called.\n\t\t// The task start event is also the first time we see the ID from the main\n\t\t// thread, which is too late for us because we need to save an map\n\t\t// from an ID to the custom execution function. (Kind of a cart before the horse problem).\n\t\tconst taskIdPromises: Promise<void>[] = [];\n\t\tconst fetchPromise = asPromise(() => handler.provider.provideTasks(CancellationToken.None)).then(value => {\n\t\t\tconst taskDTOs: TaskDTO[] = [];\n\t\t\tfor (let task of value) {\n\t\t\t\tif (!task.definition || !validTypes[task.definition.type]) {\n\t\t\t\t\tconsole.warn(`The task [${task.source}, ${task.name}] uses an undefined task type. The task will be ignored in the future.`);\n\t\t\t\t}\n\n\t\t\t\tconst taskDTO: TaskDTO = TaskDTO.from(task, handler.extension);\n\t\t\t\ttaskDTOs.push(taskDTO);\n\n\t\t\t\tif (CustomExecutionDTO.is(taskDTO.execution)) {\n\t\t\t\t\ttaskIdPromises.push(new Promise((resolve) => {\n\t\t\t\t\t\t// The ID is calculated on the main thread task side, so, let's call into it here.\n\t\t\t\t\t\t// We need the task id's pre-computed for custom task executions because when OnDidStartTask\n\t\t\t\t\t\t// is invoked, we have to be able to map it back to our data.\n\t\t\t\t\t\tthis._proxy.$createTaskId(taskDTO).then((taskId) => {\n\t\t\t\t\t\t\tthis._providedCustomExecutions.set(taskId, new CustomExecutionData(<vscode.CustomExecution>(<vscode.Task2>task).execution2, this._terminalService));\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttasks: taskDTOs,\n\t\t\t\textension: handler.extension\n\t\t\t};\n\t\t});\n\n\t\treturn new Promise((resolve) => {\n\t\t\tfetchPromise.then((result) => {\n\t\t\t\tPromise.all(taskIdPromises).then(() => {\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async $resolveVariables(uriComponents: UriComponents, toResolve: { process?: { name: string; cwd?: string; path?: string }, variables: string[] }): Promise<{ process?: string, variables: { [key: string]: string; } }> {\n\t\tconst configProvider = await this._configurationService.getConfigProvider();\n\t\tconst uri: URI = URI.revive(uriComponents);\n\t\tconst result = {\n\t\t\tprocess: undefined as string,\n\t\t\tvariables: Object.create(null)\n\t\t};\n\t\tconst workspaceFolder = await this._workspaceProvider.resolveWorkspaceFolder(uri);\n\t\tconst workspaceFolders = await this._workspaceProvider.getWorkspaceFolders2();\n\t\tconst resolver = new ExtHostVariableResolverService(workspaceFolders, this._editorService, configProvider);\n\t\tconst ws: IWorkspaceFolder = {\n\t\t\turi: workspaceFolder.uri,\n\t\t\tname: workspaceFolder.name,\n\t\t\tindex: workspaceFolder.index,\n\t\t\ttoResource: () => {\n\t\t\t\tthrow new Error('Not implemented');\n\t\t\t}\n\t\t};\n\t\tfor (let variable of toResolve.variables) {\n\t\t\tresult.variables[variable] = resolver.resolve(ws, variable);\n\t\t}\n\t\tif (toResolve.process !== undefined) {\n\t\t\tlet paths: string[] | undefined = undefined;\n\t\t\tif (toResolve.process.path !== undefined) {\n\t\t\t\tpaths = toResolve.process.path.split(path.delimiter);\n\t\t\t\tfor (let i = 0; i < paths.length; i++) {\n\t\t\t\t\tpaths[i] = resolver.resolve(ws, paths[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.process = win32.findExecutable(\n\t\t\t\tresolver.resolve(ws, toResolve.process.name),\n\t\t\t\ttoResolve.process.cwd !== undefined ? resolver.resolve(ws, toResolve.process.cwd) : undefined,\n\t\t\t\tpaths\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate nextHandle(): number {\n\t\treturn this._handleCounter++;\n\t}\n\n\tprivate async getTaskExecution(execution: TaskExecutionDTO | string, task?: vscode.Task): Promise<TaskExecutionImpl> {\n\t\tif (typeof execution === 'string') {\n\t\t\treturn this._taskExecutions.get(execution);\n\t\t}\n\n\t\tlet result: TaskExecutionImpl = this._taskExecutions.get(execution.id);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tresult = new TaskExecutionImpl(this, execution.id, task ? task : await TaskDTO.to(execution.task, this._workspaceProvider));\n\t\tthis._taskExecutions.set(execution.id, result);\n\t\treturn result;\n\t}\n\n\tprivate customExecutionComplete(execution: TaskExecutionDTO): void {\n\t\tconst extensionCallback: CustomExecutionData | undefined = this._activeCustomExecutions.get(execution.id);\n\t\tif (extensionCallback) {\n\t\t\tthis._activeCustomExecutions.delete(execution.id);\n\t\t\tthis._proxy.$customExecutionComplete(execution.id, extensionCallback.result);\n\t\t\textensionCallback.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as arrays from 'vs/base/common/arrays';\nimport { ExtHostEditorsShape, IEditorPropertiesChangeData, IMainContext, ITextDocumentShowOptions, ITextEditorPositionData, MainContext, MainThreadTextEditorsShape } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/node/extHostDocumentsAndEditors';\nimport { ExtHostTextEditor, TextEditorDecorationType } from 'vs/workbench/api/node/extHostTextEditor';\nimport * as TypeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport { TextEditorSelectionChangeKind } from 'vs/workbench/api/node/extHostTypes';\nimport * as vscode from 'vscode';\n\nexport class ExtHostEditors implements ExtHostEditorsShape {\n\n\tprivate readonly _onDidChangeTextEditorSelection = new Emitter<vscode.TextEditorSelectionChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorOptions = new Emitter<vscode.TextEditorOptionsChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorVisibleRanges = new Emitter<vscode.TextEditorVisibleRangesChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorViewColumn = new Emitter<vscode.TextEditorViewColumnChangeEvent>();\n\tprivate readonly _onDidChangeActiveTextEditor = new Emitter<vscode.TextEditor | undefined>();\n\tprivate readonly _onDidChangeVisibleTextEditors = new Emitter<vscode.TextEditor[]>();\n\n\treadonly onDidChangeTextEditorSelection: Event<vscode.TextEditorSelectionChangeEvent> = this._onDidChangeTextEditorSelection.event;\n\treadonly onDidChangeTextEditorOptions: Event<vscode.TextEditorOptionsChangeEvent> = this._onDidChangeTextEditorOptions.event;\n\treadonly onDidChangeTextEditorVisibleRanges: Event<vscode.TextEditorVisibleRangesChangeEvent> = this._onDidChangeTextEditorVisibleRanges.event;\n\treadonly onDidChangeTextEditorViewColumn: Event<vscode.TextEditorViewColumnChangeEvent> = this._onDidChangeTextEditorViewColumn.event;\n\treadonly onDidChangeActiveTextEditor: Event<vscode.TextEditor | undefined> = this._onDidChangeActiveTextEditor.event;\n\treadonly onDidChangeVisibleTextEditors: Event<vscode.TextEditor[]> = this._onDidChangeVisibleTextEditors.event;\n\n\n\tprivate _proxy: MainThreadTextEditorsShape;\n\tprivate _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\textHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTextEditors);\n\t\tthis._extHostDocumentsAndEditors = extHostDocumentsAndEditors;\n\n\t\tthis._extHostDocumentsAndEditors.onDidChangeVisibleTextEditors(e => this._onDidChangeVisibleTextEditors.fire(e));\n\t\tthis._extHostDocumentsAndEditors.onDidChangeActiveTextEditor(e => this._onDidChangeActiveTextEditor.fire(e));\n\t}\n\n\tgetActiveTextEditor(): ExtHostTextEditor | undefined {\n\t\treturn this._extHostDocumentsAndEditors.activeEditor();\n\t}\n\n\tgetVisibleTextEditors(): vscode.TextEditor[] {\n\t\treturn this._extHostDocumentsAndEditors.allEditors();\n\t}\n\n\tshowTextDocument(document: vscode.TextDocument, column: vscode.ViewColumn, preserveFocus: boolean): Promise<vscode.TextEditor>;\n\tshowTextDocument(document: vscode.TextDocument, options: { column: vscode.ViewColumn, preserveFocus: boolean, pinned: boolean }): Promise<vscode.TextEditor>;\n\tshowTextDocument(document: vscode.TextDocument, columnOrOptions: vscode.ViewColumn | vscode.TextDocumentShowOptions | undefined, preserveFocus?: boolean): Promise<vscode.TextEditor>;\n\tshowTextDocument(document: vscode.TextDocument, columnOrOptions: vscode.ViewColumn | vscode.TextDocumentShowOptions | undefined, preserveFocus?: boolean): Promise<vscode.TextEditor> {\n\t\tlet options: ITextDocumentShowOptions;\n\t\tif (typeof columnOrOptions === 'number') {\n\t\t\toptions = {\n\t\t\t\tposition: TypeConverters.ViewColumn.from(columnOrOptions),\n\t\t\t\tpreserveFocus\n\t\t\t};\n\t\t} else if (typeof columnOrOptions === 'object') {\n\t\t\toptions = {\n\t\t\t\tposition: TypeConverters.ViewColumn.from(columnOrOptions.viewColumn),\n\t\t\t\tpreserveFocus: columnOrOptions.preserveFocus,\n\t\t\t\tselection: typeof columnOrOptions.selection === 'object' ? TypeConverters.Range.from(columnOrOptions.selection) : undefined,\n\t\t\t\tpinned: typeof columnOrOptions.preview === 'boolean' ? !columnOrOptions.preview : undefined\n\t\t\t};\n\t\t} else {\n\t\t\toptions = {\n\t\t\t\tpreserveFocus: false\n\t\t\t};\n\t\t}\n\n\t\treturn this._proxy.$tryShowTextDocument(document.uri, options).then(id => {\n\t\t\tconst editor = id && this._extHostDocumentsAndEditors.getEditor(id);\n\t\t\tif (editor) {\n\t\t\t\treturn editor;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Failed to show text document ${document.uri.toString()}, should show in editor #${id}`);\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateTextEditorDecorationType(options: vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\treturn new TextEditorDecorationType(this._proxy, options);\n\t}\n\n\tapplyWorkspaceEdit(edit: vscode.WorkspaceEdit): Promise<boolean> {\n\t\tconst dto = TypeConverters.WorkspaceEdit.from(edit, this._extHostDocumentsAndEditors);\n\t\treturn this._proxy.$tryApplyWorkspaceEdit(dto);\n\t}\n\n\t// --- called from main thread\n\n\t$acceptEditorPropertiesChanged(id: string, data: IEditorPropertiesChangeData): void {\n\t\tconst textEditor = this._extHostDocumentsAndEditors.getEditor(id);\n\t\tif (!textEditor) {\n\t\t\tthrow new Error('unknown text editor');\n\t\t}\n\n\t\t// (1) set all properties\n\t\tif (data.options) {\n\t\t\ttextEditor._acceptOptions(data.options);\n\t\t}\n\t\tif (data.selections) {\n\t\t\tconst selections = data.selections.selections.map(TypeConverters.Selection.to);\n\t\t\ttextEditor._acceptSelections(selections);\n\t\t}\n\t\tif (data.visibleRanges) {\n\t\t\tconst visibleRanges = arrays.coalesce(data.visibleRanges.map(TypeConverters.Range.to));\n\t\t\ttextEditor._acceptVisibleRanges(visibleRanges);\n\t\t}\n\n\t\t// (2) fire change events\n\t\tif (data.options) {\n\t\t\tthis._onDidChangeTextEditorOptions.fire({\n\t\t\t\ttextEditor: textEditor,\n\t\t\t\toptions: data.options\n\t\t\t});\n\t\t}\n\t\tif (data.selections) {\n\t\t\tconst kind = TextEditorSelectionChangeKind.fromValue(data.selections.source);\n\t\t\tconst selections = data.selections.selections.map(TypeConverters.Selection.to);\n\t\t\tthis._onDidChangeTextEditorSelection.fire({\n\t\t\t\ttextEditor,\n\t\t\t\tselections,\n\t\t\t\tkind\n\t\t\t});\n\t\t}\n\t\tif (data.visibleRanges) {\n\t\t\tconst visibleRanges = arrays.coalesce(data.visibleRanges.map(TypeConverters.Range.to));\n\t\t\tthis._onDidChangeTextEditorVisibleRanges.fire({\n\t\t\t\ttextEditor,\n\t\t\t\tvisibleRanges\n\t\t\t});\n\t\t}\n\t}\n\n\t$acceptEditorPositionData(data: ITextEditorPositionData): void {\n\t\tfor (const id in data) {\n\t\t\tconst textEditor = this._extHostDocumentsAndEditors.getEditor(id);\n\t\t\tif (!textEditor) {\n\t\t\t\tthrow new Error('Unknown text editor');\n\t\t\t}\n\t\t\tconst viewColumn = TypeConverters.ViewColumn.to(data[id]);\n\t\t\tif (textEditor.viewColumn !== viewColumn) {\n\t\t\t\ttextEditor._acceptViewColumn(viewColumn);\n\t\t\t\tthis._onDidChangeTextEditorViewColumn.fire({ textEditor, viewColumn });\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDiffInformation(id: string): Promise<vscode.LineChange[]> {\n\t\treturn Promise.resolve(this._proxy.$getDiffInformation(id));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { MainContext, IMainContext, ExtHostUrlsShape, MainThreadUrlsShape } from './extHost.protocol';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtHostUrls implements ExtHostUrlsShape {\n\n\tprivate static HandlePool = 0;\n\tprivate readonly _proxy: MainThreadUrlsShape;\n\n\tprivate handles = new Set<string>();\n\tprivate handlers = new Map<number, vscode.UriHandler>();\n\n\tconstructor(\n\t\tmainContext: IMainContext\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadUrls);\n\t}\n\n\tregisterUriHandler(extensionId: ExtensionIdentifier, handler: vscode.UriHandler): vscode.Disposable {\n\t\tif (this.handles.has(ExtensionIdentifier.toKey(extensionId))) {\n\t\t\tthrow new Error(`Protocol handler already registered for extension ${extensionId}`);\n\t\t}\n\n\t\tconst handle = ExtHostUrls.HandlePool++;\n\t\tthis.handles.add(ExtensionIdentifier.toKey(extensionId));\n\t\tthis.handlers.set(handle, handler);\n\t\tthis._proxy.$registerUriHandler(handle, extensionId);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.handles.delete(ExtensionIdentifier.toKey(extensionId));\n\t\t\tthis.handlers.delete(handle);\n\t\t\tthis._proxy.$unregisterUriHandler(handle);\n\t\t});\n\t}\n\n\t$handleExternalUri(handle: number, uri: UriComponents): Promise<void> {\n\t\tconst handler = this.handlers.get(handle);\n\n\t\tif (!handler) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\ttry {\n\t\t\thandler.handleUri(URI.revive(uri));\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport * as typeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport { EditorViewColumn } from 'vs/workbench/api/shared/editor';\nimport * as vscode from 'vscode';\nimport { ExtHostWebviewsShape, IMainContext, MainContext, MainThreadWebviewsShape, WebviewPanelHandle, WebviewPanelViewState, WebviewInsetHandle } from './extHost.protocol';\nimport { Disposable } from './extHostTypes';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\n\ntype IconPath = URI | { light: URI, dark: URI };\n\nexport class ExtHostWebview implements vscode.Webview {\n\tprivate readonly _handle: WebviewPanelHandle | WebviewInsetHandle;\n\tprivate readonly _proxy: MainThreadWebviewsShape;\n\tprivate _html: string;\n\tprivate _options: vscode.WebviewOptions;\n\tprivate _isDisposed: boolean = false;\n\n\tpublic readonly _onMessageEmitter = new Emitter<any>();\n\tpublic readonly onDidReceiveMessage: Event<any> = this._onMessageEmitter.event;\n\n\tconstructor(\n\t\thandle: WebviewPanelHandle | WebviewInsetHandle,\n\t\tproxy: MainThreadWebviewsShape,\n\t\toptions: vscode.WebviewOptions\n\t) {\n\t\tthis._handle = handle;\n\t\tthis._proxy = proxy;\n\t\tthis._options = options;\n\t}\n\n\tpublic dispose() {\n\t\tthis._onMessageEmitter.dispose();\n\t}\n\n\tpublic get html(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this._html;\n\t}\n\n\tpublic set html(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this._html !== value) {\n\t\t\tthis._html = value;\n\t\t\tthis._proxy.$setHtml(this._handle, value);\n\t\t}\n\t}\n\n\t// @ts-ignore\n\tpublic set onmessage(fn) {\n\t}\n\n\tpublic get options(): vscode.WebviewOptions {\n\t\tthis.assertNotDisposed();\n\t\treturn this._options;\n\t}\n\n\tpublic set options(newOptions: vscode.WebviewOptions) {\n\t\tthis.assertNotDisposed();\n\t\tthis._proxy.$setOptions(this._handle, newOptions);\n\t\tthis._options = newOptions;\n\t}\n\n\tpublic postMessage(message: any): Promise<boolean> {\n\t\tthis.assertNotDisposed();\n\t\treturn this._proxy.$postMessage(this._handle, message);\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Webview is disposed');\n\t\t}\n\t}\n}\n\nexport class ExtHostWebviewPanel implements vscode.WebviewPanel {\n\n\tprivate readonly _handle: WebviewPanelHandle;\n\tprivate readonly _proxy: MainThreadWebviewsShape;\n\tprivate readonly _viewType: string;\n\tprivate _title: string;\n\tprivate _iconPath?: IconPath;\n\n\tprivate readonly _options: vscode.WebviewPanelOptions;\n\tprivate readonly _webview: ExtHostWebview;\n\tprivate _isDisposed: boolean = false;\n\tprivate _viewColumn: vscode.ViewColumn | undefined;\n\tprivate _visible: boolean = true;\n\tprivate _active: boolean = true;\n\n\treadonly _onDisposeEmitter = new Emitter<void>();\n\tpublic readonly onDidDispose: Event<void> = this._onDisposeEmitter.event;\n\n\treadonly _onDidChangeViewStateEmitter = new Emitter<vscode.WebviewPanelOnDidChangeViewStateEvent>();\n\tpublic readonly onDidChangeViewState: Event<vscode.WebviewPanelOnDidChangeViewStateEvent> = this._onDidChangeViewStateEmitter.event;\n\n\n\tconstructor(\n\t\thandle: WebviewPanelHandle,\n\t\tproxy: MainThreadWebviewsShape,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tviewColumn: vscode.ViewColumn | undefined,\n\t\teditorOptions: vscode.WebviewPanelOptions,\n\t\twebview: ExtHostWebview\n\t) {\n\t\tthis._handle = handle;\n\t\tthis._proxy = proxy;\n\t\tthis._viewType = viewType;\n\t\tthis._options = editorOptions;\n\t\tthis._viewColumn = viewColumn;\n\t\tthis._title = title;\n\t\tthis._webview = webview;\n\t}\n\n\tpublic dispose() {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isDisposed = true;\n\t\tthis._onDisposeEmitter.fire();\n\n\t\tthis._proxy.$disposeWebview(this._handle);\n\n\t\tthis._webview.dispose();\n\n\t\tthis._onDisposeEmitter.dispose();\n\t\tthis._onDidChangeViewStateEmitter.dispose();\n\t}\n\n\tget webview() {\n\t\tthis.assertNotDisposed();\n\t\treturn this._webview;\n\t}\n\n\tget viewType(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this._viewType;\n\t}\n\n\tget title(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this._title;\n\t}\n\n\tset title(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this._title !== value) {\n\t\t\tthis._title = value;\n\t\t\tthis._proxy.$setTitle(this._handle, value);\n\t\t}\n\t}\n\n\tget iconPath(): IconPath | undefined {\n\t\tthis.assertNotDisposed();\n\t\treturn this._iconPath;\n\t}\n\n\tset iconPath(value: IconPath | undefined) {\n\t\tthis.assertNotDisposed();\n\t\tif (this._iconPath !== value) {\n\t\t\tthis._iconPath = value;\n\n\t\t\tthis._proxy.$setIconPath(this._handle, URI.isUri(value) ? { light: value, dark: value } : value);\n\t\t}\n\t}\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\tget viewColumn(): vscode.ViewColumn | undefined {\n\t\tthis.assertNotDisposed();\n\t\tif (typeof this._viewColumn === 'number' && this._viewColumn < 0) {\n\t\t\t// We are using a symbolic view column\n\t\t\t// Return undefined instead to indicate that the real view column is currently unknown but will be resolved.\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._viewColumn;\n\t}\n\n\t_setViewColumn(value: vscode.ViewColumn) {\n\t\tthis.assertNotDisposed();\n\t\tthis._viewColumn = value;\n\t}\n\n\tpublic get active(): boolean {\n\t\tthis.assertNotDisposed();\n\t\treturn this._active;\n\t}\n\n\t_setActive(value: boolean) {\n\t\tthis.assertNotDisposed();\n\t\tthis._active = value;\n\t}\n\n\tpublic get visible(): boolean {\n\t\tthis.assertNotDisposed();\n\t\treturn this._visible;\n\t}\n\n\t_setVisible(value: boolean) {\n\t\tthis.assertNotDisposed();\n\t\tthis._visible = value;\n\t}\n\n\tpublic postMessage(message: any): Promise<boolean> {\n\t\tthis.assertNotDisposed();\n\t\treturn this._proxy.$postMessage(this._handle, message);\n\t}\n\n\tpublic reveal(viewColumn?: vscode.ViewColumn, preserveFocus?: boolean): void {\n\t\tthis.assertNotDisposed();\n\t\tthis._proxy.$reveal(this._handle, {\n\t\t\tviewColumn: viewColumn ? typeConverters.ViewColumn.from(viewColumn) : undefined,\n\t\t\tpreserveFocus: !!preserveFocus\n\t\t});\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Webview is disposed');\n\t\t}\n\t}\n}\n\nexport class ExtHostWebviews implements ExtHostWebviewsShape {\n\tprivate static webviewHandlePool = 1;\n\n\tprivate static newHandle(): WebviewPanelHandle {\n\t\treturn ExtHostWebviews.webviewHandlePool++ + '';\n\t}\n\n\tprivate readonly _proxy: MainThreadWebviewsShape;\n\tprivate readonly _webviewPanels = new Map<WebviewPanelHandle, ExtHostWebviewPanel>();\n\tprivate readonly _serializers = new Map<string, vscode.WebviewPanelSerializer>();\n\n\tconstructor(\n\t\tmainContext: IMainContext\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadWebviews);\n\t}\n\n\tpublic createWebviewPanel(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tshowOptions: vscode.ViewColumn | { viewColumn: vscode.ViewColumn, preserveFocus?: boolean },\n\t\toptions: (vscode.WebviewPanelOptions & vscode.WebviewOptions) = {},\n\t): vscode.WebviewPanel {\n\t\tconst viewColumn = typeof showOptions === 'object' ? showOptions.viewColumn : showOptions;\n\t\tconst webviewShowOptions = {\n\t\t\tviewColumn: typeConverters.ViewColumn.from(viewColumn),\n\t\t\tpreserveFocus: typeof showOptions === 'object' && !!showOptions.preserveFocus\n\t\t};\n\n\t\tconst handle = ExtHostWebviews.newHandle();\n\t\tthis._proxy.$createWebviewPanel(handle, viewType, title, webviewShowOptions, options, extension.identifier, extension.extensionLocation);\n\n\t\tconst webview = new ExtHostWebview(handle, this._proxy, options);\n\t\tconst panel = new ExtHostWebviewPanel(handle, this._proxy, viewType, title, viewColumn, options, webview);\n\t\tthis._webviewPanels.set(handle, panel);\n\t\treturn panel;\n\t}\n\n\tpublic registerWebviewPanelSerializer(\n\t\tviewType: string,\n\t\tserializer: vscode.WebviewPanelSerializer\n\t): vscode.Disposable {\n\t\tif (this._serializers.has(viewType)) {\n\t\t\tthrow new Error(`Serializer for '${viewType}' already registered`);\n\t\t}\n\n\t\tthis._serializers.set(viewType, serializer);\n\t\tthis._proxy.$registerSerializer(viewType);\n\n\t\treturn new Disposable(() => {\n\t\t\tthis._serializers.delete(viewType);\n\t\t\tthis._proxy.$unregisterSerializer(viewType);\n\t\t});\n\t}\n\n\tpublic $onMessage(\n\t\thandle: WebviewPanelHandle,\n\t\tmessage: any\n\t): void {\n\t\tconst panel = this.getWebviewPanel(handle);\n\t\tif (panel) {\n\t\t\tpanel.webview._onMessageEmitter.fire(message);\n\t\t}\n\t}\n\n\tpublic $onDidChangeWebviewPanelViewState(\n\t\thandle: WebviewPanelHandle,\n\t\tnewState: WebviewPanelViewState\n\t): void {\n\t\tconst panel = this.getWebviewPanel(handle);\n\t\tif (!panel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewColumn = typeConverters.ViewColumn.to(newState.position);\n\t\tif (panel.active !== newState.active || panel.visible !== newState.visible || panel.viewColumn !== viewColumn) {\n\t\t\tpanel._setActive(newState.active);\n\t\t\tpanel._setVisible(newState.visible);\n\t\t\tpanel._setViewColumn(viewColumn);\n\t\t\tpanel._onDidChangeViewStateEmitter.fire({ webviewPanel: panel });\n\t\t}\n\t}\n\n\t$onDidDisposeWebviewPanel(handle: WebviewPanelHandle): Promise<void> {\n\t\tconst panel = this.getWebviewPanel(handle);\n\t\tif (panel) {\n\t\t\tpanel.dispose();\n\t\t\tthis._webviewPanels.delete(handle);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$deserializeWebviewPanel(\n\t\twebviewHandle: WebviewPanelHandle,\n\t\tviewType: string,\n\t\ttitle: string,\n\t\tstate: any,\n\t\tposition: EditorViewColumn,\n\t\toptions: vscode.WebviewOptions & vscode.WebviewPanelOptions\n\t): Promise<void> {\n\t\tconst serializer = this._serializers.get(viewType);\n\t\tif (!serializer) {\n\t\t\treturn Promise.reject(new Error(`No serializer found for '${viewType}'`));\n\t\t}\n\n\t\tconst webview = new ExtHostWebview(webviewHandle, this._proxy, options);\n\t\tconst revivedPanel = new ExtHostWebviewPanel(webviewHandle, this._proxy, viewType, title, typeof position === 'number' && position >= 0 ? typeConverters.ViewColumn.to(position) : undefined, options, webview);\n\t\tthis._webviewPanels.set(webviewHandle, revivedPanel);\n\t\treturn Promise.resolve(serializer.deserializeWebviewPanel(revivedPanel, state));\n\t}\n\n\tprivate getWebviewPanel(handle: WebviewPanelHandle): ExtHostWebviewPanel | undefined {\n\t\treturn this._webviewPanels.get(handle);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { mixin } from 'vs/base/common/objects';\nimport * as vscode from 'vscode';\nimport * as typeConvert from 'vs/workbench/api/node/extHostTypeConverters';\nimport { Range, Disposable, CompletionList, SnippetString, CodeActionKind, SymbolInformation, DocumentSymbol } from 'vs/workbench/api/node/extHostTypes';\nimport { ISingleEditOperation } from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport { ExtHostHeapService } from 'vs/workbench/api/node/extHostHeapService';\nimport { ExtHostDocuments } from 'vs/workbench/api/node/extHostDocuments';\nimport { ExtHostCommands, CommandsConverter } from 'vs/workbench/api/node/extHostCommands';\nimport { ExtHostDiagnostics } from 'vs/workbench/api/node/extHostDiagnostics';\nimport { asPromise } from 'vs/base/common/async';\nimport { MainContext, MainThreadLanguageFeaturesShape, ExtHostLanguageFeaturesShape, ObjectIdentifier, IRawColorInfo, IMainContext, IdObject, ISerializedRegExp, ISerializedIndentationRule, ISerializedOnEnterRule, ISerializedLanguageConfiguration, WorkspaceSymbolDto, SuggestResultDto, WorkspaceSymbolsDto, SuggestionDto, CodeActionDto, ISerializedDocumentFilter, WorkspaceEditDto, ISerializedSignatureHelpProviderMetadata, LinkDto, CodeLensDto, MainThreadWebviewsShape, CodeInsetDto } from './extHost.protocol';\nimport { regExpLeadsToEndlessLoop, regExpFlags } from 'vs/base/common/strings';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange, Range as EditorRange } from 'vs/editor/common/core/range';\nimport { isFalsyOrEmpty, isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { isObject } from 'vs/base/common/types';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ExtHostWebview } from 'vs/workbench/api/node/extHostWebview';\nimport * as codeInset from 'vs/workbench/contrib/codeinset/common/codeInset';\nimport { generateUuid } from 'vs/base/common/uuid';\n\n// --- adapter\n\nclass DocumentSymbolAdapter {\n\n\tprivate _documents: ExtHostDocuments;\n\tprivate _provider: vscode.DocumentSymbolProvider;\n\n\tconstructor(documents: ExtHostDocuments, provider: vscode.DocumentSymbolProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tprovideDocumentSymbols(resource: URI, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideDocumentSymbols(doc, token)).then(value => {\n\t\t\tif (isFalsyOrEmpty(value)) {\n\t\t\t\treturn undefined;\n\t\t\t} else if (value![0] instanceof DocumentSymbol) {\n\t\t\t\treturn (<DocumentSymbol[]>value).map(typeConvert.DocumentSymbol.from);\n\t\t\t} else {\n\t\t\t\treturn DocumentSymbolAdapter._asDocumentSymbolTree(<SymbolInformation[]>value);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _asDocumentSymbolTree(infos: SymbolInformation[]): modes.DocumentSymbol[] {\n\t\t// first sort by start (and end) and then loop over all elements\n\t\t// and build a tree based on containment.\n\t\tinfos = infos.slice(0).sort((a, b) => {\n\t\t\tlet res = a.location.range.start.compareTo(b.location.range.start);\n\t\t\tif (res === 0) {\n\t\t\t\tres = b.location.range.end.compareTo(a.location.range.end);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n\t\tconst res: modes.DocumentSymbol[] = [];\n\t\tconst parentStack: modes.DocumentSymbol[] = [];\n\t\tfor (const info of infos) {\n\t\t\tconst element = <modes.DocumentSymbol>{\n\t\t\t\tname: info.name || '!!MISSING: name!!',\n\t\t\t\tkind: typeConvert.SymbolKind.from(info.kind),\n\t\t\t\tdetail: undefined!, // Strict null override — avoid changing behavior\n\t\t\t\tcontainerName: info.containerName,\n\t\t\t\trange: typeConvert.Range.from(info.location.range),\n\t\t\t\tselectionRange: typeConvert.Range.from(info.location.range),\n\t\t\t\tchildren: []\n\t\t\t};\n\n\t\t\twhile (true) {\n\t\t\t\tif (parentStack.length === 0) {\n\t\t\t\t\tparentStack.push(element);\n\t\t\t\t\tres.push(element);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst parent = parentStack[parentStack.length - 1];\n\t\t\t\tif (EditorRange.containsRange(parent.range, element.range) && !EditorRange.equalsRange(parent.range, element.range)) {\n\t\t\t\t\tif (parent.children) {\n\t\t\t\t\t\tparent.children.push(element);\n\t\t\t\t\t}\n\t\t\t\t\tparentStack.push(element);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparentStack.pop();\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}\n\nclass CodeLensAdapter {\n\n\tprivate static _badCmd: vscode.Command = { command: 'missing', title: '!!MISSING: command!!' };\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _commands: CommandsConverter,\n\t\tprivate readonly _heapService: ExtHostHeapService,\n\t\tprivate readonly _provider: vscode.CodeLensProvider\n\t) { }\n\n\tprovideCodeLenses(resource: URI, token: CancellationToken): Promise<CodeLensDto[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\n\t\treturn asPromise(() => this._provider.provideCodeLenses(doc, token)).then(lenses => {\n\t\t\tconst result: CodeLensDto[] = [];\n\t\t\tif (isNonEmptyArray(lenses)) {\n\t\t\t\tfor (const lens of lenses) {\n\t\t\t\t\tconst id = this._heapService.keep(lens);\n\t\t\t\t\tresult.push(ObjectIdentifier.mixin({\n\t\t\t\t\t\trange: typeConvert.Range.from(lens.range),\n\t\t\t\t\t\tcommand: this._commands.toInternal(lens.command)\n\t\t\t\t\t}, id));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tresolveCodeLens(resource: URI, symbol: CodeLensDto, token: CancellationToken): Promise<CodeLensDto | undefined> {\n\n\t\tconst lens = this._heapService.get<vscode.CodeLens>(ObjectIdentifier.of(symbol));\n\t\tif (!lens) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tlet resolve: Promise<vscode.CodeLens | undefined | null>;\n\t\tif (typeof this._provider.resolveCodeLens !== 'function' || lens.isResolved) {\n\t\t\tresolve = Promise.resolve(lens);\n\t\t} else {\n\t\t\tresolve = asPromise(() => this._provider.resolveCodeLens!(lens, token));\n\t\t}\n\n\t\treturn resolve.then(newLens => {\n\t\t\tnewLens = newLens || lens;\n\t\t\tsymbol.command = this._commands.toInternal(newLens.command || CodeLensAdapter._badCmd);\n\t\t\treturn symbol;\n\t\t});\n\t}\n}\n\nclass CodeInsetAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _heapService: ExtHostHeapService,\n\t\tprivate readonly _provider: vscode.CodeInsetProvider\n\t) { }\n\n\tprovideCodeInsets(resource: URI, token: CancellationToken): Promise<CodeInsetDto[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideCodeInsets(doc, token)).then(insets => {\n\t\t\tif (Array.isArray(insets)) {\n\t\t\t\treturn insets.map(inset => {\n\t\t\t\t\tconst $ident = this._heapService.keep(inset);\n\t\t\t\t\tconst id = generateUuid();\n\t\t\t\t\treturn {\n\t\t\t\t\t\t$ident,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\trange: typeConvert.Range.from(inset.range),\n\t\t\t\t\t\theight: inset.height\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tresolveCodeInset(symbol: CodeInsetDto, webview: vscode.Webview, token: CancellationToken): Promise<CodeInsetDto> {\n\n\t\tconst inset = this._heapService.get<vscode.CodeInset>(ObjectIdentifier.of(symbol));\n\t\tif (!inset) {\n\t\t\treturn Promise.resolve(symbol);\n\t\t}\n\n\t\treturn asPromise(() => this._provider.resolveCodeInset(inset, webview, token)).then(newInset => {\n\t\t\tnewInset = newInset || inset;\n\t\t\treturn symbol;\n\t\t});\n\t}\n}\n\nfunction convertToLocationLinks(value: vscode.Definition): modes.LocationLink[] {\n\tif (Array.isArray(value)) {\n\t\treturn (value as (vscode.DefinitionLink | vscode.Location)[]).map(typeConvert.DefinitionLink.from);\n\t} else if (value) {\n\t\treturn [typeConvert.DefinitionLink.from(value)];\n\t}\n\treturn [];\n}\n\nclass DefinitionAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DefinitionProvider\n\t) { }\n\n\tprovideDefinition(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideDefinition(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass DeclarationAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DeclarationProvider\n\t) { }\n\n\tprovideDeclaration(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideDeclaration(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass ImplementationAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.ImplementationProvider\n\t) { }\n\n\tprovideImplementation(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideImplementation(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass TypeDefinitionAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.TypeDefinitionProvider\n\t) { }\n\n\tprovideTypeDefinition(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\treturn asPromise(() => this._provider.provideTypeDefinition(doc, pos, token)).then(convertToLocationLinks);\n\t}\n}\n\nclass HoverAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.HoverProvider,\n\t) { }\n\n\tpublic provideHover(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.Hover | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideHover(doc, pos, token)).then(value => {\n\t\t\tif (!value || isFalsyOrEmpty(value.contents)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!value.range) {\n\t\t\t\tvalue.range = doc.getWordRangeAtPosition(pos);\n\t\t\t}\n\t\t\tif (!value.range) {\n\t\t\t\tvalue.range = new Range(pos, pos);\n\t\t\t}\n\n\t\t\treturn typeConvert.Hover.from(value);\n\t\t});\n\t}\n}\n\nclass DocumentHighlightAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentHighlightProvider\n\t) { }\n\n\tprovideDocumentHighlights(resource: URI, position: IPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideDocumentHighlights(doc, pos, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.DocumentHighlight.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass ReferenceAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.ReferenceProvider\n\t) { }\n\n\tprovideReferences(resource: URI, position: IPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<modes.Location[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideReferences(doc, pos, context, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.location.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nexport interface CustomCodeAction extends CodeActionDto {\n\t_isSynthetic?: boolean;\n}\n\nclass CodeActionAdapter {\n\tprivate static readonly _maxCodeActionsPerFile: number = 1000;\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _commands: CommandsConverter,\n\t\tprivate readonly _diagnostics: ExtHostDiagnostics,\n\t\tprivate readonly _provider: vscode.CodeActionProvider,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extensionId: ExtensionIdentifier\n\t) { }\n\n\tprovideCodeActions(resource: URI, rangeOrSelection: IRange | ISelection, context: modes.CodeActionContext, token: CancellationToken): Promise<CodeActionDto[] | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst ran = Selection.isISelection(rangeOrSelection)\n\t\t\t? <vscode.Selection>typeConvert.Selection.to(rangeOrSelection)\n\t\t\t: <vscode.Range>typeConvert.Range.to(rangeOrSelection);\n\t\tconst allDiagnostics: vscode.Diagnostic[] = [];\n\n\t\tfor (const diagnostic of this._diagnostics.getDiagnostics(resource)) {\n\t\t\tif (ran.intersection(diagnostic.range)) {\n\t\t\t\tconst newLen = allDiagnostics.push(diagnostic);\n\t\t\t\tif (newLen > CodeActionAdapter._maxCodeActionsPerFile) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst codeActionContext: vscode.CodeActionContext = {\n\t\t\tdiagnostics: allDiagnostics,\n\t\t\tonly: context.only ? new CodeActionKind(context.only) : undefined\n\t\t};\n\n\t\treturn asPromise(() => this._provider.provideCodeActions(doc, ran, codeActionContext, token)).then(commandsOrActions => {\n\t\t\tif (!isNonEmptyArray(commandsOrActions)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst result: CustomCodeAction[] = [];\n\t\t\tfor (const candidate of commandsOrActions) {\n\t\t\t\tif (!candidate) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (CodeActionAdapter._isCommand(candidate)) {\n\t\t\t\t\t// old school: synthetic code action\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\t_isSynthetic: true,\n\t\t\t\t\t\ttitle: candidate.title,\n\t\t\t\t\t\tcommand: this._commands.toInternal(candidate),\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (codeActionContext.only) {\n\t\t\t\t\t\tif (!candidate.kind) {\n\t\t\t\t\t\t\tthis._logService.warn(`${this._extensionId.value} - Code actions of kind '${codeActionContext.only.value} 'requested but returned code action does not have a 'kind'. Code action will be dropped. Please set 'CodeAction.kind'.`);\n\t\t\t\t\t\t} else if (!codeActionContext.only.contains(candidate.kind)) {\n\t\t\t\t\t\t\tthis._logService.warn(`${this._extensionId.value} -Code actions of kind '${codeActionContext.only.value} 'requested but returned code action is of kind '${candidate.kind.value}'. Code action will be dropped. Please check 'CodeActionContext.only' to only return requested code actions.`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// new school: convert code action\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttitle: candidate.title,\n\t\t\t\t\t\tcommand: candidate.command && this._commands.toInternal(candidate.command),\n\t\t\t\t\t\tdiagnostics: candidate.diagnostics && candidate.diagnostics.map(typeConvert.Diagnostic.from),\n\t\t\t\t\t\tedit: candidate.edit && typeConvert.WorkspaceEdit.from(candidate.edit),\n\t\t\t\t\t\tkind: candidate.kind && candidate.kind.value,\n\t\t\t\t\t\tisPreferred: candidate.isPreferred,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate static _isCommand(thing: any): thing is vscode.Command {\n\t\treturn typeof (<vscode.Command>thing).command === 'string' && typeof (<vscode.Command>thing).title === 'string';\n\t}\n}\n\nclass DocumentFormattingAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentFormattingEditProvider\n\t) { }\n\n\tprovideDocumentFormattingEdits(resource: URI, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\n\t\tconst document = this._documents.getDocument(resource);\n\n\t\treturn asPromise(() => this._provider.provideDocumentFormattingEdits(document, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.TextEdit.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass RangeFormattingAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.DocumentRangeFormattingEditProvider\n\t) { }\n\n\tprovideDocumentRangeFormattingEdits(resource: URI, range: IRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst ran = typeConvert.Range.to(range);\n\n\t\treturn asPromise(() => this._provider.provideDocumentRangeFormattingEdits(document, ran, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.TextEdit.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass OnTypeFormattingAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.OnTypeFormattingEditProvider\n\t) { }\n\n\tautoFormatTriggerCharacters: string[] = []; // not here\n\n\tprovideOnTypeFormattingEdits(resource: URI, position: IPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideOnTypeFormattingEdits(document, pos, ch, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConvert.TextEdit.from);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass NavigateTypeAdapter {\n\n\tprivate readonly _symbolCache: { [id: number]: vscode.SymbolInformation } = Object.create(null);\n\tprivate readonly _resultCache: { [id: number]: [number, number] } = Object.create(null);\n\tprivate readonly _provider: vscode.WorkspaceSymbolProvider;\n\n\tconstructor(provider: vscode.WorkspaceSymbolProvider) {\n\t\tthis._provider = provider;\n\t}\n\n\tprovideWorkspaceSymbols(search: string, token: CancellationToken): Promise<WorkspaceSymbolsDto> {\n\t\tconst result: WorkspaceSymbolsDto = IdObject.mixin({ symbols: [] });\n\t\treturn asPromise(() => this._provider.provideWorkspaceSymbols(search, token)).then(value => {\n\t\t\tif (isNonEmptyArray(value)) {\n\t\t\t\tfor (const item of value) {\n\t\t\t\t\tif (!item) {\n\t\t\t\t\t\t// drop\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!item.name) {\n\t\t\t\t\t\tconsole.warn('INVALID SymbolInformation, lacks name', item);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst symbol = IdObject.mixin(typeConvert.WorkspaceSymbol.from(item));\n\t\t\t\t\tthis._symbolCache[symbol._id!] = item;\n\t\t\t\t\tresult.symbols.push(symbol);\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(() => {\n\t\t\tif (result.symbols.length > 0) {\n\t\t\t\tthis._resultCache[result._id!] = [result.symbols[0]._id!, result.symbols[result.symbols.length - 1]._id!];\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tresolveWorkspaceSymbol(symbol: WorkspaceSymbolDto, token: CancellationToken): Promise<WorkspaceSymbolDto | undefined> {\n\n\t\tif (typeof this._provider.resolveWorkspaceSymbol !== 'function') {\n\t\t\treturn Promise.resolve(symbol);\n\t\t}\n\n\t\tconst item = this._symbolCache[symbol._id!];\n\t\tif (item) {\n\t\t\treturn asPromise(() => this._provider.resolveWorkspaceSymbol!(item, token)).then(value => {\n\t\t\t\treturn value && mixin(symbol, typeConvert.WorkspaceSymbol.from(value), true);\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\treleaseWorkspaceSymbols(id: number): any {\n\t\tconst range = this._resultCache[id];\n\t\tif (range) {\n\t\t\tfor (let [from, to] = range; from <= to; from++) {\n\t\t\t\tdelete this._symbolCache[from];\n\t\t\t}\n\t\t\tdelete this._resultCache[id];\n\t\t}\n\t}\n}\n\nclass RenameAdapter {\n\n\tstatic supportsResolving(provider: vscode.RenameProvider): boolean {\n\t\treturn typeof provider.prepareRename === 'function';\n\t}\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.RenameProvider\n\t) { }\n\n\tprovideRenameEdits(resource: URI, position: IPosition, newName: string, token: CancellationToken): Promise<WorkspaceEditDto | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.provideRenameEdits(doc, pos, newName, token)).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn typeConvert.WorkspaceEdit.from(value);\n\t\t}, err => {\n\t\t\tconst rejectReason = RenameAdapter._asMessage(err);\n\t\t\tif (rejectReason) {\n\t\t\t\treturn <WorkspaceEditDto>{ rejectReason, edits: undefined! };\n\t\t\t} else {\n\t\t\t\t// generic error\n\t\t\t\treturn Promise.reject<WorkspaceEditDto>(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tresolveRenameLocation(resource: URI, position: IPosition, token: CancellationToken): Promise<(modes.RenameLocation & modes.Rejection) | undefined> {\n\t\tif (typeof this._provider.prepareRename !== 'function') {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise(() => this._provider.prepareRename!(doc, pos, token)).then(rangeOrLocation => {\n\n\t\t\tlet range: vscode.Range | undefined;\n\t\t\tlet text: string | undefined;\n\t\t\tif (Range.isRange(rangeOrLocation)) {\n\t\t\t\trange = rangeOrLocation;\n\t\t\t\ttext = doc.getText(rangeOrLocation);\n\n\t\t\t} else if (isObject(rangeOrLocation)) {\n\t\t\t\trange = rangeOrLocation.range;\n\t\t\t\ttext = rangeOrLocation.placeholder;\n\t\t\t}\n\n\t\t\tif (!range) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (range.start.line > pos.line || range.end.line < pos.line) {\n\t\t\t\tconsole.warn('INVALID rename location: position line must be within range start/end lines');\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn { range: typeConvert.Range.from(range), text };\n\t\t}, err => {\n\t\t\tconst rejectReason = RenameAdapter._asMessage(err);\n\t\t\tif (rejectReason) {\n\t\t\t\treturn <modes.RenameLocation & modes.Rejection>{ rejectReason, range: undefined!, text: undefined! };\n\t\t\t} else {\n\t\t\t\treturn Promise.reject<any>(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _asMessage(err: any): string | undefined {\n\t\tif (typeof err === 'string') {\n\t\t\treturn err;\n\t\t} else if (err instanceof Error && typeof err.message === 'string') {\n\t\t\treturn err.message;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nclass SuggestAdapter {\n\n\tstatic supportsResolving(provider: vscode.CompletionItemProvider): boolean {\n\t\treturn typeof provider.resolveCompletionItem === 'function';\n\t}\n\n\tprivate _documents: ExtHostDocuments;\n\tprivate _commands: CommandsConverter;\n\tprivate _provider: vscode.CompletionItemProvider;\n\n\tprivate _cache = new Map<number, vscode.CompletionItem[]>();\n\tprivate _idPool = 0;\n\n\tconstructor(documents: ExtHostDocuments, commands: CommandsConverter, provider: vscode.CompletionItemProvider) {\n\t\tthis._documents = documents;\n\t\tthis._commands = commands;\n\t\tthis._provider = provider;\n\t}\n\n\tprovideCompletionItems(resource: URI, position: IPosition, context: modes.CompletionContext, token: CancellationToken): Promise<SuggestResultDto | undefined> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\n\t\treturn asPromise<vscode.CompletionItem[] | vscode.CompletionList | null | undefined>(\n\t\t\t() => this._provider.provideCompletionItems(doc, pos, token, typeConvert.CompletionContext.to(context))\n\t\t).then(value => {\n\n\t\t\tconst _id = this._idPool++;\n\n\t\t\tconst result: SuggestResultDto = {\n\t\t\t\t_id,\n\t\t\t\tsuggestions: [],\n\t\t\t};\n\n\t\t\tlet list: CompletionList;\n\t\t\tif (!value) {\n\t\t\t\t// undefined and null are valid results\n\t\t\t\treturn undefined;\n\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tlist = new CompletionList(value);\n\n\t\t\t} else {\n\t\t\t\tlist = value;\n\t\t\t\tresult.incomplete = list.isIncomplete;\n\t\t\t}\n\n\t\t\t// the default text edit range\n\t\t\tconst wordRangeBeforePos = (doc.getWordRangeAtPosition(pos) as Range || new Range(pos, pos))\n\t\t\t\t.with({ end: pos });\n\n\t\t\tfor (let i = 0; i < list.items.length; i++) {\n\t\t\t\tconst suggestion = this._convertCompletionItem(list.items[i], pos, wordRangeBeforePos, i, _id);\n\t\t\t\t// check for bad completion item\n\t\t\t\t// for the converter did warn\n\t\t\t\tif (suggestion) {\n\t\t\t\t\tresult.suggestions.push(suggestion);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._cache.set(_id, list.items);\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tresolveCompletionItem(resource: URI, position: IPosition, suggestion: modes.CompletionItem, token: CancellationToken): Promise<modes.CompletionItem> {\n\n\t\tif (typeof this._provider.resolveCompletionItem !== 'function') {\n\t\t\treturn Promise.resolve(suggestion);\n\t\t}\n\n\t\tconst { _parentId, _id } = (<SuggestionDto>suggestion);\n\t\tconst item = this._cache.has(_parentId) ? this._cache.get(_parentId)![_id] : undefined;\n\t\tif (!item) {\n\t\t\treturn Promise.resolve(suggestion);\n\t\t}\n\n\t\treturn asPromise(() => this._provider.resolveCompletionItem!(item, token)).then(resolvedItem => {\n\n\t\t\tif (!resolvedItem) {\n\t\t\t\treturn suggestion;\n\t\t\t}\n\n\t\t\tconst doc = this._documents.getDocument(resource);\n\t\t\tconst pos = typeConvert.Position.to(position);\n\t\t\tconst wordRangeBeforePos = (doc.getWordRangeAtPosition(pos) as Range || new Range(pos, pos)).with({ end: pos });\n\t\t\tconst newSuggestion = this._convertCompletionItem(resolvedItem, pos, wordRangeBeforePos, _id, _parentId);\n\t\t\tif (newSuggestion) {\n\t\t\t\tmixin(suggestion, newSuggestion, true);\n\t\t\t}\n\n\t\t\treturn suggestion;\n\t\t});\n\t}\n\n\treleaseCompletionItems(id: number): any {\n\t\tthis._cache.delete(id);\n\t}\n\n\tprivate _convertCompletionItem(item: vscode.CompletionItem, position: vscode.Position, defaultRange: vscode.Range, _id: number, _parentId: number): SuggestionDto | undefined {\n\t\tif (typeof item.label !== 'string' || item.label.length === 0) {\n\t\t\tconsole.warn('INVALID text edit -> must have at least a label');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result: SuggestionDto = {\n\t\t\t//\n\t\t\t_id,\n\t\t\t_parentId,\n\t\t\t//\n\t\t\tlabel: item.label,\n\t\t\tkind: typeConvert.CompletionItemKind.from(item.kind),\n\t\t\tdetail: item.detail,\n\t\t\tdocumentation: typeof item.documentation === 'undefined' ? undefined : typeConvert.MarkdownString.fromStrict(item.documentation),\n\t\t\tfilterText: item.filterText,\n\t\t\tsortText: item.sortText,\n\t\t\tpreselect: item.preselect,\n\t\t\t//\n\t\t\trange: undefined!, // populated below\n\t\t\tinsertText: undefined!, // populated below\n\t\t\tinsertTextRules: item.keepWhitespace ? modes.CompletionItemInsertTextRule.KeepWhitespace : 0,\n\t\t\tadditionalTextEdits: item.additionalTextEdits && item.additionalTextEdits.map(typeConvert.TextEdit.from),\n\t\t\tcommand: this._commands.toInternal(item.command),\n\t\t\tcommitCharacters: item.commitCharacters\n\t\t};\n\n\t\t// 'insertText'-logic\n\t\tif (item.textEdit) {\n\t\t\tresult.insertText = item.textEdit.newText;\n\n\t\t} else if (typeof item.insertText === 'string') {\n\t\t\tresult.insertText = item.insertText;\n\n\t\t} else if (item.insertText instanceof SnippetString) {\n\t\t\tresult.insertText = item.insertText.value;\n\t\t\tresult.insertTextRules! |= modes.CompletionItemInsertTextRule.InsertAsSnippet;\n\n\t\t} else {\n\t\t\tresult.insertText = item.label;\n\t\t}\n\n\t\t// 'overwrite[Before|After]'-logic\n\t\tlet range: vscode.Range;\n\t\tif (item.textEdit) {\n\t\t\trange = item.textEdit.range;\n\t\t} else if (item.range) {\n\t\t\trange = item.range;\n\t\t} else {\n\t\t\trange = defaultRange;\n\t\t}\n\t\tresult.range = typeConvert.Range.from(range);\n\n\t\tif (!range.isSingleLine || range.start.line !== position.line) {\n\t\t\tconsole.warn('INVALID text edit -> must be single line and on the same line');\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nclass SignatureHelpAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.SignatureHelpProvider,\n\t\tprivate readonly _heap: ExtHostHeapService,\n\t) { }\n\n\tprovideSignatureHelp(resource: URI, position: IPosition, context: modes.SignatureHelpContext, token: CancellationToken): Promise<modes.SignatureHelp | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = typeConvert.Position.to(position);\n\t\tconst vscodeContext = this.reviveContext(context);\n\n\t\treturn asPromise(() => this._provider.provideSignatureHelp(doc, pos, token, vscodeContext)).then(value => {\n\t\t\tif (value) {\n\t\t\t\tconst id = this._heap.keep(value);\n\t\t\t\treturn ObjectIdentifier.mixin(typeConvert.SignatureHelp.from(value), id);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate reviveContext(context: modes.SignatureHelpContext): vscode.SignatureHelpContext {\n\t\tlet activeSignatureHelp: vscode.SignatureHelp | undefined = undefined;\n\t\tif (context.activeSignatureHelp) {\n\t\t\tconst revivedSignatureHelp = typeConvert.SignatureHelp.to(context.activeSignatureHelp);\n\t\t\tconst saved = this._heap.get<vscode.SignatureHelp>(ObjectIdentifier.of(context.activeSignatureHelp));\n\t\t\tif (saved) {\n\t\t\t\tactiveSignatureHelp = saved;\n\t\t\t\tactiveSignatureHelp.activeSignature = revivedSignatureHelp.activeSignature;\n\t\t\t\tactiveSignatureHelp.activeParameter = revivedSignatureHelp.activeParameter;\n\t\t\t} else {\n\t\t\t\tactiveSignatureHelp = revivedSignatureHelp;\n\t\t\t}\n\t\t}\n\t\treturn { ...context, activeSignatureHelp };\n\t}\n}\n\nclass LinkProviderAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _heapService: ExtHostHeapService,\n\t\tprivate readonly _provider: vscode.DocumentLinkProvider\n\t) { }\n\n\tprovideLinks(resource: URI, token: CancellationToken): Promise<LinkDto[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\n\t\treturn asPromise(() => this._provider.provideDocumentLinks(doc, token)).then(links => {\n\t\t\tif (!Array.isArray(links)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst result: LinkDto[] = [];\n\t\t\tfor (const link of links) {\n\t\t\t\tconst data = typeConvert.DocumentLink.from(link);\n\t\t\t\tconst id = this._heapService.keep(link);\n\t\t\t\tresult.push(ObjectIdentifier.mixin(data, id));\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tresolveLink(link: LinkDto, token: CancellationToken): Promise<LinkDto | undefined> {\n\t\tif (typeof this._provider.resolveDocumentLink !== 'function') {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst id = ObjectIdentifier.of(link);\n\t\tconst item = this._heapService.get<vscode.DocumentLink>(id);\n\t\tif (!item) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => this._provider.resolveDocumentLink!(item, token)).then(value => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConvert.DocumentLink.from(value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass ColorProviderAdapter {\n\n\tconstructor(\n\t\tprivate _documents: ExtHostDocuments,\n\t\tprivate _provider: vscode.DocumentColorProvider\n\t) { }\n\n\tprovideColors(resource: URI, token: CancellationToken): Promise<IRawColorInfo[]> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideDocumentColors(doc, token)).then(colors => {\n\t\t\tif (!Array.isArray(colors)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst colorInfos: IRawColorInfo[] = colors.map(ci => {\n\t\t\t\treturn {\n\t\t\t\t\tcolor: typeConvert.Color.from(ci.color),\n\t\t\t\t\trange: typeConvert.Range.from(ci.range)\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn colorInfos;\n\t\t});\n\t}\n\n\tprovideColorPresentations(resource: URI, raw: IRawColorInfo, token: CancellationToken): Promise<modes.IColorPresentation[] | undefined> {\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst range = typeConvert.Range.to(raw.range);\n\t\tconst color = typeConvert.Color.to(raw.color);\n\t\treturn asPromise(() => this._provider.provideColorPresentations(color, { document, range }, token)).then(value => {\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn value.map(typeConvert.ColorPresentation.from);\n\t\t});\n\t}\n}\n\nclass FoldingProviderAdapter {\n\n\tconstructor(\n\t\tprivate _documents: ExtHostDocuments,\n\t\tprivate _provider: vscode.FoldingRangeProvider\n\t) { }\n\n\tprovideFoldingRanges(resource: URI, context: modes.FoldingContext, token: CancellationToken): Promise<modes.FoldingRange[] | undefined> {\n\t\tconst doc = this._documents.getDocument(resource);\n\t\treturn asPromise(() => this._provider.provideFoldingRanges(doc, context, token)).then(ranges => {\n\t\t\tif (!Array.isArray(ranges)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn ranges.map(typeConvert.FoldingRange.from);\n\t\t});\n\t}\n}\n\nclass SelectionRangeAdapter {\n\n\tconstructor(\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _provider: vscode.SelectionRangeProvider\n\t) { }\n\n\tprovideSelectionRanges(resource: URI, pos: IPosition[], token: CancellationToken): Promise<modes.SelectionRange[][]> {\n\t\tconst document = this._documents.getDocument(resource);\n\t\tconst positions = pos.map(typeConvert.Position.to);\n\n\t\treturn asPromise(() => this._provider.provideSelectionRanges(document, positions, token)).then(allProviderRanges => {\n\t\t\tif (!isNonEmptyArray(allProviderRanges)) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tif (allProviderRanges.length !== positions.length) {\n\t\t\t\tconsole.warn('BAD selection ranges, provider must return ranges for each position');\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst allResults: modes.SelectionRange[][] = [];\n\t\t\tfor (let i = 0; i < positions.length; i++) {\n\t\t\t\tconst oneResult: modes.SelectionRange[] = [];\n\t\t\t\tallResults.push(oneResult);\n\n\t\t\t\tlet last: vscode.Position | vscode.Range = positions[i];\n\t\t\t\tlet selectionRange = allProviderRanges[i];\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!selectionRange.range.contains(last)) {\n\t\t\t\t\t\tthrow new Error('INVALID selection range, must contain the previous range');\n\t\t\t\t\t}\n\t\t\t\t\toneResult.push(typeConvert.SelectionRange.from(selectionRange));\n\t\t\t\t\tif (!selectionRange.parent) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlast = selectionRange.range;\n\t\t\t\t\tselectionRange = selectionRange.parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn allResults;\n\t\t});\n\t}\n}\n\ntype Adapter = DocumentSymbolAdapter | CodeLensAdapter | DefinitionAdapter | HoverAdapter\n\t| DocumentHighlightAdapter | ReferenceAdapter | CodeActionAdapter | DocumentFormattingAdapter\n\t| RangeFormattingAdapter | OnTypeFormattingAdapter | NavigateTypeAdapter | RenameAdapter\n\t| SuggestAdapter | SignatureHelpAdapter | LinkProviderAdapter | ImplementationAdapter | TypeDefinitionAdapter\n\t| ColorProviderAdapter | FoldingProviderAdapter | CodeInsetAdapter | DeclarationAdapter | SelectionRangeAdapter;\n\nclass AdapterData {\n\tconstructor(\n\t\treadonly adapter: Adapter,\n\t\treadonly extension: IExtensionDescription | undefined\n\t) { }\n}\n\nexport interface ISchemeTransformer {\n\ttransformOutgoing(scheme: string): string;\n}\n\nexport class ExtHostLanguageFeatures implements ExtHostLanguageFeaturesShape {\n\n\tprivate static _handlePool: number = 0;\n\n\tprivate readonly _schemeTransformer: ISchemeTransformer | null;\n\tprivate _proxy: MainThreadLanguageFeaturesShape;\n\tprivate _documents: ExtHostDocuments;\n\tprivate _commands: ExtHostCommands;\n\tprivate _heapService: ExtHostHeapService;\n\tprivate _diagnostics: ExtHostDiagnostics;\n\tprivate _adapter = new Map<number, AdapterData>();\n\tprivate readonly _logService: ILogService;\n\tprivate _webviewProxy: MainThreadWebviewsShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tschemeTransformer: ISchemeTransformer | null,\n\t\tdocuments: ExtHostDocuments,\n\t\tcommands: ExtHostCommands,\n\t\theapMonitor: ExtHostHeapService,\n\t\tdiagnostics: ExtHostDiagnostics,\n\t\tlogService: ILogService\n\t) {\n\t\tthis._schemeTransformer = schemeTransformer;\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadLanguageFeatures);\n\t\tthis._documents = documents;\n\t\tthis._commands = commands;\n\t\tthis._heapService = heapMonitor;\n\t\tthis._diagnostics = diagnostics;\n\t\tthis._logService = logService;\n\t\tthis._webviewProxy = mainContext.getProxy(MainContext.MainThreadWebviews);\n\t}\n\n\tprivate _transformDocumentSelector(selector: vscode.DocumentSelector): Array<ISerializedDocumentFilter> {\n\t\tif (Array.isArray(selector)) {\n\t\t\treturn coalesce(selector.map(sel => this._doTransformDocumentSelector(sel)));\n\t\t}\n\n\t\treturn coalesce([this._doTransformDocumentSelector(selector)]);\n\t}\n\n\tprivate _doTransformDocumentSelector(selector: string | vscode.DocumentFilter): ISerializedDocumentFilter | undefined {\n\t\tif (typeof selector === 'string') {\n\t\t\treturn {\n\t\t\t\t$serialized: true,\n\t\t\t\tlanguage: selector\n\t\t\t};\n\t\t}\n\n\t\tif (selector) {\n\t\t\treturn {\n\t\t\t\t$serialized: true,\n\t\t\t\tlanguage: selector.language,\n\t\t\t\tscheme: this._transformScheme(selector.scheme),\n\t\t\t\tpattern: selector.pattern,\n\t\t\t\texclusive: selector.exclusive\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate _transformScheme(scheme: string | undefined): string | undefined {\n\t\tif (this._schemeTransformer && typeof scheme === 'string') {\n\t\t\treturn this._schemeTransformer.transformOutgoing(scheme);\n\t\t}\n\t\treturn scheme;\n\t}\n\n\tprivate _createDisposable(handle: number): Disposable {\n\t\treturn new Disposable(() => {\n\t\t\tthis._adapter.delete(handle);\n\t\t\tthis._proxy.$unregister(handle);\n\t\t});\n\t}\n\n\tprivate _nextHandle(): number {\n\t\treturn ExtHostLanguageFeatures._handlePool++;\n\t}\n\n\tprivate _withAdapter<A, R>(handle: number, ctor: { new(...args: any[]): A }, callback: (adapter: A, extension: IExtensionDescription | undefined) => Promise<R>): Promise<R> {\n\t\tconst data = this._adapter.get(handle);\n\t\tif (!data) {\n\t\t\treturn Promise.reject(new Error('no adapter found'));\n\t\t}\n\n\t\tif (data.adapter instanceof ctor) {\n\t\t\tlet t1: number;\n\t\t\tif (data.extension) {\n\t\t\t\tt1 = Date.now();\n\t\t\t\tthis._logService.trace(`[${data.extension.identifier.value}] INVOKE provider '${(ctor as any).name}'`);\n\t\t\t}\n\t\t\tconst p = callback(data.adapter, data.extension);\n\t\t\tconst extension = data.extension;\n\t\t\tif (extension) {\n\t\t\t\tPromise.resolve(p).then(\n\t\t\t\t\t() => this._logService.trace(`[${extension.identifier.value}] provider DONE after ${Date.now() - t1}ms`),\n\t\t\t\t\terr => {\n\t\t\t\t\t\tthis._logService.error(`[${extension.identifier.value}] provider FAILED`);\n\t\t\t\t\t\tthis._logService.error(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\t\treturn Promise.reject(new Error('no adapter found'));\n\t}\n\n\tprivate _addNewAdapter(adapter: Adapter, extension: IExtensionDescription | undefined): number {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter.set(handle, new AdapterData(adapter, extension));\n\t\treturn handle;\n\t}\n\n\tprivate static _extLabel(ext: IExtensionDescription): string {\n\t\treturn ext.displayName || ext.name;\n\t}\n\n\t// --- outline\n\n\tregisterDocumentSymbolProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentSymbolProvider, metadata?: vscode.DocumentSymbolProviderMetadata): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DocumentSymbolAdapter(this._documents, provider), extension);\n\t\tconst displayName = (metadata && metadata.label) || ExtHostLanguageFeatures._extLabel(extension);\n\t\tthis._proxy.$registerDocumentSymbolProvider(handle, this._transformDocumentSelector(selector), displayName);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined> {\n\t\treturn this._withAdapter(handle, DocumentSymbolAdapter, adapter => adapter.provideDocumentSymbols(URI.revive(resource), token));\n\t}\n\n\t// --- code lens\n\n\tregisterCodeLensProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CodeLensProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tconst eventHandle = typeof provider.onDidChangeCodeLenses === 'function' ? this._nextHandle() : undefined;\n\n\t\tthis._adapter.set(handle, new AdapterData(new CodeLensAdapter(this._documents, this._commands.converter, this._heapService, provider), extension));\n\t\tthis._proxy.$registerCodeLensSupport(handle, this._transformDocumentSelector(selector), eventHandle);\n\t\tlet result = this._createDisposable(handle);\n\n\t\tif (eventHandle !== undefined) {\n\t\t\tconst subscription = provider.onDidChangeCodeLenses!(_ => this._proxy.$emitCodeLensEvent(eventHandle));\n\t\t\tresult = Disposable.from(result, subscription);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t$provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<modes.ICodeLensSymbol[]> {\n\t\treturn this._withAdapter(handle, CodeLensAdapter, adapter => adapter.provideCodeLenses(URI.revive(resource), token));\n\t}\n\n\t$resolveCodeLens(handle: number, resource: UriComponents, symbol: modes.ICodeLensSymbol, token: CancellationToken): Promise<modes.ICodeLensSymbol | undefined> {\n\t\treturn this._withAdapter(handle, CodeLensAdapter, adapter => adapter.resolveCodeLens(URI.revive(resource), symbol, token));\n\t}\n\n\t// --- code insets\n\n\tregisterCodeInsetProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CodeInsetProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tconst eventHandle = typeof provider.onDidChangeCodeInsets === 'function' ? this._nextHandle() : undefined;\n\n\t\tthis._adapter.set(handle, new AdapterData(new CodeInsetAdapter(this._documents, this._heapService, provider), extension));\n\t\tthis._proxy.$registerCodeInsetSupport(handle, this._transformDocumentSelector(selector), eventHandle);\n\t\tlet result = this._createDisposable(handle);\n\n\t\tif (eventHandle !== undefined && provider.onDidChangeCodeInsets) {\n\t\t\tconst subscription = provider.onDidChangeCodeInsets(_ => this._proxy.$emitCodeLensEvent(eventHandle));\n\t\t\tresult = Disposable.from(result, subscription);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t$provideCodeInsets(handle: number, resource: UriComponents, token: CancellationToken): Promise<codeInset.ICodeInsetSymbol[] | undefined> {\n\t\treturn this._withAdapter(handle, CodeInsetAdapter, adapter => adapter.provideCodeInsets(URI.revive(resource), token));\n\t}\n\n\t$resolveCodeInset(handle: number, _resource: UriComponents, symbol: codeInset.ICodeInsetSymbol, token: CancellationToken): Promise<codeInset.ICodeInsetSymbol> {\n\t\tconst webviewHandle = Math.random();\n\t\tconst webview = new ExtHostWebview(webviewHandle, this._webviewProxy, { enableScripts: true });\n\t\treturn this._withAdapter(handle, CodeInsetAdapter, async (adapter, extension) => {\n\t\t\tawait this._webviewProxy.$createWebviewCodeInset(webviewHandle, symbol.id, { enableCommandUris: true, enableScripts: true }, extension ? extension.extensionLocation : undefined);\n\t\t\treturn adapter.resolveCodeInset(symbol, webview, token);\n\t\t});\n\t}\n\n\t// --- declaration\n\n\tregisterDefinitionProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DefinitionProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DefinitionAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDefinitionSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, DefinitionAdapter, adapter => adapter.provideDefinition(URI.revive(resource), position, token));\n\t}\n\n\tregisterDeclarationProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DeclarationProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DeclarationAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDeclarationSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDeclaration(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, DeclarationAdapter, adapter => adapter.provideDeclaration(URI.revive(resource), position, token));\n\t}\n\n\tregisterImplementationProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.ImplementationProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new ImplementationAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerImplementationSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideImplementation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, ImplementationAdapter, adapter => adapter.provideImplementation(URI.revive(resource), position, token));\n\t}\n\n\tregisterTypeDefinitionProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.TypeDefinitionProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new TypeDefinitionAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerTypeDefinitionSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideTypeDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.LocationLink[]> {\n\t\treturn this._withAdapter(handle, TypeDefinitionAdapter, adapter => adapter.provideTypeDefinition(URI.revive(resource), position, token));\n\t}\n\n\t// --- extra info\n\n\tregisterHoverProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.HoverProvider, extensionId?: ExtensionIdentifier): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new HoverAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerHoverProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideHover(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.Hover | undefined> {\n\t\treturn this._withAdapter(handle, HoverAdapter, adapter => adapter.provideHover(URI.revive(resource), position, token));\n\t}\n\n\t// --- occurrences\n\n\tregisterDocumentHighlightProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentHighlightProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DocumentHighlightAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentHighlightProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentHighlights(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined> {\n\t\treturn this._withAdapter(handle, DocumentHighlightAdapter, adapter => adapter.provideDocumentHighlights(URI.revive(resource), position, token));\n\t}\n\n\t// --- references\n\n\tregisterReferenceProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.ReferenceProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new ReferenceAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerReferenceSupport(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideReferences(handle: number, resource: UriComponents, position: IPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<modes.Location[] | undefined> {\n\t\treturn this._withAdapter(handle, ReferenceAdapter, adapter => adapter.provideReferences(URI.revive(resource), position, context, token));\n\t}\n\n\t// --- quick fix\n\n\tregisterCodeActionProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CodeActionProvider, metadata?: vscode.CodeActionProviderMetadata): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new CodeActionAdapter(this._documents, this._commands.converter, this._diagnostics, provider, this._logService, extension.identifier), extension);\n\t\tthis._proxy.$registerQuickFixSupport(handle, this._transformDocumentSelector(selector), (metadata && metadata.providedCodeActionKinds) ? metadata.providedCodeActionKinds.map(kind => kind.value) : undefined);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\n\t$provideCodeActions(handle: number, resource: UriComponents, rangeOrSelection: IRange | ISelection, context: modes.CodeActionContext, token: CancellationToken): Promise<CodeActionDto[] | undefined> {\n\t\treturn this._withAdapter(handle, CodeActionAdapter, adapter => adapter.provideCodeActions(URI.revive(resource), rangeOrSelection, context, token));\n\t}\n\n\t// --- formatting\n\n\tregisterDocumentFormattingEditProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentFormattingEditProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new DocumentFormattingAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentFormattingSupport(handle, this._transformDocumentSelector(selector), extension.identifier);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentFormattingEdits(handle: number, resource: UriComponents, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\t\treturn this._withAdapter(handle, DocumentFormattingAdapter, adapter => adapter.provideDocumentFormattingEdits(URI.revive(resource), options, token));\n\t}\n\n\tregisterDocumentRangeFormattingEditProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentRangeFormattingEditProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new RangeFormattingAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerRangeFormattingSupport(handle, this._transformDocumentSelector(selector), extension.identifier);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: IRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\t\treturn this._withAdapter(handle, RangeFormattingAdapter, adapter => adapter.provideDocumentRangeFormattingEdits(URI.revive(resource), range, options, token));\n\t}\n\n\tregisterOnTypeFormattingEditProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.OnTypeFormattingEditProvider, triggerCharacters: string[]): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new OnTypeFormattingAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerOnTypeFormattingSupport(handle, this._transformDocumentSelector(selector), triggerCharacters, extension.identifier);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideOnTypeFormattingEdits(handle: number, resource: UriComponents, position: IPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> {\n\t\treturn this._withAdapter(handle, OnTypeFormattingAdapter, adapter => adapter.provideOnTypeFormattingEdits(URI.revive(resource), position, ch, options, token));\n\t}\n\n\t// --- navigate types\n\n\tregisterWorkspaceSymbolProvider(extension: IExtensionDescription, provider: vscode.WorkspaceSymbolProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new NavigateTypeAdapter(provider), extension);\n\t\tthis._proxy.$registerNavigateTypeSupport(handle);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideWorkspaceSymbols(handle: number, search: string, token: CancellationToken): Promise<WorkspaceSymbolsDto> {\n\t\treturn this._withAdapter(handle, NavigateTypeAdapter, adapter => adapter.provideWorkspaceSymbols(search, token));\n\t}\n\n\t$resolveWorkspaceSymbol(handle: number, symbol: WorkspaceSymbolDto, token: CancellationToken): Promise<WorkspaceSymbolDto | undefined> {\n\t\treturn this._withAdapter(handle, NavigateTypeAdapter, adapter => adapter.resolveWorkspaceSymbol(symbol, token));\n\t}\n\n\t$releaseWorkspaceSymbols(handle: number, id: number): void {\n\t\tthis._withAdapter(handle, NavigateTypeAdapter, adapter => adapter.releaseWorkspaceSymbols(id));\n\t}\n\n\t// --- rename\n\n\tregisterRenameProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.RenameProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new RenameAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerRenameSupport(handle, this._transformDocumentSelector(selector), RenameAdapter.supportsResolving(provider));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideRenameEdits(handle: number, resource: UriComponents, position: IPosition, newName: string, token: CancellationToken): Promise<WorkspaceEditDto | undefined> {\n\t\treturn this._withAdapter(handle, RenameAdapter, adapter => adapter.provideRenameEdits(URI.revive(resource), position, newName, token));\n\t}\n\n\t$resolveRenameLocation(handle: number, resource: URI, position: IPosition, token: CancellationToken): Promise<modes.RenameLocation | undefined> {\n\t\treturn this._withAdapter(handle, RenameAdapter, adapter => adapter.resolveRenameLocation(URI.revive(resource), position, token));\n\t}\n\n\t// --- suggestion\n\n\tregisterCompletionItemProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, triggerCharacters: string[]): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new SuggestAdapter(this._documents, this._commands.converter, provider), extension);\n\t\tthis._proxy.$registerSuggestSupport(handle, this._transformDocumentSelector(selector), triggerCharacters, SuggestAdapter.supportsResolving(provider));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideCompletionItems(handle: number, resource: UriComponents, position: IPosition, context: modes.CompletionContext, token: CancellationToken): Promise<SuggestResultDto | undefined> {\n\t\treturn this._withAdapter(handle, SuggestAdapter, adapter => adapter.provideCompletionItems(URI.revive(resource), position, context, token));\n\t}\n\n\t$resolveCompletionItem(handle: number, resource: UriComponents, position: IPosition, suggestion: modes.CompletionItem, token: CancellationToken): Promise<modes.CompletionItem> {\n\t\treturn this._withAdapter(handle, SuggestAdapter, adapter => adapter.resolveCompletionItem(URI.revive(resource), position, suggestion, token));\n\t}\n\n\t$releaseCompletionItems(handle: number, id: number): void {\n\t\tthis._withAdapter(handle, SuggestAdapter, adapter => adapter.releaseCompletionItems(id));\n\t}\n\n\t// --- parameter hints\n\n\tregisterSignatureHelpProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.SignatureHelpProvider, metadataOrTriggerChars: string[] | vscode.SignatureHelpProviderMetadata): vscode.Disposable {\n\t\tconst metadata: ISerializedSignatureHelpProviderMetadata | undefined = Array.isArray(metadataOrTriggerChars)\n\t\t\t? { triggerCharacters: metadataOrTriggerChars, retriggerCharacters: [] }\n\t\t\t: metadataOrTriggerChars;\n\n\t\tconst handle = this._addNewAdapter(new SignatureHelpAdapter(this._documents, provider, this._heapService), extension);\n\t\tthis._proxy.$registerSignatureHelpProvider(handle, this._transformDocumentSelector(selector), metadata);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideSignatureHelp(handle: number, resource: UriComponents, position: IPosition, context: modes.SignatureHelpContext, token: CancellationToken): Promise<modes.SignatureHelp | undefined> {\n\t\treturn this._withAdapter(handle, SignatureHelpAdapter, adapter => adapter.provideSignatureHelp(URI.revive(resource), position, context, token));\n\t}\n\n\t// --- links\n\n\tregisterDocumentLinkProvider(extension: IExtensionDescription | undefined, selector: vscode.DocumentSelector, provider: vscode.DocumentLinkProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new LinkProviderAdapter(this._documents, this._heapService, provider), extension);\n\t\tthis._proxy.$registerDocumentLinkProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<LinkDto[] | undefined> {\n\t\treturn this._withAdapter(handle, LinkProviderAdapter, adapter => adapter.provideLinks(URI.revive(resource), token));\n\t}\n\n\t$resolveDocumentLink(handle: number, link: modes.ILink, token: CancellationToken): Promise<LinkDto | undefined> {\n\t\treturn this._withAdapter(handle, LinkProviderAdapter, adapter => adapter.resolveLink(link, token));\n\t}\n\n\tregisterColorProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.DocumentColorProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new ColorProviderAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerDocumentColorProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): Promise<IRawColorInfo[]> {\n\t\treturn this._withAdapter(handle, ColorProviderAdapter, adapter => adapter.provideColors(URI.revive(resource), token));\n\t}\n\n\t$provideColorPresentations(handle: number, resource: UriComponents, colorInfo: IRawColorInfo, token: CancellationToken): Promise<modes.IColorPresentation[] | undefined> {\n\t\treturn this._withAdapter(handle, ColorProviderAdapter, adapter => adapter.provideColorPresentations(URI.revive(resource), colorInfo, token));\n\t}\n\n\tregisterFoldingRangeProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.FoldingRangeProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new FoldingProviderAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerFoldingRangeProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideFoldingRanges(handle: number, resource: UriComponents, context: vscode.FoldingContext, token: CancellationToken): Promise<modes.FoldingRange[] | undefined> {\n\t\treturn this._withAdapter(handle, FoldingProviderAdapter, adapter => adapter.provideFoldingRanges(URI.revive(resource), context, token));\n\t}\n\n\t// --- smart select\n\n\tregisterSelectionRangeProvider(extension: IExtensionDescription, selector: vscode.DocumentSelector, provider: vscode.SelectionRangeProvider): vscode.Disposable {\n\t\tconst handle = this._addNewAdapter(new SelectionRangeAdapter(this._documents, provider), extension);\n\t\tthis._proxy.$registerSelectionRangeProvider(handle, this._transformDocumentSelector(selector));\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$provideSelectionRanges(handle: number, resource: UriComponents, positions: IPosition[], token: CancellationToken): Promise<modes.SelectionRange[][]> {\n\t\treturn this._withAdapter(handle, SelectionRangeAdapter, adapter => adapter.provideSelectionRanges(URI.revive(resource), positions, token));\n\t}\n\n\t// --- configuration\n\n\tprivate static _serializeRegExp(regExp: RegExp): ISerializedRegExp {\n\t\treturn {\n\t\t\tpattern: regExp.source,\n\t\t\tflags: regExpFlags(regExp),\n\t\t};\n\t}\n\n\tprivate static _serializeIndentationRule(indentationRule: vscode.IndentationRule): ISerializedIndentationRule {\n\t\treturn {\n\t\t\tdecreaseIndentPattern: ExtHostLanguageFeatures._serializeRegExp(indentationRule.decreaseIndentPattern),\n\t\t\tincreaseIndentPattern: ExtHostLanguageFeatures._serializeRegExp(indentationRule.increaseIndentPattern),\n\t\t\tindentNextLinePattern: indentationRule.indentNextLinePattern ? ExtHostLanguageFeatures._serializeRegExp(indentationRule.indentNextLinePattern) : undefined,\n\t\t\tunIndentedLinePattern: indentationRule.unIndentedLinePattern ? ExtHostLanguageFeatures._serializeRegExp(indentationRule.unIndentedLinePattern) : undefined,\n\t\t};\n\t}\n\n\tprivate static _serializeOnEnterRule(onEnterRule: vscode.OnEnterRule): ISerializedOnEnterRule {\n\t\treturn {\n\t\t\tbeforeText: ExtHostLanguageFeatures._serializeRegExp(onEnterRule.beforeText),\n\t\t\tafterText: onEnterRule.afterText ? ExtHostLanguageFeatures._serializeRegExp(onEnterRule.afterText) : undefined,\n\t\t\toneLineAboveText: onEnterRule.oneLineAboveText ? ExtHostLanguageFeatures._serializeRegExp(onEnterRule.oneLineAboveText) : undefined,\n\t\t\taction: onEnterRule.action\n\t\t};\n\t}\n\n\tprivate static _serializeOnEnterRules(onEnterRules: vscode.OnEnterRule[]): ISerializedOnEnterRule[] {\n\t\treturn onEnterRules.map(ExtHostLanguageFeatures._serializeOnEnterRule);\n\t}\n\n\tsetLanguageConfiguration(languageId: string, configuration: vscode.LanguageConfiguration): vscode.Disposable {\n\t\tlet { wordPattern } = configuration;\n\n\t\t// check for a valid word pattern\n\t\tif (wordPattern && regExpLeadsToEndlessLoop(wordPattern)) {\n\t\t\tthrow new Error(`Invalid language configuration: wordPattern '${wordPattern}' is not allowed to match the empty string.`);\n\t\t}\n\n\t\t// word definition\n\t\tif (wordPattern) {\n\t\t\tthis._documents.setWordDefinitionFor(languageId, wordPattern);\n\t\t} else {\n\t\t\tthis._documents.setWordDefinitionFor(languageId, undefined);\n\t\t}\n\n\t\tconst handle = this._nextHandle();\n\t\tconst serializedConfiguration: ISerializedLanguageConfiguration = {\n\t\t\tcomments: configuration.comments,\n\t\t\tbrackets: configuration.brackets,\n\t\t\twordPattern: configuration.wordPattern ? ExtHostLanguageFeatures._serializeRegExp(configuration.wordPattern) : undefined,\n\t\t\tindentationRules: configuration.indentationRules ? ExtHostLanguageFeatures._serializeIndentationRule(configuration.indentationRules) : undefined,\n\t\t\tonEnterRules: configuration.onEnterRules ? ExtHostLanguageFeatures._serializeOnEnterRules(configuration.onEnterRules) : undefined,\n\t\t\t__electricCharacterSupport: configuration.__electricCharacterSupport,\n\t\t\t__characterPairSupport: configuration.__characterPairSupport,\n\t\t};\n\t\tthis._proxy.$setLanguageConfiguration(handle, languageId, serializedConfiguration);\n\t\treturn this._createDisposable(handle);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ExtHostWindowShape, MainContext, MainThreadWindowShape, IMainContext } from './extHost.protocol';\nimport { WindowState } from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\n\nexport class ExtHostWindow implements ExtHostWindowShape {\n\n\tprivate static InitialState: WindowState = {\n\t\tfocused: true\n\t};\n\n\tprivate _proxy: MainThreadWindowShape;\n\n\tprivate _onDidChangeWindowState = new Emitter<WindowState>();\n\treadonly onDidChangeWindowState: Event<WindowState> = this._onDidChangeWindowState.event;\n\n\tprivate _state = ExtHostWindow.InitialState;\n\tget state(): WindowState { return this._state; }\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadWindow);\n\t\tthis._proxy.$getWindowVisibility().then(isFocused => this.$onDidChangeWindowFocus(isFocused));\n\t}\n\n\t$onDidChangeWindowFocus(focused: boolean): void {\n\t\tif (focused === this._state.focused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state = { ...this._state, focused };\n\t\tthis._onDidChangeWindowState.fire(this._state);\n\t}\n\n\topenUri(uri: URI): Promise<boolean> {\n\t\tif (isFalsyOrWhitespace(uri.scheme)) {\n\t\t\treturn Promise.reject('Invalid scheme - cannot be empty');\n\t\t} else if (uri.scheme === Schemas.command) {\n\t\t\treturn Promise.reject(`Invalid scheme '${uri.scheme}'`);\n\t\t}\n\t\treturn this._proxy.$openUri(uri);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IURITransformer, transformIncomingURIs } from 'vs/base/common/uriIpc';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/node/ipc';\nimport { LazyPromise } from 'vs/workbench/services/extensions/node/lazyPromise';\nimport { IRPCProtocol, ProxyIdentifier, getStringIdentifierForProxy } from 'vs/workbench/services/extensions/node/proxyIdentifier';\n\nexport interface JSONStringifyReplacer {\n\t(key: string, value: any): any;\n}\n\nfunction safeStringify(obj: any, replacer: JSONStringifyReplacer | null): string {\n\ttry {\n\t\treturn JSON.stringify(obj, <(key: string, value: any) => any>replacer);\n\t} catch (err) {\n\t\treturn 'null';\n\t}\n}\n\nfunction createURIReplacer(transformer: IURITransformer | null): JSONStringifyReplacer | null {\n\tif (!transformer) {\n\t\treturn null;\n\t}\n\treturn (key: string, value: any): any => {\n\t\tif (value && value.$mid === 1) {\n\t\t\treturn transformer.transformOutgoing(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport const enum ResponsiveState {\n\tResponsive = 0,\n\tUnresponsive = 1\n}\n\nexport interface IRPCProtocolLogger {\n\tlogIncoming(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nconst noop = () => { };\n\nexport class RPCProtocol extends Disposable implements IRPCProtocol {\n\n\tprivate static UNRESPONSIVE_TIME = 3 * 1000; // 3s\n\n\tprivate readonly _onDidChangeResponsiveState: Emitter<ResponsiveState> = this._register(new Emitter<ResponsiveState>());\n\tpublic readonly onDidChangeResponsiveState: Event<ResponsiveState> = this._onDidChangeResponsiveState.event;\n\n\tprivate readonly _protocol: IMessagePassingProtocol;\n\tprivate readonly _logger: IRPCProtocolLogger | null;\n\tprivate readonly _uriTransformer: IURITransformer | null;\n\tprivate readonly _uriReplacer: JSONStringifyReplacer | null;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _locals: any[];\n\tprivate readonly _proxies: any[];\n\tprivate _lastMessageId: number;\n\tprivate readonly _cancelInvokedHandlers: { [req: string]: () => void; };\n\tprivate readonly _pendingRPCReplies: { [msgId: string]: LazyPromise; };\n\tprivate _responsiveState: ResponsiveState;\n\tprivate _unacknowledgedCount: number;\n\tprivate _unresponsiveTime: number;\n\tprivate _asyncCheckUresponsive: RunOnceScheduler;\n\n\tconstructor(protocol: IMessagePassingProtocol, logger: IRPCProtocolLogger | null = null, transformer: IURITransformer | null = null) {\n\t\tsuper();\n\t\tthis._protocol = protocol;\n\t\tthis._logger = logger;\n\t\tthis._uriTransformer = transformer;\n\t\tthis._uriReplacer = createURIReplacer(this._uriTransformer);\n\t\tthis._isDisposed = false;\n\t\tthis._locals = [];\n\t\tthis._proxies = [];\n\t\tfor (let i = 0, len = ProxyIdentifier.count; i < len; i++) {\n\t\t\tthis._locals[i] = null;\n\t\t\tthis._proxies[i] = null;\n\t\t}\n\t\tthis._lastMessageId = 0;\n\t\tthis._cancelInvokedHandlers = Object.create(null);\n\t\tthis._pendingRPCReplies = {};\n\t\tthis._responsiveState = ResponsiveState.Responsive;\n\t\tthis._unacknowledgedCount = 0;\n\t\tthis._unresponsiveTime = 0;\n\t\tthis._asyncCheckUresponsive = this._register(new RunOnceScheduler(() => this._checkUnresponsive(), 1000));\n\t\tthis._protocol.onMessage((msg) => this._receiveOneMessage(msg));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\n\t\t// Release all outstanding promises with a canceled error\n\t\tObject.keys(this._pendingRPCReplies).forEach((msgId) => {\n\t\t\tconst pending = this._pendingRPCReplies[msgId];\n\t\t\tpending.resolveErr(errors.canceled());\n\t\t});\n\t}\n\n\tprivate _onWillSendRequest(req: number): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Since this is the first request we are sending in a while,\n\t\t\t// mark this moment as the start for the countdown to unresponsive time\n\t\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\t}\n\t\tthis._unacknowledgedCount++;\n\t\tif (!this._asyncCheckUresponsive.isScheduled()) {\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _onDidReceiveAcknowledge(req: number): void {\n\t\t// The next possible unresponsive time is now + delta.\n\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\tthis._unacknowledgedCount--;\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// No more need to check for unresponsive\n\t\t\tthis._asyncCheckUresponsive.cancel();\n\t\t}\n\t\t// The ext host is responsive!\n\t\tthis._setResponsiveState(ResponsiveState.Responsive);\n\t}\n\n\tprivate _checkUnresponsive(): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Not waiting for anything => cannot say if it is responsive or not\n\t\t\treturn;\n\t\t}\n\n\t\tif (Date.now() > this._unresponsiveTime) {\n\t\t\t// Unresponsive!!\n\t\t\tthis._setResponsiveState(ResponsiveState.Unresponsive);\n\t\t} else {\n\t\t\t// Not (yet) unresponsive, be sure to check again soon\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _setResponsiveState(newResponsiveState: ResponsiveState): void {\n\t\tif (this._responsiveState === newResponsiveState) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._responsiveState = newResponsiveState;\n\t\tthis._onDidChangeResponsiveState.fire(this._responsiveState);\n\t}\n\n\tpublic get responsiveState(): ResponsiveState {\n\t\treturn this._responsiveState;\n\t}\n\n\tpublic transformIncomingURIs<T>(obj: T): T {\n\t\tif (!this._uriTransformer) {\n\t\t\treturn obj;\n\t\t}\n\t\treturn transformIncomingURIs(obj, this._uriTransformer);\n\t}\n\n\tpublic getProxy<T>(identifier: ProxyIdentifier<T>): T {\n\t\tconst rpcId = identifier.nid;\n\t\tif (!this._proxies[rpcId]) {\n\t\t\tthis._proxies[rpcId] = this._createProxy(rpcId);\n\t\t}\n\t\treturn this._proxies[rpcId];\n\t}\n\n\tprivate _createProxy<T>(rpcId: number): T {\n\t\tlet handler = {\n\t\t\tget: (target: any, name: string) => {\n\t\t\t\tif (!target[name] && name.charCodeAt(0) === CharCode.DollarSign) {\n\t\t\t\t\ttarget[name] = (...myArgs: any[]) => {\n\t\t\t\t\t\treturn this._remoteCall(rpcId, name, myArgs);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tpublic set<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\tthis._locals[identifier.nid] = value;\n\t\treturn value;\n\t}\n\n\tpublic assertRegistered(identifiers: ProxyIdentifier<any>[]): void {\n\t\tfor (let i = 0, len = identifiers.length; i < len; i++) {\n\t\t\tconst identifier = identifiers[i];\n\t\t\tif (!this._locals[identifier.nid]) {\n\t\t\t\tthrow new Error(`Missing actor ${identifier.sid} (isMain: ${identifier.isMain})`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _receiveOneMessage(rawmsg: Buffer): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msgLength = rawmsg.length;\n\t\tconst buff = MessageBuffer.read(rawmsg, 0);\n\t\tconst messageType = <MessageType>buff.readUInt8();\n\t\tconst req = buff.readUInt32();\n\n\t\tswitch (messageType) {\n\t\t\tcase MessageType.RequestJSONArgs:\n\t\t\tcase MessageType.RequestJSONArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestJSONArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestJSONArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.RequestMixedArgs:\n\t\t\tcase MessageType.RequestMixedArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestMixedArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestMixedArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Acknowledged: {\n\t\t\t\tif (this._logger) {\n\t\t\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `ack`);\n\t\t\t\t}\n\t\t\t\tthis._onDidReceiveAcknowledge(req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Cancel: {\n\t\t\t\tthis._receiveCancel(msgLength, req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKEmpty: {\n\t\t\t\tthis._receiveReply(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKJSON: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKJSON(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\tvalue = transformIncomingURIs(value, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKBuffer: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKBuffer(buff);\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrError: {\n\t\t\t\tlet err = MessageIO.deserializeReplyErrError(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\terr = transformIncomingURIs(err, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReplyErr(msgLength, req, err);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrEmpty: {\n\t\t\t\tthis._receiveReplyErr(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _receiveRequest(msgLength: number, req: number, rpcId: number, method: string, args: any[], usesCancellationToken: boolean): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveRequest ${getStringIdentifierForProxy(rpcId)}.${method}(`, args);\n\t\t}\n\t\tconst callId = String(req);\n\n\t\tlet promise: Promise<any>;\n\t\tlet cancel: () => void;\n\t\tif (usesCancellationToken) {\n\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\targs.push(cancellationTokenSource.token);\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = () => cancellationTokenSource.cancel();\n\t\t} else {\n\t\t\t// cannot be cancelled\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = noop;\n\t\t}\n\n\t\tthis._cancelInvokedHandlers[callId] = cancel;\n\n\t\t// Acknowledge the request\n\t\tconst msg = MessageIO.serializeAcknowledged(req);\n\t\tif (this._logger) {\n\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `ack`);\n\t\t}\n\t\tthis._protocol.send(msg);\n\n\t\tpromise.then((r) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyOK(req, r, this._uriReplacer);\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `reply:`, r);\n\t\t\t}\n\t\t\tthis._protocol.send(msg);\n\t\t}, (err) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyErr(req, err);\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `replyErr:`, err);\n\t\t\t}\n\t\t\tthis._protocol.send(msg);\n\t\t});\n\t}\n\n\tprivate _receiveCancel(msgLength: number, req: number): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveCancel`);\n\t\t}\n\t\tconst callId = String(req);\n\t\tif (this._cancelInvokedHandlers[callId]) {\n\t\t\tthis._cancelInvokedHandlers[callId]();\n\t\t}\n\t}\n\n\tprivate _receiveReply(msgLength: number, req: number, value: any): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReply:`, value);\n\t\t}\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tpendingReply.resolveOk(value);\n\t}\n\n\tprivate _receiveReplyErr(msgLength: number, req: number, value: any): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReplyErr:`, value);\n\t\t}\n\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tlet err: Error | null = null;\n\t\tif (value && value.$isError) {\n\t\t\terr = new Error();\n\t\t\terr.name = value.name;\n\t\t\terr.message = value.message;\n\t\t\terr.stack = value.stack;\n\t\t}\n\t\tpendingReply.resolveErr(err);\n\t}\n\n\tprivate _invokeHandler(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\ttry {\n\t\t\treturn Promise.resolve(this._doInvokeHandler(rpcId, methodName, args));\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tprivate _doInvokeHandler(rpcId: number, methodName: string, args: any[]): any {\n\t\tconst actor = this._locals[rpcId];\n\t\tif (!actor) {\n\t\t\tthrow new Error('Unknown actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\tlet method = actor[methodName];\n\t\tif (typeof method !== 'function') {\n\t\t\tthrow new Error('Unknown method ' + methodName + ' on actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\treturn method.apply(actor, args);\n\t}\n\n\tprivate _remoteCall(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\tif (this._isDisposed) {\n\t\t\treturn Promise.reject<any>(errors.canceled());\n\t\t}\n\t\tlet cancellationToken: CancellationToken | null = null;\n\t\tif (args.length > 0 && CancellationToken.isCancellationToken(args[args.length - 1])) {\n\t\t\tcancellationToken = args.pop();\n\t\t}\n\n\t\tif (cancellationToken && cancellationToken.isCancellationRequested) {\n\t\t\t// No need to do anything...\n\t\t\treturn Promise.reject<any>(errors.canceled());\n\t\t}\n\n\t\tconst req = ++this._lastMessageId;\n\t\tconst callId = String(req);\n\t\tconst result = new LazyPromise();\n\n\t\tif (cancellationToken) {\n\t\t\tcancellationToken.onCancellationRequested(() => {\n\t\t\t\tconst msg = MessageIO.serializeCancel(req);\n\t\t\t\tif (this._logger) {\n\t\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `cancel`);\n\t\t\t\t}\n\t\t\t\tthis._protocol.send(MessageIO.serializeCancel(req));\n\t\t\t});\n\t\t}\n\n\t\tthis._pendingRPCReplies[callId] = result;\n\t\tthis._onWillSendRequest(req);\n\t\tconst msg = MessageIO.serializeRequest(req, rpcId, methodName, args, !!cancellationToken, this._uriReplacer);\n\t\tif (this._logger) {\n\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `request: ${getStringIdentifierForProxy(rpcId)}.${methodName}(`, args);\n\t\t}\n\t\tthis._protocol.send(msg);\n\t\treturn result;\n\t}\n}\n\nclass MessageBuffer {\n\n\tpublic static alloc(type: MessageType, req: number, messageSize: number): MessageBuffer {\n\t\tlet result = new MessageBuffer(Buffer.allocUnsafe(messageSize + 1 /* type */ + 4 /* req */), 0);\n\t\tresult.writeUInt8(type);\n\t\tresult.writeUInt32(req);\n\t\treturn result;\n\t}\n\n\tpublic static read(buff: Buffer, offset: number): MessageBuffer {\n\t\treturn new MessageBuffer(buff, offset);\n\t}\n\n\tprivate _buff: Buffer;\n\tprivate _offset: number;\n\n\tpublic get buffer(): Buffer {\n\t\treturn this._buff;\n\t}\n\n\tprivate constructor(buff: Buffer, offset: number) {\n\t\tthis._buff = buff;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic static sizeUInt8(): number {\n\t\treturn 1;\n\t}\n\n\tpublic writeUInt8(n: number): void {\n\t\tthis._buff.writeUInt8(n, this._offset, true); this._offset += 1;\n\t}\n\n\tpublic readUInt8(): number {\n\t\tconst n = this._buff.readUInt8(this._offset, true); this._offset += 1;\n\t\treturn n;\n\t}\n\n\tpublic writeUInt32(n: number): void {\n\t\tthis._buff.writeUInt32BE(n, this._offset, true); this._offset += 4;\n\t}\n\n\tpublic readUInt32(): number {\n\t\tconst n = this._buff.readUInt32BE(this._offset, true); this._offset += 4;\n\t\treturn n;\n\t}\n\n\tpublic static sizeShortString(str: string, strByteLength: number): number {\n\t\treturn 1 /* string length */ + strByteLength /* actual string */;\n\t}\n\n\tpublic writeShortString(str: string, strByteLength: number): void {\n\t\tthis._buff.writeUInt8(strByteLength, this._offset, true); this._offset += 1;\n\t\tthis._buff.write(str, this._offset, strByteLength, 'utf8'); this._offset += strByteLength;\n\t}\n\n\tpublic readShortString(): string {\n\t\tconst strLength = this._buff.readUInt8(this._offset, true); this._offset += 1;\n\t\tconst str = this._buff.toString('utf8', this._offset, this._offset + strLength); this._offset += strLength;\n\t\treturn str;\n\t}\n\n\tpublic static sizeLongString(str: string, strByteLength: number): number {\n\t\treturn 4 /* string length */ + strByteLength /* actual string */;\n\t}\n\n\tpublic writeLongString(str: string, strByteLength: number): void {\n\t\tthis._buff.writeUInt32LE(strByteLength, this._offset, true); this._offset += 4;\n\t\tthis._buff.write(str, this._offset, strByteLength, 'utf8'); this._offset += strByteLength;\n\t}\n\n\tpublic readLongString(): string {\n\t\tconst strLength = this._buff.readUInt32LE(this._offset, true); this._offset += 4;\n\t\tconst str = this._buff.toString('utf8', this._offset, this._offset + strLength); this._offset += strLength;\n\t\treturn str;\n\t}\n\n\tpublic static sizeBuffer(buff: Buffer, buffByteLength: number): number {\n\t\treturn 4 /* buffer length */ + buffByteLength /* actual buffer */;\n\t}\n\n\tpublic writeBuffer(buff: Buffer, buffByteLength: number): void {\n\t\tthis._buff.writeUInt32LE(buffByteLength, this._offset, true); this._offset += 4;\n\t\tbuff.copy(this._buff, this._offset); this._offset += buffByteLength;\n\t}\n\n\tpublic readBuffer(): Buffer {\n\t\tconst buffLength = this._buff.readUInt32LE(this._offset, true); this._offset += 4;\n\t\tconst buff = this._buff.slice(this._offset, this._offset + buffLength); this._offset += buffLength;\n\t\treturn buff;\n\t}\n\n\tpublic static sizeMixedArray(arr: Array<string | Buffer>, arrLengths: number[]): number {\n\t\tlet size = 0;\n\t\tsize += 1; // arr length\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tconst elLength = arrLengths[i];\n\t\t\tsize += 1; // arg type\n\t\t\tif (typeof el === 'string') {\n\t\t\t\tsize += this.sizeLongString(el, elLength);\n\t\t\t} else {\n\t\t\t\tsize += this.sizeBuffer(el, elLength);\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t}\n\n\tpublic writeMixedArray(arr: Array<string | Buffer>, arrLengths: number[]): void {\n\t\tthis._buff.writeUInt8(arr.length, this._offset, true); this._offset += 1;\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tconst elLength = arrLengths[i];\n\t\t\tif (typeof el === 'string') {\n\t\t\t\tthis.writeUInt8(ArgType.String);\n\t\t\t\tthis.writeLongString(el, elLength);\n\t\t\t} else {\n\t\t\t\tthis.writeUInt8(ArgType.Buffer);\n\t\t\t\tthis.writeBuffer(el, elLength);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readMixedArray(): Array<string | Buffer> {\n\t\tconst arrLen = this._buff.readUInt8(this._offset, true); this._offset += 1;\n\t\tlet arr: Array<string | Buffer> = new Array(arrLen);\n\t\tfor (let i = 0; i < arrLen; i++) {\n\t\t\tconst argType = <ArgType>this.readUInt8();\n\t\t\tif (argType === ArgType.String) {\n\t\t\t\tarr[i] = this.readLongString();\n\t\t\t} else {\n\t\t\t\tarr[i] = this.readBuffer();\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n}\n\nclass MessageIO {\n\n\tprivate static _arrayContainsBuffer(arr: any[]): boolean {\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (Buffer.isBuffer(arr[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static serializeRequest(req: number, rpcId: number, method: string, args: any[], usesCancellationToken: boolean, replacer: JSONStringifyReplacer | null): Buffer {\n\t\tif (this._arrayContainsBuffer(args)) {\n\t\t\tlet massagedArgs: Array<string | Buffer> = new Array(args.length);\n\t\t\tlet argsLengths: number[] = new Array(args.length);\n\t\t\tfor (let i = 0, len = args.length; i < len; i++) {\n\t\t\t\tconst arg = args[i];\n\t\t\t\tif (Buffer.isBuffer(arg)) {\n\t\t\t\t\tmassagedArgs[i] = arg;\n\t\t\t\t\targsLengths[i] = arg.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tmassagedArgs[i] = safeStringify(arg, replacer);\n\t\t\t\t\targsLengths[i] = Buffer.byteLength(massagedArgs[i], 'utf8');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._requestMixedArgs(req, rpcId, method, massagedArgs, argsLengths, usesCancellationToken);\n\t\t}\n\t\treturn this._requestJSONArgs(req, rpcId, method, safeStringify(args, replacer), usesCancellationToken);\n\t}\n\n\tprivate static _requestJSONArgs(req: number, rpcId: number, method: string, args: string, usesCancellationToken: boolean): Buffer {\n\t\tconst methodByteLength = Buffer.byteLength(method, 'utf8');\n\t\tconst argsByteLength = Buffer.byteLength(args, 'utf8');\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(method, methodByteLength);\n\t\tlen += MessageBuffer.sizeLongString(args, argsByteLength);\n\n\t\tlet result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestJSONArgsWithCancellation : MessageType.RequestJSONArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(method, methodByteLength);\n\t\tresult.writeLongString(args, argsByteLength);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestJSONArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[]; } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst args = buff.readLongString();\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: JSON.parse(args)\n\t\t};\n\t}\n\n\tprivate static _requestMixedArgs(req: number, rpcId: number, method: string, args: Array<string | Buffer>, argsLengths: number[], usesCancellationToken: boolean): Buffer {\n\t\tconst methodByteLength = Buffer.byteLength(method, 'utf8');\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(method, methodByteLength);\n\t\tlen += MessageBuffer.sizeMixedArray(args, argsLengths);\n\n\t\tlet result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestMixedArgsWithCancellation : MessageType.RequestMixedArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(method, methodByteLength);\n\t\tresult.writeMixedArray(args, argsLengths);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestMixedArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[]; } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst rawargs = buff.readMixedArray();\n\t\tconst args: any[] = new Array(rawargs.length);\n\t\tfor (let i = 0, len = rawargs.length; i < len; i++) {\n\t\t\tconst rawarg = rawargs[i];\n\t\t\tif (typeof rawarg === 'string') {\n\t\t\t\targs[i] = JSON.parse(rawarg);\n\t\t\t} else {\n\t\t\t\targs[i] = rawarg;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: args\n\t\t};\n\t}\n\n\tpublic static serializeAcknowledged(req: number): Buffer {\n\t\treturn MessageBuffer.alloc(MessageType.Acknowledged, req, 0).buffer;\n\t}\n\n\tpublic static serializeCancel(req: number): Buffer {\n\t\treturn MessageBuffer.alloc(MessageType.Cancel, req, 0).buffer;\n\t}\n\n\tpublic static serializeReplyOK(req: number, res: any, replacer: JSONStringifyReplacer | null): Buffer {\n\t\tif (typeof res === 'undefined') {\n\t\t\treturn this._serializeReplyOKEmpty(req);\n\t\t}\n\t\tif (Buffer.isBuffer(res)) {\n\t\t\treturn this._serializeReplyOKBuffer(req, res);\n\t\t}\n\t\treturn this._serializeReplyOKJSON(req, safeStringify(res, replacer));\n\t}\n\n\tprivate static _serializeReplyOKEmpty(req: number): Buffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyOKEmpty, req, 0).buffer;\n\t}\n\n\tprivate static _serializeReplyOKBuffer(req: number, res: Buffer): Buffer {\n\t\tconst resByteLength = res.byteLength;\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeBuffer(res, resByteLength);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyOKBuffer, req, len);\n\t\tresult.writeBuffer(res, resByteLength);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKBuffer(buff: MessageBuffer): Buffer {\n\t\treturn buff.readBuffer();\n\t}\n\n\tprivate static _serializeReplyOKJSON(req: number, res: string): Buffer {\n\t\tconst resByteLength = Buffer.byteLength(res, 'utf8');\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(res, resByteLength);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyOKJSON, req, len);\n\t\tresult.writeLongString(res, resByteLength);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKJSON(buff: MessageBuffer): any {\n\t\tconst res = buff.readLongString();\n\t\treturn JSON.parse(res);\n\t}\n\n\tpublic static serializeReplyErr(req: number, err: any): Buffer {\n\t\tif (err instanceof Error) {\n\t\t\treturn this._serializeReplyErrEror(req, err);\n\t\t}\n\t\treturn this._serializeReplyErrEmpty(req);\n\t}\n\n\tprivate static _serializeReplyErrEror(req: number, _err: Error): Buffer {\n\t\tconst err = safeStringify(errors.transformErrorForSerialization(_err), null);\n\t\tconst errByteLength = Buffer.byteLength(err, 'utf8');\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(err, errByteLength);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyErrError, req, len);\n\t\tresult.writeLongString(err, errByteLength);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyErrError(buff: MessageBuffer): Error {\n\t\tconst err = buff.readLongString();\n\t\treturn JSON.parse(err);\n\t}\n\n\tprivate static _serializeReplyErrEmpty(req: number): Buffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyErrEmpty, req, 0).buffer;\n\t}\n}\n\nconst enum MessageType {\n\tRequestJSONArgs = 1,\n\tRequestJSONArgsWithCancellation = 2,\n\tRequestMixedArgs = 3,\n\tRequestMixedArgsWithCancellation = 4,\n\tAcknowledged = 5,\n\tCancel = 6,\n\tReplyOKEmpty = 7,\n\tReplyOKBuffer = 8,\n\tReplyOKJSON = 9,\n\tReplyErrError = 10,\n\tReplyErrEmpty = 11,\n}\n\nconst enum ArgType {\n\tString = 1,\n\tBuffer = 2\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createRotatingLogger } from 'vs/platform/log/node/spdlogService';\nimport { RotatingLogger } from 'spdlog';\n\nexport class OutputAppender {\n\n\tprivate appender: RotatingLogger;\n\n\tconstructor(name: string, file: string) {\n\t\tthis.appender = createRotatingLogger(name, file, 1024 * 1024 * 30, 1);\n\t\tthis.appender.clearFormatters();\n\t}\n\n\tappend(content: string): void {\n\t\tthis.appender.critical(content);\n\t}\n\n\tflush(): void {\n\t\tthis.appender.flush();\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MainContext, MainThreadOutputServiceShape, IMainContext, ExtHostOutputServiceShape } from './extHost.protocol';\nimport * as vscode from 'vscode';\nimport { URI } from 'vs/base/common/uri';\nimport { join } from 'vs/base/common/path';\nimport { OutputAppender } from 'vs/workbench/services/output/node/outputAppender';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nexport abstract class AbstractExtHostOutputChannel extends Disposable implements vscode.OutputChannel {\n\n\treadonly _id: Promise<string>;\n\tprivate readonly _name: string;\n\tprotected readonly _proxy: MainThreadOutputServiceShape;\n\tprivate _disposed: boolean;\n\tprivate _offset: number;\n\n\tprotected readonly _onDidAppend: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidAppend: Event<void> = this._onDidAppend.event;\n\n\tconstructor(name: string, log: boolean, file: URI | undefined, proxy: MainThreadOutputServiceShape) {\n\t\tsuper();\n\n\t\tthis._name = name;\n\t\tthis._proxy = proxy;\n\t\tthis._id = proxy.$register(this.name, log, file);\n\t\tthis._offset = 0;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tappend(value: string): void {\n\t\tthis.validate();\n\t\tthis._offset += value ? Buffer.from(value).byteLength : 0;\n\t}\n\n\tupdate(): void {\n\t\tthis._id.then(id => this._proxy.$update(id));\n\t}\n\n\tappendLine(value: string): void {\n\t\tthis.validate();\n\t\tthis.append(value + '\\n');\n\t}\n\n\tclear(): void {\n\t\tthis.validate();\n\t\tconst till = this._offset;\n\t\tthis._id.then(id => this._proxy.$clear(id, till));\n\t}\n\n\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\tthis.validate();\n\t\tthis._id.then(id => this._proxy.$reveal(id, !!(typeof columnOrPreserveFocus === 'boolean' ? columnOrPreserveFocus : preserveFocus)));\n\t}\n\n\thide(): void {\n\t\tthis.validate();\n\t\tthis._id.then(id => this._proxy.$close(id));\n\t}\n\n\tprotected validate(): void {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error('Channel has been closed');\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (!this._disposed) {\n\t\t\tthis._id\n\t\t\t\t.then(id => this._proxy.$dispose(id))\n\t\t\t\t.then(() => this._disposed = true);\n\t\t}\n\t}\n}\n\nexport class ExtHostPushOutputChannel extends AbstractExtHostOutputChannel {\n\n\tconstructor(name: string, proxy: MainThreadOutputServiceShape) {\n\t\tsuper(name, false, undefined, proxy);\n\t}\n\n\tappend(value: string): void {\n\t\tsuper.append(value);\n\t\tthis._id.then(id => this._proxy.$append(id, value));\n\t\tthis._onDidAppend.fire();\n\t}\n}\n\nexport class ExtHostOutputChannelBackedByFile extends AbstractExtHostOutputChannel {\n\n\tprivate static _namePool = 1;\n\tprivate _appender: OutputAppender;\n\n\tconstructor(name: string, outputDir: string, proxy: MainThreadOutputServiceShape) {\n\t\tconst fileName = `${ExtHostOutputChannelBackedByFile._namePool++}-${name}`;\n\t\tconst file = URI.file(join(outputDir, `${fileName}.log`));\n\n\t\tsuper(name, false, file, proxy);\n\t\tthis._appender = new OutputAppender(fileName, file.fsPath);\n\t}\n\n\tappend(value: string): void {\n\t\tsuper.append(value);\n\t\tthis._appender.append(value);\n\t\tthis._onDidAppend.fire();\n\t}\n\n\tupdate(): void {\n\t\tthis._appender.flush();\n\t\tsuper.update();\n\t}\n\n\tshow(columnOrPreserveFocus?: vscode.ViewColumn | boolean, preserveFocus?: boolean): void {\n\t\tthis._appender.flush();\n\t\tsuper.show(columnOrPreserveFocus, preserveFocus);\n\t}\n\n\tclear(): void {\n\t\tthis._appender.flush();\n\t\tsuper.clear();\n\t}\n}\n\nexport class ExtHostLogFileOutputChannel extends AbstractExtHostOutputChannel {\n\n\tconstructor(name: string, file: URI, proxy: MainThreadOutputServiceShape) {\n\t\tsuper(name, true, file, proxy);\n\t}\n\n\tappend(value: string): void {\n\t\tthrow new Error('Not supported');\n\t}\n}\n\nexport class ExtHostOutputService implements ExtHostOutputServiceShape {\n\n\tprivate _proxy: MainThreadOutputServiceShape;\n\tprivate _outputDir: string;\n\tprivate _channels: Map<string, AbstractExtHostOutputChannel> = new Map<string, AbstractExtHostOutputChannel>();\n\tprivate _visibleChannelDisposable: IDisposable;\n\n\tconstructor(logsLocation: URI, mainContext: IMainContext) {\n\t\tthis._outputDir = join(logsLocation.fsPath, `output_logging_${toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '')}`);\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadOutputService);\n\t}\n\n\t$setVisibleChannel(channelId: string): void {\n\t\tif (this._visibleChannelDisposable) {\n\t\t\tthis._visibleChannelDisposable = dispose(this._visibleChannelDisposable);\n\t\t}\n\t\tif (channelId) {\n\t\t\tconst channel = this._channels.get(channelId);\n\t\t\tif (channel) {\n\t\t\t\tthis._visibleChannelDisposable = channel.onDidAppend(() => channel.update());\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateOutputChannel(name: string): vscode.OutputChannel {\n\t\tconst channel = this._createOutputChannel(name);\n\t\tchannel._id.then(id => this._channels.set(id, channel));\n\t\treturn channel;\n\t}\n\n\tprivate _createOutputChannel(name: string): AbstractExtHostOutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t} else {\n\t\t\t// Do not crash if logger cannot be created\n\t\t\ttry {\n\t\t\t\treturn new ExtHostOutputChannelBackedByFile(name, this._outputDir, this._proxy);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\treturn new ExtHostPushOutputChannel(name, this._proxy);\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateOutputChannelFromLogFile(name: string, file: URI): vscode.OutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t}\n\t\tif (!file) {\n\t\t\tthrow new Error('illegal argument `file`. must not be falsy');\n\t\t}\n\t\treturn new ExtHostLogFileOutputChannel(name, file, this._proxy);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mapArrayOrNot } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as glob from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport { getNLines } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IFilesConfiguration } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { Event } from 'vs/base/common/event';\nimport { ViewContainer, IViewContainersRegistry, Extensions as ViewContainerExtensions } from 'vs/workbench/common/views';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const VIEWLET_ID = 'workbench.view.search';\nexport const PANEL_ID = 'workbench.view.search';\nexport const VIEW_ID = 'workbench.view.search';\n/**\n * Search viewlet container.\n */\nexport const VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer(VIEWLET_ID, true);\n\nexport const ISearchService = createDecorator<ISearchService>('searchService');\n\n/**\n * A service that enables to search for files or with in files.\n */\nexport interface ISearchService {\n\t_serviceBrand: any;\n\ttextSearch(query: ITextQuery, token?: CancellationToken, onProgress?: (result: ISearchProgressItem) => void): Promise<ISearchComplete>;\n\tfileSearch(query: IFileQuery, token?: CancellationToken): Promise<ISearchComplete>;\n\tclearCache(cacheKey: string): Promise<void>;\n\tregisterSearchResultProvider(scheme: string, type: SearchProviderType, provider: ISearchResultProvider): IDisposable;\n}\n\n/**\n * TODO@roblou - split text from file search entirely, or share code in a more natural way.\n */\nexport const enum SearchProviderType {\n\tfile,\n\ttext\n}\n\nexport interface ISearchResultProvider {\n\ttextSearch(query: ITextQuery, onProgress?: (p: ISearchProgressItem) => void, token?: CancellationToken): Promise<ISearchComplete | undefined>;\n\tfileSearch(query: IFileQuery, token?: CancellationToken): Promise<ISearchComplete | undefined>;\n\tclearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface IFolderQuery<U extends UriComponents=URI> {\n\tfolder: U;\n\texcludePattern?: glob.IExpression;\n\tincludePattern?: glob.IExpression;\n\tfileEncoding?: string;\n\tdisregardIgnoreFiles?: boolean;\n\tdisregardGlobalIgnoreFiles?: boolean;\n\tignoreSymlinks?: boolean;\n}\n\nexport interface ICommonQueryProps<U extends UriComponents> {\n\t/** For telemetry - indicates what is triggering the source */\n\t_reason?: string;\n\n\tfolderQueries: IFolderQuery<U>[];\n\tincludePattern?: glob.IExpression;\n\texcludePattern?: glob.IExpression;\n\textraFileResources?: U[];\n\n\tmaxResults?: number;\n\tusingSearchPaths?: boolean;\n}\n\nexport interface IFileQueryProps<U extends UriComponents> extends ICommonQueryProps<U> {\n\ttype: QueryType.File;\n\tfilePattern?: string;\n\n\t/**\n\t * If true no results will be returned. Instead `limitHit` will indicate if at least one result exists or not.\n\t * Currently does not work with queries including a 'siblings clause'.\n\t */\n\texists?: boolean;\n\tsortByScore?: boolean;\n\tcacheKey?: string;\n}\n\nexport interface ITextQueryProps<U extends UriComponents> extends ICommonQueryProps<U> {\n\ttype: QueryType.Text;\n\tcontentPattern: IPatternInfo;\n\n\tpreviewOptions?: ITextSearchPreviewOptions;\n\tmaxFileSize?: number;\n\tusePCRE2?: boolean;\n\tafterContext?: number;\n\tbeforeContext?: number;\n\n\tuserDisabledExcludesAndIgnoreFiles?: boolean;\n}\n\nexport type IFileQuery = IFileQueryProps<URI>;\nexport type IRawFileQuery = IFileQueryProps<UriComponents>;\nexport type ITextQuery = ITextQueryProps<URI>;\nexport type IRawTextQuery = ITextQueryProps<UriComponents>;\n\nexport type IRawQuery = IRawTextQuery | IRawFileQuery;\nexport type ISearchQuery = ITextQuery | IFileQuery;\n\nexport const enum QueryType {\n\tFile = 1,\n\tText = 2\n}\n\n/* __GDPR__FRAGMENT__\n\t\"IPatternInfo\" : {\n\t\t\"pattern\" : { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isRegExp\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"isWordMatch\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"wordSeparators\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isMultiline\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"isCaseSensitive\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"isSmartCase\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t}\n*/\nexport interface IPatternInfo {\n\tpattern: string;\n\tisRegExp?: boolean;\n\tisWordMatch?: boolean;\n\twordSeparators?: string;\n\tisMultiline?: boolean;\n\tisCaseSensitive?: boolean;\n}\n\nexport interface IExtendedExtensionSearchOptions {\n\tusePCRE2?: boolean;\n}\n\nexport interface IFileMatch<U extends UriComponents = URI> {\n\tresource: U;\n\tresults?: ITextSearchResult[];\n}\n\nexport type IRawFileMatch2 = IFileMatch<UriComponents>;\n\nexport interface ITextSearchPreviewOptions {\n\tmatchLines: number;\n\tcharsPerLine: number;\n}\n\nexport interface ISearchRange {\n\treadonly startLineNumber: number;\n\treadonly startColumn: number;\n\treadonly endLineNumber: number;\n\treadonly endColumn: number;\n}\n\nexport interface ITextSearchResultPreview {\n\ttext: string;\n\tmatches: ISearchRange | ISearchRange[];\n}\n\nexport interface ITextSearchMatch {\n\turi?: URI;\n\tranges: ISearchRange | ISearchRange[];\n\tpreview: ITextSearchResultPreview;\n}\n\nexport interface ITextSearchContext {\n\turi?: URI;\n\ttext: string;\n\tlineNumber: number;\n}\n\nexport type ITextSearchResult = ITextSearchMatch | ITextSearchContext;\n\nexport function resultIsMatch(result: ITextSearchResult): result is ITextSearchMatch {\n\treturn !!(<ITextSearchMatch>result).preview;\n}\n\nexport interface IProgress {\n\ttotal?: number;\n\tworked?: number;\n\tmessage?: string;\n}\n\nexport type ISearchProgressItem = IFileMatch | IProgress;\n\nexport interface ISearchCompleteStats {\n\tlimitHit?: boolean;\n\tstats?: IFileSearchStats | ITextSearchStats;\n}\n\nexport interface ISearchComplete extends ISearchCompleteStats {\n\tresults: IFileMatch[];\n}\n\nexport interface ITextSearchStats {\n\ttype: 'textSearchProvider' | 'searchProcess';\n}\n\nexport interface IFileSearchStats {\n\tfromCache: boolean;\n\tdetailStats: ISearchEngineStats | ICachedSearchStats | IFileSearchProviderStats;\n\n\tresultCount: number;\n\ttype: 'fileSearchProvider' | 'searchProcess';\n\tsortingTime?: number;\n}\n\nexport interface ICachedSearchStats {\n\tcacheWasResolved: boolean;\n\tcacheLookupTime: number;\n\tcacheFilterTime: number;\n\tcacheEntryCount: number;\n}\n\nexport interface ISearchEngineStats {\n\tfileWalkTime: number;\n\tdirectoriesWalked: number;\n\tfilesWalked: number;\n\tcmdTime: number;\n\tcmdResultCount?: number;\n}\n\nexport interface IFileSearchProviderStats {\n\tproviderTime: number;\n\tpostProcessTime: number;\n}\n\nexport class FileMatch implements IFileMatch {\n\tresults: ITextSearchResult[] = [];\n\tconstructor(public resource: URI) {\n\t\t// empty\n\t}\n}\n\nexport class TextSearchMatch implements ITextSearchMatch {\n\tranges: ISearchRange | ISearchRange[];\n\tpreview: ITextSearchResultPreview;\n\n\tconstructor(text: string, range: ISearchRange | ISearchRange[], previewOptions?: ITextSearchPreviewOptions) {\n\t\tthis.ranges = range;\n\n\t\tif (previewOptions && previewOptions.matchLines === 1 && !Array.isArray(range)) {\n\t\t\t// 1 line preview requested\n\t\t\ttext = getNLines(text, previewOptions.matchLines);\n\t\t\tconst leadingChars = Math.floor(previewOptions.charsPerLine / 5);\n\t\t\tconst previewStart = Math.max(range.startColumn - leadingChars, 0);\n\t\t\tconst previewText = text.substring(previewStart, previewOptions.charsPerLine + previewStart);\n\n\t\t\tconst endColInPreview = (range.endLineNumber - range.startLineNumber + 1) <= previewOptions.matchLines ?\n\t\t\t\tMath.min(previewText.length, range.endColumn - previewStart) :  // if number of match lines will not be trimmed by previewOptions\n\t\t\t\tpreviewText.length; // if number of lines is trimmed\n\n\t\t\tthis.preview = {\n\t\t\t\ttext: previewText,\n\t\t\t\tmatches: new OneLineRange(0, range.startColumn - previewStart, endColInPreview)\n\t\t\t};\n\t\t} else {\n\t\t\tconst firstMatchLine = Array.isArray(range) ? range[0].startLineNumber : range.startLineNumber;\n\n\t\t\t// n line, no preview requested, or multiple matches in the preview\n\t\t\tthis.preview = {\n\t\t\t\ttext,\n\t\t\t\tmatches: mapArrayOrNot(range, r => new SearchRange(r.startLineNumber - firstMatchLine, r.startColumn, r.endLineNumber - firstMatchLine, r.endColumn))\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport class SearchRange implements ISearchRange {\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.startColumn = startColumn;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.endColumn = endColumn;\n\t}\n}\n\nexport class OneLineRange extends SearchRange {\n\tconstructor(lineNumber: number, startColumn: number, endColumn: number) {\n\t\tsuper(lineNumber, startColumn, lineNumber, endColumn);\n\t}\n}\n\nexport interface ISearchConfigurationProperties {\n\texclude: glob.IExpression;\n\tuseRipgrep: boolean;\n\t/**\n\t * Use ignore file for file search.\n\t */\n\tuseIgnoreFiles: boolean;\n\tuseGlobalIgnoreFiles: boolean;\n\tfollowSymlinks: boolean;\n\tsmartCase: boolean;\n\tglobalFindClipboard: boolean;\n\tlocation: 'sidebar' | 'panel';\n\tuseReplacePreview: boolean;\n\tshowLineNumbers: boolean;\n\tusePCRE2: boolean;\n\tactionsPosition: 'auto' | 'right';\n\tmaintainFileSearchCache: boolean;\n\tcollapseResults: 'auto' | 'alwaysCollapse' | 'alwaysExpand';\n}\n\nexport interface ISearchConfiguration extends IFilesConfiguration {\n\tsearch: ISearchConfigurationProperties;\n\teditor: {\n\t\twordSeparators: string;\n\t};\n}\n\nexport function getExcludes(configuration: ISearchConfiguration, includeSearchExcludes = true): glob.IExpression | undefined {\n\tconst fileExcludes = configuration && configuration.files && configuration.files.exclude;\n\tconst searchExcludes = includeSearchExcludes && configuration && configuration.search && configuration.search.exclude;\n\n\tif (!fileExcludes && !searchExcludes) {\n\t\treturn undefined;\n\t}\n\n\tif (!fileExcludes || !searchExcludes) {\n\t\treturn fileExcludes || searchExcludes;\n\t}\n\n\tlet allExcludes: glob.IExpression = Object.create(null);\n\t// clone the config as it could be frozen\n\tallExcludes = objects.mixin(allExcludes, objects.deepClone(fileExcludes));\n\tallExcludes = objects.mixin(allExcludes, objects.deepClone(searchExcludes), true);\n\n\treturn allExcludes;\n}\n\nexport function pathIncludedInQuery(queryProps: ICommonQueryProps<URI>, fsPath: string): boolean {\n\tif (queryProps.excludePattern && glob.match(queryProps.excludePattern, fsPath)) {\n\t\treturn false;\n\t}\n\n\tif (queryProps.includePattern && !glob.match(queryProps.includePattern, fsPath)) {\n\t\treturn false;\n\t}\n\n\t// If searchPaths are being used, the extra file must be in a subfolder and match the pattern, if present\n\tif (queryProps.usingSearchPaths) {\n\t\treturn !!queryProps.folderQueries && queryProps.folderQueries.every(fq => {\n\t\t\tconst searchPath = fq.folder.fsPath;\n\t\t\tif (extpath.isEqualOrParent(fsPath, searchPath)) {\n\t\t\t\treturn !fq.includePattern || !!glob.match(fq.includePattern, fsPath);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn true;\n}\n\nexport enum SearchErrorCode {\n\tunknownEncoding = 1,\n\tregexParseError,\n\tglobParseError,\n\tinvalidLiteral,\n\trgProcessError,\n\tother\n}\n\nexport class SearchError extends Error {\n\tconstructor(message: string, readonly code?: SearchErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function deserializeSearchError(errorMsg: string): SearchError {\n\ttry {\n\t\tconst details = JSON.parse(errorMsg);\n\t\treturn new SearchError(details.message, details.code);\n\t} catch (e) {\n\t\treturn new SearchError(errorMsg, SearchErrorCode.other);\n\t}\n}\n\nexport function serializeSearchError(searchError: SearchError): Error {\n\tconst details = { message: searchError.message, code: searchError.code };\n\treturn new Error(JSON.stringify(details));\n}\nexport interface ITelemetryEvent {\n\teventName: string;\n\tdata: ITelemetryData;\n}\n\nexport interface IRawSearchService {\n\tfileSearch(search: IRawFileQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete>;\n\ttextSearch(search: IRawTextQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete>;\n\tclearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface IRawFileMatch {\n\tbase?: string;\n\trelativePath: string;\n\tbasename: string;\n\tsize?: number;\n}\n\nexport interface ISearchEngine<T> {\n\tsearch: (onResult: (matches: T) => void, onProgress: (progress: IProgress) => void, done: (error: Error | null, complete: ISearchEngineSuccess) => void) => void;\n\tcancel: () => void;\n}\n\nexport interface ISerializedSearchSuccess {\n\ttype: 'success';\n\tlimitHit: boolean;\n\tstats: IFileSearchStats | ITextSearchStats | null;\n}\n\nexport interface ISearchEngineSuccess {\n\tlimitHit: boolean;\n\tstats: ISearchEngineStats;\n}\n\nexport interface ISerializedSearchError {\n\ttype: 'error';\n\terror: {\n\t\tmessage: string,\n\t\tstack: string\n\t};\n}\n\nexport type ISerializedSearchComplete = ISerializedSearchSuccess | ISerializedSearchError;\n\nexport function isSerializedSearchComplete(arg: ISerializedSearchProgressItem | ISerializedSearchComplete): arg is ISerializedSearchComplete {\n\tif ((arg as any).type === 'error') {\n\t\treturn true;\n\t} else if ((arg as any).type === 'success') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport function isSerializedSearchSuccess(arg: ISerializedSearchComplete): arg is ISerializedSearchSuccess {\n\treturn arg.type === 'success';\n}\n\nexport function isSerializedFileMatch(arg: ISerializedSearchProgressItem): arg is ISerializedFileMatch {\n\treturn !!(<ISerializedFileMatch>arg).path;\n}\n\nexport interface ISerializedFileMatch {\n\tpath?: string;\n\tresults?: ITextSearchResult[];\n\tnumMatches?: number;\n}\n\n// Type of the possible values for progress calls from the engine\nexport type ISerializedSearchProgressItem = ISerializedFileMatch | ISerializedFileMatch[] | IProgress;\nexport type IFileSearchProgressItem = IRawFileMatch | IRawFileMatch[] | IProgress;\n\n\nexport class SerializableFileMatch implements ISerializedFileMatch {\n\tpath: string;\n\tresults: ITextSearchMatch[];\n\n\tconstructor(path: string) {\n\t\tthis.path = path;\n\t\tthis.results = [];\n\t}\n\n\taddMatch(match: ITextSearchMatch): void {\n\t\tthis.results.push(match);\n\t}\n\n\tserialize(): ISerializedFileMatch {\n\t\treturn {\n\t\t\tpath: this.path,\n\t\t\tresults: this.results,\n\t\t\tnumMatches: this.results.length\n\t\t};\n\t}\n}\n\n/**\n *  Computes the patterns that the provider handles. Discards sibling clauses and 'false' patterns\n */\nexport function resolvePatternsForProvider(globalPattern: glob.IExpression | undefined, folderPattern: glob.IExpression | undefined): string[] {\n\tconst merged = {\n\t\t...(globalPattern || {}),\n\t\t...(folderPattern || {})\n\t};\n\n\treturn Object.keys(merged)\n\t\t.filter(key => {\n\t\t\tconst value = merged[key];\n\t\t\treturn typeof value === 'boolean' && value;\n\t\t});\n}\n\nexport class QueryGlobTester {\n\n\tprivate _excludeExpression: glob.IExpression;\n\tprivate _parsedExcludeExpression: glob.ParsedExpression;\n\n\tprivate _parsedIncludeExpression: glob.ParsedExpression;\n\n\tconstructor(config: ISearchQuery, folderQuery: IFolderQuery) {\n\t\tthis._excludeExpression = {\n\t\t\t...(config.excludePattern || {}),\n\t\t\t...(folderQuery.excludePattern || {})\n\t\t};\n\t\tthis._parsedExcludeExpression = glob.parse(this._excludeExpression);\n\n\t\t// Empty includeExpression means include nothing, so no {} shortcuts\n\t\tlet includeExpression: glob.IExpression | undefined = config.includePattern;\n\t\tif (folderQuery.includePattern) {\n\t\t\tif (includeExpression) {\n\t\t\t\tincludeExpression = {\n\t\t\t\t\t...includeExpression,\n\t\t\t\t\t...folderQuery.includePattern\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tincludeExpression = folderQuery.includePattern;\n\t\t\t}\n\t\t}\n\n\t\tif (includeExpression) {\n\t\t\tthis._parsedIncludeExpression = glob.parse(includeExpression);\n\t\t}\n\t}\n\n\t/**\n\t * Guaranteed sync - siblingsFn should not return a promise.\n\t */\n\tincludedInQuerySync(testPath: string, basename?: string, hasSibling?: (name: string) => boolean): boolean {\n\t\tif (this._parsedExcludeExpression && this._parsedExcludeExpression(testPath, basename, hasSibling)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._parsedIncludeExpression && !this._parsedIncludeExpression(testPath, basename, hasSibling)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Guaranteed async.\n\t */\n\tincludedInQuery(testPath: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): Promise<boolean> {\n\t\tconst excludeP = this._parsedExcludeExpression ?\n\t\t\tPromise.resolve(this._parsedExcludeExpression(testPath, basename, hasSibling)).then(result => !!result) :\n\t\t\tPromise.resolve(false);\n\n\t\treturn excludeP.then(excluded => {\n\t\t\tif (excluded) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this._parsedIncludeExpression ?\n\t\t\t\tPromise.resolve(this._parsedIncludeExpression(testPath, basename, hasSibling)).then(result => !!result) :\n\t\t\t\tPromise.resolve(true);\n\t\t}).then(included => {\n\t\t\treturn included;\n\t\t});\n\t}\n\n\thasSiblingExcludeClauses(): boolean {\n\t\treturn hasSiblingClauses(this._excludeExpression);\n\t}\n}\n\nfunction hasSiblingClauses(pattern: glob.IExpression): boolean {\n\tfor (const key in pattern) {\n\t\tif (typeof pattern[key] !== 'boolean') {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { delta as arrayDelta, mapArrayOrNot } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Counter } from 'vs/base/common/numbers';\nimport { isLinux } from 'vs/base/common/platform';\nimport { basenameOrAuthority, dirname, isEqual, relativePath } from 'vs/base/common/resources';\nimport { compare } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Severity } from 'vs/platform/notification/common/notification';\nimport { IRawFileMatch2, resultIsMatch } from 'vs/workbench/services/search/common/search';\nimport { Workspace, WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { Range, RelativePattern } from 'vs/workbench/api/node/extHostTypes';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport * as vscode from 'vscode';\nimport { ExtHostWorkspaceShape, IWorkspaceData, MainThreadMessageServiceShape, MainThreadWorkspaceShape, IMainContext, MainContext, IStaticWorkspaceData } from './extHost.protocol';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { Barrier } from 'vs/base/common/async';\n\nexport interface IExtHostWorkspaceProvider {\n\tgetWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined>;\n\tresolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined>;\n\tgetWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nfunction isFolderEqual(folderA: URI, folderB: URI): boolean {\n\treturn isEqual(folderA, folderB, !isLinux);\n}\n\nfunction compareWorkspaceFolderByUri(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder): number {\n\treturn isFolderEqual(a.uri, b.uri) ? 0 : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction compareWorkspaceFolderByUriAndNameAndIndex(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder): number {\n\tif (a.index !== b.index) {\n\t\treturn a.index < b.index ? -1 : 1;\n\t}\n\n\treturn isFolderEqual(a.uri, b.uri) ? compare(a.name, b.name) : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction delta(oldFolders: vscode.WorkspaceFolder[], newFolders: vscode.WorkspaceFolder[], compare: (a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder) => number): { removed: vscode.WorkspaceFolder[], added: vscode.WorkspaceFolder[] } {\n\tconst oldSortedFolders = oldFolders.slice(0).sort(compare);\n\tconst newSortedFolders = newFolders.slice(0).sort(compare);\n\n\treturn arrayDelta(oldSortedFolders, newSortedFolders, compare);\n}\n\ninterface MutableWorkspaceFolder extends vscode.WorkspaceFolder {\n\tname: string;\n\tindex: number;\n}\n\nclass ExtHostWorkspaceImpl extends Workspace {\n\n\tstatic toExtHostWorkspace(data: IWorkspaceData | null, previousConfirmedWorkspace?: ExtHostWorkspaceImpl, previousUnconfirmedWorkspace?: ExtHostWorkspaceImpl): { workspace: ExtHostWorkspaceImpl | null, added: vscode.WorkspaceFolder[], removed: vscode.WorkspaceFolder[] } {\n\t\tif (!data) {\n\t\t\treturn { workspace: null, added: [], removed: [] };\n\t\t}\n\n\t\tconst { id, name, folders } = data;\n\t\tconst newWorkspaceFolders: vscode.WorkspaceFolder[] = [];\n\n\t\t// If we have an existing workspace, we try to find the folders that match our\n\t\t// data and update their properties. It could be that an extension stored them\n\t\t// for later use and we want to keep them \"live\" if they are still present.\n\t\tconst oldWorkspace = previousConfirmedWorkspace;\n\t\tif (previousConfirmedWorkspace) {\n\t\t\tfolders.forEach((folderData, index) => {\n\t\t\t\tconst folderUri = URI.revive(folderData.uri);\n\t\t\t\tconst existingFolder = ExtHostWorkspaceImpl._findFolder(previousUnconfirmedWorkspace || previousConfirmedWorkspace, folderUri);\n\n\t\t\t\tif (existingFolder) {\n\t\t\t\t\texistingFolder.name = folderData.name;\n\t\t\t\t\texistingFolder.index = folderData.index;\n\n\t\t\t\t\tnewWorkspaceFolders.push(existingFolder);\n\t\t\t\t} else {\n\t\t\t\t\tnewWorkspaceFolders.push({ uri: folderUri, name: folderData.name, index });\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewWorkspaceFolders.push(...folders.map(({ uri, name, index }) => ({ uri: URI.revive(uri), name, index })));\n\t\t}\n\n\t\t// make sure to restore sort order based on index\n\t\tnewWorkspaceFolders.sort((f1, f2) => f1.index < f2.index ? -1 : 1);\n\n\t\tconst workspace = new ExtHostWorkspaceImpl(id, name, newWorkspaceFolders);\n\t\tconst { added, removed } = delta(oldWorkspace ? oldWorkspace.workspaceFolders : [], workspace.workspaceFolders, compareWorkspaceFolderByUri);\n\n\t\treturn { workspace, added, removed };\n\t}\n\n\tprivate static _findFolder(workspace: ExtHostWorkspaceImpl, folderUriToFind: URI): MutableWorkspaceFolder | undefined {\n\t\tfor (let i = 0; i < workspace.folders.length; i++) {\n\t\t\tconst folder = workspace.workspaceFolders[i];\n\t\t\tif (isFolderEqual(folder.uri, folderUriToFind)) {\n\t\t\t\treturn folder;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _workspaceFolders: vscode.WorkspaceFolder[] = [];\n\tprivate readonly _structure = TernarySearchTree.forPaths<vscode.WorkspaceFolder>();\n\n\tconstructor(id: string, private _name: string, folders: vscode.WorkspaceFolder[]) {\n\t\tsuper(id, folders.map(f => new WorkspaceFolder(f)));\n\n\t\t// setup the workspace folder data structure\n\t\tfolders.forEach(folder => {\n\t\t\tthis._workspaceFolders.push(folder);\n\t\t\tthis._structure.set(folder.uri.toString(), folder);\n\t\t});\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tget workspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn this._workspaceFolders.slice(0);\n\t}\n\n\tgetWorkspaceFolder(uri: URI, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (resolveParent && this._structure.get(uri.toString())) {\n\t\t\t// `uri` is a workspace folder so we check for its parent\n\t\t\turi = dirname(uri);\n\t\t}\n\t\treturn this._structure.findSubstr(uri.toString());\n\t}\n\n\tresolveWorkspaceFolder(uri: URI): vscode.WorkspaceFolder | undefined {\n\t\treturn this._structure.get(uri.toString());\n\t}\n}\n\nexport class ExtHostWorkspace implements ExtHostWorkspaceShape, IExtHostWorkspaceProvider {\n\n\tprivate readonly _onDidChangeWorkspace = new Emitter<vscode.WorkspaceFoldersChangeEvent>();\n\treadonly onDidChangeWorkspace: Event<vscode.WorkspaceFoldersChangeEvent> = this._onDidChangeWorkspace.event;\n\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _requestIdProvider: Counter;\n\tprivate readonly _barrier: Barrier;\n\n\tprivate _confirmedWorkspace?: ExtHostWorkspaceImpl;\n\tprivate _unconfirmedWorkspace?: ExtHostWorkspaceImpl;\n\n\tprivate readonly _proxy: MainThreadWorkspaceShape;\n\tprivate readonly _messageService: MainThreadMessageServiceShape;\n\n\tprivate readonly _activeSearchCallbacks: ((match: IRawFileMatch2) => any)[] = [];\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tlogService: ILogService,\n\t\trequestIdProvider: Counter,\n\t\tdata?: IStaticWorkspaceData\n\t) {\n\t\tthis._logService = logService;\n\t\tthis._requestIdProvider = requestIdProvider;\n\t\tthis._barrier = new Barrier();\n\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadWorkspace);\n\t\tthis._messageService = mainContext.getProxy(MainContext.MainThreadMessageService);\n\t\tthis._confirmedWorkspace = data ? new ExtHostWorkspaceImpl(data.id, data.name, []) : undefined;\n\t}\n\n\t$initializeWorkspace(data: IWorkspaceData): void {\n\t\tthis.$acceptWorkspaceData(data);\n\t\tthis._barrier.open();\n\t}\n\n\twaitForInitializeCall(): Promise<boolean> {\n\t\treturn this._barrier.wait();\n\t}\n\n\t// --- workspace ---\n\n\tget workspace(): Workspace | undefined {\n\t\treturn this._actualWorkspace;\n\t}\n\n\tget name(): string | undefined {\n\t\treturn this._actualWorkspace ? this._actualWorkspace.name : undefined;\n\t}\n\n\tprivate get _actualWorkspace(): ExtHostWorkspaceImpl | undefined {\n\t\treturn this._unconfirmedWorkspace || this._confirmedWorkspace;\n\t}\n\n\tgetWorkspaceFolders(): vscode.WorkspaceFolder[] | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tasync getWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tupdateWorkspaceFolders(extension: IExtensionDescription, index: number, deleteCount: number, ...workspaceFoldersToAdd: { uri: vscode.Uri, name?: string }[]): boolean {\n\t\tconst validatedDistinctWorkspaceFoldersToAdd: { uri: vscode.Uri, name?: string }[] = [];\n\t\tif (Array.isArray(workspaceFoldersToAdd)) {\n\t\t\tworkspaceFoldersToAdd.forEach(folderToAdd => {\n\t\t\t\tif (URI.isUri(folderToAdd.uri) && !validatedDistinctWorkspaceFoldersToAdd.some(f => isFolderEqual(f.uri, folderToAdd.uri))) {\n\t\t\t\t\tvalidatedDistinctWorkspaceFoldersToAdd.push({ uri: folderToAdd.uri, name: folderToAdd.name || basenameOrAuthority(folderToAdd.uri) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (!!this._unconfirmedWorkspace) {\n\t\t\treturn false; // prevent accumulated calls without a confirmed workspace\n\t\t}\n\n\t\tif ([index, deleteCount].some(i => typeof i !== 'number' || i < 0)) {\n\t\t\treturn false; // validate numbers\n\t\t}\n\n\t\tif (deleteCount === 0 && validatedDistinctWorkspaceFoldersToAdd.length === 0) {\n\t\t\treturn false; // nothing to delete or add\n\t\t}\n\n\t\tconst currentWorkspaceFolders: MutableWorkspaceFolder[] = this._actualWorkspace ? this._actualWorkspace.workspaceFolders : [];\n\t\tif (index + deleteCount > currentWorkspaceFolders.length) {\n\t\t\treturn false; // cannot delete more than we have\n\t\t}\n\n\t\t// Simulate the updateWorkspaceFolders method on our data to do more validation\n\t\tconst newWorkspaceFolders = currentWorkspaceFolders.slice(0);\n\t\tnewWorkspaceFolders.splice(index, deleteCount, ...validatedDistinctWorkspaceFoldersToAdd.map(f => ({ uri: f.uri, name: f.name || basenameOrAuthority(f.uri), index: undefined! /* fixed later */ })));\n\n\t\tfor (let i = 0; i < newWorkspaceFolders.length; i++) {\n\t\t\tconst folder = newWorkspaceFolders[i];\n\t\t\tif (newWorkspaceFolders.some((otherFolder, index) => index !== i && isFolderEqual(folder.uri, otherFolder.uri))) {\n\t\t\t\treturn false; // cannot add the same folder multiple times\n\t\t\t}\n\t\t}\n\n\t\tnewWorkspaceFolders.forEach((f, index) => f.index = index); // fix index\n\t\tconst { added, removed } = delta(currentWorkspaceFolders, newWorkspaceFolders, compareWorkspaceFolderByUriAndNameAndIndex);\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false; // nothing actually changed\n\t\t}\n\n\t\t// Trigger on main side\n\t\tif (this._proxy) {\n\t\t\tconst extName = extension.displayName || extension.name;\n\t\t\tthis._proxy.$updateWorkspaceFolders(extName, index, deleteCount, validatedDistinctWorkspaceFoldersToAdd).then(undefined, error => {\n\n\t\t\t\t// in case of an error, make sure to clear out the unconfirmed workspace\n\t\t\t\t// because we cannot expect the acknowledgement from the main side for this\n\t\t\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t\t\t// show error to user\n\t\t\t\tthis._messageService.$showMessage(Severity.Error, localize('updateerror', \"Extension '{0}' failed to update workspace folders: {1}\", extName, error), { extension }, []);\n\t\t\t});\n\t\t}\n\n\t\t// Try to accept directly\n\t\tthis.trySetWorkspaceFolders(newWorkspaceFolders);\n\n\t\treturn true;\n\t}\n\n\tgetWorkspaceFolder(uri: vscode.Uri, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync getWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync resolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.resolveWorkspaceFolder(uri);\n\t}\n\n\tgetPath(): string | undefined {\n\n\t\t// this is legacy from the days before having\n\t\t// multi-root and we keep it only alive if there\n\t\t// is just one workspace folder.\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { folders } = this._actualWorkspace;\n\t\tif (folders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// #54483 @Joh Why are we still using fsPath?\n\t\treturn folders[0].uri.fsPath;\n\t}\n\n\tgetRelativePath(pathOrUri: string | vscode.Uri, includeWorkspace?: boolean): string {\n\n\t\tlet resource: URI | undefined;\n\t\tlet path: string = '';\n\t\tif (typeof pathOrUri === 'string') {\n\t\t\tresource = URI.file(pathOrUri);\n\t\t\tpath = pathOrUri;\n\t\t} else if (typeof pathOrUri !== 'undefined') {\n\t\t\tresource = pathOrUri;\n\t\t\tpath = pathOrUri.fsPath;\n\t\t}\n\n\t\tif (!resource) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst folder = this.getWorkspaceFolder(\n\t\t\tresource,\n\t\t\ttrue\n\t\t);\n\n\t\tif (!folder) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (typeof includeWorkspace === 'undefined' && this._actualWorkspace) {\n\t\t\tincludeWorkspace = this._actualWorkspace.folders.length > 1;\n\t\t}\n\n\t\tlet result = relativePath(folder.uri, resource);\n\t\tif (includeWorkspace && folder.name) {\n\t\t\tresult = `${folder.name}/${result}`;\n\t\t}\n\t\treturn result!;\n\t}\n\n\tprivate trySetWorkspaceFolders(folders: vscode.WorkspaceFolder[]): void {\n\n\t\t// Update directly here. The workspace is unconfirmed as long as we did not get an\n\t\t// acknowledgement from the main side (via $acceptWorkspaceData)\n\t\tif (this._actualWorkspace) {\n\t\t\tthis._unconfirmedWorkspace = ExtHostWorkspaceImpl.toExtHostWorkspace({\n\t\t\t\tid: this._actualWorkspace.id,\n\t\t\t\tname: this._actualWorkspace.name,\n\t\t\t\tconfiguration: this._actualWorkspace.configuration,\n\t\t\t\tfolders\n\t\t\t} as IWorkspaceData, this._actualWorkspace).workspace || undefined;\n\t\t}\n\t}\n\n\t$acceptWorkspaceData(data: IWorkspaceData): void {\n\n\t\tconst { workspace, added, removed } = ExtHostWorkspaceImpl.toExtHostWorkspace(data, this._confirmedWorkspace, this._unconfirmedWorkspace);\n\n\t\t// Update our workspace object. We have a confirmed workspace, so we drop our\n\t\t// unconfirmed workspace.\n\t\tthis._confirmedWorkspace = workspace || undefined;\n\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t// Events\n\t\tthis._onDidChangeWorkspace.fire(Object.freeze({\n\t\t\tadded,\n\t\t\tremoved,\n\t\t}));\n\t}\n\n\t// --- search ---\n\n\tfindFiles(include: string | RelativePattern | undefined | null, exclude: vscode.GlobPattern | undefined | null, maxResults: number | undefined, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(`extHostWorkspace#findFiles: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles`);\n\n\t\tlet includePattern: string | undefined;\n\t\tlet includeFolder: URI | undefined;\n\t\tif (include) {\n\t\t\tif (typeof include === 'string') {\n\t\t\t\tincludePattern = include;\n\t\t\t} else {\n\t\t\t\tincludePattern = include.pattern;\n\n\t\t\t\t// include.base must be an absolute path\n\t\t\t\tincludeFolder = include.baseFolder || URI.file(include.base);\n\t\t\t}\n\t\t}\n\n\t\tlet excludePatternOrDisregardExcludes: string | false | undefined = undefined;\n\t\tif (exclude === null) {\n\t\t\texcludePatternOrDisregardExcludes = false;\n\t\t} else if (exclude) {\n\t\t\tif (typeof exclude === 'string') {\n\t\t\t\texcludePatternOrDisregardExcludes = exclude;\n\t\t\t} else {\n\t\t\t\texcludePatternOrDisregardExcludes = exclude.pattern;\n\t\t\t}\n\t\t}\n\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this._proxy.$startFileSearch(includePattern, includeFolder, excludePatternOrDisregardExcludes, maxResults, token)\n\t\t\t.then(data => Array.isArray(data) ? data.map(URI.revive) : []);\n\t}\n\n\tfindTextInFiles(query: vscode.TextSearchQuery, options: vscode.FindTextInFilesOptions, callback: (result: vscode.TextSearchResult) => void, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.TextSearchComplete | undefined> {\n\t\tthis._logService.trace(`extHostWorkspace#findTextInFiles: textSearch, extension: ${extensionId.value}, entryPoint: findTextInFiles`);\n\n\t\tconst requestId = this._requestIdProvider.getNext();\n\n\t\tconst globPatternToString = (pattern: vscode.GlobPattern | string) => {\n\t\t\tif (typeof pattern === 'string') {\n\t\t\t\treturn pattern;\n\t\t\t}\n\n\t\t\treturn join(pattern.base, pattern.pattern);\n\t\t};\n\n\t\tconst previewOptions: vscode.TextSearchPreviewOptions = typeof options.previewOptions === 'undefined' ?\n\t\t\t{\n\t\t\t\tmatchLines: 100,\n\t\t\t\tcharsPerLine: 10000\n\t\t\t} :\n\t\t\toptions.previewOptions;\n\n\t\tconst queryOptions: ITextQueryBuilderOptions = {\n\t\t\tignoreSymlinks: typeof options.followSymlinks === 'boolean' ? !options.followSymlinks : undefined,\n\t\t\tdisregardIgnoreFiles: typeof options.useIgnoreFiles === 'boolean' ? !options.useIgnoreFiles : undefined,\n\t\t\tdisregardGlobalIgnoreFiles: typeof options.useGlobalIgnoreFiles === 'boolean' ? !options.useGlobalIgnoreFiles : undefined,\n\t\t\tdisregardExcludeSettings: options.exclude === null,\n\t\t\tfileEncoding: options.encoding,\n\t\t\tmaxResults: options.maxResults,\n\t\t\tpreviewOptions,\n\t\t\tafterContext: options.afterContext,\n\t\t\tbeforeContext: options.beforeContext,\n\n\t\t\tincludePattern: options.include && globPatternToString(options.include),\n\t\t\texcludePattern: options.exclude ? globPatternToString(options.exclude) : undefined\n\t\t};\n\n\t\tconst isCanceled = false;\n\n\t\tthis._activeSearchCallbacks[requestId] = p => {\n\t\t\tif (isCanceled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst uri = URI.revive(p.resource);\n\t\t\tp.results!.forEach(result => {\n\t\t\t\tif (resultIsMatch(result)) {\n\t\t\t\t\tcallback(<vscode.TextSearchMatch>{\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tpreview: {\n\t\t\t\t\t\t\ttext: result.preview.text,\n\t\t\t\t\t\t\tmatches: mapArrayOrNot(\n\t\t\t\t\t\t\t\tresult.preview.matches,\n\t\t\t\t\t\t\t\tm => new Range(m.startLineNumber, m.startColumn, m.endLineNumber, m.endColumn))\n\t\t\t\t\t\t},\n\t\t\t\t\t\tranges: mapArrayOrNot(\n\t\t\t\t\t\t\tresult.ranges,\n\t\t\t\t\t\t\tr => new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn))\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcallback(<vscode.TextSearchContext>{\n\t\t\t\t\t\turi,\n\t\t\t\t\t\ttext: result.text,\n\t\t\t\t\t\tlineNumber: result.lineNumber\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._proxy.$startTextSearch(query, queryOptions, requestId, token).then(result => {\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\treturn result;\n\t\t}, err => {\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\t$handleTextSearchResult(result: IRawFileMatch2, requestId: number): void {\n\t\tif (this._activeSearchCallbacks[requestId]) {\n\t\t\tthis._activeSearchCallbacks[requestId](result);\n\t\t}\n\t}\n\n\tsaveAll(includeUntitled?: boolean): Promise<boolean> {\n\t\treturn this._proxy.$saveAll(includeUntitled);\n\t}\n\n\tresolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this._proxy.$resolveProxy(url);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport * as glob from 'vs/base/common/glob';\nimport * as resources from 'vs/base/common/resources';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileMatch, IFileSearchProviderStats, IFolderQuery, ISearchCompleteStats, IFileQuery, QueryGlobTester, resolvePatternsForProvider } from 'vs/workbench/services/search/common/search';\nimport * as vscode from 'vscode';\n\nexport interface IInternalFileMatch {\n\tbase: URI;\n\toriginal?: URI;\n\trelativePath?: string; // Not present for extraFiles or absolute path matches\n\tbasename: string;\n\tsize?: number;\n}\n\nexport interface IDirectoryEntry {\n\tbase: URI;\n\trelativePath: string;\n\tbasename: string;\n}\n\nexport interface IDirectoryTree {\n\trootEntries: IDirectoryEntry[];\n\tpathToEntries: { [relativePath: string]: IDirectoryEntry[] };\n}\n\nclass FileSearchEngine {\n\tprivate filePattern?: string;\n\tprivate includePattern?: glob.ParsedExpression;\n\tprivate maxResults?: number;\n\tprivate exists?: boolean;\n\tprivate isLimitHit = false;\n\tprivate resultCount = 0;\n\tprivate isCanceled = false;\n\n\tprivate activeCancellationTokens: Set<CancellationTokenSource>;\n\n\tprivate globalExcludePattern?: glob.ParsedExpression;\n\n\tconstructor(private config: IFileQuery, private provider: vscode.FileSearchProvider, private sessionToken?: CancellationToken) {\n\t\tthis.filePattern = config.filePattern;\n\t\tthis.includePattern = config.includePattern && glob.parse(config.includePattern);\n\t\tthis.maxResults = config.maxResults || undefined;\n\t\tthis.exists = config.exists;\n\t\tthis.activeCancellationTokens = new Set<CancellationTokenSource>();\n\n\t\tthis.globalExcludePattern = config.excludePattern && glob.parse(config.excludePattern);\n\t}\n\n\tcancel(): void {\n\t\tthis.isCanceled = true;\n\t\tthis.activeCancellationTokens.forEach(t => t.cancel());\n\t\tthis.activeCancellationTokens = new Set();\n\t}\n\n\tsearch(_onResult: (match: IInternalFileMatch) => void): Promise<IInternalSearchComplete> {\n\t\tconst folderQueries = this.config.folderQueries || [];\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst onResult = (match: IInternalFileMatch) => {\n\t\t\t\tthis.resultCount++;\n\t\t\t\t_onResult(match);\n\t\t\t};\n\n\t\t\t// Support that the file pattern is a full path to a file that exists\n\t\t\tif (this.isCanceled) {\n\t\t\t\treturn resolve({ limitHit: this.isLimitHit });\n\t\t\t}\n\n\t\t\t// For each extra file\n\t\t\tif (this.config.extraFileResources) {\n\t\t\t\tthis.config.extraFileResources\n\t\t\t\t\t.forEach(extraFile => {\n\t\t\t\t\t\tconst extraFileStr = extraFile.toString(); // ?\n\t\t\t\t\t\tconst basename = path.basename(extraFileStr);\n\t\t\t\t\t\tif (this.globalExcludePattern && this.globalExcludePattern(extraFileStr, basename)) {\n\t\t\t\t\t\t\treturn; // excluded\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File: Check for match on file pattern and include pattern\n\t\t\t\t\t\tthis.matchFile(onResult, { base: extraFile, basename });\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t// For each root folder\n\t\t\tPromise.all(folderQueries.map(fq => {\n\t\t\t\treturn this.searchInFolder(fq, onResult);\n\t\t\t})).then(stats => {\n\t\t\t\tresolve({\n\t\t\t\t\tlimitHit: this.isLimitHit,\n\t\t\t\t\tstats: stats[0] || undefined // Only looking at single-folder workspace stats...\n\t\t\t\t});\n\t\t\t}, (err: Error) => {\n\t\t\t\treject(new Error(toErrorMessage(err)));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate searchInFolder(fq: IFolderQuery<URI>, onResult: (match: IInternalFileMatch) => void): Promise<IFileSearchProviderStats | null> {\n\t\tconst cancellation = new CancellationTokenSource();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst options = this.getSearchOptionsForFolder(fq);\n\t\t\tconst tree = this.initDirectoryTree();\n\n\t\t\tconst queryTester = new QueryGlobTester(this.config, fq);\n\t\t\tconst noSiblingsClauses = !queryTester.hasSiblingExcludeClauses();\n\n\t\t\tlet providerSW: StopWatch;\n\t\t\tnew Promise(_resolve => process.nextTick(_resolve))\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.activeCancellationTokens.add(cancellation);\n\n\t\t\t\t\tproviderSW = StopWatch.create();\n\t\t\t\t\treturn this.provider.provideFileSearchResults(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: this.config.filePattern || ''\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tcancellation.token);\n\t\t\t\t})\n\t\t\t\t.then(results => {\n\t\t\t\t\tconst providerTime = providerSW.elapsed();\n\t\t\t\t\tconst postProcessSW = StopWatch.create();\n\n\t\t\t\t\tif (this.isCanceled && !this.isLimitHit) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (results) {\n\t\t\t\t\t\tresults.forEach(result => {\n\t\t\t\t\t\t\tconst relativePath = path.relative(fq.folder.fsPath, result.fsPath);\n\n\t\t\t\t\t\t\tif (noSiblingsClauses) {\n\t\t\t\t\t\t\t\tconst basename = path.basename(result.fsPath);\n\t\t\t\t\t\t\t\tthis.matchFile(onResult, { base: fq.folder, relativePath, basename });\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// TODO: Optimize siblings clauses with ripgrep here.\n\t\t\t\t\t\t\tthis.addDirectoryEntries(tree, fq.folder, relativePath, onResult);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.activeCancellationTokens.delete(cancellation);\n\t\t\t\t\tif (this.isCanceled && !this.isLimitHit) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.matchDirectoryTree(tree, queryTester, onResult);\n\t\t\t\t\treturn <IFileSearchProviderStats>{\n\t\t\t\t\t\tproviderTime,\n\t\t\t\t\t\tpostProcessTime: postProcessSW.elapsed()\n\t\t\t\t\t};\n\t\t\t\t}).then(\n\t\t\t\t\tstats => {\n\t\t\t\t\t\tcancellation.dispose();\n\t\t\t\t\t\tresolve(stats);\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tcancellation.dispose();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getSearchOptionsForFolder(fq: IFolderQuery<URI>): vscode.FileSearchOptions {\n\t\tconst includes = resolvePatternsForProvider(this.config.includePattern, fq.includePattern);\n\t\tconst excludes = resolvePatternsForProvider(this.config.excludePattern, fq.excludePattern);\n\n\t\treturn {\n\t\t\tfolder: fq.folder,\n\t\t\texcludes,\n\t\t\tincludes,\n\t\t\tuseIgnoreFiles: !fq.disregardIgnoreFiles,\n\t\t\tuseGlobalIgnoreFiles: !fq.disregardGlobalIgnoreFiles,\n\t\t\tfollowSymlinks: !fq.ignoreSymlinks,\n\t\t\tmaxResults: this.config.maxResults,\n\t\t\tsession: this.sessionToken\n\t\t};\n\t}\n\n\tprivate initDirectoryTree(): IDirectoryTree {\n\t\tconst tree: IDirectoryTree = {\n\t\t\trootEntries: [],\n\t\t\tpathToEntries: Object.create(null)\n\t\t};\n\t\ttree.pathToEntries['.'] = tree.rootEntries;\n\t\treturn tree;\n\t}\n\n\tprivate addDirectoryEntries({ pathToEntries }: IDirectoryTree, base: URI, relativeFile: string, onResult: (result: IInternalFileMatch) => void) {\n\t\t// Support relative paths to files from a root resource (ignores excludes)\n\t\tif (relativeFile === this.filePattern) {\n\t\t\tconst basename = path.basename(this.filePattern);\n\t\t\tthis.matchFile(onResult, { base: base, relativePath: this.filePattern, basename });\n\t\t}\n\n\t\tfunction add(relativePath: string) {\n\t\t\tconst basename = path.basename(relativePath);\n\t\t\tconst dirname = path.dirname(relativePath);\n\t\t\tlet entries = pathToEntries[dirname];\n\t\t\tif (!entries) {\n\t\t\t\tentries = pathToEntries[dirname] = [];\n\t\t\t\tadd(dirname);\n\t\t\t}\n\t\t\tentries.push({\n\t\t\t\tbase,\n\t\t\t\trelativePath,\n\t\t\t\tbasename\n\t\t\t});\n\t\t}\n\n\t\tadd(relativeFile);\n\t}\n\n\tprivate matchDirectoryTree({ rootEntries, pathToEntries }: IDirectoryTree, queryTester: QueryGlobTester, onResult: (result: IInternalFileMatch) => void) {\n\t\tconst self = this;\n\t\tconst filePattern = this.filePattern;\n\t\tfunction matchDirectory(entries: IDirectoryEntry[]) {\n\t\t\tconst hasSibling = glob.hasSiblingFn(() => entries.map(entry => entry.basename));\n\t\t\tfor (let i = 0, n = entries.length; i < n; i++) {\n\t\t\t\tconst entry = entries[i];\n\t\t\t\tconst { relativePath, basename } = entry;\n\n\t\t\t\t// Check exclude pattern\n\t\t\t\t// If the user searches for the exact file name, we adjust the glob matching\n\t\t\t\t// to ignore filtering by siblings because the user seems to know what she\n\t\t\t\t// is searching for and we want to include the result in that case anyway\n\t\t\t\tif (!queryTester.includedInQuerySync(relativePath, basename, filePattern !== basename ? hasSibling : undefined)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst sub = pathToEntries[relativePath];\n\t\t\t\tif (sub) {\n\t\t\t\t\tmatchDirectory(sub);\n\t\t\t\t} else {\n\t\t\t\t\tif (relativePath === filePattern) {\n\t\t\t\t\t\tcontinue; // ignore file if its path matches with the file pattern because that is already matched above\n\t\t\t\t\t}\n\n\t\t\t\t\tself.matchFile(onResult, entry);\n\t\t\t\t}\n\n\t\t\t\tif (self.isLimitHit) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmatchDirectory(rootEntries);\n\t}\n\n\tprivate matchFile(onResult: (result: IInternalFileMatch) => void, candidate: IInternalFileMatch): void {\n\t\tif (!this.includePattern || (candidate.relativePath && this.includePattern(candidate.relativePath, candidate.basename))) {\n\t\t\tif (this.exists || (this.maxResults && this.resultCount >= this.maxResults)) {\n\t\t\t\tthis.isLimitHit = true;\n\t\t\t\tthis.cancel();\n\t\t\t}\n\n\t\t\tif (!this.isLimitHit) {\n\t\t\t\tonResult(candidate);\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface IInternalSearchComplete {\n\tlimitHit: boolean;\n\tstats?: IFileSearchProviderStats;\n}\n\nexport class FileSearchManager {\n\n\tprivate static readonly BATCH_SIZE = 512;\n\n\tprivate readonly sessions = new Map<string, CancellationTokenSource>();\n\n\tfileSearch(config: IFileQuery, provider: vscode.FileSearchProvider, onBatch: (matches: IFileMatch[]) => void, token: CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst sessionTokenSource = this.getSessionTokenSource(config.cacheKey);\n\t\tconst engine = new FileSearchEngine(config, provider, sessionTokenSource && sessionTokenSource.token);\n\n\t\tlet resultCount = 0;\n\t\tconst onInternalResult = (batch: IInternalFileMatch[]) => {\n\t\t\tresultCount += batch.length;\n\t\t\tonBatch(batch.map(m => this.rawMatchToSearchItem(m)));\n\t\t};\n\n\t\treturn this.doSearch(engine, FileSearchManager.BATCH_SIZE, onInternalResult, token).then(\n\t\t\tresult => {\n\t\t\t\treturn <ISearchCompleteStats>{\n\t\t\t\t\tlimitHit: result.limitHit,\n\t\t\t\t\tstats: {\n\t\t\t\t\t\tfromCache: false,\n\t\t\t\t\t\ttype: 'fileSearchProvider',\n\t\t\t\t\t\tresultCount,\n\t\t\t\t\t\tdetailStats: result.stats\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tclearCache(cacheKey: string): void {\n\t\tconst sessionTokenSource = this.getSessionTokenSource(cacheKey);\n\t\tif (sessionTokenSource) {\n\t\t\tsessionTokenSource.cancel();\n\t\t}\n\t}\n\n\tprivate getSessionTokenSource(cacheKey: string | undefined): CancellationTokenSource | undefined {\n\t\tif (!cacheKey) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.sessions.has(cacheKey)) {\n\t\t\tthis.sessions.set(cacheKey, new CancellationTokenSource());\n\t\t}\n\n\t\treturn this.sessions.get(cacheKey);\n\t}\n\n\tprivate rawMatchToSearchItem(match: IInternalFileMatch): IFileMatch {\n\t\tif (match.relativePath) {\n\t\t\treturn {\n\t\t\t\tresource: resources.joinPath(match.base, match.relativePath)\n\t\t\t};\n\t\t} else {\n\t\t\t// extraFileResources\n\t\t\treturn {\n\t\t\t\tresource: match.base\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate doSearch(engine: FileSearchEngine, batchSize: number, onResultBatch: (matches: IInternalFileMatch[]) => void, token: CancellationToken): Promise<IInternalSearchComplete> {\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tengine.cancel();\n\t\t});\n\n\t\tconst _onResult = match => {\n\t\t\tif (match) {\n\t\t\t\tbatch.push(match);\n\t\t\t\tif (batchSize > 0 && batch.length >= batchSize) {\n\t\t\t\t\tonResultBatch(batch);\n\t\t\t\t\tbatch = [];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet batch: IInternalFileMatch[] = [];\n\t\treturn engine.search(_onResult).then(result => {\n\t\t\tif (batch.length) {\n\t\t\t\tonResultBatch(batch);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, error => {\n\t\t\tif (batch.length) {\n\t\t\t\tonResultBatch(batch);\n\t\t\t}\n\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { startsWith } from 'vs/base/common/strings';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { SearchRange, TextSearchMatch } from 'vs/workbench/services/search/common/search';\nimport * as vscode from 'vscode';\nimport { mapArrayOrNot } from 'vs/base/common/arrays';\n\nexport type Maybe<T> = T | null | undefined;\n\nexport function anchorGlob(glob: string): string {\n\treturn startsWith(glob, '**') || startsWith(glob, '/') ? glob : `/${glob}`;\n}\n\n/**\n * Create a vscode.TextSearchResult by using our internal TextSearchResult type for its previewOptions logic.\n */\nexport function createTextSearchResult(uri: vscode.Uri, text: string, range: Range | Range[], previewOptions?: vscode.TextSearchPreviewOptions): vscode.TextSearchMatch {\n\tconst searchRange = mapArrayOrNot(range, rangeToSearchRange);\n\n\tconst internalResult = new TextSearchMatch(text, searchRange, previewOptions);\n\tconst internalPreviewRange = internalResult.preview.matches;\n\treturn {\n\t\tranges: mapArrayOrNot(searchRange, searchRangeToRange),\n\t\turi,\n\t\tpreview: {\n\t\t\ttext: internalResult.preview.text,\n\t\t\tmatches: mapArrayOrNot(internalPreviewRange, searchRangeToRange)\n\t\t}\n\t};\n}\n\nfunction rangeToSearchRange(range: Range): SearchRange {\n\treturn new SearchRange(range.start.line, range.start.character, range.end.line, range.end.character);\n}\n\nfunction searchRangeToRange(range: SearchRange): Range {\n\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n}\n\nexport class Position {\n\tconstructor(readonly line, readonly character) { }\n\n\tisBefore(other: Position): boolean { return false; }\n\tisBeforeOrEqual(other: Position): boolean { return false; }\n\tisAfter(other: Position): boolean { return false; }\n\tisAfterOrEqual(other: Position): boolean { return false; }\n\tisEqual(other: Position): boolean { return false; }\n\tcompareTo(other: Position): number { return 0; }\n\ttranslate(lineDelta?: number, characterDelta?: number): Position;\n\ttranslate(change: { lineDelta?: number; characterDelta?: number; }): Position;\n\ttranslate(_?: any, _2?: any): Position { return new Position(0, 0); }\n\twith(line?: number, character?: number): Position;\n\twith(change: { line?: number; character?: number; }): Position;\n\twith(_: any): Position { return new Position(0, 0); }\n}\n\nexport class Range {\n\treadonly start: Position;\n\treadonly end: Position;\n\n\tconstructor(startLine: number, startCol: number, endLine: number, endCol: number) {\n\t\tthis.start = new Position(startLine, startCol);\n\t\tthis.end = new Position(endLine, endCol);\n\t}\n\n\tisEmpty: boolean;\n\tisSingleLine: boolean;\n\tcontains(positionOrRange: Position | Range): boolean { return false; }\n\tisEqual(other: Range): boolean { return false; }\n\tintersection(range: Range): Range | undefined { return undefined; }\n\tunion(other: Range): Range { return new Range(0, 0, 0, 0); }\n\n\twith(start?: Position, end?: Position): Range;\n\twith(change: { start?: Position, end?: Position }): Range;\n\twith(_: any): Range { return new Range(0, 0, 0, 0); }\n}\n\nexport interface IOutputChannel {\n\tappendLine(msg: string): void;\n}\n\nexport class OutputChannel implements IOutputChannel {\n\tconstructor(@ILogService private readonly logService: ILogService) { }\n\n\tappendLine(msg: string): void {\n\t\tthis.logService.debug('RipgrepSearchEH#search', msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { mapArrayOrNot } from 'vs/base/common/arrays';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport * as glob from 'vs/base/common/glob';\nimport * as resources from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { toCanonicalName } from 'vs/base/node/encoding';\nimport * as extfs from 'vs/base/node/extfs';\nimport { IExtendedExtensionSearchOptions, IFileMatch, IFolderQuery, IPatternInfo, ISearchCompleteStats, ITextQuery, ITextSearchContext, ITextSearchMatch, ITextSearchResult, QueryGlobTester, resolvePatternsForProvider } from 'vs/workbench/services/search/common/search';\nimport * as vscode from 'vscode';\n\nexport class TextSearchManager {\n\n\tprivate collector: TextSearchResultsCollector;\n\n\tprivate isLimitHit: boolean;\n\tprivate resultCount = 0;\n\n\tconstructor(private query: ITextQuery, private provider: vscode.TextSearchProvider, private _extfs: typeof extfs = extfs) {\n\t}\n\n\tsearch(onProgress: (matches: IFileMatch[]) => void, token: CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst folderQueries = this.query.folderQueries || [];\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\ttoken.onCancellationRequested(() => tokenSource.cancel());\n\n\t\treturn new Promise<ISearchCompleteStats>((resolve, reject) => {\n\t\t\tthis.collector = new TextSearchResultsCollector(onProgress);\n\n\t\t\tlet isCanceled = false;\n\t\t\tconst onResult = (result: vscode.TextSearchResult, folderIdx: number) => {\n\t\t\t\tif (isCanceled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.isLimitHit) {\n\t\t\t\t\tconst resultSize = this.resultSize(result);\n\t\t\t\t\tif (extensionResultIsMatch(result) && typeof this.query.maxResults === 'number' && this.resultCount + resultSize > this.query.maxResults) {\n\t\t\t\t\t\tthis.isLimitHit = true;\n\t\t\t\t\t\tisCanceled = true;\n\t\t\t\t\t\ttokenSource.cancel();\n\n\t\t\t\t\t\tresult = this.trimResultToSize(result, this.query.maxResults - this.resultCount);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst newResultSize = this.resultSize(result);\n\t\t\t\t\tthis.resultCount += newResultSize;\n\t\t\t\t\tif (newResultSize > 0) {\n\t\t\t\t\t\tthis.collector.add(result, folderIdx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// For each root folder\n\t\t\tPromise.all(folderQueries.map((fq, i) => {\n\t\t\t\treturn this.searchInFolder(fq, r => onResult(r, i), tokenSource.token);\n\t\t\t})).then(results => {\n\t\t\t\ttokenSource.dispose();\n\t\t\t\tthis.collector.flush();\n\n\t\t\t\tconst someFolderHitLImit = results.some(result => !!result && !!result.limitHit);\n\t\t\t\tresolve({\n\t\t\t\t\tlimitHit: this.isLimitHit || someFolderHitLImit,\n\t\t\t\t\tstats: {\n\t\t\t\t\t\ttype: 'textSearchProvider'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, (err: Error) => {\n\t\t\t\ttokenSource.dispose();\n\t\t\t\tconst errMsg = toErrorMessage(err);\n\t\t\t\treject(new Error(errMsg));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate resultSize(result: vscode.TextSearchResult): number {\n\t\tconst match = <vscode.TextSearchMatch>result;\n\t\treturn Array.isArray(match.ranges) ?\n\t\t\tmatch.ranges.length :\n\t\t\t1;\n\t}\n\n\tprivate trimResultToSize(result: vscode.TextSearchMatch, size: number): vscode.TextSearchMatch {\n\t\tconst rangesArr = Array.isArray(result.ranges) ? result.ranges : [result.ranges];\n\t\tconst matchesArr = Array.isArray(result.preview.matches) ? result.preview.matches : [result.preview.matches];\n\n\t\treturn {\n\t\t\tranges: rangesArr.slice(0, size),\n\t\t\tpreview: {\n\t\t\t\tmatches: matchesArr.slice(0, size),\n\t\t\t\ttext: result.preview.text\n\t\t\t},\n\t\t\turi: result.uri\n\t\t};\n\t}\n\n\tprivate searchInFolder(folderQuery: IFolderQuery<URI>, onResult: (result: vscode.TextSearchResult) => void, token: CancellationToken): Promise<vscode.TextSearchComplete | null | undefined> {\n\t\tconst queryTester = new QueryGlobTester(this.query, folderQuery);\n\t\tconst testingPs: Promise<void>[] = [];\n\t\tconst progress = {\n\t\t\treport: (result: vscode.TextSearchResult) => {\n\t\t\t\tif (!this.validateProviderResult(result)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst hasSibling = folderQuery.folder.scheme === 'file' ?\n\t\t\t\t\tglob.hasSiblingPromiseFn(() => {\n\t\t\t\t\t\treturn this.readdir(path.dirname(result.uri.fsPath));\n\t\t\t\t\t}) :\n\t\t\t\t\tundefined;\n\n\t\t\t\tconst relativePath = path.relative(folderQuery.folder.fsPath, result.uri.fsPath);\n\t\t\t\ttestingPs.push(\n\t\t\t\t\tqueryTester.includedInQuery(relativePath, path.basename(relativePath), hasSibling)\n\t\t\t\t\t\t.then(included => {\n\t\t\t\t\t\t\tif (included) {\n\t\t\t\t\t\t\t\tonResult(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t}\n\t\t};\n\n\t\tconst searchOptions = this.getSearchOptionsForFolder(folderQuery);\n\t\treturn new Promise(resolve => process.nextTick(resolve))\n\t\t\t.then(() => this.provider.provideTextSearchResults(patternInfoToQuery(this.query.contentPattern), searchOptions, progress, token))\n\t\t\t.then(result => {\n\t\t\t\treturn Promise.all(testingPs)\n\t\t\t\t\t.then(() => result);\n\t\t\t});\n\t}\n\n\tprivate validateProviderResult(result: vscode.TextSearchResult): boolean {\n\t\tif (extensionResultIsMatch(result)) {\n\t\t\tif (Array.isArray(result.ranges)) {\n\t\t\t\tif (!Array.isArray(result.preview.matches)) {\n\t\t\t\t\tconsole.warn('INVALID - A text search provider match\\'s`ranges` and`matches` properties must have the same type.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ((<vscode.Range[]>result.preview.matches).length !== result.ranges.length) {\n\t\t\t\t\tconsole.warn('INVALID - A text search provider match\\'s`ranges` and`matches` properties must have the same length.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(result.preview.matches)) {\n\t\t\t\t\tconsole.warn('INVALID - A text search provider match\\'s`ranges` and`matches` properties must have the same length.');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate readdir(dirname: string): Promise<string[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._extfs.readdir(dirname, (err, files) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\n\t\t\t\tresolve(files);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getSearchOptionsForFolder(fq: IFolderQuery<URI>): vscode.TextSearchOptions {\n\t\tconst includes = resolvePatternsForProvider(this.query.includePattern, fq.includePattern);\n\t\tconst excludes = resolvePatternsForProvider(this.query.excludePattern, fq.excludePattern);\n\n\t\tconst options = <vscode.TextSearchOptions>{\n\t\t\tfolder: URI.from(fq.folder),\n\t\t\texcludes,\n\t\t\tincludes,\n\t\t\tuseIgnoreFiles: !fq.disregardIgnoreFiles,\n\t\t\tuseGlobalIgnoreFiles: !fq.disregardGlobalIgnoreFiles,\n\t\t\tfollowSymlinks: !fq.ignoreSymlinks,\n\t\t\tencoding: fq.fileEncoding && toCanonicalName(fq.fileEncoding),\n\t\t\tmaxFileSize: this.query.maxFileSize,\n\t\t\tmaxResults: this.query.maxResults,\n\t\t\tpreviewOptions: this.query.previewOptions,\n\t\t\tafterContext: this.query.afterContext,\n\t\t\tbeforeContext: this.query.beforeContext\n\t\t};\n\t\t(<IExtendedExtensionSearchOptions>options).usePCRE2 = this.query.usePCRE2;\n\t\treturn options;\n\t}\n}\n\nfunction patternInfoToQuery(patternInfo: IPatternInfo): vscode.TextSearchQuery {\n\treturn <vscode.TextSearchQuery>{\n\t\tisCaseSensitive: patternInfo.isCaseSensitive || false,\n\t\tisRegExp: patternInfo.isRegExp || false,\n\t\tisWordMatch: patternInfo.isWordMatch || false,\n\t\tisMultiline: patternInfo.isMultiline || false,\n\t\tpattern: patternInfo.pattern\n\t};\n}\n\nexport class TextSearchResultsCollector {\n\tprivate _batchedCollector: BatchedCollector<IFileMatch>;\n\n\tprivate _currentFolderIdx: number;\n\tprivate _currentUri: URI;\n\tprivate _currentFileMatch: IFileMatch | null = null;\n\n\tconstructor(private _onResult: (result: IFileMatch[]) => void) {\n\t\tthis._batchedCollector = new BatchedCollector<IFileMatch>(512, items => this.sendItems(items));\n\t}\n\n\tadd(data: vscode.TextSearchResult, folderIdx: number): void {\n\t\t// Collects TextSearchResults into IInternalFileMatches and collates using BatchedCollector.\n\t\t// This is efficient for ripgrep which sends results back one file at a time. It wouldn't be efficient for other search\n\t\t// providers that send results in random order. We could do this step afterwards instead.\n\t\tif (this._currentFileMatch && (this._currentFolderIdx !== folderIdx || !resources.isEqual(this._currentUri, data.uri))) {\n\t\t\tthis.pushToCollector();\n\t\t\tthis._currentFileMatch = null;\n\t\t}\n\n\t\tif (!this._currentFileMatch) {\n\t\t\tthis._currentFolderIdx = folderIdx;\n\t\t\tthis._currentFileMatch = {\n\t\t\t\tresource: data.uri,\n\t\t\t\tresults: []\n\t\t\t};\n\t\t}\n\n\t\tthis._currentFileMatch.results!.push(extensionResultToFrontendResult(data));\n\t}\n\n\tprivate pushToCollector(): void {\n\t\tconst size = this._currentFileMatch && this._currentFileMatch.results ?\n\t\t\tthis._currentFileMatch.results.length :\n\t\t\t0;\n\t\tthis._batchedCollector.addItem(this._currentFileMatch!, size);\n\t}\n\n\tflush(): void {\n\t\tthis.pushToCollector();\n\t\tthis._batchedCollector.flush();\n\t}\n\n\tprivate sendItems(items: IFileMatch[]): void {\n\t\tthis._onResult(items);\n\t}\n}\n\nfunction extensionResultToFrontendResult(data: vscode.TextSearchResult): ITextSearchResult {\n\t// Warning: result from RipgrepTextSearchEH has fake vscode.Range. Don't depend on any other props beyond these...\n\tif (extensionResultIsMatch(data)) {\n\t\treturn <ITextSearchMatch>{\n\t\t\tpreview: {\n\t\t\t\tmatches: mapArrayOrNot(data.preview.matches, m => ({\n\t\t\t\t\tstartLineNumber: m.start.line,\n\t\t\t\t\tstartColumn: m.start.character,\n\t\t\t\t\tendLineNumber: m.end.line,\n\t\t\t\t\tendColumn: m.end.character\n\t\t\t\t})),\n\t\t\t\ttext: data.preview.text\n\t\t\t},\n\t\t\tranges: mapArrayOrNot(data.ranges, r => ({\n\t\t\t\tstartLineNumber: r.start.line,\n\t\t\t\tstartColumn: r.start.character,\n\t\t\t\tendLineNumber: r.end.line,\n\t\t\t\tendColumn: r.end.character\n\t\t\t}))\n\t\t};\n\t} else {\n\t\treturn <ITextSearchContext>{\n\t\t\ttext: data.text,\n\t\t\tlineNumber: data.lineNumber\n\t\t};\n\t}\n}\n\nexport function extensionResultIsMatch(data: vscode.TextSearchResult): data is vscode.TextSearchMatch {\n\treturn !!(<vscode.TextSearchMatch>data).preview;\n}\n\n/**\n * Collects items that have a size - before the cumulative size of collected items reaches START_BATCH_AFTER_COUNT, the callback is called for every\n * set of items collected.\n * But after that point, the callback is called with batches of maxBatchSize.\n * If the batch isn't filled within some time, the callback is also called.\n */\nexport class BatchedCollector<T> {\n\tprivate static readonly TIMEOUT = 4000;\n\n\t// After START_BATCH_AFTER_COUNT items have been collected, stop flushing on timeout\n\tprivate static readonly START_BATCH_AFTER_COUNT = 50;\n\n\tprivate totalNumberCompleted = 0;\n\tprivate batch: T[] = [];\n\tprivate batchSize = 0;\n\tprivate timeoutHandle: any;\n\n\tconstructor(private maxBatchSize: number, private cb: (items: T[]) => void) {\n\t}\n\n\taddItem(item: T, size: number): void {\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addItemToBatch(item, size);\n\t}\n\n\taddItems(items: T[], size: number): void {\n\t\tif (!items) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addItemsToBatch(items, size);\n\t}\n\n\tprivate addItemToBatch(item: T, size: number): void {\n\t\tthis.batch.push(item);\n\t\tthis.batchSize += size;\n\t\tthis.onUpdate();\n\t}\n\n\tprivate addItemsToBatch(item: T[], size: number): void {\n\t\tthis.batch = this.batch.concat(item);\n\t\tthis.batchSize += size;\n\t\tthis.onUpdate();\n\t}\n\n\tprivate onUpdate(): void {\n\t\tif (this.totalNumberCompleted < BatchedCollector.START_BATCH_AFTER_COUNT) {\n\t\t\t// Flush because we aren't batching yet\n\t\t\tthis.flush();\n\t\t} else if (this.batchSize >= this.maxBatchSize) {\n\t\t\t// Flush because the batch is full\n\t\t\tthis.flush();\n\t\t} else if (!this.timeoutHandle) {\n\t\t\t// No timeout running, start a timeout to flush\n\t\t\tthis.timeoutHandle = setTimeout(() => {\n\t\t\t\tthis.flush();\n\t\t\t}, BatchedCollector.TIMEOUT);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this.batchSize) {\n\t\t\tthis.totalNumberCompleted += this.batchSize;\n\t\t\tthis.cb(this.batch);\n\t\t\tthis.batch = [];\n\t\t\tthis.batchSize = 0;\n\n\t\t\tif (this.timeoutHandle) {\n\t\t\t\tclearTimeout(this.timeoutHandle);\n\t\t\t\tthis.timeoutHandle = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport * as tls from 'tls';\nimport * as nodeurl from 'url';\nimport * as os from 'os';\nimport * as fs from 'fs';\nimport * as cp from 'child_process';\n\nimport { assign } from 'vs/base/common/objects';\nimport { endsWith } from 'vs/base/common/strings';\nimport { IExtHostWorkspaceProvider } from 'vs/workbench/api/node/extHostWorkspace';\nimport { ExtHostConfigProvider } from 'vs/workbench/api/node/extHostConfiguration';\nimport { ProxyAgent } from 'vscode-proxy-agent';\nimport { MainThreadTelemetryShape } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostLogService } from 'vs/workbench/api/node/extHostLogService';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ExtHostExtensionService } from 'vs/workbench/api/node/extHostExtensionService';\nimport { URI } from 'vs/base/common/uri';\nimport { promisify } from 'util';\n\ninterface ConnectionResult {\n\tproxy: string;\n\tconnection: string;\n\tcode: string;\n\tcount: number;\n}\n\nexport function connectProxyResolver(\n\textHostWorkspace: IExtHostWorkspaceProvider,\n\tconfigProvider: ExtHostConfigProvider,\n\textensionService: ExtHostExtensionService,\n\textHostLogService: ExtHostLogService,\n\tmainThreadTelemetry: MainThreadTelemetryShape\n) {\n\tconst resolveProxy = setupProxyResolution(extHostWorkspace, configProvider, extHostLogService, mainThreadTelemetry);\n\tconst lookup = createPatchedModules(configProvider, resolveProxy);\n\treturn configureModuleLoading(extensionService, lookup);\n}\n\nconst maxCacheEntries = 5000; // Cache can grow twice that much due to 'oldCache'.\n\nfunction setupProxyResolution(\n\textHostWorkspace: IExtHostWorkspaceProvider,\n\tconfigProvider: ExtHostConfigProvider,\n\textHostLogService: ExtHostLogService,\n\tmainThreadTelemetry: MainThreadTelemetryShape\n) {\n\tconst env = process.env;\n\n\tlet settingsProxy = proxyFromConfigURL(configProvider.getConfiguration('http')\n\t\t.get<string>('proxy'));\n\tconfigProvider.onDidChangeConfiguration(e => {\n\t\tsettingsProxy = proxyFromConfigURL(configProvider.getConfiguration('http')\n\t\t\t.get<string>('proxy'));\n\t});\n\tlet envProxy = proxyFromConfigURL(env.https_proxy || env.HTTPS_PROXY || env.http_proxy || env.HTTP_PROXY); // Not standardized.\n\n\tlet envNoProxy = noProxyFromEnv(env.no_proxy || env.NO_PROXY); // Not standardized.\n\n\tlet cacheRolls = 0;\n\tlet oldCache = new Map<string, string>();\n\tlet cache = new Map<string, string>();\n\tfunction getCacheKey(url: nodeurl.UrlWithStringQuery) {\n\t\t// Expecting proxies to usually be the same per scheme://host:port. Assuming that for performance.\n\t\treturn nodeurl.format({ ...url, ...{ pathname: undefined, search: undefined, hash: undefined } });\n\t}\n\tfunction getCachedProxy(key: string) {\n\t\tlet proxy = cache.get(key);\n\t\tif (proxy) {\n\t\t\treturn proxy;\n\t\t}\n\t\tproxy = oldCache.get(key);\n\t\tif (proxy) {\n\t\t\toldCache.delete(key);\n\t\t\tcacheProxy(key, proxy);\n\t\t}\n\t\treturn proxy;\n\t}\n\tfunction cacheProxy(key: string, proxy: string) {\n\t\tcache.set(key, proxy);\n\t\tif (cache.size >= maxCacheEntries) {\n\t\t\toldCache = cache;\n\t\t\tcache = new Map();\n\t\t\tcacheRolls++;\n\t\t\textHostLogService.trace('ProxyResolver#cacheProxy cacheRolls', cacheRolls);\n\t\t}\n\t}\n\n\tlet timeout: NodeJS.Timer | undefined;\n\tlet count = 0;\n\tlet duration = 0;\n\tlet errorCount = 0;\n\tlet cacheCount = 0;\n\tlet envCount = 0;\n\tlet settingsCount = 0;\n\tlet localhostCount = 0;\n\tlet envNoProxyCount = 0;\n\tlet results: ConnectionResult[] = [];\n\tfunction logEvent() {\n\t\ttimeout = undefined;\n\t\t/* __GDPR__\n\t\t\t\"resolveProxy\" : {\n\t\t\t\t\"count\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"cacheCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"cacheSize\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"cacheRolls\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"envCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"settingsCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"localhostCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"envNoProxyCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"results\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\t\t\t}\n\t\t*/\n\t\tmainThreadTelemetry.$publicLog('resolveProxy', { count, duration, errorCount, cacheCount, cacheSize: cache.size, cacheRolls, envCount, settingsCount, localhostCount, envNoProxyCount, results });\n\t\tcount = duration = errorCount = cacheCount = envCount = settingsCount = localhostCount = envNoProxyCount = 0;\n\t\tresults = [];\n\t}\n\n\tfunction resolveProxy(flags: { useProxySettings: boolean, useSystemCertificates: boolean }, req: http.ClientRequest, opts: http.RequestOptions, url: string, callback: (proxy?: string) => void) {\n\t\tif (!timeout) {\n\t\t\ttimeout = setTimeout(logEvent, 10 * 60 * 1000);\n\t\t}\n\n\t\tuseSystemCertificates(extHostLogService, flags.useSystemCertificates, opts, () => {\n\t\t\tuseProxySettings(flags.useProxySettings, req, opts, url, callback);\n\t\t});\n\t}\n\n\tfunction useProxySettings(useProxySettings: boolean, req: http.ClientRequest, opts: http.RequestOptions, url: string, callback: (proxy?: string) => void) {\n\n\t\tif (!useProxySettings) {\n\t\t\tcallback('DIRECT');\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedUrl = nodeurl.parse(url); // Coming from Node's URL, sticking with that.\n\n\t\tconst hostname = parsedUrl.hostname;\n\t\tif (hostname === 'localhost' || hostname === '127.0.0.1' || hostname === '::1' || hostname === '::ffff:127.0.0.1') {\n\t\t\tlocalhostCount++;\n\t\t\tcallback('DIRECT');\n\t\t\textHostLogService.trace('ProxyResolver#resolveProxy localhost', url, 'DIRECT');\n\t\t\treturn;\n\t\t}\n\n\t\tif (envNoProxy(hostname, String(parsedUrl.port || (<any>opts.agent).defaultPort))) {\n\t\t\tenvNoProxyCount++;\n\t\t\tcallback('DIRECT');\n\t\t\textHostLogService.trace('ProxyResolver#resolveProxy envNoProxy', url, 'DIRECT');\n\t\t\treturn;\n\t\t}\n\n\t\tif (settingsProxy) {\n\t\t\tsettingsCount++;\n\t\t\tcallback(settingsProxy);\n\t\t\textHostLogService.trace('ProxyResolver#resolveProxy settings', url, settingsProxy);\n\t\t\treturn;\n\t\t}\n\n\t\tif (envProxy) {\n\t\t\tenvCount++;\n\t\t\tcallback(envProxy);\n\t\t\textHostLogService.trace('ProxyResolver#resolveProxy env', url, envProxy);\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = getCacheKey(parsedUrl);\n\t\tconst proxy = getCachedProxy(key);\n\t\tif (proxy) {\n\t\t\tcacheCount++;\n\t\t\tcollectResult(results, proxy, parsedUrl.protocol === 'https:' ? 'HTTPS' : 'HTTP', req);\n\t\t\tcallback(proxy);\n\t\t\textHostLogService.trace('ProxyResolver#resolveProxy cached', url, proxy);\n\t\t\treturn;\n\t\t}\n\n\t\tconst start = Date.now();\n\t\textHostWorkspace.resolveProxy(url) // Use full URL to ensure it is an actually used one.\n\t\t\t.then(proxy => {\n\t\t\t\tcacheProxy(key, proxy);\n\t\t\t\tcollectResult(results, proxy, parsedUrl.protocol === 'https:' ? 'HTTPS' : 'HTTP', req);\n\t\t\t\tcallback(proxy);\n\t\t\t\textHostLogService.debug('ProxyResolver#resolveProxy', url, proxy);\n\t\t\t}).then(() => {\n\t\t\t\tcount++;\n\t\t\t\tduration = Date.now() - start + duration;\n\t\t\t}, err => {\n\t\t\t\terrorCount++;\n\t\t\t\tcallback();\n\t\t\t\textHostLogService.error('ProxyResolver#resolveProxy', toErrorMessage(err));\n\t\t\t});\n\t}\n\n\treturn resolveProxy;\n}\n\nfunction collectResult(results: ConnectionResult[], resolveProxy: string, connection: string, req: http.ClientRequest) {\n\tconst proxy = resolveProxy ? String(resolveProxy).trim().split(/\\s+/, 1)[0] : 'EMPTY';\n\treq.on('response', res => {\n\t\tconst code = `HTTP_${res.statusCode}`;\n\t\tconst result = findOrCreateResult(results, proxy, connection, code);\n\t\tresult.count++;\n\t});\n\treq.on('error', err => {\n\t\tconst code = err && typeof (<any>err).code === 'string' && (<any>err).code || 'UNKNOWN_ERROR';\n\t\tconst result = findOrCreateResult(results, proxy, connection, code);\n\t\tresult.count++;\n\t});\n}\n\nfunction findOrCreateResult(results: ConnectionResult[], proxy: string, connection: string, code: string): ConnectionResult {\n\tfor (const result of results) {\n\t\tif (result.proxy === proxy && result.connection === connection && result.code === code) {\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst result = { proxy, connection, code, count: 0 };\n\tresults.push(result);\n\treturn result;\n}\n\nfunction proxyFromConfigURL(configURL: string | undefined) {\n\tconst url = (configURL || '').trim();\n\tconst i = url.indexOf('://');\n\tif (i === -1) {\n\t\treturn undefined;\n\t}\n\tconst scheme = url.substr(0, i).toLowerCase();\n\tconst proxy = url.substr(i + 3);\n\tif (scheme === 'http') {\n\t\treturn 'PROXY ' + proxy;\n\t} else if (scheme === 'https') {\n\t\treturn 'HTTPS ' + proxy;\n\t} else if (scheme === 'socks') {\n\t\treturn 'SOCKS ' + proxy;\n\t}\n\treturn undefined;\n}\n\nfunction noProxyFromEnv(envValue?: string) {\n\tconst value = (envValue || '')\n\t\t.trim()\n\t\t.toLowerCase();\n\n\tif (value === '*') {\n\t\treturn () => true;\n\t}\n\n\tconst filters = value\n\t\t.split(',')\n\t\t.map(s => s.trim().split(':', 2))\n\t\t.map(([name, port]) => ({ name, port }))\n\t\t.filter(filter => !!filter.name)\n\t\t.map(({ name, port }) => {\n\t\t\tconst domain = name[0] === '.' ? name : `.${name}`;\n\t\t\treturn { domain, port };\n\t\t});\n\tif (!filters.length) {\n\t\treturn () => false;\n\t}\n\treturn (hostname: string, port: string) => filters.some(({ domain, port: filterPort }) => {\n\t\treturn endsWith(`.${hostname.toLowerCase()}`, domain) && (!filterPort || port === filterPort);\n\t});\n}\n\nfunction createPatchedModules(configProvider: ExtHostConfigProvider, resolveProxy: ReturnType<typeof setupProxyResolution>) {\n\tconst proxySetting = {\n\t\tconfig: configProvider.getConfiguration('http')\n\t\t\t.get<string>('proxySupport') || 'off'\n\t};\n\tconfigProvider.onDidChangeConfiguration(e => {\n\t\tproxySetting.config = configProvider.getConfiguration('http')\n\t\t\t.get<string>('proxySupport') || 'off';\n\t});\n\tconst certSetting = {\n\t\tconfig: !!configProvider.getConfiguration('http')\n\t\t\t.get<boolean>('systemCertificates')\n\t};\n\tconfigProvider.onDidChangeConfiguration(e => {\n\t\tcertSetting.config = !!configProvider.getConfiguration('http')\n\t\t\t.get<string>('systemCertificates');\n\t});\n\n\treturn {\n\t\thttp: {\n\t\t\toff: assign({}, http, patches(http, resolveProxy, { config: 'off' }, certSetting, true)),\n\t\t\ton: assign({}, http, patches(http, resolveProxy, { config: 'on' }, certSetting, true)),\n\t\t\toverride: assign({}, http, patches(http, resolveProxy, { config: 'override' }, certSetting, true)),\n\t\t\tonRequest: assign({}, http, patches(http, resolveProxy, proxySetting, certSetting, true)),\n\t\t\tdefault: assign(http, patches(http, resolveProxy, proxySetting, certSetting, false)) // run last\n\t\t},\n\t\thttps: {\n\t\t\toff: assign({}, https, patches(https, resolveProxy, { config: 'off' }, certSetting, true)),\n\t\t\ton: assign({}, https, patches(https, resolveProxy, { config: 'on' }, certSetting, true)),\n\t\t\toverride: assign({}, https, patches(https, resolveProxy, { config: 'override' }, certSetting, true)),\n\t\t\tonRequest: assign({}, https, patches(https, resolveProxy, proxySetting, certSetting, true)),\n\t\t\tdefault: assign(https, patches(https, resolveProxy, proxySetting, certSetting, false)) // run last\n\t\t},\n\t\ttls: assign(tls, tlsPatches(tls))\n\t};\n}\n\nfunction patches(originals: typeof http | typeof https, resolveProxy: ReturnType<typeof setupProxyResolution>, proxySetting: { config: string }, certSetting: { config: boolean }, onRequest: boolean) {\n\treturn {\n\t\tget: patch(originals.get),\n\t\trequest: patch(originals.request)\n\t};\n\n\tfunction patch(original: typeof http.get) {\n\t\tfunction patched(url: string | URL, options?: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest {\n\t\t\tif (typeof url !== 'string' && !(url && (<any>url).searchParams)) {\n\t\t\t\tcallback = <any>options;\n\t\t\t\toptions = url;\n\t\t\t\turl = null;\n\t\t\t}\n\t\t\tif (typeof options === 'function') {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = null;\n\t\t\t}\n\t\t\toptions = options || {};\n\n\t\t\tif (options.socketPath) {\n\t\t\t\treturn original.apply(null, arguments as unknown as any[]);\n\t\t\t}\n\n\t\t\tconst config = onRequest && ((<any>options)._vscodeProxySupport || /* LS */ (<any>options)._vscodeSystemProxy) || proxySetting.config;\n\t\t\tconst useProxySettings = (config === 'override' || config === 'on' && !options.agent) && !(options.agent instanceof ProxyAgent);\n\t\t\tconst useSystemCertificates = certSetting.config && originals === https && !(options as https.RequestOptions).ca;\n\n\t\t\tif (useProxySettings || useSystemCertificates) {\n\t\t\t\tif (url) {\n\t\t\t\t\tconst parsed = typeof url === 'string' ? new nodeurl.URL(url) : url;\n\t\t\t\t\tconst urlOptions = {\n\t\t\t\t\t\tprotocol: parsed.protocol,\n\t\t\t\t\t\thostname: parsed.hostname.lastIndexOf('[', 0) === 0 ? parsed.hostname.slice(1, -1) : parsed.hostname,\n\t\t\t\t\t\tport: parsed.port,\n\t\t\t\t\t\tpath: `${parsed.pathname}${parsed.search}`\n\t\t\t\t\t};\n\t\t\t\t\tif (parsed.username || parsed.password) {\n\t\t\t\t\t\toptions.auth = `${parsed.username}:${parsed.password}`;\n\t\t\t\t\t}\n\t\t\t\t\toptions = { ...urlOptions, ...options };\n\t\t\t\t} else {\n\t\t\t\t\toptions = { ...options };\n\t\t\t\t}\n\t\t\t\toptions.agent = new ProxyAgent({\n\t\t\t\t\tresolveProxy: resolveProxy.bind(undefined, { useProxySettings, useSystemCertificates }),\n\t\t\t\t\tdefaultPort: originals === https ? 443 : 80,\n\t\t\t\t\toriginalAgent: options.agent\n\t\t\t\t});\n\t\t\t\treturn original(options, callback);\n\t\t\t}\n\n\t\t\treturn original.apply(null, arguments as unknown as any[]);\n\t\t}\n\t\treturn patched;\n\t}\n}\n\nfunction tlsPatches(originals: typeof tls) {\n\treturn {\n\t\tcreateSecureContext: patch(originals.createSecureContext)\n\t};\n\n\tfunction patch(original: typeof tls.createSecureContext): typeof tls.createSecureContext {\n\t\treturn function (details: tls.SecureContextOptions): ReturnType<typeof tls.createSecureContext> {\n\t\t\tconst context = original.apply(null, arguments as unknown as any[]);\n\t\t\tconst certs = (details as any)._vscodeAdditionalCaCerts;\n\t\t\tif (certs) {\n\t\t\t\tfor (const cert of certs) {\n\t\t\t\t\tcontext.context.addCACert(cert);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn context;\n\t\t};\n\t}\n}\n\nfunction configureModuleLoading(extensionService: ExtHostExtensionService, lookup: ReturnType<typeof createPatchedModules>): Promise<void> {\n\treturn extensionService.getExtensionPathIndex()\n\t\t.then(extensionPaths => {\n\t\t\tlet node_module;\n\t\t\tif (process.env.isBrowser) {\n\t\t\t\tnode_module = self['require'].__$__nodeRequire('module');\n\t\t\t} else {\n\t\t\t\tnode_module = <any>require.__$__nodeRequire('module');\n\t\t\t}\n\t\t\tconst original = node_module._load;\n\t\t\tnode_module._load = function load(request: string, parent: any, isMain: any) {\n\t\t\t\tif (request === 'tls') {\n\t\t\t\t\treturn lookup.tls;\n\t\t\t\t}\n\n\t\t\t\tif (request !== 'http' && request !== 'https') {\n\t\t\t\t\treturn original.apply(this, arguments);\n\t\t\t\t}\n\n\t\t\t\tconst modules = lookup[request];\n\t\t\t\tconst ext = extensionPaths.findSubstr(URI.file(parent.filename).fsPath);\n\t\t\t\tif (ext && ext.enableProposedApi) {\n\t\t\t\t\treturn modules[(<any>ext).proxySupport] || modules.onRequest;\n\t\t\t\t}\n\t\t\t\treturn modules.default;\n\t\t\t};\n\t\t});\n}\n\nfunction useSystemCertificates(extHostLogService: ExtHostLogService, useSystemCertificates: boolean, opts: http.RequestOptions, callback: () => void) {\n\tif (useSystemCertificates) {\n\t\tgetCaCertificates(extHostLogService)\n\t\t\t.then(caCertificates => {\n\t\t\t\tif (caCertificates) {\n\t\t\t\t\tif (caCertificates.append) {\n\t\t\t\t\t\t(opts as any)._vscodeAdditionalCaCerts = caCertificates.certs;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(opts as https.RequestOptions).ca = caCertificates.certs;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcallback();\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\textHostLogService.error('ProxyResolver#useSystemCertificates', toErrorMessage(err));\n\t\t\t});\n\t} else {\n\t\tcallback();\n\t}\n}\n\nlet _caCertificates: ReturnType<typeof readCaCertificates> | Promise<undefined>;\nasync function getCaCertificates(extHostLogService: ExtHostLogService) {\n\tif (!_caCertificates) {\n\t\t_caCertificates = readCaCertificates()\n\t\t\t.then(res => res && res.certs.length ? res : undefined)\n\t\t\t.catch(err => {\n\t\t\t\textHostLogService.error('ProxyResolver#getCertificates', toErrorMessage(err));\n\t\t\t\treturn undefined;\n\t\t\t});\n\t}\n\treturn _caCertificates;\n}\n\nasync function readCaCertificates() {\n\tif (process.platform === 'win32') {\n\t\treturn readWindowsCaCertificates();\n\t}\n\tif (process.platform === 'darwin') {\n\t\treturn readMacCaCertificates();\n\t}\n\tif (process.platform === 'linux') {\n\t\treturn readLinuxCaCertificates();\n\t}\n\treturn undefined;\n}\n\nfunction readWindowsCaCertificates() {\n\tconst winCA = require.__$__nodeRequire<any>('win-ca-lib');\n\n\tlet ders = [];\n\tconst store = winCA();\n\ttry {\n\t\tlet der;\n\t\twhile (der = store.next()) {\n\t\t\tders.push(der);\n\t\t}\n\t} finally {\n\t\tstore.done();\n\t}\n\n\tconst seen = {};\n\tconst certs = ders.map(derToPem)\n\t\t.filter(pem => !seen[pem] && (seen[pem] = true));\n\treturn {\n\t\tcerts,\n\t\tappend: true\n\t};\n}\n\nasync function readMacCaCertificates() {\n\tconst stdout = (await promisify(cp.execFile)('/usr/bin/security', ['find-certificate', '-a', '-p'], { encoding: 'utf8' })).stdout;\n\tconst seen = {};\n\tconst certs = stdout.split(/(?=-----BEGIN CERTIFICATE-----)/g)\n\t\t.filter(pem => !!pem.length && !seen[pem] && (seen[pem] = true));\n\treturn {\n\t\tcerts,\n\t\tappend: true\n\t};\n}\n\nconst linuxCaCertificatePaths = [\n\t'/etc/ssl/certs/ca-certificates.crt',\n\t'/etc/ssl/certs/ca-bundle.crt',\n];\n\nasync function readLinuxCaCertificates() {\n\tfor (const certPath of linuxCaCertificatePaths) {\n\t\ttry {\n\t\t\tconst content = await promisify(fs.readFile)(certPath, { encoding: 'utf8' });\n\t\t\tconst seen = {};\n\t\t\tconst certs = content.split(/(?=-----BEGIN CERTIFICATE-----)/g)\n\t\t\t\t.filter(pem => !!pem.length && !seen[pem] && (seen[pem] = true));\n\t\t\treturn {\n\t\t\t\tcerts,\n\t\t\t\tappend: false\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction derToPem(blob) {\n\tconst lines = ['-----BEGIN CERTIFICATE-----'];\n\tconst der = blob.toString('base64');\n\tfor (let i = 0; i < der.length; i += 64) {\n\t\tlines.push(der.substr(i, 64));\n\t}\n\tlines.push('-----END CERTIFICATE-----', '');\n\treturn lines.join(os.EOL);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport * as path from 'vs/base/common/path';\nimport * as glob from 'vs/base/common/glob';\nimport { normalizeNFD } from 'vs/base/common/normalization';\nimport * as objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport { isMacintosh as isMac } from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport { IFileQuery, IFolderQuery } from 'vs/workbench/services/search/common/search';\nimport { anchorGlob } from 'vs/workbench/services/search/node/ripgrepSearchUtils';\nimport { rgPath } from 'vscode-ripgrep';\n\n// If vscode-ripgrep is in an .asar file, then the binary is unpacked.\nconst rgDiskPath = rgPath.replace(/\\bnode_modules\\.asar\\b/, 'node_modules.asar.unpacked');\n\nexport function spawnRipgrepCmd(config: IFileQuery, folderQuery: IFolderQuery, includePattern?: glob.IExpression, excludePattern?: glob.IExpression) {\n\tconst rgArgs = getRgArgs(config, folderQuery, includePattern, excludePattern);\n\tconst cwd = folderQuery.folder.fsPath;\n\treturn {\n\t\tcmd: cp.spawn(rgDiskPath, rgArgs.args, { cwd }),\n\t\tsiblingClauses: rgArgs.siblingClauses,\n\t\trgArgs,\n\t\tcwd\n\t};\n}\n\nfunction getRgArgs(config: IFileQuery, folderQuery: IFolderQuery, includePattern?: glob.IExpression, excludePattern?: glob.IExpression) {\n\tconst args = ['--files', '--hidden', '--case-sensitive'];\n\n\t// includePattern can't have siblingClauses\n\tfoldersToIncludeGlobs([folderQuery], includePattern, false).forEach(globArg => {\n\t\tconst inclusion = anchorGlob(globArg);\n\t\targs.push('-g', inclusion);\n\t\tif (isMac) {\n\t\t\tconst normalized = normalizeNFD(inclusion);\n\t\t\tif (normalized !== inclusion) {\n\t\t\t\targs.push('-g', normalized);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst rgGlobs = foldersToRgExcludeGlobs([folderQuery], excludePattern, undefined, false);\n\trgGlobs.globArgs.forEach(globArg => {\n\t\tconst exclusion = `!${anchorGlob(globArg)}`;\n\t\targs.push('-g', exclusion);\n\t\tif (isMac) {\n\t\t\tconst normalized = normalizeNFD(exclusion);\n\t\t\tif (normalized !== exclusion) {\n\t\t\t\targs.push('-g', normalized);\n\t\t\t}\n\t\t}\n\t});\n\tif (folderQuery.disregardIgnoreFiles !== false) {\n\t\t// Don't use .gitignore or .ignore\n\t\targs.push('--no-ignore');\n\t} else {\n\t\targs.push('--no-ignore-parent');\n\t}\n\n\t// Follow symlinks\n\tif (!folderQuery.ignoreSymlinks) {\n\t\targs.push('--follow');\n\t}\n\n\tif (config.exists) {\n\t\targs.push('--quiet');\n\t}\n\n\targs.push('--no-config');\n\tif (folderQuery.disregardGlobalIgnoreFiles) {\n\t\targs.push('--no-ignore-global');\n\t}\n\n\treturn {\n\t\targs,\n\t\tsiblingClauses: rgGlobs.siblingClauses\n\t};\n}\n\nexport interface IRgGlobResult {\n\tglobArgs: string[];\n\tsiblingClauses: glob.IExpression;\n}\n\nexport function foldersToRgExcludeGlobs(folderQueries: IFolderQuery[], globalExclude?: glob.IExpression, excludesToSkip?: Set<string>, absoluteGlobs = true): IRgGlobResult {\n\tconst globArgs: string[] = [];\n\tlet siblingClauses: glob.IExpression = {};\n\tfolderQueries.forEach(folderQuery => {\n\t\tconst totalExcludePattern = objects.assign({}, folderQuery.excludePattern || {}, globalExclude || {});\n\t\tconst result = globExprsToRgGlobs(totalExcludePattern, absoluteGlobs ? folderQuery.folder.fsPath : undefined, excludesToSkip);\n\t\tglobArgs.push(...result.globArgs);\n\t\tif (result.siblingClauses) {\n\t\t\tsiblingClauses = objects.assign(siblingClauses, result.siblingClauses);\n\t\t}\n\t});\n\n\treturn { globArgs, siblingClauses };\n}\n\nexport function foldersToIncludeGlobs(folderQueries: IFolderQuery[], globalInclude?: glob.IExpression, absoluteGlobs = true): string[] {\n\tconst globArgs: string[] = [];\n\tfolderQueries.forEach(folderQuery => {\n\t\tconst totalIncludePattern = objects.assign({}, globalInclude || {}, folderQuery.includePattern || {});\n\t\tconst result = globExprsToRgGlobs(totalIncludePattern, absoluteGlobs ? folderQuery.folder.fsPath : undefined);\n\t\tglobArgs.push(...result.globArgs);\n\t});\n\n\treturn globArgs;\n}\n\nfunction globExprsToRgGlobs(patterns: glob.IExpression, folder?: string, excludesToSkip?: Set<string>): IRgGlobResult {\n\tconst globArgs: string[] = [];\n\tconst siblingClauses: glob.IExpression = {};\n\tObject.keys(patterns)\n\t\t.forEach(key => {\n\t\t\tif (excludesToSkip && excludesToSkip.has(key)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!key) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst value = patterns[key];\n\t\t\tkey = trimTrailingSlash(folder ? getAbsoluteGlob(folder, key) : key);\n\n\t\t\t// glob.ts requires forward slashes, but a UNC path still must start with \\\\\n\t\t\t// #38165 and #38151\n\t\t\tif (strings.startsWith(key, '\\\\\\\\')) {\n\t\t\t\tkey = '\\\\\\\\' + key.substr(2).replace(/\\\\/g, '/');\n\t\t\t} else {\n\t\t\t\tkey = key.replace(/\\\\/g, '/');\n\t\t\t}\n\n\t\t\tif (typeof value === 'boolean' && value) {\n\t\t\t\tif (strings.startsWith(key, '\\\\\\\\')) {\n\t\t\t\t\t// Absolute globs UNC paths don't work properly, see #58758\n\t\t\t\t\tkey += '**';\n\t\t\t\t}\n\n\t\t\t\tglobArgs.push(fixDriveC(key));\n\t\t\t} else if (value && value.when) {\n\t\t\t\tsiblingClauses[key] = value;\n\t\t\t}\n\t\t});\n\n\treturn { globArgs, siblingClauses };\n}\n\n/**\n * Resolves a glob like \"node_modules/**\" in \"/foo/bar\" to \"/foo/bar/node_modules/**\".\n * Special cases C:/foo paths to write the glob like /foo instead - see https://github.com/BurntSushi/ripgrep/issues/530.\n *\n * Exported for testing\n */\nexport function getAbsoluteGlob(folder: string, key: string): string {\n\treturn path.isAbsolute(key) ?\n\t\tkey :\n\t\tpath.join(folder, key);\n}\n\nfunction trimTrailingSlash(str: string): string {\n\tstr = strings.rtrim(str, '\\\\');\n\treturn strings.rtrim(str, '/');\n}\n\nexport function fixDriveC(path: string): string {\n\tconst root = extpath.getRoot(path);\n\treturn root.toLowerCase() === 'c:/' ?\n\t\tpath.replace(/^c:[/\\\\]/i, '/') :\n\t\tpath;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as childProcess from 'child_process';\nimport * as fs from 'fs';\nimport * as path from 'vs/base/common/path';\nimport { Readable } from 'stream';\nimport { NodeStringDecoder, StringDecoder } from 'string_decoder';\nimport * as arrays from 'vs/base/common/arrays';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport * as glob from 'vs/base/common/glob';\nimport * as normalization from 'vs/base/common/normalization';\nimport * as objects from 'vs/base/common/objects';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport * as platform from 'vs/base/common/platform';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport * as strings from 'vs/base/common/strings';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as extfs from 'vs/base/node/extfs';\nimport * as flow from 'vs/base/node/flow';\nimport { IFileQuery, IFolderQuery, IProgress, ISearchEngineStats, IRawFileMatch, ISearchEngine, ISearchEngineSuccess } from 'vs/workbench/services/search/common/search';\nimport { spawnRipgrepCmd } from './ripgrepFileSearch';\n\ninterface IDirectoryEntry {\n\tbase: string;\n\trelativePath: string;\n\tbasename: string;\n}\n\ninterface IDirectoryTree {\n\trootEntries: IDirectoryEntry[];\n\tpathToEntries: { [relativePath: string]: IDirectoryEntry[] };\n}\n\nconst killCmds = new Set<() => void>();\nprocess.on('exit', () => {\n\tkillCmds.forEach(cmd => cmd());\n});\n\nexport class FileWalker {\n\tprivate config: IFileQuery;\n\tprivate filePattern: string;\n\tprivate normalizedFilePatternLowercase: string;\n\tprivate includePattern: glob.ParsedExpression | undefined;\n\tprivate maxResults: number | null;\n\tprivate exists: boolean;\n\tprivate maxFilesize: number | null;\n\tprivate isLimitHit: boolean;\n\tprivate resultCount: number;\n\tprivate isCanceled: boolean;\n\tprivate fileWalkSW: StopWatch;\n\tprivate directoriesWalked: number;\n\tprivate filesWalked: number;\n\tprivate errors: string[];\n\tprivate cmdSW: StopWatch;\n\tprivate cmdResultCount: number;\n\n\tprivate folderExcludePatterns: Map<string, AbsoluteAndRelativeParsedExpression>;\n\tprivate globalExcludePattern: glob.ParsedExpression | undefined;\n\n\tprivate walkedPaths: { [path: string]: boolean; };\n\n\tconstructor(config: IFileQuery) {\n\t\tthis.config = config;\n\t\tthis.filePattern = config.filePattern || '';\n\t\tthis.includePattern = config.includePattern && glob.parse(config.includePattern);\n\t\tthis.maxResults = config.maxResults || null;\n\t\tthis.exists = !!config.exists;\n\t\tthis.walkedPaths = Object.create(null);\n\t\tthis.resultCount = 0;\n\t\tthis.isLimitHit = false;\n\t\tthis.directoriesWalked = 0;\n\t\tthis.filesWalked = 0;\n\t\tthis.errors = [];\n\n\t\tif (this.filePattern) {\n\t\t\tthis.normalizedFilePatternLowercase = strings.stripWildcards(this.filePattern).toLowerCase();\n\t\t}\n\n\t\tthis.globalExcludePattern = config.excludePattern && glob.parse(config.excludePattern);\n\t\tthis.folderExcludePatterns = new Map<string, AbsoluteAndRelativeParsedExpression>();\n\n\t\tconfig.folderQueries.forEach(folderQuery => {\n\t\t\tconst folderExcludeExpression: glob.IExpression = objects.assign({}, folderQuery.excludePattern || {}, this.config.excludePattern || {});\n\n\t\t\t// Add excludes for other root folders\n\t\t\tconst fqPath = folderQuery.folder.fsPath;\n\t\t\tconfig.folderQueries\n\t\t\t\t.map(rootFolderQuery => rootFolderQuery.folder.fsPath)\n\t\t\t\t.filter(rootFolder => rootFolder !== fqPath)\n\t\t\t\t.forEach(otherRootFolder => {\n\t\t\t\t\t// Exclude nested root folders\n\t\t\t\t\tif (isEqualOrParent(otherRootFolder, fqPath)) {\n\t\t\t\t\t\tfolderExcludeExpression[path.relative(fqPath, otherRootFolder)] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tthis.folderExcludePatterns.set(fqPath, new AbsoluteAndRelativeParsedExpression(folderExcludeExpression, fqPath));\n\t\t});\n\t}\n\n\tcancel(): void {\n\t\tthis.isCanceled = true;\n\t}\n\n\twalk(folderQueries: IFolderQuery[], extraFiles: URI[], onResult: (result: IRawFileMatch) => void, onMessage: (message: IProgress) => void, done: (error: Error | null, isLimitHit: boolean) => void): void {\n\t\tthis.fileWalkSW = StopWatch.create(false);\n\n\t\t// Support that the file pattern is a full path to a file that exists\n\t\tif (this.isCanceled) {\n\t\t\treturn done(null, this.isLimitHit);\n\t\t}\n\n\t\t// For each extra file\n\t\textraFiles.forEach(extraFilePath => {\n\t\t\tconst basename = path.basename(extraFilePath.fsPath);\n\t\t\tif (this.globalExcludePattern && this.globalExcludePattern(extraFilePath.fsPath, basename)) {\n\t\t\t\treturn; // excluded\n\t\t\t}\n\n\t\t\t// File: Check for match on file pattern and include pattern\n\t\t\tthis.matchFile(onResult, { relativePath: extraFilePath.fsPath /* no workspace relative path */, basename });\n\t\t});\n\n\t\tthis.cmdSW = StopWatch.create(false);\n\n\t\t// For each root folder\n\t\tflow.parallel<IFolderQuery, void>(folderQueries, (folderQuery: IFolderQuery, rootFolderDone: (err: Error | null, result: void) => void) => {\n\t\t\tthis.call(this.cmdTraversal, this, folderQuery, onResult, onMessage, (err?: Error) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconst errorMessage = toErrorMessage(err);\n\t\t\t\t\tconsole.error(errorMessage);\n\t\t\t\t\tthis.errors.push(errorMessage);\n\t\t\t\t\trootFolderDone(err, undefined);\n\t\t\t\t} else {\n\t\t\t\t\trootFolderDone(null, undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t}, (errors, result) => {\n\t\t\tthis.fileWalkSW.stop();\n\t\t\tconst err = errors ? arrays.coalesce(errors)[0] : null;\n\t\t\tdone(err, this.isLimitHit);\n\t\t});\n\t}\n\n\tprivate call<F extends Function>(fun: F, that: any, ...args: any[]): void {\n\t\ttry {\n\t\t\tfun.apply(that, args);\n\t\t} catch (e) {\n\t\t\targs[args.length - 1](e);\n\t\t}\n\t}\n\n\tprivate cmdTraversal(folderQuery: IFolderQuery, onResult: (result: IRawFileMatch) => void, onMessage: (message: IProgress) => void, cb: (err?: Error) => void): void {\n\t\tconst rootFolder = folderQuery.folder.fsPath;\n\t\tconst isMac = platform.isMacintosh;\n\t\tlet cmd: childProcess.ChildProcess;\n\t\tconst killCmd = () => cmd && cmd.kill();\n\t\tkillCmds.add(killCmd);\n\n\t\tlet done = (err?: Error) => {\n\t\t\tkillCmds.delete(killCmd);\n\t\t\tdone = () => { };\n\t\t\tcb(err);\n\t\t};\n\t\tlet leftover = '';\n\t\tconst tree = this.initDirectoryTree();\n\n\t\tlet noSiblingsClauses: boolean;\n\t\tconst ripgrep = spawnRipgrepCmd(this.config, folderQuery, this.config.includePattern, this.folderExcludePatterns.get(folderQuery.folder.fsPath)!.expression);\n\t\tcmd = ripgrep.cmd;\n\t\tnoSiblingsClauses = !Object.keys(ripgrep.siblingClauses).length;\n\n\t\tconst escapedArgs = ripgrep.rgArgs.args\n\t\t\t.map(arg => arg.match(/^-/) ? arg : `'${arg}'`)\n\t\t\t.join(' ');\n\n\t\tlet rgCmd = `rg ${escapedArgs}\\n - cwd: ${ripgrep.cwd}`;\n\t\tif (ripgrep.rgArgs.siblingClauses) {\n\t\t\trgCmd += `\\n - Sibling clauses: ${JSON.stringify(ripgrep.rgArgs.siblingClauses)}`;\n\t\t}\n\t\tonMessage({ message: rgCmd });\n\n\t\tthis.cmdResultCount = 0;\n\t\tthis.collectStdout(cmd, 'utf8', onMessage, (err: Error, stdout?: string, last?: boolean) => {\n\t\t\tif (err) {\n\t\t\t\tdone(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.isLimitHit) {\n\t\t\t\tdone();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\tconst normalized = leftover + (isMac ? normalization.normalizeNFC(stdout || '') : stdout);\n\t\t\tconst relativeFiles = normalized.split('\\n');\n\n\t\t\tif (last) {\n\t\t\t\tconst n = relativeFiles.length;\n\t\t\t\trelativeFiles[n - 1] = relativeFiles[n - 1].trim();\n\t\t\t\tif (!relativeFiles[n - 1]) {\n\t\t\t\t\trelativeFiles.pop();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tleftover = relativeFiles.pop() || '';\n\t\t\t}\n\n\t\t\tif (relativeFiles.length && relativeFiles[0].indexOf('\\n') !== -1) {\n\t\t\t\tdone(new Error('Splitting up files failed'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.cmdResultCount += relativeFiles.length;\n\n\t\t\tif (noSiblingsClauses) {\n\t\t\t\tfor (const relativePath of relativeFiles) {\n\t\t\t\t\tconst basename = path.basename(relativePath);\n\t\t\t\t\tthis.matchFile(onResult, { base: rootFolder, relativePath, basename });\n\t\t\t\t\tif (this.isLimitHit) {\n\t\t\t\t\t\tkillCmd();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (last || this.isLimitHit) {\n\t\t\t\t\tdone();\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// TODO: Optimize siblings clauses with ripgrep here.\n\t\t\tthis.addDirectoryEntries(tree, rootFolder, relativeFiles, onResult);\n\n\t\t\tif (last) {\n\t\t\t\tthis.matchDirectoryTree(tree, rootFolder, onResult);\n\t\t\t\tdone();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Public for testing.\n\t */\n\tspawnFindCmd(folderQuery: IFolderQuery) {\n\t\tconst excludePattern = this.folderExcludePatterns.get(folderQuery.folder.fsPath)!;\n\t\tconst basenames = excludePattern.getBasenameTerms();\n\t\tconst pathTerms = excludePattern.getPathTerms();\n\t\tconst args = ['-L', '.'];\n\t\tif (basenames.length || pathTerms.length) {\n\t\t\targs.push('-not', '(', '(');\n\t\t\tfor (const basename of basenames) {\n\t\t\t\targs.push('-name', basename);\n\t\t\t\targs.push('-o');\n\t\t\t}\n\t\t\tfor (const path of pathTerms) {\n\t\t\t\targs.push('-path', path);\n\t\t\t\targs.push('-o');\n\t\t\t}\n\t\t\targs.pop();\n\t\t\targs.push(')', '-prune', ')');\n\t\t}\n\t\targs.push('-type', 'f');\n\t\treturn childProcess.spawn('find', args, { cwd: folderQuery.folder.fsPath });\n\t}\n\n\t/**\n\t * Public for testing.\n\t */\n\treadStdout(cmd: childProcess.ChildProcess, encoding: string, cb: (err: Error | null, stdout?: string) => void): void {\n\t\tlet all = '';\n\t\tthis.collectStdout(cmd, encoding, () => { }, (err: Error, stdout?: string, last?: boolean) => {\n\t\t\tif (err) {\n\t\t\t\tcb(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tall += stdout;\n\t\t\tif (last) {\n\t\t\t\tcb(null, all);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate collectStdout(cmd: childProcess.ChildProcess, encoding: string, onMessage: (message: IProgress) => void, cb: (err: Error | null, stdout?: string, last?: boolean) => void): void {\n\t\tlet onData = (err: Error | null, stdout?: string, last?: boolean) => {\n\t\t\tif (err || last) {\n\t\t\t\tonData = () => { };\n\n\t\t\t\tif (this.cmdSW) {\n\t\t\t\t\tthis.cmdSW.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcb(err, stdout, last);\n\t\t};\n\n\t\tlet gotData = false;\n\t\tif (cmd.stdout) {\n\t\t\t// Should be non-null, but #38195\n\t\t\tthis.forwardData(cmd.stdout, encoding, onData);\n\t\t\tcmd.stdout.once('data', () => gotData = true);\n\t\t} else {\n\t\t\tonMessage({ message: 'stdout is null' });\n\t\t}\n\n\t\tlet stderr: Buffer[];\n\t\tif (cmd.stderr) {\n\t\t\t// Should be non-null, but #38195\n\t\t\tstderr = this.collectData(cmd.stderr);\n\t\t} else {\n\t\t\tonMessage({ message: 'stderr is null' });\n\t\t}\n\n\t\tcmd.on('error', (err: Error) => {\n\t\t\tonData(err);\n\t\t});\n\n\t\tcmd.on('close', (code: number) => {\n\t\t\t// ripgrep returns code=1 when no results are found\n\t\t\tlet stderrText: string;\n\t\t\tif (!gotData && (stderrText = this.decodeData(stderr, encoding)) && rgErrorMsgForDisplay(stderrText)) {\n\t\t\t\tonData(new Error(`command failed with error code ${code}: ${this.decodeData(stderr, encoding)}`));\n\t\t\t} else {\n\t\t\t\tif (this.exists && code === 0) {\n\t\t\t\t\tthis.isLimitHit = true;\n\t\t\t\t}\n\t\t\t\tonData(null, '', true);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate forwardData(stream: Readable, encoding: string, cb: (err: Error | null, stdout?: string) => void): NodeStringDecoder {\n\t\tconst decoder = new StringDecoder(encoding);\n\t\tstream.on('data', (data: Buffer) => {\n\t\t\tcb(null, decoder.write(data));\n\t\t});\n\t\treturn decoder;\n\t}\n\n\tprivate collectData(stream: Readable): Buffer[] {\n\t\tconst buffers: Buffer[] = [];\n\t\tstream.on('data', (data: Buffer) => {\n\t\t\tbuffers.push(data);\n\t\t});\n\t\treturn buffers;\n\t}\n\n\tprivate decodeData(buffers: Buffer[], encoding: string): string {\n\t\tconst decoder = new StringDecoder(encoding);\n\t\treturn buffers.map(buffer => decoder.write(buffer)).join('');\n\t}\n\n\tprivate initDirectoryTree(): IDirectoryTree {\n\t\tconst tree: IDirectoryTree = {\n\t\t\trootEntries: [],\n\t\t\tpathToEntries: Object.create(null)\n\t\t};\n\t\ttree.pathToEntries['.'] = tree.rootEntries;\n\t\treturn tree;\n\t}\n\n\tprivate addDirectoryEntries({ pathToEntries }: IDirectoryTree, base: string, relativeFiles: string[], onResult: (result: IRawFileMatch) => void) {\n\t\t// Support relative paths to files from a root resource (ignores excludes)\n\t\tif (relativeFiles.indexOf(this.filePattern) !== -1) {\n\t\t\tconst basename = path.basename(this.filePattern);\n\t\t\tthis.matchFile(onResult, { base: base, relativePath: this.filePattern, basename });\n\t\t}\n\n\t\tfunction add(relativePath: string) {\n\t\t\tconst basename = path.basename(relativePath);\n\t\t\tconst dirname = path.dirname(relativePath);\n\t\t\tlet entries = pathToEntries[dirname];\n\t\t\tif (!entries) {\n\t\t\t\tentries = pathToEntries[dirname] = [];\n\t\t\t\tadd(dirname);\n\t\t\t}\n\t\t\tentries.push({\n\t\t\t\tbase,\n\t\t\t\trelativePath,\n\t\t\t\tbasename\n\t\t\t});\n\t\t}\n\t\trelativeFiles.forEach(add);\n\t}\n\n\tprivate matchDirectoryTree({ rootEntries, pathToEntries }: IDirectoryTree, rootFolder: string, onResult: (result: IRawFileMatch) => void) {\n\t\tconst self = this;\n\t\tconst excludePattern = this.folderExcludePatterns.get(rootFolder)!;\n\t\tconst filePattern = this.filePattern;\n\t\tfunction matchDirectory(entries: IDirectoryEntry[]) {\n\t\t\tself.directoriesWalked++;\n\t\t\tconst hasSibling = glob.hasSiblingFn(() => entries.map(entry => entry.basename));\n\t\t\tfor (let i = 0, n = entries.length; i < n; i++) {\n\t\t\t\tconst entry = entries[i];\n\t\t\t\tconst { relativePath, basename } = entry;\n\n\t\t\t\t// Check exclude pattern\n\t\t\t\t// If the user searches for the exact file name, we adjust the glob matching\n\t\t\t\t// to ignore filtering by siblings because the user seems to know what she\n\t\t\t\t// is searching for and we want to include the result in that case anyway\n\t\t\t\tif (excludePattern.test(relativePath, basename, filePattern !== basename ? hasSibling : undefined)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst sub = pathToEntries[relativePath];\n\t\t\t\tif (sub) {\n\t\t\t\t\tmatchDirectory(sub);\n\t\t\t\t} else {\n\t\t\t\t\tself.filesWalked++;\n\t\t\t\t\tif (relativePath === filePattern) {\n\t\t\t\t\t\tcontinue; // ignore file if its path matches with the file pattern because that is already matched above\n\t\t\t\t\t}\n\n\t\t\t\t\tself.matchFile(onResult, entry);\n\t\t\t\t}\n\n\t\t\t\tif (self.isLimitHit) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmatchDirectory(rootEntries);\n\t}\n\n\tgetStats(): ISearchEngineStats {\n\t\treturn {\n\t\t\tcmdTime: this.cmdSW && this.cmdSW.elapsed(),\n\t\t\tfileWalkTime: this.fileWalkSW.elapsed(),\n\t\t\tdirectoriesWalked: this.directoriesWalked,\n\t\t\tfilesWalked: this.filesWalked,\n\t\t\tcmdResultCount: this.cmdResultCount\n\t\t};\n\t}\n\n\tprivate doWalk(folderQuery: IFolderQuery, relativeParentPath: string, files: string[], onResult: (result: IRawFileMatch) => void, done: (error?: Error) => void): void {\n\t\tconst rootFolder = folderQuery.folder;\n\n\t\t// Execute tasks on each file in parallel to optimize throughput\n\t\tconst hasSibling = glob.hasSiblingFn(() => files);\n\t\tflow.parallel(files, (file: string, clb: (error: Error | null, _?: any) => void): void => {\n\n\t\t\t// Check canceled\n\t\t\tif (this.isCanceled || this.isLimitHit) {\n\t\t\t\treturn clb(null);\n\t\t\t}\n\n\t\t\t// Check exclude pattern\n\t\t\t// If the user searches for the exact file name, we adjust the glob matching\n\t\t\t// to ignore filtering by siblings because the user seems to know what she\n\t\t\t// is searching for and we want to include the result in that case anyway\n\t\t\tconst currentRelativePath = relativeParentPath ? [relativeParentPath, file].join(path.sep) : file;\n\t\t\tif (this.folderExcludePatterns.get(folderQuery.folder.fsPath)!.test(currentRelativePath, file, this.config.filePattern !== file ? hasSibling : undefined)) {\n\t\t\t\treturn clb(null);\n\t\t\t}\n\n\t\t\t// Use lstat to detect links\n\t\t\tconst currentAbsolutePath = [rootFolder.fsPath, currentRelativePath].join(path.sep);\n\t\t\tfs.lstat(currentAbsolutePath, (error, lstat) => {\n\t\t\t\tif (error || this.isCanceled || this.isLimitHit) {\n\t\t\t\t\treturn clb(null);\n\t\t\t\t}\n\n\t\t\t\t// If the path is a link, we must instead use fs.stat() to find out if the\n\t\t\t\t// link is a directory or not because lstat will always return the stat of\n\t\t\t\t// the link which is always a file.\n\t\t\t\tthis.statLinkIfNeeded(currentAbsolutePath, lstat, (error, stat) => {\n\t\t\t\t\tif (error || this.isCanceled || this.isLimitHit) {\n\t\t\t\t\t\treturn clb(null);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Directory: Follow directories\n\t\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\t\tthis.directoriesWalked++;\n\n\t\t\t\t\t\t// to really prevent loops with links we need to resolve the real path of them\n\t\t\t\t\t\treturn this.realPathIfNeeded(currentAbsolutePath, lstat, (error, realpath) => {\n\t\t\t\t\t\t\tif (error || this.isCanceled || this.isLimitHit) {\n\t\t\t\t\t\t\t\treturn clb(null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trealpath = realpath || '';\n\t\t\t\t\t\t\tif (this.walkedPaths[realpath]) {\n\t\t\t\t\t\t\t\treturn clb(null); // escape when there are cycles (can happen with symlinks)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.walkedPaths[realpath] = true; // remember as walked\n\n\t\t\t\t\t\t\t// Continue walking\n\t\t\t\t\t\t\treturn extfs.readdir(currentAbsolutePath, (error: Error, children: string[]): void => {\n\t\t\t\t\t\t\t\tif (error || this.isCanceled || this.isLimitHit) {\n\t\t\t\t\t\t\t\t\treturn clb(null);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.doWalk(folderQuery, currentRelativePath, children, onResult, err => clb(err || null));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// File: Check for match on file pattern and include pattern\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.filesWalked++;\n\t\t\t\t\t\tif (currentRelativePath === this.filePattern) {\n\t\t\t\t\t\t\treturn clb(null, undefined); // ignore file if its path matches with the file pattern because checkFilePatternRelativeMatch() takes care of those\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.maxFilesize && types.isNumber(stat.size) && stat.size > this.maxFilesize) {\n\t\t\t\t\t\t\treturn clb(null, undefined); // ignore file if max file size is hit\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.matchFile(onResult, { base: rootFolder.fsPath, relativePath: currentRelativePath, basename: file, size: stat.size });\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unwind\n\t\t\t\t\treturn clb(null, undefined);\n\t\t\t\t});\n\t\t\t});\n\t\t}, (error: Error[]): void => {\n\t\t\tif (error) {\n\t\t\t\terror = arrays.coalesce(error); // find any error by removing null values first\n\t\t\t}\n\n\t\t\treturn done(error && error.length > 0 ? error[0] : undefined);\n\t\t});\n\t}\n\n\tprivate matchFile(onResult: (result: IRawFileMatch) => void, candidate: IRawFileMatch): void {\n\t\tif (this.isFilePatternMatch(candidate.relativePath) && (!this.includePattern || this.includePattern(candidate.relativePath, candidate.basename))) {\n\t\t\tthis.resultCount++;\n\n\t\t\tif (this.exists || (this.maxResults && this.resultCount > this.maxResults)) {\n\t\t\t\tthis.isLimitHit = true;\n\t\t\t}\n\n\t\t\tif (!this.isLimitHit) {\n\t\t\t\tonResult(candidate);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isFilePatternMatch(path: string): boolean {\n\n\t\t// Check for search pattern\n\t\tif (this.filePattern) {\n\t\t\tif (this.filePattern === '*') {\n\t\t\t\treturn true; // support the all-matching wildcard\n\t\t\t}\n\n\t\t\treturn strings.fuzzyContains(path, this.normalizedFilePatternLowercase);\n\t\t}\n\n\t\t// No patterns means we match all\n\t\treturn true;\n\t}\n\n\tprivate statLinkIfNeeded(path: string, lstat: fs.Stats, clb: (error: Error | null, stat: fs.Stats) => void): void {\n\t\tif (lstat.isSymbolicLink()) {\n\t\t\treturn fs.stat(path, clb); // stat the target the link points to\n\t\t}\n\n\t\treturn clb(null, lstat); // not a link, so the stat is already ok for us\n\t}\n\n\tprivate realPathIfNeeded(path: string, lstat: fs.Stats, clb: (error: Error | null, realpath?: string) => void): void {\n\t\tif (lstat.isSymbolicLink()) {\n\t\t\treturn fs.realpath(path, (error, realpath) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn clb(error);\n\t\t\t\t}\n\n\t\t\t\treturn clb(null, realpath);\n\t\t\t});\n\t\t}\n\n\t\treturn clb(null, path);\n\t}\n}\n\nexport class Engine implements ISearchEngine<IRawFileMatch> {\n\tprivate folderQueries: IFolderQuery[];\n\tprivate extraFiles: URI[];\n\tprivate walker: FileWalker;\n\n\tconstructor(config: IFileQuery) {\n\t\tthis.folderQueries = config.folderQueries;\n\t\tthis.extraFiles = config.extraFileResources || [];\n\n\t\tthis.walker = new FileWalker(config);\n\t}\n\n\tsearch(onResult: (result: IRawFileMatch) => void, onProgress: (progress: IProgress) => void, done: (error: Error, complete: ISearchEngineSuccess) => void): void {\n\t\tthis.walker.walk(this.folderQueries, this.extraFiles, onResult, onProgress, (err: Error, isLimitHit: boolean) => {\n\t\t\tdone(err, {\n\t\t\t\tlimitHit: isLimitHit,\n\t\t\t\tstats: this.walker.getStats()\n\t\t\t});\n\t\t});\n\t}\n\n\tcancel(): void {\n\t\tthis.walker.cancel();\n\t}\n}\n\n/**\n * This class exists to provide one interface on top of two ParsedExpressions, one for absolute expressions and one for relative expressions.\n * The absolute and relative expressions don't \"have\" to be kept separate, but this keeps us from having to path.join every single\n * file searched, it's only used for a text search with a searchPath\n */\nclass AbsoluteAndRelativeParsedExpression {\n\tprivate absoluteParsedExpr: glob.ParsedExpression | undefined;\n\tprivate relativeParsedExpr: glob.ParsedExpression | undefined;\n\n\tconstructor(public expression: glob.IExpression, private root: string) {\n\t\tthis.init(expression);\n\t}\n\n\t/**\n\t * Split the IExpression into its absolute and relative components, and glob.parse them separately.\n\t */\n\tprivate init(expr: glob.IExpression): void {\n\t\tlet absoluteGlobExpr: glob.IExpression | undefined;\n\t\tlet relativeGlobExpr: glob.IExpression | undefined;\n\t\tObject.keys(expr)\n\t\t\t.filter(key => expr[key])\n\t\t\t.forEach(key => {\n\t\t\t\tif (path.isAbsolute(key)) {\n\t\t\t\t\tabsoluteGlobExpr = absoluteGlobExpr || glob.getEmptyExpression();\n\t\t\t\t\tabsoluteGlobExpr[key] = expr[key];\n\t\t\t\t} else {\n\t\t\t\t\trelativeGlobExpr = relativeGlobExpr || glob.getEmptyExpression();\n\t\t\t\t\trelativeGlobExpr[key] = expr[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.absoluteParsedExpr = absoluteGlobExpr && glob.parse(absoluteGlobExpr, { trimForExclusions: true });\n\t\tthis.relativeParsedExpr = relativeGlobExpr && glob.parse(relativeGlobExpr, { trimForExclusions: true });\n\t}\n\n\ttest(_path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | Promise<string | null> | undefined | null {\n\t\treturn (this.relativeParsedExpr && this.relativeParsedExpr(_path, basename, hasSibling)) ||\n\t\t\t(this.absoluteParsedExpr && this.absoluteParsedExpr(path.join(this.root, _path), basename, hasSibling));\n\t}\n\n\tgetBasenameTerms(): string[] {\n\t\tconst basenameTerms: string[] = [];\n\t\tif (this.absoluteParsedExpr) {\n\t\t\tbasenameTerms.push(...glob.getBasenameTerms(this.absoluteParsedExpr));\n\t\t}\n\n\t\tif (this.relativeParsedExpr) {\n\t\t\tbasenameTerms.push(...glob.getBasenameTerms(this.relativeParsedExpr));\n\t\t}\n\n\t\treturn basenameTerms;\n\t}\n\n\tgetPathTerms(): string[] {\n\t\tconst pathTerms: string[] = [];\n\t\tif (this.absoluteParsedExpr) {\n\t\t\tpathTerms.push(...glob.getPathTerms(this.absoluteParsedExpr));\n\t\t}\n\n\t\tif (this.relativeParsedExpr) {\n\t\t\tpathTerms.push(...glob.getPathTerms(this.relativeParsedExpr));\n\t\t}\n\n\t\treturn pathTerms;\n\t}\n}\n\nexport function rgErrorMsgForDisplay(msg: string): string | undefined {\n\tconst lines = msg.trim().split('\\n');\n\tconst firstLine = lines[0].trim();\n\n\tif (strings.startsWith(firstLine, 'Error parsing regex')) {\n\t\treturn firstLine;\n\t}\n\n\tif (strings.startsWith(firstLine, 'regex parse error')) {\n\t\treturn strings.uppercaseFirstLetter(lines[lines.length - 1].trim());\n\t}\n\n\tif (strings.startsWith(firstLine, 'error parsing glob') ||\n\t\tstrings.startsWith(firstLine, 'unsupported encoding')) {\n\t\t// Uppercase first letter\n\t\treturn firstLine.charAt(0).toUpperCase() + firstLine.substr(1);\n\t}\n\n\tif (firstLine === `Literal '\\\\n' not allowed.`) {\n\t\t// I won't localize this because none of the Ripgrep error messages are localized\n\t\treturn `Literal '\\\\n' currently not supported`;\n\t}\n\n\tif (strings.startsWith(firstLine, 'Literal ')) {\n\t\t// Other unsupported chars\n\t\treturn firstLine;\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { EventEmitter } from 'events';\nimport * as path from 'vs/base/common/path';\nimport { NodeStringDecoder, StringDecoder } from 'string_decoder';\nimport { createRegExp, startsWith, startsWithUTF8BOM, stripUTF8BOM, escapeRegExpCharacters, endsWith } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtendedExtensionSearchOptions, SearchError, SearchErrorCode, serializeSearchError } from 'vs/workbench/services/search/common/search';\nimport * as vscode from 'vscode';\nimport { rgPath } from 'vscode-ripgrep';\nimport { anchorGlob, createTextSearchResult, IOutputChannel, Maybe, Range } from './ripgrepSearchUtils';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { splitGlobAware } from 'vs/base/common/glob';\nimport { groupBy } from 'vs/base/common/collections';\n\n// If vscode-ripgrep is in an .asar file, then the binary is unpacked.\nconst rgDiskPath = rgPath.replace(/\\bnode_modules\\.asar\\b/, 'node_modules.asar.unpacked');\n\nexport class RipgrepTextSearchEngine {\n\n\tconstructor(private outputChannel: IOutputChannel) { }\n\n\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\tthis.outputChannel.appendLine(`provideTextSearchResults ${query.pattern}, ${JSON.stringify({\n\t\t\t...options,\n\t\t\t...{\n\t\t\t\tfolder: options.folder.toString()\n\t\t\t}\n\t\t})}`);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttoken.onCancellationRequested(() => cancel());\n\n\t\t\tconst rgArgs = getRgArgs(query, options);\n\n\t\t\tconst cwd = options.folder.fsPath;\n\n\t\t\tconst escapedArgs = rgArgs\n\t\t\t\t.map(arg => arg.match(/^-/) ? arg : `'${arg}'`)\n\t\t\t\t.join(' ');\n\t\t\tthis.outputChannel.appendLine(`rg ${escapedArgs}\\n - cwd: ${cwd}`);\n\n\t\t\tlet rgProc: Maybe<cp.ChildProcess> = cp.spawn(rgDiskPath, rgArgs, { cwd });\n\t\t\trgProc.on('error', e => {\n\t\t\t\tconsole.error(e);\n\t\t\t\tthis.outputChannel.appendLine('Error: ' + (e && e.message));\n\t\t\t\treject(serializeSearchError(new SearchError(e && e.message, SearchErrorCode.rgProcessError)));\n\t\t\t});\n\n\t\t\tlet gotResult = false;\n\t\t\tconst ripgrepParser = new RipgrepParser(options.maxResults, cwd, options.previewOptions);\n\t\t\tripgrepParser.on('result', (match: vscode.TextSearchResult) => {\n\t\t\t\tgotResult = true;\n\t\t\t\tprogress.report(match);\n\t\t\t});\n\n\t\t\tlet isDone = false;\n\t\t\tconst cancel = () => {\n\t\t\t\tisDone = true;\n\n\t\t\t\tif (rgProc) {\n\t\t\t\t\trgProc.kill();\n\t\t\t\t}\n\n\t\t\t\tif (ripgrepParser) {\n\t\t\t\t\tripgrepParser.cancel();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet limitHit = false;\n\t\t\tripgrepParser.on('hitLimit', () => {\n\t\t\t\tlimitHit = true;\n\t\t\t\tcancel();\n\t\t\t});\n\n\t\t\trgProc.stdout.on('data', data => {\n\t\t\t\tripgrepParser.handleData(data);\n\t\t\t});\n\n\t\t\tlet gotData = false;\n\t\t\trgProc.stdout.once('data', () => gotData = true);\n\n\t\t\tlet stderr = '';\n\t\t\trgProc.stderr.on('data', data => {\n\t\t\t\tconst message = data.toString();\n\t\t\t\tthis.outputChannel.appendLine(message);\n\t\t\t\tstderr += message;\n\t\t\t});\n\n\t\t\trgProc.on('close', () => {\n\t\t\t\tthis.outputChannel.appendLine(gotData ? 'Got data from stdout' : 'No data from stdout');\n\t\t\t\tthis.outputChannel.appendLine(gotResult ? 'Got result from parser' : 'No result from parser');\n\t\t\t\tthis.outputChannel.appendLine('');\n\t\t\t\tif (isDone) {\n\t\t\t\t\tresolve({ limitHit });\n\t\t\t\t} else {\n\t\t\t\t\t// Trigger last result\n\t\t\t\t\tripgrepParser.flush();\n\t\t\t\t\trgProc = null;\n\t\t\t\t\tlet searchError: Maybe<SearchError>;\n\t\t\t\t\tif (stderr && !gotData && (searchError = rgErrorMsgForDisplay(stderr))) {\n\t\t\t\t\t\treject(serializeSearchError(new SearchError(searchError.message, searchError.code)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ limitHit });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * Read the first line of stderr and return an error for display or undefined, based on a whitelist.\n * Ripgrep produces stderr output which is not from a fatal error, and we only want the search to be\n * \"failed\" when a fatal error was produced.\n */\nexport function rgErrorMsgForDisplay(msg: string): Maybe<SearchError> {\n\tconst firstLine = msg.split('\\n')[0].trim();\n\n\tif (startsWith(firstLine, 'regex parse error')) {\n\t\treturn new SearchError('Regex parse error', SearchErrorCode.regexParseError);\n\t}\n\n\tconst match = firstLine.match(/grep config error: unknown encoding: (.*)/);\n\tif (match) {\n\t\treturn new SearchError(`Unknown encoding: ${match[1]}`, SearchErrorCode.unknownEncoding);\n\t}\n\n\tif (startsWith(firstLine, 'error parsing glob')) {\n\t\t// Uppercase first letter\n\t\treturn new SearchError(firstLine.charAt(0).toUpperCase() + firstLine.substr(1), SearchErrorCode.globParseError);\n\t}\n\n\tif (startsWith(firstLine, 'the literal')) {\n\t\t// Uppercase first letter\n\t\treturn new SearchError(firstLine.charAt(0).toUpperCase() + firstLine.substr(1), SearchErrorCode.invalidLiteral);\n\t}\n\n\treturn undefined;\n}\n\nexport class RipgrepParser extends EventEmitter {\n\tprivate remainder = '';\n\tprivate isDone = false;\n\tprivate hitLimit = false;\n\tprivate stringDecoder: NodeStringDecoder;\n\n\tprivate numResults = 0;\n\n\tconstructor(private maxResults: number, private rootFolder: string, private previewOptions?: vscode.TextSearchPreviewOptions) {\n\t\tsuper();\n\t\tthis.stringDecoder = new StringDecoder();\n\t}\n\n\tcancel(): void {\n\t\tthis.isDone = true;\n\t}\n\n\tflush(): void {\n\t\tthis.handleDecodedData(this.stringDecoder.end());\n\t}\n\n\n\ton(event: 'result', listener: (result: vscode.TextSearchResult) => void);\n\ton(event: 'hitLimit', listener: () => void);\n\ton(event: string, listener: (...args: any[]) => void) {\n\t\tsuper.on(event, listener);\n\t}\n\n\thandleData(data: Buffer | string): void {\n\t\tif (this.isDone) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataStr = typeof data === 'string' ? data : this.stringDecoder.write(data);\n\t\tthis.handleDecodedData(dataStr);\n\t}\n\n\tprivate handleDecodedData(decodedData: string): void {\n\t\t// check for newline before appending to remainder\n\t\tlet newlineIdx = decodedData.indexOf('\\n');\n\n\t\t// If the previous data chunk didn't end in a newline, prepend it to this chunk\n\t\tconst dataStr = this.remainder + decodedData;\n\n\t\tif (newlineIdx >= 0) {\n\t\t\tnewlineIdx += this.remainder.length;\n\t\t} else {\n\t\t\t// Shortcut\n\t\t\tthis.remainder = dataStr;\n\t\t\treturn;\n\t\t}\n\n\t\tlet prevIdx = 0;\n\t\twhile (newlineIdx >= 0) {\n\t\t\tthis.handleLine(dataStr.substring(prevIdx, newlineIdx).trim());\n\t\t\tprevIdx = newlineIdx + 1;\n\t\t\tnewlineIdx = dataStr.indexOf('\\n', prevIdx);\n\t\t}\n\n\t\tthis.remainder = dataStr.substring(prevIdx).trim();\n\t}\n\n\tprivate handleLine(outputLine: string): void {\n\t\tif (this.isDone || !outputLine) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet parsedLine: IRgMessage;\n\t\ttry {\n\t\t\tparsedLine = JSON.parse(outputLine);\n\t\t} catch (e) {\n\t\t\tthrow new Error(`malformed line from rg: ${outputLine}`);\n\t\t}\n\n\t\tif (parsedLine.type === 'match') {\n\t\t\tconst matchPath = bytesOrTextToString(parsedLine.data.path);\n\t\t\tconst uri = URI.file(path.join(this.rootFolder, matchPath));\n\t\t\tconst result = this.createTextSearchMatch(parsedLine.data, uri);\n\t\t\tthis.onResult(result);\n\n\t\t\tif (this.hitLimit) {\n\t\t\t\tthis.cancel();\n\t\t\t\tthis.emit('hitLimit');\n\t\t\t}\n\t\t} else if (parsedLine.type === 'context') {\n\t\t\tconst contextPath = bytesOrTextToString(parsedLine.data.path);\n\t\t\tconst uri = URI.file(path.join(this.rootFolder, contextPath));\n\t\t\tconst result = this.createTextSearchContext(parsedLine.data, uri);\n\t\t\tresult.forEach(r => this.onResult(r));\n\t\t}\n\t}\n\n\tprivate createTextSearchMatch(data: IRgMatch, uri: vscode.Uri): vscode.TextSearchMatch {\n\t\tconst lineNumber = data.line_number - 1;\n\t\tlet isBOMStripped = false;\n\t\tlet fullText = bytesOrTextToString(data.lines);\n\t\tif (lineNumber === 0 && startsWithUTF8BOM(fullText)) {\n\t\t\tisBOMStripped = true;\n\t\t\tfullText = stripUTF8BOM(fullText);\n\t\t}\n\t\tconst fullTextBytes = Buffer.from(fullText);\n\n\t\tlet prevMatchEnd = 0;\n\t\tlet prevMatchEndCol = 0;\n\t\tlet prevMatchEndLine = lineNumber;\n\t\tconst ranges = coalesce(data.submatches.map((match, i) => {\n\t\t\tif (this.hitLimit) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis.numResults++;\n\t\t\tif (this.numResults >= this.maxResults) {\n\t\t\t\t// Finish the line, then report the result below\n\t\t\t\tthis.hitLimit = true;\n\t\t\t}\n\n\t\t\tlet matchText = bytesOrTextToString(match.match);\n\t\t\tif (lineNumber === 0 && i === 0 && isBOMStripped) {\n\t\t\t\tmatchText = stripUTF8BOM(matchText);\n\t\t\t\tmatch.start = match.start <= 3 ? 0 : match.start - 3;\n\t\t\t\tmatch.end = match.end <= 3 ? 0 : match.end - 3;\n\t\t\t}\n\t\t\tconst inBetweenChars = fullTextBytes.slice(prevMatchEnd, match.start).toString().length;\n\t\t\tlet startCol = prevMatchEndCol + inBetweenChars;\n\n\t\t\tconst stats = getNumLinesAndLastNewlineLength(matchText);\n\t\t\tconst startLineNumber = prevMatchEndLine;\n\t\t\tconst endLineNumber = stats.numLines + startLineNumber;\n\t\t\tlet endCol = stats.numLines > 0 ?\n\t\t\t\tstats.lastLineLength :\n\t\t\t\tstats.lastLineLength + startCol;\n\n\t\t\tprevMatchEnd = match.end;\n\t\t\tprevMatchEndCol = endCol;\n\t\t\tprevMatchEndLine = endLineNumber;\n\n\t\t\treturn new Range(startLineNumber, startCol, endLineNumber, endCol);\n\t\t}));\n\n\t\treturn createTextSearchResult(uri, fullText, <Range[]>ranges, this.previewOptions);\n\t}\n\n\tprivate createTextSearchContext(data: IRgMatch, uri: URI): vscode.TextSearchContext[] {\n\t\tconst text = bytesOrTextToString(data.lines);\n\t\tconst startLine = data.line_number;\n\t\treturn text\n\t\t\t.replace(/\\r?\\n$/, '')\n\t\t\t.split('\\n')\n\t\t\t.map((line, i) => {\n\t\t\t\treturn {\n\t\t\t\t\ttext: line,\n\t\t\t\t\turi,\n\t\t\t\t\tlineNumber: startLine + i\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tprivate onResult(match: vscode.TextSearchResult): void {\n\t\tthis.emit('result', match);\n\t}\n}\n\nfunction bytesOrTextToString(obj: any): string {\n\treturn obj.bytes ?\n\t\tBuffer.from(obj.bytes, 'base64').toString() :\n\t\tobj.text;\n}\n\nfunction getNumLinesAndLastNewlineLength(text: string): { numLines: number, lastLineLength: number } {\n\tconst re = /\\n/g;\n\tlet numLines = 0;\n\tlet lastNewlineIdx = -1;\n\tlet match: ReturnType<typeof re.exec>;\n\twhile (match = re.exec(text)) {\n\t\tnumLines++;\n\t\tlastNewlineIdx = match.index;\n\t}\n\n\tconst lastLineLength = lastNewlineIdx >= 0 ?\n\t\ttext.length - lastNewlineIdx - 1 :\n\t\ttext.length;\n\n\treturn { numLines, lastLineLength };\n}\n\nfunction getRgArgs(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions): string[] {\n\tconst args = ['--hidden'];\n\targs.push(query.isCaseSensitive ? '--case-sensitive' : '--ignore-case');\n\n\tconst { doubleStarIncludes, otherIncludes } = groupBy(\n\t\toptions.includes,\n\t\t(include: string) => startsWith(include, '**') ? 'doubleStarIncludes' : 'otherIncludes');\n\n\tif (otherIncludes && otherIncludes.length) {\n\t\tconst uniqueOthers = new Set<string>();\n\t\totherIncludes.forEach(other => {\n\t\t\tif (!endsWith(other, '/**')) {\n\t\t\t\tother += '/**';\n\t\t\t}\n\n\t\t\tuniqueOthers.add(other);\n\t\t});\n\n\t\targs.push('-g', '!*');\n\t\tuniqueOthers\n\t\t\t.forEach(otherIncude => {\n\t\t\t\tspreadGlobComponents(otherIncude)\n\t\t\t\t\t.map(anchorGlob)\n\t\t\t\t\t.forEach(globArg => {\n\t\t\t\t\t\targs.push('-g', globArg);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tif (doubleStarIncludes && doubleStarIncludes.length) {\n\t\tdoubleStarIncludes.forEach(globArg => {\n\t\t\targs.push('-g', globArg);\n\t\t});\n\t}\n\n\toptions.excludes\n\t\t.map(anchorGlob)\n\t\t.forEach(rgGlob => args.push('-g', `!${rgGlob}`));\n\n\tif (options.maxFileSize) {\n\t\targs.push('--max-filesize', options.maxFileSize + '');\n\t}\n\n\tif (options.useIgnoreFiles) {\n\t\targs.push('--no-ignore-parent');\n\t} else {\n\t\t// Don't use .gitignore or .ignore\n\t\targs.push('--no-ignore');\n\t}\n\n\tif (options.followSymlinks) {\n\t\targs.push('--follow');\n\t}\n\n\tif (options.encoding && options.encoding !== 'utf8') {\n\t\targs.push('--encoding', options.encoding);\n\t}\n\n\tlet pattern = query.pattern;\n\n\t// Ripgrep handles -- as a -- arg separator. Only --.\n\t// - is ok, --- is ok, --some-flag is also ok. Need to special case.\n\tif (pattern === '--') {\n\t\tquery.isRegExp = true;\n\t\tpattern = '\\\\-\\\\-';\n\t}\n\n\tif (query.isMultiline && !query.isRegExp) {\n\t\tquery.pattern = escapeRegExpCharacters(query.pattern);\n\t\tquery.isRegExp = true;\n\t}\n\n\tif ((<IExtendedExtensionSearchOptions>options).usePCRE2) {\n\t\targs.push('--pcre2');\n\n\t\tif (query.isRegExp) {\n\t\t\tpattern = unicodeEscapesToPCRE2(pattern);\n\t\t}\n\t}\n\n\tlet searchPatternAfterDoubleDashes: Maybe<string>;\n\tif (query.isWordMatch) {\n\t\tconst regexp = createRegExp(pattern, !!query.isRegExp, { wholeWord: query.isWordMatch });\n\t\tconst regexpStr = regexp.source.replace(/\\\\\\//g, '/'); // RegExp.source arbitrarily returns escaped slashes. Search and destroy.\n\t\targs.push('--regexp', regexpStr);\n\t} else if (query.isRegExp) {\n\t\tlet fixedRegexpQuery = fixRegexEndingPattern(query.pattern);\n\t\tfixedRegexpQuery = fixRegexNewline(fixedRegexpQuery);\n\t\tfixedRegexpQuery = fixNewline(fixedRegexpQuery);\n\t\tfixedRegexpQuery = fixRegexCRMatchingNonWordClass(fixedRegexpQuery, !!query.isMultiline);\n\t\tfixedRegexpQuery = fixRegexCRMatchingWhitespaceClass(fixedRegexpQuery, !!query.isMultiline);\n\t\targs.push('--regexp', fixedRegexpQuery);\n\t} else {\n\t\tsearchPatternAfterDoubleDashes = pattern;\n\t\targs.push('--fixed-strings');\n\t}\n\n\targs.push('--no-config');\n\tif (!options.useGlobalIgnoreFiles) {\n\t\targs.push('--no-ignore-global');\n\t}\n\n\targs.push('--json');\n\n\tif (query.isMultiline) {\n\t\targs.push('--multiline');\n\t}\n\n\tif (options.beforeContext) {\n\t\targs.push('--before-context', options.beforeContext + '');\n\t}\n\n\tif (options.afterContext) {\n\t\targs.push('--after-context', options.afterContext + '');\n\t}\n\n\t// Folder to search\n\targs.push('--');\n\n\tif (searchPatternAfterDoubleDashes) {\n\t\t// Put the query after --, in case the query starts with a dash\n\t\targs.push(searchPatternAfterDoubleDashes);\n\t}\n\n\targs.push('.');\n\n\treturn args;\n}\n\n/**\n * `\"foo/*bar/something\"` -> `[\"foo\", \"foo/*bar\", \"foo/*bar/something\", \"foo/*bar/something/**\"]`\n */\nexport function spreadGlobComponents(globArg: string): string[] {\n\tconst components = splitGlobAware(globArg, '/');\n\tif (components[components.length - 1] !== '**') {\n\t\tcomponents.push('**');\n\t}\n\n\treturn components.map((_, i) => components.slice(0, i + 1).join('/'));\n}\n\nexport function unicodeEscapesToPCRE2(pattern: string): string {\n\tconst reg = /((?:[^\\\\]|^)(?:\\\\\\\\)*)\\\\u([a-z0-9]{4})(?!\\d)/g;\n\t// Replace an unescaped $ at the end of the pattern with \\r?$\n\t// Match $ preceeded by none or even number of literal \\\n\twhile (pattern.match(reg)) {\n\t\tpattern = pattern.replace(reg, `$1\\\\x{$2}`);\n\t}\n\n\treturn pattern;\n}\n\nexport interface IRgMessage {\n\ttype: 'match' | 'context' | string;\n\tdata: IRgMatch;\n}\n\nexport interface IRgMatch {\n\tpath: IRgBytesOrText;\n\tlines: IRgBytesOrText;\n\tline_number: number;\n\tabsolute_offset: number;\n\tsubmatches: IRgSubmatch[];\n}\n\nexport interface IRgSubmatch {\n\tmatch: IRgBytesOrText;\n\tstart: number;\n\tend: number;\n}\n\nexport type IRgBytesOrText = { bytes: string } | { text: string };\n\nexport function fixRegexEndingPattern(pattern: string): string {\n\t// Replace an unescaped $ at the end of the pattern with \\r?$\n\t// Match $ preceeded by none or even number of literal \\\n\treturn pattern.match(/([^\\\\]|^)(\\\\\\\\)*\\$$/) ?\n\t\tpattern.replace(/\\$$/, '\\\\r?$') :\n\t\tpattern;\n}\n\nexport function fixRegexNewline(pattern: string): string {\n\t// Replace an unescaped $ at the end of the pattern with \\r?$\n\t// Match $ preceeded by none or even number of literal \\\n\treturn pattern.replace(/([^\\\\]|^)(\\\\\\\\)*\\\\n/g, '$1$2\\\\r?\\\\n');\n}\n\nexport function fixRegexCRMatchingWhitespaceClass(pattern: string, isMultiline: boolean): string {\n\treturn isMultiline ?\n\t\tpattern.replace(/([^\\\\]|^)((?:\\\\\\\\)*)\\\\s/g, '$1$2(\\\\r?\\\\n|[^\\\\S\\\\r])') :\n\t\tpattern.replace(/([^\\\\]|^)((?:\\\\\\\\)*)\\\\s/g, '$1$2[ \\\\t\\\\f]');\n}\n\nexport function fixRegexCRMatchingNonWordClass(pattern: string, isMultiline: boolean): string {\n\treturn isMultiline ?\n\t\tpattern.replace(/([^\\\\]|^)((?:\\\\\\\\)*)\\\\W/g, '$1$2(\\\\r?\\\\n|[^\\\\w\\\\r])') :\n\t\tpattern.replace(/([^\\\\]|^)((?:\\\\\\\\)*)\\\\W/g, '$1$2[^\\\\w\\\\r]');\n}\n\nexport function fixNewline(pattern: string): string {\n\treturn pattern.replace(/\\n/g, '\\\\r?\\\\n');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { OutputChannel } from 'vs/workbench/services/search/node/ripgrepSearchUtils';\nimport { RipgrepTextSearchEngine } from 'vs/workbench/services/search/node/ripgrepTextSearchEngine';\nimport * as vscode from 'vscode';\n\nexport class RipgrepSearchProvider implements vscode.TextSearchProvider {\n\tprivate inProgress: Set<vscode.CancellationTokenSource> = new Set();\n\n\tconstructor(private outputChannel: OutputChannel) {\n\t\tprocess.once('exit', () => this.dispose());\n\t}\n\n\tprovideTextSearchResults(query: vscode.TextSearchQuery, options: vscode.TextSearchOptions, progress: vscode.Progress<vscode.TextSearchResult>, token: vscode.CancellationToken): Promise<vscode.TextSearchComplete> {\n\t\tconst engine = new RipgrepTextSearchEngine(this.outputChannel);\n\t\treturn this.withToken(token, token => engine.provideTextSearchResults(query, options, progress, token));\n\t}\n\n\tprivate async withToken<T>(token: vscode.CancellationToken, fn: (token: vscode.CancellationToken) => Promise<T>): Promise<T> {\n\t\tconst merged = mergedTokenSource(token);\n\t\tthis.inProgress.add(merged);\n\t\tconst result = await fn(merged.token);\n\t\tthis.inProgress.delete(merged);\n\n\t\treturn result;\n\t}\n\n\tprivate dispose() {\n\t\tthis.inProgress.forEach(engine => engine.cancel());\n\t}\n}\n\nfunction mergedTokenSource(token: vscode.CancellationToken): vscode.CancellationTokenSource {\n\tconst tokenSource = new CancellationTokenSource();\n\ttoken.onCancellationRequested(() => tokenSource.cancel());\n\n\treturn tokenSource;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as extfs from 'vs/base/node/extfs';\nimport { IFileMatch, IProgress, ITextQuery, ITextSearchStats, ITextSearchMatch, ISerializedFileMatch, ISerializedSearchSuccess } from 'vs/workbench/services/search/common/search';\nimport { RipgrepTextSearchEngine } from 'vs/workbench/services/search/node/ripgrepTextSearchEngine';\nimport { TextSearchManager } from 'vs/workbench/services/search/node/textSearchManager';\n\nexport class TextSearchEngineAdapter {\n\n\tconstructor(private query: ITextQuery) {\n\t}\n\n\tsearch(token: CancellationToken, onResult: (matches: ISerializedFileMatch[]) => void, onMessage: (message: IProgress) => void): Promise<ISerializedSearchSuccess> {\n\t\tif ((!this.query.folderQueries || !this.query.folderQueries.length) && (!this.query.extraFileResources || !this.query.extraFileResources.length)) {\n\t\t\treturn Promise.resolve(<ISerializedSearchSuccess>{\n\t\t\t\ttype: 'success',\n\t\t\t\tlimitHit: false,\n\t\t\t\tstats: <ITextSearchStats>{\n\t\t\t\t\ttype: 'searchProcess'\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst pretendOutputChannel = {\n\t\t\tappendLine(msg) {\n\t\t\t\tonMessage({ message: msg });\n\t\t\t}\n\t\t};\n\t\tconst textSearchManager = new TextSearchManager(this.query, new RipgrepTextSearchEngine(pretendOutputChannel), extfs);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treturn textSearchManager\n\t\t\t\t.search(\n\t\t\t\t\tmatches => {\n\t\t\t\t\t\tonResult(matches.map(fileMatchToSerialized));\n\t\t\t\t\t},\n\t\t\t\t\ttoken)\n\t\t\t\t.then(\n\t\t\t\t\tc => resolve({ limitHit: c.limitHit, stats: null, type: 'success' } as ISerializedSearchSuccess),\n\t\t\t\t\treject);\n\t\t});\n\t}\n}\n\nfunction fileMatchToSerialized(match: IFileMatch): ISerializedFileMatch {\n\treturn {\n\t\tpath: match.resource ? match.resource.fsPath : undefined,\n\t\tresults: match.results,\n\t\tnumMatches: (match.results || []).reduce((sum, r) => {\n\t\t\tif (!!(<ITextSearchMatch>r).ranges) {\n\t\t\t\tconst m = <ITextSearchMatch>r;\n\t\t\t\treturn sum + (Array.isArray(m.ranges) ? m.ranges.length : 1);\n\t\t\t} else {\n\t\t\t\treturn sum + 1;\n\t\t\t}\n\t\t}, 0)\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// import * as fs from 'fs';\n// import * as gracefulFs from 'graceful-fs';\nimport { join, sep } from 'vs/base/common/path';\nimport * as arrays from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as objects from 'vs/base/common/objects';\nimport { StopWatch } from 'vs/base/common/stopwatch';\nimport * as strings from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { compareItemsByScore, IItemAccessor, prepareQuery, ScorerCache } from 'vs/base/parts/quickopen/common/quickOpenScorer';\nimport { MAX_FILE_SIZE } from 'vs/platform/files/node/files';\nimport { ICachedSearchStats, IFileQuery, IFileSearchStats, IFolderQuery, IProgress, IRawFileQuery, IRawQuery, IRawTextQuery, ITextQuery, IFileSearchProgressItem, IRawFileMatch, IRawSearchService, ISearchEngine, ISearchEngineSuccess, ISerializedFileMatch, ISerializedSearchComplete, ISerializedSearchProgressItem, ISerializedSearchSuccess } from 'vs/workbench/services/search/common/search';\nimport { Engine as FileSearchEngine } from 'vs/workbench/services/search/node/fileSearch';\nimport { TextSearchEngineAdapter } from 'vs/workbench/services/search/node/textSearchAdapter';\n\n// gracefulFs.gracefulify(fs);\n\ntype IProgressCallback = (p: ISerializedSearchProgressItem) => void;\ntype IFileProgressCallback = (p: IFileSearchProgressItem) => void;\n\nexport class SearchService implements IRawSearchService {\n\n\tprivate static readonly BATCH_SIZE = 512;\n\n\tprivate caches: { [cacheKey: string]: Cache; } = Object.create(null);\n\n\tfileSearch(config: IRawFileQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete> {\n\t\tlet promise: CancelablePromise<ISerializedSearchSuccess>;\n\n\t\tconst query = reviveQuery(config);\n\t\tconst emitter = new Emitter<ISerializedSearchProgressItem | ISerializedSearchComplete>({\n\t\t\tonFirstListenerDidAdd: () => {\n\t\t\t\tpromise = createCancelablePromise(token => {\n\t\t\t\t\treturn this.doFileSearchWithEngine(FileSearchEngine, query, p => emitter.fire(p), token);\n\t\t\t\t});\n\n\t\t\t\tpromise.then(\n\t\t\t\t\tc => emitter.fire(c),\n\t\t\t\t\terr => emitter.fire({ type: 'error', error: { message: err.message, stack: err.stack } }));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\ttextSearch(rawQuery: IRawTextQuery): Event<ISerializedSearchProgressItem | ISerializedSearchComplete> {\n\t\tlet promise: CancelablePromise<ISerializedSearchComplete>;\n\n\t\tconst query = reviveQuery(rawQuery);\n\t\tconst emitter = new Emitter<ISerializedSearchProgressItem | ISerializedSearchComplete>({\n\t\t\tonFirstListenerDidAdd: () => {\n\t\t\t\tpromise = createCancelablePromise(token => {\n\t\t\t\t\treturn this.ripgrepTextSearch(query, p => emitter.fire(p), token);\n\t\t\t\t});\n\n\t\t\t\tpromise.then(\n\t\t\t\t\tc => emitter.fire(c),\n\t\t\t\t\terr => emitter.fire({ type: 'error', error: { message: err.message, stack: err.stack } }));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate ripgrepTextSearch(config: ITextQuery, progressCallback: IProgressCallback, token: CancellationToken): Promise<ISerializedSearchSuccess> {\n\t\tconfig.maxFileSize = MAX_FILE_SIZE;\n\t\tconst engine = new TextSearchEngineAdapter(config);\n\n\t\treturn engine.search(token, progressCallback, progressCallback);\n\t}\n\n\tdoFileSearch(config: IFileQuery, progressCallback: IProgressCallback, token?: CancellationToken): Promise<ISerializedSearchSuccess> {\n\t\treturn this.doFileSearchWithEngine(FileSearchEngine, config, progressCallback, token);\n\t}\n\n\tdoFileSearchWithEngine(EngineClass: { new(config: IFileQuery): ISearchEngine<IRawFileMatch>; }, config: IFileQuery, progressCallback: IProgressCallback, token?: CancellationToken, batchSize = SearchService.BATCH_SIZE): Promise<ISerializedSearchSuccess> {\n\t\tlet resultCount = 0;\n\t\tconst fileProgressCallback: IFileProgressCallback = progress => {\n\t\t\tif (Array.isArray(progress)) {\n\t\t\t\tresultCount += progress.length;\n\t\t\t\tprogressCallback(progress.map(m => this.rawMatchToSearchItem(m)));\n\t\t\t} else if ((<IRawFileMatch>progress).relativePath) {\n\t\t\t\tresultCount++;\n\t\t\t\tprogressCallback(this.rawMatchToSearchItem(<IRawFileMatch>progress));\n\t\t\t} else {\n\t\t\t\tprogressCallback(<IProgress>progress);\n\t\t\t}\n\t\t};\n\n\t\tif (config.sortByScore) {\n\t\t\tlet sortedSearch = this.trySortedSearchFromCache(config, fileProgressCallback, token);\n\t\t\tif (!sortedSearch) {\n\t\t\t\tconst walkerConfig = config.maxResults ? objects.assign({}, config, { maxResults: null }) : config;\n\t\t\t\tconst engine = new EngineClass(walkerConfig);\n\t\t\t\tsortedSearch = this.doSortedSearch(engine, config, progressCallback, fileProgressCallback, token);\n\t\t\t}\n\n\t\t\treturn new Promise<ISerializedSearchSuccess>((c, e) => {\n\t\t\t\tsortedSearch!.then(([result, rawMatches]) => {\n\t\t\t\t\tconst serializedMatches = rawMatches.map(rawMatch => this.rawMatchToSearchItem(rawMatch));\n\t\t\t\t\tthis.sendProgress(serializedMatches, progressCallback, batchSize);\n\t\t\t\t\tc(result);\n\t\t\t\t}, e);\n\t\t\t});\n\t\t}\n\n\t\tconst engine = new EngineClass(config);\n\n\t\treturn this.doSearch(engine, fileProgressCallback, batchSize, token).then(complete => {\n\t\t\treturn <ISerializedSearchSuccess>{\n\t\t\t\tlimitHit: complete.limitHit,\n\t\t\t\ttype: 'success',\n\t\t\t\tstats: {\n\t\t\t\t\tdetailStats: complete.stats,\n\t\t\t\t\ttype: 'searchProcess',\n\t\t\t\t\tfromCache: false,\n\t\t\t\t\tresultCount,\n\t\t\t\t\tsortingTime: undefined\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate rawMatchToSearchItem(match: IRawFileMatch): ISerializedFileMatch {\n\t\treturn { path: match.base ? join(match.base, match.relativePath) : match.relativePath };\n\t}\n\n\tprivate doSortedSearch(engine: ISearchEngine<IRawFileMatch>, config: IFileQuery, progressCallback: IProgressCallback, fileProgressCallback: IFileProgressCallback, token?: CancellationToken): Promise<[ISerializedSearchSuccess, IRawFileMatch[]]> {\n\t\tconst emitter = new Emitter<IFileSearchProgressItem>();\n\n\t\tlet allResultsPromise = createCancelablePromise(token => {\n\t\t\tlet results: IRawFileMatch[] = [];\n\n\t\t\tconst innerProgressCallback: IFileProgressCallback = progress => {\n\t\t\t\tif (Array.isArray(progress)) {\n\t\t\t\t\tresults = progress;\n\t\t\t\t} else {\n\t\t\t\t\tfileProgressCallback(progress);\n\t\t\t\t\temitter.fire(progress);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn this.doSearch(engine, innerProgressCallback, -1, token)\n\t\t\t\t.then<[ISearchEngineSuccess, IRawFileMatch[]]>(result => {\n\t\t\t\t\treturn [result, results];\n\t\t\t\t});\n\t\t});\n\n\t\tlet cache: Cache;\n\t\tif (config.cacheKey) {\n\t\t\tcache = this.getOrCreateCache(config.cacheKey);\n\t\t\tconst cacheRow: ICacheRow = {\n\t\t\t\tpromise: allResultsPromise,\n\t\t\t\tevent: emitter.event,\n\t\t\t\tresolved: false\n\t\t\t};\n\t\t\tcache.resultsToSearchCache[config.filePattern || ''] = cacheRow;\n\t\t\tallResultsPromise.then(() => {\n\t\t\t\tcacheRow.resolved = true;\n\t\t\t}, err => {\n\t\t\t\tdelete cache.resultsToSearchCache[config.filePattern || ''];\n\t\t\t});\n\n\t\t\tallResultsPromise = this.preventCancellation(allResultsPromise);\n\t\t}\n\n\t\treturn allResultsPromise.then(([result, results]) => {\n\t\t\tconst scorerCache: ScorerCache = cache ? cache.scorerCache : Object.create(null);\n\t\t\tconst sortSW = (typeof config.maxResults !== 'number' || config.maxResults > 0) && StopWatch.create(false);\n\t\t\treturn this.sortResults(config, results, scorerCache, token)\n\t\t\t\t.then<[ISerializedSearchSuccess, IRawFileMatch[]]>(sortedResults => {\n\t\t\t\t\t// sortingTime: -1 indicates a \"sorted\" search that was not sorted, i.e. populating the cache when quickopen is opened.\n\t\t\t\t\t// Contrasting with findFiles which is not sorted and will have sortingTime: undefined\n\t\t\t\t\tconst sortingTime = sortSW ? sortSW.elapsed() : -1;\n\n\t\t\t\t\treturn [{\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tstats: {\n\t\t\t\t\t\t\tdetailStats: result.stats,\n\t\t\t\t\t\t\tsortingTime,\n\t\t\t\t\t\t\tfromCache: false,\n\t\t\t\t\t\t\ttype: 'searchProcess',\n\t\t\t\t\t\t\tworkspaceFolderCount: config.folderQueries.length,\n\t\t\t\t\t\t\tresultCount: sortedResults.length\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlimitHit: result.limitHit || typeof config.maxResults === 'number' && results.length > config.maxResults\n\t\t\t\t\t} as ISerializedSearchSuccess, sortedResults];\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getOrCreateCache(cacheKey: string): Cache {\n\t\tconst existing = this.caches[cacheKey];\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\treturn this.caches[cacheKey] = new Cache();\n\t}\n\n\tprivate trySortedSearchFromCache(config: IFileQuery, progressCallback: IFileProgressCallback, token?: CancellationToken): Promise<[ISerializedSearchSuccess, IRawFileMatch[]]> | undefined {\n\t\tconst cache = config.cacheKey && this.caches[config.cacheKey];\n\t\tif (!cache) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst cached = this.getResultsFromCache(cache, config.filePattern || '', progressCallback, token);\n\t\tif (cached) {\n\t\t\treturn cached.then(([result, results, cacheStats]) => {\n\t\t\t\tconst sortSW = StopWatch.create(false);\n\t\t\t\treturn this.sortResults(config, results, cache.scorerCache, token)\n\t\t\t\t\t.then<[ISerializedSearchSuccess, IRawFileMatch[]]>(sortedResults => {\n\t\t\t\t\t\tconst sortingTime = sortSW.elapsed();\n\t\t\t\t\t\tconst stats: IFileSearchStats = {\n\t\t\t\t\t\t\tfromCache: true,\n\t\t\t\t\t\t\tdetailStats: cacheStats,\n\t\t\t\t\t\t\ttype: 'searchProcess',\n\t\t\t\t\t\t\tresultCount: results.length,\n\t\t\t\t\t\t\tsortingTime\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\tlimitHit: result.limitHit || typeof config.maxResults === 'number' && results.length > config.maxResults,\n\t\t\t\t\t\t\t\tstats\n\t\t\t\t\t\t\t} as ISerializedSearchSuccess,\n\t\t\t\t\t\t\tsortedResults\n\t\t\t\t\t\t];\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate sortResults(config: IFileQuery, results: IRawFileMatch[], scorerCache: ScorerCache, token?: CancellationToken): Promise<IRawFileMatch[]> {\n\t\t// we use the same compare function that is used later when showing the results using fuzzy scoring\n\t\t// this is very important because we are also limiting the number of results by config.maxResults\n\t\t// and as such we want the top items to be included in this result set if the number of items\n\t\t// exceeds config.maxResults.\n\t\tconst query = prepareQuery(config.filePattern || '');\n\t\tconst compare = (matchA: IRawFileMatch, matchB: IRawFileMatch) => compareItemsByScore(matchA, matchB, query, true, FileMatchItemAccessor, scorerCache);\n\n\t\tconst maxResults = config.maxResults || Number.MAX_VALUE;\n\t\treturn arrays.topAsync(results, compare, maxResults, 10000, token);\n\t}\n\n\tprivate sendProgress(results: ISerializedFileMatch[], progressCb: IProgressCallback, batchSize: number) {\n\t\tif (batchSize && batchSize > 0) {\n\t\t\tfor (let i = 0; i < results.length; i += batchSize) {\n\t\t\t\tprogressCb(results.slice(i, i + batchSize));\n\t\t\t}\n\t\t} else {\n\t\t\tprogressCb(results);\n\t\t}\n\t}\n\n\tprivate getResultsFromCache(cache: Cache, searchValue: string, progressCallback: IFileProgressCallback, token?: CancellationToken): Promise<[ISearchEngineSuccess, IRawFileMatch[], ICachedSearchStats]> | null {\n\t\tconst cacheLookupSW = StopWatch.create(false);\n\n\t\t// Find cache entries by prefix of search value\n\t\tconst hasPathSep = searchValue.indexOf(sep) >= 0;\n\t\tlet cachedRow: ICacheRow | undefined;\n\t\tfor (const previousSearch in cache.resultsToSearchCache) {\n\t\t\t// If we narrow down, we might be able to reuse the cached results\n\t\t\tif (strings.startsWith(searchValue, previousSearch)) {\n\t\t\t\tif (hasPathSep && previousSearch.indexOf(sep) < 0) {\n\t\t\t\t\tcontinue; // since a path character widens the search for potential more matches, require it in previous search too\n\t\t\t\t}\n\n\t\t\t\tconst row = cache.resultsToSearchCache[previousSearch];\n\t\t\t\tcachedRow = {\n\t\t\t\t\tpromise: this.preventCancellation(row.promise),\n\t\t\t\t\tevent: row.event,\n\t\t\t\t\tresolved: row.resolved\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!cachedRow) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst cacheLookupTime = cacheLookupSW.elapsed();\n\t\tconst cacheFilterSW = StopWatch.create(false);\n\n\t\tconst listener = cachedRow.event(progressCallback);\n\t\tif (token) {\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn cachedRow.promise.then<[ISearchEngineSuccess, IRawFileMatch[], ICachedSearchStats]>(([complete, cachedEntries]) => {\n\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\n\t\t\t// Pattern match on results\n\t\t\tconst results: IRawFileMatch[] = [];\n\t\t\tconst normalizedSearchValueLowercase = strings.stripWildcards(searchValue).toLowerCase();\n\t\t\tfor (const entry of cachedEntries) {\n\n\t\t\t\t// Check if this entry is a match for the search value\n\t\t\t\tif (!strings.fuzzyContains(entry.relativePath, normalizedSearchValueLowercase)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresults.push(entry);\n\t\t\t}\n\n\t\t\treturn [complete, results, {\n\t\t\t\tcacheWasResolved: cachedRow!.resolved,\n\t\t\t\tcacheLookupTime,\n\t\t\t\tcacheFilterTime: cacheFilterSW.elapsed(),\n\t\t\t\tcacheEntryCount: cachedEntries.length\n\t\t\t}];\n\t\t});\n\t}\n\n\n\n\tprivate doSearch(engine: ISearchEngine<IRawFileMatch>, progressCallback: IFileProgressCallback, batchSize: number, token?: CancellationToken): Promise<ISearchEngineSuccess> {\n\t\treturn new Promise<ISearchEngineSuccess>((c, e) => {\n\t\t\tlet batch: IRawFileMatch[] = [];\n\t\t\tif (token) {\n\t\t\t\ttoken.onCancellationRequested(() => engine.cancel());\n\t\t\t}\n\n\t\t\tengine.search((match) => {\n\t\t\t\tif (match) {\n\t\t\t\t\tif (batchSize) {\n\t\t\t\t\t\tbatch.push(match);\n\t\t\t\t\t\tif (batchSize > 0 && batch.length >= batchSize) {\n\t\t\t\t\t\t\tprogressCallback(batch);\n\t\t\t\t\t\t\tbatch = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprogressCallback(match);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, (progress) => {\n\t\t\t\tprogressCallback(progress);\n\t\t\t}, (error, complete) => {\n\t\t\t\tif (batch.length) {\n\t\t\t\t\tprogressCallback(batch);\n\t\t\t\t}\n\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(complete);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tclearCache(cacheKey: string): Promise<void> {\n\t\tdelete this.caches[cacheKey];\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t/**\n\t * Return a CancelablePromise which is not actually cancelable\n\t * TODO@rob - Is this really needed?\n\t */\n\tprivate preventCancellation<C>(promise: CancelablePromise<C>): CancelablePromise<C> {\n\t\treturn new class implements CancelablePromise<C> {\n\t\t\tcancel() {\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\tthen(resolve, reject) {\n\t\t\t\treturn promise.then(resolve, reject);\n\t\t\t}\n\t\t\tcatch(reject?) {\n\t\t\t\treturn this.then(undefined, reject);\n\t\t\t}\n\t\t\tfinally(onFinally) {\n\t\t\t\treturn promise.finally(onFinally);\n\t\t\t}\n\t\t};\n\t}\n}\n\ninterface ICacheRow {\n\t// TODO@roblou - never actually canceled\n\tpromise: CancelablePromise<[ISearchEngineSuccess, IRawFileMatch[]]>;\n\tresolved: boolean;\n\tevent: Event<IFileSearchProgressItem>;\n}\n\nclass Cache {\n\n\tresultsToSearchCache: { [searchValue: string]: ICacheRow; } = Object.create(null);\n\n\tscorerCache: ScorerCache = Object.create(null);\n}\n\nconst FileMatchItemAccessor = new class implements IItemAccessor<IRawFileMatch> {\n\n\tgetItemLabel(match: IRawFileMatch): string {\n\t\treturn match.basename; // e.g. myFile.txt\n\t}\n\n\tgetItemDescription(match: IRawFileMatch): string {\n\t\treturn match.relativePath.substr(0, match.relativePath.length - match.basename.length - 1); // e.g. some/path/to/file\n\t}\n\n\tgetItemPath(match: IRawFileMatch): string {\n\t\treturn match.relativePath; // e.g. some/path/to/file/myFile.txt\n\t}\n};\n\nfunction reviveQuery<U extends IRawQuery>(rawQuery: U): U extends IRawTextQuery ? ITextQuery : IFileQuery {\n\treturn {\n\t\t...<any>rawQuery, // TODO\n\t\t...{\n\t\t\tfolderQueries: rawQuery.folderQueries && rawQuery.folderQueries.map(reviveFolderQuery),\n\t\t\textraFileResources: rawQuery.extraFileResources && rawQuery.extraFileResources.map(components => URI.revive(components))\n\t\t}\n\t};\n}\n\nfunction reviveFolderQuery(rawFolderQuery: IFolderQuery<UriComponents>): IFolderQuery<URI> {\n\treturn {\n\t\t...rawFolderQuery,\n\t\tfolder: URI.revive(rawFolderQuery.folder)\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as extfs from 'vs/base/node/extfs';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IFileQuery, IFolderQuery, IRawFileQuery, IRawQuery, IRawTextQuery, ISearchCompleteStats, ITextQuery, isSerializedFileMatch } from 'vs/workbench/services/search/common/search';\nimport { FileSearchManager } from 'vs/workbench/services/search/node/fileSearchManager';\nimport { SearchService } from 'vs/workbench/services/search/node/rawSearchService';\nimport { RipgrepSearchProvider } from 'vs/workbench/services/search/node/ripgrepSearchProvider';\nimport { OutputChannel } from 'vs/workbench/services/search/node/ripgrepSearchUtils';\nimport { TextSearchManager } from 'vs/workbench/services/search/node/textSearchManager';\nimport * as vscode from 'vscode';\nimport { ExtHostSearchShape, IMainContext, MainContext, MainThreadSearchShape } from './extHost.protocol';\n\nexport interface ISchemeTransformer {\n\ttransformOutgoing(scheme: string): string;\n}\n\nexport class ExtHostSearch implements ExtHostSearchShape {\n\n\tprivate readonly _proxy: MainThreadSearchShape;\n\tprivate readonly _textSearchProvider = new Map<number, vscode.TextSearchProvider>();\n\tprivate readonly _textSearchUsedSchemes = new Set<string>();\n\tprivate readonly _fileSearchProvider = new Map<number, vscode.FileSearchProvider>();\n\tprivate readonly _fileSearchUsedSchemes = new Set<string>();\n\tprivate _handlePool: number = 0;\n\n\tprivate _internalFileSearchHandle: number;\n\tprivate _internalFileSearchProvider: SearchService | null;\n\n\tprivate _fileSearchManager: FileSearchManager;\n\n\tconstructor(mainContext: IMainContext, private _schemeTransformer: ISchemeTransformer | null, private _logService: ILogService, private _extfs = extfs) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadSearch);\n\t\tthis._fileSearchManager = new FileSearchManager();\n\t}\n\n\tprivate _transformScheme(scheme: string): string {\n\t\tif (this._schemeTransformer) {\n\t\t\treturn this._schemeTransformer.transformOutgoing(scheme);\n\t\t}\n\t\treturn scheme;\n\t}\n\n\tregisterTextSearchProvider(scheme: string, provider: vscode.TextSearchProvider): IDisposable {\n\t\tif (this._textSearchUsedSchemes.has(scheme)) {\n\t\t\tthrow new Error(`a text search provider for the scheme '${scheme}' is already registered`);\n\t\t}\n\n\t\tthis._textSearchUsedSchemes.add(scheme);\n\t\tconst handle = this._handlePool++;\n\t\tthis._textSearchProvider.set(handle, provider);\n\t\tthis._proxy.$registerTextSearchProvider(handle, this._transformScheme(scheme));\n\t\treturn toDisposable(() => {\n\t\t\tthis._textSearchUsedSchemes.delete(scheme);\n\t\t\tthis._textSearchProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\tregisterFileSearchProvider(scheme: string, provider: vscode.FileSearchProvider): IDisposable {\n\t\tif (this._fileSearchUsedSchemes.has(scheme)) {\n\t\t\tthrow new Error(`a file search provider for the scheme '${scheme}' is already registered`);\n\t\t}\n\n\t\tthis._fileSearchUsedSchemes.add(scheme);\n\t\tconst handle = this._handlePool++;\n\t\tthis._fileSearchProvider.set(handle, provider);\n\t\tthis._proxy.$registerFileSearchProvider(handle, this._transformScheme(scheme));\n\t\treturn toDisposable(() => {\n\t\t\tthis._fileSearchUsedSchemes.delete(scheme);\n\t\t\tthis._fileSearchProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\tregisterInternalFileSearchProvider(scheme: string, provider: SearchService): IDisposable {\n\t\tconst handle = this._handlePool++;\n\t\tthis._internalFileSearchProvider = provider;\n\t\tthis._internalFileSearchHandle = handle;\n\t\tthis._proxy.$registerFileSearchProvider(handle, this._transformScheme(scheme));\n\t\treturn toDisposable(() => {\n\t\t\tthis._internalFileSearchProvider = null;\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\t$provideFileSearchResults(handle: number, session: number, rawQuery: IRawFileQuery, token: CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst query = reviveQuery(rawQuery);\n\t\tif (handle === this._internalFileSearchHandle) {\n\t\t\treturn this.doInternalFileSearch(handle, session, query, token);\n\t\t} else {\n\t\t\tconst provider = this._fileSearchProvider.get(handle);\n\t\t\tif (provider) {\n\t\t\t\treturn this._fileSearchManager.fileSearch(query, provider, batch => {\n\t\t\t\t\tthis._proxy.$handleFileMatch(handle, session, batch.map(p => p.resource));\n\t\t\t\t}, token);\n\t\t\t} else {\n\t\t\t\tthrow new Error('unknown provider: ' + handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate doInternalFileSearch(handle: number, session: number, rawQuery: IFileQuery, token: CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst onResult = (ev) => {\n\t\t\tif (isSerializedFileMatch(ev)) {\n\t\t\t\tev = [ev];\n\t\t\t}\n\n\t\t\tif (Array.isArray(ev)) {\n\t\t\t\tthis._proxy.$handleFileMatch(handle, session, ev.map(m => URI.file(m.path)));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ev.message) {\n\t\t\t\tthis._logService.debug('ExtHostSearch', ev.message);\n\t\t\t}\n\t\t};\n\n\t\tif (!this._internalFileSearchProvider) {\n\t\t\tthrow new Error('No internal file search handler');\n\t\t}\n\n\t\treturn <Promise<ISearchCompleteStats>>this._internalFileSearchProvider.doFileSearch(rawQuery, onResult, token);\n\t}\n\n\t$clearCache(cacheKey: string): Promise<void> {\n\t\tif (this._internalFileSearchProvider) {\n\t\t\tthis._internalFileSearchProvider.clearCache(cacheKey);\n\t\t}\n\n\t\tthis._fileSearchManager.clearCache(cacheKey);\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$provideTextSearchResults(handle: number, session: number, rawQuery: IRawTextQuery, token: CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst provider = this._textSearchProvider.get(handle);\n\t\tif (!provider || !provider.provideTextSearchResults) {\n\t\t\tthrow new Error(`Unknown provider ${handle}`);\n\t\t}\n\n\t\tconst query = reviveQuery(rawQuery);\n\t\tconst engine = new TextSearchManager(query, provider, this._extfs);\n\t\treturn engine.search(progress => this._proxy.$handleTextMatch(handle, session, progress), token);\n\t}\n}\n\nexport function registerEHSearchProviders(extHostSearch: ExtHostSearch, logService: ILogService): void {\n\tconst outputChannel = new OutputChannel(logService);\n\textHostSearch.registerTextSearchProvider('file', new RipgrepSearchProvider(outputChannel));\n\textHostSearch.registerInternalFileSearchProvider('file', new SearchService());\n}\n\nfunction reviveQuery<U extends IRawQuery>(rawQuery: U): U extends IRawTextQuery ? ITextQuery : IFileQuery {\n\treturn {\n\t\t...<any>rawQuery, // TODO\n\t\t...{\n\t\t\tfolderQueries: rawQuery.folderQueries && rawQuery.folderQueries.map(reviveFolderQuery),\n\t\t\textraFileResources: rawQuery.extraFileResources && rawQuery.extraFileResources.map(components => URI.revive(components))\n\t\t}\n\t};\n}\n\nfunction reviveFolderQuery(rawFolderQuery: IFolderQuery<UriComponents>): IFolderQuery<URI> {\n\treturn {\n\t\t...rawFolderQuery,\n\t\tfolder: URI.revive(rawFolderQuery.folder)\n\t};\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport { TextEditorCursorStyle } from 'vs/editor/common/config/editorOptions';\nimport { OverviewRulerLane } from 'vs/editor/common/model';\nimport * as languageConfiguration from 'vs/editor/common/modes/languageConfiguration';\nimport { score } from 'vs/editor/common/modes/languageSelector';\nimport * as files from 'vs/platform/files/common/files';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { ExtHostContext, IInitData, IMainContext, MainContext } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostApiCommands } from 'vs/workbench/api/node/extHostApiCommands';\nimport { ExtHostClipboard } from 'vs/workbench/api/node/extHostClipboard';\nimport { ExtHostCommands } from 'vs/workbench/api/node/extHostCommands';\nimport { ExtHostComments } from 'vs/workbench/api/node/extHostComments';\nimport { ExtHostConfiguration, ExtHostConfigProvider } from 'vs/workbench/api/node/extHostConfiguration';\nimport { ExtHostDebugService } from 'vs/workbench/api/node/extHostDebugService';\nimport { ExtHostDecorations } from 'vs/workbench/api/node/extHostDecorations';\nimport { ExtHostDiagnostics } from 'vs/workbench/api/node/extHostDiagnostics';\nimport { ExtHostDialogs } from 'vs/workbench/api/node/extHostDialogs';\nimport { ExtHostDocumentContentProvider } from 'vs/workbench/api/node/extHostDocumentContentProviders';\nimport { ExtHostDocumentSaveParticipant } from 'vs/workbench/api/node/extHostDocumentSaveParticipant';\nimport { ExtHostDocuments } from 'vs/workbench/api/node/extHostDocuments';\nimport { ExtHostDocumentsAndEditors } from 'vs/workbench/api/node/extHostDocumentsAndEditors';\nimport { ExtensionActivatedByAPI } from 'vs/workbench/api/node/extHostExtensionActivator';\nimport { ExtHostExtensionService } from 'vs/workbench/api/node/extHostExtensionService';\nimport { ExtHostFileSystem } from 'vs/workbench/api/node/extHostFileSystem';\nimport { ExtHostFileSystemEventService } from 'vs/workbench/api/node/extHostFileSystemEventService';\nimport { ExtHostHeapService } from 'vs/workbench/api/node/extHostHeapService';\nimport { ExtHostLanguageFeatures, ISchemeTransformer } from 'vs/workbench/api/node/extHostLanguageFeatures';\nimport { ExtHostLanguages } from 'vs/workbench/api/node/extHostLanguages';\nimport { ExtHostLogService } from 'vs/workbench/api/node/extHostLogService';\nimport { ExtHostMessageService } from 'vs/workbench/api/node/extHostMessageService';\nimport { ExtHostOutputService } from 'vs/workbench/api/node/extHostOutputService';\nimport { ExtHostProgress } from 'vs/workbench/api/node/extHostProgress';\nimport { ExtHostQuickOpen } from 'vs/workbench/api/node/extHostQuickOpen';\nimport { ExtHostSCM } from 'vs/workbench/api/node/extHostSCM';\nimport { ExtHostSearch } from 'vs/workbench/api/node/extHostSearch';\nimport { ExtHostStatusBar } from 'vs/workbench/api/node/extHostStatusBar';\nimport { ExtHostStorage } from 'vs/workbench/api/node/extHostStorage';\nimport { ExtHostTask } from 'vs/workbench/api/node/extHostTask';\nimport { ExtHostTerminalService } from 'vs/workbench/api/node/extHostTerminalService';\nimport { ExtHostEditors } from 'vs/workbench/api/node/extHostTextEditors';\nimport { ExtHostTreeViews } from 'vs/workbench/api/node/extHostTreeViews';\nimport * as typeConverters from 'vs/workbench/api/node/extHostTypeConverters';\nimport * as extHostTypes from 'vs/workbench/api/node/extHostTypes';\nimport { ExtHostUrls } from 'vs/workbench/api/node/extHostUrls';\nimport { ExtHostWebviews } from 'vs/workbench/api/node/extHostWebview';\nimport { ExtHostWindow } from 'vs/workbench/api/node/extHostWindow';\nimport { ExtHostWorkspace } from 'vs/workbench/api/node/extHostWorkspace';\nimport { IExtensionDescription, throwProposedApiError, checkProposedApiEnabled, nullExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ProxyIdentifier } from 'vs/workbench/services/extensions/node/proxyIdentifier';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/node/extensionDescriptionRegistry';\nimport * as vscode from 'vscode';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { originalFSPath } from 'vs/base/common/resources';\nimport { CLIServer } from 'vs/workbench/api/node/extHostCLIServer';\n\nexport interface IExtensionApiFactory {\n\t(extension: IExtensionDescription, registry: ExtensionDescriptionRegistry, configProvider: ExtHostConfigProvider): typeof vscode;\n}\n\nfunction proposedApiFunction<T>(extension: IExtensionDescription, fn: T): T {\n\tif (process.env.isBrowser) {\n\t\treturn fn;\n\t}\n\tif (extension.enableProposedApi) {\n\t\treturn fn;\n\t} else {\n\t\treturn throwProposedApiError.bind(null, extension) as any as T;\n\t}\n}\n\n/**\n * This method instantiates and returns the extension API surface\n */\nexport function createApiFactory(\n\tinitData: IInitData,\n\trpcProtocol: IMainContext,\n\textHostWorkspace: ExtHostWorkspace,\n\textHostConfiguration: ExtHostConfiguration,\n\textensionService: ExtHostExtensionService,\n\textHostLogService: ExtHostLogService,\n\textHostStorage: ExtHostStorage\n): IExtensionApiFactory {\n\n\tconst schemeTransformer: ISchemeTransformer | null = null;\n\n\t// Addressable instances\n\trpcProtocol.set(ExtHostContext.ExtHostLogService, extHostLogService);\n\tconst extHostHeapService = rpcProtocol.set(ExtHostContext.ExtHostHeapService, new ExtHostHeapService());\n\tconst extHostDecorations = rpcProtocol.set(ExtHostContext.ExtHostDecorations, new ExtHostDecorations(rpcProtocol));\n\tconst extHostWebviews = rpcProtocol.set(ExtHostContext.ExtHostWebviews, new ExtHostWebviews(rpcProtocol));\n\tconst extHostUrls = rpcProtocol.set(ExtHostContext.ExtHostUrls, new ExtHostUrls(rpcProtocol));\n\tconst extHostDocumentsAndEditors = rpcProtocol.set(ExtHostContext.ExtHostDocumentsAndEditors, new ExtHostDocumentsAndEditors(rpcProtocol));\n\tconst extHostDocuments = rpcProtocol.set(ExtHostContext.ExtHostDocuments, new ExtHostDocuments(rpcProtocol, extHostDocumentsAndEditors));\n\tconst extHostDocumentContentProviders = rpcProtocol.set(ExtHostContext.ExtHostDocumentContentProviders, new ExtHostDocumentContentProvider(rpcProtocol, extHostDocumentsAndEditors, extHostLogService));\n\tconst extHostDocumentSaveParticipant = rpcProtocol.set(ExtHostContext.ExtHostDocumentSaveParticipant, new ExtHostDocumentSaveParticipant(extHostLogService, extHostDocuments, rpcProtocol.getProxy(MainContext.MainThreadTextEditors)));\n\tconst extHostEditors = rpcProtocol.set(ExtHostContext.ExtHostEditors, new ExtHostEditors(rpcProtocol, extHostDocumentsAndEditors));\n\tconst extHostCommands = rpcProtocol.set(ExtHostContext.ExtHostCommands, new ExtHostCommands(rpcProtocol, extHostHeapService, extHostLogService));\n\tconst extHostTreeViews = rpcProtocol.set(ExtHostContext.ExtHostTreeViews, new ExtHostTreeViews(rpcProtocol.getProxy(MainContext.MainThreadTreeViews), extHostCommands, extHostLogService));\n\trpcProtocol.set(ExtHostContext.ExtHostWorkspace, extHostWorkspace);\n\trpcProtocol.set(ExtHostContext.ExtHostConfiguration, extHostConfiguration);\n\tconst extHostDiagnostics = rpcProtocol.set(ExtHostContext.ExtHostDiagnostics, new ExtHostDiagnostics(rpcProtocol));\n\tconst extHostLanguageFeatures = rpcProtocol.set(ExtHostContext.ExtHostLanguageFeatures, new ExtHostLanguageFeatures(rpcProtocol, schemeTransformer, extHostDocuments, extHostCommands, extHostHeapService, extHostDiagnostics, extHostLogService));\n\tconst extHostFileSystem = rpcProtocol.set(ExtHostContext.ExtHostFileSystem, new ExtHostFileSystem(rpcProtocol, extHostLanguageFeatures));\n\tconst extHostFileSystemEvent = rpcProtocol.set(ExtHostContext.ExtHostFileSystemEventService, new ExtHostFileSystemEventService(rpcProtocol, extHostDocumentsAndEditors));\n\tconst extHostQuickOpen = rpcProtocol.set(ExtHostContext.ExtHostQuickOpen, new ExtHostQuickOpen(rpcProtocol, extHostWorkspace, extHostCommands));\n\tconst extHostTerminalService = rpcProtocol.set(ExtHostContext.ExtHostTerminalService, new ExtHostTerminalService(rpcProtocol, extHostConfiguration, extHostLogService));\n\tconst extHostDebugService = rpcProtocol.set(ExtHostContext.ExtHostDebugService, new ExtHostDebugService(rpcProtocol, extHostWorkspace, extensionService, extHostDocumentsAndEditors, extHostConfiguration, extHostTerminalService, extHostCommands));\n\tconst extHostSCM = rpcProtocol.set(ExtHostContext.ExtHostSCM, new ExtHostSCM(rpcProtocol, extHostCommands, extHostLogService));\n\tconst extHostComment = rpcProtocol.set(ExtHostContext.ExtHostComments, new ExtHostComments(rpcProtocol, extHostCommands, extHostDocuments));\n\tconst extHostSearch = rpcProtocol.set(ExtHostContext.ExtHostSearch, new ExtHostSearch(rpcProtocol, schemeTransformer, extHostLogService));\n\tconst extHostTask = rpcProtocol.set(ExtHostContext.ExtHostTask, new ExtHostTask(rpcProtocol, extHostWorkspace, extHostDocumentsAndEditors, extHostConfiguration, extHostTerminalService));\n\tconst extHostWindow = rpcProtocol.set(ExtHostContext.ExtHostWindow, new ExtHostWindow(rpcProtocol));\n\trpcProtocol.set(ExtHostContext.ExtHostExtensionService, extensionService);\n\tconst extHostProgress = rpcProtocol.set(ExtHostContext.ExtHostProgress, new ExtHostProgress(rpcProtocol.getProxy(MainContext.MainThreadProgress)));\n\tconst extHostOutputService = rpcProtocol.set(ExtHostContext.ExtHostOutputService, new ExtHostOutputService(initData.logsLocation, rpcProtocol));\n\trpcProtocol.set(ExtHostContext.ExtHostStorage, extHostStorage);\n\tif (initData.remoteAuthority) {\n\t\tconst cliServer = new CLIServer(extHostCommands);\n\t\tprocess.env['VSCODE_IPC_HOOK_CLI'] = cliServer.ipcHandlePath;\n\t}\n\n\t// Check that no named customers are missing\n\tconst expected: ProxyIdentifier<any>[] = Object.keys(ExtHostContext).map((key) => (<any>ExtHostContext)[key]);\n\trpcProtocol.assertRegistered(expected);\n\n\t// Other instances\n\tconst extHostClipboard = new ExtHostClipboard(rpcProtocol);\n\tconst extHostMessageService = new ExtHostMessageService(rpcProtocol);\n\tconst extHostDialogs = new ExtHostDialogs(rpcProtocol);\n\tconst extHostStatusBar = new ExtHostStatusBar(rpcProtocol);\n\tconst extHostLanguages = new ExtHostLanguages(rpcProtocol, extHostDocuments);\n\n\t// Register an output channel for exthost log\n\tconst name = localize('extensionsLog', \"Extension Host\");\n\textHostOutputService.createOutputChannelFromLogFile(name, extHostLogService.logFile);\n\n\t// Register API-ish commands\n\tExtHostApiCommands.register(extHostCommands);\n\n\treturn function (extension: IExtensionDescription, extensionRegistry: ExtensionDescriptionRegistry, configProvider: ExtHostConfigProvider): typeof vscode {\n\n\t\t// Check document selectors for being overly generic. Technically this isn't a problem but\n\t\t// in practice many extensions say they support `fooLang` but need fs-access to do so. Those\n\t\t// extension should specify then the `file`-scheme, e.g `{ scheme: 'fooLang', language: 'fooLang' }`\n\t\t// We only inform once, it is not a warning because we just want to raise awareness and because\n\t\t// we cannot say if the extension is doing it right or wrong...\n\t\tconst checkSelector = (function () {\n\t\t\tlet done = (!extension.isUnderDevelopment);\n\t\t\tfunction informOnce(selector: vscode.DocumentSelector) {\n\t\t\t\tif (!done) {\n\t\t\t\t\tconsole.info(`Extension '${extension.identifier.value}' uses a document selector without scheme. Learn more about this: https://go.microsoft.com/fwlink/?linkid=872305`);\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn function perform(selector: vscode.DocumentSelector): vscode.DocumentSelector {\n\t\t\t\tif (Array.isArray(selector)) {\n\t\t\t\t\tselector.forEach(perform);\n\t\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\t\tinformOnce(selector);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof selector.scheme === 'undefined') {\n\t\t\t\t\t\tinformOnce(selector);\n\t\t\t\t\t}\n\t\t\t\t\tif (!extension.enableProposedApi && typeof selector.exclusive === 'boolean') {\n\t\t\t\t\t\tthrowProposedApiError(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn selector;\n\t\t\t};\n\t\t})();\n\n\n\t\t// namespace: commands\n\t\tconst commands: typeof vscode.commands = {\n\t\t\tregisterCommand(id: string, command: <T>(...args: any[]) => T | Thenable<T>, thisArgs?: any): vscode.Disposable {\n\t\t\t\treturn extHostCommands.registerCommand(true, id, command, thisArgs);\n\t\t\t},\n\t\t\tregisterTextEditorCommand(id: string, callback: (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit, ...args: any[]) => void, thisArg?: any): vscode.Disposable {\n\t\t\t\treturn extHostCommands.registerCommand(true, id, (...args: any[]): any => {\n\t\t\t\t\tconst activeTextEditor = extHostEditors.getActiveTextEditor();\n\t\t\t\t\tif (!activeTextEditor) {\n\t\t\t\t\t\tconsole.warn('Cannot execute ' + id + ' because there is no active text editor.');\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn activeTextEditor.edit((edit: vscode.TextEditorEdit) => {\n\t\t\t\t\t\targs.unshift(activeTextEditor, edit);\n\t\t\t\t\t\tcallback.apply(thisArg, args);\n\n\t\t\t\t\t}).then((result) => {\n\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\tconsole.warn('Edits from command ' + id + ' were not applied.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.warn('An error occurred while running command ' + id, err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tregisterDiffInformationCommand: proposedApiFunction(extension, (id: string, callback: (diff: vscode.LineChange[], ...args: any[]) => any, thisArg?: any): vscode.Disposable => {\n\t\t\t\treturn extHostCommands.registerCommand(true, id, async (...args: any[]): Promise<any> => {\n\t\t\t\t\tconst activeTextEditor = extHostEditors.getActiveTextEditor();\n\t\t\t\t\tif (!activeTextEditor) {\n\t\t\t\t\t\tconsole.warn('Cannot execute ' + id + ' because there is no active text editor.');\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst diff = await extHostEditors.getDiffInformation(activeTextEditor.id);\n\t\t\t\t\tcallback.apply(thisArg, [diff, ...args]);\n\t\t\t\t});\n\t\t\t}),\n\t\t\texecuteCommand<T>(id: string, ...args: any[]): Thenable<T> {\n\t\t\t\treturn extHostCommands.executeCommand<T>(id, ...args);\n\t\t\t},\n\t\t\tgetCommands(filterInternal: boolean = false): Thenable<string[]> {\n\t\t\t\treturn extHostCommands.getCommands(filterInternal);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: env\n\t\tconst env: typeof vscode.env = Object.freeze({\n\t\t\tget machineId() { return initData.telemetryInfo.machineId; },\n\t\t\tget sessionId() { return initData.telemetryInfo.sessionId; },\n\t\t\tget language() { return platform.language!; },\n\t\t\tget appName() { return product.nameLong; },\n\t\t\tget appRoot() { return initData.environment.appRoot!.fsPath; },\n\t\t\tget logLevel() {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn typeConverters.LogLevel.to(extHostLogService.getLevel());\n\t\t\t},\n\t\t\tget onDidChangeLogLevel() {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn Event.map(extHostLogService.onDidChangeLogLevel, l => typeConverters.LogLevel.to(l));\n\t\t\t},\n\t\t\tget clipboard(): vscode.Clipboard {\n\t\t\t\treturn extHostClipboard;\n\t\t\t},\n\t\t\topenExternal(uri: URI) {\n\t\t\t\treturn extHostWindow.openUri(uri);\n\t\t\t}\n\t\t});\n\n\t\t// namespace: extensions\n\t\tconst extensions: typeof vscode.extensions = {\n\t\t\tgetExtension(extensionId: string): Extension<any> | undefined {\n\t\t\t\tconst desc = extensionRegistry.getExtensionDescription(extensionId);\n\t\t\t\tif (desc) {\n\t\t\t\t\treturn new Extension(extensionService, desc);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tget all(): Extension<any>[] {\n\t\t\t\treturn extensionRegistry.getAllExtensionDescriptions().map((desc) => new Extension(extensionService, desc));\n\t\t\t},\n\t\t\tget onDidChange() {\n\t\t\t\treturn extensionRegistry.onDidChange;\n\t\t\t}\n\t\t};\n\n\t\t// namespace: languages\n\t\tconst languages: typeof vscode.languages = {\n\t\t\tcreateDiagnosticCollection(name?: string): vscode.DiagnosticCollection {\n\t\t\t\treturn extHostDiagnostics.createDiagnosticCollection(name);\n\t\t\t},\n\t\t\tget onDidChangeDiagnostics() {\n\t\t\t\treturn extHostDiagnostics.onDidChangeDiagnostics;\n\t\t\t},\n\t\t\tgetDiagnostics: (resource?: vscode.Uri) => {\n\t\t\t\treturn <any>extHostDiagnostics.getDiagnostics(resource);\n\t\t\t},\n\t\t\tgetLanguages(): Thenable<string[]> {\n\t\t\t\treturn extHostLanguages.getLanguages();\n\t\t\t},\n\t\t\tsetTextDocumentLanguage(document: vscode.TextDocument, languageId: string): Thenable<vscode.TextDocument> {\n\t\t\t\treturn extHostLanguages.changeLanguage(document.uri, languageId);\n\t\t\t},\n\t\t\tmatch(selector: vscode.DocumentSelector, document: vscode.TextDocument): number {\n\t\t\t\treturn score(typeConverters.LanguageSelector.from(selector), document.uri, document.languageId, true);\n\t\t\t},\n\t\t\tregisterCodeActionsProvider(selector: vscode.DocumentSelector, provider: vscode.CodeActionProvider, metadata?: vscode.CodeActionProviderMetadata): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCodeActionProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterCodeLensProvider(selector: vscode.DocumentSelector, provider: vscode.CodeLensProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCodeLensProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterCodeInsetProvider(selector: vscode.DocumentSelector, provider: vscode.CodeInsetProvider): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension);\n\t\t\t\treturn extHostLanguageFeatures.registerCodeInsetProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.DefinitionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDefinitionProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDeclarationProvider(selector: vscode.DocumentSelector, provider: vscode.DeclarationProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDeclarationProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterImplementationProvider(selector: vscode.DocumentSelector, provider: vscode.ImplementationProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerImplementationProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterTypeDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.TypeDefinitionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerTypeDefinitionProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterHoverProvider(selector: vscode.DocumentSelector, provider: vscode.HoverProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerHoverProvider(extension, checkSelector(selector), provider, extension.identifier);\n\t\t\t},\n\t\t\tregisterDocumentHighlightProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentHighlightProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentHighlightProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterReferenceProvider(selector: vscode.DocumentSelector, provider: vscode.ReferenceProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerReferenceProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterRenameProvider(selector: vscode.DocumentSelector, provider: vscode.RenameProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerRenameProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDocumentSymbolProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentSymbolProvider, metadata?: vscode.DocumentSymbolProviderMetadata): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentSymbolProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterWorkspaceSymbolProvider(provider: vscode.WorkspaceSymbolProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerWorkspaceSymbolProvider(extension, provider);\n\t\t\t},\n\t\t\tregisterDocumentFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentFormattingEditProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDocumentRangeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentRangeFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentRangeFormattingEditProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterOnTypeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.OnTypeFormattingEditProvider, firstTriggerCharacter: string, ...moreTriggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerOnTypeFormattingEditProvider(extension, checkSelector(selector), provider, [firstTriggerCharacter].concat(moreTriggerCharacters));\n\t\t\t},\n\t\t\tregisterSignatureHelpProvider(selector: vscode.DocumentSelector, provider: vscode.SignatureHelpProvider, firstItem?: string | vscode.SignatureHelpProviderMetadata, ...remaining: string[]): vscode.Disposable {\n\t\t\t\tif (typeof firstItem === 'object') {\n\t\t\t\t\treturn extHostLanguageFeatures.registerSignatureHelpProvider(extension, checkSelector(selector), provider, firstItem);\n\t\t\t\t}\n\t\t\t\treturn extHostLanguageFeatures.registerSignatureHelpProvider(extension, checkSelector(selector), provider, typeof firstItem === 'undefined' ? [] : [firstItem, ...remaining]);\n\t\t\t},\n\t\t\tregisterCompletionItemProvider(selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, ...triggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCompletionItemProvider(extension, checkSelector(selector), provider, triggerCharacters);\n\t\t\t},\n\t\t\tregisterDocumentLinkProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentLinkProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentLinkProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterColorProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentColorProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerColorProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterFoldingRangeProvider(selector: vscode.DocumentSelector, provider: vscode.FoldingRangeProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerFoldingRangeProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterSelectionRangeProvider(selector: vscode.DocumentSelector, provider: vscode.SelectionRangeProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerSelectionRangeProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tsetLanguageConfiguration: (language: string, configuration: vscode.LanguageConfiguration): vscode.Disposable => {\n\t\t\t\treturn extHostLanguageFeatures.setLanguageConfiguration(language, configuration);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: window\n\t\tconst window: typeof vscode.window = {\n\t\t\tget activeTextEditor() {\n\t\t\t\treturn extHostEditors.getActiveTextEditor();\n\t\t\t},\n\t\t\tget visibleTextEditors() {\n\t\t\t\treturn extHostEditors.getVisibleTextEditors();\n\t\t\t},\n\t\t\tget activeTerminal() {\n\t\t\t\treturn extHostTerminalService.activeTerminal;\n\t\t\t},\n\t\t\tget terminals() {\n\t\t\t\treturn extHostTerminalService.terminals;\n\t\t\t},\n\t\t\tshowTextDocument(documentOrUri: vscode.TextDocument | vscode.Uri, columnOrOptions?: vscode.ViewColumn | vscode.TextDocumentShowOptions, preserveFocus?: boolean): Thenable<vscode.TextEditor> {\n\t\t\t\tlet documentPromise: Promise<vscode.TextDocument>;\n\t\t\t\tif (URI.isUri(documentOrUri)) {\n\t\t\t\t\tdocumentPromise = Promise.resolve(workspace.openTextDocument(documentOrUri));\n\t\t\t\t} else {\n\t\t\t\t\tdocumentPromise = Promise.resolve(<vscode.TextDocument>documentOrUri);\n\t\t\t\t}\n\t\t\t\treturn documentPromise.then(document => {\n\t\t\t\t\treturn extHostEditors.showTextDocument(document, columnOrOptions, preserveFocus);\n\t\t\t\t});\n\t\t\t},\n\t\t\tcreateTextEditorDecorationType(options: vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\t\t\treturn extHostEditors.createTextEditorDecorationType(options);\n\t\t\t},\n\t\t\tonDidChangeActiveTextEditor(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostEditors.onDidChangeActiveTextEditor(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeVisibleTextEditors(listener, thisArg, disposables) {\n\t\t\t\treturn extHostEditors.onDidChangeVisibleTextEditors(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorSelection(listener: (e: vscode.TextEditorSelectionChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorSelection(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorOptions(listener: (e: vscode.TextEditorOptionsChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorOptions(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorVisibleRanges(listener: (e: vscode.TextEditorVisibleRangesChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorVisibleRanges(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorViewColumn(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostEditors.onDidChangeTextEditorViewColumn(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidCloseTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTerminalService.onDidCloseTerminal(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidOpenTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTerminalService.onDidOpenTerminal(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeActiveTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTerminalService.onDidChangeActiveTerminal(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTerminalDimensions(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostTerminalService.onDidChangeTerminalDimensions(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tget state() {\n\t\t\t\treturn extHostWindow.state;\n\t\t\t},\n\t\t\tonDidChangeWindowState(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostWindow.onDidChangeWindowState(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tshowInformationMessage(message, first, ...rest) {\n\t\t\t\treturn extHostMessageService.showMessage(extension, Severity.Info, message, first, rest);\n\t\t\t},\n\t\t\tshowWarningMessage(message, first, ...rest) {\n\t\t\t\treturn extHostMessageService.showMessage(extension, Severity.Warning, message, first, rest);\n\t\t\t},\n\t\t\tshowErrorMessage(message, first, ...rest) {\n\t\t\t\treturn extHostMessageService.showMessage(extension, Severity.Error, message, first, rest);\n\t\t\t},\n\t\t\tshowQuickPick(items: any, options: vscode.QuickPickOptions, token?: vscode.CancellationToken): any {\n\t\t\t\treturn extHostQuickOpen.showQuickPick(items, !!extension.enableProposedApi, options, token);\n\t\t\t},\n\t\t\tshowWorkspaceFolderPick(options: vscode.WorkspaceFolderPickOptions) {\n\t\t\t\treturn extHostQuickOpen.showWorkspaceFolderPick(options);\n\t\t\t},\n\t\t\tshowInputBox(options?: vscode.InputBoxOptions, token?: vscode.CancellationToken) {\n\t\t\t\treturn extHostQuickOpen.showInput(options, token);\n\t\t\t},\n\t\t\tshowOpenDialog(options) {\n\t\t\t\treturn extHostDialogs.showOpenDialog(options);\n\t\t\t},\n\t\t\tshowSaveDialog(options) {\n\t\t\t\treturn extHostDialogs.showSaveDialog(options);\n\t\t\t},\n\t\t\tcreateStatusBarItem(position?: vscode.StatusBarAlignment, priority?: number): vscode.StatusBarItem {\n\t\t\t\treturn extHostStatusBar.createStatusBarEntry(extension.identifier, <number>position, priority);\n\t\t\t},\n\t\t\tsetStatusBarMessage(text: string, timeoutOrThenable?: number | Thenable<any>): vscode.Disposable {\n\t\t\t\treturn extHostStatusBar.setStatusBarMessage(text, timeoutOrThenable);\n\t\t\t},\n\t\t\twithScmProgress<R>(task: (progress: vscode.Progress<number>) => Thenable<R>) {\n\t\t\t\tconsole.warn(`[Deprecation Warning] function 'withScmProgress' is deprecated and should no longer be used. Use 'withProgress' instead.`);\n\t\t\t\treturn extHostProgress.withProgress(extension, { location: extHostTypes.ProgressLocation.SourceControl }, (progress, token) => task({ report(n: number) { /*noop*/ } }));\n\t\t\t},\n\t\t\twithProgress<R>(options: vscode.ProgressOptions, task: (progress: vscode.Progress<{ message?: string; worked?: number }>, token: vscode.CancellationToken) => Thenable<R>) {\n\t\t\t\treturn extHostProgress.withProgress(extension, options, task);\n\t\t\t},\n\t\t\tcreateOutputChannel(name: string): vscode.OutputChannel {\n\t\t\t\treturn extHostOutputService.createOutputChannel(name);\n\t\t\t},\n\t\t\tcreateWebviewPanel(viewType: string, title: string, showOptions: vscode.ViewColumn | { viewColumn: vscode.ViewColumn, preserveFocus?: boolean }, options: vscode.WebviewPanelOptions & vscode.WebviewOptions): vscode.WebviewPanel {\n\t\t\t\treturn extHostWebviews.createWebviewPanel(extension, viewType, title, showOptions, options);\n\t\t\t},\n\t\t\tcreateTerminal(nameOrOptions?: vscode.TerminalOptions | string, shellPath?: string, shellArgs?: string[]): vscode.Terminal {\n\t\t\t\tif (typeof nameOrOptions === 'object') {\n\t\t\t\t\treturn extHostTerminalService.createTerminalFromOptions(<vscode.TerminalOptions>nameOrOptions);\n\t\t\t\t}\n\t\t\t\treturn extHostTerminalService.createTerminal(<string>nameOrOptions, shellPath, shellArgs);\n\t\t\t},\n\t\t\tcreateTerminalRenderer(name: string): vscode.TerminalRenderer {\n\t\t\t\treturn extHostTerminalService.createTerminalRenderer(name);\n\t\t\t},\n\t\t\tregisterTreeDataProvider(viewId: string, treeDataProvider: vscode.TreeDataProvider<any>): vscode.Disposable {\n\t\t\t\treturn extHostTreeViews.registerTreeDataProvider(viewId, treeDataProvider, extension);\n\t\t\t},\n\t\t\tcreateTreeView(viewId: string, options: { treeDataProvider: vscode.TreeDataProvider<any> }): vscode.TreeView<any> {\n\t\t\t\treturn extHostTreeViews.createTreeView(viewId, options, extension);\n\t\t\t},\n\t\t\tregisterWebviewPanelSerializer: (viewType: string, serializer: vscode.WebviewPanelSerializer) => {\n\t\t\t\treturn extHostWebviews.registerWebviewPanelSerializer(viewType, serializer);\n\t\t\t},\n\t\t\tregisterDecorationProvider: proposedApiFunction(extension, (provider: vscode.DecorationProvider) => {\n\t\t\t\treturn extHostDecorations.registerDecorationProvider(provider, extension.identifier);\n\t\t\t}),\n\t\t\tregisterUriHandler(handler: vscode.UriHandler) {\n\t\t\t\treturn extHostUrls.registerUriHandler(extension.identifier, handler);\n\t\t\t},\n\t\t\tcreateQuickPick<T extends vscode.QuickPickItem>(): vscode.QuickPick<T> {\n\t\t\t\treturn extHostQuickOpen.createQuickPick(extension.identifier, !!extension.enableProposedApi);\n\t\t\t},\n\t\t\tcreateInputBox(): vscode.InputBox {\n\t\t\t\treturn extHostQuickOpen.createInputBox(extension.identifier);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: workspace\n\t\tconst workspace: typeof vscode.workspace = {\n\t\t\tget rootPath() {\n\t\t\t\treturn extHostWorkspace.getPath();\n\t\t\t},\n\t\t\tset rootPath(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\tgetWorkspaceFolder(resource) {\n\t\t\t\treturn extHostWorkspace.getWorkspaceFolder(resource);\n\t\t\t},\n\t\t\tget workspaceFolders() {\n\t\t\t\treturn extHostWorkspace.getWorkspaceFolders();\n\t\t\t},\n\t\t\tget name() {\n\t\t\t\treturn extHostWorkspace.name;\n\t\t\t},\n\t\t\tset name(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\tupdateWorkspaceFolders: (index, deleteCount, ...workspaceFoldersToAdd) => {\n\t\t\t\treturn extHostWorkspace.updateWorkspaceFolders(extension, index, deleteCount || 0, ...workspaceFoldersToAdd);\n\t\t\t},\n\t\t\tonDidChangeWorkspaceFolders: function (listener, thisArgs?, disposables?) {\n\t\t\t\treturn extHostWorkspace.onDidChangeWorkspace(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tasRelativePath: (pathOrUri, includeWorkspace?) => {\n\t\t\t\treturn extHostWorkspace.getRelativePath(pathOrUri, includeWorkspace);\n\t\t\t},\n\t\t\tfindFiles: (include, exclude, maxResults?, token?) => {\n\t\t\t\treturn extHostWorkspace.findFiles(typeConverters.GlobPattern.from(include), typeConverters.GlobPattern.from(exclude), maxResults, extension.identifier, token);\n\t\t\t},\n\t\t\tfindTextInFiles: (query: vscode.TextSearchQuery, optionsOrCallback, callbackOrToken?, token?: vscode.CancellationToken) => {\n\t\t\t\tlet options: vscode.FindTextInFilesOptions;\n\t\t\t\tlet callback: (result: vscode.TextSearchResult) => void;\n\n\t\t\t\tif (typeof optionsOrCallback === 'object') {\n\t\t\t\t\toptions = optionsOrCallback;\n\t\t\t\t\tcallback = callbackOrToken;\n\t\t\t\t} else {\n\t\t\t\t\toptions = {};\n\t\t\t\t\tcallback = optionsOrCallback;\n\t\t\t\t\ttoken = callbackOrToken;\n\t\t\t\t}\n\n\t\t\t\treturn extHostWorkspace.findTextInFiles(query, options || {}, callback, extension.identifier, token);\n\t\t\t},\n\t\t\tsaveAll: (includeUntitled?) => {\n\t\t\t\treturn extHostWorkspace.saveAll(includeUntitled);\n\t\t\t},\n\t\t\tapplyEdit(edit: vscode.WorkspaceEdit): Thenable<boolean> {\n\t\t\t\treturn extHostEditors.applyWorkspaceEdit(edit);\n\t\t\t},\n\t\t\tcreateFileSystemWatcher: (pattern, ignoreCreate, ignoreChange, ignoreDelete): vscode.FileSystemWatcher => {\n\t\t\t\treturn extHostFileSystemEvent.createFileSystemWatcher(typeConverters.GlobPattern.from(pattern), ignoreCreate, ignoreChange, ignoreDelete);\n\t\t\t},\n\t\t\tget textDocuments() {\n\t\t\t\treturn extHostDocuments.getAllDocumentData().map(data => data.document);\n\t\t\t},\n\t\t\tset textDocuments(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\topenTextDocument(uriOrFileNameOrOptions?: vscode.Uri | string | { language?: string; content?: string; }) {\n\t\t\t\tlet uriPromise: Thenable<URI>;\n\n\t\t\t\tconst options = uriOrFileNameOrOptions as { language?: string; content?: string; };\n\t\t\t\tif (typeof uriOrFileNameOrOptions === 'string') {\n\t\t\t\t\turiPromise = Promise.resolve(URI.file(uriOrFileNameOrOptions));\n\t\t\t\t} else if (uriOrFileNameOrOptions instanceof URI) {\n\t\t\t\t\turiPromise = Promise.resolve(uriOrFileNameOrOptions);\n\t\t\t\t} else if (!options || typeof options === 'object') {\n\t\t\t\t\turiPromise = extHostDocuments.createDocumentData(options);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('illegal argument - uriOrFileNameOrOptions');\n\t\t\t\t}\n\n\t\t\t\treturn uriPromise.then(uri => {\n\t\t\t\t\treturn extHostDocuments.ensureDocumentData(uri).then(() => {\n\t\t\t\t\t\treturn extHostDocuments.getDocument(uri);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tonDidOpenTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidAddDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidCloseTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidRemoveDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidChangeDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidSaveTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocuments.onDidSaveDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonWillSaveTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostDocumentSaveParticipant.getOnWillSaveTextDocumentEvent(extension)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeConfiguration: (listener: (_: any) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) => {\n\t\t\t\treturn configProvider.onDidChangeConfiguration(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tgetConfiguration(section?: string, resource?: vscode.Uri): vscode.WorkspaceConfiguration {\n\t\t\t\tresource = arguments.length === 1 ? undefined : resource;\n\t\t\t\treturn configProvider.getConfiguration(section, resource, extension.identifier);\n\t\t\t},\n\t\t\tregisterTextDocumentContentProvider(scheme: string, provider: vscode.TextDocumentContentProvider) {\n\t\t\t\treturn extHostDocumentContentProviders.registerTextDocumentContentProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterTaskProvider: (type: string, provider: vscode.TaskProvider) => {\n\t\t\t\treturn extHostTask.registerTaskProvider(extension, provider);\n\t\t\t},\n\t\t\tregisterFileSystemProvider(scheme, provider, options) {\n\t\t\t\treturn extHostFileSystem.registerFileSystemProvider(scheme, provider, options);\n\t\t\t},\n\t\t\tregisterFileSearchProvider: proposedApiFunction(extension, (scheme, provider) => {\n\t\t\t\treturn extHostSearch.registerFileSearchProvider(scheme, provider);\n\t\t\t}),\n\t\t\tregisterSearchProvider: proposedApiFunction(extension, () => {\n\t\t\t\t// Temp for live share in Insiders\n\t\t\t\treturn { dispose: () => { } };\n\t\t\t}),\n\t\t\tregisterTextSearchProvider: proposedApiFunction(extension, (scheme, provider) => {\n\t\t\t\treturn extHostSearch.registerTextSearchProvider(scheme, provider);\n\t\t\t}),\n\t\t\tregisterDocumentCommentProvider: proposedApiFunction(extension, (provider: vscode.DocumentCommentProvider) => {\n\t\t\t\treturn extHostComment.registerDocumentCommentProvider(extension.identifier, provider);\n\t\t\t}),\n\t\t\tregisterWorkspaceCommentProvider: proposedApiFunction(extension, (provider: vscode.WorkspaceCommentProvider) => {\n\t\t\t\treturn extHostComment.registerWorkspaceCommentProvider(extension.identifier, provider);\n\t\t\t}),\n\t\t\tregisterRemoteAuthorityResolver: proposedApiFunction(extension, (authorityPrefix: string, resolver: vscode.RemoteAuthorityResolver) => {\n\t\t\t\treturn extensionService.registerRemoteAuthorityResolver(authorityPrefix, resolver);\n\t\t\t}),\n\t\t\tregisterResourceLabelFormatter: proposedApiFunction(extension, (formatter: vscode.ResourceLabelFormatter) => {\n\t\t\t\treturn extHostFileSystem.registerResourceLabelFormatter(formatter);\n\t\t\t}),\n\t\t\tonDidRenameFile: proposedApiFunction(extension, (listener, thisArg?, disposables?) => {\n\t\t\t\treturn extHostFileSystemEvent.onDidRenameFile(listener, thisArg, disposables);\n\t\t\t}),\n\t\t\tonWillRenameFile: proposedApiFunction(extension, (listener, thisArg?, disposables?) => {\n\t\t\t\treturn extHostFileSystemEvent.getOnWillRenameFileEvent(extension)(listener, thisArg, disposables);\n\t\t\t})\n\t\t};\n\n\t\t// namespace: scm\n\t\tconst scm: typeof vscode.scm = {\n\t\t\tget inputBox() {\n\t\t\t\treturn extHostSCM.getLastInputBox(extension)!; // Strict null override - Deprecated api\n\t\t\t},\n\t\t\tcreateSourceControl(id: string, label: string, rootUri?: vscode.Uri) {\n\t\t\t\treturn extHostSCM.createSourceControl(extension, id, label, rootUri);\n\t\t\t}\n\t\t};\n\n\t\tconst comment: typeof vscode.comment = {\n\t\t\tcreateCommentController(id: string, label: string) {\n\t\t\t\treturn extHostComment.createCommentController(extension, id, label);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: debug\n\t\tconst debug: typeof vscode.debug = {\n\t\t\tget activeDebugSession() {\n\t\t\t\treturn extHostDebugService.activeDebugSession;\n\t\t\t},\n\t\t\tget activeDebugConsole() {\n\t\t\t\treturn extHostDebugService.activeDebugConsole;\n\t\t\t},\n\t\t\tget breakpoints() {\n\t\t\t\treturn extHostDebugService.breakpoints;\n\t\t\t},\n\t\t\tonDidStartDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidStartDebugSession(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidTerminateDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidTerminateDebugSession(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeActiveDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidChangeActiveDebugSession(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidReceiveDebugSessionCustomEvent(listener, thisArg?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidReceiveDebugSessionCustomEvent(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeBreakpoints(listener, thisArgs?, disposables?) {\n\t\t\t\treturn extHostDebugService.onDidChangeBreakpoints(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tregisterDebugConfigurationProvider(debugType: string, provider: vscode.DebugConfigurationProvider) {\n\t\t\t\treturn extHostDebugService.registerDebugConfigurationProvider(debugType, provider);\n\t\t\t},\n\t\t\tregisterDebugAdapterDescriptorFactory(debugType: string, factory: vscode.DebugAdapterDescriptorFactory) {\n\t\t\t\treturn extHostDebugService.registerDebugAdapterDescriptorFactory(extension, debugType, factory);\n\t\t\t},\n\t\t\tregisterDebugAdapterTrackerFactory(debugType: string, factory: vscode.DebugAdapterTrackerFactory) {\n\t\t\t\treturn extHostDebugService.registerDebugAdapterTrackerFactory(debugType, factory);\n\t\t\t},\n\t\t\tstartDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration) {\n\t\t\t\treturn extHostDebugService.startDebugging(folder, nameOrConfig);\n\t\t\t},\n\t\t\taddBreakpoints(breakpoints: vscode.Breakpoint[]) {\n\t\t\t\treturn extHostDebugService.addBreakpoints(breakpoints);\n\t\t\t},\n\t\t\tremoveBreakpoints(breakpoints: vscode.Breakpoint[]) {\n\t\t\t\treturn extHostDebugService.removeBreakpoints(breakpoints);\n\t\t\t}\n\t\t};\n\n\t\tconst tasks: typeof vscode.tasks = {\n\t\t\tregisterTaskProvider: (type: string, provider: vscode.TaskProvider) => {\n\t\t\t\treturn extHostTask.registerTaskProvider(extension, provider);\n\t\t\t},\n\t\t\tfetchTasks: (filter?: vscode.TaskFilter): Thenable<vscode.Task[]> => {\n\t\t\t\treturn extHostTask.fetchTasks(filter);\n\t\t\t},\n\t\t\texecuteTask: (task: vscode.Task): Thenable<vscode.TaskExecution> => {\n\t\t\t\treturn extHostTask.executeTask(extension, task);\n\t\t\t},\n\t\t\tget taskExecutions(): vscode.TaskExecution[] {\n\t\t\t\treturn extHostTask.taskExecutions;\n\t\t\t},\n\t\t\tonDidStartTask: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidStartTask(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidEndTask: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidEndTask(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidStartTaskProcess: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidStartTaskProcess(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidEndTaskProcess: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostTask.onDidEndTaskProcess(listeners, thisArgs, disposables);\n\t\t\t}\n\t\t};\n\n\t\treturn <typeof vscode>{\n\t\t\tversion: pkg.version,\n\t\t\t// namespaces\n\t\t\tcommands,\n\t\t\tdebug,\n\t\t\tenv,\n\t\t\textensions,\n\t\t\tlanguages,\n\t\t\tscm,\n\t\t\tcomment,\n\t\t\ttasks,\n\t\t\twindow,\n\t\t\tworkspace,\n\t\t\t// types\n\t\t\tBreakpoint: extHostTypes.Breakpoint,\n\t\t\tCancellationTokenSource: CancellationTokenSource,\n\t\t\tCodeAction: extHostTypes.CodeAction,\n\t\t\tCodeActionKind: extHostTypes.CodeActionKind,\n\t\t\tCodeActionTrigger: extHostTypes.CodeActionTrigger,\n\t\t\tCodeLens: extHostTypes.CodeLens,\n\t\t\tCodeInset: extHostTypes.CodeInset,\n\t\t\tColor: extHostTypes.Color,\n\t\t\tColorInformation: extHostTypes.ColorInformation,\n\t\t\tColorPresentation: extHostTypes.ColorPresentation,\n\t\t\tCommentThreadCollapsibleState: extHostTypes.CommentThreadCollapsibleState,\n\t\t\tCompletionItem: extHostTypes.CompletionItem,\n\t\t\tCompletionItemKind: extHostTypes.CompletionItemKind,\n\t\t\tCompletionList: extHostTypes.CompletionList,\n\t\t\tCompletionTriggerKind: extHostTypes.CompletionTriggerKind,\n\t\t\tConfigurationTarget: extHostTypes.ConfigurationTarget,\n\t\t\tDebugAdapterExecutable: extHostTypes.DebugAdapterExecutable,\n\t\t\tDebugAdapterServer: extHostTypes.DebugAdapterServer,\n\t\t\tDecorationRangeBehavior: extHostTypes.DecorationRangeBehavior,\n\t\t\tDiagnostic: extHostTypes.Diagnostic,\n\t\t\tDiagnosticRelatedInformation: extHostTypes.DiagnosticRelatedInformation,\n\t\t\tDiagnosticSeverity: extHostTypes.DiagnosticSeverity,\n\t\t\tDiagnosticTag: extHostTypes.DiagnosticTag,\n\t\t\tDisposable: extHostTypes.Disposable,\n\t\t\tDocumentHighlight: extHostTypes.DocumentHighlight,\n\t\t\tDocumentHighlightKind: extHostTypes.DocumentHighlightKind,\n\t\t\tDocumentLink: extHostTypes.DocumentLink,\n\t\t\tDocumentSymbol: extHostTypes.DocumentSymbol,\n\t\t\tEndOfLine: extHostTypes.EndOfLine,\n\t\t\tEventEmitter: Emitter,\n\t\t\tCustomExecution: extHostTypes.CustomExecution,\n\t\t\tFileChangeType: extHostTypes.FileChangeType,\n\t\t\tFileSystemError: extHostTypes.FileSystemError,\n\t\t\tFileType: files.FileType,\n\t\t\tFoldingRange: extHostTypes.FoldingRange,\n\t\t\tFoldingRangeKind: extHostTypes.FoldingRangeKind,\n\t\t\tFunctionBreakpoint: extHostTypes.FunctionBreakpoint,\n\t\t\tHover: extHostTypes.Hover,\n\t\t\tIndentAction: languageConfiguration.IndentAction,\n\t\t\tLocation: extHostTypes.Location,\n\t\t\tLogLevel: extHostTypes.LogLevel,\n\t\t\tMarkdownString: extHostTypes.MarkdownString,\n\t\t\tOverviewRulerLane: OverviewRulerLane,\n\t\t\tParameterInformation: extHostTypes.ParameterInformation,\n\t\t\tPosition: extHostTypes.Position,\n\t\t\tProcessExecution: extHostTypes.ProcessExecution,\n\t\t\tProgressLocation: extHostTypes.ProgressLocation,\n\t\t\tQuickInputButtons: extHostTypes.QuickInputButtons,\n\t\t\tRange: extHostTypes.Range,\n\t\t\tRelativePattern: extHostTypes.RelativePattern,\n\t\t\tResolvedAuthority: extHostTypes.ResolvedAuthority,\n\t\t\tSelection: extHostTypes.Selection,\n\t\t\tSelectionRange: extHostTypes.SelectionRange,\n\t\t\tShellExecution: extHostTypes.ShellExecution,\n\t\t\tShellQuoting: extHostTypes.ShellQuoting,\n\t\t\tSignatureHelpTriggerKind: extHostTypes.SignatureHelpTriggerKind,\n\t\t\tSignatureHelp: extHostTypes.SignatureHelp,\n\t\t\tSignatureInformation: extHostTypes.SignatureInformation,\n\t\t\tSnippetString: extHostTypes.SnippetString,\n\t\t\tSourceBreakpoint: extHostTypes.SourceBreakpoint,\n\t\t\tSourceControlInputBoxValidationType: extHostTypes.SourceControlInputBoxValidationType,\n\t\t\tStatusBarAlignment: extHostTypes.StatusBarAlignment,\n\t\t\tSymbolInformation: extHostTypes.SymbolInformation,\n\t\t\tSymbolKind: extHostTypes.SymbolKind,\n\t\t\tTask: extHostTypes.Task,\n\t\t\tTask2: extHostTypes.Task,\n\t\t\tTaskGroup: extHostTypes.TaskGroup,\n\t\t\tTaskPanelKind: extHostTypes.TaskPanelKind,\n\t\t\tTaskRevealKind: extHostTypes.TaskRevealKind,\n\t\t\tTaskScope: extHostTypes.TaskScope,\n\t\t\tTextDocumentSaveReason: extHostTypes.TextDocumentSaveReason,\n\t\t\tTextEdit: extHostTypes.TextEdit,\n\t\t\tTextEditorCursorStyle: TextEditorCursorStyle,\n\t\t\tTextEditorLineNumbersStyle: extHostTypes.TextEditorLineNumbersStyle,\n\t\t\tTextEditorRevealType: extHostTypes.TextEditorRevealType,\n\t\t\tTextEditorSelectionChangeKind: extHostTypes.TextEditorSelectionChangeKind,\n\t\t\tThemeColor: extHostTypes.ThemeColor,\n\t\t\tThemeIcon: extHostTypes.ThemeIcon,\n\t\t\tTreeItem: extHostTypes.TreeItem,\n\t\t\tTreeItem2: extHostTypes.TreeItem,\n\t\t\tTreeItemCollapsibleState: extHostTypes.TreeItemCollapsibleState,\n\t\t\tUri: URI,\n\t\t\tViewColumn: extHostTypes.ViewColumn,\n\t\t\tWorkspaceEdit: extHostTypes.WorkspaceEdit,\n\t\t\t// functions\n\t\t};\n\t};\n}\n\nclass Extension<T> implements vscode.Extension<T> {\n\n\tprivate _extensionService: ExtHostExtensionService;\n\tprivate _identifier: ExtensionIdentifier;\n\n\tpublic id: string;\n\tpublic extensionPath: string;\n\tpublic packageJSON: IExtensionDescription;\n\n\tconstructor(extensionService: ExtHostExtensionService, description: IExtensionDescription) {\n\t\tthis._extensionService = extensionService;\n\t\tthis._identifier = description.identifier;\n\t\tthis.id = description.identifier.value;\n\t\tthis.extensionPath = path.normalize(originalFSPath(description.extensionLocation));\n\t\tthis.packageJSON = description;\n\t}\n\n\tget isActive(): boolean {\n\t\treturn this._extensionService.isActivated(this._identifier);\n\t}\n\n\tget exports(): T {\n\t\tif (this.packageJSON.api === 'none') {\n\t\t\treturn undefined!; // Strict nulloverride - Public api\n\t\t}\n\t\treturn <T>this._extensionService.getExtensionExports(this._identifier);\n\t}\n\n\tactivate(): Thenable<T> {\n\t\treturn this._extensionService.activateByIdWithErrors(this._identifier, new ExtensionActivatedByAPI(false)).then(() => this.exports);\n\t}\n}\n\nexport function initializeExtensionApi(extensionService: ExtHostExtensionService, apiFactory: IExtensionApiFactory, extensionRegistry: ExtensionDescriptionRegistry, configProvider: ExtHostConfigProvider): Promise<void> {\n\treturn extensionService.getExtensionPathIndex().then(trie => defineAPI(apiFactory, trie, extensionRegistry, configProvider));\n}\n\nfunction defineAPI(factory: IExtensionApiFactory, extensionPaths: TernarySearchTree<IExtensionDescription>, extensionRegistry: ExtensionDescriptionRegistry, configProvider: ExtHostConfigProvider): void {\n\t// each extension is meant to get its own api implementation\n\tconst extApiImpl = new Map<string, typeof vscode>();\n\tlet defaultApiImpl: typeof vscode;\n\n\tlet node_module;\n\tif (process.env.isBrowser) {\n\t\tnode_module = self['require'].__$__nodeRequire('module');\n\t} else {\n\t\tnode_module = <any>require.__$__nodeRequire('module');\n\t}\n\n\tconst original = node_module._load;\n\tnode_module._load = function load(request: string, parent: any, isMain: any) {\n\t\tif (request !== 'vscode') {\n\t\t\treturn original.apply(this, arguments);\n\t\t}\n\n\t\t// get extension id from filename and api for extension\n\t\tconst ext = extensionPaths.findSubstr(URI.file(parent.filename).fsPath);\n\t\tif (ext) {\n\t\t\tlet apiImpl = extApiImpl.get(ExtensionIdentifier.toKey(ext.identifier));\n\t\t\tif (!apiImpl) {\n\t\t\t\tapiImpl = factory(ext, extensionRegistry, configProvider);\n\t\t\t\textApiImpl.set(ExtensionIdentifier.toKey(ext.identifier), apiImpl);\n\t\t\t}\n\t\t\treturn apiImpl;\n\t\t}\n\n\t\t// fall back to a default implementation\n\t\tif (!defaultApiImpl) {\n\t\t\tlet extensionPathsPretty = '';\n\t\t\textensionPaths.forEach((value, index) => extensionPathsPretty += `\\t${index} -> ${value.identifier.value}\\n`);\n\t\t\t// console.warn(`Could not identify extension for 'vscode' require call from ${parent.filename}. These are the extension path mappings: \\n${extensionPathsPretty}`);\n\t\t\tdefaultApiImpl = factory(nullExtensionDescription, extensionRegistry, configProvider);\n\t\t}\n\t\treturn defaultApiImpl;\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { originalFSPath } from 'vs/base/common/resources';\nimport { Barrier } from 'vs/base/common/async';\nimport { IDisposable, dispose, toDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport Severity from 'vs/base/common/severity';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { createApiFactory, initializeExtensionApi, IExtensionApiFactory } from 'vs/workbench/api/node/extHost.api.impl';\nimport { ExtHostExtensionServiceShape, IEnvironment, IInitData, IMainContext, MainContext, MainThreadExtensionServiceShape, MainThreadTelemetryShape, MainThreadWorkspaceShape, IStaticWorkspaceData } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostConfiguration } from 'vs/workbench/api/node/extHostConfiguration';\nimport { ActivatedExtension, EmptyExtension, ExtensionActivatedByAPI, ExtensionActivatedByEvent, ExtensionActivationReason, ExtensionActivationTimes, ExtensionActivationTimesBuilder, ExtensionsActivator, IExtensionAPI, IExtensionContext, IExtensionMemento, IExtensionModule, HostExtension } from 'vs/workbench/api/node/extHostExtensionActivator';\nimport { ExtHostLogService } from 'vs/workbench/api/node/extHostLogService';\nimport { ExtHostStorage } from 'vs/workbench/api/node/extHostStorage';\nimport { ExtHostWorkspace } from 'vs/workbench/api/node/extHostWorkspace';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { ExtensionDescriptionRegistry } from 'vs/workbench/services/extensions/node/extensionDescriptionRegistry';\nimport { connectProxyResolver } from 'vs/workbench/services/extensions/node/proxyResolver';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { ResolvedAuthority } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport * as vscode from 'vscode';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { Schemas } from 'vs/base/common/network';\n\nclass ExtensionMemento implements IExtensionMemento {\n\n\tprivate readonly _id: string;\n\tprivate readonly _shared: boolean;\n\tprivate readonly _storage: ExtHostStorage;\n\n\tprivate readonly _init: Promise<ExtensionMemento>;\n\tprivate _value: { [n: string]: any; };\n\tprivate readonly _storageListener: IDisposable;\n\n\tconstructor(id: string, global: boolean, storage: ExtHostStorage) {\n\t\tthis._id = id;\n\t\tthis._shared = global;\n\t\tthis._storage = storage;\n\n\t\tthis._init = this._storage.getValue(this._shared, this._id, Object.create(null)).then(value => {\n\t\t\tthis._value = value;\n\t\t\treturn this;\n\t\t});\n\n\t\tthis._storageListener = this._storage.onDidChangeStorage(e => {\n\t\t\tif (e.shared === this._shared && e.key === this._id) {\n\t\t\t\tthis._value = e.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tget whenReady(): Promise<ExtensionMemento> {\n\t\treturn this._init;\n\t}\n\n\tget<T>(key: string, defaultValue: T): T {\n\t\tlet value = this._value[key];\n\t\tif (typeof value === 'undefined') {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\treturn value;\n\t}\n\n\tupdate(key: string, value: any): Promise<boolean> {\n\t\tthis._value[key] = value;\n\t\treturn this._storage\n\t\t\t.setValue(this._shared, this._id, this._value)\n\t\t\t.then(() => true);\n\t}\n\n\tdispose(): void {\n\t\tthis._storageListener.dispose();\n\t}\n}\n\nclass ExtensionStoragePath {\n\n\tprivate readonly _workspace?: IStaticWorkspaceData;\n\tprivate readonly _environment: IEnvironment;\n\n\tprivate readonly _ready: Promise<string | undefined>;\n\tprivate _value?: string;\n\n\tconstructor(workspace: IStaticWorkspaceData | undefined, environment: IEnvironment) {\n\t\tthis._workspace = workspace;\n\t\tthis._environment = environment;\n\t\tthis._ready = this._getOrCreateWorkspaceStoragePath().then(value => this._value = value);\n\t}\n\n\tget whenReady(): Promise<any> {\n\t\treturn this._ready;\n\t}\n\n\tworkspaceValue(extension: IExtensionDescription): string | undefined {\n\t\tif (this._value) {\n\t\t\treturn path.join(this._value, extension.identifier.value);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tglobalValue(extension: IExtensionDescription): string {\n\t\treturn path.join(this._environment.globalStorageHome.fsPath, extension.identifier.value.toLowerCase());\n\t}\n\n\tprivate async _getOrCreateWorkspaceStoragePath(): Promise<string | undefined> {\n\t\tif (!this._workspace) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (!this._environment.appSettingsHome) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst storageName = this._workspace.id;\n\t\tconst storagePath = path.join(this._environment.appSettingsHome.fsPath, 'workspaceStorage', storageName);\n\n\t\tconst exists = await pfs.dirExists(storagePath);\n\n\t\tif (exists) {\n\t\t\treturn storagePath;\n\t\t}\n\n\t\ttry {\n\t\t\tawait pfs.mkdirp(storagePath);\n\t\t\tawait pfs.writeFile(\n\t\t\t\tpath.join(storagePath, 'meta.json'),\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tid: this._workspace.id,\n\t\t\t\t\tconfiguration: this._workspace.configuration && URI.revive(this._workspace.configuration).toString(),\n\t\t\t\t\tname: this._workspace.name\n\t\t\t\t}, undefined, 2)\n\t\t\t);\n\t\t\treturn storagePath;\n\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\ninterface ITestRunner {\n\trun(testsRoot: string, clb: (error: Error, failures?: number) => void): void;\n}\n\nexport class ExtHostExtensionService implements ExtHostExtensionServiceShape {\n\n\tprivate static readonly WORKSPACE_CONTAINS_TIMEOUT = 7000;\n\n\tprivate readonly _nativeExit: (code?: number) => void;\n\tprivate readonly _initData: IInitData;\n\tprivate readonly _extHostContext: IMainContext;\n\tprivate readonly _extHostWorkspace: ExtHostWorkspace;\n\tprivate readonly _extHostConfiguration: ExtHostConfiguration;\n\tprivate readonly _extHostLogService: ExtHostLogService;\n\n\tprivate readonly _mainThreadWorkspaceProxy: MainThreadWorkspaceShape;\n\tprivate readonly _mainThreadTelemetryProxy: MainThreadTelemetryShape;\n\tprivate readonly _mainThreadExtensionsProxy: MainThreadExtensionServiceShape;\n\n\tprivate readonly _almostReadyToRunExtensions: Barrier;\n\tprivate readonly _readyToRunExtensions: Barrier;\n\tprivate readonly _registry: ExtensionDescriptionRegistry;\n\tprivate readonly _storage: ExtHostStorage;\n\tprivate readonly _storagePath: ExtensionStoragePath;\n\tprivate readonly _activator: ExtensionsActivator;\n\tprivate _extensionPathIndex: Promise<TernarySearchTree<IExtensionDescription>> | null;\n\tprivate readonly _extensionApiFactory: IExtensionApiFactory;\n\n\tprivate readonly _resolvers: { [authorityPrefix: string]: vscode.RemoteAuthorityResolver; };\n\n\tprivate _started: boolean;\n\n\tconstructor(\n\t\tnativeExit: (code?: number) => void,\n\t\tinitData: IInitData,\n\t\textHostContext: IMainContext,\n\t\textHostWorkspace: ExtHostWorkspace,\n\t\textHostConfiguration: ExtHostConfiguration,\n\t\textHostLogService: ExtHostLogService\n\t) {\n\t\tthis._nativeExit = nativeExit;\n\t\tthis._initData = initData;\n\t\tthis._extHostContext = extHostContext;\n\t\tthis._extHostWorkspace = extHostWorkspace;\n\t\tthis._extHostConfiguration = extHostConfiguration;\n\t\tthis._extHostLogService = extHostLogService;\n\n\t\tthis._mainThreadWorkspaceProxy = this._extHostContext.getProxy(MainContext.MainThreadWorkspace);\n\t\tthis._mainThreadTelemetryProxy = this._extHostContext.getProxy(MainContext.MainThreadTelemetry);\n\t\tthis._mainThreadExtensionsProxy = this._extHostContext.getProxy(MainContext.MainThreadExtensionService);\n\n\t\tthis._almostReadyToRunExtensions = new Barrier();\n\t\tthis._readyToRunExtensions = new Barrier();\n\t\tthis._registry = new ExtensionDescriptionRegistry(initData.extensions);\n\t\tthis._storage = new ExtHostStorage(this._extHostContext);\n\t\tthis._storagePath = new ExtensionStoragePath(initData.workspace, initData.environment);\n\n\t\tconst hostExtensions = new Set<string>();\n\t\tinitData.hostExtensions.forEach((extensionId) => hostExtensions.add(ExtensionIdentifier.toKey(extensionId)));\n\n\t\tthis._activator = new ExtensionsActivator(this._registry, initData.resolvedExtensions, initData.hostExtensions, {\n\t\t\tshowMessage: (severity: Severity, message: string): void => {\n\t\t\t\tthis._mainThreadExtensionsProxy.$localShowMessage(severity, message);\n\n\t\t\t\tswitch (severity) {\n\t\t\t\t\tcase Severity.Error:\n\t\t\t\t\t\tconsole.error(message);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Severity.Warning:\n\t\t\t\t\t\tconsole.warn(message);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(message);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tactualActivateExtension: async (extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<ActivatedExtension> => {\n\t\t\t\tif (hostExtensions.has(ExtensionIdentifier.toKey(extensionId))) {\n\t\t\t\t\tconst activationEvent = (reason instanceof ExtensionActivatedByEvent ? reason.activationEvent : null);\n\t\t\t\t\tawait this._mainThreadExtensionsProxy.$activateExtension(extensionId, activationEvent);\n\t\t\t\t\treturn new HostExtension();\n\t\t\t\t}\n\t\t\t\tconst extensionDescription = this._registry.getExtensionDescription(extensionId)!;\n\t\t\t\treturn this._activateExtension(extensionDescription, reason);\n\t\t\t}\n\t\t});\n\t\tthis._extensionPathIndex = null;\n\n\t\t// initialize API first (i.e. do not release barrier until the API is initialized)\n\t\tthis._extensionApiFactory = createApiFactory(this._initData, this._extHostContext, this._extHostWorkspace, this._extHostConfiguration, this, this._extHostLogService, this._storage);\n\n\t\tthis._resolvers = Object.create(null);\n\n\t\tthis._started = false;\n\n\t\tthis._initialize();\n\n\t\tif (this._initData.autoStart) {\n\t\t\tthis._startExtensionHost();\n\t\t}\n\t}\n\n\tprivate async _initialize(): Promise<void> {\n\t\ttry {\n\t\t\tconst configProvider = await this._extHostConfiguration.getConfigProvider();\n\t\t\tawait initializeExtensionApi(this, this._extensionApiFactory, this._registry, configProvider);\n\t\t\t// Do this when extension service exists, but extensions are not being activated yet.\n\t\t\tawait connectProxyResolver(this._extHostWorkspace, configProvider, this, this._extHostLogService, this._mainThreadTelemetryProxy);\n\t\t\tthis._almostReadyToRunExtensions.open();\n\n\t\t\tawait this._extHostWorkspace.waitForInitializeCall();\n\t\t\tthis._readyToRunExtensions.open();\n\t\t} catch (err) {\n\t\t\terrors.onUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic async deactivateAll(): Promise<void> {\n\t\tlet allPromises: Promise<void>[] = [];\n\t\ttry {\n\t\t\tconst allExtensions = this._registry.getAllExtensionDescriptions();\n\t\t\tconst allExtensionsIds = allExtensions.map(ext => ext.identifier);\n\t\t\tconst activatedExtensions = allExtensionsIds.filter(id => this.isActivated(id));\n\n\t\t\tallPromises = activatedExtensions.map((extensionId) => {\n\t\t\t\treturn this._deactivate(extensionId);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\t// TODO: write to log once we have one\n\t\t}\n\t\tawait allPromises;\n\t}\n\n\tpublic isActivated(extensionId: ExtensionIdentifier): boolean {\n\t\tif (this._readyToRunExtensions.isOpen()) {\n\t\t\treturn this._activator.isActivated(extensionId);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _activateByEvent(activationEvent: string, startup: boolean): Promise<void> {\n\t\tconst reason = new ExtensionActivatedByEvent(startup, activationEvent);\n\t\treturn this._activator.activateByEvent(activationEvent, reason);\n\t}\n\n\tprivate _activateById(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\treturn this._activator.activateById(extensionId, reason);\n\t}\n\n\tpublic activateByIdWithErrors(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\treturn this._activateById(extensionId, reason).then(() => {\n\t\t\tconst extension = this._activator.getActivatedExtension(extensionId);\n\t\t\tif (extension.activationFailed) {\n\t\t\t\t// activation failed => bubble up the error as the promise result\n\t\t\t\treturn Promise.reject(extension.activationFailedError);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tpublic getExtensionRegistry(): Promise<ExtensionDescriptionRegistry> {\n\t\treturn this._readyToRunExtensions.wait().then(_ => this._registry);\n\t}\n\n\tpublic getExtensionExports(extensionId: ExtensionIdentifier): IExtensionAPI | null | undefined {\n\t\tif (this._readyToRunExtensions.isOpen()) {\n\t\t\treturn this._activator.getActivatedExtension(extensionId).exports;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// create trie to enable fast 'filename -> extension id' look up\n\tpublic getExtensionPathIndex(): Promise<TernarySearchTree<IExtensionDescription>> {\n\t\tif (!this._extensionPathIndex) {\n\t\t\tconst tree = TernarySearchTree.forPaths<IExtensionDescription>();\n\t\t\tconst extensions = this._registry.getAllExtensionDescriptions().map(ext => {\n\t\t\t\tif (!ext.main) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn pfs.realpath(ext.extensionLocation.fsPath).then(value => tree.set(URI.file(value).fsPath, ext));\n\t\t\t});\n\t\t\tthis._extensionPathIndex = Promise.all(extensions).then(() => tree);\n\t\t}\n\t\treturn this._extensionPathIndex;\n\t}\n\n\tprivate _deactivate(extensionId: ExtensionIdentifier): Promise<void> {\n\t\tlet result = Promise.resolve(undefined);\n\n\t\tif (!this._readyToRunExtensions.isOpen()) {\n\t\t\treturn result;\n\t\t}\n\n\t\tif (!this._activator.isActivated(extensionId)) {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst extension = this._activator.getActivatedExtension(extensionId);\n\t\tif (!extension) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// call deactivate if available\n\t\ttry {\n\t\t\tif (typeof extension.module.deactivate === 'function') {\n\t\t\t\tresult = Promise.resolve(extension.module.deactivate()).then(undefined, (err) => {\n\t\t\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t}\n\n\t\t// clean up subscriptions\n\t\ttry {\n\t\t\tdispose(extension.subscriptions);\n\t\t} catch (err) {\n\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic addMessage(extensionId: ExtensionIdentifier, severity: Severity, message: string): void {\n\t\tthis._mainThreadExtensionsProxy.$addMessage(extensionId, severity, message);\n\t}\n\n\t// --- impl\n\n\tprivate _activateExtension(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason): Promise<ActivatedExtension> {\n\t\tthis._mainThreadExtensionsProxy.$onWillActivateExtension(extensionDescription.identifier);\n\t\treturn this._doActivateExtension(extensionDescription, reason).then((activatedExtension) => {\n\t\t\tconst activationTimes = activatedExtension.activationTimes;\n\t\t\tconst activationEvent = (reason instanceof ExtensionActivatedByEvent ? reason.activationEvent : null);\n\t\t\tthis._mainThreadExtensionsProxy.$onDidActivateExtension(extensionDescription.identifier, activationTimes.startup, activationTimes.codeLoadingTime, activationTimes.activateCallTime, activationTimes.activateResolvedTime, activationEvent);\n\t\t\tthis._logExtensionActivationTimes(extensionDescription, reason, 'success', activationTimes);\n\t\t\treturn activatedExtension;\n\t\t}, (err) => {\n\t\t\tthis._mainThreadExtensionsProxy.$onExtensionActivationFailed(extensionDescription.identifier);\n\t\t\tthis._logExtensionActivationTimes(extensionDescription, reason, 'failure');\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tprivate _logExtensionActivationTimes(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason, outcome: string, activationTimes?: ExtensionActivationTimes) {\n\t\tconst event = getTelemetryActivationEvent(extensionDescription, reason);\n\t\t/* __GDPR__\n\t\t\t\"extensionActivationTimes\" : {\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${TelemetryActivationEvent}\",\n\t\t\t\t\t\"${ExtensionActivationTimes}\"\n\t\t\t\t],\n\t\t\t\t\"outcome\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis._mainThreadTelemetryProxy.$publicLog('extensionActivationTimes', {\n\t\t\t...event,\n\t\t\t...(activationTimes || {}),\n\t\t\toutcome,\n\t\t});\n\t}\n\n\tprivate _doActivateExtension(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason): Promise<ActivatedExtension> {\n\t\tconst event = getTelemetryActivationEvent(extensionDescription, reason);\n\t\t/* __GDPR__\n\t\t\t\"activatePlugin\" : {\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${TelemetryActivationEvent}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis._mainThreadTelemetryProxy.$publicLog('activatePlugin', event);\n\t\tif (!extensionDescription.main) {\n\t\t\t// Treat the extension as being empty => NOT AN ERROR CASE\n\t\t\treturn Promise.resolve(new EmptyExtension(ExtensionActivationTimes.NONE));\n\t\t}\n\n\t\tthis._extHostLogService.info(`ExtensionService#_doActivateExtension ${extensionDescription.identifier.value} ${JSON.stringify(reason)}`);\n\n\t\tconst activationTimesBuilder = new ExtensionActivationTimesBuilder(reason.startup);\n\t\treturn Promise.all<any>([\n\t\t\tloadCommonJSModule(this._extHostLogService, extensionDescription.main, activationTimesBuilder),\n\t\t\tthis._loadExtensionContext(extensionDescription)\n\t\t]).then(values => {\n\t\t\treturn ExtHostExtensionService._callActivate(this._extHostLogService, extensionDescription.identifier, <IExtensionModule>values[0], <IExtensionContext>values[1], activationTimesBuilder);\n\t\t});\n\t}\n\n\tprivate _loadExtensionContext(extensionDescription: IExtensionDescription): Promise<IExtensionContext> {\n\n\t\tconst globalState = new ExtensionMemento(extensionDescription.identifier.value, true, this._storage);\n\t\tconst workspaceState = new ExtensionMemento(extensionDescription.identifier.value, false, this._storage);\n\n\t\tthis._extHostLogService.trace(`ExtensionService#loadExtensionContext ${extensionDescription.identifier.value}`);\n\t\treturn Promise.all([\n\t\t\tglobalState.whenReady,\n\t\t\tworkspaceState.whenReady,\n\t\t\tthis._storagePath.whenReady\n\t\t]).then(() => {\n\t\t\tconst that = this;\n\t\t\treturn Object.freeze(<IExtensionContext>{\n\t\t\t\tglobalState,\n\t\t\t\tworkspaceState,\n\t\t\t\tsubscriptions: [],\n\t\t\t\tget extensionPath() { return extensionDescription.extensionLocation.fsPath; },\n\t\t\t\tstoragePath: this._storagePath.workspaceValue(extensionDescription),\n\t\t\t\tglobalStoragePath: this._storagePath.globalValue(extensionDescription),\n\t\t\t\tasAbsolutePath: (relativePath: string) => { return path.join(extensionDescription.extensionLocation.fsPath, relativePath); },\n\t\t\t\tlogPath: that._extHostLogService.getLogDirectory(extensionDescription.identifier)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate static _callActivate(logService: ILogService, extensionId: ExtensionIdentifier, extensionModule: IExtensionModule, context: IExtensionContext, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<ActivatedExtension> {\n\t\t// Make sure the extension's surface is not undefined\n\t\textensionModule = extensionModule || {\n\t\t\tactivate: undefined,\n\t\t\tdeactivate: undefined\n\t\t};\n\n\t\treturn this._callActivateOptional(logService, extensionId, extensionModule, context, activationTimesBuilder).then((extensionExports) => {\n\t\t\treturn new ActivatedExtension(false, null, activationTimesBuilder.build(), extensionModule, extensionExports, context.subscriptions);\n\t\t});\n\t}\n\n\tprivate static _callActivateOptional(logService: ILogService, extensionId: ExtensionIdentifier, extensionModule: IExtensionModule, context: IExtensionContext, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<IExtensionAPI> {\n\t\tif (typeof extensionModule.activate === 'function') {\n\t\t\ttry {\n\t\t\t\tactivationTimesBuilder.activateCallStart();\n\t\t\t\tlogService.trace(`ExtensionService#_callActivateOptional ${extensionId.value}`);\n\t\t\t\tconst activateResult: Promise<IExtensionAPI> = extensionModule.activate.apply(process.env.isBrowser ? self : global, [context]);\n\t\t\t\tactivationTimesBuilder.activateCallStop();\n\n\t\t\t\tactivationTimesBuilder.activateResolveStart();\n\t\t\t\treturn Promise.resolve(activateResult).then((value) => {\n\t\t\t\t\tactivationTimesBuilder.activateResolveStop();\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t} else {\n\t\t\t// No activate found => the module is the extension's exports\n\t\t\treturn Promise.resolve<IExtensionAPI>(extensionModule);\n\t\t}\n\t}\n\n\t// -- eager activation\n\n\t// Handle \"eager\" activation extensions\n\tprivate _handleEagerExtensions(): Promise<void> {\n\t\tthis._activateByEvent('*', true).then(undefined, (err) => {\n\t\t\tconsole.error(err);\n\t\t});\n\n\t\treturn this._handleWorkspaceContainsEagerExtensions(this._extHostWorkspace.workspace);\n\t}\n\n\tprivate _handleWorkspaceContainsEagerExtensions(workspace: IWorkspace | undefined): Promise<void> {\n\t\tif (!workspace || workspace.folders.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn Promise.all(\n\t\t\tthis._registry.getAllExtensionDescriptions().map((desc) => {\n\t\t\t\treturn this._handleWorkspaceContainsEagerExtension(workspace, desc);\n\t\t\t})\n\t\t).then(() => { });\n\t}\n\n\tprivate _handleWorkspaceContainsEagerExtension(workspace: IWorkspace, desc: IExtensionDescription): Promise<void> {\n\t\tconst activationEvents = desc.activationEvents;\n\t\tif (!activationEvents) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst fileNames: string[] = [];\n\t\tconst globPatterns: string[] = [];\n\n\t\tfor (const activationEvent of activationEvents) {\n\t\t\tif (/^workspaceContains:/.test(activationEvent)) {\n\t\t\t\tconst fileNameOrGlob = activationEvent.substr('workspaceContains:'.length);\n\t\t\t\tif (fileNameOrGlob.indexOf('*') >= 0 || fileNameOrGlob.indexOf('?') >= 0) {\n\t\t\t\t\tglobPatterns.push(fileNameOrGlob);\n\t\t\t\t} else {\n\t\t\t\t\tfileNames.push(fileNameOrGlob);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (fileNames.length === 0 && globPatterns.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst fileNamePromise = Promise.all(fileNames.map((fileName) => this._activateIfFileName(workspace, desc.identifier, fileName))).then(() => { });\n\t\tconst globPatternPromise = this._activateIfGlobPatterns(desc.identifier, globPatterns);\n\n\t\treturn Promise.all([fileNamePromise, globPatternPromise]).then(() => { });\n\t}\n\n\tprivate async _activateIfFileName(workspace: IWorkspace, extensionId: ExtensionIdentifier, fileName: string): Promise<void> {\n\n\t\t// find exact path\n\t\tfor (const { uri } of workspace.folders) {\n\t\t\tif (await pfs.exists(path.join(URI.revive(uri).fsPath, fileName))) {\n\t\t\t\t// the file was found\n\t\t\t\treturn (\n\t\t\t\t\tthis._activateById(extensionId, new ExtensionActivatedByEvent(true, `workspaceContains:${fileName}`))\n\t\t\t\t\t\t.then(undefined, err => console.error(err))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate async _activateIfGlobPatterns(extensionId: ExtensionIdentifier, globPatterns: string[]): Promise<void> {\n\t\tthis._extHostLogService.trace(`extensionHostMain#activateIfGlobPatterns: fileSearch, extension: ${extensionId.value}, entryPoint: workspaceContains`);\n\n\t\tif (globPatterns.length === 0) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\tconst searchP = this._mainThreadWorkspaceProxy.$checkExists(globPatterns, tokenSource.token);\n\n\t\tconst timer = setTimeout(async () => {\n\t\t\ttokenSource.cancel();\n\t\t\tthis._activateById(extensionId, new ExtensionActivatedByEvent(true, `workspaceContainsTimeout:${globPatterns.join(',')}`))\n\t\t\t\t.then(undefined, err => console.error(err));\n\t\t}, ExtHostExtensionService.WORKSPACE_CONTAINS_TIMEOUT);\n\n\t\tlet exists: boolean = false;\n\t\ttry {\n\t\t\texists = await searchP;\n\t\t} catch (err) {\n\t\t\tif (!errors.isPromiseCanceledError(err)) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t}\n\n\t\ttokenSource.dispose();\n\t\tclearTimeout(timer);\n\n\t\tif (exists) {\n\t\t\t// a file was found matching one of the glob patterns\n\t\t\treturn (\n\t\t\t\tthis._activateById(extensionId, new ExtensionActivatedByEvent(true, `workspaceContains:${globPatterns.join(',')}`))\n\t\t\t\t\t.then(undefined, err => console.error(err))\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate _handleExtensionTests(): Promise<void> {\n\t\treturn this._doHandleExtensionTests().then(undefined, error => {\n\t\t\tconsole.error(error); // ensure any error message makes it onto the console\n\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n\n\tprivate _doHandleExtensionTests(): Promise<void> {\n\t\tconst { extensionDevelopmentLocationURI, extensionTestsLocationURI } = this._initData.environment;\n\t\tif (!(extensionDevelopmentLocationURI && extensionTestsLocationURI && extensionTestsLocationURI.scheme === Schemas.file)) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst extensionTestsPath = originalFSPath(extensionTestsLocationURI);\n\n\t\t// Require the test runner via node require from the provided path\n\t\tlet testRunner: ITestRunner | undefined;\n\t\tlet requireError: Error | undefined;\n\t\ttry {\n\t\t\ttestRunner = <any>require.__$__nodeRequire(extensionTestsPath);\n\t\t} catch (error) {\n\t\t\trequireError = error;\n\t\t}\n\n\t\t// Execute the runner if it follows our spec\n\t\tif (testRunner && typeof testRunner.run === 'function') {\n\t\t\treturn new Promise<void>((c, e) => {\n\t\t\t\ttestRunner!.run(extensionTestsPath, (error, failures) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\te(error.toString());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc(undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\t// after tests have run, we shutdown the host\n\t\t\t\t\tthis._gracefulExit(error || (typeof failures === 'number' && failures > 0) ? 1 /* ERROR */ : 0 /* OK */);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Otherwise make sure to shutdown anyway even in case of an error\n\t\telse {\n\t\t\tthis._gracefulExit(1 /* ERROR */);\n\t\t}\n\n\t\treturn Promise.reject(new Error(requireError ? requireError.toString() : nls.localize('extensionTestError', \"Path {0} does not point to a valid extension test runner.\", extensionTestsPath)));\n\t}\n\n\tprivate _gracefulExit(code: number): void {\n\t\t// to give the PH process a chance to flush any outstanding console\n\t\t// messages to the main process, we delay the exit() by some time\n\t\tsetTimeout(() => this._nativeExit(code), 500);\n\t}\n\n\tprivate _startExtensionHost(): Promise<void> {\n\t\tif (this._started) {\n\t\t\tthrow new Error(`Extension host is already started!`);\n\t\t}\n\t\tthis._started = true;\n\n\t\treturn this._readyToRunExtensions.wait()\n\t\t\t.then(() => this._handleEagerExtensions())\n\t\t\t.then(() => this._handleExtensionTests())\n\t\t\t.then(() => {\n\t\t\t\tthis._extHostLogService.info(`eager extensions activated`);\n\t\t\t});\n\t}\n\n\t// -- called by extensions\n\n\tpublic registerRemoteAuthorityResolver(authorityPrefix: string, resolver: vscode.RemoteAuthorityResolver): vscode.Disposable {\n\t\tthis._resolvers[authorityPrefix] = resolver;\n\t\treturn toDisposable(() => {\n\t\t\tdelete this._resolvers[authorityPrefix];\n\t\t});\n\t}\n\n\t// -- called by main thread\n\n\tpublic async $resolveAuthority(remoteAuthority: string): Promise<ResolvedAuthority> {\n\t\tconst authorityPlusIndex = remoteAuthority.indexOf('+');\n\t\tif (authorityPlusIndex === -1) {\n\t\t\tthrow new Error(`Not an authority that can be resolved!`);\n\t\t}\n\t\tconst authorityPrefix = remoteAuthority.substr(0, authorityPlusIndex);\n\n\t\tawait this._almostReadyToRunExtensions.wait();\n\t\tawait this._activateByEvent(`onResolveRemoteAuthority:${authorityPrefix}`, false);\n\n\t\tconst resolver = this._resolvers[authorityPrefix];\n\t\tif (!resolver) {\n\t\t\tthrow new Error(`No resolver available for ${authorityPrefix}`);\n\t\t}\n\n\t\tconst result = await resolver.resolve(remoteAuthority);\n\t\treturn {\n\t\t\tauthority: remoteAuthority,\n\t\t\thost: result.host,\n\t\t\tport: result.port,\n\t\t\tdebugListenPort: result.debugListenPort,\n\t\t\tdebugConnectPort: result.debugConnectPort,\n\t\t};\n\t}\n\n\tpublic $startExtensionHost(enabledExtensionIds: ExtensionIdentifier[]): Promise<void> {\n\t\tthis._registry.keepOnly(enabledExtensionIds);\n\t\treturn this._startExtensionHost();\n\t}\n\n\tpublic $activateByEvent(activationEvent: string): Promise<void> {\n\t\treturn (\n\t\t\tthis._readyToRunExtensions.wait()\n\t\t\t\t.then(_ => this._activateByEvent(activationEvent, false))\n\t\t);\n\t}\n\n\tpublic async $activate(extensionId: ExtensionIdentifier, activationEvent: string): Promise<boolean> {\n\t\tawait this._readyToRunExtensions.wait();\n\t\tif (!this._registry.getExtensionDescription(extensionId)) {\n\t\t\t// unknown extension => ignore\n\t\t\treturn false;\n\t\t}\n\t\tawait this._activateById(extensionId, new ExtensionActivatedByEvent(false, activationEvent));\n\t\treturn true;\n\t}\n\n\tpublic async $deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): Promise<void> {\n\t\ttoAdd.forEach((extension) => (<any>extension).extensionLocation = URI.revive(extension.extensionLocation));\n\n\t\tconst trie = await this.getExtensionPathIndex();\n\n\t\tawait Promise.all(toRemove.map(async (extensionId) => {\n\t\t\tconst extensionDescription = this._registry.getExtensionDescription(extensionId);\n\t\t\tif (!extensionDescription) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst realpath = await pfs.realpath(extensionDescription.extensionLocation.fsPath);\n\t\t\ttrie.delete(URI.file(realpath).fsPath);\n\t\t}));\n\n\t\tawait Promise.all(toAdd.map(async (extensionDescription) => {\n\t\t\tconst realpath = await pfs.realpath(extensionDescription.extensionLocation.fsPath);\n\t\t\ttrie.set(URI.file(realpath).fsPath, extensionDescription);\n\t\t}));\n\n\t\tthis._registry.deltaExtensions(toAdd, toRemove);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic async $test_latency(n: number): Promise<number> {\n\t\treturn n;\n\t}\n\n\tpublic async $test_up(b: Buffer): Promise<number> {\n\t\treturn b.length;\n\t}\n\n\tpublic async $test_down(size: number): Promise<Buffer> {\n\t\tconst b = Buffer.alloc(size, Math.random() % 256);\n\t\treturn b;\n\t}\n\n}\n\nfunction loadCommonJSModule<T>(logService: ILogService, modulePath: string, activationTimesBuilder: ExtensionActivationTimesBuilder): Promise<T> {\n\tlet r: T | null = null;\n\tactivationTimesBuilder.codeLoadingStart();\n\tlogService.info(`ExtensionService#loadCommonJSModule ${modulePath}`);\n\ttry {\n\t\tif (process.env.isBrowser) {\n\t\t\tr = self['require'].__$__nodeRequire<T>(modulePath);\n\t\t} else {\n\t\t\tr = require.__$__nodeRequire<T>(modulePath);\n\t\t}\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t} finally {\n\t\tactivationTimesBuilder.codeLoadingStop();\n\t}\n\treturn Promise.resolve(r);\n}\n\nfunction getTelemetryActivationEvent(extensionDescription: IExtensionDescription, reason: ExtensionActivationReason): any {\n\tconst reasonStr = reason instanceof ExtensionActivatedByEvent ? reason.activationEvent :\n\t\treason instanceof ExtensionActivatedByAPI ? 'api' :\n\t\t\t'';\n\n\t/* __GDPR__FRAGMENT__\n\t\t\"TelemetryActivationEvent\" : {\n\t\t\t\"id\": { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"name\": { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"extensionVersion\": { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"activationEvents\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"isBuiltin\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\"reason\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t}\n\t*/\n\tconst event = {\n\t\tid: extensionDescription.identifier.value,\n\t\tname: extensionDescription.name,\n\t\textensionVersion: extensionDescription.version,\n\t\tpublisherDisplayName: extensionDescription.publisher,\n\t\tactivationEvents: extensionDescription.activationEvents ? extensionDescription.activationEvents.join(',') : null,\n\t\tisBuiltin: extensionDescription.isBuiltin,\n\t\treason: reasonStr\n\t};\n\n\treturn event;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport * as errors from 'vs/base/common/errors';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Counter } from 'vs/base/common/numbers';\nimport { URI, setUriThrowOnMissingScheme } from 'vs/base/common/uri';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/node/ipc';\nimport { IEnvironment, IInitData, MainContext, MainThreadConsoleShape } from 'vs/workbench/api/node/extHost.protocol';\nimport { ExtHostConfiguration } from 'vs/workbench/api/node/extHostConfiguration';\nimport { ExtHostExtensionService } from 'vs/workbench/api/node/extHostExtensionService';\nimport { ExtHostLogService } from 'vs/workbench/api/node/extHostLogService';\nimport { ExtHostWorkspace } from 'vs/workbench/api/node/extHostWorkspace';\nimport { IExtensionDescription } from 'vs/workbench/services/extensions/common/extensions';\nimport { RPCProtocol } from 'vs/workbench/services/extensions/node/rpcProtocol';\n\n// we don't (yet) throw when extensions parse\n// uris that have no scheme\nsetUriThrowOnMissingScheme(false);\n\nconst nativeExit = process.exit.bind(process);\nfunction patchProcess(allowExit: boolean) {\n\tprocess.exit = function (code?: number) {\n\t\tif (allowExit) {\n\t\t\texit(code);\n\t\t} else {\n\t\t\tconst err = new Error('An extension called process.exit() and this was prevented.');\n\t\t\tconsole.warn(err.stack);\n\t\t}\n\t} as (code?: number) => never;\n\n\tprocess.crash = function () {\n\t\tconst err = new Error('An extension called process.crash() and this was prevented.');\n\t\tconsole.warn(err.stack);\n\t};\n}\n\nexport function exit(code?: number) {\n\tnativeExit(code);\n}\n\nexport class ExtensionHostMain {\n\n\n\tprivate _isTerminating: boolean;\n\tprivate readonly _environment: IEnvironment;\n\tprivate readonly _extensionService: ExtHostExtensionService;\n\tprivate readonly _extHostLogService: ExtHostLogService;\n\tprivate disposables: IDisposable[] = [];\n\n\tprivate _searchRequestIdProvider: Counter;\n\n\tconstructor(protocol: IMessagePassingProtocol, initData: IInitData) {\n\t\tthis._isTerminating = false;\n\t\tconst uriTransformer: IURITransformer | null = null;\n\t\tconst rpcProtocol = new RPCProtocol(protocol, null, uriTransformer);\n\n\t\t// ensure URIs are transformed and revived\n\t\tinitData = this.transform(initData, rpcProtocol);\n\t\tthis._environment = initData.environment;\n\n\t\tconst allowExit = !!this._environment.extensionTestsLocationURI; // to support other test frameworks like Jasmin that use process.exit (https://github.com/Microsoft/vscode/issues/37708)\n\t\tpatchProcess(allowExit);\n\n\t\tthis._patchPatchedConsole(rpcProtocol.getProxy(MainContext.MainThreadConsole));\n\n\t\t// services\n\t\tthis._extHostLogService = new ExtHostLogService(initData.logLevel, initData.logsLocation.fsPath);\n\t\tthis.disposables.push(this._extHostLogService);\n\n\t\tthis._searchRequestIdProvider = new Counter();\n\t\tconst extHostWorkspace = new ExtHostWorkspace(rpcProtocol, this._extHostLogService, this._searchRequestIdProvider, initData.workspace);\n\n\t\tthis._extHostLogService.info('extension host started');\n\t\tthis._extHostLogService.trace('initData', initData);\n\n\t\tconst extHostConfiguraiton = new ExtHostConfiguration(rpcProtocol.getProxy(MainContext.MainThreadConfiguration), extHostWorkspace);\n\t\tthis._extensionService = new ExtHostExtensionService(nativeExit, initData, rpcProtocol, extHostWorkspace, extHostConfiguraiton, this._extHostLogService);\n\n\t\t// error forwarding and stack trace scanning\n\t\tError.stackTraceLimit = 100; // increase number of stack frames (from 10, https://github.com/v8/v8/wiki/Stack-Trace-API)\n\t\tconst extensionErrors = new WeakMap<Error, IExtensionDescription>();\n\t\tthis._extensionService.getExtensionPathIndex().then(map => {\n\t\t\t(<any>Error).prepareStackTrace = (error: Error, stackTrace: errors.V8CallSite[]) => {\n\t\t\t\tlet stackTraceMessage = '';\n\t\t\t\tlet extension: IExtensionDescription | undefined;\n\t\t\t\tlet fileName: string;\n\t\t\t\tfor (const call of stackTrace) {\n\t\t\t\t\tstackTraceMessage += `\\n\\tat ${call.toString()}`;\n\t\t\t\t\tfileName = call.getFileName();\n\t\t\t\t\tif (!extension && fileName) {\n\t\t\t\t\t\textension = map.findSubstr(fileName);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\textensionErrors.set(error, extension);\n\t\t\t\treturn `${error.name || 'Error'}: ${error.message || ''}${stackTraceMessage}`;\n\t\t\t};\n\t\t});\n\n\t\tconst mainThreadExtensions = rpcProtocol.getProxy(MainContext.MainThreadExtensionService);\n\t\tconst mainThreadErrors = rpcProtocol.getProxy(MainContext.MainThreadErrors);\n\t\terrors.setUnexpectedErrorHandler(err => {\n\t\t\tconst data = errors.transformErrorForSerialization(err);\n\t\t\tconst extension = extensionErrors.get(err);\n\t\t\tif (extension) {\n\t\t\t\tmainThreadExtensions.$onExtensionRuntimeError(extension.identifier, data);\n\t\t\t} else {\n\t\t\t\tmainThreadErrors.$onUnexpectedError(data);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _patchPatchedConsole(mainThreadConsole: MainThreadConsoleShape): void {\n\t\t// The console is already patched to use `process.send()`\n\t\tconst nativeProcessSend = process.send!;\n\t\tprocess.send = (...args: any[]) => {\n\t\t\tif (args.length === 0 || !args[0] || args[0].type !== '__$console') {\n\t\t\t\treturn nativeProcessSend.apply(process, args);\n\t\t\t}\n\n\t\t\tmainThreadConsole.$logExtensionHostMessage(args[0]);\n\t\t};\n\t}\n\n\tterminate(): void {\n\t\tif (this._isTerminating) {\n\t\t\t// we are already shutting down...\n\t\t\treturn;\n\t\t}\n\t\tthis._isTerminating = true;\n\n\t\tthis.disposables = dispose(this.disposables);\n\n\t\terrors.setUnexpectedErrorHandler((err) => {\n\t\t\t// TODO: write to log once we have one\n\t\t});\n\n\t\tconst extensionsDeactivated = this._extensionService.deactivateAll();\n\n\t\t// Give extensions 1 second to wrap up any async dispose, then exit in at most 4 seconds\n\t\tsetTimeout(() => {\n\t\t\tPromise.race([timeout(4000), extensionsDeactivated]).then(() => exit(), () => exit());\n\t\t}, 1000);\n\t}\n\n\tprivate transform(initData: IInitData, rpcProtocol: RPCProtocol): IInitData {\n\t\tinitData.extensions.forEach((ext) => (<any>ext).extensionLocation = URI.revive(rpcProtocol.transformIncomingURIs(ext.extensionLocation)));\n\t\tinitData.environment.appRoot = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.appRoot));\n\t\tinitData.environment.appSettingsHome = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.appSettingsHome));\n\t\tinitData.environment.extensionDevelopmentLocationURI = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.extensionDevelopmentLocationURI));\n\t\tinitData.environment.extensionTestsLocationURI = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.extensionTestsLocationURI));\n\t\tinitData.environment.globalStorageHome = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.globalStorageHome));\n\t\tinitData.environment.userHome = URI.revive(rpcProtocol.transformIncomingURIs(initData.environment.userHome));\n\t\tinitData.logsLocation = URI.revive(rpcProtocol.transformIncomingURIs(initData.logsLocation));\n\t\tinitData.workspace = rpcProtocol.transformIncomingURIs(initData.workspace);\n\t\treturn initData;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nativeWatchdog from 'native-watchdog';\nimport { createConnection } from 'net';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/node/ipc';\nimport { Protocol } from 'vs/base/parts/ipc/node/ipc.net';\nimport product from 'vs/platform/product/node/product';\nimport { IInitData } from 'vs/workbench/api/node/extHost.protocol';\nimport { MessageType, createMessageOfType, isMessageOfType } from 'vs/workbench/services/extensions/node/extensionHostProtocol';\nimport { exit, ExtensionHostMain } from 'vs/workbench/services/extensions/node/extensionHostMain';\n\n// With Electron 2.x and node.js 8.x the \"natives\" module\n// can cause a native crash (see https://github.com/nodejs/node/issues/19891 and\n// https://github.com/electron/electron/issues/10905). To prevent this from\n// happening we essentially blocklist this module from getting loaded in any\n// extension by patching the node require() function.\n(function () {\n\tif (process.env.isBrowser) {\n\t\treturn;\n\t}\n\tconst Module = require.__$__nodeRequire('module') as any;\n\tconst originalLoad = Module._load;\n\n\tModule._load = function (request) {\n\t\tif (request === 'natives') {\n\t\t\tthrow new Error('Either the extension or a NPM dependency is using the \"natives\" node module which is unsupported as it can cause a crash of the extension host. Click [here](https://go.microsoft.com/fwlink/?linkid=871887) to find out more');\n\t\t}\n\n\t\treturn originalLoad.apply(this, arguments);\n\t};\n})();\n\ninterface IRendererConnection {\n\tprotocol: IMessagePassingProtocol;\n\tinitData: IInitData;\n}\n\n// This calls exit directly in case the initialization is not finished and we need to exit\n// Otherwise, if initialization completed we go to extensionHostMain.terminate()\nlet onTerminate = function () {\n\texit();\n};\n\nfunction createExtHostProtocol(): Promise<IMessagePassingProtocol> {\n\n\tconst pipeName = process.env.isBrowser ? 'VSCODE_IPC_HOOK_EXTHOST' : process.env.VSCODE_IPC_HOOK_EXTHOST!;\n\n\treturn new Promise<IMessagePassingProtocol>((resolve, reject) => {\n\n\t\tconst socket = createConnection(pipeName, () => {\n\t\t\tsocket.removeListener('error', reject);\n\t\t\tresolve(new Protocol(socket));\n\t\t});\n\t\tsocket.once('error', reject);\n\n\t}).then(protocol => {\n\n\t\treturn new class implements IMessagePassingProtocol {\n\n\t\t\tprivate _terminating = false;\n\n\t\t\treadonly onMessage: Event<any> = Event.filter(protocol.onMessage, msg => {\n\t\t\t\tif (!isMessageOfType(msg, MessageType.Terminate)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tthis._terminating = true;\n\t\t\t\tonTerminate();\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tsend(msg: any): void {\n\t\t\t\tif (!this._terminating) {\n\t\t\t\t\tprotocol.send(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\nfunction connectToRenderer(protocol: IMessagePassingProtocol): Promise<IRendererConnection> {\n\treturn new Promise<IRendererConnection>((c, e) => {\n\n\t\t// Listen init data message\n\t\tconst first = protocol.onMessage(raw => {\n\t\t\tfirst.dispose();\n\n\t\t\tconst initData = <IInitData>JSON.parse(raw.toString());\n\n\t\t\tconst rendererCommit = initData.commit;\n\t\t\tconst myCommit = product.commit;\n\n\t\t\tif (rendererCommit && myCommit) {\n\t\t\t\t// Running in the built version where commits are defined\n\t\t\t\tif (rendererCommit !== myCommit) {\n\t\t\t\t\texit(55);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Print a console message when rejection isn't handled within N seconds. For details:\n\t\t\t// see https://nodejs.org/api/process.html#process_event_unhandledrejection\n\t\t\t// and https://nodejs.org/api/process.html#process_event_rejectionhandled\n\t\t\tconst unhandledPromises: Promise<any>[] = [];\n\t\t\tprocess.on('unhandledRejection', (reason: any, promise: Promise<any>) => {\n\t\t\t\tunhandledPromises.push(promise);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst idx = unhandledPromises.indexOf(promise);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tpromise.catch(e => {\n\t\t\t\t\t\t\tunhandledPromises.splice(idx, 1);\n\t\t\t\t\t\t\tconsole.warn(`rejected promise not handled within 1 second: ${e}`);\n\t\t\t\t\t\t\tif (e.stack) {\n\t\t\t\t\t\t\t\tconsole.warn(`stack trace: ${e.stack}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonUnexpectedError(reason);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, 1000);\n\t\t\t});\n\n\t\t\tprocess.on('rejectionHandled', (promise: Promise<any>) => {\n\t\t\t\tconst idx = unhandledPromises.indexOf(promise);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tunhandledPromises.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Print a console message when an exception isn't handled.\n\t\t\tprocess.on('uncaughtException', function (err: Error) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t});\n\n\t\t\t// Kill oneself if one's parent dies. Much drama.\n\t\t\tsetInterval(function () {\n\t\t\t\ttry {\n\t\t\t\t\tprocess.kill(initData.parentPid, 0); // throws an exception if the main process doesn't exist anymore.\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonTerminate();\n\t\t\t\t}\n\t\t\t}, 1000);\n\n\t\t\t// In certain cases, the event loop can become busy and never yield\n\t\t\t// e.g. while-true or process.nextTick endless loops\n\t\t\t// So also use the native node module to do it from a separate thread\n\t\t\tlet watchdog: typeof nativeWatchdog;\n\t\t\ttry {\n\t\t\t\tif (process.env.isBrowser) {\n\t\t\t\t\twatchdog = self['require'].__$__nodeRequire('native-watchdog');\n\t\t\t\t} else {\n\t\t\t\t\twatchdog = require.__$__nodeRequire('native-watchdog');\n\t\t\t\t}\n\t\t\t\twatchdog.start(initData.parentPid);\n\t\t\t} catch (err) {\n\t\t\t\t// no problem...\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\n\t\t\t// Tell the outside that we are initialized\n\t\t\tprotocol.send(createMessageOfType(MessageType.Initialized));\n\n\t\t\tc({ protocol, initData });\n\t\t});\n\n\t\t// Tell the outside that we are ready to receive messages\n\t\tprotocol.send(createMessageOfType(MessageType.Ready));\n\t});\n}\n\npatchExecArgv();\n\ncreateExtHostProtocol().then(protocol => {\n\t// connect to main side\n\treturn connectToRenderer(protocol);\n}).then(renderer => {\n\t// setup things\n\tconst extensionHostMain = new ExtensionHostMain(renderer.protocol, renderer.initData);\n\tonTerminate = () => extensionHostMain.terminate();\n}).catch(err => console.error(err));\n\nfunction patchExecArgv() {\n\t// when encountering the prevent-inspect flag we delete this\n\t// and the prior flag\n\tif (process.env.VSCODE_PREVENT_FOREIGN_INSPECT) {\n\t\tfor (let i = 0; i < process.execArgv.length; i++) {\n\t\t\tif (process.execArgv[i].match(/--inspect-brk=\\d+|--inspect=\\d+/)) {\n\t\t\t\tprocess.execArgv.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}