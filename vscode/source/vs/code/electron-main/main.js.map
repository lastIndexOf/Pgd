{"version":3,"sources":["vs/code/electron-main/fake","vs/code/electron-main/vs/base/common/performance.js","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/assert.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/collections.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/decorators.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/errors.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/arrays.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/functional.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/iterator.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/json.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/jsonFormatter.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/jsonEdit.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/keyCodes.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/lifecycle.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/linkedList.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/event.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/cancellation.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/async.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/network.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/platform.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/process.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/path.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/scanCode.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/keybindingParser.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/strings.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/date.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/extpath.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/types.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/objects.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uri.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/amd.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/map.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/glob.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/normalization.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/resources.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/labels.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uuid.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/crypto.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/flow.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/id.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/paths.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/proxy.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/ps.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/stats.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/stream.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/encoding.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/extfs.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/config.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/pfs.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/storage.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/contextmenu/common/contextmenu.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/contextmenu/electron-main/contextmenu.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.electron.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/electron-main/ipc.electron-main.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.net.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/keyboard.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/theme.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/windowsStateStorage.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/node/paths.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/node/shellEnv.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/keybindingLabels.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/node/argv.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/descriptors.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/graph.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/instantiation.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/backup/common/backup.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/driver/node/driver.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/common/environment.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/files/common/files.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/node/argvHelper.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/history/common/history.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/history/electron-main/historyStorage.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/serviceCollection.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/instantiationService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/issue/common/issue.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/issue/node/issueIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/keybinding/common/baseResolvedKeybinding.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/keybinding/common/usLayoutResolvedKeybinding.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/lifecycle/common/lifecycle.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/common/log.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/common/bufferLog.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/node/logIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/node/spdlogService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/menubar/common/menubar.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/menubar/node/menubarIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/product/node/package.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/product/node/product.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/logUploader.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/diagnostics/electron-main/diagnosticsService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/node/environmentService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/registry/common/platform.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationRegistry.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configuration.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationModels.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/node/configuration.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/node/configurationService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/remote/common/remoteHosts.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/remote/node/remoteAgentConnection.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/remote/node/remoteAgentFileSystemChannel.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/node/request.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/state/common/state.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/lifecycle/electron-main/lifecycleMain.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/sharedProcess.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/state/node/stateService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/storage/node/storageMainService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetry.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetryService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/commonProperties.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/telemetryIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/workbenchCommonProperties.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/storage/node/storageIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/common/update.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/electron-main/abstractUpdateService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/electron-main/updateService.darwin.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/electron-main/updateService.snap.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/node/update.config.contribution.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/node/updateIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/url/common/url.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/url/common/urlService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/url/node/urlIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/windows/common/windows.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/windows/electron-main/windows.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/auth.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/driver/electron-main/driver.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/menubar/electron-main/menubar.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/menubar/electron-main/menubarService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/url/electron-main/electronUrlListener.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/windows/electron-main/windowsService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/workspaces/common/workspaces.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/window.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/node/windowsFinder.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/backup/electron-main/backupMainService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/label/common/label.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/history/electron-main/historyMainService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/launch/electron-main/launchService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/issue/electron-main/issueService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/windows/node/windowsIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/workspace/common/workspace.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/workspaces/electron-main/workspacesMainService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/windows.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/workspaces/node/workspacesIpc.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/request.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/node/requestService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/electron-main/requestService.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/electron-main/updateService.linux.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/update/electron-main/updateService.win32.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/app.ts","vs/code/electron-main/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-main/main.ts"],"names":["_factory","sharedObj","_performanceEntries","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","result","entries","i","length","timestamp","getEntry","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","__m","__M","deps","len","exports","ok","value","message","Error","hasOwnProperty","Object","prototype","values","key","call","size","count","first","forEach","callback","groupBy","data","groupFn","create","element","fromMap","original","createDecorator","mapFn","descriptor","fnKey","fn","get","memoize","warn","memoizeKey","args","this","defineProperty","configurable","enumerable","writable","apply","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","undefined","clearTimeout","setTimeout","isPromiseCanceledError","error","canceledName","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","e","stack","listener","_removeListener","indexOf","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","__awaiter","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","elem","uniqueFilter","notFoundValue","index","commonPrefixLength","flatten","concat","range","arg","fill","num","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","map","once","_this","didCall","arguments","FIN","done","Iterator","iterator","next","_empty","empty","fromArray","elements","collect","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","super","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","createScanner","text","ignoreTrivia","scanHexDigits","digits","ch","charCodeAt","pos","scanNext","scanError","tokenOffset","code","isWhiteSpace","fromCharCode","isLineBreak","substring","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","getNodePath","node","children","path","type","getNodeValue","prop","valueNode","contains","offset","includeRightBound","findNodeAtOffset","item","visit","visitor","options","ParseOptions","DEFAULT","toNoArgVisit","visitFunction","_scanner","toOneArgVisit","handleError","disallowComments","onComment","skipUntilAfter","skipUntil","onError","parseString","isValue","onLiteralValue","onObjectProperty","parseProperty","onSeparator","parseValue","onArrayBegin","needsComma","allowTrailingComma","onArrayEnd","parseArray","onObjectBegin","onObjectEnd","parseObject","JSON","parse","parseLiteral","getLiteralNodeType","ScanError","SyntaxKind","ParseErrorCode","CharacterCodes","getLocation","setPreviousNode","previousNodeInst","colonOffset","previousNode","segments","earlyReturnException","isAtPropertyKey","sep","matches","pattern","k","errors","onValue","currentParent","currentProperty","previousParents","object","parseTree","ensurePropertyComplete","endOffset","findNodeAtLocation","root","segment","found","propertyNode","stripComments","replaceCh","kind","parts","replace","join","format","documentText","newLineAndIndent","eol","repeat","indentValue","initialIndentLevel","indentLevel","scanner","lineBreak","hasError","addEdit","startOffset","rangeEnd","rangeStart","editOperations","content","formatText","formatTextStart","isEOL","nChars","tabSize","charAt","computeIndentLevel","getEOL","insertSpaces","json_1","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","setProperty","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","withFormatting","stringify","newProperty","edit","removalIndex","toRemove","newText","applyEdit","begin","jsonFormatter_1","edits","removeProperty","isWS","createSimpleKeybinding","keybinding","OS","ctrlCmd","winCtrl","SimpleKeybinding","KeyCode","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","str","toLowerCase","uiMap","userSettingsUSMap","userSettingsGeneralMap","define","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","BinaryKeybindingsMask","KeyMod","KeyChord","firstPart","secondPart","createKeybinding","chordPart","ChordKeybinding","ctrlKey","shiftKey","altKey","metaKey","getHashCode","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","dispose","rest","d","isDisposable","thing","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","toDispose","None","freeze","ReferenceCollection","references","reference","counter","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","LinkedList","_size","_first","_last","_insert","atTheEnd","newNode","oldLast","prev","oldFirst","_remove","res","candidate","anchor","iterator_1","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","fire","latch","cache","firstCall","shouldEmit","_disposable","signal","any","events","lifecycle_1","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","echo","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","_warnCountdown","_stacks","clear","listenerCount","threshold","Map","set","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","onFirstListenerDidAdd","onListenerDidAdd","removeMonitor","check","_noop","_deliveryQueue","iter","shift","AsyncEmitter","eventFn","_asyncDeliveryQueue","thenables","all","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","timeout","millis","sequence","promiseFactories","thenHandler","results","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","task","cancelTimeout","doReject","ThrottledDelayer","delayer","throttler","trigger","isTriggered","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","timer","ignoreErrors","shouldStop","defaultValue","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","doRun","RunOnceWorker","units","unit","schedule","nfcall","ninvoke","thisArg","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_executor","_value","_error","_didRun","_handle","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","command","global","self","module","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isNative","_locale","_language","_translationsConfigFile","isElectronRenderer","process","versions","electron","platform","rawNlsConfig","env","nlsConfig","resolved","availableLanguages","locale","userAgent","language","Platform","PlatformToString","isRealWindows","isWindows","isMacintosh","isLinux","isNative","isWeb","isRootUser","getuid","translationsConfigFile","_globals","globals","_setImmediate","setImmediate","OperatingSystem","safeProcess","cwd","platform_1","validateString","ErrorInvalidArgType","isPathSeparator","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","isPosixPathSeparator","isWindowsDeviceRoot","CHAR_UPPERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_A","CHAR_LOWERCASE_Z","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","CHAR_DOT","lastSlashIndex","lastIndexOf","_format","pathObject","dir","base","ext","expected","actual","determiner","msg","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","ScanCode","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","ScanCodeUtils","lowerCaseToEnum","scanCode","toEnum","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","ScanCodeBinding","intScanCode","strScanCode","KeybindingParser","trim","matchedModifier","ctrl","alt","meta","test","substr","firstSpaceIdx","remains","mods","_readModifiers","keyCodes_1","part","parseSimpleKeybinding","scanCodeMatch","match","scanCode_1","parseSimpleUserBinding","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","substrEquals","aStart","aEnd","bStart","bEnd","isFullWidthCharacter","charCode","startsWithUTF8BOM","isFalsyOrWhitespace","pad","l","char","reverse","_formatRegexp","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","lastIndex","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","isHighSurrogate","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","lcut","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","removeAccents","regex","UTF8_BOM_CHARACTER","stripUTF8BOM","safeBtoa","btoa","encodeURIComponent","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","toLocalISOString","date","getFullYear","strings_1","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","isWindowsDriveLetter","char0","toSlashes","osPath","path_1","getRoot","firstLetter","isUNC","INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","isValidBasename","isEqual","pathA","pathB","identityEquals","isEqualOrParent","sepOffset","_typeof","number","constructor","isString","string","isObject","isUndefined","isUndefinedOrNull","isFunction","function","validateConstraint","constraint","_a","isStringArray","every","isNumber","Number","isBoolean","isEmptyObject","areFunctions","objects","validateConstraints","constraints","ctor","isNativeClass","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","withNullAsUndefined","withUndefinedAsNull","deepClone","keys","_cloneAndChange","changer","types_1","changed","r1","has","add","r2","i2","_hasOwnProperty","delete","mixin","destination","overwrite","oneKeys","otherKeys","deepFreeze","isFrozen","cloneAndChange","Set","assign","sources","createKeywordMatcher","caseInsensitive","hash","arrayToHash","word","safeStringify","getOrDefault","baseValue","targetValue","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeTable","_makeFsPath","uri","authority","scheme","_asFormatted","skipEncoding","encoder","fragment","_slash","userinfo","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","setUriThrowOnMissingScheme","old","_regexp","URI","fsPath","with","schemeOrData","_strict","trace","_schemeFix","_referenceResolution","_validateUri","change","_URI","decodeURIComponent","components","_fsPath","_formatted","external","$mid","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","getPathFromAmdModule","requirefn","relativePath","uri_1","toUrl","forEachable","getOrSet","mapToString","setToString","mapToSerializable","serializable","serializableToMap","StringIterator","_pos","PathIterator","_from","_to","justSeps","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","reset","val","hasNext","oldElement","_nodeIterator","_forEach","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","touch","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","starsToRegExp","starCount","NO_PATH_REGEX","PATH_REGEX","splitGlobAware","splitChar","inBraces","inBrackets","curVal","parseRegExp","regEx","GLOB_SPLIT","GLOBSTAR","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","strings","parsePattern","arg1","NULL","patternKey","trimForExclusions","parsedPattern","CACHE","wrapRelativePattern","T1","T2","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","T3_2","T3","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","T4","trivia4and5","T5","regExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","ALL_FORWARD_SLASHES","nativePathEnd","FALSE","isRelativePattern","resultPattern","expression","when","hasSibling","clausePattern","matched","async_1","requiresSiblings","parseExpressionPattern","some","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","getEmptyExpression","map_1","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","parseToAsync","getBasenameTerms","patternOrExpression","getPathTerms","form","normalizedCache","canNormalize","cached","nonAsciiCharactersPattern","nfcCache","normalizeNFC","nfdCache","normalizeNFD","hasToIgnoreCase","network_1","parentCandidate","originalFSPath","isEqualAuthority","a1","a2","uriPath","hasTrailingPathSeparator","fsp","getComparisonKey","basenameOrAuthority","second","p1","p2","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","resolvePath","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","hasDriveLetter","normalizeDriveLetter","tildify","userHome","normalizedUserHome","normalizedUserHomeCached","normalized","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","getBaseLabel","untildify","ellipsis","unc","home","shorten","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","Type","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","label","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","v4","V4UUID","isUUID","_UUIDPattern","ValueUUID","_randomHex","_oneOf","_timeHighBits","_chars","generateUuid","asHex","checksum","sha1hash","fs","createReadStream","hashStream","crypto","createHash","pipe","removeAllListeners","param","assert","looper","sequences","sequenceResult","sequenceFunction","Sequence","parallel","didErrorOccur","doneCount","getMachineId","machineId","resolve_1","reject_1","require","resolve_2","reject_2","getmac","getMac","macAddress","update","digest","isBrowser","uuid","virtualMachineHint","mac","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","os_1","networkInterfaces","_isVirtualMachineMacAdress","pathsPath","amd_1","__$__nodeRequire","getAppDataPath","getDefaultUserDataPath","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","protocol","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","opts","host","hostname","port","auth","rejectUnauthorized","strictSSL","listProcesses","rootPid","addToTree","pid","ppid","cmd","load","mem","findName","rootItem","SHARED_PROCESS_HINT","JS","windowsProcessTree","getProcessList","processList","getProcessCpuUsage","completeProcessList","processItems","commandLine","cleanUNCPrefix","cpu","memory","ProcessDataFlag","CommandLine","Memory","PID_CMD","child_process_1","maxBuffer","LC_NUMERIC","stdout","stderr","lines","line","parseFloat","processes","pids","cpuUsage","asSortedItems","collectLaunchConfigs","folder","launchConfigs","launchConfig","fs_1","exists","doesExist","readFile","contents","json","log","collectWorkspaceStats","walk","readdir","files","pending","maxReached","stat","stats","isDirectory","MAX_FILES","configFilePatterns","tag","fileTypes","configFiles","suffix","fileType","addFileType","fileName","addConfigFiles","fileCount","maxFilesReached","launchConfigFiles","readExactlyByFile","totalBytes","open","fd","resultBuffer","bytesRead","close","closeError","readChunk","read","Buffer","allocUnsafe","readToMatchingString","matchingString","chunkBytes","maximumBytesToRead","newLineIndex","decodeStream","encoding","iconv","toNodeEncoding","enc","UTF8_with_bom","UTF8","detectEncodingByBOMFromBuffer","b0","readUInt8","b1","UTF16be","UTF16le","b2","guessEncodingByBuffer","jschardet","Constants","MINIMUM_THRESHOLD","guessed","detect","IGNORE_ENCODINGS","toIconvLiteEncoding","encodingName","normalizedEncodingName","JSCHARDET_TO_ICONV_ENCODINGS","detectEncodingFromBuffer","autoGuessEncoding","seemsBinary","couldBeUTF16LE","couldBeUTF16BE","containsZeroByte","ZERO_BYTE_DETECTION_BUFFER_MAX_LEN","isEndian","isZeroByte","readInt8","guessedEncoding","toDecodeStream","readable","minBytesRequiredForDetection","guessEncoding","AUTO_GUESS_BUFFER_MAX_LEN","NO_GUESS_BUFFER_MAX_LEN","overwriteEncoding","detected","stream_1","Writable","_bytesBuffered","chunk","isBuffer","_decodeStream","write","_decodeStreamConstruction","_startDecodeStream","stream","bomLength","decode","encode","encodingExists","encodeStream","detectEncodingByBOM","ibm866","big5","toCanonicalName","windowsTerminalEncodings","437","850","852","855","857","860","861","863","865","866","869","936","1252","resolveTerminalEncoding","verbose","rawEncodingPromise","cliEncodingEnv","windowsTerminalEncodingKeys","rawEncoding","iconvEncoding","readdirSync","normalization_1","copy","copiedSourcesIn","copiedSources","mode","reader","writer","createWriteStream","finished","finish","chmod","doCopyFile","proceed","mkdirp","mkdir","mkdirErr","statErr","rmRecursive","lstat","isSymbolicLink","unlink","rmdir","firstError","childrenLeft","child","delSync","lstatSync","rmdirSync","unlinkSync","writeFileAndFlush","ensureOptions","encoding_1","charset","addBOM","canFlush","writeFile","flag","openError","writeError","fdatasync","syncError","doWriteFileAndFlush","isOpen","destroy","flags","autoClose","doWriteFileStreamAndFlush","ensuredOptions","realcaseSync","ix","flow","statLink","del","tmpFolder","pathInTemp","rename","mv","updateMtime","futimes","atime","writeFileAndFlushSync","writeFileSync","openSync","fdatasyncSync","closeSync","realpathSync","accessSync","constants","R_OK","realpath","access","watch","onChange","watcher","raw","sanitizeFilePath","ConfigWatcher","_path","defaultConfig","configName","_onDidUpdateConfiguration","registerWatcher","initAsync","hasParseErrors","parseErrors","onDidUpdateConfiguration","loadAsync","config","loaded","updateCache","initCallback","getConfig","readFileSync","parentFolder","readlink","realPath","isParentFolder","extfs","onConfigFileChange","eventType","filename","timeoutHandle","reload","changeBufferDelay","currentConfig","ensureLoaded","loadSync","rimraf","queueKey","writeFileQueue","writeFilePathQueue","onFinish","ensureWriteFileQueue","toQueueKey","dirExists","tmp","_tmpDir","os","tmpdir","oldPath","newPath","renameIgnoreError","symlink","truncate","readDirsInDir","dirPath","fileExists","isFile","whenDeleted","running","StorageHint","StorageState","Storage","database","_onDidChangeStorage","_register","state","pendingDeletes","pendingInserts","flushDelayer","DEFAULT_FLUSH_DELAY","registerListeners","onDidChangeStorage","onDidChangeItemsExternal","accept","Closed","Initialized","hint","STORAGE_DOES_NOT_EXIST","getItems","fallbackValue","valueStr","flushPending","onDone","updateRequest","updateItems","full","checkIntegrity","SQLiteStorageDatabase","logger","SQLiteStorageDatabaseLogger","logging","whenConnected","connect","connection","rows","row","isTracing","request","doUpdateItems","updateCount","transaction","keysValuesChunks","currentChunkIndex","keyValueChunk","MAX_HOST_PARAMETERS","keysValuesChunk","prepare","arrays_1","stmt","run","keysChunks","keyChunk","keysChunk","recovery","doClose","db","handleSQLiteError","IN_MEMORY_PATH","isErroneous","isInMemory","pfs_1","doConnect","recoveryConnection","closeRecoveryConnection","backup","backupPath","toBackupPath","integrity","lastError","retryOnBusy","BUSY_OPEN_TIMEOUT","sqlite3","Database","sql","transactions","serialize","runCallback","errorDetails","statementErrorListener","finalize","logTrace","logError","InMemoryStorageDatabase","CONTEXT_MENU_CHANNEL","CONTEXT_MENU_CLOSE_CHANNEL","createMenu","onClickChannel","menu","electron_1","Menu","menuitem","MenuItem","submenu","accelerator","checked","enabled","visible","click","menuItem","win","contextmenuEvent","sender","send","append","registerContextMenuListener","ipcMain","contextmenu_1","contextMenuId","popup","window","BrowserWindow","fromWebContents","y","positioningItem","createSizeBuffer","writeUInt32BE","readSizeBuffer","readUInt32BE","BufferPresets","Undefined","el","deserialize","DataType","getDelayedChannel","cancellationToken","relay","listen","RequestType","ResponseType","State","BufferReader","bytes","BufferWriter","alloc","ChannelServer","ctx","channels","activeRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","response","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","cancellationTokenSource","disposable","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidChangeConnections","onDidChangeConnections","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connections","router","routeCall","getChannel","routeEvent","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","Protocol","createScopedOnMessageEvent","senderId","onMessageFromSender","Server","ipc_1","getOnDidClientConnect","onHello","webContents","client","Clients","onDidClientReconnect","ipc_electron_1","createBufferedEvent","isDeliveringMessages","bufferedMessages","deliverMessages","generateRandomPipeName","randomSuffix","uuid_1","ChunkStream","byteLength","_totalLength","_chunks","buff","byteCount","resultOffset","_socket","_onMessage","_onClose","onClose","_writeBuffer","_data","head","wasEmpty","_isDisposed","_incomingData","readHead","bodyLen","_socketDataListener","acceptChunk","_headerLen","_socketEndListener","_socketCloseListener","_writeSoon","destroyed","take","server","onConnection","socket","toClientConnectionEvent","Client","serve","net_1","createServer","clientId","createConnection","fromSocket","BufferedProtocol","_actual","KeyboardLayoutMonitor","_registered","nativeKeymap","onDidChangeKeyboardLayout","INSTANCE","DEFAULT_BG_LIGHT","DEFAULT_BG_DARK","DEFAULT_BG_HC_BLACK","THEME_STORAGE_KEY","THEME_BG_STORAGE_KEY","storeBackgroundColor","stateService","setItem","baseTheme","background","getBackgroundColor","systemPreferences","isInvertedColorScheme","getItem","restoreWindowState","windowState","uiState","remoteAuthority","folderUri","revive","folderPath","workspaceIdentifier","workspace","configPath","configURIPath","serializeWindowState","restoreWindowsState","openedWindows","windowsState","lastActiveWindow","lastPluginDevelopmentHostWindow","getWindowsStateStoreData","ws","validatePaths","_urls","gotoLineMode","pathCandidate","parsedPath","parseLineAndColumnAware","preparePath","sanitizedFilePath","extfs_1","types","column","toPath","doValidatePaths","goto","rawPath","segmentAsNumber","getShellEnvironment","_shellEnv","runAsNode","noAttach","objects_1","ELECTRON_RUN_AS_NODE","ELECTRON_NO_ATTACH_CONSOLE","execPath","cp","spawn","SHELL","detached","stdio","rawStripped","catch","nls","ModifierLabelProvider","windows","linux","modifierLabels","keyLabelProvider","labels","_simpleAsString","UILabelProvider","localize","AriaLabelProvider","ElectronAcceleratorLabelProvider","UserSettingsLabelProvider","formatUsage","option","alias","formatOptions","docOptions","columns","usageTexts","argLength","description","descriptionColumns","usage","wrappedDescription","wrapText","keyPadding","indent","HelpCategories","nls_1","cat","deprecates","parseArgs","isOptionSupported","boolean","parsedArgs","minimist","buildHelpMessage","productName","executableName","version","isTTY","categories","help","categoryOptions","buildVersionMessage","commit","arch","asArray","hasArgs","addArg","argv","endOfArgsMarkerIndex","SyncDescriptor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","Graph","_hashFn","_nodes","collections_1","entry","outgoing","fromNode","lookupOrInsertNode","toNode","incoming","_key","storeServiceDependency","optional","_util","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IBackupMainService","instantiation_1","ID","IDriver","DriverChannel","driver","getWindowIds","capturePage","reloadWindow","exitApplication","dispatchKeybinding","doubleClick","setValue","getTitle","isActiveElement","getElements","typeInEditor","getTerminalBuffer","writeInTerminal","DriverChannelClient","windowId","selector","xoffset","yoffset","recursive","WindowDriverRegistryChannel","registry","registerWindowDriver","reloadWindowDriver","WindowDriverRegistryChannelClient","WindowDriverChannel","WindowDriverChannelClient","ipc_net_1","IEnvironmentService","IFileService","FileType","FileSystemProviderCapabilities","FileOperation","FileOperationEvent","_resource","_operation","_target","operation","FileChangeType","FileChangesEvent","changes","_changes","checkForChangeType","getOfType","hasType","isParent","StringSnapshot","snapshotToString","chunks","FileOperationError","fileOperationResult","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","CONTENT_CHANGE_EVENT_BUFFER_DELAY","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","SUPPORTED_ENCODINGS","utf8","labelLong","labelShort","order","utf8bom","encodeOnly","utf16le","utf16be","windows1252","iso88591","iso88593","iso885915","macroman","cp437","windows1256","iso88596","windows1257","iso88594","iso885914","windows1250","iso88592","cp852","windows1251","cp866","iso88595","koi8r","koi8u","iso885913","windows1253","iso88597","windows1255","iso88598","iso885910","iso885916","windows1254","iso88599","windows1258","gbk","gb18030","cp950","big5hkscs","shiftjis","eucjp","euckr","windows874","iso885911","koi8ru","koi8t","gb2312","cp865","cp850","FileKind","MIN_MAX_MEMORY_SIZE_MB","FALLBACK_MAX_MEMORY_SIZE_MB","validate","files_1","stripAppPath","parseMainProcessArgv","processArgv","argv_1","parseCLIProcessArgv","createWaitMarkerFile","randomWaitMarkerPath","IHistoryMainService","isRecentWorkspace","curr","isRecentFolder","isRecentFile","restoreRecentlyOpened","workspaces","storedRecents","workspaces3","workspaceLabels","workspaces2","files2","fileLabels","fileUri","toStoreData","recents","serialized","hasLabel","recent","history_1","ServiceCollection","_entries","service","instanceOrDescriptor","_canUseProxy","Proxy","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","accessor","isOptional","_getOrCreateServiceInstance","stop","ctorOrDescriptor","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","throwCycleError","graph","graph_1","dependencies","insertEdge","roots","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","getValue","TraceType","_start","_dep","_None","printChild","causedCreation","nested","dur","_totals","IIssueService","IssueType","IssueChannel","openReporter","openProcessExplorer","BaseResolvedKeybinding","_os","_parts","keybindingLabels_1","toLabel","_getLabel","_getAriaLabel","_getElectronAccelerator","_getUserSettingsLabel","_isWYSIWYG","_getPart","_getDispatchPart","USLayoutResolvedKeybinding","baseResolvedKeybinding_1","isDuplicateModifierCase","_keyCodeToUILabel","_keyCodeToElectronAccelerator","getDispatchStr","isModifierKey","ILifecycleService","ShutdownReason","StartupKind","StartupKindToString","startupKind","LifecyclePhase","LifecyclePhaseToString","phase","NullLifecycleService","_serviceBrand","onBeforeShutdown","onWillShutdown","onShutdown","handleVetos","vetos","promises","lazyValue","valueOrPromise","toISOString","ILogService","LogLevel","DEFAULT_LOG_LEVEL","Info","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Warning","Critical","ConsoleLogService","MultiplexLogService","logServices","logService","debug","info","critical","DelegatedLogService","NullLogService","getLogLevel","environmentService","Off","getLogFunction","log_1","BufferLogService","_logger","_log","LogLevelSetterChannel","LogLevelSetterChannelClient","FollowerLogService","master","createSpdLogService","processName","logsFolder","_spdlog","setAsyncMode","logfilePath","RotatingLogger","SpdLogService","createRotatingLogger","filesize","filecount","postMessage","$type","$data","dirs","abDirPath","existsSync","mkdirSync","fileContent","clearFormatters","drop","isMenubarMenuItemSubmenu","isMenubarMenuItemSeparator","isMenubarMenuItemUriAction","IMenubarService","isMenubarMenuItemAction","MenubarChannel","updateMenubar","rootPath","packageJsonPath","default","productJsonPath","product","nameShort","nameLong","dataFolderName","uploadLogs","launchService","requestService","endpoint","Endpoint","getFromProduct","logsPath","getLogsPath","promptUserToConfirmLogUpload","outZip","dotter","url","headers","Content-Type","statusCode","errorMessage","postLogs","tempDir","mkdtempSync","sub","execFile","doZip","zipLogs","blob_id","logUploaderUrl","product_1","IDiagnosticsService","DiagnosticsService","GB","package_1","release","cpus","model","speed","totalmem","freemem","loadavg","id_1","app","isAccessibilitySupportEnabled","mainArguments","expandGPUFeatures","ps_1","mainPID","rootProcess","workspaceInfoMessages","workspaceStatPromises","folderURIs","title","uriComponents","stats_1","countMessage","formatWorkspaceStats","processInfo","formatProcessList","workspaceInfo","systemInfo","Memory (System)","VM","Screen Reader","Process Argv","GPU Status","getGPUFeatureStatus","CPUs","formatEnvironment","workspaceStats","col","appendAndWrap","gpuFeatures","longestFeatureName","feature","mapPidToWindowTitle","formatProcessItem","applicationName","getIPCHandle","userDataPath","getWin32IPCHandle","xdgRuntimeDir","scope","getNixIPCHandle","parseExtensionHostPort","isBuild","parseDebugPort","debugId","parseSearchPort","debugArg","debugBrkArg","defaultBuildPort","portStr","break","Boolean","parsePathArg","parseUserDataDir","EnvironmentService","_args","_execPath","date_1","appRoot","cliPath","isBuilt","getCLIPath","homedir","vscodePortable","appNameLong","appQuality","quality","appSettingsHome","appSettingsPath","globalStorageHome","workspaceStorageHome","settingsSearchBuildId","settingsSearchUrl","appKeybindingsPath","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","extensionsPath","vscodeExtensions","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","skipGettingStarted","skipReleaseNotes","skipAddToRecentlyOpened","debugExtensionHost","debugSearch","wait","logExtensionHostCommunication","status","mainIPCHandle","sharedIPCHandle","nodeCachedDataDir","disableUpdates","disableCrashReporter","driverHandle","driverVerbose","__decorate","decorators_1","RegistryImpl","Assert","Types","Registry","Extensions","JSONContribution","JSONContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","normalizeId","schemas","jsonContributionRegistry","getDefaultValue","validateProperty","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","getConfigurationProperties","Configuration","ConfigurationScope","allSettings","properties","patternProperties","applicationSettings","windowSettings","resourceSettings","editorConfigurationSchemaId","contributionRegistry","as","jsonContributionRegistry_1","ConfigurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","defaultOverridesConfigurationNode","configurationContributors","editorConfigurationSchema","additionalProperties","configurationProperties","excludedConfigurationProperties","computeOverridePropertyPattern","registerSchema","configuration","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","updateSchemaForOverrideSettingsConfiguration","deregisterConfiguration","allOf","defaultConfigurations","defaultConfiguration","defaults","propertySchema","$ref","updateOverridePropertyPatternKey","overridable","propertyKeys","included","subNodes","register","SETTINGS_OVERRRIDE_NODE_ID","overridePropertyPattern","subNode","OVERRIDE_PATTERN_WITH_SUBSTITUTION","identifier","OVERRIDE_PROPERTY","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","doRemoveFromValueTree","valueTree","getConfigurationValue","settingPath","component","accessSetting","overrideIdentifierFromKey","IConfigurationService","isConfigurationOverrides","overrideIdentifier","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","updated","value1","value2","toOverrides","overrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","identifiers","removeFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","keyFromOverrideIdentifier","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","user","workspaceFolder","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","override","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_configurationModel","_parseErrors","configurationModel","parseContent","parseRaw","_defaultConfiguration","_userConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","getConsolidateConfigurationModel","memoryConfiguration","removeValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","workspaceConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","isComplete","addKeys","AbstractConfigurationChangeEvent","changedKeysTree","requestedTree","ConfigurationChangeEvent","_changedConfiguration","_changedConfigurationByResource","changedConfiguration","changedConfigurationByResource","getOrSetChangedConfigurationForResource","changeWithKeys","sourceConfig","_source","_sourceConfig","affectedKeys","configurationModelsToSearch","doesConfigurationContains","updateKeys","UserConfiguration","settingsPath","_onDidChangeConfiguration","onDidChangeConfiguration","initializePromise","userConfigModelWatcher","config_1","configurationModels_1","userConfigModelParser","initialize","ConfigurationService","configuration_2","initializeSync","_configuration","userConfigurationModel","onDidChangeUserConfiguration","onDidDefaultConfigurationChange","toData","arg3","arg4","changedKeys","updateUserConfiguration","updateDefaultConfiguration","telemetryData","getTargetConfiguration","__param","environment_1","REMOTE_HOST_SCHEME","getRemoteAuthority","connectRemoteAgentManagement","connectRemoteAgentExtensionHost","startArguments","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteExtensionsFileSystemProvider","_onDidChange","onDidChangeFile","_onDidChangeCapabilities","onDidChangeCapabilities","_session","_channel","setCaseSensitive","_createFileChange","isCaseSensitive","capabilities","req","dto","byteOffset","_asBuffer","IRequestService","registerConfiguration","http.proxy","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","IStateService","UnloadReason","LifecycleService","lifecycle_2","windowToCloseRequest","oneTimeListenerTokenGenerator","windowCounter","_quitRequested","_wasRestarted","_onBeforeShutdown","_onWillShutdown","_onBeforeWindowClose","onBeforeWindowClose","_onBeforeWindowUnload","onBeforeWindowUnload","handleRestarted","quitRequested","wasRestarted","QUIT_FROM_RESTART_MARKER","beforeQuitListener","beginOnWillShutdown","addListener","windowAllClosedListener","quit","preventDefault","resolvePendingQuitPromise","pendingWillShutdownPromise","joiners","unload","veto","reason","isReady","windowUnloadReason","onBeforeUnloadWindowInRenderer","handleWindowUnloadVeto","onBeforeUnloadWindowInMain","onWillUnloadWindowInRenderer","pendingQuitPromiseResolve","pendingQuitPromise","oneTimeEventToken","okChannel","cancelChannel","replyChannel","fromUpdate","addArgs","removeArgs","quitVetoed","vscodeCwd","chdir","relaunch","exit","state_1","SharedProcess","userEnv","lifecycleService","barrier","_whenReady","show","backgroundColor","theme_1","webPreferences","images","webaudio","webgl","disableBlinkFeatures","loadURL","isVisible","hide","openDevTools","closeDevTools","lifecycleMain_1","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","init","IStorageMainService","StorageMainService","_onWillSaveState","storage","storage_1","onWillSaveState","storagePath","STORAGE_NAME","doInitialize","useInMemoryStorage","globalStorageExists","createLogginOptions","migrationPromise","migrateGlobalStorage","localStorageDBBackup","extensions","supportedKeys","wellKnownPublishers","wellKnownExtensions","extension","extensionId","publisher","wellKnownExtension","handleSuffixKey","normalizedKey","store","supportedKey","getBoolean","getNumber","ITelemetryService","TelemetryService","_configurationService","_disposables","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","piiPath","_updateUserOptIn","publicLog","optIn","isHashedId","usingFallbackGuid","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","sessionId","instanceId","anonymizeFilePaths","_cleanupInfo","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","configurationTelemetry","telemetryService","configurationSource","configurationKeys","flatKeys","flattenKeys","configurationValues","v","flattenValues","configurationValueWhitelist","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","keybindingsTelemetry","keybindingService","onDidUpdateKeybindings","keybindings","bindings","binding","resolveCommonProperties","seq","startTime","defineProperties","common.timesincesessionstart","common.sequence","TelemetryAppenderChannel","TelemetryAppenderClient","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","resolveWorkbenchCommonProperties","storageService","commonProperties_1","firstSessionDate","lastSessionDate","GlobalStorageDatabaseChannel","storageMainService","_onDidChangeItems","whenReady","onDidChangeItems","initTelemetry","workbenchCommonProperties_1","toUTCString","currentSessionDate","STORAGE_CHANGE_DEBOUNCE_TIME","serializeEvents","GlobalStorageDatabaseChannelClient","_onDidChangeItemsExternal","onDidChangeItemsOnMainListener","onDidChangeItemsOnMain","serializableRequest","StateType","UpdateType","updateType","CheckingForUpdates","AvailableForDownload","Downloading","Downloaded","Updating","Ready","IUpdateService","createUpdateURL","updateUrl","AbstractUpdateService","_state","update_1","_onStateChange","updateMode","getProductQuality","buildUpdateFeedUrl","setState","getUpdateType","scheduleCheckForUpdates","onStateChange","checkForUpdates","doCheckForUpdates","doDownloadUpdate","doApplyUpdate","vetod","doQuitAndInstall","request_1","DarwinUpdateService","abstractUpdateService_1","onRawError","onRawUpdateAvailable","onUpdateAvailable","onRawUpdateDownloaded","onUpdateDownloaded","onRawUpdateNotAvailable","onUpdateNotAvailable","autoUpdater","productVersion","releaseNotes","setFeedURL","explicit","quitAndInstall","telemetry_1","AbstractUpdateService2","SnapUpdateService","snap","snapRevision","onCurrentChange","onDebouncedCurrentChange","isUpdateAvailable","shell","resolvedCurrentSnapPath","currentRevision","update.mode","update.channel","deprecationMessage","update.enableWindowsBackgroundUpdates","update.showReleaseNotes","UpdateChannel","downloadUpdate","applyUpdate","isLatestVersion","IURLService","URLService","h","handleURL","URLServiceChannel","URLServiceChannelClient","toJSON","URLHandlerChannel","URLHandlerChannelClient","IWindowsService","IWindowService","getTitleBarStyle","environment","isDev","nativeTabs","nativeFullScreen","style","titleBarStyle","OpenContext","ReadyState","ActiveWindowManager","windowsService","onWindowOpen","onWindowFocus","onActiveWindowChange","setActiveWindow","firstActiveWindowIdPromise","getActiveWindowId","_activeWindowId","WindowMode","IWindowsMainService","ProxyAuthHandler","windowsMainService","retryCount","authInfo","cb","onLogin","isProxy","alwaysOnTop","skipTaskbar","resizable","width","height","focusedWindow","getFocusedWindow","modal","javascript","onWindowClose","setMenu","executeJavaScript","username","password","windows_1","Driver","windowServer","registeredWindowIds","reloadingWindowIds","onDidReloadingChange","getWindows","w","whenUnfrozen","getWindowById","toPNG","keybindingParser_1","parseUserBinding","_dispatchKeybinding","noModifiedKeybinding","usLayoutResolvedKeybinding_1","toChord","getElectronAccelerator","sendInputEvent","isSilentKeyCode","getWindowDriver","windowDriverChannel","driver_1","instantiationService","createInstance","windowDriverRegistryChannel","__separator__","Menubar","updateService","historyMainService","fallbackMenuHandlers","menuUpdater","doUpdateMenu","menuGC","oldMenus","menubarMenus","restoreCachedMenubarData","addFallbackHandlers","closedLastWindow","install","menubarData","lastKnownMenubarStorageKey","menus","openNewWindow","pickFileFolderAndOpen","forceNewWindow","isOptionClick","telemetryExtraData","pickWorkspaceAndOpen","clearRecentlyOpened","twitterUrl","openUrl","requestFeatureUrl","reportIssueUrl","licenseUrl","queryArgChar","privacyStatementUrl","willShutdown","onWindowsCountChanged","currentEnableMenuBarMnemonics","enableMenuBarMnemonics","currentEnableNativeTabs","enableNativeTabs","scheduleUpdateMenu","oldCount","newCount","oldMenu","getApplicationMenu","setApplicationMenu","menubar","macApplicationMenuItem","applicationMenu","setMacApplicationMenu","appMenuInstalled","dockMenu","mnemonicLabel","dock","fileMenu","fileMenuItem","setMenuById","editMenu","editMenuItem","selectionMenu","selectionMenuItem","viewMenu","viewMenuItem","gotoMenu","gotoMenuItem","debugMenu","debugMenuItem","terminalMenu","terminalMenuItem","macWindowMenuItem","shouldDrawMenu","windowMenu","role","setMacWindowMenu","helpMenu","helpMenuItem","macApplicationMenu","about","getUpdateMenuItems","preferences","preferencesMenu","servicesMenu","hideOthers","showAll","likeAction","getWindowCount","getLastActiveWindow","isMinimized","actions","menuId","menubar_1","submenuItem","createOpenRecentMenuItem","insertCheckForUpdatesItems","createMenuItem","commandId","revivedUri","typeHint","openInNewWindow","cli","urisToOpen","forceOpenWorkspaceAsFile","removeFromRecentlyOpened","withKeybinding","macWindowMenu","minimize","zoom","bringAllToFront","switchWindow","nativeTabMenuItems","createRoleMenuItem","reportMenuActionTelemetry","userSettingsLabel","ctrlRequired","shiftRequired","altRequired","metaRequired","_menuItemIsTriggeredViaKeybinding","runActionInRenderer","makeContextAwareClickHandler","inDevTools","devTools","undo","inNoWindow","sendActionToFirstResponder","redo","selectAll","contextSpecificHandlers","activeWindow","isDevToolsFocused","devToolsWebContents","invocation","sendToFocused","bindingIndex","setAccelerator","originalClick","openExternal","labels_1","windows_2","MenubarService","_menubar","updateMenu","uriFromRawUrl","ElectronURLListener","urlService","globalBuffer","getOpenUrls","rawBuffer","setAsDefaultProtocolClient","urlProtocol","onOpenElectronUrl","onOpenUrl","onWindowReady","WindowsService","sharedProcess","historyService","onWindowBlur","onWindowMaximize","onWindowUnmaximize","onRecentlyOpenedChange","registerHandler","pickFileAndOpen","pickFolderAndOpen","withWindow","codeWindow","showMessageBox","showSaveDialog","showOpenDialog","hasHiddenTitleBarStyle","isFullScreen","isDevToolsOpened","toggleDevTools","updateTouchBar","closeWorkspace","enterWorkspace","toggleFullScreen","setRepresentedFilename","addRecentlyOpened","getRecentlyOpened","filesToOpen","openNewTabbedWindow","focus","isFocused","isMaximized","maximize","unmaximize","onWindowTitleDoubleClick","isDocumentEdited","setDocumentEdited","contextWindowId","forceReuseWindow","diffMode","addMode","openedWorkspace","openedFolderUri","getRepresentedFilename","severity","messages","showItemInFolder","crashReporter","toggle","getVersion","detail","buttons","noLink","defaultId","button","clipboard","writeText","openFileForURI","session","resolveProxy","proxy","fallback","isStoredWorkspaceFolder","isRawFileWorkspaceFolder","isRawUriWorkspaceFolder","isSingleFolderWorkspaceIdentifier","getStoredWorkspaceFolder","folderURI","folderName","targetConfigFolderURI","useSlashForPath","extpath_1","rewriteWorkspaceFileForNewLocation","rawWorkspaceContents","configPathURI","targetConfigPathURI","storedWorkspace","doParseStoredWorkspace","sourceConfigFolder","targetConfigFolder","rewrittenFolders","slashForPath","newRawWorkspaceContents","jsonEdit","storedFolders","SLASH","IWorkspacesMainService","IWorkspacesService","WORKSPACE_EXTENSION","WORKSPACE_FILTER","UNTITLED_WORKSPACE_NAME","reviveWorkspaceIdentifier","isWorkspaceIdentifier","toWorkspaceIdentifier","isSingleFolderWorkspaceInitializationPayload","WORKSPACE_SUFFIX","hasWorkspaceFileExtension","defaultWindowState","CodeWindow","workspacesMainService","backupMainService","touchBarGroups","_lastFocusTime","_readyState","whenReadyCallbacks","nodeless","createBrowserWindow","onConfigurationUpdated","createTouchBar","handleMarketplaceRequests","isFullscreenOrMaximized","minWidth","MIN_WIDTH","minHeight","MIN_HEIGHT","backgroundThrottling","nodeIntegration","icon","windowConfig","useNativeFullScreen","fullscreenable","acceptFirstMouse","clickThroughInactive","tabbingIdentifier","useCustomTitleStyle","hiddenTitleBarStyle","frame","_win","_id","setSheetOffset","setFullScreen","isExtensionDevelopmentHost","isExtensionTestHost","representedFilename","restore","lastFocusTime","registerNavigationListenerOn","simpleFullScreenScheduler","displayChangedListener","screen","maximized","sendWhenReady","errorCode","errorDescription","validatedURL","isMainFrame","onUntitledWorkspaceDeleted","newMenuBarVisibility","getMenuBarVisibility","currentMenuBarVisibility","setMenuBarVisibility","workbench","editor","swipeToNavigate","back","forward","acrossEditors","addTabbedWindow","isReload","isHotExitEnabled","setTitle","perf","getUrl","showTimeoutHandle","configurationIn","filesToCreate","filesToDiff","filesToWait","isInitialStartup","windowConfiguration","zoomLevel","fullscreen","autoDetectHighContrast","highContrast","accessibilitySupport","frameless","perfEntries","partsSplashPath","configUrl","doGetUrl","MAX_URL_LENGTH","display","getDisplayMatching","getBounds","defaultState","bounds","validateWindowState","displays","getAllDisplays","displayBounds","dimension","getSize","setNativeFullScreen","setSimpleFullScreen","isSimpleFullScreen","menuBarVisibility","visibility","notify","doSetMenuBarVisibility","isFullscreen","setAutoHideMenuBar","getUserDefault","ready","groups","touchBarGroup","commands","createTouchBarGroupSegments","groupTouchBar","createTouchBarGroup","setTouchBar","TouchBar","control","TouchBarSegmentedControl","segmentStyle","selectedIndex","iconLocation","dark","nativeImage","createFromPath","workspaces_1","backup_1","findBestWindowOrFolderForFile","newWindow","localWorkspaceResolver","workspaceResolver","windowOnFilePath","resolvedWorkspace","singleFolderWindowsOnFilePath","findWindowOnFilePath","lastFocusedDate","findWindowOnWorkspace","findWindowOnExtensionDevelopmentPath","findWindowOnWorkspaceOrFolderUri","BackupMainService","workspacesJsonPath","backups","emptyWorkspaceInfos","emptyWorkspaces","validateEmptyWorkspaces","backupFolder","rootWorkspaces","rootURIWorkspaces","f","validateWorkspaces","workspaceFolders","folderURIWorkspaces","folderWorkspaces","oldFolderHash","getLegacyFolderHash","newFolderHash","getFolderHash","moveBackupFolder","getBackupPath","validateFolders","save","isHotExitOnExitAndWindowClose","getHotExitConfig","hotExit","migrateFrom","moveBackupFolderSync","moveFromPath","convertToEmptyWindowBackupSync","renameSync","ex","convertToEmptyWindowBackup","backupInfo","getRandomEmptyWindowId","seenIds","hasBackups","deleteStaleBackup","newBackupFolder","newEmptyWindowBackupPath","backupSchemas","backupSchema","serializeBackups","getSimpleWorkspaceLabel","workspaceHome","workspaceName","ILabelService","location","indexOfWorkspace","indexOfFolder","indexOfFile","fileURI","HistoryMainService","_onRecentlyOpenedChange","macOSRecentDocumentsUpdater","newlyAdded","mru","isUntitledWorkspace","addRecentDocument","MAX_TOTAL_RECENT_ENTRIES","saveRecentlyOpened","updateMacOSRecentDocuments","keep","clearRecentDocuments","MAX_MACOS_DOCK_RECENT_FOLDERS","loc","workspacePath","MAX_MACOS_DOCK_RECENT_FILES","filePath","currentWorkspace","currentFolder","currentFiles","currentFile","getRecentlyOpenedFromStorage","recentlyOpenedStorageKey","historyStorage_1","jumpList","program","iconPath","iconIndex","getJumpListSettings","removedItems","label_1","setJumpList","ILaunchService","LaunchChannel","getMainProcessId","getMainProcessInfo","LaunchChannelClient","LaunchService","urlsToOpen","parseOpenUrl","whenWindowReady","startOpenWindow","usedWindows","openExtensionDevelopmentHostWindow","preferNewWindow","openWithoutArgumentsInNewWindow","forceEmpty","focusLastActive","waitMarkerFilePath","race","waitForWindowCloseOrLoad","getAllWindows","codeWindowToInfo","browserWindowToInfo","workspaceConfigPath","resolveLocalWorkspaceSync","getOSProcessId","IssueService","diagnosticsService","getSystemInformation","getPerformanceInfo","messageOptions","_issueWindow","dialog","commandInfo","parentWindow","_issueParentWindow","_processExplorerParentWindow","getWindowPosition","styles","getIssueReporterPath","_processExplorerWindow","defaultWidth","defaultHeight","displayToUse","cursorPoint","getCursorScreenPoint","getDisplayNearestPoint","getPrimaryDisplay","getSystemInfo","diagnosticInfo","features","launchService_1","diagnosticsService_1","WindowsChannel","newWindowTab","showPreviousWindowTab","showNextWindowTab","moveWindowTabToNewWindow","mergeAllWindowTabs","toggleWindowTabsBar","focusWindow","closeWindow","maximizeWindow","unmaximizeWindow","minimizeWindow","openWindow","showWindow","whenSharedProcessReady","toggleSharedProcess","startCrashReporter","openAboutDialog","toWorkspaceFolders","configuredFolders","relativeTo","configuredFolder","resources","toUri","WorkspaceFolder","parseWorkspaceFolders","ensureUnique","IWorkspaceContextService","WorkbenchState","IWorkspace","isIWorkspace","IWorkspaceFolder","isIWorkspaceFolder","isUri","toResource","Workspace","_foldersMap","_folders","updateFoldersMap","getWorkspaceIdentifier","crypto_1","getWorkspaceId","WorkspacesMainService","_onUntitledWorkspaceDeleted","isWorkspacePath","doResolveWorkspace","isInsideWorkspacesHome","workspace_1","newUntitledWorkspace","configPathDir","configPathDirDir","randomId","untitledWorkspaceConfigFolder","untitledWorkspaceConfigPath","storedWorkspaceFolder","doDeleteUntitledWorkspaceSync","deleteUntitledWorkspaceSync","workspaceStoragePath","untitledWorkspaces","untitledWorkspacePaths","untitledWorkspacePath","isFolderPathToOpen","isWorkspacePathToOpen","WindowError","WindowsManager","_onWindowReady","_onWindowClose","_onWindowLoad","onWindowLoad","_onWindowsCountChanged","windowsStateStoreData","windowsStateStorageKey","windowsStateStorage_1","dialogs","Dialogs","workspacesManager","WorkspacesManager","initialUserEnv","setReady","sendToAll","lastClosedWindowState","currentWindowsState","WINDOWS","toWindowState","extensionHostWindow","sameWorkspace","sameFolder","openConfig","validateOpenConfig","pathsToOpen","getPathsToOpen","foldersToAdd","foldersToOpen","workspacesToOpen","emptyToRestore","fileInputs","emptyToOpen","createFilePath","foldersToRestore","workspacesToRestore","initialStartup","getFolderBackupPaths","remoteAuhority","remoteHosts_1","isRestored","getWorkspaceBackups","getUntitledWorkspacesSync","getEmptyWindowBackupPaths","doOpen","focusLastOpened","focusLastWindow","usedWindow","pathToOpen","openFolderInNewWindow","openFilesInNewWindow","shouldOpenNewWindow","getLastActiveWindowForAuthority","doAddFoldersToExistingWindow","fileToCheck","bestWindowOrFolder","windowsFinder_1","window_1","doOpenFilesInExistingWindow","openInBrowserWindow","forceNewTabbedWindow","allWorkspacesToOpen","windowsOnWorkspace","workspaceToOpen","windowOnWorkspace","fileInputsForWindow","doOpenFolderOrWorkspace","allFoldersToOpen","windowsOnFolderPath","folderToOpen","windowOnFolderPath","allEmptyToRestore","emptyWindowBackupInfo","remote","params","termProgram","folderOrWorkspace","windowToUse","windowsToOpen","isCommandLineOrAPICall","doExtractPathsFromAPI","doExtractPathsFromCLI","doGetWindowsFromLastSession","createUntitledWorkspaceSync","parseOptions","parseUri","ignoreFileNotFound","folderUris","argToUri","fileUris","cliArgs","cliArg","parsePath","restoreWindows","getRestoreWindowsSetting","openedWindow","paths_1","lineNumber","columnNumber","workspacesMainService_1","anyPath","candidateStat","statSync","openFolderInNewWindowConfig","openFoldersInNewWindow","openFilesInNewWindowConfig","existingWindow","extensionDevelopmentWindowState","mainPid","currentWindowConfig","getNewWindowState","allowFullscreen","hasDefaultState","newWindowDimensions","restoreFullscreen","onWindowError","onWindowClosed","registerWindow","doOpenInBrowserWindow","registerWorkspaceBackupSync","registerFolderBackupSync","registerEmptyWindowBackupSync","lastActive","stateForWorkspace","stateForFolder","stateForEmptyWindow","lastActiveState","ensureNoOverlap","existingWindowBounds","doEnterWorkspace","closeListener","loadListener","payload","windowIdsToIgnore","doPickAndOpen","pickFolders","pickFiles","internalOptions","dialogOptions","telemetryEventName","pickAndOpen","mapWindowToDialogQueue","noWindowDialogQueue","getFileOrFolderUris","numberOfPaths","outcome","filters","defaultPath","workingDirPickerStorageKey","windowDialogQueue","getDialogQueue","checkboxChecked","validatePathPromise","normalizePaths","isValidTargetWorkspacePath","isValid","doOpenWorkspace","buttonLabel","WorkspacesChannel","rawFolders","rawFolder","createUntitledWorkspace","deleteUntitledWorkspace","getRawRequest","getNodeRequest","rawRequest","method","agent","followRedirects","zlib_1","createGunzip","abort","isSuccess","hasNoContent","download","asText","asJson","RequestService","configure","proxyStrictSSL","authorization","proxyAuthorization","requestFn","proxy_1","Proxy-Authorization","net","requestService_1","LinuxUpdateService","request_2","downloadUrl","_updateType","Win32UpdateService","cachePath","pfs","cleanup","getUpdatePackagePath","updatePackagePath","downloadPath","packagePath","fastUpdatesEnabled","availableUpdate","supportsFastUpdate","exceptVersion","updateFilePath","windowsVerbatimArguments","readyMutexName","win32MutexName","isActive","pollUntil","CodeApplication","mainIpcServer","accessibilitySupportEnabled","hasVisibleWindows","isValidWebviewSource","srcUri","rootUri","preload","src","preloadURL","preloadUrl","macOpenFileURIs","runningTimeout","kill","shellEnv_1","shellEnv","isDestroyed","broadcast","onBroadcast","powerMonitor","friendlyError","win32AppUserModelId","setAppUserModelId","setUserDefault","electronIpcServer","ipc_electron_main_1","startupWithMachineId","sharedProcess_1","sharedProcessClient","initServices","appInstantiationService","authHandler","auth_1","invokeFunction","openFirstWindow","afterWindowOpen","stopTracingEventually","resolvedMachineId","resolveMachineId","MACHINE_ID_KEY","recordingStopped","stopRecording","contentTracing","updateService_win32_1","SNAP","SNAP_REVISION","updateService_snap_1","updateService_linux_1","updateService_darwin_1","windows_3","windowsService_1","issue_1","issueService_1","menubarService_1","storageMainService_1","backupMainService_1","historyMainService_1","urlService_1","telemetryUtils_1","telemetryIpc_1","telemetryService_1","createChild","initStorageService","initBackupService","launchChannel","updateChannel","updateIpc_1","issueService","issueChannel","issueIpc_1","workspacesService","workspacesChannel","workspacesIpc_1","windowsChannel","windowsIpc_1","menubarService","menubarChannel","menubarIpc_1","urlChannel","urlIpc_1","storageChannel","storageIpc_1","logLevelChannel","logIpc_1","activeWindowManager","activeWindowRouter","getActiveClientId","urlHandlerChannel","multiplexURLHandler","urls","urlListener","electronUrlListener_1","macOpenFiles","hasCliArgs","hasFolderURIs","hasFileURIs","windowsMutex","Mutex","handleRemoteAuthorities","keyboard_1","updateWindowsJumpList","connectionPool","ActiveConnection","_authority","_client","remoteAgentConnection_1","_disposeRunner","resolvedAuthorities","registerBufferProtocol","activeConnection","resolvedAuthority","strPort","resolveAuthority","rawClient","getClient","fileContents","remoteAgentFileSystemChannel_1","setupIPC","setup","retry","ExpectedError","handleStartupDataDirError","startupWarningDialogHandle","showStartupWarningDialog","printDiagnostics","logUploader_1","processId","allowSetForegroundWindow","exitCode","isExpected","startup","bufferLogService","bufferLog_1","environmentService_1","stateService_1","configurationService_1","instantiationService_1","createServices","instanceEnvironment","VSCODE_IPC_HOOK","VSCODE_NLS_CONFIG","VSCODE_LOGS","patchEnvironment","environmentServiceInitialization","stateServiceInitialization","spdlogService_1","app_1","argvHelper_1","main"],"mappings":"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AAA,KACNA,EAAM,GAAA,KACNA,EAAM,GAAA,KACNA,EAAM,GAAA,GACNA,EAAM,GAAA,IACNA,EAAM,GAAA,IACNA,EAAM,GAAA,IACNA,EAAM,GAAA,IACNA,EAAM,GAAA,IACNA,EAAM,IAAA,IACNA,EAAM,IAAA,KACNA,EAAM,IAAA,KACNA,EAAM,IAAA,KACNA,EAAM,IAAA,IACNA,EAAM,IAAA,KAENA,EAAM,IAAA,IACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,IACNA,EAAM,IAAA,IACNA,EAAM,IAAA,IACNA,EAAM,IAAA,IACNA,EAAM,IAAA,IACNA,EAAM,IAAA,IACNA,EAAM,IAAA,IACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,KAENA,EAAM,IAAA,GAENA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,IACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,IACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,IAAA,GACNA,EAAM,I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","file":"main.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj._performanceEntries = sharedObj._performanceEntries || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj._performanceEntries.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj._performanceEntries.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getEntry(name) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tif (entries[i] === name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: entries[i],\n\t\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj._performanceEntries.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetEntry: getEntry,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\nlet sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === \"object\" && typeof module.exports === \"object\") {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\t// invalid context...\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport interface IStringDictionary<V> {\n\t[name: string]: V;\n}\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport interface INumberDictionary<V> {\n\t[idx: number]: V;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn from[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebouceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebouceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: Array<T | undefined | null>): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tif (!array) {\n\t\treturn;\n\t}\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: ReadonlyArray<T> | undefined | null): obj is Array<T> {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null = null): T | null {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function fromArray<T>(array: T[], index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>): T[] {\n\t\tconst result: T[] = [];\n\t\tforEach(iterator, value => result.push(value));\n\t\treturn result;\n\t}\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: Iterator<T> | T[]): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate items: T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet value = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\tvalue = -1;\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tch = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch = scanHexDigits(4);\n\t\t\t\t\t\tif (ch >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhiteSpace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhiteSpace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhiteSpace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhiteSpace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getLiteralNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getLiteralNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\treturn true;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nfunction getLiteralNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tdefault: return 'null';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, SyntaxKind, ScanError } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nfunction getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParseError, Node, JSONPath, Segment, parseTree, findNodeAtLocation } from './json';\nimport { Edit, format, isEOL, FormattingOptions } from './jsonFormatter';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tconst insertIndex = lastSegment;\n\t\tif (insertIndex === -1) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tconst previous = parent.children[parent.children.length - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\tif (value === undefined && parent.children.length >= 0) {\n\t\t\t\t//Removal\n\t\t\t\tconst removalIndex = lastSegment;\n\t\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\t\tlet edit: Edit;\n\t\t\t\tif (parent.children.length === 1) {\n\t\t\t\t\t// only item\n\t\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t\t// last item\n\t\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t\t} else {\n\t\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Array modification not supported yet');\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nfunction withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst edit = edits[i];\n\t\tnewText = applyEdit(newText, edit);\n\t\tbegin = Math.min(begin, edit.offset);\n\t\tend = Math.max(end, edit.offset + edit.length);\n\t\tend += edit.content.length - edit.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function isWS(text: string, offset: number) {\n\treturn '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\n\tMeta = 57,\n\tContextMenu = 58,\n\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\n\tNumLock = 78,\n\tScrollLock = 79,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tprivate _keyCodeToStr: string[];\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\n\t\tuiMap.define(keyCode, uiLabel);\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n\t}\n\n\tdefine(KeyCode.Unknown, 'unknown');\n\n\tdefine(KeyCode.Backspace, 'Backspace');\n\tdefine(KeyCode.Tab, 'Tab');\n\tdefine(KeyCode.Enter, 'Enter');\n\tdefine(KeyCode.Shift, 'Shift');\n\tdefine(KeyCode.Ctrl, 'Ctrl');\n\tdefine(KeyCode.Alt, 'Alt');\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\n\tdefine(KeyCode.CapsLock, 'CapsLock');\n\tdefine(KeyCode.Escape, 'Escape');\n\tdefine(KeyCode.Space, 'Space');\n\tdefine(KeyCode.PageUp, 'PageUp');\n\tdefine(KeyCode.PageDown, 'PageDown');\n\tdefine(KeyCode.End, 'End');\n\tdefine(KeyCode.Home, 'Home');\n\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\n\tdefine(KeyCode.Insert, 'Insert');\n\tdefine(KeyCode.Delete, 'Delete');\n\n\tdefine(KeyCode.KEY_0, '0');\n\tdefine(KeyCode.KEY_1, '1');\n\tdefine(KeyCode.KEY_2, '2');\n\tdefine(KeyCode.KEY_3, '3');\n\tdefine(KeyCode.KEY_4, '4');\n\tdefine(KeyCode.KEY_5, '5');\n\tdefine(KeyCode.KEY_6, '6');\n\tdefine(KeyCode.KEY_7, '7');\n\tdefine(KeyCode.KEY_8, '8');\n\tdefine(KeyCode.KEY_9, '9');\n\n\tdefine(KeyCode.KEY_A, 'A');\n\tdefine(KeyCode.KEY_B, 'B');\n\tdefine(KeyCode.KEY_C, 'C');\n\tdefine(KeyCode.KEY_D, 'D');\n\tdefine(KeyCode.KEY_E, 'E');\n\tdefine(KeyCode.KEY_F, 'F');\n\tdefine(KeyCode.KEY_G, 'G');\n\tdefine(KeyCode.KEY_H, 'H');\n\tdefine(KeyCode.KEY_I, 'I');\n\tdefine(KeyCode.KEY_J, 'J');\n\tdefine(KeyCode.KEY_K, 'K');\n\tdefine(KeyCode.KEY_L, 'L');\n\tdefine(KeyCode.KEY_M, 'M');\n\tdefine(KeyCode.KEY_N, 'N');\n\tdefine(KeyCode.KEY_O, 'O');\n\tdefine(KeyCode.KEY_P, 'P');\n\tdefine(KeyCode.KEY_Q, 'Q');\n\tdefine(KeyCode.KEY_R, 'R');\n\tdefine(KeyCode.KEY_S, 'S');\n\tdefine(KeyCode.KEY_T, 'T');\n\tdefine(KeyCode.KEY_U, 'U');\n\tdefine(KeyCode.KEY_V, 'V');\n\tdefine(KeyCode.KEY_W, 'W');\n\tdefine(KeyCode.KEY_X, 'X');\n\tdefine(KeyCode.KEY_Y, 'Y');\n\tdefine(KeyCode.KEY_Z, 'Z');\n\n\tdefine(KeyCode.Meta, 'Meta');\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\n\n\tdefine(KeyCode.F1, 'F1');\n\tdefine(KeyCode.F2, 'F2');\n\tdefine(KeyCode.F3, 'F3');\n\tdefine(KeyCode.F4, 'F4');\n\tdefine(KeyCode.F5, 'F5');\n\tdefine(KeyCode.F6, 'F6');\n\tdefine(KeyCode.F7, 'F7');\n\tdefine(KeyCode.F8, 'F8');\n\tdefine(KeyCode.F9, 'F9');\n\tdefine(KeyCode.F10, 'F10');\n\tdefine(KeyCode.F11, 'F11');\n\tdefine(KeyCode.F12, 'F12');\n\tdefine(KeyCode.F13, 'F13');\n\tdefine(KeyCode.F14, 'F14');\n\tdefine(KeyCode.F15, 'F15');\n\tdefine(KeyCode.F16, 'F16');\n\tdefine(KeyCode.F17, 'F17');\n\tdefine(KeyCode.F18, 'F18');\n\tdefine(KeyCode.F19, 'F19');\n\n\tdefine(KeyCode.NumLock, 'NumLock');\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\n\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\n\tdefine(KeyCode.OEM_8, 'OEM_8');\n\tdefine(KeyCode.OEM_102, 'OEM_102');\n\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\n\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n}\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport class SimpleKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic getHashCode(): string {\n\t\tconst ctrl = this.ctrlKey ? '1' : '0';\n\t\tconst shift = this.shiftKey ? '1' : '0';\n\t\tconst alt = this.altKey ? '1' : '0';\n\t\tconst meta = this.metaKey ? '1' : '0';\n\t\treturn `${ctrl}${shift}${alt}${meta}${this.keyCode}`;\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n\n\tpublic getHashCode(): string {\n\t\tlet result = '';\n\t\tfor (let i = 0, len = this.parts.length; i < len; i++) {\n\t\t\tif (i !== 0) {\n\t\t\t\tresult += ';';\n\t\t\t}\n\t\t\tresult += this.parts[i].getHashCode();\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic equals(other: ChordKeybinding | null): boolean {\n\t\tif (other === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.parts.length !== other.parts.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.parts.length; i++) {\n\t\t\tif (!this.parts[i].equals(other.parts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic abstract getElectronAccelerator(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for user settings.\n\t */\n\tpublic abstract getUserSettingsLabel(): string | null;\n\t/**\n\t * Is the user settings label reflecting the label?\n\t */\n\tpublic abstract isWYSIWYG(): boolean;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(...disposables: Array<T | undefined>): T[];\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(first: T | T[], ...rest: T[]): T | T[] | undefined {\n\tif (Array.isArray(first)) {\n\t\tfirst.forEach(d => d && d.dispose());\n\t\treturn [];\n\t} else if (rest.length === 0) {\n\t\tif (first) {\n\t\t\tfirst.dispose();\n\t\t\treturn first;\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tdispose(first);\n\t\tdispose(rest);\n\t\treturn [];\n\t}\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\treturn { dispose() { fn(); } };\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected _toDispose: IDisposable[] = [];\n\tprotected get toDispose(): IDisposable[] { return this._toDispose; }\n\n\tprivate _lifecycle_disposable_isDisposed = false;\n\n\tpublic dispose(): void {\n\t\tthis._lifecycle_disposable_isDisposed = true;\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif (this._lifecycle_disposable_isDisposed) {\n\t\t\tconsole.warn('Registering disposable on object that has already been disposed.');\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.push(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate references: { [key: string]: { readonly object: T; counter: number; } } = Object.create(null);\n\n\tconstructor() { }\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references[key];\n\n\t\tif (!reference) {\n\t\t\treference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference.object);\n\t\t\t\tdelete this.references[key];\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\telement: E;\n\tnext: Node<E> | undefined;\n\tprev: Node<E> | undefined;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> | undefined;\n\tprivate _last: Node<E> | undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._first;\n\t}\n\n\tclear(): void {\n\t\tthis._first = undefined;\n\t\tthis._last = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (!this._first) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\t\treturn this._remove.bind(this, newNode);\n\t}\n\n\n\tshift(): E | undefined {\n\t\tif (!this._first) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (!this._last) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tlet candidate: Node<E> | undefined = this._first;\n\t\twhile (candidate instanceof Node) {\n\t\t\tif (candidate !== node) {\n\t\t\t\tcandidate = candidate.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (candidate.prev && candidate.next) {\n\t\t\t\t// middle\n\t\t\t\tconst anchor = candidate.prev;\n\t\t\t\tanchor.next = candidate.next;\n\t\t\t\tcandidate.next.prev = anchor;\n\n\t\t\t} else if (!candidate.prev && !candidate.next) {\n\t\t\t\t// only node\n\t\t\t\tthis._first = undefined;\n\t\t\t\tthis._last = undefined;\n\n\t\t\t} else if (!candidate.next) {\n\t\t\t\t// last\n\t\t\t\tthis._last = this._last!.prev!;\n\t\t\t\tthis._last.next = undefined;\n\n\t\t\t} else if (!candidate.prev) {\n\t\t\t\t// first\n\t\t\t\tthis._first = this._first!.next!;\n\t\t\t\tthis._first.prev = undefined;\n\t\t\t}\n\n\t\t\t// done\n\t\t\tthis._size -= 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node instanceof Node; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nexport namespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function () { return _disposable; };\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * throught the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Similar to `buffer` but it buffers indefinitely and repeats\n\t * the buffered events to every new listener.\n\t */\n\texport function echo<T>(event: Event<T>, nextTick = false, buffer: T[] = []): Event<T> {\n\t\tbuffer = buffer.slice();\n\n\t\tevent(e => {\n\t\t\tbuffer.push(e);\n\t\t\temitter.fire(e);\n\t\t});\n\n\t\tconst flush = (listener: (e: T) => any, thisArgs?: any) => buffer.forEach(e => listener.call(thisArgs, e));\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonListenerDidAdd(emitter: Emitter<T>, listener: (e: T) => any, thisArgs?: any) {\n\t\t\t\tif (nextTick) {\n\t\t\t\t\tsetTimeout(() => flush(listener, thisArgs));\n\t\t\t\t} else {\n\t\t\t\t\tflush(listener, thisArgs);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue: [Listener<T>, T][];\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = [];\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.length > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners = undefined;\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.length = 0;\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue: [Listener<T>, T, Promise<any>[]][];\n\n\tasync fireAsync(eventFn: (thenables: Promise<any>[], listener: Function) => T): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\t// put all [listener,event]-pairs into delivery queue\n\t\t// then emit all event. an inner/nested event might be\n\t\t// the driver of this\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = [];\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tconst thenables: Promise<void>[] = [];\n\t\t\tthis._asyncDeliveryQueue.push([e.value, eventFn(thenables, typeof e.value === 'function' ? e.value : e.value[0]), thenables]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.length > 0) {\n\t\t\tconst [listener, event, thenables] = this._asyncDeliveryQueue.shift()!;\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables);\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn new class implements CancelablePromise<T> {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: (err: any) => void;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tconst task = this.task!;\n\t\t\t\tthis.task = null;\n\n\t\t\t\treturn task();\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tthis.doResolve!(null);\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject(errors.canceled());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tpublic get onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue {\n\tprivate queues: { [path: string]: Queue<void> };\n\n\tconstructor() {\n\t\tthis.queues = Object.create(null);\n\t}\n\n\tpublic queueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues[key]) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tdelete this.queues[key];\n\t\t\t});\n\n\t\t\tthis.queues[key] = queue;\n\t\t}\n\n\t\treturn this.queues[key];\n\t}\n}\n\nexport class TimeoutTimer extends Disposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tsuper();\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer extends Disposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport function nfcall(fn: Function, ...args: any[]): Promise<any>;\nexport function nfcall<T>(fn: Function, ...args: any[]): Promise<T>;\nexport function nfcall(fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn(...args, (err: any, result: any) => err ? e(err) : c(result)));\n}\n\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): Promise<any>;\nexport function ninvoke<T>(thisArg: any, fn: Function, ...args: any[]): Promise<T>;\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): any {\n\treturn new Promise((resolve, reject) => fn.call(thisArg, ...args, (err: any, result: any) => err ? reject(err) : resolve(result)));\n}\n\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): DOMHighResTimeStamp;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean;\n\tprivate _value: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory: string = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode: string = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal: string = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough: string = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet: string = 'walkThroughSnippet';\n\n\texport const http: string = 'http';\n\n\texport const https: string = 'https';\n\n\texport const file: string = 'file';\n\n\texport const mailto: string = 'mailto';\n\n\texport const untitled: string = 'untitled';\n\n\texport const data: string = 'data';\n\n\texport const command: string = 'command';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\n// let _isLinux = false;\nlet _isNative = false;\n// let _isWeb = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\tconst userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t// _isLinux = userAgent.indexOf('Linux') >= 0;\n\t// _isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t// _isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\n// let _platform: Platform = Platform.Web;\n// if (_isNative) {\n// \tif (_isMacintosh) {\n// \t\t_platform = Platform.Mac;\n// \t} else if (_isWindows) {\n// \t\t_platform = Platform.Windows;\n// \t} else if (_isLinux) {\n// \t\t_platform = Platform.Linux;\n// \t}\n// }\n\nexport const isRealWindows = _isWindows;\nexport const isWindows = false; // _isWindows;\nexport const isMacintosh = true; // _isMacintosh;\nexport const isLinux = false; // _isLinux;\nexport const isNative = false; // _isNative;\nexport const isWeb = false; // _isWeb;\nexport const platform = 1; // _platform;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\nlet _setImmediate: ((callback: (...args: any[]) => void) => number) | null = null;\nexport function setImmediate(callback: (...args: any[]) => void): number {\n\tif (_setImmediate === null) {\n\t\tif (globals.setImmediate) {\n\t\t\t_setImmediate = globals.setImmediate.bind(globals);\n\t\t} else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\t\t_setImmediate = process.nextTick.bind(process);\n\t\t} else {\n\t\t\t_setImmediate = globals.setTimeout.bind(globals);\n\t\t}\n\t}\n\treturn _setImmediate!(callback);\n}\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: object;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): number;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): number { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: string) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tlet msg;\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tmsg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\t}\n}\n\nfunction validateString(value: string, name) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep, pathObject) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\ninterface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\ninterface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { isRealWindows } from 'vs/base/common/platform';\n\n/**\n * keyboardEvent.code\n */\nexport const enum ScanCode {\n\tNone,\n\n\tHyper,\n\tSuper,\n\tFn,\n\tFnLock,\n\tSuspend,\n\tResume,\n\tTurbo,\n\tSleep,\n\tWakeUp,\n\tKeyA,\n\tKeyB,\n\tKeyC,\n\tKeyD,\n\tKeyE,\n\tKeyF,\n\tKeyG,\n\tKeyH,\n\tKeyI,\n\tKeyJ,\n\tKeyK,\n\tKeyL,\n\tKeyM,\n\tKeyN,\n\tKeyO,\n\tKeyP,\n\tKeyQ,\n\tKeyR,\n\tKeyS,\n\tKeyT,\n\tKeyU,\n\tKeyV,\n\tKeyW,\n\tKeyX,\n\tKeyY,\n\tKeyZ,\n\tDigit1,\n\tDigit2,\n\tDigit3,\n\tDigit4,\n\tDigit5,\n\tDigit6,\n\tDigit7,\n\tDigit8,\n\tDigit9,\n\tDigit0,\n\tEnter,\n\tEscape,\n\tBackspace,\n\tTab,\n\tSpace,\n\tMinus,\n\tEqual,\n\tBracketLeft,\n\tBracketRight,\n\tBackslash,\n\tIntlHash,\n\tSemicolon,\n\tQuote,\n\tBackquote,\n\tComma,\n\tPeriod,\n\tSlash,\n\tCapsLock,\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tPrintScreen,\n\tScrollLock,\n\tPause,\n\tInsert,\n\tHome,\n\tPageUp,\n\tDelete,\n\tEnd,\n\tPageDown,\n\tArrowRight,\n\tArrowLeft,\n\tArrowDown,\n\tArrowUp,\n\tNumLock,\n\tNumpadDivide,\n\tNumpadMultiply,\n\tNumpadSubtract,\n\tNumpadAdd,\n\tNumpadEnter,\n\tNumpad1,\n\tNumpad2,\n\tNumpad3,\n\tNumpad4,\n\tNumpad5,\n\tNumpad6,\n\tNumpad7,\n\tNumpad8,\n\tNumpad9,\n\tNumpad0,\n\tNumpadDecimal,\n\tIntlBackslash,\n\tContextMenu,\n\tPower,\n\tNumpadEqual,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\tF20,\n\tF21,\n\tF22,\n\tF23,\n\tF24,\n\tOpen,\n\tHelp,\n\tSelect,\n\tAgain,\n\tUndo,\n\tCut,\n\tCopy,\n\tPaste,\n\tFind,\n\tAudioVolumeMute,\n\tAudioVolumeUp,\n\tAudioVolumeDown,\n\tNumpadComma,\n\tIntlRo,\n\tKanaMode,\n\tIntlYen,\n\tConvert,\n\tNonConvert,\n\tLang1,\n\tLang2,\n\tLang3,\n\tLang4,\n\tLang5,\n\tAbort,\n\tProps,\n\tNumpadParenLeft,\n\tNumpadParenRight,\n\tNumpadBackspace,\n\tNumpadMemoryStore,\n\tNumpadMemoryRecall,\n\tNumpadMemoryClear,\n\tNumpadMemoryAdd,\n\tNumpadMemorySubtract,\n\tNumpadClear,\n\tNumpadClearEntry,\n\tControlLeft,\n\tShiftLeft,\n\tAltLeft,\n\tMetaLeft,\n\tControlRight,\n\tShiftRight,\n\tAltRight,\n\tMetaRight,\n\tBrightnessUp,\n\tBrightnessDown,\n\tMediaPlay,\n\tMediaRecord,\n\tMediaFastForward,\n\tMediaRewind,\n\tMediaTrackNext,\n\tMediaTrackPrevious,\n\tMediaStop,\n\tEject,\n\tMediaPlayPause,\n\tMediaSelect,\n\tLaunchMail,\n\tLaunchApp2,\n\tLaunchApp1,\n\tSelectTask,\n\tLaunchScreenSaver,\n\tBrowserSearch,\n\tBrowserHome,\n\tBrowserBack,\n\tBrowserForward,\n\tBrowserStop,\n\tBrowserRefresh,\n\tBrowserFavorites,\n\tZoomToggle,\n\tMailReply,\n\tMailForward,\n\tMailSend,\n\n\tMAX_VALUE\n}\n\nconst scanCodeIntToStr: string[] = [];\nconst scanCodeStrToInt: { [code: string]: number; } = Object.create(null);\nconst scanCodeLowerCaseStrToInt: { [code: string]: number; } = Object.create(null);\n\nexport const ScanCodeUtils = {\n\tlowerCaseToEnum: (scanCode: string) => scanCodeLowerCaseStrToInt[scanCode] || ScanCode.None,\n\ttoEnum: (scanCode: string) => scanCodeStrToInt[scanCode] || ScanCode.None,\n\ttoString: (scanCode: ScanCode) => scanCodeIntToStr[scanCode] || 'None'\n};\n\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE: KeyCode[] = [];\n\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE: ScanCode[] = [];\n\nexport class ScanCodeBinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly scanCode: ScanCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, scanCode: ScanCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.scanCode = scanCode;\n\t}\n\n\tpublic equals(other: ScanCodeBinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.scanCode === other.scanCode\n\t\t);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && (this.scanCode === ScanCode.ControlLeft || this.scanCode === ScanCode.ControlRight))\n\t\t\t|| (this.shiftKey && (this.scanCode === ScanCode.ShiftLeft || this.scanCode === ScanCode.ShiftRight))\n\t\t\t|| (this.altKey && (this.scanCode === ScanCode.AltLeft || this.scanCode === ScanCode.AltRight))\n\t\t\t|| (this.metaKey && (this.scanCode === ScanCode.MetaLeft || this.scanCode === ScanCode.MetaRight))\n\t\t);\n\t}\n}\n\n(function () {\n\tfunction d(intScanCode: ScanCode, strScanCode: string): void {\n\t\tscanCodeIntToStr[intScanCode] = strScanCode;\n\t\tscanCodeStrToInt[strScanCode] = intScanCode;\n\t\tscanCodeLowerCaseStrToInt[strScanCode.toLowerCase()] = intScanCode;\n\t}\n\td(ScanCode.None, 'None');\n\td(ScanCode.Hyper, 'Hyper');\n\td(ScanCode.Super, 'Super');\n\td(ScanCode.Fn, 'Fn');\n\td(ScanCode.FnLock, 'FnLock');\n\td(ScanCode.Suspend, 'Suspend');\n\td(ScanCode.Resume, 'Resume');\n\td(ScanCode.Turbo, 'Turbo');\n\td(ScanCode.Sleep, 'Sleep');\n\td(ScanCode.WakeUp, 'WakeUp');\n\td(ScanCode.KeyA, 'KeyA');\n\td(ScanCode.KeyB, 'KeyB');\n\td(ScanCode.KeyC, 'KeyC');\n\td(ScanCode.KeyD, 'KeyD');\n\td(ScanCode.KeyE, 'KeyE');\n\td(ScanCode.KeyF, 'KeyF');\n\td(ScanCode.KeyG, 'KeyG');\n\td(ScanCode.KeyH, 'KeyH');\n\td(ScanCode.KeyI, 'KeyI');\n\td(ScanCode.KeyJ, 'KeyJ');\n\td(ScanCode.KeyK, 'KeyK');\n\td(ScanCode.KeyL, 'KeyL');\n\td(ScanCode.KeyM, 'KeyM');\n\td(ScanCode.KeyN, 'KeyN');\n\td(ScanCode.KeyO, 'KeyO');\n\td(ScanCode.KeyP, 'KeyP');\n\td(ScanCode.KeyQ, 'KeyQ');\n\td(ScanCode.KeyR, 'KeyR');\n\td(ScanCode.KeyS, 'KeyS');\n\td(ScanCode.KeyT, 'KeyT');\n\td(ScanCode.KeyU, 'KeyU');\n\td(ScanCode.KeyV, 'KeyV');\n\td(ScanCode.KeyW, 'KeyW');\n\td(ScanCode.KeyX, 'KeyX');\n\td(ScanCode.KeyY, 'KeyY');\n\td(ScanCode.KeyZ, 'KeyZ');\n\td(ScanCode.Digit1, 'Digit1');\n\td(ScanCode.Digit2, 'Digit2');\n\td(ScanCode.Digit3, 'Digit3');\n\td(ScanCode.Digit4, 'Digit4');\n\td(ScanCode.Digit5, 'Digit5');\n\td(ScanCode.Digit6, 'Digit6');\n\td(ScanCode.Digit7, 'Digit7');\n\td(ScanCode.Digit8, 'Digit8');\n\td(ScanCode.Digit9, 'Digit9');\n\td(ScanCode.Digit0, 'Digit0');\n\td(ScanCode.Enter, 'Enter');\n\td(ScanCode.Escape, 'Escape');\n\td(ScanCode.Backspace, 'Backspace');\n\td(ScanCode.Tab, 'Tab');\n\td(ScanCode.Space, 'Space');\n\td(ScanCode.Minus, 'Minus');\n\td(ScanCode.Equal, 'Equal');\n\td(ScanCode.BracketLeft, 'BracketLeft');\n\td(ScanCode.BracketRight, 'BracketRight');\n\td(ScanCode.Backslash, 'Backslash');\n\td(ScanCode.IntlHash, 'IntlHash');\n\td(ScanCode.Semicolon, 'Semicolon');\n\td(ScanCode.Quote, 'Quote');\n\td(ScanCode.Backquote, 'Backquote');\n\td(ScanCode.Comma, 'Comma');\n\td(ScanCode.Period, 'Period');\n\td(ScanCode.Slash, 'Slash');\n\td(ScanCode.CapsLock, 'CapsLock');\n\td(ScanCode.F1, 'F1');\n\td(ScanCode.F2, 'F2');\n\td(ScanCode.F3, 'F3');\n\td(ScanCode.F4, 'F4');\n\td(ScanCode.F5, 'F5');\n\td(ScanCode.F6, 'F6');\n\td(ScanCode.F7, 'F7');\n\td(ScanCode.F8, 'F8');\n\td(ScanCode.F9, 'F9');\n\td(ScanCode.F10, 'F10');\n\td(ScanCode.F11, 'F11');\n\td(ScanCode.F12, 'F12');\n\td(ScanCode.PrintScreen, 'PrintScreen');\n\td(ScanCode.ScrollLock, 'ScrollLock');\n\td(ScanCode.Pause, 'Pause');\n\td(ScanCode.Insert, 'Insert');\n\td(ScanCode.Home, 'Home');\n\td(ScanCode.PageUp, 'PageUp');\n\td(ScanCode.Delete, 'Delete');\n\td(ScanCode.End, 'End');\n\td(ScanCode.PageDown, 'PageDown');\n\td(ScanCode.ArrowRight, 'ArrowRight');\n\td(ScanCode.ArrowLeft, 'ArrowLeft');\n\td(ScanCode.ArrowDown, 'ArrowDown');\n\td(ScanCode.ArrowUp, 'ArrowUp');\n\td(ScanCode.NumLock, 'NumLock');\n\td(ScanCode.NumpadDivide, 'NumpadDivide');\n\td(ScanCode.NumpadMultiply, 'NumpadMultiply');\n\td(ScanCode.NumpadSubtract, 'NumpadSubtract');\n\td(ScanCode.NumpadAdd, 'NumpadAdd');\n\td(ScanCode.NumpadEnter, 'NumpadEnter');\n\td(ScanCode.Numpad1, 'Numpad1');\n\td(ScanCode.Numpad2, 'Numpad2');\n\td(ScanCode.Numpad3, 'Numpad3');\n\td(ScanCode.Numpad4, 'Numpad4');\n\td(ScanCode.Numpad5, 'Numpad5');\n\td(ScanCode.Numpad6, 'Numpad6');\n\td(ScanCode.Numpad7, 'Numpad7');\n\td(ScanCode.Numpad8, 'Numpad8');\n\td(ScanCode.Numpad9, 'Numpad9');\n\td(ScanCode.Numpad0, 'Numpad0');\n\td(ScanCode.NumpadDecimal, 'NumpadDecimal');\n\td(ScanCode.IntlBackslash, 'IntlBackslash');\n\td(ScanCode.ContextMenu, 'ContextMenu');\n\td(ScanCode.Power, 'Power');\n\td(ScanCode.NumpadEqual, 'NumpadEqual');\n\td(ScanCode.F13, 'F13');\n\td(ScanCode.F14, 'F14');\n\td(ScanCode.F15, 'F15');\n\td(ScanCode.F16, 'F16');\n\td(ScanCode.F17, 'F17');\n\td(ScanCode.F18, 'F18');\n\td(ScanCode.F19, 'F19');\n\td(ScanCode.F20, 'F20');\n\td(ScanCode.F21, 'F21');\n\td(ScanCode.F22, 'F22');\n\td(ScanCode.F23, 'F23');\n\td(ScanCode.F24, 'F24');\n\td(ScanCode.Open, 'Open');\n\td(ScanCode.Help, 'Help');\n\td(ScanCode.Select, 'Select');\n\td(ScanCode.Again, 'Again');\n\td(ScanCode.Undo, 'Undo');\n\td(ScanCode.Cut, 'Cut');\n\td(ScanCode.Copy, 'Copy');\n\td(ScanCode.Paste, 'Paste');\n\td(ScanCode.Find, 'Find');\n\td(ScanCode.AudioVolumeMute, 'AudioVolumeMute');\n\td(ScanCode.AudioVolumeUp, 'AudioVolumeUp');\n\td(ScanCode.AudioVolumeDown, 'AudioVolumeDown');\n\td(ScanCode.NumpadComma, 'NumpadComma');\n\td(ScanCode.IntlRo, 'IntlRo');\n\td(ScanCode.KanaMode, 'KanaMode');\n\td(ScanCode.IntlYen, 'IntlYen');\n\td(ScanCode.Convert, 'Convert');\n\td(ScanCode.NonConvert, 'NonConvert');\n\td(ScanCode.Lang1, 'Lang1');\n\td(ScanCode.Lang2, 'Lang2');\n\td(ScanCode.Lang3, 'Lang3');\n\td(ScanCode.Lang4, 'Lang4');\n\td(ScanCode.Lang5, 'Lang5');\n\td(ScanCode.Abort, 'Abort');\n\td(ScanCode.Props, 'Props');\n\td(ScanCode.NumpadParenLeft, 'NumpadParenLeft');\n\td(ScanCode.NumpadParenRight, 'NumpadParenRight');\n\td(ScanCode.NumpadBackspace, 'NumpadBackspace');\n\td(ScanCode.NumpadMemoryStore, 'NumpadMemoryStore');\n\td(ScanCode.NumpadMemoryRecall, 'NumpadMemoryRecall');\n\td(ScanCode.NumpadMemoryClear, 'NumpadMemoryClear');\n\td(ScanCode.NumpadMemoryAdd, 'NumpadMemoryAdd');\n\td(ScanCode.NumpadMemorySubtract, 'NumpadMemorySubtract');\n\td(ScanCode.NumpadClear, 'NumpadClear');\n\td(ScanCode.NumpadClearEntry, 'NumpadClearEntry');\n\td(ScanCode.ControlLeft, 'ControlLeft');\n\td(ScanCode.ShiftLeft, 'ShiftLeft');\n\td(ScanCode.AltLeft, 'AltLeft');\n\td(ScanCode.MetaLeft, 'MetaLeft');\n\td(ScanCode.ControlRight, 'ControlRight');\n\td(ScanCode.ShiftRight, 'ShiftRight');\n\td(ScanCode.AltRight, 'AltRight');\n\td(ScanCode.MetaRight, 'MetaRight');\n\td(ScanCode.BrightnessUp, 'BrightnessUp');\n\td(ScanCode.BrightnessDown, 'BrightnessDown');\n\td(ScanCode.MediaPlay, 'MediaPlay');\n\td(ScanCode.MediaRecord, 'MediaRecord');\n\td(ScanCode.MediaFastForward, 'MediaFastForward');\n\td(ScanCode.MediaRewind, 'MediaRewind');\n\td(ScanCode.MediaTrackNext, 'MediaTrackNext');\n\td(ScanCode.MediaTrackPrevious, 'MediaTrackPrevious');\n\td(ScanCode.MediaStop, 'MediaStop');\n\td(ScanCode.Eject, 'Eject');\n\td(ScanCode.MediaPlayPause, 'MediaPlayPause');\n\td(ScanCode.MediaSelect, 'MediaSelect');\n\td(ScanCode.LaunchMail, 'LaunchMail');\n\td(ScanCode.LaunchApp2, 'LaunchApp2');\n\td(ScanCode.LaunchApp1, 'LaunchApp1');\n\td(ScanCode.SelectTask, 'SelectTask');\n\td(ScanCode.LaunchScreenSaver, 'LaunchScreenSaver');\n\td(ScanCode.BrowserSearch, 'BrowserSearch');\n\td(ScanCode.BrowserHome, 'BrowserHome');\n\td(ScanCode.BrowserBack, 'BrowserBack');\n\td(ScanCode.BrowserForward, 'BrowserForward');\n\td(ScanCode.BrowserStop, 'BrowserStop');\n\td(ScanCode.BrowserRefresh, 'BrowserRefresh');\n\td(ScanCode.BrowserFavorites, 'BrowserFavorites');\n\td(ScanCode.ZoomToggle, 'ZoomToggle');\n\td(ScanCode.MailReply, 'MailReply');\n\td(ScanCode.MailForward, 'MailForward');\n\td(ScanCode.MailSend, 'MailSend');\n})();\n\n(function () {\n\tfor (let i = 0; i <= ScanCode.MAX_VALUE; i++) {\n\t\tIMMUTABLE_CODE_TO_KEY_CODE[i] = -1;\n\t}\n\n\tfor (let i = 0; i <= KeyCode.MAX_VALUE; i++) {\n\t\tIMMUTABLE_KEY_CODE_TO_CODE[i] = -1;\n\t}\n\n\tfunction define(code: ScanCode, keyCode: KeyCode): void {\n\t\tIMMUTABLE_CODE_TO_KEY_CODE[code] = keyCode;\n\n\t\tif (\n\t\t\t(keyCode !== KeyCode.Unknown)\n\t\t\t&& (keyCode !== KeyCode.Enter)\n\t\t\t&& (keyCode !== KeyCode.Ctrl)\n\t\t\t&& (keyCode !== KeyCode.Shift)\n\t\t\t&& (keyCode !== KeyCode.Alt)\n\t\t\t&& (keyCode !== KeyCode.Meta)\n\t\t) {\n\t\t\tIMMUTABLE_KEY_CODE_TO_CODE[keyCode] = code;\n\t\t}\n\t}\n\n\t// Manually added due to the exclusion above (due to duplication with NumpadEnter)\n\tIMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Enter] = ScanCode.Enter;\n\n\tdefine(ScanCode.None, KeyCode.Unknown);\n\tdefine(ScanCode.Hyper, KeyCode.Unknown);\n\tdefine(ScanCode.Super, KeyCode.Unknown);\n\tdefine(ScanCode.Fn, KeyCode.Unknown);\n\tdefine(ScanCode.FnLock, KeyCode.Unknown);\n\tdefine(ScanCode.Suspend, KeyCode.Unknown);\n\tdefine(ScanCode.Resume, KeyCode.Unknown);\n\tdefine(ScanCode.Turbo, KeyCode.Unknown);\n\tdefine(ScanCode.Sleep, KeyCode.Unknown);\n\tdefine(ScanCode.WakeUp, KeyCode.Unknown);\n\tif (isRealWindows) {\n\t\tdefine(ScanCode.KeyA, KeyCode.KEY_A);\n\t\tdefine(ScanCode.KeyB, KeyCode.KEY_B);\n\t\tdefine(ScanCode.KeyC, KeyCode.KEY_C);\n\t\tdefine(ScanCode.KeyD, KeyCode.KEY_D);\n\t\tdefine(ScanCode.KeyE, KeyCode.KEY_E);\n\t\tdefine(ScanCode.KeyF, KeyCode.KEY_F);\n\t\tdefine(ScanCode.KeyG, KeyCode.KEY_G);\n\t\tdefine(ScanCode.KeyH, KeyCode.KEY_H);\n\t\tdefine(ScanCode.KeyI, KeyCode.KEY_I);\n\t\tdefine(ScanCode.KeyJ, KeyCode.KEY_J);\n\t\tdefine(ScanCode.KeyK, KeyCode.KEY_K);\n\t\tdefine(ScanCode.KeyL, KeyCode.KEY_L);\n\t\tdefine(ScanCode.KeyM, KeyCode.KEY_M);\n\t\tdefine(ScanCode.KeyN, KeyCode.KEY_N);\n\t\tdefine(ScanCode.KeyO, KeyCode.KEY_O);\n\t\tdefine(ScanCode.KeyP, KeyCode.KEY_P);\n\t\tdefine(ScanCode.KeyQ, KeyCode.KEY_Q);\n\t\tdefine(ScanCode.KeyR, KeyCode.KEY_R);\n\t\tdefine(ScanCode.KeyS, KeyCode.KEY_S);\n\t\tdefine(ScanCode.KeyT, KeyCode.KEY_T);\n\t\tdefine(ScanCode.KeyU, KeyCode.KEY_U);\n\t\tdefine(ScanCode.KeyV, KeyCode.KEY_V);\n\t\tdefine(ScanCode.KeyW, KeyCode.KEY_W);\n\t\tdefine(ScanCode.KeyX, KeyCode.KEY_X);\n\t\tdefine(ScanCode.KeyY, KeyCode.KEY_Y);\n\t\tdefine(ScanCode.KeyZ, KeyCode.KEY_Z);\n\t}\n\t// define(ScanCode.KeyA, KeyCode.Unknown);\n\t// define(ScanCode.KeyB, KeyCode.Unknown);\n\t// define(ScanCode.KeyC, KeyCode.Unknown);\n\t// define(ScanCode.KeyD, KeyCode.Unknown);\n\t// define(ScanCode.KeyE, KeyCode.Unknown);\n\t// define(ScanCode.KeyF, KeyCode.Unknown);\n\t// define(ScanCode.KeyG, KeyCode.Unknown);\n\t// define(ScanCode.KeyH, KeyCode.Unknown);\n\t// define(ScanCode.KeyI, KeyCode.Unknown);\n\t// define(ScanCode.KeyJ, KeyCode.Unknown);\n\t// define(ScanCode.KeyK, KeyCode.Unknown);\n\t// define(ScanCode.KeyL, KeyCode.Unknown);\n\t// define(ScanCode.KeyM, KeyCode.Unknown);\n\t// define(ScanCode.KeyN, KeyCode.Unknown);\n\t// define(ScanCode.KeyO, KeyCode.Unknown);\n\t// define(ScanCode.KeyP, KeyCode.Unknown);\n\t// define(ScanCode.KeyQ, KeyCode.Unknown);\n\t// define(ScanCode.KeyR, KeyCode.Unknown);\n\t// define(ScanCode.KeyS, KeyCode.Unknown);\n\t// define(ScanCode.KeyT, KeyCode.Unknown);\n\t// define(ScanCode.KeyU, KeyCode.Unknown);\n\t// define(ScanCode.KeyV, KeyCode.Unknown);\n\t// define(ScanCode.KeyW, KeyCode.Unknown);\n\t// define(ScanCode.KeyX, KeyCode.Unknown);\n\t// define(ScanCode.KeyY, KeyCode.Unknown);\n\t// define(ScanCode.KeyZ, KeyCode.Unknown);\n\t// define(ScanCode.Digit1, KeyCode.Unknown);\n\t// define(ScanCode.Digit2, KeyCode.Unknown);\n\t// define(ScanCode.Digit3, KeyCode.Unknown);\n\t// define(ScanCode.Digit4, KeyCode.Unknown);\n\t// define(ScanCode.Digit5, KeyCode.Unknown);\n\t// define(ScanCode.Digit6, KeyCode.Unknown);\n\t// define(ScanCode.Digit7, KeyCode.Unknown);\n\t// define(ScanCode.Digit8, KeyCode.Unknown);\n\t// define(ScanCode.Digit9, KeyCode.Unknown);\n\t// define(ScanCode.Digit0, KeyCode.Unknown);\n\tdefine(ScanCode.Enter, KeyCode.Enter);\n\tdefine(ScanCode.Escape, KeyCode.Escape);\n\tdefine(ScanCode.Backspace, KeyCode.Backspace);\n\tdefine(ScanCode.Tab, KeyCode.Tab);\n\tdefine(ScanCode.Space, KeyCode.Space);\n\t// define(ScanCode.Minus, KeyCode.Unknown);\n\t// define(ScanCode.Equal, KeyCode.Unknown);\n\t// define(ScanCode.BracketLeft, KeyCode.Unknown);\n\t// define(ScanCode.BracketRight, KeyCode.Unknown);\n\t// define(ScanCode.Backslash, KeyCode.Unknown);\n\t// define(ScanCode.IntlHash, KeyCode.Unknown);\n\t// define(ScanCode.Semicolon, KeyCode.Unknown);\n\t// define(ScanCode.Quote, KeyCode.Unknown);\n\t// define(ScanCode.Backquote, KeyCode.Unknown);\n\t// define(ScanCode.Comma, KeyCode.Unknown);\n\t// define(ScanCode.Period, KeyCode.Unknown);\n\t// define(ScanCode.Slash, KeyCode.Unknown);\n\tdefine(ScanCode.CapsLock, KeyCode.CapsLock);\n\tdefine(ScanCode.F1, KeyCode.F1);\n\tdefine(ScanCode.F2, KeyCode.F2);\n\tdefine(ScanCode.F3, KeyCode.F3);\n\tdefine(ScanCode.F4, KeyCode.F4);\n\tdefine(ScanCode.F5, KeyCode.F5);\n\tdefine(ScanCode.F6, KeyCode.F6);\n\tdefine(ScanCode.F7, KeyCode.F7);\n\tdefine(ScanCode.F8, KeyCode.F8);\n\tdefine(ScanCode.F9, KeyCode.F9);\n\tdefine(ScanCode.F10, KeyCode.F10);\n\tdefine(ScanCode.F11, KeyCode.F11);\n\tdefine(ScanCode.F12, KeyCode.F12);\n\tdefine(ScanCode.PrintScreen, KeyCode.Unknown);\n\tdefine(ScanCode.ScrollLock, KeyCode.ScrollLock);\n\tdefine(ScanCode.Pause, KeyCode.PauseBreak);\n\tdefine(ScanCode.Insert, KeyCode.Insert);\n\tdefine(ScanCode.Home, KeyCode.Home);\n\tdefine(ScanCode.PageUp, KeyCode.PageUp);\n\tdefine(ScanCode.Delete, KeyCode.Delete);\n\tdefine(ScanCode.End, KeyCode.End);\n\tdefine(ScanCode.PageDown, KeyCode.PageDown);\n\tdefine(ScanCode.ArrowRight, KeyCode.RightArrow);\n\tdefine(ScanCode.ArrowLeft, KeyCode.LeftArrow);\n\tdefine(ScanCode.ArrowDown, KeyCode.DownArrow);\n\tdefine(ScanCode.ArrowUp, KeyCode.UpArrow);\n\tdefine(ScanCode.NumLock, KeyCode.NumLock);\n\tdefine(ScanCode.NumpadDivide, KeyCode.NUMPAD_DIVIDE);\n\tdefine(ScanCode.NumpadMultiply, KeyCode.NUMPAD_MULTIPLY);\n\tdefine(ScanCode.NumpadSubtract, KeyCode.NUMPAD_SUBTRACT);\n\tdefine(ScanCode.NumpadAdd, KeyCode.NUMPAD_ADD);\n\tdefine(ScanCode.NumpadEnter, KeyCode.Enter); // Duplicate\n\tdefine(ScanCode.Numpad1, KeyCode.NUMPAD_1);\n\tdefine(ScanCode.Numpad2, KeyCode.NUMPAD_2);\n\tdefine(ScanCode.Numpad3, KeyCode.NUMPAD_3);\n\tdefine(ScanCode.Numpad4, KeyCode.NUMPAD_4);\n\tdefine(ScanCode.Numpad5, KeyCode.NUMPAD_5);\n\tdefine(ScanCode.Numpad6, KeyCode.NUMPAD_6);\n\tdefine(ScanCode.Numpad7, KeyCode.NUMPAD_7);\n\tdefine(ScanCode.Numpad8, KeyCode.NUMPAD_8);\n\tdefine(ScanCode.Numpad9, KeyCode.NUMPAD_9);\n\tdefine(ScanCode.Numpad0, KeyCode.NUMPAD_0);\n\tdefine(ScanCode.NumpadDecimal, KeyCode.NUMPAD_DECIMAL);\n\t// define(ScanCode.IntlBackslash, KeyCode.Unknown);\n\tdefine(ScanCode.ContextMenu, KeyCode.ContextMenu);\n\tdefine(ScanCode.Power, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadEqual, KeyCode.Unknown);\n\tdefine(ScanCode.F13, KeyCode.F13);\n\tdefine(ScanCode.F14, KeyCode.F14);\n\tdefine(ScanCode.F15, KeyCode.F15);\n\tdefine(ScanCode.F16, KeyCode.F16);\n\tdefine(ScanCode.F17, KeyCode.F17);\n\tdefine(ScanCode.F18, KeyCode.F18);\n\tdefine(ScanCode.F19, KeyCode.F19);\n\tdefine(ScanCode.F20, KeyCode.Unknown);\n\tdefine(ScanCode.F21, KeyCode.Unknown);\n\tdefine(ScanCode.F22, KeyCode.Unknown);\n\tdefine(ScanCode.F23, KeyCode.Unknown);\n\tdefine(ScanCode.F24, KeyCode.Unknown);\n\tdefine(ScanCode.Open, KeyCode.Unknown);\n\tdefine(ScanCode.Help, KeyCode.Unknown);\n\tdefine(ScanCode.Select, KeyCode.Unknown);\n\tdefine(ScanCode.Again, KeyCode.Unknown);\n\tdefine(ScanCode.Undo, KeyCode.Unknown);\n\tdefine(ScanCode.Cut, KeyCode.Unknown);\n\tdefine(ScanCode.Copy, KeyCode.Unknown);\n\tdefine(ScanCode.Paste, KeyCode.Unknown);\n\tdefine(ScanCode.Find, KeyCode.Unknown);\n\tdefine(ScanCode.AudioVolumeMute, KeyCode.Unknown);\n\tdefine(ScanCode.AudioVolumeUp, KeyCode.Unknown);\n\tdefine(ScanCode.AudioVolumeDown, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadComma, KeyCode.NUMPAD_SEPARATOR);\n\t// define(ScanCode.IntlRo, KeyCode.Unknown);\n\tdefine(ScanCode.KanaMode, KeyCode.Unknown);\n\t// define(ScanCode.IntlYen, KeyCode.Unknown);\n\tdefine(ScanCode.Convert, KeyCode.Unknown);\n\tdefine(ScanCode.NonConvert, KeyCode.Unknown);\n\tdefine(ScanCode.Lang1, KeyCode.Unknown);\n\tdefine(ScanCode.Lang2, KeyCode.Unknown);\n\tdefine(ScanCode.Lang3, KeyCode.Unknown);\n\tdefine(ScanCode.Lang4, KeyCode.Unknown);\n\tdefine(ScanCode.Lang5, KeyCode.Unknown);\n\tdefine(ScanCode.Abort, KeyCode.Unknown);\n\tdefine(ScanCode.Props, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadParenLeft, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadParenRight, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadBackspace, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadMemoryStore, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadMemoryRecall, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadMemoryClear, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadMemoryAdd, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadMemorySubtract, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadClear, KeyCode.Unknown);\n\tdefine(ScanCode.NumpadClearEntry, KeyCode.Unknown);\n\tdefine(ScanCode.ControlLeft, KeyCode.Ctrl); // Duplicate\n\tdefine(ScanCode.ShiftLeft, KeyCode.Shift); // Duplicate\n\tdefine(ScanCode.AltLeft, KeyCode.Alt); // Duplicate\n\tdefine(ScanCode.MetaLeft, KeyCode.Meta); // Duplicate\n\tdefine(ScanCode.ControlRight, KeyCode.Ctrl); // Duplicate\n\tdefine(ScanCode.ShiftRight, KeyCode.Shift); // Duplicate\n\tdefine(ScanCode.AltRight, KeyCode.Alt); // Duplicate\n\tdefine(ScanCode.MetaRight, KeyCode.Meta); // Duplicate\n\tdefine(ScanCode.BrightnessUp, KeyCode.Unknown);\n\tdefine(ScanCode.BrightnessDown, KeyCode.Unknown);\n\tdefine(ScanCode.MediaPlay, KeyCode.Unknown);\n\tdefine(ScanCode.MediaRecord, KeyCode.Unknown);\n\tdefine(ScanCode.MediaFastForward, KeyCode.Unknown);\n\tdefine(ScanCode.MediaRewind, KeyCode.Unknown);\n\tdefine(ScanCode.MediaTrackNext, KeyCode.Unknown);\n\tdefine(ScanCode.MediaTrackPrevious, KeyCode.Unknown);\n\tdefine(ScanCode.MediaStop, KeyCode.Unknown);\n\tdefine(ScanCode.Eject, KeyCode.Unknown);\n\tdefine(ScanCode.MediaPlayPause, KeyCode.Unknown);\n\tdefine(ScanCode.MediaSelect, KeyCode.Unknown);\n\tdefine(ScanCode.LaunchMail, KeyCode.Unknown);\n\tdefine(ScanCode.LaunchApp2, KeyCode.Unknown);\n\tdefine(ScanCode.LaunchApp1, KeyCode.Unknown);\n\tdefine(ScanCode.SelectTask, KeyCode.Unknown);\n\tdefine(ScanCode.LaunchScreenSaver, KeyCode.Unknown);\n\tdefine(ScanCode.BrowserSearch, KeyCode.Unknown);\n\tdefine(ScanCode.BrowserHome, KeyCode.Unknown);\n\tdefine(ScanCode.BrowserBack, KeyCode.Unknown);\n\tdefine(ScanCode.BrowserForward, KeyCode.Unknown);\n\tdefine(ScanCode.BrowserStop, KeyCode.Unknown);\n\tdefine(ScanCode.BrowserRefresh, KeyCode.Unknown);\n\tdefine(ScanCode.BrowserFavorites, KeyCode.Unknown);\n\tdefine(ScanCode.ZoomToggle, KeyCode.Unknown);\n\tdefine(ScanCode.MailReply, KeyCode.Unknown);\n\tdefine(ScanCode.MailForward, KeyCode.Unknown);\n\tdefine(ScanCode.MailSend, KeyCode.Unknown);\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChordKeybinding, KeyCodeUtils, Keybinding, SimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { ScanCodeBinding, ScanCodeUtils } from 'vs/base/common/scanCode';\n\nexport class KeybindingParser {\n\n\tprivate static _readModifiers(input: string) {\n\t\tinput = input.toLowerCase().trim();\n\n\t\tlet ctrl = false;\n\t\tlet shift = false;\n\t\tlet alt = false;\n\t\tlet meta = false;\n\n\t\tlet matchedModifier: boolean;\n\n\t\tdo {\n\t\t\tmatchedModifier = false;\n\t\t\tif (/^ctrl(\\+|\\-)/.test(input)) {\n\t\t\t\tctrl = true;\n\t\t\t\tinput = input.substr('ctrl-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^shift(\\+|\\-)/.test(input)) {\n\t\t\t\tshift = true;\n\t\t\t\tinput = input.substr('shift-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^alt(\\+|\\-)/.test(input)) {\n\t\t\t\talt = true;\n\t\t\t\tinput = input.substr('alt-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^meta(\\+|\\-)/.test(input)) {\n\t\t\t\tmeta = true;\n\t\t\t\tinput = input.substr('meta-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^win(\\+|\\-)/.test(input)) {\n\t\t\t\tmeta = true;\n\t\t\t\tinput = input.substr('win-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^cmd(\\+|\\-)/.test(input)) {\n\t\t\t\tmeta = true;\n\t\t\t\tinput = input.substr('cmd-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t} while (matchedModifier);\n\n\t\tlet key: string;\n\n\t\tconst firstSpaceIdx = input.indexOf(' ');\n\t\tif (firstSpaceIdx > 0) {\n\t\t\tkey = input.substring(0, firstSpaceIdx);\n\t\t\tinput = input.substring(firstSpaceIdx);\n\t\t} else {\n\t\t\tkey = input;\n\t\t\tinput = '';\n\t\t}\n\n\t\treturn {\n\t\t\tremains: input,\n\t\t\tctrl,\n\t\t\tshift,\n\t\t\talt,\n\t\t\tmeta,\n\t\t\tkey\n\t\t};\n\t}\n\n\tprivate static parseSimpleKeybinding(input: string): [SimpleKeybinding, string] {\n\t\tconst mods = this._readModifiers(input);\n\t\tconst keyCode = KeyCodeUtils.fromUserSettings(mods.key);\n\t\treturn [new SimpleKeybinding(mods.ctrl, mods.shift, mods.alt, mods.meta, keyCode), mods.remains];\n\t}\n\n\tpublic static parseKeybinding(input: string, OS: OperatingSystem): Keybinding | null {\n\t\tif (!input) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst parts: SimpleKeybinding[] = [];\n\t\tlet part: SimpleKeybinding;\n\n\t\tdo {\n\t\t\t[part, input] = this.parseSimpleKeybinding(input);\n\t\t\tparts.push(part);\n\t\t} while (input.length > 0);\n\t\treturn new ChordKeybinding(parts);\n\t}\n\n\tprivate static parseSimpleUserBinding(input: string): [SimpleKeybinding | ScanCodeBinding, string] {\n\t\tconst mods = this._readModifiers(input);\n\t\tconst scanCodeMatch = mods.key.match(/^\\[([^\\]]+)\\]$/);\n\t\tif (scanCodeMatch) {\n\t\t\tconst strScanCode = scanCodeMatch[1];\n\t\t\tconst scanCode = ScanCodeUtils.lowerCaseToEnum(strScanCode);\n\t\t\treturn [new ScanCodeBinding(mods.ctrl, mods.shift, mods.alt, mods.meta, scanCode), mods.remains];\n\t\t}\n\t\tconst keyCode = KeyCodeUtils.fromUserSettings(mods.key);\n\t\treturn [new SimpleKeybinding(mods.ctrl, mods.shift, mods.alt, mods.meta, keyCode), mods.remains];\n\t}\n\n\tstatic parseUserBinding(input: string): (SimpleKeybinding | ScanCodeBinding)[] {\n\t\tif (!input) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst parts: (SimpleKeybinding | ScanCodeBinding)[] = [];\n\t\tlet part: SimpleKeybinding | ScanCodeBinding;\n\n\t\twhile (input.length > 0) {\n\t\t\t[part, input] = this.parseSimpleUserBinding(input);\n\t\t\tparts.push(part);\n\t\t}\n\t\treturn parts;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && <any>regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\tconst len1 = a ? a.length : 0;\n\tconst len2 = b ? b.length : 0;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tif (typeof a !== 'string' || typeof b !== 'string') {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, empty);\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix } from 'vs/base/common/path';\n\nfunction isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst INVALID_FILE_CHARS = isWindows ? /[\\\\/:\\*\\?\"<>\\|]/g : /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined): boolean {\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tINVALID_FILE_CHARS.lastIndex = 0; // the holy grail of software development\n\tif (INVALID_FILE_CHARS.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindows && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindows && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindows && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 lenth\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor: Function, ...args: any[]): any {\n\tif (isNativeClass(ctor)) {\n\t\treturn new (ctor as any)(...args);\n\t} else {\n\t\tconst obj = Object.create(ctor.prototype);\n\t\tctor.apply(obj, args);\n\t\treturn obj;\n\t}\n}\n\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing): boolean {\n\treturn typeof thing === 'function'\n\t\t&& thing.hasOwnProperty('prototype')\n\t\t&& !thing.hasOwnProperty('arguments');\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(obj).forEach((key: string) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = deepClone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction arrayToHash(array: string[]): { [name: string]: true } {\n\tconst result: any = {};\n\tfor (const e of array) {\n\t\tresult[e] = true;\n\t}\n\treturn result;\n}\n\n/**\n * Given an array of strings, returns a function which, given a string\n * returns true or false whether the string is in that array.\n */\nexport function createKeywordMatcher(arr: string[], caseInsensitive: boolean = false): (str: string) => boolean {\n\tif (caseInsensitive) {\n\t\tarr = arr.map(function (x) { return x.toLowerCase(); });\n\t}\n\tconst hash = arrayToHash(arr);\n\tif (caseInsensitive) {\n\t\treturn function (word) {\n\t\t\treturn hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n\t\t};\n\t} else {\n\t\treturn function (word) {\n\t\t\treturn hash[word] !== undefined && hash.hasOwnProperty(word);\n\t\t};\n\t}\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\n/**\n * @internal\n */\nexport function setUriThrowOnMissingScheme(value: boolean): boolean {\n\tconst old = _throwOnMissingSchema;\n\t_throwOnMissingSchema = value;\n\treturn old;\n}\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\t// console.error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t} else {\n\t\t\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (_strict || _throwOnMissingSchema) {\n\t\treturn scheme || _empty;\n\t}\n\tif (!scheme) {\n\t\tconsole.trace('BAD uri lacks scheme, falling back to file-scheme.');\n\t\tscheme = 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tpublic static parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tpublic static file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tpublic static from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | any): URI {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._fsPath = (<UriState>data).fsPath;\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): object {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn URI.parse(requirefn.toUrl(relativePath)).fsPath;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value: string;\n\tprivate _from: number;\n\tprivate _to: number;\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment: string;\n\tvalue: E | undefined;\n\tkey: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T) => void): void {\n\t\tthis.map.forEach(clb);\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\n// We should fold BoundedMap and LinkedMap. See https://github.com/Microsoft/vscode/issues/28496\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause | any;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && strings.endsWith(path, base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string, basename: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): any {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): any {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1 as string | IRelativePattern, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern = function (path: string, basename: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\t(<ParsedStringPattern><any>resultPattern).allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\t(<ParsedStringPattern><any>resultPattern).allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: any): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\n/**\n * Same as `parse`, but the ParsedExpression is guaranteed to return a Promise\n */\nexport function parseToAsync(expression: IExpression, options?: IGlobOptions): ParsedExpression {\n\tconst parsedExpression = parse(expression, options);\n\treturn (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> => {\n\t\tconst result = parsedExpression(path, basename, hasSibling);\n\t\treturn isThenable(result) ? result : Promise.resolve(result);\n\t};\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: any, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename: string, name: string, hasSibling: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof ((<any>'').normalize) === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function getComparisonKey(resource: URI): string {\n\treturn hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase);\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, ignoreCase, '/');\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests wheter the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\nexport function isEqual(first: URI | undefined, second: URI | undefined, ignoreCase = hasToIgnoreCase(first)): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tif (resource.scheme === Schemas.file) {\n\t\treturn URI.file(paths.dirname(originalFSPath(resource)));\n\t}\n\tlet dirname = paths.posix.dirname(resource.path);\n\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns the fsPath of an URI where the drive letter is not normalized.\n * See #56403.\n */\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === paths.sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash; // ignore the slash at offset 0\n\t}\n}\n\n\n/**\n * Removes a trailing path seperator, if theres one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI): URI {\n\tif (hasTrailingPathSeparator(resource)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(from.path, to.path);\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\treturn paths.posix.relative(from.path || '/', to.path || '/');\n}\n\n/**\n * Resolves a absolute or relative path against a base URI.\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tlet resolvedPath: string;\n\tif (base.scheme === Schemas.file) {\n\t\tresolvedPath = URI.file(paths.resolve(originalFSPath(base), path)).path;\n\t} else {\n\t\tresolvedPath = paths.posix.resolve(base.path, path);\n\t}\n\treturn base.with({\n\t\tpath: resolvedPath\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { sep, posix, normalize } from 'vs/base/common/path';\nimport { endsWith, ltrim, startsWithIgnoreCase, rtrim, startsWith } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename } from 'vs/base/common/resources';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: string;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\t// TODO: isidor use resources.relative\n\t\t\t\tpathLabel = normalize(ltrim(resource.path.substr(baseResource.uri.path.length), posix.sep)!);\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = (baseResource && baseResource.name) ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider) {\n\t\tres = tildify(res, userHomeProvider.userHome);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? startsWith(path, normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[]): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${sep}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(sep) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(sep) + sep.length);\n\t\t\tpath = path.substr(path.indexOf(sep) + sep.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(sep);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(sep);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(sep) > -1) ? sep + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = endsWith(paths[otherPathIndex], subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (endsWith(segments[0], ':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + sep + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + sep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + sep + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string): string {\n\tif (isMacintosh) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tfor (let i = fullPath.length - 1; i >= 1; i--) {\n\t\tconst code = fullPath.charCodeAt(i);\n\t\tif (code === CharCode.Slash || code === CharCode.Backslash) {\n\t\t\treturn { parentPath: fullPath.substr(0, i), name: fullPath.substr(i + 1) };\n\t\t}\n\t}\n\treturn { parentPath: '', name: fullPath };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex(): string;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value: string) {\n\t\t// empty\n\t}\n\n\tpublic asHex(): string {\n\t\treturn this._value;\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static readonly _chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static readonly _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array: string[]): string {\n\t\treturn array[Math.floor(array.length * Math.random())];\n\t}\n\n\tprivate static _randomHex(): string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\nexport function v4(): UUID {\n\treturn new V4UUID();\n}\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value: string): UUID {\n\tif (!isUUID(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid(): string {\n\treturn v4().asHex();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as crypto from 'crypto';\nimport * as stream from 'stream';\nimport { once } from 'vs/base/common/functional';\n\nexport function checksum(path: string, sha1hash: string | undefined): Promise<void> {\n\tconst promise = new Promise<string | undefined>((c, e) => {\n\t\tconst input = fs.createReadStream(path);\n\t\tconst hash = crypto.createHash('sha1');\n\t\tconst hashStream = hash as any as stream.PassThrough;\n\t\tinput.pipe(hashStream);\n\n\t\tconst done = once((err?: Error, result?: string) => {\n\t\t\tinput.removeAllListeners();\n\t\t\thashStream.removeAllListeners();\n\n\t\t\tif (err) {\n\t\t\t\te(err);\n\t\t\t} else {\n\t\t\t\tc(result);\n\t\t\t}\n\t\t});\n\n\t\tinput.once('error', done);\n\t\tinput.once('end', done);\n\t\thashStream.once('error', done);\n\t\thashStream.once('data', (data: Buffer) => done(undefined, data.toString('hex')));\n\t});\n\n\treturn promise.then(hash => {\n\t\tif (hash !== sha1hash) {\n\t\t\treturn Promise.reject(new Error('Hash mismatch'));\n\t\t}\n\n\t\treturn Promise.resolve();\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\n\n/**\n * Executes the given function (fn) over the given array of items (list) in parallel and returns the resulting errors and results as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function.\n */\nexport function parallel<T, E>(list: T[], fn: (item: T, callback: (err: Error | null, result: E | null) => void) => void, callback: (err: Array<Error | null> | null, result: E[]) => void): void {\n\tconst results = new Array(list.length);\n\tconst errors = new Array<Error | null>(list.length);\n\tlet didErrorOccur = false;\n\tlet doneCount = 0;\n\n\tif (list.length === 0) {\n\t\treturn callback(null, []);\n\t}\n\n\tlist.forEach((item, index) => {\n\t\tfn(item, (error, result) => {\n\t\t\tif (error) {\n\t\t\t\tdidErrorOccur = true;\n\t\t\t\tresults[index] = null;\n\t\t\t\terrors[index] = error;\n\t\t\t} else {\n\t\t\t\tresults[index] = result;\n\t\t\t\terrors[index] = null;\n\t\t\t}\n\n\t\t\tif (++doneCount === list.length) {\n\t\t\t\treturn callback(didErrorOccur ? errors : null, results);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Executes the given function (fn) over the given array of items (param) in sequential order and returns the first occurred error or the result as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function. The first param can\n * either be a function that returns an array of results to loop in async fashion or be an array of items already.\n */\nexport function loop<T, E>(param: (callback: (error: Error, result: T[]) => void) => void, fn: (item: T, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void;\nexport function loop<T, E>(param: T[], fn: (item: T, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void;\nexport function loop<E>(param: any, fn: (item: any, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void {\n\n\t// Assert\n\tassert.ok(param, 'Missing first parameter');\n\tassert.ok(typeof (fn) === 'function', 'Second parameter must be a function that is called for each element');\n\tassert.ok(typeof (callback) === 'function', 'Third parameter must be a function that is called on error and success');\n\n\t// Param is function, execute to retrieve array\n\tif (typeof (param) === 'function') {\n\t\ttry {\n\t\t\tparam((error: Error, result: E[]) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t} else {\n\t\t\t\t\tloop(result, fn, callback);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tcallback(error, null);\n\t\t}\n\t}\n\n\t// Expect the param to be an array and loop over it\n\telse {\n\t\tconst results: E[] = [];\n\n\t\tconst looper: (i: number) => void = function (i: number): void {\n\n\t\t\t// Still work to do\n\t\t\tif (i < param.length) {\n\n\t\t\t\t// Execute function on array element\n\t\t\t\ttry {\n\t\t\t\t\tfn(param[i], (error: any, result: E) => {\n\n\t\t\t\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\t\t\t\tif (error === true || error === false) {\n\t\t\t\t\t\t\tresult = error;\n\t\t\t\t\t\t\terror = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Quit looping on error\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise push result on stack and continue looping\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (result) { //Could be that provided function is not returning a result\n\t\t\t\t\t\t\t\tresults.push(result);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\t\t\tlooper(i + 1);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i, param.length);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Done looping, pass back results too callback function\n\t\t\telse {\n\t\t\t\tcallback(null, results);\n\t\t\t}\n\t\t};\n\n\t\t// Start looping with first element in array\n\t\tlooper(0);\n\t}\n}\n\nfunction Sequence(sequences: { (...param: any[]): void; }[]): void {\n\n\t// Assert\n\tassert.ok(sequences.length > 1, 'Need at least one error handler and one function to process sequence');\n\tsequences.forEach((sequence) => {\n\t\tassert.ok(typeof (sequence) === 'function');\n\t});\n\n\t// Execute in Loop\n\tconst errorHandler = sequences.splice(0, 1)[0]; //Remove error handler\n\tlet sequenceResult: any = null;\n\n\tloop(sequences, (sequence, clb) => {\n\t\tconst sequenceFunction = function (error: any, result: any): void {\n\n\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\tif (error === true || error === false) {\n\t\t\t\tresult = error;\n\t\t\t\terror = null;\n\t\t\t}\n\n\t\t\t// Handle Error and Result\n\t\t\tif (error) {\n\t\t\t\tclb(error, null);\n\t\t\t} else {\n\t\t\t\tsequenceResult = result; //Remember result of sequence\n\t\t\t\tclb(null, null); //Don't pass on result to Looper as we are not aggregating it\n\t\t\t}\n\t\t};\n\n\t\t// We call the sequence function setting \"this\" to be the callback we define here\n\t\t// and we pass in the \"sequenceResult\" as first argument. Doing all this avoids having\n\t\t// to pass in a callback to the sequence because the callback is already \"this\".\n\t\ttry {\n\t\t\tsequence.call(sequenceFunction, sequenceResult);\n\t\t} catch (error) {\n\t\t\tclb(error, null);\n\t\t}\n\t}, (error, result) => {\n\t\tif (error) {\n\t\t\terrorHandler(error);\n\t\t}\n\t});\n}\n\n/**\n * Takes a variable list of functions to execute in sequence. The first function must be the error handler and the\n * following functions can do arbitrary work. \"this\" must be used as callback value for async functions to continue\n * through the sequence:\n * \tsequence(\n * \t\tfunction errorHandler(error) {\n * \t\t\tclb(error, null);\n * \t\t},\n *\n * \t\tfunction doSomethingAsync() {\n * \t\t\tfs.doAsync(path, this);\n * \t\t},\n *\n * \t\tfunction done(result) {\n * \t\t\tclb(null, result);\n * \t\t}\n * \t);\n */\nexport function sequence(errorHandler: (error: Error) => void, ...sequences: Function[]): void;\nexport function sequence(sequences: Function[]): void;\nexport function sequence(sequences: any): void {\n\tSequence((Array.isArray(sequences)) ? sequences : Array.prototype.slice.call(arguments));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallells Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs: TernarySearchTree<boolean>;\n\tprivate _value: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport function getMachineId(): Promise<string> {\n\treturn machineId || (machineId = getMacMachineId()\n\t\t.then(id => id || uuid.generateUuid())); // fallback, generate a UUID\n}\n\nfunction getMacMachineId(): Promise<string> {\n\treturn new Promise<string>(resolve => {\n\t\tPromise.all([import('crypto'), import('getmac')]).then(([crypto, getmac]) => {\n\t\t\ttry {\n\t\t\t\tgetmac.getMac((error, macAddress) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tresolve(crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Timeout due to hang with reduced privileges #58392\n\t\t\t\t// TODO@sbatten: Remove this when getmac is patched\n\t\t\t\tif (process.env.isBrowser) {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}, 10000);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\tresolve(undefined);\n\t\t\t}\n\t\t}, err => {\n\t\t\terrors.onUnexpectedError(err);\n\t\t\tresolve(undefined);\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\nimport { Agent } from './request';\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: Number(proxyEndpoint.port),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t};\n\n\tconst Ctor = requestURL.protocol === 'http:'\n\t\t? await import('http-proxy-agent')\n\t\t: await import('https-proxy-agent');\n\n\treturn new Ctor(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\nexport function listProcesses(rootPid: number): Promise<ProcessItem> {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet rootItem: ProcessItem | undefined;\n\t\tconst map = new Map<number, ProcessItem>();\n\n\t\tfunction addToTree(pid: number, ppid: number, cmd: string, load: number, mem: number) {\n\n\t\t\tconst parent = map.get(ppid);\n\t\t\tif (pid === rootPid || parent) {\n\n\t\t\t\tconst item: ProcessItem = {\n\t\t\t\t\tname: findName(cmd),\n\t\t\t\t\tcmd,\n\t\t\t\t\tpid,\n\t\t\t\t\tppid,\n\t\t\t\t\tload,\n\t\t\t\t\tmem\n\t\t\t\t};\n\t\t\t\tmap.set(pid, item);\n\n\t\t\t\tif (pid === rootPid) {\n\t\t\t\t\trootItem = item;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t}\n\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\tparent.children = parent.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction findName(cmd: string): string {\n\n\t\t\tconst SHARED_PROCESS_HINT = /--disable-blink-features=Auxclick/;\n\t\t\tconst WINDOWS_WATCHER_HINT = /\\\\watcher\\\\win32\\\\CodeHelper\\.exe/;\n\t\t\tconst WINDOWS_CRASH_REPORTER = /--crashes-directory/;\n\t\t\tconst WINDOWS_PTY = /\\\\pipe\\\\winpty-control/;\n\t\t\tconst WINDOWS_CONSOLE_HOST = /conhost\\.exe/;\n\t\t\tconst TYPE = /--type=([a-zA-Z-]+)/;\n\n\t\t\t// find windows file watcher\n\t\t\tif (WINDOWS_WATCHER_HINT.exec(cmd)) {\n\t\t\t\treturn 'watcherService ';\n\t\t\t}\n\n\t\t\t// find windows crash reporter\n\t\t\tif (WINDOWS_CRASH_REPORTER.exec(cmd)) {\n\t\t\t\treturn 'electron-crash-reporter';\n\t\t\t}\n\n\t\t\t// find windows pty process\n\t\t\tif (WINDOWS_PTY.exec(cmd)) {\n\t\t\t\treturn 'winpty-process';\n\t\t\t}\n\n\t\t\t//find windows console host process\n\t\t\tif (WINDOWS_CONSOLE_HOST.exec(cmd)) {\n\t\t\t\treturn 'console-window-host (Windows internal process)';\n\t\t\t}\n\n\t\t\t// find \"--type=xxxx\"\n\t\t\tlet matches = TYPE.exec(cmd);\n\t\t\tif (matches && matches.length === 2) {\n\t\t\t\tif (matches[1] === 'renderer') {\n\t\t\t\t\tif (SHARED_PROCESS_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'shared-process';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `window`;\n\t\t\t\t}\n\t\t\t\treturn matches[1];\n\t\t\t}\n\n\t\t\t// find all xxxx.js\n\t\t\tconst JS = /[a-zA-Z-]+\\.js/g;\n\t\t\tlet result = '';\n\t\t\tdo {\n\t\t\t\tmatches = JS.exec(cmd);\n\t\t\t\tif (matches) {\n\t\t\t\t\tresult += matches + ' ';\n\t\t\t\t}\n\t\t\t} while (matches);\n\n\t\t\tif (result) {\n\t\t\t\tif (cmd.indexOf('node ') < 0 && cmd.indexOf('node.exe') < 0) {\n\t\t\t\t\treturn `electron_node ${result}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cmd;\n\t\t}\n\n\t\tif (process.platform === 'win32') {\n\n\t\t\tconst cleanUNCPrefix = (value: string): string => {\n\t\t\t\tif (value.indexOf('\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\\\\??\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\"\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else if (value.indexOf('\"\\\\??\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t(import('windows-process-tree')).then(windowsProcessTree => {\n\t\t\t\twindowsProcessTree.getProcessList(rootPid, (processList) => {\n\t\t\t\t\twindowsProcessTree.getProcessCpuUsage(processList, (completeProcessList) => {\n\t\t\t\t\t\tconst processItems: Map<number, ProcessItem> = new Map();\n\t\t\t\t\t\tcompleteProcessList.forEach(process => {\n\t\t\t\t\t\t\tconst commandLine = cleanUNCPrefix(process.commandLine || '');\n\t\t\t\t\t\t\tprocessItems.set(process.pid, {\n\t\t\t\t\t\t\t\tname: findName(commandLine),\n\t\t\t\t\t\t\t\tcmd: commandLine,\n\t\t\t\t\t\t\t\tpid: process.pid,\n\t\t\t\t\t\t\t\tppid: process.ppid,\n\t\t\t\t\t\t\t\tload: process.cpu || 0,\n\t\t\t\t\t\t\t\tmem: process.memory || 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\trootItem = processItems.get(rootPid);\n\t\t\t\t\t\tif (rootItem) {\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tconst parent = processItems.get(item.ppid);\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tif (item.children) {\n\t\t\t\t\t\t\t\t\titem.children = item.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, windowsProcessTree.ProcessDataFlag.CommandLine | windowsProcessTree.ProcessDataFlag.Memory);\n\t\t\t});\n\t\t} else {\t// OS X & Linux\n\n\t\t\tconst CMD = '/bin/ps -ax -o pid=,ppid=,pcpu=,pmem=,command=';\n\t\t\tconst PID_CMD = /^\\s*([0-9]+)\\s+([0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+(.+)$/;\n\n\t\t\t// Set numeric locale to ensure '.' is used as the decimal separator\n\t\t\texec(CMD, { maxBuffer: 1000 * 1024, env: { LC_NUMERIC: 'en_US.UTF-8' } }, (err, stdout, stderr) => {\n\n\t\t\t\tif (err || stderr) {\n\t\t\t\t\treject(err || stderr.toString());\n\t\t\t\t} else {\n\n\t\t\t\t\tconst lines = stdout.toString().split('\\n');\n\t\t\t\t\tfor (const line of lines) {\n\t\t\t\t\t\tconst matches = PID_CMD.exec(line.trim());\n\t\t\t\t\t\tif (matches && matches.length === 6) {\n\t\t\t\t\t\t\taddToTree(parseInt(matches[1]), parseInt(matches[2]), matches[5], parseFloat(matches[3]), parseFloat(matches[4]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (process.platform === 'linux') {\n\t\t\t\t\t\t// Flatten rootItem to get a list of all VSCode processes\n\t\t\t\t\t\tlet processes = [rootItem];\n\t\t\t\t\t\tconst pids: number[] = [];\n\t\t\t\t\t\twhile (processes.length) {\n\t\t\t\t\t\t\tconst process = processes.shift();\n\t\t\t\t\t\t\tif (process) {\n\t\t\t\t\t\t\t\tpids.push(process.pid);\n\t\t\t\t\t\t\t\tif (process.children) {\n\t\t\t\t\t\t\t\t\tprocesses = processes.concat(process.children);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The cpu usage value reported on Linux is the average over the process lifetime,\n\t\t\t\t\t\t// recalculate the usage over a one second interval\n\t\t\t\t\t\t// JSON.stringify is needed to escape spaces, https://github.com/nodejs/node/issues/6803\n\t\t\t\t\t\tlet cmd = JSON.stringify(getPathFromAmdModule(require, 'vs/base/node/cpuUsage.sh'));\n\t\t\t\t\t\tcmd += ' ' + pids.join(' ');\n\n\t\t\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\t\t\treject(err || stderr.toString());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst cpuUsage = stdout.toString().split('\\n');\n\t\t\t\t\t\t\t\tfor (let i = 0; i < pids.length; i++) {\n\t\t\t\t\t\t\t\t\tconst processInfo = map.get(pids[i])!;\n\t\t\t\t\t\t\t\t\tprocessInfo.load = parseFloat(cpuUsage[i]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readdir, stat, exists, readFile } from 'fs';\nimport { join } from 'vs/base/common/path';\nimport { parse, ParseError } from 'vs/base/common/json';\n\nexport interface WorkspaceStatItem {\n\tname: string;\n\tcount: number;\n}\n\nexport interface WorkspaceStats {\n\tfileTypes: WorkspaceStatItem[];\n\tconfigFiles: WorkspaceStatItem[];\n\tfileCount: number;\n\tmaxFilesReached: boolean;\n\tlaunchConfigFiles: WorkspaceStatItem[];\n}\n\nfunction asSortedItems(map: Map<string, number>): WorkspaceStatItem[] {\n\tconst a: WorkspaceStatItem[] = [];\n\tmap.forEach((value, index) => a.push({ name: index, count: value }));\n\treturn a.sort((a, b) => b.count - a.count);\n}\n\nexport function collectLaunchConfigs(folder: string): Promise<WorkspaceStatItem[]> {\n\tconst launchConfigs = new Map<string, number>();\n\n\tconst launchConfig = join(folder, '.vscode', 'launch.json');\n\treturn new Promise((resolve, reject) => {\n\t\texists(launchConfig, (doesExist) => {\n\t\t\tif (doesExist) {\n\t\t\t\treadFile(launchConfig, (err, contents) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn resolve([]);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst errors: ParseError[] = [];\n\t\t\t\t\tconst json = parse(contents.toString(), errors);\n\t\t\t\t\tif (errors.length) {\n\t\t\t\t\t\tconsole.log(`Unable to parse ${launchConfig}`);\n\t\t\t\t\t\treturn resolve([]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (json['configurations']) {\n\t\t\t\t\t\tfor (const each of json['configurations']) {\n\t\t\t\t\t\t\tconst type = each['type'];\n\t\t\t\t\t\t\tif (type) {\n\t\t\t\t\t\t\t\tif (launchConfigs.has(type)) {\n\t\t\t\t\t\t\t\t\tlaunchConfigs.set(type, launchConfigs.get(type)! + 1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlaunchConfigs.set(type, 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve(asSortedItems(launchConfigs));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn resolve([]);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport async function collectWorkspaceStats(folder: string, filter: string[]): Promise<WorkspaceStats> {\n\tconst configFilePatterns = [\n\t\t{ 'tag': 'grunt.js', 'pattern': /^gruntfile\\.js$/i },\n\t\t{ 'tag': 'gulp.js', 'pattern': /^gulpfile\\.js$/i },\n\t\t{ 'tag': 'tsconfig.json', 'pattern': /^tsconfig\\.json$/i },\n\t\t{ 'tag': 'package.json', 'pattern': /^package\\.json$/i },\n\t\t{ 'tag': 'jsconfig.json', 'pattern': /^jsconfig\\.json$/i },\n\t\t{ 'tag': 'tslint.json', 'pattern': /^tslint\\.json$/i },\n\t\t{ 'tag': 'eslint.json', 'pattern': /^eslint\\.json$/i },\n\t\t{ 'tag': 'tasks.json', 'pattern': /^tasks\\.json$/i },\n\t\t{ 'tag': 'launch.json', 'pattern': /^launch\\.json$/i },\n\t\t{ 'tag': 'settings.json', 'pattern': /^settings\\.json$/i },\n\t\t{ 'tag': 'webpack.config.js', 'pattern': /^webpack\\.config\\.js$/i },\n\t\t{ 'tag': 'project.json', 'pattern': /^project\\.json$/i },\n\t\t{ 'tag': 'makefile', 'pattern': /^makefile$/i },\n\t\t{ 'tag': 'sln', 'pattern': /^.+\\.sln$/i },\n\t\t{ 'tag': 'csproj', 'pattern': /^.+\\.csproj$/i },\n\t\t{ 'tag': 'cmake', 'pattern': /^.+\\.cmake$/i }\n\t];\n\n\tconst fileTypes = new Map<string, number>();\n\tconst configFiles = new Map<string, number>();\n\n\tconst MAX_FILES = 20000;\n\n\tfunction walk(dir: string, filter: string[], token, done: (allFiles: string[]) => void): void {\n\t\tlet results: string[] = [];\n\t\treaddir(dir, async (err, files) => {\n\t\t\t// Ignore folders that can't be read\n\t\t\tif (err) {\n\t\t\t\treturn done(results);\n\t\t\t}\n\n\t\t\tlet pending = files.length;\n\t\t\tif (pending === 0) {\n\t\t\t\treturn done(results);\n\t\t\t}\n\n\t\t\tfor (const file of files) {\n\t\t\t\tif (token.maxReached) {\n\t\t\t\t\treturn done(results);\n\t\t\t\t}\n\n\t\t\t\tstat(join(dir, file), (err, stats) => {\n\t\t\t\t\t// Ignore files that can't be read\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\t\treturn done(results);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (stats.isDirectory()) {\n\t\t\t\t\t\t\tif (filter.indexOf(file) === -1) {\n\t\t\t\t\t\t\t\twalk(join(dir, file), filter, token, (res: string[]) => {\n\t\t\t\t\t\t\t\t\tresults = results.concat(res);\n\n\t\t\t\t\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\t\t\t\t\treturn done(results);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\t\t\t\tdone(results);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (token.count >= MAX_FILES) {\n\t\t\t\t\t\t\t\ttoken.maxReached = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttoken.count++;\n\t\t\t\t\t\t\tresults.push(file);\n\n\t\t\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\t\t\tdone(results);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tconst addFileType = (fileType: string) => {\n\t\tif (fileTypes.has(fileType)) {\n\t\t\tfileTypes.set(fileType, fileTypes.get(fileType)! + 1);\n\t\t}\n\t\telse {\n\t\t\tfileTypes.set(fileType, 1);\n\t\t}\n\t};\n\n\tconst addConfigFiles = (fileName: string) => {\n\t\tfor (const each of configFilePatterns) {\n\t\t\tif (each.pattern.test(fileName)) {\n\t\t\t\tif (configFiles.has(each.tag)) {\n\t\t\t\t\tconfigFiles.set(each.tag, configFiles.get(each.tag)! + 1);\n\t\t\t\t} else {\n\t\t\t\t\tconfigFiles.set(each.tag, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst acceptFile = (name: string) => {\n\t\tif (name.lastIndexOf('.') >= 0) {\n\t\t\tconst suffix: string | undefined = name.split('.').pop();\n\t\t\tif (suffix) {\n\t\t\t\taddFileType(suffix);\n\t\t\t}\n\t\t}\n\t\taddConfigFiles(name);\n\t};\n\n\tconst token: { count: number, maxReached: boolean } = { count: 0, maxReached: false };\n\n\treturn new Promise((resolve, reject) => {\n\t\twalk(folder, filter, token, async (files) => {\n\t\t\tfiles.forEach(acceptFile);\n\n\t\t\tconst launchConfigs = await collectLaunchConfigs(folder);\n\n\t\t\tresolve({\n\t\t\t\tconfigFiles: asSortedItems(configFiles),\n\t\t\t\tfileTypes: asSortedItems(fileTypes),\n\t\t\t\tfileCount: token.count,\n\t\t\t\tmaxFilesReached: token.maxReached,\n\t\t\t\tlaunchConfigFiles: launchConfigs\n\t\t\t});\n\t\t});\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\n\nexport interface ReadResult {\n\tbuffer: Buffer | null;\n\tbytesRead: number;\n}\n\n/**\n * Reads totalBytes from the provided file.\n */\nexport function readExactlyByFile(file: string, totalBytes: number): Promise<ReadResult> {\n\treturn new Promise<ReadResult>((resolve, reject) => {\n\t\tfs.open(file, 'r', null, (err, fd) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tfunction end(err: Error | null, resultBuffer: Buffer | null, bytesRead: number): void {\n\t\t\t\tfs.close(fd, closeError => {\n\t\t\t\t\tif (closeError) {\n\t\t\t\t\t\treturn reject(closeError);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err && (<any>err).code === 'EISDIR') {\n\t\t\t\t\t\treturn reject(err); // we want to bubble this error up (file is actually a folder)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ buffer: resultBuffer, bytesRead });\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst buffer = Buffer.allocUnsafe(totalBytes);\n\t\t\tlet offset = 0;\n\n\t\t\tfunction readChunk(): void {\n\t\t\t\tfs.read(fd, buffer, offset, totalBytes - offset, null, (err, bytesRead) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn end(err, null, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bytesRead === 0) {\n\t\t\t\t\t\treturn end(null, buffer, offset);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += bytesRead;\n\n\t\t\t\t\tif (offset === totalBytes) {\n\t\t\t\t\t\treturn end(null, buffer, offset);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn readChunk();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treadChunk();\n\t\t});\n\t});\n}\n\n/**\n * Reads a file until a matching string is found.\n *\n * @param file The file to read.\n * @param matchingString The string to search for.\n * @param chunkBytes The number of bytes to read each iteration.\n * @param maximumBytesToRead The maximum number of bytes to read before giving up.\n * @param callback The finished callback.\n */\nexport function readToMatchingString(file: string, matchingString: string, chunkBytes: number, maximumBytesToRead: number): Promise<string | null> {\n\treturn new Promise<string | null>((resolve, reject) =>\n\t\tfs.open(file, 'r', null, (err, fd) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tfunction end(err: Error | null, result: string | null): void {\n\t\t\t\tfs.close(fd, closeError => {\n\t\t\t\t\tif (closeError) {\n\t\t\t\t\t\treturn reject(closeError);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err && (<any>err).code === 'EISDIR') {\n\t\t\t\t\t\treturn reject(err); // we want to bubble this error up (file is actually a folder)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve(result);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst buffer = Buffer.allocUnsafe(maximumBytesToRead);\n\t\t\tlet offset = 0;\n\n\t\t\tfunction readChunk(): void {\n\t\t\t\tfs.read(fd, buffer, offset, chunkBytes, null, (err, bytesRead) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn end(err, null);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bytesRead === 0) {\n\t\t\t\t\t\treturn end(null, null);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += bytesRead;\n\n\t\t\t\t\tconst newLineIndex = buffer.indexOf(matchingString);\n\t\t\t\t\tif (newLineIndex >= 0) {\n\t\t\t\t\t\treturn end(null, buffer.toString('utf8').substr(0, newLineIndex));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (offset >= maximumBytesToRead) {\n\t\t\t\t\t\treturn end(new Error(`Could not find ${matchingString} in first ${maximumBytesToRead} bytes of ${file}`), null);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn readChunk();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treadChunk();\n\t\t})\n\t);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as stream from 'vs/base/node/stream';\nimport * as iconv from 'iconv-lite';\nimport { isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { exec } from 'child_process';\nimport { Readable, Writable } from 'stream';\n\nexport const UTF8 = 'utf8';\nexport const UTF8_with_bom = 'utf8bom';\nexport const UTF16be = 'utf16be';\nexport const UTF16le = 'utf16le';\n\nexport interface IDecodeStreamOptions {\n\tguessEncoding?: boolean;\n\tminBytesRequiredForDetection?: number;\n\toverwriteEncoding?(detectedEncoding: string | null): string;\n}\n\nexport function toDecodeStream(readable: Readable, options: IDecodeStreamOptions): Promise<{ detected: IDetectedEncodingResult, stream: NodeJS.ReadableStream }> {\n\tif (!options.minBytesRequiredForDetection) {\n\t\toptions.minBytesRequiredForDetection = options.guessEncoding ? AUTO_GUESS_BUFFER_MAX_LEN : NO_GUESS_BUFFER_MAX_LEN;\n\t}\n\n\tif (!options.overwriteEncoding) {\n\t\toptions.overwriteEncoding = detected => detected || UTF8;\n\t}\n\n\treturn new Promise<{ detected: IDetectedEncodingResult, stream: NodeJS.ReadableStream }>((resolve, reject) => {\n\n\t\treadable.on('error', reject);\n\n\t\treadable.pipe(new class extends Writable {\n\n\t\t\tprivate _decodeStream: NodeJS.ReadWriteStream;\n\t\t\tprivate _decodeStreamConstruction: Promise<any>;\n\t\t\tprivate _buffer: Buffer[] = [];\n\t\t\tprivate _bytesBuffered = 0;\n\n\t\t\t_write(chunk: any, encoding: string, callback: Function): void {\n\t\t\t\tif (!Buffer.isBuffer(chunk)) {\n\t\t\t\t\tcallback(new Error('data must be a buffer'));\n\t\t\t\t}\n\n\t\t\t\tif (this._decodeStream) {\n\t\t\t\t\t// just a forwarder now\n\t\t\t\t\tthis._decodeStream.write(chunk, callback);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._buffer.push(chunk);\n\t\t\t\tthis._bytesBuffered += chunk.length;\n\n\t\t\t\tif (this._decodeStreamConstruction) {\n\t\t\t\t\t// waiting for the decoder to be ready\n\t\t\t\t\tthis._decodeStreamConstruction.then(_ => callback(), err => callback(err));\n\n\t\t\t\t} else if (typeof options.minBytesRequiredForDetection === 'number' && this._bytesBuffered >= options.minBytesRequiredForDetection) {\n\t\t\t\t\t// buffered enough data, create stream and forward data\n\t\t\t\t\tthis._startDecodeStream(callback);\n\n\t\t\t\t} else {\n\t\t\t\t\t// only buffering\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_startDecodeStream(callback: Function): void {\n\n\t\t\t\tthis._decodeStreamConstruction = Promise.resolve(detectEncodingFromBuffer({\n\t\t\t\t\tbuffer: Buffer.concat(this._buffer), bytesRead: this._bytesBuffered\n\t\t\t\t}, options.guessEncoding)).then(detected => {\n\t\t\t\t\tif (options.overwriteEncoding) {\n\t\t\t\t\t\tdetected.encoding = options.overwriteEncoding(detected.encoding);\n\t\t\t\t\t}\n\t\t\t\t\tthis._decodeStream = decodeStream(detected.encoding);\n\t\t\t\t\tfor (const buffer of this._buffer) {\n\t\t\t\t\t\tthis._decodeStream.write(buffer);\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t\t\tresolve({ detected, stream: this._decodeStream });\n\n\t\t\t\t}, err => {\n\t\t\t\t\tthis.emit('error', err);\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_final(callback: (err?: any) => any) {\n\t\t\t\tif (this._decodeStream) {\n\t\t\t\t\t// normal finish\n\t\t\t\t\tthis._decodeStream.end(callback);\n\t\t\t\t} else {\n\t\t\t\t\t// we were still waiting for data...\n\t\t\t\t\tthis._startDecodeStream(() => this._decodeStream.end(callback));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function bomLength(encoding: string): number {\n\tswitch (encoding) {\n\t\tcase UTF8:\n\t\t\treturn 3;\n\t\tcase UTF16be:\n\t\tcase UTF16le:\n\t\t\treturn 2;\n\t}\n\n\treturn 0;\n}\n\nexport function decode(buffer: Buffer, encoding: string): string {\n\treturn iconv.decode(buffer, toNodeEncoding(encoding));\n}\n\nexport function encode(content: string | Buffer, encoding: string, options?: { addBOM?: boolean }): Buffer {\n\treturn iconv.encode(content, toNodeEncoding(encoding), options);\n}\n\nexport function encodingExists(encoding: string): boolean {\n\treturn iconv.encodingExists(toNodeEncoding(encoding));\n}\n\nexport function decodeStream(encoding: string | null): NodeJS.ReadWriteStream {\n\treturn iconv.decodeStream(toNodeEncoding(encoding));\n}\n\nexport function encodeStream(encoding: string, options?: { addBOM?: boolean }): NodeJS.ReadWriteStream {\n\treturn iconv.encodeStream(toNodeEncoding(encoding), options);\n}\n\nfunction toNodeEncoding(enc: string | null): string {\n\tif (enc === UTF8_with_bom || enc === null) {\n\t\treturn UTF8; // iconv does not distinguish UTF 8 with or without BOM, so we need to help it\n\t}\n\n\treturn enc;\n}\n\nexport function detectEncodingByBOMFromBuffer(buffer: Buffer | null, bytesRead: number): string | null {\n\tif (!buffer || bytesRead < 2) {\n\t\treturn null;\n\t}\n\n\tconst b0 = buffer.readUInt8(0);\n\tconst b1 = buffer.readUInt8(1);\n\n\t// UTF-16 BE\n\tif (b0 === 0xFE && b1 === 0xFF) {\n\t\treturn UTF16be;\n\t}\n\n\t// UTF-16 LE\n\tif (b0 === 0xFF && b1 === 0xFE) {\n\t\treturn UTF16le;\n\t}\n\n\tif (bytesRead < 3) {\n\t\treturn null;\n\t}\n\n\tconst b2 = buffer.readUInt8(2);\n\n\t// UTF-8\n\tif (b0 === 0xEF && b1 === 0xBB && b2 === 0xBF) {\n\t\treturn UTF8;\n\t}\n\n\treturn null;\n}\n\n/**\n * Detects the Byte Order Mark in a given file.\n * If no BOM is detected, null will be passed to callback.\n */\nexport function detectEncodingByBOM(file: string): Promise<string | null> {\n\treturn stream.readExactlyByFile(file, 3).then(({ buffer, bytesRead }) => detectEncodingByBOMFromBuffer(buffer, bytesRead));\n}\n\nconst MINIMUM_THRESHOLD = 0.2;\nconst IGNORE_ENCODINGS = ['ascii', 'utf-8', 'utf-16', 'utf-32'];\n\n/**\n * Guesses the encoding from buffer.\n */\nexport function guessEncodingByBuffer(buffer: Buffer): Promise<string | null> {\n\treturn import('jschardet').then(jschardet => {\n\t\tjschardet.Constants.MINIMUM_THRESHOLD = MINIMUM_THRESHOLD;\n\n\t\tconst guessed = jschardet.detect(buffer);\n\t\tif (!guessed || !guessed.encoding) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst enc = guessed.encoding.toLowerCase();\n\n\t\t// Ignore encodings that cannot guess correctly\n\t\t// (http://chardet.readthedocs.io/en/latest/supported-encodings.html)\n\t\tif (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn toIconvLiteEncoding(guessed.encoding);\n\t});\n}\n\nconst JSCHARDET_TO_ICONV_ENCODINGS: { [name: string]: string } = {\n\t'ibm866': 'cp866',\n\t'big5': 'cp950'\n};\n\nfunction toIconvLiteEncoding(encodingName: string): string {\n\tconst normalizedEncodingName = encodingName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\tconst mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\n\n\treturn mapped || normalizedEncodingName;\n}\n\n/**\n * The encodings that are allowed in a settings file don't match the canonical encoding labels specified by WHATWG.\n * See https://encoding.spec.whatwg.org/#names-and-labels\n * Iconv-lite strips all non-alphanumeric characters, but ripgrep doesn't. For backcompat, allow these labels.\n */\nexport function toCanonicalName(enc: string): string {\n\tswitch (enc) {\n\t\tcase 'shiftjis':\n\t\t\treturn 'shift-jis';\n\t\tcase 'utf16le':\n\t\t\treturn 'utf-16le';\n\t\tcase 'utf16be':\n\t\t\treturn 'utf-16be';\n\t\tcase 'big5hkscs':\n\t\t\treturn 'big5-hkscs';\n\t\tcase 'eucjp':\n\t\t\treturn 'euc-jp';\n\t\tcase 'euckr':\n\t\t\treturn 'euc-kr';\n\t\tcase 'koi8r':\n\t\t\treturn 'koi8-r';\n\t\tcase 'koi8u':\n\t\t\treturn 'koi8-u';\n\t\tcase 'macroman':\n\t\t\treturn 'x-mac-roman';\n\t\tcase 'utf8bom':\n\t\t\treturn 'utf8';\n\t\tdefault:\n\t\t\tconst m = enc.match(/windows(\\d+)/);\n\t\t\tif (m) {\n\t\t\t\treturn 'windows-' + m[1];\n\t\t\t}\n\n\t\t\treturn enc;\n\t}\n}\n\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512; // number of bytes to look at to decide about a file being binary or not\nconst NO_GUESS_BUFFER_MAX_LEN = 512; \t\t\t// when not auto guessing the encoding, small number of bytes are enough\nconst AUTO_GUESS_BUFFER_MAX_LEN = 512 * 8; \t\t// with auto guessing we want a lot more content to be read for guessing\n\nexport interface IDetectedEncodingResult {\n\tencoding: string | null;\n\tseemsBinary: boolean;\n}\n\nexport function detectEncodingFromBuffer(readResult: stream.ReadResult, autoGuessEncoding?: false): IDetectedEncodingResult;\nexport function detectEncodingFromBuffer(readResult: stream.ReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult>;\nexport function detectEncodingFromBuffer({ buffer, bytesRead }: stream.ReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult> | IDetectedEncodingResult {\n\n\t// Always first check for BOM to find out about encoding\n\tlet encoding = detectEncodingByBOMFromBuffer(buffer, bytesRead);\n\n\t// Detect 0 bytes to see if file is binary or UTF-16 LE/BE\n\t// unless we already know that this file has a UTF-16 encoding\n\tlet seemsBinary = false;\n\tif (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n\t\tlet couldBeUTF16LE = true; // e.g. 0xAA 0x00\n\t\tlet couldBeUTF16BE = true; // e.g. 0x00 0xAA\n\t\tlet containsZeroByte = false;\n\n\t\t// This is a simplified guess to detect UTF-16 BE or LE by just checking if\n\t\t// the first 512 bytes have the 0-byte at a specific location. For UTF-16 LE\n\t\t// this would be the odd byte index and for UTF-16 BE the even one.\n\t\t// Note: this can produce false positives (a binary file that uses a 2-byte\n\t\t// encoding of the same format as UTF-16) and false negatives (a UTF-16 file\n\t\t// that is using 4 bytes to encode a character).\n\t\tfor (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n\t\t\tconst isEndian = (i % 2 === 1); // assume 2-byte sequences typical for UTF-16\n\t\t\tconst isZeroByte = (buffer.readInt8(i) === 0);\n\n\t\t\tif (isZeroByte) {\n\t\t\t\tcontainsZeroByte = true;\n\t\t\t}\n\n\t\t\t// UTF-16 LE: expect e.g. 0xAA 0x00\n\t\t\tif (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n\t\t\t\tcouldBeUTF16LE = false;\n\t\t\t}\n\n\t\t\t// UTF-16 BE: expect e.g. 0x00 0xAA\n\t\t\tif (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n\t\t\t\tcouldBeUTF16BE = false;\n\t\t\t}\n\n\t\t\t// Return if this is neither UTF16-LE nor UTF16-BE and thus treat as binary\n\t\t\tif (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Handle case of 0-byte included\n\t\tif (containsZeroByte) {\n\t\t\tif (couldBeUTF16LE) {\n\t\t\t\tencoding = UTF16le;\n\t\t\t} else if (couldBeUTF16BE) {\n\t\t\t\tencoding = UTF16be;\n\t\t\t} else {\n\t\t\t\tseemsBinary = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Auto guess encoding if configured\n\tif (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n\t\treturn guessEncodingByBuffer(buffer.slice(0, bytesRead)).then(guessedEncoding => {\n\t\t\treturn {\n\t\t\t\tseemsBinary: false,\n\t\t\t\tencoding: guessedEncoding\n\t\t\t};\n\t\t});\n\t}\n\n\treturn { seemsBinary, encoding };\n}\n\n// https://ss64.com/nt/chcp.html\nconst windowsTerminalEncodings = {\n\t'437': 'cp437', // United States\n\t'850': 'cp850', // Multilingual(Latin I)\n\t'852': 'cp852', // Slavic(Latin II)\n\t'855': 'cp855', // Cyrillic(Russian)\n\t'857': 'cp857', // Turkish\n\t'860': 'cp860', // Portuguese\n\t'861': 'cp861', // Icelandic\n\t'863': 'cp863', // Canadian - French\n\t'865': 'cp865', // Nordic\n\t'866': 'cp866', // Russian\n\t'869': 'cp869', // Modern Greek\n\t'936': 'cp936', // Simplified Chinese\n\t'1252': 'cp1252' // West European Latin\n};\n\nexport function resolveTerminalEncoding(verbose?: boolean): Promise<string> {\n\tlet rawEncodingPromise: Promise<string>;\n\n\t// Support a global environment variable to win over other mechanics\n\tconst cliEncodingEnv = process.env['VSCODE_CLI_ENCODING'];\n\tif (cliEncodingEnv) {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Found VSCODE_CLI_ENCODING variable: ${cliEncodingEnv}`);\n\t\t}\n\n\t\trawEncodingPromise = Promise.resolve(cliEncodingEnv);\n\t}\n\n\t// Linux/Mac: use \"locale charmap\" command\n\telse if (isLinux || isMacintosh) {\n\t\trawEncodingPromise = new Promise<string>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"locale charmap\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('locale charmap', (err, stdout, stderr) => resolve(stdout));\n\t\t});\n\t}\n\n\t// Windows: educated guess\n\telse {\n\t\trawEncodingPromise = new Promise<string>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"chcp\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('chcp', (err, stdout, stderr) => {\n\t\t\t\tif (stdout) {\n\t\t\t\t\tconst windowsTerminalEncodingKeys = Object.keys(windowsTerminalEncodings);\n\t\t\t\t\tfor (const key of windowsTerminalEncodingKeys) {\n\t\t\t\t\t\tif (stdout.indexOf(key) >= 0) {\n\t\t\t\t\t\t\treturn resolve(windowsTerminalEncodings[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn resolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\treturn rawEncodingPromise.then(rawEncoding => {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Detected raw terminal encoding: ${rawEncoding}`);\n\t\t}\n\n\t\tif (!rawEncoding || rawEncoding.toLowerCase() === 'utf-8' || rawEncoding.toLowerCase() === UTF8) {\n\t\t\treturn UTF8;\n\t\t}\n\n\t\tconst iconvEncoding = toIconvLiteEncoding(rawEncoding);\n\t\tif (iconv.encodingExists(iconvEncoding)) {\n\t\t\treturn iconvEncoding;\n\t\t}\n\n\t\tif (verbose) {\n\t\t\tconsole.log('Unsupported terminal encoding, falling back to UTF-8.');\n\t\t}\n\n\t\treturn UTF8;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as paths from 'vs/base/common/path';\nimport { nfcall } from 'vs/base/common/async';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport * as uuid from 'vs/base/common/uuid';\nimport { encode, encodeStream } from 'vs/base/node/encoding';\nimport * as flow from 'vs/base/node/flow';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable, toDisposable, Disposable } from 'vs/base/common/lifecycle';\n\nconst loop = flow.loop;\n\nexport function readdirSync(path: string): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn fs.readdirSync(path).map(c => normalizeNFC(c));\n\t}\n\n\treturn fs.readdirSync(path);\n}\n\nexport function readdir(path: string, callback: (error: Error | null, files: string[]) => void): void {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn fs.readdir(path, (error, children) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error, []);\n\t\t\t}\n\n\t\t\treturn callback(null, children.map(c => normalizeNFC(c)));\n\t\t});\n\t}\n\n\treturn fs.readdir(path, callback);\n}\n\nexport interface IStatAndLink {\n\tstat: fs.Stats;\n\tisSymbolicLink: boolean;\n}\n\nexport function statLink(path: string, callback: (error: Error | null, statAndIsLink: IStatAndLink | null) => void): void {\n\tfs.lstat(path, (error, lstat) => {\n\t\tif (error || lstat.isSymbolicLink()) {\n\t\t\tfs.stat(path, (error, stat) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn callback(error, null);\n\t\t\t\t}\n\n\t\t\t\tcallback(null, { stat, isSymbolicLink: lstat && lstat.isSymbolicLink() });\n\t\t\t});\n\t\t} else {\n\t\t\tcallback(null, { stat: lstat, isSymbolicLink: false });\n\t\t}\n\t});\n}\n\nexport function copy(source: string, target: string, callback: (error: Error | null) => void, copiedSourcesIn?: { [path: string]: boolean }): void {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tfs.stat(source, (error, stat) => {\n\t\tif (error) {\n\t\t\treturn callback(error);\n\t\t}\n\n\t\tif (!stat.isDirectory()) {\n\t\t\treturn doCopyFile(source, target, stat.mode & 511, callback);\n\t\t}\n\n\t\tif (copiedSources[source]) {\n\t\t\treturn callback(null); // escape when there are cycles (can happen with symlinks)\n\t\t}\n\n\t\tcopiedSources[source] = true; // remember as copied\n\n\t\tconst proceed = function () {\n\t\t\treaddir(source, (err, files) => {\n\t\t\t\tloop(files, (file: string, clb: (error: Error | null, result: string[]) => void) => {\n\t\t\t\t\tcopy(paths.join(source, file), paths.join(target, file), (error: Error) => clb(error, []), copiedSources);\n\t\t\t\t}, callback);\n\t\t\t});\n\t\t};\n\n\t\tmkdirp(target, stat.mode & 511).then(proceed, proceed);\n\t});\n}\n\nfunction doCopyFile(source: string, target: string, mode: number, callback: (error: Error) => void): void {\n\tconst reader = fs.createReadStream(source);\n\tconst writer = fs.createWriteStream(target, { mode });\n\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases, pass to callback\n\t\t\tif (error) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\n\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\telse {\n\t\t\t\tfs.chmod(target, mode, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\t// handle errors properly\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// we are done (underlying fd has been closed)\n\twriter.once('close', () => finish());\n\n\t// start piping\n\treader.pipe(writer);\n}\n\nexport function mkdirp(path: string, mode?: number, token?: CancellationToken): Promise<boolean> {\n\tconst mkdir = (): Promise<null> => {\n\t\treturn nfcall(fs.mkdir, path, mode).then(undefined, (mkdirErr: NodeJS.ErrnoException) => {\n\n\t\t\t// ENOENT: a parent folder does not exist yet\n\t\t\tif (mkdirErr.code === 'ENOENT') {\n\t\t\t\treturn Promise.reject(mkdirErr);\n\t\t\t}\n\n\t\t\t// Any other error: check if folder exists and\n\t\t\t// return normally in that case if its a folder\n\t\t\treturn nfcall(fs.stat, path).then((stat: fs.Stats) => {\n\t\t\t\tif (!stat.isDirectory()) {\n\t\t\t\t\treturn Promise.reject(new Error(`'${path}' exists and is not a directory.`));\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}, statErr => {\n\t\t\t\treturn Promise.reject(mkdirErr); // bubble up original mkdir error\n\t\t\t});\n\t\t});\n\t};\n\n\t// stop at root\n\tif (path === paths.dirname(path)) {\n\t\treturn Promise.resolve(true);\n\t}\n\n\t// recursively mkdir\n\treturn mkdir().then(undefined, (err: NodeJS.ErrnoException) => {\n\n\t\t// Respect cancellation\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\t// ENOENT: a parent folder does not exist yet, continue\n\t\t// to create the parent folder and then try again.\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn mkdirp(paths.dirname(path), mode).then(mkdir);\n\t\t}\n\n\t\t// Any other error\n\t\treturn Promise.reject(err);\n\t});\n}\n\n// Deletes the given path by first moving it out of the workspace. This has two benefits. For one, the operation can return fast because\n// after the rename, the contents are out of the workspace although not yet deleted. The greater benefit however is that this operation\n// will fail in case any file is used by another process. fs.unlink() in node will not bail if a file unlinked is used by another process.\n// However, the consequences are bad as outlined in all the related bugs from https://github.com/joyent/node/issues/7164\nexport function del(path: string, tmpFolder: string, callback: (error: Error | null) => void, done?: (error: Error | null) => void): void {\n\tfs.exists(path, exists => {\n\t\tif (!exists) {\n\t\t\treturn callback(null);\n\t\t}\n\n\t\tfs.stat(path, (err, stat) => {\n\t\t\tif (err || !stat) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\t// Special windows workaround: A file or folder that ends with a \".\" cannot be moved to another place\n\t\t\t// because it is not a valid file name. In this case, we really have to do the deletion without prior move.\n\t\t\tif (path[path.length - 1] === '.' || strings.endsWith(path, './') || strings.endsWith(path, '.\\\\')) {\n\t\t\t\treturn rmRecursive(path, callback);\n\t\t\t}\n\n\t\t\tconst pathInTemp = paths.join(tmpFolder, uuid.generateUuid());\n\t\t\tfs.rename(path, pathInTemp, (error: Error | null) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn rmRecursive(path, callback); // if rename fails, delete without tmp dir\n\t\t\t\t}\n\n\t\t\t\t// Return early since the move succeeded\n\t\t\t\tcallback(null);\n\n\t\t\t\t// do the heavy deletion outside the callers callback\n\t\t\t\trmRecursive(pathInTemp, error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tdone(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction rmRecursive(path: string, callback: (error: Error | null) => void): void {\n\tif (path === paths.win32.sep || path === paths.posix.sep) {\n\t\treturn callback(new Error('Will not delete root!'));\n\t}\n\n\tfs.exists(path, exists => {\n\t\tif (!exists) {\n\t\t\tcallback(null);\n\t\t} else {\n\t\t\tfs.lstat(path, (err, stat) => {\n\t\t\t\tif (err || !stat) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else if (!stat.isDirectory() || stat.isSymbolicLink() /* !!! never recurse into links when deleting !!! */) {\n\t\t\t\t\tconst mode = stat.mode;\n\t\t\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\t\t\tfs.chmod(path, mode | 128, (err: Error) => { // 128 === 0200\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treaddir(path, (err, children) => {\n\t\t\t\t\t\tif (err || !children) {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t} else if (children.length === 0) {\n\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet firstError: Error | null = null;\n\t\t\t\t\t\t\tlet childrenLeft = children.length;\n\t\t\t\t\t\t\tchildren.forEach(child => {\n\t\t\t\t\t\t\t\trmRecursive(paths.join(path, child), (err: Error) => {\n\t\t\t\t\t\t\t\t\tchildrenLeft--;\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tfirstError = firstError || err;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (childrenLeft === 0) {\n\t\t\t\t\t\t\t\t\t\tif (firstError) {\n\t\t\t\t\t\t\t\t\t\t\tcallback(firstError);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function delSync(path: string): void {\n\tif (path === paths.win32.sep || path === paths.posix.sep) {\n\t\tthrow new Error('Will not delete root!');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\treaddirSync(path).forEach(child => delSync(paths.join(path, child)));\n\t\t\tfs.rmdirSync(path);\n\t\t} else {\n\t\t\tfs.unlinkSync(path);\n\t\t}\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tthrow err;\n\t}\n}\n\nexport function mv(source: string, target: string, callback: (error: Error | null) => void): void {\n\tif (source === target) {\n\t\treturn callback(null);\n\t}\n\n\tfunction updateMtime(err: Error | null): void {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tfs.stat(target, (error, stat) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\treturn callback(null);\n\t\t\t}\n\n\t\t\tfs.open(target, 'a', null, (err: Error, fd: number) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tfs.futimes(fd, stat.atime, new Date(), (err: Error) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tfs.close(fd, callback);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t// Try native rename()\n\tfs.rename(source, target, (err: Error) => {\n\t\tif (!err) {\n\t\t\treturn updateMtime(null);\n\t\t}\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (err && source.toLowerCase() !== target.toLowerCase() && ((<any>err).code === 'EXDEV') || strings.endsWith(source, '.')) {\n\t\t\treturn copy(source, target, (err: Error) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\trmRecursive(source, updateMtime);\n\t\t\t});\n\t\t}\n\n\t\treturn callback(err);\n\t});\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n\tencoding?: {\n\t\tcharset: string;\n\t\taddBOM: boolean;\n\t};\n}\n\nlet canFlush = true;\nexport function writeFileAndFlush(path: string, data: string | Buffer | NodeJS.ReadableStream, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\toptions = ensureOptions(options);\n\n\tif (typeof data === 'string' || Buffer.isBuffer(data)) {\n\t\tdoWriteFileAndFlush(path, data, options, callback);\n\t} else {\n\t\tdoWriteFileStreamAndFlush(path, data, options, callback);\n\t}\n}\n\nfunction doWriteFileStreamAndFlush(path: string, reader: NodeJS.ReadableStream, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\tif (process.env.isBrowser) {\n\t\tlet content = '';\n\t\tlet chunk = reader.read();\n\t\twhile (chunk !== null) {\n\t\t\tcontent += chunk;\n\t\t\tchunk = reader.read();\n\t\t}\n\t\tfs.writeFile(path, content, 'utf-8', function (error) {\n\t\t\tif (error) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\t// finish only once\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases we need to manually close streams\n\t\t\t// if the write stream was successfully opened\n\t\t\tif (error) {\n\t\t\t\tif (isOpen) {\n\t\t\t\t\twriter.once('close', () => callback(error));\n\t\t\t\t\twriter.destroy();\n\t\t\t\t} else {\n\t\t\t\t\tcallback(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise just return without error\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t};\n\n\t// create writer to target. we set autoClose: false because we want to use the streams\n\t// file descriptor to call fs.fdatasync to ensure the data is flushed to disk\n\tconst writer = fs.createWriteStream(path, { mode: options.mode, flags: options.flag, autoClose: false });\n\n\t// Event: 'open'\n\t// Purpose: save the fd for later use and start piping\n\t// Notes: will not be called when there is an error opening the file descriptor!\n\tlet fd: number;\n\tlet isOpen: boolean;\n\twriter.once('open', descriptor => {\n\t\tfd = descriptor;\n\t\tisOpen = true;\n\n\t\t// if an encoding is provided, we need to pipe the stream through\n\t\t// an encoder stream and forward the encoding related options\n\t\tif (options.encoding) {\n\t\t\treader = reader.pipe(encodeStream(options.encoding.charset, { addBOM: options.encoding.addBOM }));\n\t\t}\n\n\t\t// start data piping only when we got a successful open. this ensures that we do\n\t\t// not consume the stream when an error happens and helps to fix this issue:\n\t\t// https://github.com/Microsoft/vscode/issues/42542\n\t\treader.pipe(writer);\n\t});\n\n\t// Event: 'error'\n\t// Purpose: to return the error to the outside and to close the write stream (does not happen automatically)\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// Event: 'finish'\n\t// Purpose: use fs.fdatasync to flush the contents to disk\n\t// Notes: event is called when the writer has finished writing to the underlying resource. we must call writer.close()\n\t// because we have created the WriteStream with autoClose: false\n\twriter.once('finish', () => {\n\n\t\t// flush to disk\n\t\tif (canFlush && isOpen) {\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\twriter.destroy();\n\t\t\t});\n\t\t} else {\n\t\t\twriter.destroy();\n\t\t}\n\t});\n\n\t// Event: 'close'\n\t// Purpose: signal we are done to the outside\n\t// Notes: event is called when the writer's filedescriptor is closed\n\twriter.once('close', () => finish());\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\tif (options.encoding) {\n\t\tdata = encode(data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, typeof options.flag === 'string' ? options.flag : 'r', options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(/** Desktop fd */path, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileAndFlushSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\toptions = ensureOptions(options);\n\n\tif (options.encoding) {\n\t\tdata = encode(data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: options.mode, flag: options.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, typeof options.flag === 'string' ? options.flag : 'r', options.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(path, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureOptions(options?: IWriteFileOptions): IWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\tconst ensuredOptions: IWriteFileOptions = { mode: options.mode, flag: options.flag, encoding: options.encoding };\n\n\tif (typeof ensuredOptions.mode !== 'number') {\n\t\tensuredOptions.mode = 0o666;\n\t}\n\n\tif (typeof ensuredOptions.flag !== 'string') {\n\t\tensuredOptions.flag = 'w';\n\t}\n\n\treturn ensuredOptions;\n}\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = paths.dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (paths.basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn paths.join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn paths.join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpath(path: string, callback: (error: Error | null, realpath: string) => void): void {\n\treturn fs.realpath(path, (error, realpath) => {\n\t\tif (!error) {\n\t\t\treturn callback(null, realpath);\n\t\t}\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\treturn fs.access(normalizedPath, fs.constants.R_OK, error => {\n\t\t\treturn callback(error, normalizedPath);\n\t\t});\n\t});\n}\n\nfunction normalizePath(path: string): string {\n\treturn strings.rtrim(paths.normalize(path), paths.sep);\n}\n\nexport function watch(path: string, onChange: (type: string, path?: string) => void, onError: (error: string) => void): IDisposable {\n\ttry {\n\t\tconst watcher = fs.watch(path);\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tlet file: string | undefined;\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tfile = raw.toString();\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tfile = normalizeNFC(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tonChange(type, file);\n\t\t});\n\n\t\twatcher.on('error', (code: number, signal: string) => onError(`Failed to watch ${path} for changes (${code}, ${signal})`));\n\n\t\treturn toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t});\n\t} catch (error) {\n\t\tfs.exists(path, exists => {\n\t\t\tif (exists) {\n\t\t\t\tonError(`Failed to watch ${path} for changes (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn Disposable.None;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (platform.isWindows && strings.endsWith(candidate, ':')) {\n\t\tcandidate += paths.sep;\n\t}\n\n\t// Ensure absolute\n\tif (!paths.isAbsolute(candidate)) {\n\t\tcandidate = paths.join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = paths.normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (platform.isWindows) {\n\t\tcandidate = strings.rtrim(candidate, paths.sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (strings.endsWith(candidate, ':')) {\n\t\t\tcandidate += paths.sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = strings.rtrim(candidate, paths.sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = paths.sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { dirname, basename } from 'vs/base/common/path';\nimport * as objects from 'vs/base/common/objects';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport * as extfs from 'vs/base/node/extfs';\nimport { isWindows } from 'vs/base/common/platform';\n\nexport interface IConfigurationChangeEvent<T> {\n\tconfig: T;\n}\n\nexport interface IConfigWatcher<T> {\n\tpath: string;\n\thasParseErrors: boolean;\n\n\treload(callback: (config: T) => void): void;\n\tgetConfig(): T;\n}\n\nexport interface IConfigOptions<T> {\n\tonError: (error: Error | string) => void;\n\tdefaultConfig: T;\n\tchangeBufferDelay?: number;\n\tparse?: (content: string, errors: any[]) => T;\n\tinitCallback?: (config: T) => void;\n}\n\n/**\n * A simple helper to watch a configured file for changes and process its contents as JSON object.\n * Supports:\n * - comments in JSON files and errors\n * - symlinks for the config file itself\n * - delayed processing of changes to accomodate for lots of changes\n * - configurable defaults\n */\nexport class ConfigWatcher<T> implements IConfigWatcher<T>, IDisposable {\n\tprivate cache: T;\n\tprivate parseErrors: json.ParseError[];\n\tprivate disposed: boolean;\n\tprivate loaded: boolean;\n\tprivate timeoutHandle: NodeJS.Timer | null;\n\tprivate disposables: IDisposable[];\n\tprivate readonly _onDidUpdateConfiguration: Emitter<IConfigurationChangeEvent<T>>;\n\tprivate configName: string;\n\n\tconstructor(private _path: string, private options: IConfigOptions<T> = { defaultConfig: Object.create(null), onError: error => console.error(error) }) {\n\t\tthis.disposables = [];\n\t\tthis.configName = basename(this._path);\n\n\t\tthis._onDidUpdateConfiguration = new Emitter<IConfigurationChangeEvent<T>>();\n\t\tthis.disposables.push(this._onDidUpdateConfiguration);\n\n\t\tthis.registerWatcher();\n\t\tthis.initAsync();\n\t}\n\n\tpublic get path(): string {\n\t\treturn this._path;\n\t}\n\n\tpublic get hasParseErrors(): boolean {\n\t\treturn this.parseErrors && this.parseErrors.length > 0;\n\t}\n\n\tpublic get onDidUpdateConfiguration(): Event<IConfigurationChangeEvent<T>> {\n\t\treturn this._onDidUpdateConfiguration.event;\n\t}\n\n\tprivate initAsync(): void {\n\t\tthis.loadAsync(config => {\n\t\t\tif (!this.loaded) {\n\t\t\t\tthis.updateCache(config); // prevent race condition if config was loaded sync already\n\t\t\t}\n\t\t\tif (this.options.initCallback) {\n\t\t\t\tthis.options.initCallback(this.getConfig());\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateCache(value: T): void {\n\t\tthis.cache = value;\n\t\tthis.loaded = true;\n\t}\n\n\tprivate loadSync(): T {\n\t\ttry {\n\t\t\treturn this.parse(fs.readFileSync(this._path).toString());\n\t\t} catch (error) {\n\t\t\treturn this.options.defaultConfig;\n\t\t}\n\t}\n\n\tprivate loadAsync(callback: (config: T) => void): void {\n\t\tfs.readFile(this._path, (error, raw) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(this.options.defaultConfig);\n\t\t\t}\n\n\t\t\treturn callback(this.parse(raw.toString()));\n\t\t});\n\t}\n\n\tprivate parse(raw: string): T {\n\t\tlet res: T;\n\t\ttry {\n\t\t\tthis.parseErrors = [];\n\t\t\tres = this.options.parse ? this.options.parse(raw, this.parseErrors) : json.parse(raw, this.parseErrors);\n\t\t\treturn res || this.options.defaultConfig;\n\t\t} catch (error) {\n\t\t\t// Ignore parsing errors\n\t\t\treturn this.options.defaultConfig;\n\t\t}\n\t}\n\n\tprivate registerWatcher(): void {\n\n\t\t// Watch the parent of the path so that we detect ADD and DELETES\n\t\tconst parentFolder = dirname(this._path);\n\t\tthis.watch(parentFolder, true);\n\n\t\t// Check if the path is a symlink and watch its target if so\n\t\tfs.lstat(this._path, (err, stat) => {\n\t\t\tif (err || stat.isDirectory()) {\n\t\t\t\treturn; // path is not a valid file\n\t\t\t}\n\n\t\t\t// We found a symlink\n\t\t\tif (stat.isSymbolicLink()) {\n\t\t\t\tfs.readlink(this._path, (err, realPath) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn; // path is not a valid symlink\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.watch(realPath, false);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate watch(path: string, isParentFolder: boolean): void {\n\t\tif (this.disposed) {\n\t\t\treturn; // avoid watchers that will never get disposed by checking for being disposed\n\t\t}\n\n\t\tthis.disposables.push(extfs.watch(path,\n\t\t\t(type, file) => this.onConfigFileChange(type, file, isParentFolder),\n\t\t\t(error: string) => this.options.onError(error)\n\t\t));\n\t}\n\n\tprivate onConfigFileChange(eventType: string, filename: string | undefined, isParentFolder: boolean): void {\n\t\tif (isParentFolder) {\n\n\t\t\t// Windows: in some cases the filename contains artifacts from the absolute path\n\t\t\t// see https://github.com/nodejs/node/issues/19170\n\t\t\t// As such, we have to ensure that the filename basename is used for comparison.\n\t\t\tif (isWindows && filename && filename !== this.configName) {\n\t\t\t\tfilename = basename(filename);\n\t\t\t}\n\n\t\t\tif (filename !== this.configName) {\n\t\t\t\treturn; // a change to a sibling file that is not our config file\n\t\t\t}\n\t\t}\n\n\t\tif (this.timeoutHandle) {\n\t\t\tglobal.clearTimeout(this.timeoutHandle);\n\t\t\tthis.timeoutHandle = null;\n\t\t}\n\n\t\t// we can get multiple change events for one change, so we buffer through a timeout\n\t\tthis.timeoutHandle = global.setTimeout(() => this.reload(), this.options.changeBufferDelay || 0);\n\t}\n\n\tpublic reload(callback?: (config: T) => void): void {\n\t\tthis.loadAsync(currentConfig => {\n\t\t\tif (!objects.equals(currentConfig, this.cache)) {\n\t\t\t\tthis.updateCache(currentConfig);\n\n\t\t\t\tthis._onDidUpdateConfiguration.fire({ config: this.cache });\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(currentConfig);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getConfig(): T {\n\t\tthis.ensureLoaded();\n\n\t\treturn this.cache;\n\t}\n\n\tprivate ensureLoaded(): void {\n\t\tif (!this.loaded) {\n\t\t\tthis.updateCache(this.loadSync());\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extfs from 'vs/base/node/extfs';\nimport { join } from 'vs/base/common/path';\nimport { nfcall, Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\n\nexport function readdir(path: string): Promise<string[]> {\n\treturn nfcall(extfs.readdir, path);\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn new Promise(c => fs.exists(path, c));\n}\n\nexport function chmod(path: string, mode: number): Promise<boolean> {\n\treturn nfcall(fs.chmod, path, mode);\n}\n\nexport import mkdirp = extfs.mkdirp;\n\nexport function rimraf(path: string): Promise<void> {\n\treturn lstat(path).then(stat => {\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\treturn readdir(path)\n\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(join(path, child)))))\n\t\t\t\t.then(() => rmdir(path));\n\t\t} else {\n\t\t\treturn unlink(path);\n\t\t}\n\t}, (err: NodeJS.ErrnoException) => {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Promise.reject(err);\n\t});\n}\n\nexport function realpath(path: string): Promise<string> {\n\treturn nfcall(extfs.realpath, path);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn nfcall(fs.stat, path);\n}\n\nexport function statLink(path: string): Promise<{ stat: fs.Stats, isSymbolicLink: boolean }> {\n\treturn nfcall(extfs.statLink, path);\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn nfcall(fs.lstat, path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn nfcall(fs.rename, oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tfs.rename(oldPath, newPath, () => resolve());\n\t});\n}\n\nexport function rmdir(path: string): Promise<void> {\n\treturn nfcall(fs.rmdir, path);\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn nfcall(fs.unlink, path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn nfcall<void>(fs.symlink, target, path, type);\n}\n\nexport function readlink(path: string): Promise<string> {\n\treturn nfcall<string>(fs.readlink, path);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn nfcall(fs.truncate, path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn nfcall(fs.readFile, path, encoding);\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueue: { [path: string]: Queue<void> } = Object.create(null);\n\nexport function writeFile(path: string, data: string, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: NodeJS.ReadableStream, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: any, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: any, options?: extfs.IWriteFileOptions): any {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => nfcall(extfs.writeFileAndFlush, path, data, options));\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accomodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tlet writeFileQueue = writeFilePathQueue[queueKey];\n\tif (!writeFileQueue) {\n\t\twriteFileQueue = new Queue<void>();\n\t\twriteFilePathQueue[queueKey] = writeFileQueue;\n\n\t\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\t\tonFinish(() => {\n\t\t\tdelete writeFilePathQueue[queueKey];\n\t\t\twriteFileQueue.dispose();\n\t\t});\n\t}\n\n\treturn writeFileQueue;\n}\n\n/**\n* Read a dir and return only subfolders\n*/\nexport function readDirsInDir(dirPath: string): Promise<string[]> {\n\treturn readdir(dirPath).then(children => {\n\t\treturn Promise.all(children.map(c => dirExists(join(dirPath, c)))).then(exists => {\n\t\t\treturn children.filter((_, i) => exists[i]);\n\t\t});\n\t});\n}\n\n/**\n* `path` exists and is a directory\n*/\nexport function dirExists(path: string): Promise<boolean> {\n\treturn stat(path).then(stat => stat.isDirectory(), () => false);\n}\n\n/**\n* `path` exists and is a file.\n*/\nexport function fileExists(path: string): Promise<boolean> {\n\treturn stat(path).then(stat => stat.isFile(), () => false);\n}\n\n/**\n * Deletes a path from disk.\n */\nlet _tmpDir: string | null = null;\nfunction getTmpDir(): string {\n\tif (!_tmpDir) {\n\t\t_tmpDir = os.tmpdir();\n\t}\n\treturn _tmpDir;\n}\nexport function del(path: string, tmp = getTmpDir()): Promise<void> {\n\treturn nfcall(extfs.del, path, tmp);\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport function copy(source: string, target: string): Promise<void> {\n\treturn nfcall(extfs.copy, source, target);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Database, Statement } from 'vscode-sqlite3';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { ThrottledDelayer, timeout } from 'vs/base/common/async';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { mapToString, setToString } from 'vs/base/common/map';\nimport { basename } from 'vs/base/common/path';\nimport { copy, renameIgnoreError, unlink } from 'vs/base/node/pfs';\nimport { fill } from 'vs/base/common/arrays';\n\nexport enum StorageHint {\n\n\t// A hint to the storage that the storage\n\t// does not exist on disk yet. This allows\n\t// the storage library to improve startup\n\t// time by not checking the storage for data.\n\tSTORAGE_DOES_NOT_EXIST\n}\n\nexport interface IStorageOptions {\n\thint?: StorageHint;\n}\n\nexport interface IUpdateRequest {\n\tinsert?: Map<string, string>;\n\tdelete?: Set<string>;\n}\n\nexport interface IStorageItemsChangeEvent {\n\titems: Map<string, string>;\n}\n\nexport interface IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal: Event<IStorageItemsChangeEvent>;\n\n\tgetItems(): Promise<Map<string, string>>;\n\tupdateItems(request: IUpdateRequest): Promise<void>;\n\n\tclose(recovery?: () => Map<string, string>): Promise<void>;\n\n\tcheckIntegrity(full: boolean): Promise<string>;\n}\n\nexport interface IStorage extends IDisposable {\n\n\treadonly items: Map<string, string>;\n\treadonly size: number;\n\treadonly onDidChangeStorage: Event<string>;\n\n\tinit(): Promise<void>;\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\n\tset(key: string, value: string | boolean | number): Promise<void>;\n\tdelete(key: string): Promise<void>;\n\n\tclose(): Promise<void>;\n\n\tcheckIntegrity(full: boolean): Promise<string>;\n}\n\nenum StorageState {\n\tNone,\n\tInitialized,\n\tClosed\n}\n\nexport class Storage extends Disposable implements IStorage {\n\t_serviceBrand: any;\n\n\tprivate static readonly DEFAULT_FLUSH_DELAY = 100;\n\n\tprivate readonly _onDidChangeStorage: Emitter<string> = this._register(new Emitter<string>());\n\tget onDidChangeStorage(): Event<string> { return this._onDidChangeStorage.event; }\n\n\tprivate state = StorageState.None;\n\n\tprivate cache: Map<string, string> = new Map<string, string>();\n\n\tprivate flushDelayer: ThrottledDelayer<void>;\n\n\tprivate pendingDeletes: Set<string> = new Set<string>();\n\tprivate pendingInserts: Map<string, string> = new Map();\n\n\tconstructor(\n\t\tprotected database: IStorageDatabase,\n\t\tprivate options: IStorageOptions = Object.create(null)\n\t) {\n\t\tsuper();\n\n\t\tthis.flushDelayer = this._register(new ThrottledDelayer(Storage.DEFAULT_FLUSH_DELAY));\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n\t}\n\n\tprivate onDidChangeItemsExternal(e: IStorageItemsChangeEvent): void {\n\t\t// items that change external require us to update our\n\t\t// caches with the values. we just accept the value and\n\t\t// emit an event if there is a change.\n\t\te.items.forEach((value, key) => this.accept(key, value));\n\t}\n\n\tprivate accept(key: string, value: string): void {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\tlet changed = false;\n\n\t\t// Item got removed, check for deletion\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tchanged = this.cache.delete(key);\n\t\t}\n\n\t\t// Item got updated, check for change\n\t\telse {\n\t\t\tconst currentValue = this.cache.get(key);\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.cache.set(key, value);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Signal to outside listeners\n\t\tif (changed) {\n\t\t\tthis._onDidChangeStorage.fire(key);\n\t\t}\n\t}\n\n\tget items(): Map<string, string> {\n\t\treturn this.cache;\n\t}\n\n\tget size(): number {\n\t\treturn this.cache.size;\n\t}\n\n\tinit(): Promise<void> {\n\t\tif (this.state !== StorageState.None) {\n\t\t\treturn Promise.resolve(); // either closed or already initialized\n\t\t}\n\n\t\tthis.state = StorageState.Initialized;\n\n\t\tif (this.options.hint === StorageHint.STORAGE_DOES_NOT_EXIST) {\n\t\t\t// return early if we know the storage file does not exist. this is a performance\n\t\t\t// optimization to not load all items of the underlying storage if we know that\n\t\t\t// there can be no items because the storage does not exist.\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.database.getItems().then(items => {\n\t\t\tthis.cache = items;\n\t\t});\n\t}\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\tconst value = this.cache.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tset(key: string, value: string | boolean | number): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn Promise.resolve(); // Return early if we are already closed\n\t\t}\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.cache.get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache and pending\n\t\tthis.cache.set(key, valueStr);\n\t\tthis.pendingInserts.set(key, valueStr);\n\t\tthis.pendingDeletes.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.flushDelayer.trigger(() => this.flushPending());\n\t}\n\n\tdelete(key: string): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn Promise.resolve(); // Return early if we are already closed\n\t\t}\n\n\t\t// Remove from cache and add to pending\n\t\tconst wasDeleted = this.cache.delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\tif (!this.pendingDeletes.has(key)) {\n\t\t\tthis.pendingDeletes.add(key);\n\t\t}\n\n\t\tthis.pendingInserts.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.flushDelayer.trigger(() => this.flushPending());\n\t}\n\n\tclose(): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn Promise.resolve(); // return if already closed\n\t\t}\n\n\t\t// Update state\n\t\tthis.state = StorageState.Closed;\n\n\t\t// Trigger new flush to ensure data is persisted and then close\n\t\t// even if there is an error flushing. We must always ensure\n\t\t// the DB is closed to avoid corruption.\n\t\t//\n\t\t// Recovery: we pass our cache over as recovery option in case\n\t\t// the DB is not healthy.\n\t\tconst onDone = () => this.database.close(() => this.cache);\n\t\treturn this.flushDelayer.trigger(() => this.flushPending(), 0 /* as soon as possible */).then(onDone, onDone);\n\t}\n\n\tprivate flushPending(): Promise<void> {\n\t\tif (this.pendingInserts.size === 0 && this.pendingDeletes.size === 0) {\n\t\t\treturn Promise.resolve(); // return early if nothing to do\n\t\t}\n\n\t\t// Get pending data\n\t\tconst updateRequest: IUpdateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n\n\t\t// Reset pending data for next run\n\t\tthis.pendingDeletes = new Set<string>();\n\t\tthis.pendingInserts = new Map<string, string>();\n\n\t\t// Update in storage\n\t\treturn this.database.updateItems(updateRequest);\n\t}\n\n\tcheckIntegrity(full: boolean): Promise<string> {\n\t\treturn this.database.checkIntegrity(full);\n\t}\n}\n\ninterface IDatabaseConnection {\n\tdb: Database;\n\n\tisInMemory: boolean;\n\n\tisErroneous?: boolean;\n\tlastError?: string;\n}\n\nexport interface ISQLiteStorageDatabaseOptions {\n\tlogging?: ISQLiteStorageDatabaseLoggingOptions;\n}\n\nexport interface ISQLiteStorageDatabaseLoggingOptions {\n\tlogError?: (error: string | Error) => void;\n\tlogTrace?: (msg: string) => void;\n}\n\nexport class SQLiteStorageDatabase implements IStorageDatabase {\n\n\tstatic IN_MEMORY_PATH = ':memory:';\n\n\tget onDidChangeItemsExternal(): Event<IStorageItemsChangeEvent> { return Event.None; } // since we are the only client, there can be no external changes\n\n\tprivate static BUSY_OPEN_TIMEOUT = 2000; // timeout in ms to retry when opening DB fails with SQLITE_BUSY\n\tprivate static MAX_HOST_PARAMETERS = 256; // maximum number of parameters within a statement\n\n\tprivate path: string;\n\tprivate name: string;\n\n\tprivate logger: SQLiteStorageDatabaseLogger;\n\n\tprivate whenConnected: Promise<IDatabaseConnection>;\n\n\tconstructor(path: string, options: ISQLiteStorageDatabaseOptions = Object.create(null)) {\n\t\tthis.path = path;\n\t\tthis.name = basename(path);\n\n\t\tthis.logger = new SQLiteStorageDatabaseLogger(options.logging);\n\n\t\tthis.whenConnected = this.connect(path);\n\t}\n\n\tgetItems(): Promise<Map<string, string>> {\n\t\treturn this.whenConnected.then(connection => {\n\t\t\tconst items = new Map<string, string>();\n\n\t\t\treturn this.all(connection, 'SELECT * FROM ItemTable').then(rows => {\n\t\t\t\trows.forEach(row => items.set(row.key, row.value));\n\n\t\t\t\tif (this.logger.isTracing) {\n\t\t\t\t\tthis.logger.trace(`[storage ${this.name}] getItems(): ${items.size} rows`);\n\t\t\t\t}\n\n\t\t\t\treturn items;\n\t\t\t});\n\t\t});\n\t}\n\n\tupdateItems(request: IUpdateRequest): Promise<void> {\n\t\treturn this.whenConnected.then(connection => this.doUpdateItems(connection, request));\n\t}\n\n\tprivate doUpdateItems(connection: IDatabaseConnection, request: IUpdateRequest): Promise<void> {\n\t\tlet updateCount = 0;\n\t\tif (request.insert) {\n\t\t\tupdateCount += request.insert.size;\n\t\t}\n\t\tif (request.delete) {\n\t\t\tupdateCount += request.delete.size;\n\t\t}\n\n\t\tif (updateCount === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.logger.isTracing) {\n\t\t\tthis.logger.trace(`[storage ${this.name}] updateItems(): insert(${request.insert ? mapToString(request.insert) : '0'}), delete(${request.delete ? setToString(request.delete) : '0'})`);\n\t\t}\n\n\t\treturn this.transaction(connection, () => {\n\n\t\t\t// INSERT\n\t\t\tif (request.insert && request.insert.size > 0) {\n\t\t\t\tconst keysValuesChunks: (string[])[] = [];\n\t\t\t\tkeysValuesChunks.push([]); // seed with initial empty chunk\n\n\t\t\t\t// Split key/values into chunks of SQLiteStorageDatabase.MAX_HOST_PARAMETERS\n\t\t\t\t// so that we can efficiently run the INSERT with as many HOST parameters as possible\n\t\t\t\tlet currentChunkIndex = 0;\n\t\t\t\trequest.insert.forEach((value, key) => {\n\t\t\t\t\tlet keyValueChunk = keysValuesChunks[currentChunkIndex];\n\n\t\t\t\t\tif (keyValueChunk.length > SQLiteStorageDatabase.MAX_HOST_PARAMETERS) {\n\t\t\t\t\t\tcurrentChunkIndex++;\n\t\t\t\t\t\tkeyValueChunk = [];\n\t\t\t\t\t\tkeysValuesChunks.push(keyValueChunk);\n\t\t\t\t\t}\n\n\t\t\t\t\tkeyValueChunk.push(key, value);\n\t\t\t\t});\n\n\t\t\t\tkeysValuesChunks.forEach(keysValuesChunk => {\n\t\t\t\t\tthis.prepare(connection, `INSERT INTO ItemTable VALUES ${fill(keysValuesChunk.length / 2, '(?,?)').join(',')}`, stmt => stmt.run(keysValuesChunk), () => {\n\t\t\t\t\t\tconst keys: string[] = [];\n\t\t\t\t\t\tlet length = 0;\n\t\t\t\t\t\trequest.insert!.forEach((value, key) => {\n\t\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t\t\tlength += value.length;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn `Keys: ${keys.join(', ')} Length: ${length}`;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// DELETE\n\t\t\tif (request.delete && request.delete.size) {\n\t\t\t\tconst keysChunks: (string[])[] = [];\n\t\t\t\tkeysChunks.push([]); // seed with initial empty chunk\n\n\t\t\t\t// Split keys into chunks of SQLiteStorageDatabase.MAX_HOST_PARAMETERS\n\t\t\t\t// so that we can efficiently run the DELETE with as many HOST parameters\n\t\t\t\t// as possible\n\t\t\t\tlet currentChunkIndex = 0;\n\t\t\t\trequest.delete.forEach(key => {\n\t\t\t\t\tlet keyChunk = keysChunks[currentChunkIndex];\n\n\t\t\t\t\tif (keyChunk.length > SQLiteStorageDatabase.MAX_HOST_PARAMETERS) {\n\t\t\t\t\t\tcurrentChunkIndex++;\n\t\t\t\t\t\tkeyChunk = [];\n\t\t\t\t\t\tkeysChunks.push(keyChunk);\n\t\t\t\t\t}\n\n\t\t\t\t\tkeyChunk.push(key);\n\t\t\t\t});\n\n\t\t\t\tkeysChunks.forEach(keysChunk => {\n\t\t\t\t\tthis.prepare(connection, `DELETE FROM ItemTable WHERE key IN (${fill(keysChunk.length, '?').join(',')})`, stmt => stmt.run(keysChunk), () => {\n\t\t\t\t\t\tconst keys: string[] = [];\n\t\t\t\t\t\trequest.delete!.forEach(key => {\n\t\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn `Keys: ${keys.join(', ')}`;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tclose(recovery?: () => Map<string, string>): Promise<void> {\n\t\tthis.logger.trace(`[storage ${this.name}] close()`);\n\n\t\treturn this.whenConnected.then(connection => this.doClose(connection, recovery));\n\t}\n\n\tprivate doClose(connection: IDatabaseConnection, recovery?: () => Map<string, string>): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.close(closeError => {\n\t\t\t\tif (closeError) {\n\t\t\t\t\tthis.handleSQLiteError(connection, closeError, `[storage ${this.name}] close(): ${closeError}`);\n\t\t\t\t}\n\n\t\t\t\t// Return early if this storage was created only in-memory\n\t\t\t\t// e.g. when running tests we do not need to backup.\n\t\t\t\tif (this.path === SQLiteStorageDatabase.IN_MEMORY_PATH) {\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\t// If the DB closed successfully and we are not running in-memory\n\t\t\t\t// and the DB did not get errors during runtime, make a backup\n\t\t\t\t// of the DB so that we can use it as fallback in case the actual\n\t\t\t\t// DB becomes corrupt in the future.\n\t\t\t\tif (!connection.isErroneous && !connection.isInMemory) {\n\t\t\t\t\treturn this.backup().then(resolve, error => {\n\t\t\t\t\t\tthis.logger.error(`[storage ${this.name}] backup(): ${error}`);\n\n\t\t\t\t\t\treturn resolve(); // ignore failing backup\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Recovery: if we detected errors while using the DB or we are using\n\t\t\t\t// an inmemory DB (as a fallback to not being able to open the DB initially)\n\t\t\t\t// and we have a recovery function provided, we recreate the DB with this\n\t\t\t\t// data to recover all known data without loss if possible.\n\t\t\t\tif (typeof recovery === 'function') {\n\n\t\t\t\t\t// Delete the existing DB. If the path does not exist or fails to\n\t\t\t\t\t// be deleted, we do not try to recover anymore because we assume\n\t\t\t\t\t// that the path is no longer writeable for us.\n\t\t\t\t\treturn unlink(this.path).then(() => {\n\n\t\t\t\t\t\t// Re-open the DB fresh\n\t\t\t\t\t\treturn this.doConnect(this.path).then(recoveryConnection => {\n\t\t\t\t\t\t\tconst closeRecoveryConnection = () => {\n\t\t\t\t\t\t\t\treturn this.doClose(recoveryConnection, undefined /* do not attempt to recover again */);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Store items\n\t\t\t\t\t\t\treturn this.doUpdateItems(recoveryConnection, { insert: recovery() }).then(() => closeRecoveryConnection(), error => {\n\n\t\t\t\t\t\t\t\t// In case of an error updating items, still ensure to close the connection\n\t\t\t\t\t\t\t\t// to prevent SQLITE_BUSY errors when the connection is restablished\n\t\t\t\t\t\t\t\tcloseRecoveryConnection();\n\n\t\t\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}).then(resolve, reject);\n\t\t\t\t}\n\n\t\t\t\t// Finally without recovery we just reject\n\t\t\t\treturn reject(closeError || new Error('Database has errors or is in-memory without recovery option'));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate backup(): Promise<void> {\n\t\tconst backupPath = this.toBackupPath(this.path);\n\n\t\treturn copy(this.path, backupPath);\n\t}\n\n\tprivate toBackupPath(path: string): string {\n\t\treturn `${path}.backup`;\n\t}\n\n\tcheckIntegrity(full: boolean): Promise<string> {\n\t\tthis.logger.trace(`[storage ${this.name}] checkIntegrity(full: ${full})`);\n\n\t\treturn this.whenConnected.then(connection => {\n\t\t\treturn this.get(connection, full ? 'PRAGMA integrity_check' : 'PRAGMA quick_check').then(row => {\n\t\t\t\tconst integrity = full ? row['integrity_check'] : row['quick_check'];\n\n\t\t\t\tif (connection.isErroneous) {\n\t\t\t\t\treturn `${integrity} (last error: ${connection.lastError})`;\n\t\t\t\t}\n\n\t\t\t\tif (connection.isInMemory) {\n\t\t\t\t\treturn `${integrity} (in-memory!)`;\n\t\t\t\t}\n\n\t\t\t\treturn integrity;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate connect(path: string, retryOnBusy: boolean = true): Promise<IDatabaseConnection> {\n\t\tthis.logger.trace(`[storage ${this.name}] open(${path}, retryOnBusy: ${retryOnBusy})`);\n\n\t\treturn this.doConnect(path).then(undefined, error => {\n\t\t\tthis.logger.error(`[storage ${this.name}] open(): Unable to open DB due to ${error}`);\n\n\t\t\t// SQLITE_BUSY should only arise if another process is locking the same DB we want\n\t\t\t// to open at that time. This typically never happens because a DB connection is\n\t\t\t// limited per window. However, in the event of a window reload, it may be possible\n\t\t\t// that the previous connection was not properly closed while the new connection is\n\t\t\t// already established.\n\t\t\t//\n\t\t\t// In this case we simply wait for some time and retry once to establish the connection.\n\t\t\t//\n\t\t\tif (error.code === 'SQLITE_BUSY' && retryOnBusy) {\n\t\t\t\treturn timeout(SQLiteStorageDatabase.BUSY_OPEN_TIMEOUT).then(() => this.connect(path, false /* not another retry */));\n\t\t\t}\n\n\t\t\t// Otherwise, best we can do is to recover from a backup if that exists, as such we\n\t\t\t// move the DB to a different filename and try to load from backup. If that fails,\n\t\t\t// a new empty DB is being created automatically.\n\t\t\t//\n\t\t\t// The final fallback is to use an in-memory DB which should only happen if the target\n\t\t\t// folder is really not writeable for us.\n\t\t\t//\n\t\t\treturn unlink(path)\n\t\t\t\t.then(() => renameIgnoreError(this.toBackupPath(path), path))\n\t\t\t\t.then(() => this.doConnect(path))\n\t\t\t\t.then(undefined, error => {\n\t\t\t\t\tthis.logger.error(`[storage ${this.name}] open(): Unable to use backup due to ${error}`);\n\n\t\t\t\t\t// In case of any error to open the DB, use an in-memory\n\t\t\t\t\t// DB so that we always have a valid DB to talk to.\n\t\t\t\t\treturn this.doConnect(SQLiteStorageDatabase.IN_MEMORY_PATH);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate handleSQLiteError(connection: IDatabaseConnection, error: Error & { code?: string }, msg: string): void {\n\t\tconnection.isErroneous = true;\n\t\tconnection.lastError = msg;\n\n\t\tthis.logger.error(msg);\n\t}\n\n\tprivate doConnect(path: string): Promise<IDatabaseConnection> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\timport('vscode-sqlite3').then(sqlite3 => {\n\t\t\t\tconst connection: IDatabaseConnection = {\n\t\t\t\t\tdb: new (this.logger.isTracing ? sqlite3.verbose().Database : sqlite3.Database)(path, error => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\treturn connection.db ? connection.db.close(() => reject(error)) : reject(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The following exec() statement serves two purposes:\n\t\t\t\t\t\t// - create the DB if it does not exist yet\n\t\t\t\t\t\t// - validate that the DB is not corrupt (the open() call does not throw otherwise)\n\t\t\t\t\t\treturn this.exec(connection, [\n\t\t\t\t\t\t\t'PRAGMA user_version = 1;',\n\t\t\t\t\t\t\t'CREATE TABLE IF NOT EXISTS ItemTable (key TEXT UNIQUE ON CONFLICT REPLACE, value BLOB)'\n\t\t\t\t\t\t].join('')).then(() => {\n\t\t\t\t\t\t\treturn resolve(connection);\n\t\t\t\t\t\t}, error => {\n\t\t\t\t\t\t\treturn connection.db.close(() => reject(error));\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tisInMemory: path === SQLiteStorageDatabase.IN_MEMORY_PATH\n\t\t\t\t};\n\n\t\t\t\t// Errors\n\t\t\t\tconnection.db.on('error', error => this.handleSQLiteError(connection, error, `[storage ${this.name}] Error (event): ${error}`));\n\n\t\t\t\t// Tracing\n\t\t\t\tif (this.logger.isTracing) {\n\t\t\t\t\tconnection.db.on('trace', sql => this.logger.trace(`[storage ${this.name}] Trace (event): ${sql}`));\n\t\t\t\t}\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate exec(connection: IDatabaseConnection, sql: string): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.exec(sql, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.handleSQLiteError(connection, error, `[storage ${this.name}] exec(): ${error}`);\n\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate get(connection: IDatabaseConnection, sql: string): Promise<object> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.get(sql, (error, row) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.handleSQLiteError(connection, error, `[storage ${this.name}] get(): ${error}`);\n\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve(row);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate all(connection: IDatabaseConnection, sql: string): Promise<{ key: string, value: string }[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.all(sql, (error, rows) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.handleSQLiteError(connection, error, `[storage ${this.name}] all(): ${error}`);\n\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve(rows);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate transaction(connection: IDatabaseConnection, transactions: () => void): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.serialize(() => {\n\t\t\t\tconnection.db.run('BEGIN TRANSACTION');\n\n\t\t\t\ttransactions();\n\n\t\t\t\tconnection.db.run('END TRANSACTION', error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthis.handleSQLiteError(connection, error, `[storage ${this.name}] transaction(): ${error}`);\n\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate prepare(connection: IDatabaseConnection, sql: string, runCallback: (stmt: Statement) => void, errorDetails: () => string): void {\n\t\tconst stmt = connection.db.prepare(sql);\n\n\t\tconst statementErrorListener = error => {\n\t\t\tthis.handleSQLiteError(connection, error, `[storage ${this.name}] prepare(): ${error} (${sql}). Details: ${errorDetails()}`);\n\t\t};\n\n\t\tstmt.on('error', statementErrorListener);\n\n\t\trunCallback(stmt);\n\n\t\tstmt.finalize(error => {\n\t\t\tif (error) {\n\t\t\t\tstatementErrorListener(error);\n\t\t\t}\n\n\t\t\tstmt.removeListener('error', statementErrorListener);\n\t\t});\n\t}\n}\n\nclass SQLiteStorageDatabaseLogger {\n\tprivate readonly logTrace: (msg: string) => void;\n\tprivate readonly logError: (error: string | Error) => void;\n\n\tconstructor(options?: ISQLiteStorageDatabaseLoggingOptions) {\n\t\tif (options && typeof options.logTrace === 'function') {\n\t\t\tthis.logTrace = options.logTrace;\n\t\t}\n\n\t\tif (options && typeof options.logError === 'function') {\n\t\t\tthis.logError = options.logError;\n\t\t}\n\t}\n\n\tget isTracing(): boolean {\n\t\treturn !!this.logTrace;\n\t}\n\n\ttrace(msg: string): void {\n\t\tif (this.logTrace) {\n\t\t\tthis.logTrace(msg);\n\t\t}\n\t}\n\n\terror(error: string | Error): void {\n\t\tif (this.logError) {\n\t\t\tthis.logError(error);\n\t\t}\n\t}\n}\n\nexport class InMemoryStorageDatabase implements IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal = Event.None;\n\n\tprivate items = new Map<string, string>();\n\n\tgetItems(): Promise<Map<string, string>> {\n\t\treturn Promise.resolve(this.items);\n\t}\n\n\tupdateItems(request: IUpdateRequest): Promise<void> {\n\t\tif (request.insert) {\n\t\t\trequest.insert.forEach((value, key) => this.items.set(key, value));\n\t\t}\n\n\t\tif (request.delete) {\n\t\t\trequest.delete.forEach(key => this.items.delete(key));\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tclose(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tcheckIntegrity(full: boolean): Promise<string> {\n\t\treturn Promise.resolve('ok');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ICommonContextMenuItem {\n\tlabel?: string;\n\n\ttype?: 'normal' | 'separator' | 'submenu' | 'checkbox' | 'radio';\n\n\taccelerator?: string;\n\n\tenabled?: boolean;\n\tvisible?: boolean;\n\tchecked?: boolean;\n}\n\nexport interface ISerializableContextMenuItem extends ICommonContextMenuItem {\n\tid: number;\n\tsubmenu?: ISerializableContextMenuItem[];\n}\n\nexport interface IContextMenuItem extends ICommonContextMenuItem {\n\tclick?: (event: IContextMenuEvent) => void;\n\tsubmenu?: IContextMenuItem[];\n}\n\nexport interface IContextMenuEvent {\n\tshiftKey?: boolean;\n\tctrlKey?: boolean;\n\taltKey?: boolean;\n\tmetaKey?: boolean;\n}\n\nexport interface IPopupOptions {\n\tx?: number;\n\ty?: number;\n\tpositioningItem?: number;\n\tonHide?: () => void;\n}\n\nexport const CONTEXT_MENU_CHANNEL = 'vscode:contextmenu';\nexport const CONTEXT_MENU_CLOSE_CHANNEL = 'vscode:onCloseContextMenu';","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Menu, MenuItem, BrowserWindow, Event, ipcMain } from 'electron';\nimport { ISerializableContextMenuItem, CONTEXT_MENU_CLOSE_CHANNEL, CONTEXT_MENU_CHANNEL, IPopupOptions } from 'vs/base/parts/contextmenu/common/contextmenu';\n\nexport function registerContextMenuListener(): void {\n\tipcMain.on(CONTEXT_MENU_CHANNEL, (event: Event, contextMenuId: number, items: ISerializableContextMenuItem[], onClickChannel: string, options?: IPopupOptions) => {\n\t\tconst menu = createMenu(event, onClickChannel, items);\n\n\t\tmenu.popup({\n\t\t\twindow: BrowserWindow.fromWebContents(event.sender),\n\t\t\tx: options ? options.x : undefined,\n\t\t\ty: options ? options.y : undefined,\n\t\t\tpositioningItem: options ? options.positioningItem : undefined,\n\t\t\tcallback: () => {\n\t\t\t\tevent.sender.send(CONTEXT_MENU_CLOSE_CHANNEL, contextMenuId);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction createMenu(event: Event, onClickChannel: string, items: ISerializableContextMenuItem[]): Menu {\n\tconst menu = new Menu();\n\n\titems.forEach(item => {\n\t\tlet menuitem: MenuItem;\n\n\t\t// Separator\n\t\tif (item.type === 'separator') {\n\t\t\tmenuitem = new MenuItem({\n\t\t\t\ttype: item.type,\n\t\t\t});\n\t\t}\n\n\t\t// Sub Menu\n\t\telse if (Array.isArray(item.submenu)) {\n\t\t\tmenuitem = new MenuItem({\n\t\t\t\tsubmenu: createMenu(event, onClickChannel, item.submenu),\n\t\t\t\tlabel: item.label\n\t\t\t});\n\t\t}\n\n\t\t// Normal Menu Item\n\t\telse {\n\t\t\tmenuitem = new MenuItem({\n\t\t\t\tlabel: item.label,\n\t\t\t\ttype: item.type,\n\t\t\t\taccelerator: item.accelerator,\n\t\t\t\tchecked: item.checked,\n\t\t\t\tenabled: item.enabled,\n\t\t\t\tvisible: item.visible,\n\t\t\t\tcontext: {\n\t\t\t\t\tevent,\n\t\t\t\t\tonClickChannel,\n\t\t\t\t},\n\t\t\t\tclick: (menuItem, win, contextmenuEvent) => event.sender.send(onClickChannel, item.id, contextmenuEvent)\n\t\t\t});\n\t\t}\n\n\t\tmenu.append(menuitem);\n\t});\n\n\treturn menu;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, toDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: Buffer): void;\n\tonMessage: Event<Buffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the couter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidChangeConnections: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): Buffer;\n}\n\ninterface IWriter {\n\twrite(buffer: Buffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: Buffer) { }\n\n\tread(bytes: number): Buffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.length;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: Buffer[] = [];\n\n\tget buffer(): Buffer {\n\t\treturn Buffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: Buffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tArray = 3,\n\tObject = 4\n}\n\nfunction createSizeBuffer(size: number): Buffer {\n\tconst result = Buffer.allocUnsafe(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nconst BufferPresets = {\n\tUndefined: Buffer.alloc(1, DataType.Undefined),\n\tString: Buffer.alloc(1, DataType.String),\n\tBuffer: Buffer.alloc(1, DataType.Buffer),\n\tArray: Buffer.alloc(1, DataType.Array),\n\tObject: Buffer.alloc(1, DataType.Object)\n};\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = Buffer.from(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.length));\n\t\twriter.write(buffer);\n\t} else if (Buffer.isBuffer(data)) {\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(data.length));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = Buffer.from(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.length));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: Buffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error('Unknown channel');\n\t\t}\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error('Unknown channel');\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable([toDisposable(cancel), cancellationTokenListener]);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => this.activeRequests.delete(disposable));\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawEventFireResponse) => emitter.fire(res.data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: Buffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate _onDidChangeConnections = new Emitter<Connection<TContext>>();\n\treadonly onDidChangeConnections: Event<Connection<TContext>> = this._onDidChangeConnections.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidChangeConnections.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tconst channelPromise = router.routeCall(that, command, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tconst channelPromise = router.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidChangeConnections.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidChangeConnections);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/node/ipc';\nimport { Event } from 'vs/base/common/event';\n\nexport interface Sender {\n\tsend(channel: string, msg: Buffer | null): void;\n}\n\nexport class Protocol implements IMessagePassingProtocol {\n\n\tconstructor(private sender: Sender, readonly onMessage: Event<Buffer>) { }\n\n\tsend(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.sender.send('ipc:message', message);\n\t\t} catch (e) {\n\t\t\t// systems are going down\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.sender.send('ipc:disconnect', null);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IPCServer, ClientConnectionEvent } from 'vs/base/parts/ipc/node/ipc';\nimport { Protocol } from 'vs/base/parts/ipc/node/ipc.electron';\nimport { ipcMain } from 'electron';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\ninterface IIPCEvent {\n\tevent: { sender: Electron.WebContents; };\n\tmessage: Buffer | null;\n}\n\nfunction createScopedOnMessageEvent(senderId: number, eventName: string): Event<Buffer | null> {\n\tconst onMessage = Event.fromNodeEventEmitter<IIPCEvent>(ipcMain, eventName, (event, message) => ({ event, message }));\n\tconst onMessageFromSender = Event.filter(onMessage, ({ event }) => event.sender.id === senderId);\n\treturn Event.map(onMessageFromSender, ({ message }) => message);\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static Clients = new Map<number, IDisposable>();\n\n\tprivate static getOnDidClientConnect(): Event<ClientConnectionEvent> {\n\t\tconst onHello = Event.fromNodeEventEmitter<Electron.WebContents>(ipcMain, 'ipc:hello', ({ sender }) => sender);\n\n\t\treturn Event.map(onHello, webContents => {\n\t\t\tconst id = webContents.id;\n\t\t\tconst client = Server.Clients.get(id);\n\n\t\t\tif (client) {\n\t\t\t\tclient.dispose();\n\t\t\t}\n\n\t\t\tconst onDidClientReconnect = new Emitter<void>();\n\t\t\tServer.Clients.set(id, toDisposable(() => onDidClientReconnect.fire()));\n\n\t\t\tconst onMessage = createScopedOnMessageEvent(id, 'ipc:message') as Event<Buffer>;\n\t\t\tconst onDidClientDisconnect = Event.any(Event.signal(createScopedOnMessageEvent(id, 'ipc:disconnect')), onDidClientReconnect.event);\n\t\t\tconst protocol = new Protocol(webContents, onMessage);\n\n\t\t\treturn { protocol, onDidClientDisconnect };\n\t\t});\n\t}\n\n\tconstructor() {\n\t\tsuper(Server.getOnDidClientConnect());\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, ClientConnectionEvent, IPCServer, IPCClient } from 'vs/base/parts/ipc/node/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nclass ChunkStream {\n\n\tprivate _chunks: Buffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: Buffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic readUInt32BE(): number {\n\t\tlet tmp = this.read(4);\n\t\treturn tmp.readUInt32BE(0);\n\t}\n\n\tpublic read(byteCount: number): Buffer {\n\t\tif (byteCount === 0) {\n\t\t\treturn Buffer.allocUnsafe(0);\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks.shift()!;\n\t\t\tthis._totalLength -= byteCount;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\tthis._totalLength -= byteCount;\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = Buffer.allocUnsafe(byteCount);\n\t\tlet resultOffset = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[0];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tthis._chunks[0] = chunk.slice(byteCount);\n\n\t\t\t\tchunk.copy(result, resultOffset, 0, byteCount);\n\t\t\t\tresultOffset += byteCount;\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tthis._chunks.shift();\n\n\t\t\t\tchunk.copy(result, resultOffset, 0, chunk.byteLength);\n\t\t\t\tresultOffset += chunk.byteLength;\n\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/**\n * A message has the following format:\n *\n * \t\t[bodyLen|message]\n * \t\t[header^|data^^^]\n * \t\t[u32be^^|buffer^]\n */\n\nexport class Protocol implements IDisposable, IMessagePassingProtocol {\n\n\tprivate static readonly _headerLen = 4;\n\n\tprivate _isDisposed: boolean;\n\tprivate _incomingData: ChunkStream;\n\n\tprivate _socketDataListener: (data: Buffer) => void;\n\tprivate _socketEndListener: () => void;\n\tprivate _socketCloseListener: () => void;\n\n\tprivate _onMessage = new Emitter<Buffer>();\n\treadonly onMessage: Event<Buffer> = this._onMessage.event;\n\n\tprivate _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(private _socket: Socket) {\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\n\t\tconst state = {\n\t\t\treadHead: true,\n\t\t\tbodyLen: -1,\n\t\t};\n\n\t\tconst acceptChunk = (data: Buffer) => {\n\n\t\t\tthis._incomingData.acceptChunk(data);\n\n\t\t\twhile (this._incomingData.byteLength > 0) {\n\n\t\t\t\tif (state.readHead) {\n\t\t\t\t\t// expecting header -> read header\n\t\t\t\t\tif (this._incomingData.byteLength >= Protocol._headerLen) {\n\t\t\t\t\t\tstate.bodyLen = this._incomingData.readUInt32BE();\n\t\t\t\t\t\tstate.readHead = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!state.readHead) {\n\t\t\t\t\t// expecting body -> read bodyLen-bytes for\n\t\t\t\t\t// the actual message or wait for more data\n\t\t\t\t\tif (this._incomingData.byteLength >= state.bodyLen) {\n\t\t\t\t\t\tconst buffer = this._incomingData.read(state.bodyLen);\n\n\t\t\t\t\t\tstate.bodyLen = -1;\n\t\t\t\t\t\tstate.readHead = true;\n\n\t\t\t\t\t\tthis._onMessage.fire(buffer);\n\n\t\t\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._socketDataListener = (data: Buffer) => {\n\t\t\tacceptChunk(data);\n\t\t};\n\t\t_socket.on('data', this._socketDataListener);\n\n\t\tthis._socketEndListener = () => {\n\t\t};\n\t\t_socket.on('end', this._socketEndListener);\n\n\t\tthis._socketCloseListener = () => {\n\t\t\tthis._onClose.fire();\n\t\t};\n\t\t_socket.once('close', this._socketCloseListener);\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tthis._socket.removeListener('data', this._socketDataListener);\n\t\tthis._socket.removeListener('end', this._socketEndListener);\n\t\tthis._socket.removeListener('close', this._socketCloseListener);\n\t}\n\n\tend(): void {\n\t\tthis._socket.end();\n\t}\n\n\treadEntireBuffer(): Buffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tsend(buffer: Buffer): void {\n\t\tconst header = Buffer.allocUnsafe(Protocol._headerLen);\n\t\theader.writeUInt32BE(buffer.length, 0, true);\n\t\tthis._writeSoon(header, buffer);\n\t}\n\n\tprivate _writeBuffer = new class {\n\n\t\tprivate _data: Buffer[] = [];\n\t\tprivate _totalLength = 0;\n\n\t\tadd(head: Buffer, body: Buffer): boolean {\n\t\t\tconst wasEmpty = this._totalLength === 0;\n\t\t\tthis._data.push(head, body);\n\t\t\tthis._totalLength += head.length + body.length;\n\t\t\treturn wasEmpty;\n\t\t}\n\n\t\ttake(): Buffer {\n\t\t\tconst ret = Buffer.concat(this._data, this._totalLength);\n\t\t\tthis._data.length = 0;\n\t\t\tthis._totalLength = 0;\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\tprivate _writeSoon(header: Buffer, data: Buffer): void {\n\t\tif (this._writeBuffer.add(header, data)) {\n\t\t\tsetImmediate(() => {\n\t\t\t\t// return early if socket has been destroyed in the meantime\n\t\t\t\tif (this._socket.destroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t\t\t// anyways and nodejs is already doing that for us:\n\t\t\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t\t\t// > accept and buffer chunk even if it has not not been allowed to drain.\n\t\t\t\tthis._socket.write(this._writeBuffer.take());\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(socket),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: Socket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | BufferedProtocol, id: TContext) {\n\t\tsuper(protocol, id);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.protocol.end();\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(socket, clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nfunction createBufferedEvent<T>(source: Event<T>): Event<T> {\n\tlet emitter: Emitter<T>;\n\tlet hasListeners = false;\n\tlet isDeliveringMessages = false;\n\tlet bufferedMessages: T[] = [];\n\n\tconst deliverMessages = () => {\n\t\tif (isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tisDeliveringMessages = true;\n\t\twhile (hasListeners && bufferedMessages.length > 0) {\n\t\t\temitter.fire(bufferedMessages.shift()!);\n\t\t}\n\t\tisDeliveringMessages = false;\n\t};\n\n\tsource((e: T) => {\n\t\tbufferedMessages.push(e);\n\t\tdeliverMessages();\n\t});\n\n\temitter = new Emitter<T>({\n\t\tonFirstListenerAdd: () => {\n\t\t\thasListeners = true;\n\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\tprocess.nextTick(deliverMessages);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\thasListeners = false;\n\t\t}\n\t});\n\n\treturn emitter.event;\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedProtocol implements IMessagePassingProtocol {\n\n\tprivate readonly _actual: Protocol;\n\tpublic readonly onMessage: Event<Buffer>;\n\tpublic readonly onClose: Event<void>;\n\n\tconstructor(actual: Protocol) {\n\t\tthis._actual = actual;\n\t\tthis.onMessage = createBufferedEvent(this._actual.onMessage);\n\t\tthis.onClose = createBufferedEvent(this._actual.onClose);\n\t}\n\n\tpublic send(buffer: Buffer): void {\n\t\tthis._actual.send(buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis._actual.end();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nativeKeymap from 'native-keymap';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Emitter } from 'vs/base/common/event';\n\nexport class KeyboardLayoutMonitor {\n\n\tpublic static readonly INSTANCE = new KeyboardLayoutMonitor();\n\n\tprivate readonly _emitter: Emitter<void>;\n\tprivate _registered: boolean;\n\n\tprivate constructor() {\n\t\tthis._emitter = new Emitter<void>();\n\t\tthis._registered = false;\n\t}\n\n\tpublic onDidChangeKeyboardLayout(callback: () => void): IDisposable {\n\t\tif (!this._registered) {\n\t\t\tthis._registered = true;\n\n\t\t\tnativeKeymap.onDidChangeKeyboardLayout(() => {\n\t\t\t\tthis._emitter.fire();\n\t\t\t});\n\t\t}\n\t\treturn this._emitter.event(callback);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { systemPreferences } from 'electron';\nimport { IStateService } from 'vs/platform/state/common/state';\n\nconst DEFAULT_BG_LIGHT = '#FFFFFF';\nconst DEFAULT_BG_DARK = '#1E1E1E';\nconst DEFAULT_BG_HC_BLACK = '#000000';\n\nconst THEME_STORAGE_KEY = 'theme';\nconst THEME_BG_STORAGE_KEY = 'themeBackground';\n\nexport function storeBackgroundColor(stateService: IStateService, data: { baseTheme: string, background: string }): void {\n\tstateService.setItem(THEME_STORAGE_KEY, data.baseTheme);\n\tstateService.setItem(THEME_BG_STORAGE_KEY, data.background);\n}\n\nexport function getBackgroundColor(stateService: IStateService): string {\n\tif (isWindows && systemPreferences.isInvertedColorScheme()) {\n\t\treturn DEFAULT_BG_HC_BLACK;\n\t}\n\n\tlet background = stateService.getItem<string | null>(THEME_BG_STORAGE_KEY, null);\n\tif (!background) {\n\t\tlet baseTheme: string;\n\t\tif (isWindows && systemPreferences.isInvertedColorScheme()) {\n\t\t\tbaseTheme = 'hc-black';\n\t\t} else {\n\t\t\tbaseTheme = stateService.getItem<string>(THEME_STORAGE_KEY, 'vs-dark').split(' ')[0];\n\t\t}\n\n\t\tbackground = (baseTheme === 'hc-black') ? DEFAULT_BG_HC_BLACK : (baseTheme === 'vs' ? DEFAULT_BG_LIGHT : DEFAULT_BG_DARK);\n\t}\n\n\tif (isMacintosh && background.toUpperCase() === DEFAULT_BG_DARK) {\n\t\tbackground = '#171717'; // https://github.com/electron/electron/issues/5150\n\t}\n\n\treturn background;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IWindowState as IWindowUIState } from 'vs/platform/windows/electron-main/windows';\nimport { IWindowState, IWindowsState } from 'vs/code/electron-main/windows';\n\nexport type WindowsStateStorageData = object;\n\ninterface ISerializedWindowsState {\n\tlastActiveWindow?: ISerializedWindowState;\n\tlastPluginDevelopmentHostWindow?: ISerializedWindowState;\n\topenedWindows: ISerializedWindowState[];\n}\n\ninterface ISerializedWindowState {\n\tworkspaceIdentifier?: { id: string; configURIPath: string };\n\tfolder?: string;\n\tbackupPath?: string;\n\tremoteAuthority?: string;\n\tuiState: IWindowUIState;\n\n\t// deprecated\n\tfolderUri?: UriComponents;\n\tfolderPath?: string;\n\tworkspace?: { id: string; configPath: string };\n}\n\nexport function restoreWindowsState(data: WindowsStateStorageData | undefined): IWindowsState {\n\tconst result: IWindowsState = { openedWindows: [] };\n\tconst windowsState = data as ISerializedWindowsState || { openedWindows: [] };\n\n\tif (windowsState.lastActiveWindow) {\n\t\tresult.lastActiveWindow = restoreWindowState(windowsState.lastActiveWindow);\n\t}\n\tif (windowsState.lastPluginDevelopmentHostWindow) {\n\t\tresult.lastPluginDevelopmentHostWindow = restoreWindowState(windowsState.lastPluginDevelopmentHostWindow);\n\t}\n\tif (Array.isArray(windowsState.openedWindows)) {\n\t\tresult.openedWindows = windowsState.openedWindows.map(windowState => restoreWindowState(windowState));\n\t}\n\treturn result;\n}\n\nfunction restoreWindowState(windowState: ISerializedWindowState): IWindowState {\n\tconst result: IWindowState = { uiState: windowState.uiState };\n\tif (windowState.backupPath) {\n\t\tresult.backupPath = windowState.backupPath;\n\t}\n\tif (windowState.remoteAuthority) {\n\t\tresult.remoteAuthority = windowState.remoteAuthority;\n\t}\n\tif (windowState.folder) {\n\t\tresult.folderUri = URI.parse(windowState.folder);\n\t} else if (windowState.folderUri) {\n\t\tresult.folderUri = URI.revive(windowState.folderUri);\n\t} else if (windowState.folderPath) {\n\t\tresult.folderUri = URI.file(windowState.folderPath);\n\t}\n\tif (windowState.workspaceIdentifier) {\n\t\tresult.workspace = { id: windowState.workspaceIdentifier.id, configPath: URI.parse(windowState.workspaceIdentifier.configURIPath) };\n\t} else if (windowState.workspace) {\n\t\tresult.workspace = { id: windowState.workspace.id, configPath: URI.file(windowState.workspace.configPath) };\n\t}\n\treturn result;\n}\n\nexport function getWindowsStateStoreData(windowsState: IWindowsState): WindowsStateStorageData {\n\treturn {\n\t\tlastActiveWindow: windowsState.lastActiveWindow && serializeWindowState(windowsState.lastActiveWindow),\n\t\tlastPluginDevelopmentHostWindow: windowsState.lastPluginDevelopmentHostWindow && serializeWindowState(windowsState.lastPluginDevelopmentHostWindow),\n\t\topenedWindows: windowsState.openedWindows.map(ws => serializeWindowState(ws))\n\t};\n}\n\nfunction serializeWindowState(windowState: IWindowState): ISerializedWindowState {\n\treturn {\n\t\tworkspaceIdentifier: windowState.workspace && { id: windowState.workspace.id, configURIPath: windowState.workspace.configPath.toString() },\n\t\tfolder: windowState.folderUri && windowState.folderUri.toString(),\n\t\tbackupPath: windowState.backupPath,\n\t\tremoteAuthority: windowState.remoteAuthority,\n\t\tuiState: windowState.uiState\n\t};\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as platform from 'vs/base/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { sanitizeFilePath } from 'vs/base/node/extfs';\n\nexport function validatePaths(args: ParsedArgs): ParsedArgs {\n\n\t// Track URLs if they're going to be used\n\tif (args['open-url']) {\n\t\targs._urls = args._;\n\t\targs._ = [];\n\t}\n\n\t// Normalize paths and watch out for goto line mode\n\tconst paths = doValidatePaths(args._, args.goto);\n\n\t// Update environment\n\targs._ = paths;\n\targs.diff = args.diff && paths.length === 2;\n\n\treturn args;\n}\n\nfunction doValidatePaths(args: string[], gotoLineMode?: boolean): string[] {\n\tconst cwd = process.env['VSCODE_CWD'] || process.cwd();\n\tconst result = args.map(arg => {\n\t\tlet pathCandidate = String(arg);\n\n\t\tlet parsedPath: IPathWithLineAndColumn | undefined = undefined;\n\t\tif (gotoLineMode) {\n\t\t\tparsedPath = parseLineAndColumnAware(pathCandidate);\n\t\t\tpathCandidate = parsedPath.path;\n\t\t}\n\n\t\tif (pathCandidate) {\n\t\t\tpathCandidate = preparePath(cwd, pathCandidate);\n\t\t}\n\n\t\tconst sanitizedFilePath = sanitizeFilePath(pathCandidate, cwd);\n\n\t\tconst basename = path.basename(sanitizedFilePath);\n\t\tif (basename /* can be empty if code is opened on root */ && !extpath.isValidBasename(basename)) {\n\t\t\treturn null; // do not allow invalid file names\n\t\t}\n\n\t\tif (gotoLineMode && parsedPath) {\n\t\t\tparsedPath.path = sanitizedFilePath;\n\n\t\t\treturn toPath(parsedPath);\n\t\t}\n\n\t\treturn sanitizedFilePath;\n\t});\n\n\tconst caseInsensitive = platform.isWindows || platform.isMacintosh;\n\tconst distinct = arrays.distinct(result, e => e && caseInsensitive ? e.toLowerCase() : (e || ''));\n\n\treturn arrays.coalesce(distinct);\n}\n\nfunction preparePath(cwd: string, p: string): string {\n\n\t// Trim trailing quotes\n\tif (platform.isWindows) {\n\t\tp = strings.rtrim(p, '\"'); // https://github.com/Microsoft/vscode/issues/1498\n\t}\n\n\t// Trim whitespaces\n\tp = strings.trim(strings.trim(p, ' '), '\\t');\n\n\tif (platform.isWindows) {\n\n\t\t// Resolve the path against cwd if it is relative\n\t\tp = path.resolve(cwd, p);\n\n\t\t// Trim trailing '.' chars on Windows to prevent invalid file names\n\t\tp = strings.rtrim(p, '.');\n\t}\n\n\treturn p;\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | null = null;\n\tlet line: number | null = null;\n\tlet column: number | null = null;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!types.isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === null) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === null) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath: path,\n\t\tline: line !== null ? line : undefined,\n\t\tcolumn: column !== null ? column : line !== null ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nfunction toPath(p: IPathWithLineAndColumn): string {\n\tconst segments = [p.path];\n\n\tif (types.isNumber(p.line)) {\n\t\tsegments.push(String(p.line));\n\t}\n\n\tif (types.isNumber(p.column)) {\n\t\tsegments.push(String(p.column));\n\t}\n\n\treturn segments.join(':');\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { assign } from 'vs/base/common/objects';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { isWindows } from 'vs/base/common/platform';\n\nfunction getUnixShellEnvironment(): Promise<typeof process.env> {\n\tconst promise = new Promise<typeof process.env>((resolve, reject) => {\n\t\tconst runAsNode = process.env['ELECTRON_RUN_AS_NODE'];\n\t\tconst noAttach = process.env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\tconst mark = generateUuid().replace(/-/g, '').substr(0, 12);\n\t\tconst regex = new RegExp(mark + '(.*)' + mark);\n\n\t\tconst env = assign({}, process.env, {\n\t\t\tELECTRON_RUN_AS_NODE: '1',\n\t\t\tELECTRON_NO_ATTACH_CONSOLE: '1'\n\t\t});\n\n\t\tconst command = `'${process.execPath}' -p '\"${mark}\" + JSON.stringify(process.env) + \"${mark}\"'`;\n\t\tconst child = cp.spawn(process.env.SHELL!, ['-ilc', command], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'pipe', process.stderr],\n\t\t\tenv\n\t\t});\n\n\t\tconst buffers: Buffer[] = [];\n\t\tchild.on('error', () => resolve({}));\n\t\tchild.stdout.on('data', b => buffers.push(b as Buffer));\n\n\t\tchild.on('close', (code: number, signal: any) => {\n\t\t\tif (code !== 0) {\n\t\t\t\treturn reject(new Error('Failed to get environment'));\n\t\t\t}\n\n\t\t\tconst raw = Buffer.concat(buffers).toString('utf8');\n\t\t\tconst match = regex.exec(raw);\n\t\t\tconst rawStripped = match ? match[1] : '{}';\n\n\t\t\ttry {\n\t\t\t\tconst env = JSON.parse(rawStripped);\n\n\t\t\t\tif (runAsNode) {\n\t\t\t\t\tenv['ELECTRON_RUN_AS_NODE'] = runAsNode;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_RUN_AS_NODE'];\n\t\t\t\t}\n\n\t\t\t\tif (noAttach) {\n\t\t\t\t\tenv['ELECTRON_NO_ATTACH_CONSOLE'] = noAttach;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/Microsoft/vscode/issues/22593#issuecomment-336050758\n\t\t\t\tdelete env['XDG_RUNTIME_DIR'];\n\n\t\t\t\tresolve(env);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n\n\t// swallow errors\n\treturn promise.catch(() => ({}));\n}\n\n\nlet _shellEnv: Promise<typeof process.env>;\n\n/**\n * We need to get the environment from a user's shell.\n * This should only be done when Code itself is not launched\n * from within a shell.\n */\nexport function getShellEnvironment(): Promise<typeof process.env> {\n\tif (_shellEnv === undefined) {\n\t\tif (isWindows) {\n\t\t\t_shellEnv = Promise.resolve({});\n\t\t} else if (process.env['VSCODE_CLI'] === '1') {\n\t\t\t_shellEnv = Promise.resolve({});\n\t\t} else {\n\t\t\t_shellEnv = getUnixShellEnvironment();\n\t\t}\n\t}\n\n\treturn _shellEnv;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { OperatingSystem } from 'vs/base/common/platform';\n\nexport interface ModifierLabels {\n\treadonly ctrlKey: string;\n\treadonly shiftKey: string;\n\treadonly altKey: string;\n\treadonly metaKey: string;\n\treadonly separator: string;\n}\n\nexport interface Modifiers {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n}\n\nexport interface KeyLabelProvider<T extends Modifiers> {\n\t(keybinding: T): string | null;\n}\n\nexport class ModifierLabelProvider {\n\n\tpublic readonly modifierLabels: ModifierLabels[];\n\n\tconstructor(mac: ModifierLabels, windows: ModifierLabels, linux: ModifierLabels = windows) {\n\t\tthis.modifierLabels = [null!]; // index 0 will never me accessed.\n\t\tthis.modifierLabels[OperatingSystem.Macintosh] = mac;\n\t\tthis.modifierLabels[OperatingSystem.Windows] = windows;\n\t\tthis.modifierLabels[OperatingSystem.Linux] = linux;\n\t}\n\n\tpublic toLabel<T extends Modifiers>(OS: OperatingSystem, parts: T[], keyLabelProvider: KeyLabelProvider<T>): string | null {\n\t\tif (parts.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result: string[] = [];\n\t\tfor (let i = 0, len = parts.length; i < len; i++) {\n\t\t\tconst part = parts[i];\n\t\t\tconst keyLabel = keyLabelProvider(part);\n\t\t\tif (keyLabel === null) {\n\t\t\t\t// this keybinding cannot be expressed...\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresult[i] = _simpleAsString(part, keyLabel, this.modifierLabels[OS]);\n\t\t}\n\t\treturn result.join(' ');\n\t}\n}\n\n/**\n * A label provider that prints modifiers in a suitable format for displaying in the UI.\n */\nexport const UILabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: '⌃',\n\t\tshiftKey: '⇧',\n\t\taltKey: '⌥',\n\t\tmetaKey: '⌘',\n\t\tseparator: '',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'windowsKey', comment: ['This is the short form for the Windows key on the keyboard'] }, \"Windows\"),\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'superKey', comment: ['This is the short form for the Super key on the keyboard'] }, \"Super\"),\n\t\tseparator: '+',\n\t}\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for ARIA.\n */\nexport const AriaLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'cmdKey.long', comment: ['This is the long form for the Command key on the keyboard'] }, \"Command\"),\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'windowsKey.long', comment: ['This is the long form for the Windows key on the keyboard'] }, \"Windows\"),\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'superKey.long', comment: ['This is the long form for the Super key on the keyboard'] }, \"Super\"),\n\t\tseparator: '+',\n\t}\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for Electron Accelerators.\n * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n */\nexport const ElectronAcceleratorLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: 'Ctrl',\n\t\tshiftKey: 'Shift',\n\t\taltKey: 'Alt',\n\t\tmetaKey: 'Cmd',\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: 'Ctrl',\n\t\tshiftKey: 'Shift',\n\t\taltKey: 'Alt',\n\t\tmetaKey: 'Super',\n\t\tseparator: '+',\n\t}\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for user settings.\n */\nexport const UserSettingsLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: 'ctrl',\n\t\tshiftKey: 'shift',\n\t\taltKey: 'alt',\n\t\tmetaKey: 'cmd',\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: 'ctrl',\n\t\tshiftKey: 'shift',\n\t\taltKey: 'alt',\n\t\tmetaKey: 'win',\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: 'ctrl',\n\t\tshiftKey: 'shift',\n\t\taltKey: 'alt',\n\t\tmetaKey: 'meta',\n\t\tseparator: '+',\n\t}\n);\n\nfunction _simpleAsString(modifiers: Modifiers, key: string, labels: ModifierLabels): string {\n\tif (key === null) {\n\t\treturn '';\n\t}\n\n\tconst result: string[] = [];\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif (modifiers.ctrlKey) {\n\t\tresult.push(labels.ctrlKey);\n\t}\n\n\tif (modifiers.shiftKey) {\n\t\tresult.push(labels.shiftKey);\n\t}\n\n\tif (modifiers.altKey) {\n\t\tresult.push(labels.altKey);\n\t}\n\n\tif (modifiers.metaKey) {\n\t\tresult.push(labels.metaKey);\n\t}\n\n\t// the actual key\n\tresult.push(key);\n\n\treturn result.join(labels.separator);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport * as os from 'os';\nimport { localize } from 'vs/nls';\nimport { ParsedArgs } from 'vs/platform/environment/common/environment';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\n\nclass HelpCategories {\n\to = localize('optionsUpperCase', \"Options\");\n\te = localize('extensionsManagement', \"Extensions Management\");\n\tt = localize('troubleshooting', \"Troubleshooting\");\n}\n\nexport interface Option {\n\tid: string;\n\ttype: 'boolean' | 'string';\n\talias?: string;\n\tdeprecates?: string; // old deprecated id\n\targs?: string | string[];\n\tdescription?: string;\n\tcat?: keyof HelpCategories;\n}\n\nexport const options: Option[] = [\n\t{ id: 'diff', type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t{ id: 'add', type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t{ id: 'goto', type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t{ id: 'new-window', type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t{ id: 'reuse-window', type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t{ id: 'wait', type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t{ id: 'locale', type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t{ id: 'user-data-dir', type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t{ id: 'version', type: 'boolean', cat: 'o', alias: 'v', description: localize('version', \"Print version.\") },\n\t{ id: 'help', type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\t{ id: 'folder-uri', type: 'string', cat: 'o', args: 'uri', description: localize('folderUri', \"Opens a window with given folder uri(s)\") },\n\t{ id: 'file-uri', type: 'string', cat: 'o', args: 'uri', description: localize('fileUri', \"Opens a window with given file uri(s)\") },\n\n\t{ id: 'extensions-dir', type: 'string', deprecates: 'extensionHomePath', cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t{ id: 'list-extensions', type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t{ id: 'show-versions', type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extension.\") },\n\t{ id: 'install-extension', type: 'string', cat: 'e', args: 'extension-id', description: localize('installExtension', \"Installs or updates the extension. Use `--force` argument to avoid prompts.\") },\n\t{ id: 'uninstall-extension', type: 'string', cat: 'e', args: 'extension-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t{ id: 'enable-proposed-api', type: 'string', cat: 'e', args: 'extension-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t{ id: 'verbose', type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t{ id: 'log', type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t{ id: 'status', type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t{ id: 'prof-modules', type: 'boolean', alias: 'p', cat: 't', description: localize('prof-modules', \"Capture performance markers while loading JS modules and print them with 'F1 > Developer: Startup Performance\") },\n\t{ id: 'prof-startup', type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup\") },\n\t{ id: 'disable-extensions', type: 'boolean', deprecates: 'disableExtensions', cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t{ id: 'disable-extension', type: 'string', cat: 't', args: 'extension-id', description: localize('disableExtension', \"Disable an extension.\") },\n\n\t{ id: 'inspect-extensions', type: 'string', deprecates: 'debugPluginHost', args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t{ id: 'inspect-brk-extensions', type: 'string', deprecates: 'debugBrkPluginHost', args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t{ id: 'disable-gpu', type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t{ id: 'upload-logs', type: 'string', cat: 't', description: localize('uploadLogs', \"Uploads logs from current session to a secure endpoint.\") },\n\t{ id: 'max-memory', type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\") },\n\n\t{ id: 'remote', type: 'string' },\n\t{ id: 'extensionDevelopmentPath', type: 'string' },\n\t{ id: 'extensionTestsPath', type: 'string' },\n\t{ id: 'debugId', type: 'string' },\n\t{ id: 'inspect-search', type: 'string', deprecates: 'debugSearch' },\n\t{ id: 'inspect-brk-search', type: 'string', deprecates: 'debugBrkSearch' },\n\t{ id: 'export-default-configuration', type: 'string' },\n\t{ id: 'install-source', type: 'string' },\n\t{ id: 'driver', type: 'string' },\n\t{ id: 'logExtensionHostCommunication', type: 'boolean' },\n\t{ id: 'skip-getting-started', type: 'boolean' },\n\t{ id: 'skip-release-notes', type: 'boolean' },\n\t{ id: 'sticky-quickopen', type: 'boolean' },\n\t{ id: 'disable-restore-windows', type: 'boolean' },\n\t{ id: 'disable-telemetry', type: 'boolean' },\n\t{ id: 'disable-updates', type: 'boolean' },\n\t{ id: 'disable-crash-reporter', type: 'boolean' },\n\t{ id: 'skip-add-to-recently-opened', type: 'boolean' },\n\t{ id: 'unity-launch', type: 'boolean' },\n\t{ id: 'open-url', type: 'boolean' },\n\t{ id: 'nolazy', type: 'boolean' },\n\t{ id: 'issue', type: 'boolean' },\n\t{ id: 'file-write', type: 'boolean' },\n\t{ id: 'file-chmod', type: 'boolean' },\n\t{ id: 'driver-verbose', type: 'boolean' },\n\t{ id: 'force', type: 'boolean' },\n\t{ id: 'trace-category-filter', type: 'string' },\n\t{ id: 'trace-options', type: 'string' },\n\t{ id: 'prof-code-loading', type: 'boolean' },\n\t{ id: 'nodeless', type: 'boolean' } // TODO@ben revisit electron5 nodeless support\n];\n\nexport function parseArgs(args: string[], isOptionSupported = (_: Option) => true): ParsedArgs {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = [];\n\tconst boolean: string[] = [];\n\tfor (let o of options) {\n\t\tif (isOptionSupported(o)) {\n\t\t\tif (o.alias) {\n\t\t\t\talias[o.id] = o.alias;\n\t\t\t}\n\t\t}\n\n\t\tif (o.type === 'string') {\n\t\t\tstring.push(o.id);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(o.id);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remote aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias }) as ParsedArgs;\n\tfor (let o of options) {\n\t\tif (o.alias) {\n\t\t\tdelete parsedArgs[o.alias];\n\t\t}\n\t\tif (o.deprecates && parsedArgs.hasOwnProperty(o.deprecates) && !parsedArgs[o.id]) {\n\t\t\tparsedArgs[o.id] = parsedArgs[o.deprecates];\n\t\t\tdelete parsedArgs[o.deprecates];\n\t\t}\n\t}\n\treturn parsedArgs;\n}\n\nfunction formatUsage(option: Option) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${option.id}${args}`;\n\t}\n\treturn `--${option.id}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(docOptions: Option[], columns: number): string[] {\n\tlet usageTexts = docOptions.map(formatUsage);\n\tlet argLength = Math.max.apply(null, usageTexts.map(k => k.length)) + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn docOptions.reduce<string[]>((r, o, i) => r.concat([`  ${usageTexts[i]}`, `      ${o.description}`]), []);\n\t}\n\tlet descriptionColumns = columns - argLength - 1;\n\tlet result: string[] = [];\n\tdocOptions.forEach((o, i) => {\n\t\tlet usage = usageTexts[i];\n\t\tlet wrappedDescription = wrapText(o.description!, descriptionColumns);\n\t\tlet keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t});\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn (<any>' ').repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tlet lines: string[] = [];\n\twhile (text.length) {\n\t\tlet index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tlet line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, isOptionSupported = (_: Option) => true): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\n\tlet categories = new HelpCategories();\n\n\tlet help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}][${localize('paths', 'paths')}...]`);\n\thelp.push('');\n\tif (os.platform() === 'win32') {\n\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t} else {\n\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t}\n\thelp.push('');\n\tfor (let key in categories) {\n\t\tlet categoryOptions = options.filter(o => !!o.description && o.cat === key && isOptionSupported(o));\n\t\tif (categoryOptions.length) {\n\t\t\thelp.push(categories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n\n/**\n * Converts an argument into an array\n * @param arg a argument value. Can be undefined, an entry or an array\n */\nexport function asArray(arg: string | string[] | undefined): string[] {\n\tif (arg) {\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn arg;\n\t\t}\n\t\treturn [arg];\n\t}\n\treturn [];\n}\n\n/**\n * Returns whether an argument is present.\n */\nexport function hasArgs(arg: string | string[] | undefined): boolean {\n\tif (arg) {\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn !!arg.length;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function addArg(argv: string[], ...args: string[]): string[] {\n\tconst endOfArgsMarkerIndex = argv.indexOf('--');\n\tif (endOfArgsMarkerIndex === -1) {\n\t\targv.push(...args);\n\t} else {\n\t\t// if the we have an argument \"--\" (end of argument marker)\n\t\t// we cannot add arguments at the end. rather, we add\n\t\t// arguments before the \"--\" marker.\n\t\targv.splice(endOfArgsMarkerIndex, 0, ...args);\n\t}\n\n\treturn argv;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { forEach } from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes[key];\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn this._nodes[this._hashFn(data)];\n\t}\n\n\tisEmpty(): boolean {\n\t\tfor (const _key in this._nodes) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew(first: A1, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>, isOptional?: typeof optional): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<T>(ctor: IConstructorSignature0<T>): T;\n\tcreateInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n\tcreateInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n\tcreateInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[]=[]>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif (target[_util.DI_TARGET] === target) {\n\t\ttarget[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\ttarget[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\ttarget[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): { (...args: any[]): void; type: T; } {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface ISerializedWorkspace { id: string; configURIPath: string; remoteAuthority?: string; }\n\nexport interface IBackupWorkspacesFormat {\n\trootURIWorkspaces: ISerializedWorkspace[];\n\tfolderURIWorkspaces: string[];\n\temptyWorkspaceInfos: IEmptyWindowBackupInfo[];\n\n\t// deprecated\n\tfolderWorkspaces?: string[]; // use folderURIWorkspaces instead\n\temptyWorkspaces?: string[];\n\trootWorkspaces?: { id: string, configPath: string }[]; // use rootURIWorkspaces instead\n}\n\nexport const IBackupMainService = createDecorator<IBackupMainService>('backupMainService');\n\nexport interface IEmptyWindowBackupInfo {\n\tbackupFolder?: string;\n\tremoteAuthority?: string;\n}\n\nexport interface IWorkspaceBackupInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IBackupMainService {\n\t_serviceBrand: any;\n\n\tisHotExitEnabled(): boolean;\n\n\tgetWorkspaceBackups(): IWorkspaceBackupInfo[];\n\tgetFolderBackupPaths(): URI[];\n\tgetEmptyWindowBackupPaths(): IEmptyWindowBackupInfo[];\n\n\tregisterWorkspaceBackupSync(workspace: IWorkspaceBackupInfo, migrateFrom?: string): string;\n\tregisterFolderBackupSync(folderUri: URI): string;\n\tregisterEmptyWindowBackupSync(backupInfo: IEmptyWindowBackupInfo): string;\n\n\tunregisterWorkspaceBackupSync(workspace: IWorkspaceIdentifier): void;\n\tunregisterFolderBackupSync(folderUri: URI): void;\n\tunregisterEmptyWindowBackupSync(backupFolder: string): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { connect as connectNet, Client } from 'vs/base/parts/ipc/node/ipc.net';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { Event } from 'vs/base/common/event';\n\nexport const ID = 'driverService';\nexport const IDriver = createDecorator<IDriver>(ID);\n\n// !! Do not remove the following START and END markers, they are parsed by the smoketest build\n\n//*START\nexport interface IElement {\n\ttagName: string;\n\tclassName: string;\n\ttextContent: string;\n\tattributes: { [name: string]: string; };\n\tchildren: IElement[];\n\ttop: number;\n\tleft: number;\n}\n\nexport interface IDriver {\n\t_serviceBrand: any;\n\n\tgetWindowIds(): Promise<number[]>;\n\tcapturePage(windowId: number): Promise<string>;\n\treloadWindow(windowId: number): Promise<void>;\n\texitApplication(): Promise<void>;\n\tdispatchKeybinding(windowId: number, keybinding: string): Promise<void>;\n\tclick(windowId: number, selector: string, xoffset?: number | undefined, yoffset?: number | undefined): Promise<void>;\n\tdoubleClick(windowId: number, selector: string): Promise<void>;\n\tsetValue(windowId: number, selector: string, text: string): Promise<void>;\n\tgetTitle(windowId: number): Promise<string>;\n\tisActiveElement(windowId: number, selector: string): Promise<boolean>;\n\tgetElements(windowId: number, selector: string, recursive?: boolean): Promise<IElement[]>;\n\ttypeInEditor(windowId: number, selector: string, text: string): Promise<void>;\n\tgetTerminalBuffer(windowId: number, selector: string): Promise<string[]>;\n\twriteInTerminal(windowId: number, selector: string, text: string): Promise<void>;\n}\n//*END\n\nexport class DriverChannel implements IServerChannel {\n\n\tconstructor(private driver: IDriver) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error('No event found');\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getWindowIds': return this.driver.getWindowIds();\n\t\t\tcase 'capturePage': return this.driver.capturePage(arg);\n\t\t\tcase 'reloadWindow': return this.driver.reloadWindow(arg);\n\t\t\tcase 'exitApplication': return this.driver.exitApplication();\n\t\t\tcase 'dispatchKeybinding': return this.driver.dispatchKeybinding(arg[0], arg[1]);\n\t\t\tcase 'click': return this.driver.click(arg[0], arg[1], arg[2], arg[3]);\n\t\t\tcase 'doubleClick': return this.driver.doubleClick(arg[0], arg[1]);\n\t\t\tcase 'setValue': return this.driver.setValue(arg[0], arg[1], arg[2]);\n\t\t\tcase 'getTitle': return this.driver.getTitle(arg[0]);\n\t\t\tcase 'isActiveElement': return this.driver.isActiveElement(arg[0], arg[1]);\n\t\t\tcase 'getElements': return this.driver.getElements(arg[0], arg[1], arg[2]);\n\t\t\tcase 'typeInEditor': return this.driver.typeInEditor(arg[0], arg[1], arg[2]);\n\t\t\tcase 'getTerminalBuffer': return this.driver.getTerminalBuffer(arg[0], arg[1]);\n\t\t\tcase 'writeInTerminal': return this.driver.writeInTerminal(arg[0], arg[1], arg[2]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class DriverChannelClient implements IDriver {\n\n\t_serviceBrand: any;\n\n\tconstructor(private channel: IChannel) { }\n\n\tgetWindowIds(): Promise<number[]> {\n\t\treturn this.channel.call('getWindowIds');\n\t}\n\n\tcapturePage(windowId: number): Promise<string> {\n\t\treturn this.channel.call('capturePage', windowId);\n\t}\n\n\treloadWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('reloadWindow', windowId);\n\t}\n\n\texitApplication(): Promise<void> {\n\t\treturn this.channel.call('exitApplication');\n\t}\n\n\tdispatchKeybinding(windowId: number, keybinding: string): Promise<void> {\n\t\treturn this.channel.call('dispatchKeybinding', [windowId, keybinding]);\n\t}\n\n\tclick(windowId: number, selector: string, xoffset: number | undefined, yoffset: number | undefined): Promise<void> {\n\t\treturn this.channel.call('click', [windowId, selector, xoffset, yoffset]);\n\t}\n\n\tdoubleClick(windowId: number, selector: string): Promise<void> {\n\t\treturn this.channel.call('doubleClick', [windowId, selector]);\n\t}\n\n\tsetValue(windowId: number, selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('setValue', [windowId, selector, text]);\n\t}\n\n\tgetTitle(windowId: number): Promise<string> {\n\t\treturn this.channel.call('getTitle', [windowId]);\n\t}\n\n\tisActiveElement(windowId: number, selector: string): Promise<boolean> {\n\t\treturn this.channel.call('isActiveElement', [windowId, selector]);\n\t}\n\n\tgetElements(windowId: number, selector: string, recursive: boolean): Promise<IElement[]> {\n\t\treturn this.channel.call('getElements', [windowId, selector, recursive]);\n\t}\n\n\ttypeInEditor(windowId: number, selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('typeInEditor', [windowId, selector, text]);\n\t}\n\n\tgetTerminalBuffer(windowId: number, selector: string): Promise<string[]> {\n\t\treturn this.channel.call('getTerminalBuffer', [windowId, selector]);\n\t}\n\n\twriteInTerminal(windowId: number, selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('writeInTerminal', [windowId, selector, text]);\n\t}\n}\n\nexport interface IDriverOptions {\n\tverbose: boolean;\n}\n\nexport interface IWindowDriverRegistry {\n\tregisterWindowDriver(windowId: number): Promise<IDriverOptions>;\n\treloadWindowDriver(windowId: number): Promise<void>;\n}\n\nexport class WindowDriverRegistryChannel implements IServerChannel {\n\n\tconstructor(private registry: IWindowDriverRegistry) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'registerWindowDriver': return this.registry.registerWindowDriver(arg);\n\t\t\tcase 'reloadWindowDriver': return this.registry.reloadWindowDriver(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WindowDriverRegistryChannelClient implements IWindowDriverRegistry {\n\n\t_serviceBrand: any;\n\n\tconstructor(private channel: IChannel) { }\n\n\tregisterWindowDriver(windowId: number): Promise<IDriverOptions> {\n\t\treturn this.channel.call('registerWindowDriver', windowId);\n\t}\n\n\treloadWindowDriver(windowId: number): Promise<void> {\n\t\treturn this.channel.call('reloadWindowDriver', windowId);\n\t}\n}\n\nexport interface IWindowDriver {\n\tclick(selector: string, xoffset?: number | undefined, yoffset?: number | undefined): Promise<void>;\n\tdoubleClick(selector: string): Promise<void>;\n\tsetValue(selector: string, text: string): Promise<void>;\n\tgetTitle(): Promise<string>;\n\tisActiveElement(selector: string): Promise<boolean>;\n\tgetElements(selector: string, recursive: boolean): Promise<IElement[]>;\n\ttypeInEditor(selector: string, text: string): Promise<void>;\n\tgetTerminalBuffer(selector: string): Promise<string[]>;\n\twriteInTerminal(selector: string, text: string): Promise<void>;\n}\n\nexport class WindowDriverChannel implements IServerChannel {\n\n\tconstructor(private driver: IWindowDriver) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`No event found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'click': return this.driver.click(arg[0], arg[1], arg[2]);\n\t\t\tcase 'doubleClick': return this.driver.doubleClick(arg);\n\t\t\tcase 'setValue': return this.driver.setValue(arg[0], arg[1]);\n\t\t\tcase 'getTitle': return this.driver.getTitle();\n\t\t\tcase 'isActiveElement': return this.driver.isActiveElement(arg);\n\t\t\tcase 'getElements': return this.driver.getElements(arg[0], arg[1]);\n\t\t\tcase 'typeInEditor': return this.driver.typeInEditor(arg[0], arg[1]);\n\t\t\tcase 'getTerminalBuffer': return this.driver.getTerminalBuffer(arg);\n\t\t\tcase 'writeInTerminal': return this.driver.writeInTerminal(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WindowDriverChannelClient implements IWindowDriver {\n\n\t_serviceBrand: any;\n\n\tconstructor(private channel: IChannel) { }\n\n\tclick(selector: string, xoffset?: number, yoffset?: number): Promise<void> {\n\t\treturn this.channel.call('click', [selector, xoffset, yoffset]);\n\t}\n\n\tdoubleClick(selector: string): Promise<void> {\n\t\treturn this.channel.call('doubleClick', selector);\n\t}\n\n\tsetValue(selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('setValue', [selector, text]);\n\t}\n\n\tgetTitle(): Promise<string> {\n\t\treturn this.channel.call('getTitle');\n\t}\n\n\tisActiveElement(selector: string): Promise<boolean> {\n\t\treturn this.channel.call('isActiveElement', selector);\n\t}\n\n\tgetElements(selector: string, recursive: boolean): Promise<IElement[]> {\n\t\treturn this.channel.call('getElements', [selector, recursive]);\n\t}\n\n\ttypeInEditor(selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('typeInEditor', [selector, text]);\n\t}\n\n\tgetTerminalBuffer(selector: string): Promise<string[]> {\n\t\treturn this.channel.call('getTerminalBuffer', selector);\n\t}\n\n\twriteInTerminal(selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('writeInTerminal', [selector, text]);\n\t}\n}\n\nexport async function connect(handle: string): Promise<{ client: Client, driver: IDriver }> {\n\tconst client = await connectNet(handle, 'driverClient');\n\tconst channel = client.getChannel('driver');\n\tconst driver = new DriverChannelClient(channel);\n\treturn { client, driver };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface ParsedArgs {\n\t[arg: string]: any;\n\t_: string[];\n\t'folder-uri'?: string | string[];\n\t'file-uri'?: string | string[];\n\t_urls?: string[];\n\thelp?: boolean;\n\tversion?: boolean;\n\tstatus?: boolean;\n\twait?: boolean;\n\twaitMarkerFilePath?: string;\n\tdiff?: boolean;\n\tadd?: boolean;\n\tgoto?: boolean;\n\t'new-window'?: boolean;\n\t'unity-launch'?: boolean; // Always open a new window, except if opening the first window or opening a file or folder as part of the launch.\n\t'reuse-window'?: boolean;\n\tlocale?: string;\n\t'user-data-dir'?: string;\n\t'prof-startup'?: string;\n\t'prof-startup-prefix'?: string;\n\t'prof-append-timers'?: string;\n\t'prof-modules'?: string;\n\tverbose?: boolean;\n\ttrace?: boolean;\n\t'trace-category-filter'?: string;\n\t'trace-options'?: string;\n\tlog?: string;\n\tlogExtensionHostCommunication?: boolean;\n\t'extensions-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\textensionDevelopmentPath?: string; // either a local path or a URI\n\textensionTestsPath?: string; // either a local path or a URI\n\t'inspect-extensions'?: string;\n\t'inspect-brk-extensions'?: string;\n\tdebugId?: string;\n\t'inspect-search'?: string;\n\t'inspect-brk-search'?: string;\n\t'disable-extensions'?: boolean;\n\t'disable-extension'?: string | string[];\n\t'list-extensions'?: boolean;\n\t'show-versions'?: boolean;\n\t'install-extension'?: string | string[];\n\t'uninstall-extension'?: string | string[];\n\t'enable-proposed-api'?: string | string[];\n\t'open-url'?: boolean;\n\t'skip-getting-started'?: boolean;\n\t'skip-release-notes'?: boolean;\n\t'sticky-quickopen'?: boolean;\n\t'disable-restore-windows'?: boolean;\n\t'disable-telemetry'?: boolean;\n\t'export-default-configuration'?: string;\n\t'install-source'?: string;\n\t'disable-updates'?: string;\n\t'disable-crash-reporter'?: string;\n\t'skip-add-to-recently-opened'?: boolean;\n\t'max-memory'?: string;\n\t'file-write'?: boolean;\n\t'file-chmod'?: boolean;\n\t'upload-logs'?: string;\n\t'driver'?: string;\n\t'driver-verbose'?: boolean;\n\tremote?: string;\n\t'nodeless'?: boolean; // TODO@ben revisit electron5 nodeless support\n}\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport interface IEnvironmentService {\n\t_serviceBrand: any;\n\n\targs: ParsedArgs;\n\n\texecPath: string;\n\tcliPath: string;\n\tappRoot: string;\n\n\tuserHome: string;\n\tuserDataPath: string;\n\n\tappNameLong: string;\n\tappQuality?: string;\n\tappSettingsHome: string;\n\tappSettingsPath: string;\n\tappKeybindingsPath: string;\n\n\tsettingsSearchBuildId?: number;\n\tsettingsSearchUrl?: string;\n\n\tglobalStorageHome: string;\n\tworkspaceStorageHome: string;\n\n\tbackupHome: string;\n\tbackupWorkspacesPath: string;\n\n\tuntitledWorkspacesHome: URI;\n\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tbuiltinExtensionsPath: string;\n\textensionsPath: string;\n\textensionDevelopmentLocationURI?: URI;\n\textensionTestsLocationURI?: URI;\n\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tdebugSearch: IDebugParams;\n\n\tlogExtensionHostCommunication: boolean;\n\n\tisBuilt: boolean;\n\twait: boolean;\n\tstatus: boolean;\n\n\t// logging\n\tlog?: string;\n\tlogsPath: string;\n\tverbose: boolean;\n\n\tskipGettingStarted: boolean | undefined;\n\tskipReleaseNotes: boolean | undefined;\n\n\tskipAddToRecentlyOpened: boolean;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tnodeCachedDataDir?: string;\n\n\tinstallSourcePath: string;\n\tdisableUpdates: boolean;\n\tdisableCrashReporter: boolean;\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { isLinux } from 'vs/base/common/platform';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IResourceEncodings {\n\tgetWriteEncoding(resource: URI, preferredEncoding?: string): IResourceEncoding;\n}\n\nexport interface IResourceEncoding {\n\tencoding: string;\n\thasBOM: boolean;\n}\n\nexport interface IFileService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Helper to determine read/write encoding for resources.\n\t */\n\tencoding: IResourceEncodings;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watchFileChanges() API.\n\t */\n\tonFileChanges: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\tonAfterOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\tonDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Resolve the properties of a file identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t */\n\tresolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolveFile but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveFiles(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file identified by the resource exists.\n\t */\n\texistsFile(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Resolve the contents of a file identified by the resource.\n\t *\n\t * The returned object contains properties of the file and the full value as string.\n\t */\n\tresolveContent(resource: URI, options?: IResolveContentOptions): Promise<IContent>;\n\n\t/**\n\t * Resolve the contents of a file identified by the resource.\n\t *\n\t * The returned object contains properties of the file and the value as a readable stream.\n\t */\n\tresolveStreamContent(resource: URI, options?: IResolveContentOptions): Promise<IStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\tupdateContent(resource: URI, value: string | ITextSnapshot, options?: IUpdateContentOptions): Promise<IFileStat>;\n\n\t/**\n\t * Moves the file to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmoveFile(source: URI, target: URI, overwrite?: boolean): Promise<IFileStat>;\n\n\t/**\n\t * Copies the file to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopyFile(source: URI, target: URI, overwrite?: boolean): Promise<IFileStat>;\n\n\t/**\n\t * Creates a new file with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, content?: string, options?: ICreateFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Reads a folder's content with the given path. The returned promise\n\t * will have the list of children as a result.\n\t */\n\treadFolder(resource: URI): Promise<string[]>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStat>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file change events on the provided resource.\n\t */\n\twatchFileChanges(resource: URI): void;\n\n\t/**\n\t * Allows to stop a watcher on the provided resource or absolute fs path.\n\t */\n\tunwatchFileChanges(resource: URI): void;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\tmtime: number;\n\tctime: number;\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\tonDidChangeCapabilities: Event<void>;\n\n\tonDidChangeFile: Event<IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(private _resource: URI, private _operation: FileOperation, private _target?: IFileStat) {\n\t}\n\n\tget resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tget target(): IFileStat | undefined {\n\t\treturn this._target;\n\t}\n\n\tget operation(): FileOperation {\n\t\treturn this._operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\ttype: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\tresource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate _changes: IFileChange[];\n\n\tconstructor(changes: IFileChange[]) {\n\t\tthis._changes = changes;\n\t}\n\n\tget changes() {\n\t\treturn this._changes;\n\t}\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this._changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource, !isLinux /* ignorecase */);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource, !isLinux /* ignorecase */);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this._changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this._changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport interface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segement\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The last modifictaion date represented\n\t * as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t */\n\tetag?: string;\n\n\t/**\n\t * The resource is readonly.\n\t */\n\tisReadonly?: boolean;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a directory. if {{true}}\n\t * {{encoding}} has no meaning.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink?: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n\n\t/**\n\t * The size of the file if known.\n\t */\n\tsize?: number;\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\n/**\n * Content and meta information of a file.\n */\nexport interface IContent extends IBaseStat {\n\n\t/**\n\t * The content of a text file.\n\t */\n\tvalue: string;\n\n\t/**\n\t * The encoding of the content if known.\n\t */\n\tencoding: string;\n}\n\n// this should eventually replace IContent such\n// that we have a clear separation between content\n// and metadata (TODO@Joh, TODO@Ben)\nexport interface IContentData {\n\tencoding: string;\n\tstream: IStringStream;\n}\n\n/**\n * A Stream emitting strings.\n */\nexport interface IStringStream {\n\ton(event: 'data', callback: (chunk: string) => void): void;\n\ton(event: 'error', callback: (err: any) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: string, callback: any): void;\n}\n\n/**\n * Text snapshot that works like an iterator.\n * Will try to return chunks of roughly ~64KB size.\n * Will return null when finished.\n */\nexport interface ITextSnapshot {\n\tread(): string | null;\n}\n\nexport class StringSnapshot implements ITextSnapshot {\n\tprivate _value: string | null;\n\tconstructor(value: string) {\n\t\tthis._value = value;\n\t}\n\tread(): string | null {\n\t\tlet ret = this._value;\n\t\tthis._value = null;\n\t\treturn ret;\n\t}\n}\n/**\n * Helper method to convert a snapshot into its full string form.\n */\nexport function snapshotToString(snapshot: ITextSnapshot): string {\n\tconst chunks: string[] = [];\n\tlet chunk: string | null;\n\twhile (typeof (chunk = snapshot.read()) === 'string') {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn chunks.join('');\n}\n\n/**\n * Streamable content and meta information of a file.\n */\nexport interface IStreamContent extends IBaseStat {\n\n\t/**\n\t * The streamable content of a text file.\n\t */\n\tvalue: IStringStream;\n\n\t/**\n\t * The encoding of the content if known.\n\t */\n\tencoding: string;\n}\n\nexport interface IResolveContentOptions {\n\n\t/**\n\t * The optional acceptTextOnly parameter allows to fail this request early if the file\n\t * contents are not textual.\n\t */\n\tacceptTextOnly?: boolean;\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\tetag?: string;\n\n\t/**\n\t * The optional encoding parameter allows to specify the desired encoding when resolving\n\t * the contents of the file.\n\t */\n\tencoding?: string;\n\n\t/**\n\t * The optional guessEncoding parameter allows to guess encoding from content of the file.\n\t */\n\tautoGuessEncoding?: boolean;\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is null,\n\t * data will be read from the current file position.\n\t */\n\tposition?: number;\n}\n\nexport interface IUpdateContentOptions {\n\n\t/**\n\t * The encoding to use when updating a file.\n\t */\n\tencoding?: string;\n\n\t/**\n\t * If set to true, will enforce the selected encoding and not perform any detection using BOMs.\n\t */\n\toverwriteEncoding?: boolean;\n\n\t/**\n\t * Whether to overwrite a file even if it is readonly.\n\t */\n\toverwriteReadonly?: boolean;\n\n\t/**\n\t * Wether to write to the file as elevated (admin) user. When setting this option a prompt will\n\t * ask the user to authenticate as super user.\n\t */\n\twriteElevated?: boolean;\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\tetag?: string;\n\n\t/**\n\t * Run mkdirp before saving.\n\t */\n\tmkdirp?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\tresolveTo?: URI[];\n\tresolveSingleChildDescendants?: boolean;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\toverwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IResolveContentOptions & IUpdateContentOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: any): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_BINARY,\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEED_MEMORY_LIMIT\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const CONTENT_CHANGE_EVENT_BUFFER_DELAY = 1000;\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\thotExit: string;\n\t\tuseExperimentalFileWatcher: boolean;\n\t};\n}\n\nexport const SUPPORTED_ENCODINGS: { [encoding: string]: { labelLong: string; labelShort: string; order: number; encodeOnly?: boolean; alias?: string } } = {\n\tutf8: {\n\t\tlabelLong: 'UTF-8',\n\t\tlabelShort: 'UTF-8',\n\t\torder: 1,\n\t\talias: 'utf8bom'\n\t},\n\tutf8bom: {\n\t\tlabelLong: 'UTF-8 with BOM',\n\t\tlabelShort: 'UTF-8 with BOM',\n\t\tencodeOnly: true,\n\t\torder: 2,\n\t\talias: 'utf8'\n\t},\n\tutf16le: {\n\t\tlabelLong: 'UTF-16 LE',\n\t\tlabelShort: 'UTF-16 LE',\n\t\torder: 3\n\t},\n\tutf16be: {\n\t\tlabelLong: 'UTF-16 BE',\n\t\tlabelShort: 'UTF-16 BE',\n\t\torder: 4\n\t},\n\twindows1252: {\n\t\tlabelLong: 'Western (Windows 1252)',\n\t\tlabelShort: 'Windows 1252',\n\t\torder: 5\n\t},\n\tiso88591: {\n\t\tlabelLong: 'Western (ISO 8859-1)',\n\t\tlabelShort: 'ISO 8859-1',\n\t\torder: 6\n\t},\n\tiso88593: {\n\t\tlabelLong: 'Western (ISO 8859-3)',\n\t\tlabelShort: 'ISO 8859-3',\n\t\torder: 7\n\t},\n\tiso885915: {\n\t\tlabelLong: 'Western (ISO 8859-15)',\n\t\tlabelShort: 'ISO 8859-15',\n\t\torder: 8\n\t},\n\tmacroman: {\n\t\tlabelLong: 'Western (Mac Roman)',\n\t\tlabelShort: 'Mac Roman',\n\t\torder: 9\n\t},\n\tcp437: {\n\t\tlabelLong: 'DOS (CP 437)',\n\t\tlabelShort: 'CP437',\n\t\torder: 10\n\t},\n\twindows1256: {\n\t\tlabelLong: 'Arabic (Windows 1256)',\n\t\tlabelShort: 'Windows 1256',\n\t\torder: 11\n\t},\n\tiso88596: {\n\t\tlabelLong: 'Arabic (ISO 8859-6)',\n\t\tlabelShort: 'ISO 8859-6',\n\t\torder: 12\n\t},\n\twindows1257: {\n\t\tlabelLong: 'Baltic (Windows 1257)',\n\t\tlabelShort: 'Windows 1257',\n\t\torder: 13\n\t},\n\tiso88594: {\n\t\tlabelLong: 'Baltic (ISO 8859-4)',\n\t\tlabelShort: 'ISO 8859-4',\n\t\torder: 14\n\t},\n\tiso885914: {\n\t\tlabelLong: 'Celtic (ISO 8859-14)',\n\t\tlabelShort: 'ISO 8859-14',\n\t\torder: 15\n\t},\n\twindows1250: {\n\t\tlabelLong: 'Central European (Windows 1250)',\n\t\tlabelShort: 'Windows 1250',\n\t\torder: 16\n\t},\n\tiso88592: {\n\t\tlabelLong: 'Central European (ISO 8859-2)',\n\t\tlabelShort: 'ISO 8859-2',\n\t\torder: 17\n\t},\n\tcp852: {\n\t\tlabelLong: 'Central European (CP 852)',\n\t\tlabelShort: 'CP 852',\n\t\torder: 18\n\t},\n\twindows1251: {\n\t\tlabelLong: 'Cyrillic (Windows 1251)',\n\t\tlabelShort: 'Windows 1251',\n\t\torder: 19\n\t},\n\tcp866: {\n\t\tlabelLong: 'Cyrillic (CP 866)',\n\t\tlabelShort: 'CP 866',\n\t\torder: 20\n\t},\n\tiso88595: {\n\t\tlabelLong: 'Cyrillic (ISO 8859-5)',\n\t\tlabelShort: 'ISO 8859-5',\n\t\torder: 21\n\t},\n\tkoi8r: {\n\t\tlabelLong: 'Cyrillic (KOI8-R)',\n\t\tlabelShort: 'KOI8-R',\n\t\torder: 22\n\t},\n\tkoi8u: {\n\t\tlabelLong: 'Cyrillic (KOI8-U)',\n\t\tlabelShort: 'KOI8-U',\n\t\torder: 23\n\t},\n\tiso885913: {\n\t\tlabelLong: 'Estonian (ISO 8859-13)',\n\t\tlabelShort: 'ISO 8859-13',\n\t\torder: 24\n\t},\n\twindows1253: {\n\t\tlabelLong: 'Greek (Windows 1253)',\n\t\tlabelShort: 'Windows 1253',\n\t\torder: 25\n\t},\n\tiso88597: {\n\t\tlabelLong: 'Greek (ISO 8859-7)',\n\t\tlabelShort: 'ISO 8859-7',\n\t\torder: 26\n\t},\n\twindows1255: {\n\t\tlabelLong: 'Hebrew (Windows 1255)',\n\t\tlabelShort: 'Windows 1255',\n\t\torder: 27\n\t},\n\tiso88598: {\n\t\tlabelLong: 'Hebrew (ISO 8859-8)',\n\t\tlabelShort: 'ISO 8859-8',\n\t\torder: 28\n\t},\n\tiso885910: {\n\t\tlabelLong: 'Nordic (ISO 8859-10)',\n\t\tlabelShort: 'ISO 8859-10',\n\t\torder: 29\n\t},\n\tiso885916: {\n\t\tlabelLong: 'Romanian (ISO 8859-16)',\n\t\tlabelShort: 'ISO 8859-16',\n\t\torder: 30\n\t},\n\twindows1254: {\n\t\tlabelLong: 'Turkish (Windows 1254)',\n\t\tlabelShort: 'Windows 1254',\n\t\torder: 31\n\t},\n\tiso88599: {\n\t\tlabelLong: 'Turkish (ISO 8859-9)',\n\t\tlabelShort: 'ISO 8859-9',\n\t\torder: 32\n\t},\n\twindows1258: {\n\t\tlabelLong: 'Vietnamese (Windows 1258)',\n\t\tlabelShort: 'Windows 1258',\n\t\torder: 33\n\t},\n\tgbk: {\n\t\tlabelLong: 'Simplified Chinese (GBK)',\n\t\tlabelShort: 'GBK',\n\t\torder: 34\n\t},\n\tgb18030: {\n\t\tlabelLong: 'Simplified Chinese (GB18030)',\n\t\tlabelShort: 'GB18030',\n\t\torder: 35\n\t},\n\tcp950: {\n\t\tlabelLong: 'Traditional Chinese (Big5)',\n\t\tlabelShort: 'Big5',\n\t\torder: 36\n\t},\n\tbig5hkscs: {\n\t\tlabelLong: 'Traditional Chinese (Big5-HKSCS)',\n\t\tlabelShort: 'Big5-HKSCS',\n\t\torder: 37\n\t},\n\tshiftjis: {\n\t\tlabelLong: 'Japanese (Shift JIS)',\n\t\tlabelShort: 'Shift JIS',\n\t\torder: 38\n\t},\n\teucjp: {\n\t\tlabelLong: 'Japanese (EUC-JP)',\n\t\tlabelShort: 'EUC-JP',\n\t\torder: 39\n\t},\n\teuckr: {\n\t\tlabelLong: 'Korean (EUC-KR)',\n\t\tlabelShort: 'EUC-KR',\n\t\torder: 40\n\t},\n\twindows874: {\n\t\tlabelLong: 'Thai (Windows 874)',\n\t\tlabelShort: 'Windows 874',\n\t\torder: 41\n\t},\n\tiso885911: {\n\t\tlabelLong: 'Latin/Thai (ISO 8859-11)',\n\t\tlabelShort: 'ISO 8859-11',\n\t\torder: 42\n\t},\n\tkoi8ru: {\n\t\tlabelLong: 'Cyrillic (KOI8-RU)',\n\t\tlabelShort: 'KOI8-RU',\n\t\torder: 43\n\t},\n\tkoi8t: {\n\t\tlabelLong: 'Tajik (KOI8-T)',\n\t\tlabelShort: 'KOI8-T',\n\t\torder: 44\n\t},\n\tgb2312: {\n\t\tlabelLong: 'Simplified Chinese (GB 2312)',\n\t\tlabelShort: 'GB 2312',\n\t\torder: 45\n\t},\n\tcp865: {\n\t\tlabelLong: 'Nordic DOS (CP 865)',\n\t\tlabelShort: 'CP 865',\n\t\torder: 46\n\t},\n\tcp850: {\n\t\tlabelLong: 'Western European DOS (CP 850)',\n\t\tlabelShort: 'CP 850',\n\t\torder: 47\n\t}\n};\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { tmpdir } from 'os';\nimport { firstIndex } from 'vs/base/common/arrays';\nimport { localize } from 'vs/nls';\nimport { ParsedArgs } from '../common/environment';\nimport { MIN_MAX_MEMORY_SIZE_MB } from 'vs/platform/files/common/files';\nimport { parseArgs } from 'vs/platform/environment/node/argv';\nimport { join } from 'vs/base/common/path';\nimport { writeFile } from 'vs/base/node/pfs';\n\nfunction validate(args: ParsedArgs): ParsedArgs {\n\tif (args.goto) {\n\t\targs._.forEach(arg => assert(/^(\\w:)?[^:]+(:\\d*){0,2}$/.test(arg), localize('gotoValidation', \"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.\")));\n\t}\n\n\tif (args['max-memory']) {\n\t\tassert(parseInt(args['max-memory']) >= MIN_MAX_MEMORY_SIZE_MB, `The max-memory argument cannot be specified lower than ${MIN_MAX_MEMORY_SIZE_MB} MB.`);\n\t}\n\n\treturn args;\n}\n\nfunction stripAppPath(argv: string[]): string[] | undefined {\n\tconst index = firstIndex(argv, a => !/^-/.test(a));\n\n\tif (index > -1) {\n\t\treturn [...argv.slice(0, index), ...argv.slice(index + 1)];\n\t}\n\treturn undefined;\n}\n\n/**\n * Use this to parse raw code process.argv such as: `Electron . --verbose --wait`\n */\nexport function parseMainProcessArgv(processArgv: string[]): ParsedArgs {\n\tlet [, ...args] = processArgv;\n\n\t// If dev, remove the first non-option argument: it's the app location\n\tif (process.env['VSCODE_DEV']) {\n\t\targs = stripAppPath(args) || [];\n\t}\n\n\treturn validate(parseArgs(args));\n}\n\n/**\n * Use this to parse raw code CLI process.argv such as: `Electron cli.js . --verbose --wait`\n */\nexport function parseCLIProcessArgv(processArgv: string[]): ParsedArgs {\n\tlet [, , ...args] = processArgv;\n\n\tif (process.env['VSCODE_DEV']) {\n\t\targs = stripAppPath(args) || [];\n\t}\n\n\treturn validate(parseArgs(args));\n}\n\nexport function createWaitMarkerFile(verbose?: boolean): Promise<string> {\n\tconst randomWaitMarkerPath = join(tmpdir(), Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10));\n\n\treturn writeFile(randomWaitMarkerPath, '').then(() => {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Marker file for --wait created: ${randomWaitMarkerPath}`);\n\t\t}\n\n\t\treturn randomWaitMarkerPath;\n\t}, error => {\n\t\tif (verbose) {\n\t\t\tconsole.error(`Failed to create marker file for --wait: ${error}`);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event as CommonEvent } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { IPath } from 'vs/platform/windows/common/windows';\n\nexport const IHistoryMainService = createDecorator<IHistoryMainService>('historyMainService');\n\nexport interface IRecentlyOpened {\n\tworkspaces: Array<IRecentWorkspace | IRecentFolder>;\n\tfiles: IRecentFile[];\n}\n\nexport type IRecent = IRecentWorkspace | IRecentFolder | IRecentFile;\n\nexport interface IRecentWorkspace {\n\tworkspace: IWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFolder {\n\tfolderUri: ISingleFolderWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFile {\n\tfileUri: URI;\n\tlabel?: string;\n}\n\nexport function isRecentWorkspace(curr: IRecent): curr is IRecentWorkspace {\n\treturn !!curr['workspace'];\n}\n\nexport function isRecentFolder(curr: IRecent): curr is IRecentFolder {\n\treturn !!curr['folderUri'];\n}\n\nexport function isRecentFile(curr: IRecent): curr is IRecentFile {\n\treturn !!curr['fileUri'];\n}\n\n\nexport interface IHistoryMainService {\n\t_serviceBrand: any;\n\n\tonRecentlyOpenedChange: CommonEvent<void>;\n\n\taddRecentlyOpened(recents: IRecent[]): void;\n\tgetRecentlyOpened(currentWorkspace?: IWorkspaceIdentifier, currentFolder?: ISingleFolderWorkspaceIdentifier, currentFiles?: IPath[]): IRecentlyOpened;\n\tremoveFromRecentlyOpened(paths: URI[]): void;\n\tclearRecentlyOpened(): void;\n\n\tupdateWindowsJumpList(): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UriComponents, URI } from 'vs/base/common/uri';\nimport { IRecentlyOpened, isRecentFolder } from 'vs/platform/history/common/history';\n\ninterface ISerializedRecentlyOpened {\n\tworkspaces3: Array<ISerializedWorkspace | string>; // workspace or URI.toString() // added in 1.32\n\tworkspaceLabels?: Array<string | null>; // added in 1.33\n\tfiles2: string[]; // files as URI.toString() // added in 1.32\n\tfileLabels?: Array<string | null>; // added in 1.33\n}\n\ninterface ILegacySerializedRecentlyOpened {\n\tworkspaces2: Array<ILegacySerializedWorkspace | string>; // legacy, configPath as file path\n\tworkspaces: Array<ILegacySerializedWorkspace | string | UriComponents>; // legacy (UriComponents was also supported for a few insider builds)\n\tfiles: string[]; // files as paths\n}\n\ninterface ISerializedWorkspace { id: string; configURIPath: string; }\ninterface ILegacySerializedWorkspace { id: string; configPath: string; }\n\nexport type RecentlyOpenedStorageData = object;\n\nexport function restoreRecentlyOpened(data: RecentlyOpenedStorageData | undefined): IRecentlyOpened {\n\tconst result: IRecentlyOpened = { workspaces: [], files: [] };\n\tif (data) {\n\t\tconst storedRecents = data as ISerializedRecentlyOpened & ILegacySerializedRecentlyOpened;\n\t\tif (Array.isArray(storedRecents.workspaces3)) {\n\t\t\tfor (let i = 0; i < storedRecents.workspaces3.length; i++) {\n\t\t\t\tconst workspace = storedRecents.workspaces3[i];\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.workspaceLabels) && storedRecents.workspaceLabels[i]) || undefined;\n\t\t\t\tif (typeof workspace === 'object' && typeof workspace.id === 'string' && typeof workspace.configURIPath === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, workspace: { id: workspace.id, configPath: URI.parse(workspace.configURIPath) } });\n\t\t\t\t} else if (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, folderUri: URI.parse(workspace) });\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Array.isArray(storedRecents.workspaces2)) {\n\t\t\tfor (const workspace of storedRecents.workspaces2) {\n\t\t\t\tif (typeof workspace === 'object' && typeof workspace.id === 'string' && typeof workspace.configPath === 'string') {\n\t\t\t\t\tresult.workspaces.push({ workspace: { id: workspace.id, configPath: URI.file(workspace.configPath) } });\n\t\t\t\t} else if (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ folderUri: URI.parse(workspace) });\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Array.isArray(storedRecents.workspaces)) {\n\t\t\t// TODO@martin legacy support can be removed at some point (6 month?)\n\t\t\t// format of 1.25 and before\n\t\t\tfor (const workspace of storedRecents.workspaces) {\n\t\t\t\tif (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ folderUri: URI.file(workspace) });\n\t\t\t\t} else if (typeof workspace === 'object' && typeof workspace['id'] === 'string' && typeof workspace['configPath'] === 'string') {\n\t\t\t\t\tresult.workspaces.push({ workspace: { id: workspace['id'], configPath: URI.file(workspace['configPath']) } });\n\t\t\t\t} else if (workspace && typeof workspace['path'] === 'string' && typeof workspace['scheme'] === 'string') {\n\t\t\t\t\t// added by 1.26-insiders\n\t\t\t\t\tresult.workspaces.push({ folderUri: URI.revive(workspace) });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(storedRecents.files2)) {\n\t\t\tfor (let i = 0; i < storedRecents.files2.length; i++) {\n\t\t\t\tconst file = storedRecents.files2[i];\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.fileLabels) && storedRecents.fileLabels[i]) || undefined;\n\t\t\t\tif (typeof file === 'string') {\n\t\t\t\t\tresult.files.push({ label, fileUri: URI.parse(file) });\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Array.isArray(storedRecents.files)) {\n\t\t\tfor (const file of storedRecents.files) {\n\t\t\t\tif (typeof file === 'string') {\n\t\t\t\t\tresult.files.push({ fileUri: URI.file(file) });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function toStoreData(recents: IRecentlyOpened): RecentlyOpenedStorageData {\n\tconst serialized: ISerializedRecentlyOpened = { workspaces3: [], files2: [] };\n\n\tlet hasLabel = false;\n\tconst workspaceLabels: (string | null)[] = [];\n\tfor (const recent of recents.workspaces) {\n\t\tif (isRecentFolder(recent)) {\n\t\t\tserialized.workspaces3.push(recent.folderUri.toString());\n\t\t} else {\n\t\t\tserialized.workspaces3.push({ id: recent.workspace.id, configURIPath: recent.workspace.configPath.toString() });\n\t\t}\n\t\tworkspaceLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\tif (hasLabel) {\n\t\tserialized.workspaceLabels = workspaceLabels;\n\t}\n\n\thasLabel = false;\n\tconst fileLabels: (string | null)[] = [];\n\tfor (const recent of recents.files) {\n\t\tserialized.files2.push(recent.fileUri.toString());\n\t\tfileLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\tif (hasLabel) {\n\t\tserialized.fileLabels = fileLabels;\n\t}\n\n\treturn serialized;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { create } from 'vs/base/common/types';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\n// PROXY\n// Ghetto-declare of the global Proxy object. This isn't the proper way\n// but allows us to run this code in the browser without IE11.\ndeclare var Proxy: any;\nconst _canUseProxy = typeof Proxy === 'function';\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: any;\n\n\tprotected readonly _services: ServiceCollection;\n\tprotected readonly _strict: boolean;\n\tprotected readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[]=[]>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn.apply(undefined, [accessor, ...args]);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>create.apply(null, [ctor].concat(args, serviceArgs));\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tfunction throwCycleError() {\n\t\t\tconst err = new Error('[createInstance] cyclic dependency between services');\n\t\t\terr.message = graph.toString();\n\t\t\tthrow err;\n\t\t}\n\n\t\tlet count = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// TODO@joh use the graph to find a cycle\n\t\t\t// a weak heuristic for cycle checks\n\t\t\tif (count++ > 100) {\n\t\t\t\tthrowCycleError();\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tlet dependencies = _util.getServiceDependencies(item.desc.ctor);\n\t\t\tfor (let dependency of dependencies) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrowCycleError();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - creating UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation || !_canUseProxy) {\n\t\t\t// eager instantiation or no support JS proxies (e.g. IE11)\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue(() => this._createInstance(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(_target: T, prop: PropertyKey): any {\n\t\t\t\t\treturn idle.getValue()[prop];\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IIssueService = createDecorator<IIssueService>('issueService');\n\n// Since data sent through the service is serialized to JSON, functions will be lost, so Color objects\n// should not be sent as their 'toString' method will be stripped. Instead convert to strings before sending.\nexport interface WindowStyles {\n\tbackgroundColor?: string;\n\tcolor?: string;\n}\nexport interface WindowData {\n\tstyles: WindowStyles;\n\tzoomLevel: number;\n}\n\nexport const enum IssueType {\n\tBug,\n\tPerformanceIssue,\n\tFeatureRequest,\n\tSettingsSearchIssue\n}\n\nexport interface IssueReporterStyles extends WindowStyles {\n\ttextLinkColor?: string;\n\ttextLinkActiveForeground?: string;\n\tinputBackground?: string;\n\tinputForeground?: string;\n\tinputBorder?: string;\n\tinputErrorBorder?: string;\n\tinputActiveBorder?: string;\n\tbuttonBackground?: string;\n\tbuttonForeground?: string;\n\tbuttonHoverBackground?: string;\n\tsliderBackgroundColor?: string;\n\tsliderHoverColor?: string;\n\tsliderActiveColor?: string;\n}\n\nexport interface IssueReporterExtensionData {\n\tname: string;\n\tpublisher: string;\n\tversion: string;\n\tid: string;\n\tisTheme: boolean;\n\tdisplayName: string | undefined;\n\trepositoryUrl: string | undefined;\n\tbugsUrl: string | undefined;\n}\n\nexport interface IssueReporterData extends WindowData {\n\tstyles: IssueReporterStyles;\n\tenabledExtensions: IssueReporterExtensionData[];\n\tissueType?: IssueType;\n}\n\nexport interface ISettingSearchResult {\n\textensionId: string;\n\tkey: string;\n\tscore: number;\n}\n\nexport interface ISettingsSearchIssueReporterData extends IssueReporterData {\n\tissueType: IssueType.SettingsSearchIssue;\n\tactualSearchResults: ISettingSearchResult[];\n\tquery: string;\n\tfilterResultCount: number;\n}\n\nexport interface IssueReporterFeatures {\n}\n\nexport interface ProcessExplorerStyles extends WindowStyles {\n\thoverBackground?: string;\n\thoverForeground?: string;\n\thighlightForeground?: string;\n}\n\nexport interface ProcessExplorerData extends WindowData {\n\tpid: number;\n\tstyles: ProcessExplorerStyles;\n}\n\nexport interface IIssueService {\n\t_serviceBrand: any;\n\topenReporter(data: IssueReporterData): Promise<void>;\n\topenProcessExplorer(data: ProcessExplorerData): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IIssueService } from 'vs/platform/issue/common/issue';\n\nexport class IssueChannel implements IServerChannel {\n\n\tconstructor(private service: IIssueService) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'openIssueReporter':\n\t\t\t\treturn this.service.openReporter(arg);\n\t\t\tcase 'openProcessExplorer':\n\t\t\t\treturn this.service.openProcessExplorer(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { Modifiers, UILabelProvider, AriaLabelProvider, ElectronAcceleratorLabelProvider, UserSettingsLabelProvider } from 'vs/base/common/keybindingLabels';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from 'vs/base/common/keyCodes';\n\nexport abstract class BaseResolvedKeybinding<T extends Modifiers> extends ResolvedKeybinding {\n\n\tprotected readonly _os: OperatingSystem;\n\tprotected readonly _parts: T[];\n\n\tconstructor(os: OperatingSystem, parts: T[]) {\n\t\tsuper();\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis._os = os;\n\t\tthis._parts = parts;\n\t}\n\n\tpublic getLabel(): string | null {\n\t\treturn UILabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getLabel(keybinding));\n\t}\n\n\tpublic getAriaLabel(): string | null {\n\t\treturn AriaLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getAriaLabel(keybinding));\n\t}\n\n\tpublic getElectronAccelerator(): string | null {\n\t\tif (this._parts.length > 1) {\n\t\t\t// Electron cannot handle chords\n\t\t\treturn null;\n\t\t}\n\t\treturn ElectronAcceleratorLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getElectronAccelerator(keybinding));\n\t}\n\n\tpublic getUserSettingsLabel(): string | null {\n\t\treturn UserSettingsLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getUserSettingsLabel(keybinding));\n\t}\n\n\tpublic isWYSIWYG(): boolean {\n\t\treturn this._parts.every((keybinding) => this._isWYSIWYG(keybinding));\n\t}\n\n\tpublic isChord(): boolean {\n\t\treturn (this._parts.length > 1);\n\t}\n\n\tpublic getParts(): ResolvedKeybindingPart[] {\n\t\treturn this._parts.map((keybinding) => this._getPart(keybinding));\n\t}\n\n\tprivate _getPart(keybinding: T): ResolvedKeybindingPart {\n\t\treturn new ResolvedKeybindingPart(\n\t\t\tkeybinding.ctrlKey,\n\t\t\tkeybinding.shiftKey,\n\t\t\tkeybinding.altKey,\n\t\t\tkeybinding.metaKey,\n\t\t\tthis._getLabel(keybinding),\n\t\t\tthis._getAriaLabel(keybinding)\n\t\t);\n\t}\n\n\tpublic getDispatchParts(): (string | null)[] {\n\t\treturn this._parts.map((keybinding) => this._getDispatchPart(keybinding));\n\t}\n\n\tprotected abstract _getLabel(keybinding: T): string | null;\n\tprotected abstract _getAriaLabel(keybinding: T): string | null;\n\tprotected abstract _getElectronAccelerator(keybinding: T): string | null;\n\tprotected abstract _getUserSettingsLabel(keybinding: T): string | null;\n\tprotected abstract _isWYSIWYG(keybinding: T): boolean;\n\tprotected abstract _getDispatchPart(keybinding: T): string | null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyCodeUtils, Keybinding, SimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { BaseResolvedKeybinding } from 'vs/platform/keybinding/common/baseResolvedKeybinding';\n\n/**\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\n */\nexport class USLayoutResolvedKeybinding extends BaseResolvedKeybinding<SimpleKeybinding> {\n\n\tconstructor(actual: Keybinding, os: OperatingSystem) {\n\t\tsuper(os, actual.parts);\n\t}\n\n\tprivate _keyCodeToUILabel(keyCode: KeyCode): string {\n\t\tif (this._os === OperatingSystem.Macintosh) {\n\t\t\tswitch (keyCode) {\n\t\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\t\treturn '←';\n\t\t\t\tcase KeyCode.UpArrow:\n\t\t\t\t\treturn '↑';\n\t\t\t\tcase KeyCode.RightArrow:\n\t\t\t\t\treturn '→';\n\t\t\t\tcase KeyCode.DownArrow:\n\t\t\t\t\treturn '↓';\n\t\t\t}\n\t\t}\n\t\treturn KeyCodeUtils.toString(keyCode);\n\t}\n\n\tprotected _getLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._keyCodeToUILabel(keybinding.keyCode);\n\t}\n\n\tprotected _getAriaLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn KeyCodeUtils.toString(keybinding.keyCode);\n\t}\n\n\tprivate _keyCodeToElectronAccelerator(keyCode: KeyCode): string | null {\n\t\tif (keyCode >= KeyCode.NUMPAD_0 && keyCode <= KeyCode.NUMPAD_DIVIDE) {\n\t\t\t// Electron cannot handle numpad keys\n\t\t\treturn null;\n\t\t}\n\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn 'Up';\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn 'Down';\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn 'Left';\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn 'Right';\n\t\t}\n\n\t\treturn KeyCodeUtils.toString(keyCode);\n\t}\n\n\tprotected _getElectronAccelerator(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._keyCodeToElectronAccelerator(keybinding.keyCode);\n\t}\n\n\tprotected _getUserSettingsLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\tconst result = KeyCodeUtils.toUserSettingsUS(keybinding.keyCode);\n\t\treturn (result ? result.toLowerCase() : result);\n\t}\n\n\tprotected _isWYSIWYG(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected _getDispatchPart(keybinding: SimpleKeybinding): string | null {\n\t\treturn USLayoutResolvedKeybinding.getDispatchStr(keybinding);\n\t}\n\n\tpublic static getDispatchStr(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isModifierKey()) {\n\t\t\treturn null;\n\t\t}\n\t\tlet result = '';\n\n\t\tif (keybinding.ctrlKey) {\n\t\t\tresult += 'ctrl+';\n\t\t}\n\t\tif (keybinding.shiftKey) {\n\t\t\tresult += 'shift+';\n\t\t}\n\t\tif (keybinding.altKey) {\n\t\t\tresult += 'alt+';\n\t\t}\n\t\tif (keybinding.metaKey) {\n\t\t\tresult += 'meta+';\n\t\t}\n\t\tresult += KeyCodeUtils.toString(keybinding.keyCode);\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { isThenable } from 'vs/base/common/async';\n\nexport const ILifecycleService = createDecorator<ILifecycleService>('lifecycleService');\n\n/**\n * An event that is send out when the window is about to close. Clients have a chance to veto\n * the closing by either calling veto with a boolean \"true\" directly or with a promise that\n * resolves to a boolean. Returning a promise is useful in cases of long running operations\n * on shutdown.\n *\n * Note: It is absolutely important to avoid long running promises if possible. Please try hard\n * to return a boolean directly. Returning a promise has quite an impact on the shutdown sequence!\n */\nexport interface BeforeShutdownEvent {\n\n\t/**\n\t * Allows to veto the shutdown. The veto can be a long running operation but it\n\t * will block the application from closing.\n\t */\n\tveto(value: boolean | Promise<boolean>): void;\n\n\t/**\n\t * The reason why the application will be shutting down.\n\t */\n\treason: ShutdownReason;\n}\n\n/**\n * An event that is send out when the window closes. Clients have a chance to join the closing\n * by providing a promise from the join method. Returning a promise is useful in cases of long\n * running operations on shutdown.\n *\n * Note: It is absolutely important to avoid long running promises if possible. Please try hard\n * to return a boolean directly. Returning a promise has quite an impact on the shutdown sequence!\n */\nexport interface WillShutdownEvent {\n\n\t/**\n\t * Allows to join the shutdown. The promise can be a long running operation but it\n\t * will block the application from closing.\n\t */\n\tjoin(promise: Promise<void>): void;\n\n\t/**\n\t * The reason why the application is shutting down.\n\t */\n\treason: ShutdownReason;\n}\n\nexport const enum ShutdownReason {\n\n\t/** Window is closed */\n\tCLOSE = 1,\n\n\t/** Application is quit */\n\tQUIT = 2,\n\n\t/** Window is reloaded */\n\tRELOAD = 3,\n\n\t/** Other configuration loaded into window */\n\tLOAD = 4\n}\n\nexport const enum StartupKind {\n\tNewWindow = 1,\n\tReloadedWindow = 3,\n\tReopenedWindow = 4,\n}\n\nexport function StartupKindToString(startupKind: StartupKind): string {\n\tswitch (startupKind) {\n\t\tcase StartupKind.NewWindow: return 'NewWindow';\n\t\tcase StartupKind.ReloadedWindow: return 'ReloadedWindow';\n\t\tcase StartupKind.ReopenedWindow: return 'ReopenedWindow';\n\t}\n}\n\nexport const enum LifecyclePhase {\n\n\t/**\n\t * The first phase signals that we are about to startup getting ready.\n\t */\n\tStarting = 1,\n\n\t/**\n\t * Services are ready and the view is about to restore its state.\n\t */\n\tReady = 2,\n\n\t/**\n\t * Views, panels and editors have restored. For editors this means, that\n\t * they show their contents fully.\n\t */\n\tRestored = 3,\n\n\t/**\n\t * The last phase after views, panels and editors have restored and\n\t * some time has passed (few seconds).\n\t */\n\tEventually = 4\n}\n\nexport function LifecyclePhaseToString(phase: LifecyclePhase) {\n\tswitch (phase) {\n\t\tcase LifecyclePhase.Starting: return 'Starting';\n\t\tcase LifecyclePhase.Ready: return 'Ready';\n\t\tcase LifecyclePhase.Restored: return 'Restored';\n\t\tcase LifecyclePhase.Eventually: return 'Eventually';\n\t}\n}\n\n/**\n * A lifecycle service informs about lifecycle events of the\n * application, such as shutdown.\n */\nexport interface ILifecycleService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Value indicates how this window got loaded.\n\t */\n\treadonly startupKind: StartupKind;\n\n\t/**\n\t * A flag indicating in what phase of the lifecycle we currently are.\n\t */\n\tphase: LifecyclePhase;\n\n\t/**\n\t * Fired before shutdown happens. Allows listeners to veto against the\n\t * shutdown to prevent it from happening.\n\t *\n\t * The event carries a shutdown reason that indicates how the shutdown was triggered.\n\t */\n\treadonly onBeforeShutdown: Event<BeforeShutdownEvent>;\n\n\t/**\n\t * Fired when no client is preventing the shutdown from happening (from onBeforeShutdown).\n\t * Can be used to save UI state even if that is long running through the WillShutdownEvent#join()\n\t * method.\n\t *\n\t * The event carries a shutdown reason that indicates how the shutdown was triggered.\n\t */\n\treadonly onWillShutdown: Event<WillShutdownEvent>;\n\n\t/**\n\t * Fired when the shutdown is about to happen after long running shutdown operations\n\t * have finished (from onWillShutdown). This is the right place to dispose resources.\n\t */\n\treadonly onShutdown: Event<void>;\n\n\t/**\n\t * Returns a promise that resolves when a certain lifecycle phase\n\t * has started.\n\t */\n\twhen(phase: LifecyclePhase): Promise<void>;\n}\n\nexport const NullLifecycleService: ILifecycleService = {\n\t_serviceBrand: null,\n\tonBeforeShutdown: Event.None,\n\tonWillShutdown: Event.None,\n\tonShutdown: Event.None,\n\tphase: LifecyclePhase.Restored,\n\tstartupKind: StartupKind.NewWindow,\n\twhen() { return Promise.resolve(); }\n};\n\n// Shared veto handling across main and renderer\nexport function handleVetos(vetos: (boolean | Promise<boolean>)[], onError: (error: Error) => void): Promise<boolean /* veto */> {\n\tif (vetos.length === 0) {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tconst promises: Promise<void>[] = [];\n\tlet lazyValue = false;\n\n\tfor (let valueOrPromise of vetos) {\n\n\t\t// veto, done\n\t\tif (valueOrPromise === true) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (isThenable(valueOrPromise)) {\n\t\t\tpromises.push(valueOrPromise.then(value => {\n\t\t\t\tif (value) {\n\t\t\t\t\tlazyValue = true; // veto, done\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tonError(err); // error, treated like a veto, done\n\t\t\t\tlazyValue = true;\n\t\t\t}));\n\t\t}\n\t}\n\n\treturn Promise.all(promises).then(() => lazyValue);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogService extends IDisposable {\n\t_serviceBrand: any;\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logServices: ILogService[]) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: any;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\n\ninterface ILog {\n\tlevel: LogLevel;\n\targs: IArguments;\n}\n\nfunction getLogFunction(logger: ILogService, level: LogLevel): Function {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: return logger.trace;\n\t\tcase LogLevel.Debug: return logger.debug;\n\t\tcase LogLevel.Info: return logger.info;\n\t\tcase LogLevel.Warning: return logger.warn;\n\t\tcase LogLevel.Error: return logger.error;\n\t\tcase LogLevel.Critical: return logger.critical;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class BufferLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\tprivate buffer: ILog[] = [];\n\tprivate _logger: ILogService | undefined = undefined;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tset logger(logger: ILogService) {\n\t\tthis._logger = logger;\n\n\t\tfor (const { level, args } of this.buffer) {\n\t\t\tconst fn = getLogFunction(logger, level);\n\t\t\tfn.apply(logger, args);\n\t\t}\n\n\t\tthis.buffer = [];\n\t}\n\n\tprivate _log(level: LogLevel, args: IArguments): void {\n\t\tif (this._logger) {\n\t\t\tconst fn = getLogFunction(this._logger, level);\n\t\t\tfn.apply(this._logger, args);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, args });\n\t\t}\n\t}\n\n\ttrace(): void {\n\t\tthis._log(LogLevel.Trace, arguments);\n\t}\n\n\tdebug(): void {\n\t\tthis._log(LogLevel.Debug, arguments);\n\t}\n\n\tinfo(): void {\n\t\tthis._log(LogLevel.Info, arguments);\n\t}\n\n\twarn(): void {\n\t\tthis._log(LogLevel.Warning, arguments);\n\t}\n\n\terror(): void {\n\t\tthis._log(LogLevel.Error, arguments);\n\t}\n\n\tcritical(): void {\n\t\tthis._log(LogLevel.Critical, arguments);\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.dispose();\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LogLevelSetterChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class LogLevelSetterChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.channel.call('setLevel', level);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private master: LogLevelSetterChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(master.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.master.setLevel(level);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, NullLogService, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n// @ts-ignore\nimport * as fs from 'fs';\n\nexport function createSpdLogService(processName: string, logLevel: LogLevel, logsFolder: string): ILogService {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\tconst logger = new _spdlog.RotatingLogger(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t\tlogger.setLevel(0);\n\n\t\treturn new SpdLogService(logger, logLevel);\n\t} catch (e) {\n\t\t/** Desktop console.error(e); */\n\t\treturn new NullLogService();\n\t}\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\treturn new _spdlog.RotatingLogger(name, filename, filesize, filecount);\n\t} catch (e) {\n\t\tif (typeof window === 'undefined') {\n\t\t\t// @ts-ignore\n\t\t\tself.postMessage({\n\t\t\t\t$type: 'create-log',\n\t\t\t\t$data: {\n\t\t\t\t\tname, filename, filesize, filecount\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst dirs = filename.split('/');\n\t\t\tdirs.pop();\n\t\t\tlet abDirPath = '';\n\t\t\tdirs.forEach(dir => {\n\t\t\t\tif (!dir) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tabDirPath += `/${dir}`;\n\t\t\t\tif (!fs.existsSync(abDirPath)) {\n\t\t\t\t\tfs.mkdirSync(abDirPath);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!fs.existsSync(filename)) {\n\t\t\t\tfs.writeFileSync(filename, '', 'utf-8');\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tflush: function () {},\n\t\t\tcritical: function (content) {\n\t\t\t\tif (typeof window === 'undefined') {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t$type: 'log-critical',\n\t\t\t\t\t\t$data: {\n\t\t\t\t\t\t\tfilename, content\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst fileContent = fs.readFileSync(filename).toString();\n\t\t\t\t\tfs.writeFileSync(filename, fileContent + content, 'utf-8');\n\t\t\t\t}\n\t\t\t},\n\t\t\tclearFormatters: function () {},\n\t\t} as spdlog.RotatingLogger;\n\t}\n}\n\nclass SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\tprivate readonly logger: spdlog.RotatingLogger,\n\t\tlevel: LogLevel = LogLevel.Error\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.logger.trace(this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.logger.debug(this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.logger.info(this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.logger.warn(this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis.logger.error(this.format(array));\n\t\t\t} else {\n\t\t\t\tthis.logger.error(this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.logger.critical(this.format(arguments));\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.logger.drop();\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IMenubarService = createDecorator<IMenubarService>('menubarService');\n\nexport interface IMenubarService {\n\t_serviceBrand: any;\n\n\tupdateMenubar(windowId: number, menuData: IMenubarData): Promise<void>;\n}\n\nexport interface IMenubarData {\n\tmenus: { [id: string]: IMenubarMenu };\n\tkeybindings: { [id: string]: IMenubarKeybinding };\n}\n\nexport interface IMenubarMenu {\n\titems: Array<MenubarMenuItem>;\n}\n\nexport interface IMenubarKeybinding {\n\tlabel: string;\n\tuserSettingsLabel?: string;\n\tisNative?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuItemAction {\n\tid: string;\n\tlabel: string;\n\tchecked?: boolean; // Assumed false if missing\n\tenabled?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuUriItemAction {\n\tid: string;\n\tlabel: string;\n\turi: URI;\n\tenabled?: boolean;\n}\n\nexport interface IMenubarMenuItemSubmenu {\n\tid: string;\n\tlabel: string;\n\tsubmenu: IMenubarMenu;\n}\n\nexport interface IMenubarMenuItemSeparator {\n\tid: 'vscode.menubar.separator';\n}\n\nexport type MenubarMenuItem = IMenubarMenuItemAction | IMenubarMenuItemSubmenu | IMenubarMenuItemSeparator | IMenubarMenuUriItemAction;\n\nexport function isMenubarMenuItemSubmenu(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSubmenu {\n\treturn (<IMenubarMenuItemSubmenu>menuItem).submenu !== undefined;\n}\n\nexport function isMenubarMenuItemSeparator(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSeparator {\n\treturn (<IMenubarMenuItemSeparator>menuItem).id === 'vscode.menubar.separator';\n}\n\nexport function isMenubarMenuItemUriAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuUriItemAction {\n\treturn (<IMenubarMenuUriItemAction>menuItem).uri !== undefined;\n}\n\nexport function isMenubarMenuItemAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemAction {\n\treturn !isMenubarMenuItemSubmenu(menuItem) && !isMenubarMenuItemSeparator(menuItem) && !isMenubarMenuItemUriAction(menuItem);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { IMenubarService } from 'vs/platform/menubar/common/menubar';\nimport { Event } from 'vs/base/common/event';\n\nexport class MenubarChannel implements IServerChannel {\n\n\tconstructor(private service: IMenubarService) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'updateMenubar': return this.service.updateMenubar(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface IPackageConfiguration {\n\tname: string;\n\tversion: string;\n}\n\nconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\nconst packageJsonPath = path.join(rootPath, 'package.json');\nexport default require.__$__nodeRequire(packageJsonPath) as IPackageConfiguration;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface IProductConfiguration {\n\tnameShort: string;\n\tnameLong: string;\n\tapplicationName: string;\n\twin32AppId: string;\n\twin32x64AppId: string;\n\twin32UserAppId: string;\n\twin32x64UserAppId: string;\n\twin32AppUserModelId: string;\n\twin32MutexName: string;\n\tdarwinBundleIdentifier: string;\n\turlProtocol: string;\n\tdataFolderName: string;\n\tdownloadUrl: string;\n\tupdateUrl?: string;\n\tquality?: string;\n\ttarget?: string;\n\tcommit?: string;\n\tsettingsSearchBuildId?: number;\n\tsettingsSearchUrl?: string;\n\texperimentsUrl?: string;\n\tdate: string;\n\textensionsGallery: {\n\t\tserviceUrl: string;\n\t\titemUrl: string;\n\t\tcontrolUrl: string;\n\t\trecommendationsUrl: string;\n\t};\n\textensionTips: { [id: string]: string; };\n\textensionImportantTips: { [id: string]: { name: string; pattern: string; }; };\n\texeBasedExtensionTips: { [id: string]: { friendlyName: string, windowsPath?: string, recommendations: string[] }; };\n\textensionKeywords: { [extension: string]: string[]; };\n\textensionAllowedBadgeProviders: string[];\n\textensionAllowedProposedApi: string[];\n\tkeymapExtensionTips: string[];\n\tcrashReporter: {\n\t\tcompanyName: string;\n\t\tproductName: string;\n\t};\n\twelcomePage: string;\n\tenableTelemetry: boolean;\n\taiConfig: {\n\t\tasimovKey: string;\n\t};\n\tsendASmile: {\n\t\treportIssueUrl: string,\n\t\trequestFeatureUrl: string\n\t};\n\tdocumentationUrl: string;\n\treleaseNotesUrl: string;\n\tkeyboardShortcutsUrlMac: string;\n\tkeyboardShortcutsUrlLinux: string;\n\tkeyboardShortcutsUrlWin: string;\n\tintroductoryVideosUrl: string;\n\ttipsAndTricksUrl: string;\n\ttwitterUrl: string;\n\trequestFeatureUrl: string;\n\treportIssueUrl: string;\n\tlicenseUrl: string;\n\tprivacyStatementUrl: string;\n\ttelemetryOptOutUrl: string;\n\tnpsSurveyUrl: string;\n\tsurveys: ISurveyData[];\n\tchecksums: { [path: string]: string; };\n\tchecksumFailMoreInfoUrl: string;\n\thockeyApp: {\n\t\t'win32-ia32': string;\n\t\t'win32-x64': string;\n\t\t'linux-ia32': string;\n\t\t'linux-x64': string;\n\t\t'darwin': string;\n\t};\n\tlogUploaderUrl: string;\n\tportable?: string;\n\tuiExtensions?: string[];\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n\nconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\nconst productJsonPath = path.join(rootPath, 'product.json');\nconst product = require.__$__nodeRequire(productJsonPath) as IProductConfiguration;\n\nif (process.env['VSCODE_DEV']) {\n\tproduct.nameShort += ' Dev';\n\tproduct.nameLong += ' Dev';\n\tproduct.dataFolderName += '-dev';\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as cp from 'child_process';\nimport * as fs from 'fs';\n\nimport * as path from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport product from 'vs/platform/product/node/product';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { IRequestContext } from 'vs/base/node/request';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILaunchService } from 'vs/platform/launch/electron-main/launchService';\n\ninterface PostResult {\n\treadonly blob_id: string;\n}\n\nclass Endpoint {\n\tprivate constructor(\n\t\tpublic readonly url: string\n\t) { }\n\n\tpublic static getFromProduct(): Endpoint | undefined {\n\t\tconst logUploaderUrl = product.logUploaderUrl;\n\t\treturn logUploaderUrl ? new Endpoint(logUploaderUrl) : undefined;\n\t}\n}\n\nexport async function uploadLogs(\n\tlaunchService: ILaunchService,\n\trequestService: IRequestService,\n\tenvironmentService: IEnvironmentService\n): Promise<any> {\n\tconst endpoint = Endpoint.getFromProduct();\n\tif (!endpoint) {\n\t\tconsole.error(localize('invalidEndpoint', 'Invalid log uploader endpoint'));\n\t\treturn;\n\t}\n\n\tconst logsPath = await launchService.getLogsPath();\n\n\tif (await promptUserToConfirmLogUpload(logsPath, environmentService)) {\n\t\tconsole.log(localize('beginUploading', 'Uploading...'));\n\t\tconst outZip = await zipLogs(logsPath);\n\t\tconst result = await postLogs(endpoint, outZip, requestService);\n\t\tconsole.log(localize('didUploadLogs', 'Upload successful! Log file ID: {0}', result.blob_id));\n\t}\n}\n\nfunction promptUserToConfirmLogUpload(\n\tlogsPath: string,\n\tenvironmentService: IEnvironmentService\n): boolean {\n\tconst confirmKey = 'iConfirmLogsUpload';\n\tif ((environmentService.args['upload-logs'] || '').toLowerCase() === confirmKey.toLowerCase()) {\n\t\treturn true;\n\t} else {\n\t\tconst message = localize('logUploadPromptHeader', 'You are about to upload your session logs to a secure Microsoft endpoint that only Microsoft\\'s members of the VS Code team can access.')\n\t\t\t+ '\\n\\n' + localize('logUploadPromptBody', 'Session logs may contain personal information such as full paths or file contents. Please review and redact your session log files here: \\'{0}\\'', logsPath)\n\t\t\t+ '\\n\\n' + localize('logUploadPromptBodyDetails', 'By continuing you confirm that you have reviewed and redacted your session log files and that you agree to Microsoft using them to debug VS Code.')\n\t\t\t+ '\\n\\n' + localize('logUploadPromptAcceptInstructions', 'Please run code with \\'--upload-logs={0}\\' to proceed with upload', confirmKey);\n\t\tconsole.log(message);\n\t\treturn false;\n\t}\n}\n\nasync function postLogs(\n\tendpoint: Endpoint,\n\toutZip: string,\n\trequestService: IRequestService\n): Promise<PostResult> {\n\tconst dotter = setInterval(() => console.log('.'), 5000);\n\tlet result: IRequestContext;\n\ttry {\n\t\tresult = await requestService.request({\n\t\t\turl: endpoint.url,\n\t\t\ttype: 'POST',\n\t\t\tdata: Buffer.from(fs.readFileSync(outZip)).toString('base64'),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/zip'\n\t\t\t}\n\t\t}, CancellationToken.None);\n\t} catch (e) {\n\t\tclearInterval(dotter);\n\t\tconsole.log(localize('postError', 'Error posting logs: {0}', e));\n\t\tthrow e;\n\t}\n\n\treturn new Promise<PostResult>((resolve, reject) => {\n\t\tconst parts: Buffer[] = [];\n\t\tresult.stream.on('data', data => {\n\t\t\tparts.push(data);\n\t\t});\n\n\t\tresult.stream.on('end', () => {\n\t\t\tclearInterval(dotter);\n\t\t\ttry {\n\t\t\t\tconst response = Buffer.concat(parts).toString('utf-8');\n\t\t\t\tif (result.res.statusCode === 200) {\n\t\t\t\t\tresolve(JSON.parse(response));\n\t\t\t\t} else {\n\t\t\t\t\tconst errorMessage = localize('responseError', 'Error posting logs. Got {0} — {1}', result.res.statusCode, response);\n\t\t\t\t\tconsole.log(errorMessage);\n\t\t\t\t\treject(new Error(errorMessage));\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(localize('parseError', 'Error parsing response'));\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction zipLogs(\n\tlogsPath: string\n): Promise<string> {\n\tconst tempDir = fs.mkdtempSync(path.join(os.tmpdir(), 'vscode-log-upload'));\n\tconst outZip = path.join(tempDir, 'logs.zip');\n\treturn new Promise<string>((resolve, reject) => {\n\t\tdoZip(logsPath, outZip, tempDir, (err, stdout, stderr) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(localize('zipError', 'Error zipping logs: {0}', err.message));\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\tresolve(outZip);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction doZip(\n\tlogsPath: string,\n\toutZip: string,\n\ttempDir: string,\n\tcallback: (error: Error, stdout: string, stderr: string) => void\n) {\n\tswitch (os.platform()) {\n\t\tcase 'win32':\n\t\t\t// Copy directory first to avoid file locking issues\n\t\t\tconst sub = path.join(tempDir, 'sub');\n\t\t\treturn cp.execFile('powershell', ['-Command',\n\t\t\t\t`[System.IO.Directory]::CreateDirectory(\"${sub}\"); Copy-Item -recurse \"${logsPath}\" \"${sub}\"; Compress-Archive -Path \"${sub}\" -DestinationPath \"${outZip}\"`],\n\t\t\t\t{ cwd: logsPath },\n\t\t\t\tcallback);\n\t\tdefault:\n\t\t\treturn cp.execFile('zip', ['-r', outZip, '.'], { cwd: logsPath }, callback);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WorkspaceStats, collectWorkspaceStats } from 'vs/base/node/stats';\nimport { IMainProcessInfo } from 'vs/platform/launch/electron-main/launchService';\nimport { ProcessItem, listProcesses } from 'vs/base/node/ps';\nimport product from 'vs/platform/product/node/product';\nimport pkg from 'vs/platform/product/node/package';\nimport * as os from 'os';\nimport { virtualMachineHint } from 'vs/base/node/id';\nimport { repeat, pad } from 'vs/base/common/strings';\nimport { isWindows } from 'vs/base/common/platform';\nimport { app } from 'electron';\nimport { basename } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ID = 'diagnosticsService';\nexport const IDiagnosticsService = createDecorator<IDiagnosticsService>(ID);\n\nexport interface IDiagnosticsService {\n\t_serviceBrand: any;\n\n\tformatEnvironment(info: IMainProcessInfo): string;\n\tgetPerformanceInfo(info: IMainProcessInfo): Promise<PerformanceInfo>;\n\tgetSystemInfo(info: IMainProcessInfo): SystemInfo;\n\tprintDiagnostics(info: IMainProcessInfo): Promise<any>;\n}\n\nexport interface VersionInfo {\n\tvscodeVersion: string;\n\tos: string;\n}\n\nexport interface SystemInfo {\n\tCPUs?: string;\n\t'Memory (System)': string;\n\t'Load (avg)'?: string;\n\tVM: string;\n\t'Screen Reader': string;\n\t'Process Argv': string;\n\t'GPU Status': Electron.GPUFeatureStatus;\n}\n\nexport interface ProcessInfo {\n\tcpu: number;\n\tmemory: number;\n\tpid: number;\n\tname: string;\n}\n\nexport interface PerformanceInfo {\n\tprocessInfo?: string;\n\tworkspaceInfo?: string;\n}\n\nexport class DiagnosticsService implements IDiagnosticsService {\n\n\t_serviceBrand: any;\n\n\tformatEnvironment(info: IMainProcessInfo): string {\n\t\tconst MB = 1024 * 1024;\n\t\tconst GB = 1024 * MB;\n\n\t\tconst output: string[] = [];\n\t\toutput.push(`Version:          ${pkg.name} ${pkg.version} (${product.commit || 'Commit unknown'}, ${product.date || 'Date unknown'})`);\n\t\toutput.push(`OS Version:       ${os.type()} ${os.arch()} ${os.release()}`);\n\t\tconst cpus = os.cpus();\n\t\tif (cpus && cpus.length > 0) {\n\t\t\toutput.push(`CPUs:             ${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`);\n\t\t}\n\t\toutput.push(`Memory (System):  ${(os.totalmem() / GB).toFixed(2)}GB (${(os.freemem() / GB).toFixed(2)}GB free)`);\n\t\tif (!isWindows) {\n\t\t\toutput.push(`Load (avg):       ${os.loadavg().map(l => Math.round(l)).join(', ')}`); // only provided on Linux/macOS\n\t\t}\n\t\toutput.push(`VM:               ${Math.round((virtualMachineHint.value() * 100))}%`);\n\t\toutput.push(`Screen Reader:    ${app.isAccessibilitySupportEnabled() ? 'yes' : 'no'}`);\n\t\toutput.push(`Process Argv:     ${info.mainArguments.join(' ')}`);\n\t\toutput.push(`GPU Status:       ${this.expandGPUFeatures()}`);\n\n\t\treturn output.join('\\n');\n\t}\n\n\tgetPerformanceInfo(info: IMainProcessInfo): Promise<PerformanceInfo> {\n\t\treturn listProcesses(info.mainPID).then(rootProcess => {\n\t\t\tconst workspaceInfoMessages: string[] = [];\n\n\t\t\t// Workspace Stats\n\t\t\tconst workspaceStatPromises: Promise<void>[] = [];\n\t\t\tif (info.windows.some(window => window.folderURIs && window.folderURIs.length > 0)) {\n\t\t\t\tinfo.windows.forEach(window => {\n\t\t\t\t\tif (window.folderURIs.length === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tworkspaceInfoMessages.push(`|  Window (${window.title})`);\n\n\t\t\t\t\twindow.folderURIs.forEach(uriComponents => {\n\t\t\t\t\t\tconst folderUri = URI.revive(uriComponents);\n\t\t\t\t\t\tif (folderUri.scheme === 'file') {\n\t\t\t\t\t\t\tconst folder = folderUri.fsPath;\n\t\t\t\t\t\t\tworkspaceStatPromises.push(collectWorkspaceStats(folder, ['node_modules', '.git']).then(async stats => {\n\n\t\t\t\t\t\t\t\tlet countMessage = `${stats.fileCount} files`;\n\t\t\t\t\t\t\t\tif (stats.maxFilesReached) {\n\t\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tworkspaceInfoMessages.push(`|    Folder (${basename(folder)}): ${countMessage}`);\n\t\t\t\t\t\t\t\tworkspaceInfoMessages.push(this.formatWorkspaceStats(stats));\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tworkspaceInfoMessages.push(`|    Folder (${folderUri.toString()}): RPerformance stats not available.`);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Promise.all(workspaceStatPromises).then(() => {\n\t\t\t\treturn {\n\t\t\t\t\tprocessInfo: this.formatProcessList(info, rootProcess),\n\t\t\t\t\tworkspaceInfo: workspaceInfoMessages.join('\\n')\n\t\t\t\t};\n\t\t\t}).catch(error => {\n\t\t\t\treturn {\n\t\t\t\t\tprocessInfo: this.formatProcessList(info, rootProcess),\n\t\t\t\t\tworkspaceInfo: `Unable to calculate workspace stats: ${error}`\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tgetSystemInfo(info: IMainProcessInfo): SystemInfo {\n\t\tconst MB = 1024 * 1024;\n\t\tconst GB = 1024 * MB;\n\n\t\tconst systemInfo: SystemInfo = {\n\t\t\t'Memory (System)': `${(os.totalmem() / GB).toFixed(2)}GB (${(os.freemem() / GB).toFixed(2)}GB free)`,\n\t\t\tVM: `${Math.round((virtualMachineHint.value() * 100))}%`,\n\t\t\t'Screen Reader': `${app.isAccessibilitySupportEnabled() ? 'yes' : 'no'}`,\n\t\t\t'Process Argv': `${info.mainArguments.join(' ')}`,\n\t\t\t'GPU Status': app.getGPUFeatureStatus()\n\t\t};\n\n\t\tconst cpus = os.cpus();\n\t\tif (cpus && cpus.length > 0) {\n\t\t\tsystemInfo.CPUs = `${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`;\n\t\t}\n\n\t\tif (!isWindows) {\n\t\t\tsystemInfo['Load (avg)'] = `${os.loadavg().map(l => Math.round(l)).join(', ')}`;\n\t\t}\n\n\n\t\treturn systemInfo;\n\t}\n\n\tprintDiagnostics(info: IMainProcessInfo): Promise<any> {\n\t\treturn listProcesses(info.mainPID).then(rootProcess => {\n\n\t\t\t// Environment Info\n\t\t\tconsole.log('');\n\t\t\tconsole.log(this.formatEnvironment(info));\n\n\t\t\t// Process List\n\t\t\tconsole.log('');\n\t\t\tconsole.log(this.formatProcessList(info, rootProcess));\n\n\t\t\t// Workspace Stats\n\t\t\tconst workspaceStatPromises: Promise<void>[] = [];\n\t\t\tif (info.windows.some(window => window.folderURIs && window.folderURIs.length > 0)) {\n\t\t\t\tconsole.log('');\n\t\t\t\tconsole.log('Workspace Stats: ');\n\t\t\t\tinfo.windows.forEach(window => {\n\t\t\t\t\tif (window.folderURIs.length === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log(`|  Window (${window.title})`);\n\n\t\t\t\t\twindow.folderURIs.forEach(uriComponents => {\n\t\t\t\t\t\tconst folderUri = URI.revive(uriComponents);\n\t\t\t\t\t\tif (folderUri.scheme === 'file') {\n\t\t\t\t\t\t\tconst folder = folderUri.fsPath;\n\t\t\t\t\t\t\tworkspaceStatPromises.push(collectWorkspaceStats(folder, ['node_modules', '.git']).then(async stats => {\n\t\t\t\t\t\t\t\tlet countMessage = `${stats.fileCount} files`;\n\t\t\t\t\t\t\t\tif (stats.maxFilesReached) {\n\t\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconsole.log(`|    Folder (${basename(folder)}): ${countMessage}`);\n\t\t\t\t\t\t\t\tconsole.log(this.formatWorkspaceStats(stats));\n\n\t\t\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\t\t\tconsole.log(`|      Error: Unable to collect workspace stats for folder ${folder} (${error.toString()})`);\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(`|    Folder (${folderUri.toString()}): Workspace stats not available.`);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Promise.all(workspaceStatPromises).then(() => {\n\t\t\t\tconsole.log('');\n\t\t\t\tconsole.log('');\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate formatWorkspaceStats(workspaceStats: WorkspaceStats): string {\n\t\tconst output: string[] = [];\n\t\tconst lineLength = 60;\n\t\tlet col = 0;\n\n\t\tconst appendAndWrap = (name: string, count: number) => {\n\t\t\tconst item = ` ${name}(${count})`;\n\n\t\t\tif (col + item.length > lineLength) {\n\t\t\t\toutput.push(line);\n\t\t\t\tline = '|                 ';\n\t\t\t\tcol = line.length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcol += item.length;\n\t\t\t}\n\t\t\tline += item;\n\t\t};\n\n\t\t// File Types\n\t\tlet line = '|      File types:';\n\t\tconst maxShown = 10;\n\t\tlet max = workspaceStats.fileTypes.length > maxShown ? maxShown : workspaceStats.fileTypes.length;\n\t\tfor (let i = 0; i < max; i++) {\n\t\t\tconst item = workspaceStats.fileTypes[i];\n\t\t\tappendAndWrap(item.name, item.count);\n\t\t}\n\t\toutput.push(line);\n\n\t\t// Conf Files\n\t\tif (workspaceStats.configFiles.length >= 0) {\n\t\t\tline = '|      Conf files:';\n\t\t\tcol = 0;\n\t\t\tworkspaceStats.configFiles.forEach((item) => {\n\t\t\t\tappendAndWrap(item.name, item.count);\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\n\t\tif (workspaceStats.launchConfigFiles.length > 0) {\n\t\t\tlet line = '|      Launch Configs:';\n\t\t\tworkspaceStats.launchConfigFiles.forEach(each => {\n\t\t\t\tconst item = each.count > 1 ? ` ${each.name}(${each.count})` : ` ${each.name}`;\n\t\t\t\tline += item;\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate expandGPUFeatures(): string {\n\t\tconst gpuFeatures = app.getGPUFeatureStatus();\n\t\tconst longestFeatureName = Math.max(...Object.keys(gpuFeatures).map(feature => feature.length));\n\t\t// Make columns aligned by adding spaces after feature name\n\t\treturn Object.keys(gpuFeatures).map(feature => `${feature}:  ${repeat(' ', longestFeatureName - feature.length)}  ${gpuFeatures[feature]}`).join('\\n                  ');\n\t}\n\n\tprivate formatProcessList(info: IMainProcessInfo, rootProcess: ProcessItem): string {\n\t\tconst mapPidToWindowTitle = new Map<number, string>();\n\t\tinfo.windows.forEach(window => mapPidToWindowTitle.set(window.pid, window.title));\n\n\t\tconst output: string[] = [];\n\n\t\toutput.push('CPU %\\tMem MB\\t   PID\\tProcess');\n\n\t\tif (rootProcess) {\n\t\t\tthis.formatProcessItem(mapPidToWindowTitle, output, rootProcess, 0);\n\t\t}\n\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate formatProcessItem(mapPidToWindowTitle: Map<number, string>, output: string[], item: ProcessItem, indent: number): void {\n\t\tconst isRoot = (indent === 0);\n\n\t\tconst MB = 1024 * 1024;\n\n\t\t// Format name with indent\n\t\tlet name: string;\n\t\tif (isRoot) {\n\t\t\tname = `${product.applicationName} main`;\n\t\t} else {\n\t\t\tname = `${repeat('  ', indent)} ${item.name}`;\n\n\t\t\tif (item.name === 'window') {\n\t\t\t\tname = `${name} (${mapPidToWindowTitle.get(item.pid)})`;\n\t\t\t}\n\t\t}\n\t\tconst memory = process.platform === 'win32' ? item.mem : (os.totalmem() * (item.mem / 100));\n\t\toutput.push(`${pad(Number(item.load.toFixed(0)), 5, ' ')}\\t${pad(Number((memory / MB).toFixed(0)), 6, ' ')}\\t${pad(Number((item.pid).toFixed(0)), 6, ' ')}\\t${name}`);\n\n\t\t// Recurse into children if any\n\t\tif (Array.isArray(item.children)) {\n\t\t\titem.children.forEach(child => this.formatProcessItem(mapPidToWindowTitle, output, child, indent + 1));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, ParsedArgs, IDebugParams, IExtensionHostDebugParams } from 'vs/platform/environment/common/environment';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport { memoize } from 'vs/base/common/decorators';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nconst xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tif (xdgRuntimeDir) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\treturn path.join(xdgRuntimeDir, `vscode-${scope}-${pkg.version}-${type}.sock`);\n\t}\n\n\treturn path.join(userDataPath, `${pkg.version}-${type}.sock`);\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${pkg.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport class EnvironmentService implements IEnvironmentService {\n\n\t_serviceBrand: any;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): string { return os.homedir(); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\tget appNameLong(): string { return product.nameLong; }\n\n\tget appQuality(): string | undefined { return product.quality; }\n\n\t@memoize\n\tget appSettingsHome(): string { return path.join(this.userDataPath, 'User'); }\n\n\t@memoize\n\tget appSettingsPath(): string { return path.join(this.appSettingsHome, 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget settingsSearchBuildId(): number | undefined { return product.settingsSearchBuildId; }\n\n\t@memoize\n\tget settingsSearchUrl(): string | undefined { return product.settingsSearchUrl; }\n\n\t@memoize\n\tget appKeybindingsPath(): string { return path.join(this.appSettingsHome, 'keybindings.json'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): string { return path.join(this.userDataPath, 'Backups'); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn path.join(this.userHome, product.dataFolderName, 'extensions');\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget skipGettingStarted(): boolean { return !!this._args['skip-getting-started']; }\n\n\tget skipReleaseNotes(): boolean { return !!this._args['skip-release-notes']; }\n\n\tget skipAddToRecentlyOpened(): boolean { return !!this._args['skip-add-to-recently-opened']; }\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\n\t@memoize\n\tget debugSearch(): IDebugParams { return parseSearchPort(this._args, this.isBuilt); }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget log(): string | undefined { return this._args.log; }\n\n\tget wait(): boolean { return !!this._args.wait; }\n\n\tget logExtensionHostCommunication(): boolean { return !!this._args.logExtensionHostCommunication; }\n\n\tget status(): boolean { return !!this._args.status; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nexport function parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\treturn { port, break: brk, debugId };\n}\n\nfunction parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t} else {\n\t\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n\t}\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate data: { [id: string]: any; };\n\n\tconstructor() {\n\t\tthis.data = {};\n\t}\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n\n\t\tthis.data[id] = data;\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.hasOwnProperty(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data[id] || null;\n\t}\n}\n\nexport const Registry = <IRegistry>new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport * as strings from 'vs/base/common/strings';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\tAPPLICATION = 1,\n\tWINDOW,\n\tRESOURCE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tcontributedByExtension?: boolean;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\nexport const allSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\n\nexport const editorConfigurationSchemaId = 'vscode://schemas/settings/editor';\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly editorConfigurationSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers: string[] = [];\n\tprivate overridePropertyPattern: string;\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.editorConfigurationSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting' };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t\tthis.updateSchemaForOverrideSettingsConfiguration(configuration);\n\t\t});\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.editorConfigurationSchema.properties![key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tthis.overrideIdentifiers.push(...overrideIdentifiers);\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW, overridable: boolean = false): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\toverridable = configuration.overridable || overridable;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tlet message;\n\t\t\t\tif (validate && (message = validateProperty(key))) {\n\t\t\t\t\tconsole.warn(message);\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\t// Inherit overridable property from parent\n\t\t\t\tif (overridable) {\n\t\t\t\t\tproperty.overridable = true;\n\t\t\t\t}\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope, overridable));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tfunction register(configuration: IConfigurationNode) {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t}\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchemaForOverrideSettingsConfiguration(configuration: IConfigurationNode): void {\n\t\tif (configuration.id !== SETTINGS_OVERRRIDE_NODE_ID) {\n\t\t\tthis.update(configuration);\n\t\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tlet patternProperties: IJSONSchema = allSettings.patternProperties[this.overridePropertyPattern];\n\t\tif (!patternProperties) {\n\t\t\tpatternProperties = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: 'Unknown Identifier. Use language identifiers',\n\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t};\n\t\t}\n\n\t\tdelete allSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete applicationSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete windowSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete resourceSettings.patternProperties[this.overridePropertyPattern];\n\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tallSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tapplicationSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\twindowSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tresourceSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate update(configuration: IConfigurationNode): void {\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (properties[key].overridable) {\n\t\t\t\t\tthis.editorConfigurationSchema.properties![key] = this.getConfigurationProperties()[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tsubNodes.forEach(subNode => this.update(subNode));\n\t\t}\n\t}\n\n\tprivate computeOverridePropertyPattern(): void {\n\t\tthis.overridePropertyPattern = this.overrideIdentifiers.length ? OVERRIDE_PATTERN_WITH_SUBSTITUTION.replace('${0}', this.overrideIdentifiers.map(identifier => strings.createRegExp(identifier, false).source).join('|')) : OVERRIDE_PROPERTY;\n\t}\n}\n\nconst SETTINGS_OVERRRIDE_NODE_ID = 'override';\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nconst OVERRIDE_PATTERN_WITH_SUBSTITUTION = '\\\\[(${0})\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): { [key: string]: ConfigurationScope } {\n\tconst scopes = {};\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes[key] = configurationProperties[key].scope;\n\t}\n\tscopes['launch'] = ConfigurationScope.RESOURCE;\n\tscopes['task'] = ConfigurationScope.RESOURCE;\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ResourceMap } from 'vs/base/common/map';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChangeEvent {\n\n\tsource: ConfigurationTarget;\n\taffectedKeys: string[];\n\taffectsConfiguration(configuration: string, resource?: URI): boolean;\n\n\t// Following data is used for telemetry\n\tsourceConfig: any;\n\n\t// Following data is used for Extension host configuration event\n\tchangedConfiguration: IConfigurationModel;\n\tchangedConfigurationByResource: ResourceMap<IConfigurationModel>;\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: any;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): {\n\t\tdefault: T,\n\t\tuser: T,\n\t\tworkspace?: T,\n\t\tworkspaceFolder?: T,\n\t\tmemory?: T,\n\t\tvalue: T,\n\t};\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: { [folder: string]: IConfigurationModel };\n\tisComplete: boolean;\n}\n\nexport function compare(from: IConfigurationModel, to: IConfigurationModel): { added: string[], removed: string[], updated: string[] } {\n\tconst added = to.keys.filter(key => from.keys.indexOf(key) === -1);\n\tconst removed = from.keys.filter(key => to.keys.indexOf(key) === -1);\n\tconst updated: string[] = [];\n\n\tfor (const key of from.keys) {\n\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\tif (!objects.equals(value1, value2)) {\n\t\t\tupdated.push(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\tif (configurationProperties[keyInOverrideRaw] && configurationProperties[keyInOverrideRaw].overridable) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object') {\n\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.user !== 'undefined' || typeof setting.workspace !== 'undefined' || typeof setting.workspaceFolder !== 'undefined') {\n\t\treturn setting.value;\n\t} else if (typeof legacySetting.user !== 'undefined' || typeof legacySetting.workspace !== 'undefined' || typeof legacySetting.workspaceFolder !== 'undefined') {\n\t\treturn legacySetting.value;\n\t} else {\n\t\treturn setting.default;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, IConfigurationChangeEvent, ConfigurationTarget, removeFromValueTree, toOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`))\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined): void {\n\t\tif (content) {\n\t\t\tconst raw = this.parseContent(content);\n\t\t\tconst configurationModel = this.parseRaw(raw);\n\t\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t\t}\n\t}\n\n\tprotected parseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected parseRaw(raw: any): IConfigurationModel {\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n}\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _userConfiguration: ConfigurationModel,\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): {\n\t\tdefault: C,\n\t\tuser: C,\n\t\tworkspace?: C,\n\t\tworkspaceFolder?: C\n\t\tmemory?: C\n\t\tvalue: C,\n\t} {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\t\treturn {\n\t\t\tdefault: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key),\n\t\t\tuser: overrides.overrideIdentifier ? this._userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._userConfiguration.freeze().getValue(key),\n\t\t\tworkspace: workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined, //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\t\tworkspaceFolder: folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined,\n\t\t\tmemory: overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key),\n\t\t\tvalue: consolidateConfigurationModel.getValue(key)\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this._userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateUserConfiguration(userConfiguration: ConfigurationModel): void {\n\t\tthis._userConfiguration = userConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folders.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tget user(): ConfigurationModel {\n\t\treturn this._userConfiguration;\n\t}\n\n\tget workspace(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folders(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this._userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | null {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri) || null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this._userConfiguration.contents,\n\t\t\t\toverrides: this._userConfiguration.overrides,\n\t\t\t\tkeys: this._userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: this._folderConfigurations.keys().reduce((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult[folder.toString()] = { contents, overrides, keys };\n\t\t\t\treturn result;\n\t\t\t}, Object.create({})),\n\t\t\tisComplete: true\n\t\t};\n\t}\n\n\tallKeys(workspace: Workspace | undefined): string[] {\n\t\tlet keys = this.keys(workspace);\n\t\tlet all = [...keys.default];\n\t\tconst addKeys = (keys) => {\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (all.indexOf(key) === -1) {\n\t\t\t\t\tall.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\taddKeys(keys.user);\n\t\taddKeys(keys.workspace);\n\t\tfor (const resource of this.folders.keys()) {\n\t\t\taddKeys(this.folders.get(resource)!.keys);\n\t\t}\n\t\treturn all;\n\t}\n}\n\nexport class AbstractConfigurationChangeEvent {\n\n\tprotected doesConfigurationContains(configuration: ConfigurationModel, config: string): boolean {\n\t\tlet changedKeysTree = configuration.contents;\n\t\tlet requestedTree = toValuesTree({ [config]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\tchangedKeysTree = changedKeysTree[key];\n\t\t\tif (!changedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected updateKeys(configuration: ConfigurationModel, keys: string[], resource?: URI): void {\n\t\tfor (const key of keys) {\n\t\t\tconfiguration.setValue(key, {});\n\t\t}\n\t}\n}\n\nexport class ConfigurationChangeEvent extends AbstractConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate _source: ConfigurationTarget;\n\tprivate _sourceConfig: any;\n\n\tconstructor(\n\t\tprivate _changedConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _changedConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>()) {\n\t\tsuper();\n\t}\n\n\tget changedConfiguration(): IConfigurationModel {\n\t\treturn this._changedConfiguration;\n\t}\n\n\tget changedConfigurationByResource(): ResourceMap<IConfigurationModel> {\n\t\treturn this._changedConfigurationByResource;\n\t}\n\n\tchange(event: ConfigurationChangeEvent): ConfigurationChangeEvent;\n\tchange(keys: string[], resource?: URI): ConfigurationChangeEvent;\n\tchange(arg1: any, arg2?: any): ConfigurationChangeEvent {\n\t\tif (arg1 instanceof ConfigurationChangeEvent) {\n\t\t\tthis._changedConfiguration = this._changedConfiguration.merge(arg1._changedConfiguration);\n\t\t\tfor (const resource of arg1._changedConfigurationByResource.keys()) {\n\t\t\t\tlet changedConfigurationByResource = this.getOrSetChangedConfigurationForResource(resource);\n\t\t\t\tchangedConfigurationByResource = changedConfigurationByResource.merge(arg1._changedConfigurationByResource.get(resource)!);\n\t\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.changeWithKeys(arg1, arg2);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttelemetryData(source: ConfigurationTarget, sourceConfig: any): ConfigurationChangeEvent {\n\t\tthis._source = source;\n\t\tthis._sourceConfig = sourceConfig;\n\t\treturn this;\n\t}\n\n\tget affectedKeys(): string[] {\n\t\tconst keys = [...this._changedConfiguration.keys];\n\t\tthis._changedConfigurationByResource.forEach(model => keys.push(...model.keys));\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tget source(): ConfigurationTarget {\n\t\treturn this._source;\n\t}\n\n\tget sourceConfig(): any {\n\t\treturn this._sourceConfig;\n\t}\n\n\taffectsConfiguration(config: string, resource?: URI): boolean {\n\t\tlet configurationModelsToSearch: ConfigurationModel[] = [this._changedConfiguration];\n\n\t\tif (resource) {\n\t\t\tlet model = this._changedConfigurationByResource.get(resource);\n\t\t\tif (model) {\n\t\t\t\tconfigurationModelsToSearch.push(model);\n\t\t\t}\n\t\t} else {\n\t\t\tconfigurationModelsToSearch.push(...this._changedConfigurationByResource.values());\n\t\t}\n\n\t\tfor (const configuration of configurationModelsToSearch) {\n\t\t\tif (this.doesConfigurationContains(configuration, config)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate changeWithKeys(keys: string[], resource?: URI): void {\n\t\tlet changedConfiguration = resource ? this.getOrSetChangedConfigurationForResource(resource) : this._changedConfiguration;\n\t\tthis.updateKeys(changedConfiguration, keys);\n\t}\n\n\tprivate getOrSetChangedConfigurationForResource(resource: URI): ConfigurationModel {\n\t\tlet changedConfigurationByResource = this._changedConfigurationByResource.get(resource);\n\t\tif (!changedConfigurationByResource) {\n\t\t\tchangedConfigurationByResource = new ConfigurationModel();\n\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t}\n\t\treturn changedConfigurationByResource;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ConfigurationModelParser, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { ConfigWatcher } from 'vs/base/node/config';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport class UserConfiguration extends Disposable {\n\n\tprivate userConfigModelWatcher: ConfigWatcher<ConfigurationModelParser>;\n\tprivate initializePromise: Promise<void>;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tconstructor(private settingsPath: string) {\n\t\tsuper();\n\t}\n\n\tinitialize(): Promise<ConfigurationModel> {\n\t\tif (!this.initializePromise) {\n\t\t\tthis.initializePromise = new Promise<void>((c, e) => {\n\t\t\t\tthis.userConfigModelWatcher = new ConfigWatcher(this.settingsPath, {\n\t\t\t\t\tchangeBufferDelay: 300, onError: error => onUnexpectedError(error), defaultConfig: new ConfigurationModelParser(this.settingsPath), parse: (content: string, parseErrors: any[]) => {\n\t\t\t\t\t\tconst userConfigModelParser = new ConfigurationModelParser(this.settingsPath);\n\t\t\t\t\t\tuserConfigModelParser.parse(content);\n\t\t\t\t\t\tparseErrors = [...userConfigModelParser.errors];\n\t\t\t\t\t\treturn userConfigModelParser;\n\t\t\t\t\t}, initCallback: () => c(undefined)\n\t\t\t\t});\n\t\t\t\tthis._register(this.userConfigModelWatcher);\n\n\t\t\t\t// Listeners\n\t\t\t\tthis._register(this.userConfigModelWatcher.onDidUpdateConfiguration(() => this._onDidChangeConfiguration.fire(this.userConfigModelWatcher.getConfig().configurationModel)));\n\t\t\t});\n\t\t}\n\t\treturn this.initializePromise.then(() => this.userConfigModelWatcher.getConfig().configurationModel);\n\t}\n\n\tinitializeSync(): ConfigurationModel {\n\t\tthis.initialize();\n\t\treturn this.userConfigModelWatcher.getConfig().configurationModel;\n\t}\n\n\treload(): Promise<ConfigurationModel> {\n\t\treturn this.initialize().then(() => new Promise<ConfigurationModel>(c => this.userConfigModelWatcher.reload(userConfigModelParser => c(userConfigModelParser.configurationModel))));\n\t}\n\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, compare, isConfigurationOverrides, IConfigurationData } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationChangeEvent, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { UserConfiguration } from 'vs/platform/configuration/node/configuration';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\t_serviceBrand: any;\n\n\tprivate _configuration: Configuration;\n\tprivate userConfiguration: UserConfiguration;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.userConfiguration = this._register(new UserConfiguration(environmentService.appSettingsPath));\n\n\t\t// Initialize\n\t\tconst defaults = new DefaultConfigurationModel();\n\t\tconst user = this.userConfiguration.initializeSync();\n\t\tthis._configuration = new Configuration(defaults, user);\n\n\t\t// Listeners\n\t\tthis._register(this.userConfiguration.onDidChangeConfiguration(userConfigurationModel => this.onDidChangeUserConfiguration(userConfigurationModel)));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t}\n\n\tget configuration(): Configuration {\n\t\treturn this._configuration;\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): {\n\t\tdefault: T,\n\t\tuser: T,\n\t\tworkspace?: T,\n\t\tworkspaceFolder?: T\n\t\tvalue: T\n\t} {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void> {\n\t\treturn folder ? Promise.resolve(undefined) :\n\t\t\tthis.userConfiguration.reload().then(userConfigurationModel => this.onDidChangeUserConfiguration(userConfigurationModel));\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst { added, updated, removed } = compare(this._configuration.user, userConfigurationModel);\n\t\tconst changedKeys = [...added, ...updated, ...removed];\n\t\tif (changedKeys.length) {\n\t\t\tthis._configuration.updateUserConfiguration(userConfigurationModel);\n\t\t\tthis.trigger(changedKeys, ConfigurationTarget.USER);\n\t\t}\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tthis._configuration.updateDefaultConfiguration(new DefaultConfigurationModel());\n\t\tthis.trigger(keys, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(keys: string[], source: ConfigurationTarget): void {\n\t\tthis._onDidChangeConfiguration.fire(new ConfigurationChangeEvent().change(keys).telemetryData(source, this.getTargetConfiguration(source)));\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this._configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this._configuration.user.contents;\n\t\t}\n\t\treturn {};\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport const REMOTE_HOST_SCHEME = 'vscode-remote';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === REMOTE_HOST_SCHEME ? uri.authority : undefined;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Client, BufferedProtocol } from 'vs/base/parts/ipc/node/ipc.net';\n\nexport interface RemoteAgentConnectionContext {\n\tremoteAuthority: string;\n\tclientId: string;\n}\n\nexport function connectRemoteAgentManagement(remoteAuthority: string, host: string, port: number, clientId: string, isBuilt: boolean): Promise<Client<RemoteAgentConnectionContext>> {\n\tthrow new Error(`Not implemented`);\n}\n\nexport interface IExtensionHostConnectionResult {\n\tprotocol: BufferedProtocol;\n\tdebugPort?: number;\n}\n\nexport interface IRemoteExtensionHostStartParams {\n\tlanguage: string;\n\tdebugId?: string;\n\tbreak: boolean;\n\tport: number | null;\n\tupdatePort?: boolean;\n}\n\nexport function connectRemoteAgentExtensionHost(host: string, port: number, startArguments: IRemoteExtensionHostStartParams, isBuilt: boolean): Promise<IExtensionHostConnectionResult> {\n\tthrow new Error(`Not implemented`);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, FileWriteOptions, IFileChange, IFileSystemProvider, IStat, IWatchOptions } from 'vs/platform/files/common/files';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteExtensionsFileSystemProvider extends Disposable implements IFileSystemProvider {\n\n\tprivate readonly _session: string;\n\tprivate readonly _channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<IFileChange[]>());\n\treadonly onDidChangeFile: Event<IFileChange[]> = this._onDidChange.event;\n\n\tpublic capabilities: FileSystemProviderCapabilities;\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities: Event<void> = this._onDidChangeCapabilities.event;\n\n\tconstructor(channel: IChannel) {\n\t\tsuper();\n\t\tthis._session = generateUuid();\n\t\tthis._channel = channel;\n\n\t\tthis.setCaseSensitive(true);\n\n\t\tthis._channel.listen<IFileChangeDto[]>('filechange', [this._session])((events) => {\n\t\t\tthis._onDidChange.fire(events.map(RemoteExtensionsFileSystemProvider._createFileChange));\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\t\tthis.capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis._channel.call('watch', [this._session, req, resource, opts]);\n\t\treturn toDisposable(() => {\n\t\t\tthis._channel.call('unwatch', [this._session, req]);\n\t\t});\n\t}\n\n\tprivate static _createFileChange(dto: IFileChangeDto): IFileChange {\n\t\treturn { resource: URI.revive(dto.resource), type: dto.type };\n\t}\n\n\t// --- forwarding calls\n\n\tprivate static _asBuffer(data: Uint8Array): Buffer {\n\t\treturn Buffer.isBuffer(data) ? data : Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n\t}\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this._channel.call('stat', [resource]);\n\t}\n\n\treadFile(resource: URI): Promise<Uint8Array> {\n\t\treturn this._channel.call('readFile', [resource]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tconst contents = RemoteExtensionsFileSystemProvider._asBuffer(content);\n\t\treturn this._channel.call('writeFile', [resource, contents, opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this._channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this._channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this._channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._channel.call('copy', [resource, target, opts]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IRequestOptions, IRequestContext } from 'vs/base/node/request';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService2');\n\nexport interface IRequestService {\n\t_serviceBrand: any;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n}\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+)(:\\\\d+)?/?$|^$',\n\t\t\t\tdescription: localize('proxy', \"The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tdescription: localize('proxyAuthorization', \"The value to send as the 'Proxy-Authorization' header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS.\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\t_serviceBrand: any;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data: any): void;\n\tremoveItem(key: string): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcMain as ipc, app } from 'electron';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ICodeWindow } from 'vs/platform/windows/electron-main/windows';\nimport { handleVetos } from 'vs/platform/lifecycle/common/lifecycle';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nexport const ILifecycleService = createDecorator<ILifecycleService>('lifecycleService');\n\nexport const enum UnloadReason {\n\tCLOSE = 1,\n\tQUIT = 2,\n\tRELOAD = 3,\n\tLOAD = 4\n}\n\nexport interface IWindowUnloadEvent {\n\twindow: ICodeWindow;\n\treason: UnloadReason;\n\tveto(value: boolean | Promise<boolean>): void;\n}\n\nexport interface ShutdownEvent {\n\n\t/**\n\t * Allows to join the shutdown. The promise can be a long running operation but it\n\t * will block the application from closing.\n\t */\n\tjoin(promise: Promise<void>): void;\n}\n\nexport interface ILifecycleService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Will be true if the program was restarted (e.g. due to explicit request or update).\n\t */\n\twasRestarted: boolean;\n\n\t/**\n\t * Will be true if the program was requested to quit.\n\t */\n\tquitRequested: boolean;\n\n\t/**\n\t * An event that fires when the application is about to shutdown before any window is closed.\n\t * The shutdown can still be prevented by any window that vetos this event.\n\t */\n\tonBeforeShutdown: Event<void>;\n\n\t/**\n\t * An event that fires after the onBeforeShutdown event has been fired and after no window has\n\t * vetoed the shutdown sequence. At this point listeners are ensured that the application will\n\t * quit without veto.\n\t */\n\tonWillShutdown: Event<ShutdownEvent>;\n\n\t/**\n\t * An event that fires before a window closes. This event is fired after any veto has been dealt\n\t * with so that listeners know for sure that the window will close without veto.\n\t */\n\tonBeforeWindowClose: Event<ICodeWindow>;\n\n\t/**\n\t * An event that fires before a window is about to unload. Listeners can veto this event to prevent\n\t * the window from unloading.\n\t */\n\tonBeforeWindowUnload: Event<IWindowUnloadEvent>;\n\n\t/**\n\t * Unload a window for the provided reason. All lifecycle event handlers are triggered.\n\t */\n\tunload(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */>;\n\n\t/**\n\t * Restart the application with optional arguments (CLI). All lifecycle event handlers are triggered.\n\t */\n\trelaunch(options?: { addArgs?: string[], removeArgs?: string[] }): void;\n\n\t/**\n\t * Shutdown the application normally. All lifecycle event handlers are triggered.\n\t */\n\tquit(fromUpdate?: boolean): Promise<boolean /* veto */>;\n\n\t/**\n\t * Forcefully shutdown the application. No livecycle event handlers are triggered.\n\t */\n\tkill(code?: number): void;\n}\n\nexport class LifecycleService extends Disposable implements ILifecycleService {\n\n\t_serviceBrand: any;\n\n\tprivate static readonly QUIT_FROM_RESTART_MARKER = 'quit.from.restart'; // use a marker to find out if the session was restarted\n\n\tprivate windowToCloseRequest: { [windowId: string]: boolean } = Object.create(null);\n\tprivate oneTimeListenerTokenGenerator = 0;\n\tprivate windowCounter = 0;\n\n\tprivate pendingQuitPromise: Promise<boolean> | null;\n\tprivate pendingQuitPromiseResolve: { (veto: boolean): void } | null;\n\n\tprivate pendingWillShutdownPromise: Promise<void> | null;\n\n\tprivate _quitRequested = false;\n\tget quitRequested(): boolean { return this._quitRequested; }\n\n\tprivate _wasRestarted: boolean = false;\n\tget wasRestarted(): boolean { return this._wasRestarted; }\n\n\tprivate readonly _onBeforeShutdown = this._register(new Emitter<void>());\n\treadonly onBeforeShutdown: Event<void> = this._onBeforeShutdown.event;\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<ShutdownEvent>());\n\treadonly onWillShutdown: Event<ShutdownEvent> = this._onWillShutdown.event;\n\n\tprivate readonly _onBeforeWindowClose = this._register(new Emitter<ICodeWindow>());\n\treadonly onBeforeWindowClose: Event<ICodeWindow> = this._onBeforeWindowClose.event;\n\n\tprivate readonly _onBeforeWindowUnload = this._register(new Emitter<IWindowUnloadEvent>());\n\treadonly onBeforeWindowUnload: Event<IWindowUnloadEvent> = this._onBeforeWindowUnload.event;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IStateService private readonly stateService: IStateService\n\t) {\n\t\tsuper();\n\n\t\tthis.handleRestarted();\n\t}\n\n\tprivate handleRestarted(): void {\n\t\tthis._wasRestarted = !!this.stateService.getItem(LifecycleService.QUIT_FROM_RESTART_MARKER);\n\n\t\tif (this._wasRestarted) {\n\t\t\tthis.stateService.removeItem(LifecycleService.QUIT_FROM_RESTART_MARKER); // remove the marker right after if found\n\t\t}\n\t}\n\n\tready(): void {\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// before-quit: an event that is fired if application quit was\n\t\t// requested but before any window was closed.\n\t\tconst beforeQuitListener = () => {\n\t\t\tif (this._quitRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace('Lifecycle#app.on(before-quit)');\n\t\t\tthis._quitRequested = true;\n\n\t\t\t// Emit event to indicate that we are about to shutdown\n\t\t\tthis.logService.trace('Lifecycle#onBeforeShutdown.fire()');\n\t\t\tthis._onBeforeShutdown.fire();\n\n\t\t\t// macOS: can run without any window open. in that case we fire\n\t\t\t// the onWillShutdown() event directly because there is no veto\n\t\t\t// to be expected.\n\t\t\tif (isMacintosh && this.windowCounter === 0) {\n\t\t\t\tthis.beginOnWillShutdown();\n\t\t\t}\n\t\t};\n\t\tapp.addListener('before-quit', beforeQuitListener);\n\n\t\t// window-all-closed: an event that only fires when the last window\n\t\t// was closed. We override this event to be in charge if app.quit()\n\t\t// should be called or not.\n\t\tconst windowAllClosedListener = () => {\n\t\t\tthis.logService.trace('Lifecycle#app.on(window-all-closed)');\n\n\t\t\t// Windows/Linux: we quit when all windows have closed\n\t\t\t// Mac: we only quit when quit was requested\n\t\t\tif (this._quitRequested || !isMacintosh) {\n\t\t\t\tapp.quit();\n\t\t\t}\n\t\t};\n\t\tapp.addListener('window-all-closed', windowAllClosedListener);\n\n\t\t// will-quit: an event that is fired after all windows have been\n\t\t// closed, but before actually quitting.\n\t\tapp.once('will-quit', e => {\n\t\t\tthis.logService.trace('Lifecycle#app.on(will-quit)');\n\n\t\t\t// Prevent the quit until the shutdown promise was resolved\n\t\t\te.preventDefault();\n\n\t\t\t// Start shutdown sequence\n\t\t\tconst shutdownPromise = this.beginOnWillShutdown();\n\n\t\t\t// Wait until shutdown is signaled to be complete\n\t\t\tshutdownPromise.finally(() => {\n\n\t\t\t\t// Resolve pending quit promise now without veto\n\t\t\t\tthis.resolvePendingQuitPromise(false /* no veto */);\n\n\t\t\t\t// Quit again, this time do not prevent this, since our\n\t\t\t\t// will-quit listener is only installed \"once\". Also\n\t\t\t\t// remove any listener we have that is no longer needed\n\t\t\t\tapp.removeListener('before-quit', beforeQuitListener);\n\t\t\t\tapp.removeListener('window-all-closed', windowAllClosedListener);\n\t\t\t\tapp.quit();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate beginOnWillShutdown(): Promise<void> {\n\t\tif (this.pendingWillShutdownPromise) {\n\t\t\treturn this.pendingWillShutdownPromise; // shutdown is already running\n\t\t}\n\n\t\tthis.logService.trace('Lifecycle#onWillShutdown.fire()');\n\n\t\tconst joiners: Promise<void>[] = [];\n\n\t\tthis._onWillShutdown.fire({\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.pendingWillShutdownPromise = Promise.all(joiners).then(() => undefined, err => this.logService.error(err));\n\n\t\treturn this.pendingWillShutdownPromise;\n\t}\n\n\tregisterWindow(window: ICodeWindow): void {\n\n\t\t// track window count\n\t\tthis.windowCounter++;\n\n\t\t// Window Before Closing: Main -> Renderer\n\t\twindow.win.on('close', e => {\n\n\t\t\t// The window already acknowledged to be closed\n\t\t\tconst windowId = window.id;\n\t\t\tif (this.windowToCloseRequest[windowId]) {\n\t\t\t\tdelete this.windowToCloseRequest[windowId];\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace(`Lifecycle#window.on('close') - window ID ${window.id}`);\n\n\t\t\t// Otherwise prevent unload and handle it from window\n\t\t\te.preventDefault();\n\t\t\tthis.unload(window, UnloadReason.CLOSE).then(veto => {\n\t\t\t\tif (veto) {\n\t\t\t\t\tdelete this.windowToCloseRequest[windowId];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.windowToCloseRequest[windowId] = true;\n\n\t\t\t\t// Fire onBeforeWindowClose before actually closing\n\t\t\t\tthis.logService.trace(`Lifecycle#onBeforeWindowClose.fire() - window ID ${windowId}`);\n\t\t\t\tthis._onBeforeWindowClose.fire(window);\n\n\t\t\t\t// No veto, close window now\n\t\t\t\twindow.close();\n\t\t\t});\n\t\t});\n\n\t\t// Window After Closing\n\t\twindow.win.on('closed', e => {\n\t\t\tthis.logService.trace(`Lifecycle#window.on('closed') - window ID ${window.id}`);\n\n\t\t\t// update window count\n\t\t\tthis.windowCounter--;\n\n\t\t\t// if there are no more code windows opened, fire the onWillShutdown event, unless\n\t\t\t// we are on macOS where it is perfectly fine to close the last window and\n\t\t\t// the application continues running (unless quit was actually requested)\n\t\t\tif (this.windowCounter === 0 && (!isMacintosh || this._quitRequested)) {\n\t\t\t\tthis.beginOnWillShutdown();\n\t\t\t}\n\t\t});\n\t}\n\n\tunload(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */> {\n\n\t\t// Always allow to unload a window that is not yet ready\n\t\tif (!window.isReady) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.logService.trace(`Lifecycle#unload() - window ID ${window.id}`);\n\n\t\t// first ask the window itself if it vetos the unload\n\t\tconst windowUnloadReason = this._quitRequested ? UnloadReason.QUIT : reason;\n\t\treturn this.onBeforeUnloadWindowInRenderer(window, windowUnloadReason).then(veto => {\n\t\t\tif (veto) {\n\t\t\t\tthis.logService.trace(`Lifecycle#unload() - veto in renderer (window ID ${window.id})`);\n\n\t\t\t\treturn this.handleWindowUnloadVeto(veto);\n\t\t\t}\n\n\t\t\t// then check for vetos in the main side\n\t\t\treturn this.onBeforeUnloadWindowInMain(window, windowUnloadReason).then(veto => {\n\t\t\t\tif (veto) {\n\t\t\t\t\tthis.logService.trace(`Lifecycle#unload() - veto in main (window ID ${window.id})`);\n\n\t\t\t\t\treturn this.handleWindowUnloadVeto(veto);\n\t\t\t\t}\n\n\t\t\t\tthis.logService.trace(`Lifecycle#unload() - no veto (window ID ${window.id})`);\n\n\t\t\t\t// finally if there are no vetos, unload the renderer\n\t\t\t\treturn this.onWillUnloadWindowInRenderer(window, windowUnloadReason).then(() => false);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate handleWindowUnloadVeto(veto: boolean): boolean {\n\t\tif (!veto) {\n\t\t\treturn false; // no veto\n\t\t}\n\n\t\t// a veto resolves any pending quit with veto\n\t\tthis.resolvePendingQuitPromise(true /* veto */);\n\n\t\t// a veto resets the pending quit request flag\n\t\tthis._quitRequested = false;\n\n\t\treturn true; // veto\n\t}\n\n\tprivate resolvePendingQuitPromise(veto: boolean): void {\n\t\tif (this.pendingQuitPromiseResolve) {\n\t\t\tthis.pendingQuitPromiseResolve(veto);\n\t\t\tthis.pendingQuitPromiseResolve = null;\n\t\t\tthis.pendingQuitPromise = null;\n\t\t}\n\t}\n\n\tprivate onBeforeUnloadWindowInRenderer(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */> {\n\t\treturn new Promise<boolean>(c => {\n\t\t\tconst oneTimeEventToken = this.oneTimeListenerTokenGenerator++;\n\t\t\tconst okChannel = `vscode:ok${oneTimeEventToken}`;\n\t\t\tconst cancelChannel = `vscode:cancel${oneTimeEventToken}`;\n\n\t\t\tipc.once(okChannel, () => {\n\t\t\t\tc(false); // no veto\n\t\t\t});\n\n\t\t\tipc.once(cancelChannel, () => {\n\t\t\t\tc(true); // veto\n\t\t\t});\n\n\t\t\twindow.send('vscode:onBeforeUnload', { okChannel, cancelChannel, reason });\n\t\t});\n\t}\n\n\tprivate onBeforeUnloadWindowInMain(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */> {\n\t\tconst vetos: (boolean | Promise<boolean>)[] = [];\n\n\t\tthis._onBeforeWindowUnload.fire({\n\t\t\treason,\n\t\t\twindow,\n\t\t\tveto(value) {\n\t\t\t\tvetos.push(value);\n\t\t\t}\n\t\t});\n\n\t\treturn handleVetos(vetos, err => this.logService.error(err));\n\t}\n\n\tprivate onWillUnloadWindowInRenderer(window: ICodeWindow, reason: UnloadReason): Promise<void> {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tconst oneTimeEventToken = this.oneTimeListenerTokenGenerator++;\n\t\t\tconst replyChannel = `vscode:reply${oneTimeEventToken}`;\n\n\t\t\tipc.once(replyChannel, () => resolve());\n\n\t\t\twindow.send('vscode:onWillUnload', { replyChannel, reason });\n\t\t});\n\t}\n\n\t/**\n\t * A promise that completes to indicate if the quit request has been veto'd\n\t * by the user or not.\n\t */\n\tquit(fromUpdate?: boolean): Promise<boolean /* veto */> {\n\t\tif (this.pendingQuitPromise) {\n\t\t\treturn this.pendingQuitPromise;\n\t\t}\n\n\t\tthis.logService.trace(`Lifecycle#quit() - from update: ${fromUpdate}`);\n\n\t\t// Remember the reason for quit was to restart\n\t\tif (fromUpdate) {\n\t\t\tthis.stateService.setItem(LifecycleService.QUIT_FROM_RESTART_MARKER, true);\n\t\t}\n\n\t\tthis.pendingQuitPromise = new Promise(resolve => {\n\n\t\t\t// Store as field to access it from a window cancellation\n\t\t\tthis.pendingQuitPromiseResolve = resolve;\n\n\t\t\t// Calling app.quit() will trigger the close handlers of each opened window\n\t\t\t// and only if no window vetoed the shutdown, we will get the will-quit event\n\t\t\tthis.logService.trace('Lifecycle#quit() - calling app.quit()');\n\t\t\tapp.quit();\n\t\t});\n\n\t\treturn this.pendingQuitPromise;\n\t}\n\n\trelaunch(options?: { addArgs?: string[], removeArgs?: string[] }): void {\n\t\tthis.logService.trace('Lifecycle#relaunch()');\n\n\t\tconst args = process.argv.slice(1);\n\t\tif (options && options.addArgs) {\n\t\t\targs.push(...options.addArgs);\n\t\t}\n\n\t\tif (options && options.removeArgs) {\n\t\t\tfor (const a of options.removeArgs) {\n\t\t\t\tconst idx = args.indexOf(a);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\targs.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet quitVetoed = false;\n\t\tapp.once('quit', () => {\n\t\t\tif (!quitVetoed) {\n\n\t\t\t\t// Remember the reason for quit was to restart\n\t\t\t\tthis.stateService.setItem(LifecycleService.QUIT_FROM_RESTART_MARKER, true);\n\n\t\t\t\t// Windows: we are about to restart and as such we need to restore the original\n\t\t\t\t// current working directory we had on startup to get the exact same startup\n\t\t\t\t// behaviour. As such, we briefly change back to the VSCODE_CWD and then when\n\t\t\t\t// Code starts it will set it back to the installation directory again.\n\t\t\t\ttry {\n\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\tconst vscodeCwd = process.env['VSCODE_CWD'];\n\t\t\t\t\t\tif (vscodeCwd) {\n\t\t\t\t\t\t\tprocess.chdir(vscodeCwd);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.logService.error(err);\n\t\t\t\t}\n\n\t\t\t\t// relaunch after we are sure there is no veto\n\t\t\t\tthis.logService.trace('Lifecycle#relaunch() - calling app.relaunch()');\n\t\t\t\tapp.relaunch({ args });\n\t\t\t}\n\t\t});\n\n\t\t// app.relaunch() does not quit automatically, so we quit first,\n\t\t// check for vetoes and then relaunch from the app.on('quit') event\n\t\tthis.quit().then(veto => quitVetoed = veto);\n\t}\n\n\tkill(code?: number): void {\n\t\tthis.logService.trace('Lifecycle#kill()');\n\n\t\tapp.exit(code);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assign } from 'vs/base/common/objects';\nimport { memoize } from 'vs/base/common/decorators';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { BrowserWindow, ipcMain } from 'electron';\nimport { ISharedProcess } from 'vs/platform/windows/electron-main/windows';\nimport { Barrier } from 'vs/base/common/async';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { getBackgroundColor } from 'vs/code/electron-main/theme';\nimport { dispose, toDisposable, IDisposable } from 'vs/base/common/lifecycle';\n\nexport class SharedProcess implements ISharedProcess {\n\n\tprivate barrier = new Barrier();\n\n\tprivate window: Electron.BrowserWindow | null;\n\n\tconstructor(\n\t\tprivate readonly machineId: string,\n\t\tprivate userEnv: NodeJS.ProcessEnv,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\t@memoize\n\tprivate get _whenReady(): Promise<void> {\n\t\tthis.window = new BrowserWindow({\n\t\t\tshow: false,\n\t\t\tbackgroundColor: getBackgroundColor(this.stateService),\n\t\t\twebPreferences: {\n\t\t\t\timages: false,\n\t\t\t\twebaudio: false,\n\t\t\t\twebgl: false,\n\t\t\t\tdisableBlinkFeatures: 'Auxclick' // do NOT change, allows us to identify this window as shared-process in the process explorer\n\t\t\t}\n\t\t});\n\t\tconst config = assign({\n\t\t\tappRoot: this.environmentService.appRoot,\n\t\t\tmachineId: this.machineId,\n\t\t\tnodeCachedDataDir: this.environmentService.nodeCachedDataDir,\n\t\t\tuserEnv: this.userEnv\n\t\t});\n\n\t\tconst url = `${require.toUrl('vs/code/electron-browser/sharedProcess/sharedProcess.html')}?config=${encodeURIComponent(JSON.stringify(config))}`;\n\t\tthis.window.loadURL(url);\n\n\t\t// Prevent the window from dying\n\t\tconst onClose = (e: Event) => {\n\t\t\tthis.logService.trace('SharedProcess#close prevented');\n\n\t\t\t// We never allow to close the shared process unless we get explicitly disposed()\n\t\t\te.preventDefault();\n\n\t\t\t// Still hide the window though if visible\n\t\t\tif (this.window && this.window.isVisible()) {\n\t\t\t\tthis.window.hide();\n\t\t\t}\n\t\t};\n\n\t\tthis.window.on('close', onClose);\n\n\t\tconst disposables: IDisposable[] = [];\n\n\t\tthis.lifecycleService.onWillShutdown(() => {\n\t\t\tdispose(disposables);\n\n\t\t\t// Shut the shared process down when we are quitting\n\t\t\t//\n\t\t\t// Note: because we veto the window close, we must first remove our veto.\n\t\t\t// Otherwise the application would never quit because the shared process\n\t\t\t// window is refusing to close!\n\t\t\t//\n\t\t\tif (this.window) {\n\t\t\t\tthis.window.removeListener('close', onClose);\n\t\t\t}\n\n\t\t\t// Electron seems to crash on Windows without this setTimeout :|\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tif (this.window) {\n\t\t\t\t\t\tthis.window.close();\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// ignore, as electron is already shutting down\n\t\t\t\t}\n\n\t\t\t\tthis.window = null;\n\t\t\t}, 0);\n\t\t});\n\n\t\treturn new Promise<void>(c => {\n\t\t\tipcMain.once('handshake:hello', ({ sender }: { sender: any }) => {\n\t\t\t\tsender.send('handshake:hey there', {\n\t\t\t\t\tsharedIPCHandle: this.environmentService.sharedIPCHandle,\n\t\t\t\t\targs: this.environmentService.args,\n\t\t\t\t\tlogLevel: this.logService.getLevel()\n\t\t\t\t});\n\n\t\t\t\tdisposables.push(toDisposable(() => sender.send('handshake:goodbye')));\n\t\t\t\tipcMain.once('handshake:im ready', () => c(undefined));\n\t\t\t});\n\t\t});\n\t}\n\n\tspawn(userEnv: NodeJS.ProcessEnv): void {\n\t\tthis.userEnv = { ...this.userEnv, ...userEnv };\n\t\tthis.barrier.open();\n\t}\n\n\tasync whenReady(): Promise<void> {\n\t\tawait this.barrier.wait();\n\t\tawait this._whenReady;\n\t}\n\n\ttoggle(): void {\n\t\tif (!this.window || this.window.isVisible()) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n\n\tshow(): void {\n\t\tif (this.window) {\n\t\t\tthis.window.show();\n\t\t\tthis.window.webContents.openDevTools();\n\t\t}\n\t}\n\n\thide(): void {\n\t\tif (this.window) {\n\t\t\tthis.window.webContents.closeDevTools();\n\t\t\tthis.window.hide();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileAndFlushSync } from 'vs/base/node/extfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport class FileStorage {\n\n\tprivate _database: object | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): object {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn readFile(this.dbPath).then(contents => {\n\t\t\ttry {\n\t\t\t\tthis.lastFlushedSerializedDatabase = contents.toString();\n\t\t\t\tthis._database = JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t\t} catch (error) {\n\t\t\t\tthis._database = {};\n\t\t\t}\n\t\t}, error => {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\tthis._database = {};\n\t\t});\n\t}\n\n\tprivate loadSync(): object {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data: any): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileAndFlushSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\t_serviceBrand: any;\n\n\tprivate static STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data: any): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IStorage, Storage, SQLiteStorageDatabase, ISQLiteStorageDatabaseLoggingOptions, InMemoryStorageDatabase } from 'vs/base/node/storage';\nimport { join } from 'vs/base/common/path';\nimport { exists, readdir } from 'vs/base/node/pfs';\nimport { Database } from 'vscode-sqlite3';\nimport { endsWith, startsWith } from 'vs/base/common/strings';\n\nexport const IStorageMainService = createDecorator<IStorageMainService>('storageMainService');\n\nexport interface IStorageMainService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t */\n\treadonly onWillSaveState: Event<void>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t */\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t */\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t */\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a string value under the given key to storage. The value will\n\t * be converted to a string.\n\t */\n\tstore(key: string, value: any): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t */\n\tremove(key: string): void;\n}\n\nexport interface IStorageChangeEvent {\n\tkey: string;\n}\n\nexport class StorageMainService extends Disposable implements IStorageMainService {\n\n\t_serviceBrand: any;\n\n\tprivate static STORAGE_NAME = 'state.vscdb';\n\n\tprivate readonly _onDidChangeStorage: Emitter<IStorageChangeEvent> = this._register(new Emitter<IStorageChangeEvent>());\n\tget onDidChangeStorage(): Event<IStorageChangeEvent> { return this._onDidChangeStorage.event; }\n\n\tprivate readonly _onWillSaveState: Emitter<void> = this._register(new Emitter<void>());\n\tget onWillSaveState(): Event<void> { return this._onWillSaveState.event; }\n\n\tget items(): Map<string, string> { return this.storage.items; }\n\n\tprivate storage: IStorage;\n\n\tprivate initializePromise: Promise<void>;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\t// Until the storage has been initialized, it can only be in memory\n\t\tthis.storage = new Storage(new InMemoryStorageDatabase());\n\t}\n\n\tprivate get storagePath(): string {\n\t\tif (!!this.environmentService.extensionTestsLocationURI) {\n\t\t\treturn SQLiteStorageDatabase.IN_MEMORY_PATH; // no storage during extension tests!\n\t\t}\n\n\t\treturn join(this.environmentService.globalStorageHome, StorageMainService.STORAGE_NAME);\n\t}\n\n\tprivate createLogginOptions(): ISQLiteStorageDatabaseLoggingOptions {\n\t\treturn {\n\t\t\tlogTrace: (this.logService.getLevel() === LogLevel.Trace) ? msg => this.logService.trace(msg) : undefined,\n\t\t\tlogError: error => this.logService.error(error)\n\t\t} as ISQLiteStorageDatabaseLoggingOptions;\n\t}\n\n\tinitialize(): Promise<void> {\n\t\tif (!this.initializePromise) {\n\t\t\tthis.initializePromise = this.doInitialize();\n\t\t}\n\n\t\treturn this.initializePromise;\n\t}\n\n\tprivate doInitialize(): Promise<void> {\n\t\tconst useInMemoryStorage = this.storagePath === SQLiteStorageDatabase.IN_MEMORY_PATH;\n\n\t\tlet globalStorageExists: Promise<boolean>;\n\t\tif (useInMemoryStorage) {\n\t\t\tglobalStorageExists = Promise.resolve(true);\n\t\t} else {\n\t\t\tglobalStorageExists = exists(this.storagePath);\n\t\t}\n\n\t\treturn globalStorageExists.then(exists => {\n\t\t\tthis.storage.dispose();\n\t\t\tthis.storage = new Storage(new SQLiteStorageDatabase(this.storagePath, {\n\t\t\t\tlogging: this.createLogginOptions()\n\t\t\t}));\n\n\t\t\tthis._register(this.storage.onDidChangeStorage(key => this._onDidChangeStorage.fire({ key })));\n\n\t\t\treturn this.storage.init().then(() => {\n\n\t\t\t\t// Migrate storage if this is the first start and we are not using in-memory\n\t\t\t\tlet migrationPromise: Promise<void>;\n\t\t\t\tif (!useInMemoryStorage && !exists) {\n\t\t\t\t\t// TODO@Ben remove global storage migration and move Storage creation back to ctor\n\t\t\t\t\tmigrationPromise = this.migrateGlobalStorage().then(() => this.logService.info('[storage] migrated global storage'), error => this.logService.error(`[storage] migration error ${error}`));\n\t\t\t\t} else {\n\t\t\t\t\tmigrationPromise = Promise.resolve();\n\t\t\t\t}\n\n\t\t\t\treturn migrationPromise;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate migrateGlobalStorage(): Promise<void> {\n\t\tthis.logService.info('[storage] migrating global storage from localStorage into SQLite');\n\n\t\tconst localStorageDBBackup = join(this.environmentService.userDataPath, 'Local Storage', 'file__0.vscmig');\n\n\t\treturn exists(localStorageDBBackup).then(exists => {\n\t\t\tif (!exists) {\n\t\t\t\treturn Promise.resolve(); // return if there is no DB to migrate from\n\t\t\t}\n\n\t\t\treturn readdir(this.environmentService.extensionsPath).then(extensions => {\n\t\t\t\tconst supportedKeys = new Map<string, string>();\n\t\t\t\t[\n\t\t\t\t\t'editorFontInfo',\n\t\t\t\t\t'peekViewLayout',\n\t\t\t\t\t'expandSuggestionDocs',\n\t\t\t\t\t'extensionsIdentifiers/disabled',\n\t\t\t\t\t'integrityService',\n\t\t\t\t\t'telemetry.lastSessionDate',\n\t\t\t\t\t'telemetry.instanceId',\n\t\t\t\t\t'telemetry.firstSessionDate',\n\t\t\t\t\t'workbench.sidebar.width',\n\t\t\t\t\t'workbench.panel.width',\n\t\t\t\t\t'workbench.panel.height',\n\t\t\t\t\t'workbench.panel.sizeBeforeMaximized',\n\t\t\t\t\t'workbench.activity.placeholderViewlets',\n\t\t\t\t\t'colorThemeData',\n\t\t\t\t\t'iconThemeData',\n\t\t\t\t\t'workbench.telemetryOptOutShown',\n\t\t\t\t\t'workbench.hide.welcome',\n\t\t\t\t\t'releaseNotes/lastVersion',\n\t\t\t\t\t'debug.actionswidgetposition',\n\t\t\t\t\t'debug.actionswidgety',\n\t\t\t\t\t'editor.neverPromptForLargeFiles',\n\t\t\t\t\t'menubar/electronFixRecommended',\n\t\t\t\t\t'learnMoreDirtyWriteError',\n\t\t\t\t\t'extensions.ignoredAutoUpdateExtension',\n\t\t\t\t\t'askToInstallRemoteServerExtension',\n\t\t\t\t\t'hasNotifiedOfSettingsAutosave',\n\t\t\t\t\t'commandPalette.mru.cache',\n\t\t\t\t\t'commandPalette.mru.counter',\n\t\t\t\t\t'parts-splash-data',\n\t\t\t\t\t'terminal.integrated.neverMeasureRenderTime',\n\t\t\t\t\t'terminal.integrated.neverSuggestSelectWindowsShell',\n\t\t\t\t\t'memento/workbench.parts.editor',\n\t\t\t\t\t'memento/workbench.view.search',\n\t\t\t\t\t'langugage.update.donotask',\n\t\t\t\t\t'extensionsAssistant/languagePackSuggestionIgnore',\n\t\t\t\t\t'workbench.panel.pinnedPanels',\n\t\t\t\t\t'workbench.activity.pinnedViewlets',\n\t\t\t\t\t'extensionsAssistant/ignored_recommendations',\n\t\t\t\t\t'extensionsAssistant/recommendations',\n\t\t\t\t\t'extensionsAssistant/importantRecommendationsIgnore',\n\t\t\t\t\t'extensionsAssistant/fileExtensionsSuggestionIgnore',\n\t\t\t\t\t'nps/skipVersion',\n\t\t\t\t\t'nps/lastSessionDate',\n\t\t\t\t\t'nps/sessionCount',\n\t\t\t\t\t'nps/isCandidate',\n\t\t\t\t\t'allExperiments',\n\t\t\t\t\t'currentOrPreviouslyRunExperiments',\n\t\t\t\t\t'update/win32-64bits',\n\t\t\t\t\t'update/win32-fast-updates',\n\t\t\t\t\t'update/lastKnownVersion',\n\t\t\t\t\t'update/updateNotificationTime'\n\t\t\t\t].forEach(key => supportedKeys.set(key.toLowerCase(), key));\n\n\t\t\t\t// https://github.com/Microsoft/vscode/issues/68468\n\t\t\t\tconst wellKnownPublishers = ['Microsoft', 'GitHub'];\n\t\t\t\tconst wellKnownExtensions = ['ms-vscode.Go', 'WallabyJs.quokka-vscode', 'Telerik.nativescript', 'Shan.code-settings-sync', 'ritwickdey.LiveServer', 'PKief.material-icon-theme', 'PeterJausovec.vscode-docker', 'ms-vscode.PowerShell', 'LaurentTreguier.vscode-simple-icons', 'KnisterPeter.vscode-github', 'DotJoshJohnson.xml', 'Dart-Code.dart-code', 'alefragnani.Bookmarks'];\n\n\t\t\t\t// Support extension storage as well (always the ID of the extension)\n\t\t\t\textensions.forEach(extension => {\n\t\t\t\t\tlet extensionId: string;\n\t\t\t\t\tif (extension.indexOf('-') >= 0) {\n\t\t\t\t\t\textensionId = extension.substring(0, extension.lastIndexOf('-')); // convert \"author.extension-0.2.5\" => \"author.extension\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\textensionId = extension;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (extensionId) {\n\t\t\t\t\t\tfor (let i = 0; i < wellKnownPublishers.length; i++) {\n\t\t\t\t\t\t\tconst publisher = wellKnownPublishers[i];\n\t\t\t\t\t\t\tif (startsWith(extensionId, `${publisher.toLowerCase()}.`)) {\n\t\t\t\t\t\t\t\textensionId = `${publisher}${extensionId.substr(publisher.length)}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let j = 0; j < wellKnownExtensions.length; j++) {\n\t\t\t\t\t\t\tconst wellKnownExtension = wellKnownExtensions[j];\n\t\t\t\t\t\t\tif (extensionId === wellKnownExtension.toLowerCase()) {\n\t\t\t\t\t\t\t\textensionId = wellKnownExtension;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsupportedKeys.set(extensionId.toLowerCase(), extensionId);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn import('vscode-sqlite3').then(sqlite3 => {\n\n\t\t\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\t\t\tconst handleSuffixKey = (row, key: string, suffix: string) => {\n\t\t\t\t\t\t\tif (endsWith(key, suffix.toLowerCase())) {\n\t\t\t\t\t\t\t\tconst value: string = row.value.toString('utf16le');\n\t\t\t\t\t\t\t\tconst normalizedKey = key.substring(0, key.length - suffix.length) + suffix;\n\n\t\t\t\t\t\t\t\tthis.store(normalizedKey, value);\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst db: Database = new (sqlite3.Database)(localStorageDBBackup, error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tif (db) {\n\t\t\t\t\t\t\t\t\tdb.close();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdb.all('SELECT key, value FROM ItemTable', (error, rows) => {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tdb.close();\n\n\t\t\t\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\trows.forEach(row => {\n\t\t\t\t\t\t\t\t\t\tlet key: string = row.key;\n\t\t\t\t\t\t\t\t\t\tif (key.indexOf('storage://global/') !== 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn; // not a global key\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// convert storage://global/colorthemedata => colorthemedata\n\t\t\t\t\t\t\t\t\t\tkey = key.substr('storage://global/'.length);\n\n\t\t\t\t\t\t\t\t\t\tconst supportedKey = supportedKeys.get(key);\n\t\t\t\t\t\t\t\t\t\tif (supportedKey) {\n\t\t\t\t\t\t\t\t\t\t\tconst value: string = row.value.toString('utf16le');\n\n\t\t\t\t\t\t\t\t\t\t\tthis.store(supportedKey, value);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// dynamic values\n\t\t\t\t\t\t\t\t\t\telse if (\n\t\t\t\t\t\t\t\t\t\t\tendsWith(key, '.hidden') ||\n\t\t\t\t\t\t\t\t\t\t\tstartsWith(key, 'experiments.')\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tconst value: string = row.value.toString('utf16le');\n\n\t\t\t\t\t\t\t\t\t\t\tthis.store(key, value);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// fix lowercased \".sessionCount\"\n\t\t\t\t\t\t\t\t\t\telse if (handleSuffixKey(row, key, '.sessionCount')) { }\n\n\t\t\t\t\t\t\t\t\t\t// fix lowercased \".lastSessionDate\"\n\t\t\t\t\t\t\t\t\t\telse if (handleSuffixKey(row, key, '.lastSessionDate')) { }\n\n\t\t\t\t\t\t\t\t\t\t// fix lowercased \".skipVersion\"\n\t\t\t\t\t\t\t\t\t\telse if (handleSuffixKey(row, key, '.skipVersion')) { }\n\n\t\t\t\t\t\t\t\t\t\t// fix lowercased \".isCandidate\"\n\t\t\t\t\t\t\t\t\t\telse if (handleSuffixKey(row, key, '.isCandidate')) { }\n\n\t\t\t\t\t\t\t\t\t\t// fix lowercased \".editedCount\"\n\t\t\t\t\t\t\t\t\t\telse if (handleSuffixKey(row, key, '.editedCount')) { }\n\n\t\t\t\t\t\t\t\t\t\t// fix lowercased \".editedDate\"\n\t\t\t\t\t\t\t\t\t\telse if (handleSuffixKey(row, key, '.editedDate')) { }\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tdb.close();\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\tdb.close();\n\n\t\t\t\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\treturn this.storage.get(key, fallbackValue);\n\t}\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined {\n\t\treturn this.storage.getBoolean(key, fallbackValue);\n\t}\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined {\n\t\treturn this.storage.getNumber(key, fallbackValue);\n\t}\n\n\tstore(key: string, value: any): Promise<void> {\n\t\treturn this.storage.set(key, value);\n\t}\n\n\tremove(key: string): Promise<void> {\n\t\treturn this.storage.delete(key);\n\t}\n\n\tclose(): Promise<void> {\n\n\t\t// Signal as event so that clients can still store data\n\t\tthis._onWillSaveState.fire();\n\n\t\t// Do it\n\t\treturn this.storage.close();\n\t}\n\n\tcheckIntegrity(full: boolean): Promise<string> {\n\t\treturn this.storage.checkIntegrity(full);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\t_serviceBrand: any;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\n\tprivate _disposables: IDisposable[] = [];\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\t/* __GDPR__\n\t\t\t\t\"optInStatus\" : {\n\t\t\t\t\t\"optIn\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"BusinessInsight\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.publicLog('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"machineIdFallback\" : {\n\t\t\t\t\t\t\"usingFallbackGuid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"BusinessInsight\", \"isMeasurement\": true }\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.publicLog('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn;\n\t}\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this._commonProperties.then(values => {\n\t\t\t// well known properties\n\t\t\tlet sessionId = values['sessionID'];\n\t\t\tlet instanceId = values['common.instanceId'];\n\t\t\tlet machineId = values['common.machineId'];\n\n\t\t\treturn { sessionId, instanceId, machineId };\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this._userOptIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { IKeybindingService, KeybindingSource } from 'vs/platform/keybinding/common/keybinding';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tisOptedIn: true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tdispose(): Promise<any> | undefined;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tdispose: () => Promise.all(appenders.map(a => a.dispose()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, dispose: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tdispose(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\n/**\n * Only add settings that cannot contain any personal/private information of users (PII).\n */\nconst configurationValueWhitelist = [\n\t'editor.fontFamily',\n\t'editor.fontWeight',\n\t'editor.fontSize',\n\t'editor.lineHeight',\n\t'editor.letterSpacing',\n\t'editor.lineNumbers',\n\t'editor.rulers',\n\t'editor.wordSeparators',\n\t'editor.tabSize',\n\t'editor.indentSize',\n\t'editor.insertSpaces',\n\t'editor.detectIndentation',\n\t'editor.roundedSelection',\n\t'editor.scrollBeyondLastLine',\n\t'editor.minimap.enabled',\n\t'editor.minimap.side',\n\t'editor.minimap.renderCharacters',\n\t'editor.minimap.maxColumn',\n\t'editor.find.seedSearchStringFromSelection',\n\t'editor.find.autoFindInSelection',\n\t'editor.wordWrap',\n\t'editor.wordWrapColumn',\n\t'editor.wrappingIndent',\n\t'editor.mouseWheelScrollSensitivity',\n\t'editor.multiCursorModifier',\n\t'editor.quickSuggestions',\n\t'editor.quickSuggestionsDelay',\n\t'editor.parameterHints.enabled',\n\t'editor.parameterHints.cycle',\n\t'editor.autoClosingBrackets',\n\t'editor.autoClosingQuotes',\n\t'editor.autoSurround',\n\t'editor.autoIndent',\n\t'editor.formatOnType',\n\t'editor.formatOnPaste',\n\t'editor.suggestOnTriggerCharacters',\n\t'editor.acceptSuggestionOnEnter',\n\t'editor.acceptSuggestionOnCommitCharacter',\n\t'editor.snippetSuggestions',\n\t'editor.emptySelectionClipboard',\n\t'editor.wordBasedSuggestions',\n\t'editor.suggestSelection',\n\t'editor.suggestFontSize',\n\t'editor.suggestLineHeight',\n\t'editor.tabCompletion',\n\t'editor.selectionHighlight',\n\t'editor.occurrencesHighlight',\n\t'editor.overviewRulerLanes',\n\t'editor.overviewRulerBorder',\n\t'editor.cursorBlinking',\n\t'editor.cursorSmoothCaretAnimation',\n\t'editor.cursorStyle',\n\t'editor.mouseWheelZoom',\n\t'editor.fontLigatures',\n\t'editor.hideCursorInOverviewRuler',\n\t'editor.renderWhitespace',\n\t'editor.renderControlCharacters',\n\t'editor.renderIndentGuides',\n\t'editor.renderLineHighlight',\n\t'editor.codeLens',\n\t'editor.folding',\n\t'editor.showFoldingControls',\n\t'editor.matchBrackets',\n\t'editor.glyphMargin',\n\t'editor.useTabStops',\n\t'editor.trimAutoWhitespace',\n\t'editor.stablePeek',\n\t'editor.dragAndDrop',\n\t'editor.formatOnSave',\n\t'editor.colorDecorators',\n\n\t'breadcrumbs.enabled',\n\t'breadcrumbs.filePath',\n\t'breadcrumbs.symbolPath',\n\t'breadcrumbs.symbolSortOrder',\n\t'breadcrumbs.useQuickPick',\n\t'explorer.openEditors.visible',\n\t'extensions.autoUpdate',\n\t'files.associations',\n\t'files.autoGuessEncoding',\n\t'files.autoSave',\n\t'files.autoSaveDelay',\n\t'files.encoding',\n\t'files.eol',\n\t'files.hotExit',\n\t'files.trimTrailingWhitespace',\n\t'git.confirmSync',\n\t'git.enabled',\n\t'http.proxyStrictSSL',\n\t'javascript.validate.enable',\n\t'php.builtInCompletions.enable',\n\t'php.validate.enable',\n\t'php.validate.run',\n\t'terminal.integrated.fontFamily',\n\t'window.openFilesInNewWindow',\n\t'window.restoreWindows',\n\t'window.zoomLevel',\n\t'workbench.editor.enablePreview',\n\t'workbench.editor.enablePreviewFromQuickOpen',\n\t'workbench.editor.showTabs',\n\t'workbench.editor.highlightModifiedTabs',\n\t'workbench.editor.swipeToNavigate',\n\t'workbench.sideBar.location',\n\t'workbench.startupEditor',\n\t'workbench.statusBar.visible',\n\t'workbench.welcome.enabled',\n];\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfiguration\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationKeys\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfigurationValues\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationValues\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfigurationValues', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationValues: flattenValues(event.sourceConfig, configurationValueWhitelist)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function keybindingsTelemetry(telemetryService: ITelemetryService, keybindingService: IKeybindingService): IDisposable {\n\treturn keybindingService.onDidUpdateKeybindings(event => {\n\t\tif (event.source === KeybindingSource.User && event.keybindings) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateKeybindings\" : {\n\t\t\t\t\t\"bindings\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateKeybindings', {\n\t\t\t\tbindings: event.keybindings.map(binding => ({\n\t\t\t\t\tkey: binding.key,\n\t\t\t\t\tcommand: binding.command,\n\t\t\t\t\twhen: binding.when,\n\t\t\t\t\targs: binding.args ? true : undefined\n\t\t\t\t}))\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction flattenKeys(value: Object): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: Object): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n\nfunction flattenValues(value: Object, keys: string[]): { [key: string]: any }[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\n\treturn keys.reduce((array, key) => {\n\t\tconst v = key.split('.')\n\t\t\t.reduce((tmp, k) => tmp && typeof tmp === 'object' ? tmp[k] : undefined, value);\n\t\tif (typeof v !== 'undefined') {\n\t\t\tarray.push({ [key]: v });\n\t\t}\n\t\treturn array;\n\t}, <{ [key: string]: any }[]>[]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport function resolveCommonProperties(commit: string | undefined, version: string | undefined, machineId: string | undefined, installSourcePath: string): Promise<{ [name: string]: string | undefined; }> {\n\tconst result: { [name: string]: string | undefined; } = Object.create(null);\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\treturn readFile(installSourcePath, 'utf8').then(contents => {\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\n\t\treturn result;\n\t}, error => {\n\t\treturn result;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ITelemetryLog {\n\teventName: string;\n\tdata?: any;\n}\n\nexport class TelemetryAppenderChannel implements IServerChannel {\n\n\tconstructor(private appender: ITelemetryAppender) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, { eventName, data }: ITelemetryLog): Promise<any> {\n\t\tthis.appender.log(eventName, data);\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class TelemetryAppenderClient implements ITelemetryAppender {\n\n\tconstructor(private channel: IChannel) { }\n\n\tlog(eventName: string, data?: any): any {\n\t\tthis.channel.call('log', { eventName, data })\n\t\t\t.then(undefined, err => `Failed to log telemetry: ${console.warn(err)}`);\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tdispose(): any {\n\t\t// TODO\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\n\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\n\nexport function resolveWorkbenchCommonProperties(storageService: IStorageService, commit: string | undefined, version: string | undefined, machineId: string, installSourcePath: string): Promise<{ [name: string]: string | undefined }> {\n\treturn resolveCommonProperties(commit, version, machineId, installSourcePath).then(result => {\n\t\tconst instanceId = storageService.get(instanceStorageKey, StorageScope.GLOBAL)!;\n\t\tconst firstSessionDate = storageService.get(firstSessionDateStorageKey, StorageScope.GLOBAL)!;\n\t\tconst lastSessionDate = storageService.get(lastSessionDateStorageKey, StorageScope.GLOBAL)!;\n\n\t\t// __GDPR__COMMON__ \"common.version.shell\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\t\tresult['common.version.shell'] = process.versions && process.versions['electron'];\n\t\t// __GDPR__COMMON__ \"common.version.renderer\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\t\tresult['common.version.renderer'] = process.versions && process.versions['chrome'];\n\t\t// __GDPR__COMMON__ \"common.firstSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.firstSessionDate'] = firstSessionDate;\n\t\t// __GDPR__COMMON__ \"common.lastSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.lastSessionDate'] = lastSessionDate || '';\n\t\t// __GDPR__COMMON__ \"common.isNewSession\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.isNewSession'] = !lastSessionDate ? '1' : '0';\n\t\t// __GDPR__COMMON__ \"common.instanceId\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.instanceId'] = instanceId;\n\n\t\treturn result;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { StorageMainService, IStorageChangeEvent } from 'vs/platform/storage/node/storageMainService';\nimport { IUpdateRequest, IStorageDatabase, IStorageItemsChangeEvent } from 'vs/base/node/storage';\nimport { mapToSerializable, serializableToMap, values } from 'vs/base/common/map';\nimport { Disposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { instanceStorageKey, firstSessionDateStorageKey, lastSessionDateStorageKey, currentSessionDateStorageKey } from 'vs/platform/telemetry/node/workbenchCommonProperties';\n\ntype Key = string;\ntype Value = string;\ntype Item = [Key, Value];\n\ninterface ISerializableUpdateRequest {\n\tinsert?: Item[];\n\tdelete?: Key[];\n}\n\ninterface ISerializableItemsChangeEvent {\n\titems: Item[];\n}\n\nexport class GlobalStorageDatabaseChannel extends Disposable implements IServerChannel {\n\n\tprivate static STORAGE_CHANGE_DEBOUNCE_TIME = 100;\n\n\tprivate readonly _onDidChangeItems: Emitter<ISerializableItemsChangeEvent> = this._register(new Emitter<ISerializableItemsChangeEvent>());\n\tget onDidChangeItems(): Event<ISerializableItemsChangeEvent> { return this._onDidChangeItems.event; }\n\n\tprivate whenReady: Promise<void>;\n\n\tconstructor(\n\t\tprivate logService: ILogService,\n\t\tprivate storageMainService: StorageMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.whenReady = this.init();\n\t}\n\n\tprivate init(): Promise<void> {\n\t\treturn this.storageMainService.initialize().then(undefined, error => {\n\t\t\tonUnexpectedError(error);\n\t\t\tthis.logService.error(error);\n\t\t}).then(() => {\n\n\t\t\t// Apply global telemetry values as part of the initialization\n\t\t\t// These are global across all windows and thereby should be\n\t\t\t// written from the main process once.\n\t\t\tthis.initTelemetry();\n\n\t\t\t// Setup storage change listeners\n\t\t\tthis.registerListeners();\n\t\t});\n\t}\n\n\tprivate initTelemetry(): void {\n\t\tconst instanceId = this.storageMainService.get(instanceStorageKey, undefined);\n\t\tif (instanceId === undefined) {\n\t\t\tthis.storageMainService.store(instanceStorageKey, generateUuid());\n\t\t}\n\n\t\tconst firstSessionDate = this.storageMainService.get(firstSessionDateStorageKey, undefined);\n\t\tif (firstSessionDate === undefined) {\n\t\t\tthis.storageMainService.store(firstSessionDateStorageKey, new Date().toUTCString());\n\t\t}\n\n\t\tconst lastSessionDate = this.storageMainService.get(currentSessionDateStorageKey, undefined); // previous session date was the \"current\" one at that time\n\t\tconst currentSessionDate = new Date().toUTCString(); // current session date is \"now\"\n\t\tthis.storageMainService.store(lastSessionDateStorageKey, typeof lastSessionDate === 'undefined' ? null : lastSessionDate);\n\t\tthis.storageMainService.store(currentSessionDateStorageKey, currentSessionDate);\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Listen for changes in global storage to send to listeners\n\t\t// that are listening. Use a debouncer to reduce IPC traffic.\n\t\tthis._register(Event.debounce(this.storageMainService.onDidChangeStorage, (prev: IStorageChangeEvent[], cur: IStorageChangeEvent) => {\n\t\t\tif (!prev) {\n\t\t\t\tprev = [cur];\n\t\t\t} else {\n\t\t\t\tprev.push(cur);\n\t\t\t}\n\n\t\t\treturn prev;\n\t\t}, GlobalStorageDatabaseChannel.STORAGE_CHANGE_DEBOUNCE_TIME)(events => {\n\t\t\tif (events.length) {\n\t\t\t\tthis._onDidChangeItems.fire(this.serializeEvents(events));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate serializeEvents(events: IStorageChangeEvent[]): ISerializableItemsChangeEvent {\n\t\tconst items = new Map<Key, Value>();\n\t\tevents.forEach(event => items.set(event.key, this.storageMainService.get(event.key)));\n\n\t\treturn { items: mapToSerializable(items) } as ISerializableItemsChangeEvent;\n\t}\n\n\tlisten(_, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeItems': return this.onDidChangeItems;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getItems': {\n\t\t\t\treturn this.whenReady.then(() => mapToSerializable(this.storageMainService.items));\n\t\t\t}\n\n\t\t\tcase 'updateItems': {\n\t\t\t\treturn this.whenReady.then(() => {\n\t\t\t\t\tconst items = arg as ISerializableUpdateRequest;\n\t\t\t\t\tif (items.insert) {\n\t\t\t\t\t\tfor (const [key, value] of items.insert) {\n\t\t\t\t\t\t\tthis.storageMainService.store(key, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (items.delete) {\n\t\t\t\t\t\titems.delete.forEach(key => this.storageMainService.remove(key));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcase 'checkIntegrity': {\n\t\t\t\treturn this.whenReady.then(() => this.storageMainService.checkIntegrity(arg));\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class GlobalStorageDatabaseChannelClient extends Disposable implements IStorageDatabase {\n\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidChangeItemsExternal: Emitter<IStorageItemsChangeEvent> = this._register(new Emitter<IStorageItemsChangeEvent>());\n\tget onDidChangeItemsExternal(): Event<IStorageItemsChangeEvent> { return this._onDidChangeItemsExternal.event; }\n\n\tprivate onDidChangeItemsOnMainListener: IDisposable;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.onDidChangeItemsOnMainListener = this.channel.listen('onDidChangeItems')((e: ISerializableItemsChangeEvent) => this.onDidChangeItemsOnMain(e));\n\t}\n\n\tprivate onDidChangeItemsOnMain(e: ISerializableItemsChangeEvent): void {\n\t\tif (Array.isArray(e.items)) {\n\t\t\tthis._onDidChangeItemsExternal.fire({ items: serializableToMap(e.items) });\n\t\t}\n\t}\n\n\tgetItems(): Promise<Map<string, string>> {\n\t\treturn this.channel.call('getItems').then((data: Item[]) => serializableToMap(data));\n\t}\n\n\tupdateItems(request: IUpdateRequest): Promise<void> {\n\t\tlet updateCount = 0;\n\t\tconst serializableRequest: ISerializableUpdateRequest = Object.create(null);\n\n\t\tif (request.insert) {\n\t\t\tserializableRequest.insert = mapToSerializable(request.insert);\n\t\t\tupdateCount += request.insert.size;\n\t\t}\n\n\t\tif (request.delete) {\n\t\t\tserializableRequest.delete = values(request.delete);\n\t\t\tupdateCount += request.delete.size;\n\t\t}\n\n\t\tif (updateCount === 0) {\n\t\t\treturn Promise.resolve(); // prevent work if not needed\n\t\t}\n\n\t\treturn this.channel.call('updateItems', serializableRequest);\n\t}\n\n\tcheckIntegrity(full: boolean): Promise<string> {\n\t\treturn this.channel.call('checkIntegrity', full);\n\t}\n\n\tclose(): Promise<void> {\n\n\t\t// when we are about to close, we start to ignore main-side changes since we close anyway\n\t\tthis.onDidChangeItemsOnMainListener = dispose(this.onDidChangeItemsOnMainListener);\n\n\t\treturn Promise.resolve(); // global storage is closed on the main side\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.onDidChangeItemsOnMainListener = dispose(this.onDidChangeItemsOnMainListener);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IUpdate {\n\tversion: string;\n\tproductVersion: string;\n\tdate?: Date;\n\treleaseNotes?: string;\n\tsupportsFastUpdate?: boolean;\n\turl?: string;\n\thash?: string;\n}\n\n/**\n * Updates are run as a state machine:\n *\n *      Uninitialized\n *           ↓\n *          Idle\n *          ↓  ↑\n *   Checking for Updates  →  Available for Download\n *         ↓\n *     Downloading  →   Ready\n *         ↓               ↑\n *     Downloaded   →  Updating\n *\n * Available: There is an update available for download (linux).\n * Ready: Code will be updated as soon as it restarts (win32, darwin).\n * Donwloaded: There is an update ready to be installed in the background (win32).\n */\n\nexport const enum StateType {\n\tUninitialized = 'uninitialized',\n\tIdle = 'idle',\n\tCheckingForUpdates = 'checking for updates',\n\tAvailableForDownload = 'available for download',\n\tDownloading = 'downloading',\n\tDownloaded = 'downloaded',\n\tUpdating = 'updating',\n\tReady = 'ready',\n}\n\nexport const enum UpdateType {\n\tSetup,\n\tArchive,\n\tSnap\n}\n\nexport type Uninitialized = { type: StateType.Uninitialized };\nexport type Idle = { type: StateType.Idle, updateType: UpdateType, error?: string };\nexport type CheckingForUpdates = { type: StateType.CheckingForUpdates, context: any };\nexport type AvailableForDownload = { type: StateType.AvailableForDownload, update: IUpdate };\nexport type Downloading = { type: StateType.Downloading, update: IUpdate };\nexport type Downloaded = { type: StateType.Downloaded, update: IUpdate };\nexport type Updating = { type: StateType.Updating, update: IUpdate };\nexport type Ready = { type: StateType.Ready, update: IUpdate };\n\nexport type State = Uninitialized | Idle | CheckingForUpdates | AvailableForDownload | Downloading | Downloaded | Updating | Ready;\n\nexport const State = {\n\tUninitialized: { type: StateType.Uninitialized } as Uninitialized,\n\tIdle: (updateType: UpdateType, error?: string) => ({ type: StateType.Idle, updateType, error }) as Idle,\n\tCheckingForUpdates: (context: any) => ({ type: StateType.CheckingForUpdates, context } as CheckingForUpdates),\n\tAvailableForDownload: (update: IUpdate) => ({ type: StateType.AvailableForDownload, update } as AvailableForDownload),\n\tDownloading: (update: IUpdate) => ({ type: StateType.Downloading, update } as Downloading),\n\tDownloaded: (update: IUpdate) => ({ type: StateType.Downloaded, update } as Downloaded),\n\tUpdating: (update: IUpdate) => ({ type: StateType.Updating, update } as Updating),\n\tReady: (update: IUpdate) => ({ type: StateType.Ready, update } as Ready),\n};\n\nexport interface IAutoUpdater extends Event.NodeEventEmitter {\n\tsetFeedURL(url: string): void;\n\tcheckForUpdates(): void;\n\tapplyUpdate?(): Promise<void>;\n\tquitAndInstall(): void;\n}\n\nexport const IUpdateService = createDecorator<IUpdateService>('updateService');\n\nexport interface IUpdateService {\n\t_serviceBrand: any;\n\n\treadonly onStateChange: Event<State>;\n\treadonly state: State;\n\n\tcheckForUpdates(context: any): Promise<void>;\n\tdownloadUpdate(): Promise<void>;\n\tapplyUpdate(): Promise<void>;\n\tquitAndInstall(): Promise<void>;\n\n\tisLatestVersion(): Promise<boolean | undefined>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { timeout } from 'vs/base/common/async';\nimport { IConfigurationService, getMigratedSettingValue } from 'vs/platform/configuration/common/configuration';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport product from 'vs/platform/product/node/product';\nimport { IUpdateService, State, StateType, AvailableForDownload, UpdateType } from 'vs/platform/update/common/update';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport function createUpdateURL(platform: string, quality: string): string {\n\treturn `${product.updateUrl}/api/update/${platform}/${quality}/${product.commit}`;\n}\n\nexport abstract class AbstractUpdateService implements IUpdateService {\n\n\t_serviceBrand: any;\n\n\tprotected readonly url: string | undefined;\n\n\tprivate _state: State = State.Uninitialized;\n\n\tprivate _onStateChange = new Emitter<State>();\n\tget onStateChange(): Event<State> { return this._onStateChange.event; }\n\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\n\tprotected setState(state: State): void {\n\t\tthis.logService.info('update#setState', state.type);\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IRequestService protected requestService: IRequestService,\n\t\t@ILogService protected logService: ILogService,\n\t) {\n\t\tif (this.environmentService.disableUpdates) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled by the environment');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!product.updateUrl || !product.commit) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled as there is no update URL');\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateMode = getMigratedSettingValue<string>(this.configurationService, 'update.mode', 'update.channel');\n\t\tconst quality = this.getProductQuality(updateMode);\n\n\t\tif (!quality) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled by user preference');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.url = this.buildUpdateFeedUrl(quality);\n\t\tif (!this.url) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled as the update URL is badly formed');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.Idle(this.getUpdateType()));\n\n\t\tif (updateMode === 'manual') {\n\t\t\tthis.logService.info('update#ctor - manual checks only; automatic updates are disabled by user preference');\n\t\t\treturn;\n\t\t}\n\n\t\t// Start checking for updates after 30 seconds\n\t\tthis.scheduleCheckForUpdates(30 * 1000).then(undefined, err => this.logService.error(err));\n\t}\n\n\tprivate getProductQuality(updateMode: string): string | undefined {\n\t\treturn updateMode === 'none' ? undefined : product.quality;\n\t}\n\n\tprivate scheduleCheckForUpdates(delay = 60 * 60 * 1000): Promise<void> {\n\t\treturn timeout(delay)\n\t\t\t.then(() => this.checkForUpdates(null))\n\t\t\t.then(() => {\n\t\t\t\t// Check again after 1 hour\n\t\t\t\treturn this.scheduleCheckForUpdates(60 * 60 * 1000);\n\t\t\t});\n\t}\n\n\tasync checkForUpdates(context: any): Promise<void> {\n\t\tthis.logService.trace('update#checkForUpdates, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.doCheckForUpdates(context);\n\t}\n\n\tasync downloadUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#downloadUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.AvailableForDownload) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doDownloadUpdate(this.state);\n\t}\n\n\tprotected async doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync applyUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#applyUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Downloaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doApplyUpdate();\n\t}\n\n\tprotected async doApplyUpdate(): Promise<void> {\n\t\t// noop\n\t}\n\n\tquitAndInstall(): Promise<void> {\n\t\tthis.logService.trace('update#quitAndInstall, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Ready) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.logService.trace('update#quitAndInstall(): before lifecycle quit()');\n\n\t\tthis.lifecycleService.quit(true /* from update */).then(vetod => {\n\t\t\tthis.logService.trace(`update#quitAndInstall(): after lifecycle quit() with veto: ${vetod}`);\n\t\t\tif (vetod) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\t\t\tthis.doQuitAndInstall();\n\t\t});\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tisLatestVersion(): Promise<boolean | undefined> {\n\t\tif (!this.url) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\treturn this.requestService.request({ url: this.url }, CancellationToken.None).then(context => {\n\t\t\t// The update server replies with 204 (No Content) when no\n\t\t\t// update is available - that's all we want to know.\n\t\t\tif (context.res.statusCode === 204) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected getUpdateType(): UpdateType {\n\t\treturn UpdateType.Archive;\n\t}\n\n\tprotected doQuitAndInstall(): void {\n\t\t// noop\n\t}\n\n\tprotected abstract buildUpdateFeedUrl(quality: string): string | undefined;\n\tprotected abstract doCheckForUpdates(context: any): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as electron from 'electron';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { memoize } from 'vs/base/common/decorators';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { State, IUpdate, StateType, UpdateType } from 'vs/platform/update/common/update';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { AbstractUpdateService, createUpdateURL } from 'vs/platform/update/electron-main/abstractUpdateService';\nimport { IRequestService } from 'vs/platform/request/node/request';\n\nexport class DarwinUpdateService extends AbstractUpdateService {\n\n\t_serviceBrand: any;\n\n\tprivate disposables: IDisposable[] = [];\n\n\t@memoize private get onRawError(): Event<string> { return Event.fromNodeEventEmitter(electron.autoUpdater, 'error', (_, message) => message); }\n\t@memoize private get onRawUpdateNotAvailable(): Event<void> { return Event.fromNodeEventEmitter<void>(electron.autoUpdater, 'update-not-available'); }\n\t@memoize private get onRawUpdateAvailable(): Event<IUpdate> { return Event.fromNodeEventEmitter(electron.autoUpdater, 'update-available', (_, url, version) => ({ url, version, productVersion: version })); }\n\t@memoize private get onRawUpdateDownloaded(): Event<IUpdate> { return Event.fromNodeEventEmitter(electron.autoUpdater, 'update-downloaded', (_, releaseNotes, version, date) => ({ releaseNotes, version, productVersion: version, date })); }\n\n\tconstructor(\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(lifecycleService, configurationService, environmentService, requestService, logService);\n\t\tthis.onRawError(this.onError, this, this.disposables);\n\t\tthis.onRawUpdateAvailable(this.onUpdateAvailable, this, this.disposables);\n\t\tthis.onRawUpdateDownloaded(this.onUpdateDownloaded, this, this.disposables);\n\t\tthis.onRawUpdateNotAvailable(this.onUpdateNotAvailable, this, this.disposables);\n\t}\n\n\tprivate onError(err: string): void {\n\t\tthis.logService.error('UpdateService error:', err);\n\n\t\t// only show message when explicitly checking for updates\n\t\tconst shouldShowMessage = this.state.type === StateType.CheckingForUpdates ? !!this.state.context : true;\n\t\tconst message: string | undefined = shouldShowMessage ? err : undefined;\n\t\tthis.setState(State.Idle(UpdateType.Archive, message));\n\t}\n\n\tprotected buildUpdateFeedUrl(quality: string): string | undefined {\n\t\tconst url = createUpdateURL('darwin', quality);\n\t\ttry {\n\t\t\telectron.autoUpdater.setFeedURL({ url });\n\t\t} catch (e) {\n\t\t\t// application is very likely not signed\n\t\t\tthis.logService.error('Failed to set update feed URL', e);\n\t\t\treturn undefined;\n\t\t}\n\t\treturn url;\n\t}\n\n\tprotected doCheckForUpdates(context: any): void {\n\t\tthis.setState(State.CheckingForUpdates(context));\n\t\telectron.autoUpdater.checkForUpdates();\n\t}\n\n\tprivate onUpdateAvailable(update: IUpdate): void {\n\t\tif (this.state.type !== StateType.CheckingForUpdates) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.Downloading(update));\n\t}\n\n\tprivate onUpdateDownloaded(update: IUpdate): void {\n\t\tif (this.state.type !== StateType.Downloading) {\n\t\t\treturn;\n\t\t}\n\n\t\t/* __GDPR__\n\t\t\t\"update:downloaded\" : {\n\t\t\t\t\"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('update:downloaded', { version: update.version });\n\n\t\tthis.setState(State.Ready(update));\n\t}\n\n\tprivate onUpdateNotAvailable(): void {\n\t\tif (this.state.type !== StateType.CheckingForUpdates) {\n\t\t\treturn;\n\t\t}\n\n\t\t/* __GDPR__\n\t\t\t\t\"update:notAvailable\" : {\n\t\t\t\t\t\"explicit\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\tthis.telemetryService.publicLog('update:notAvailable', { explicit: !!this.state.context });\n\n\t\tthis.setState(State.Idle(UpdateType.Archive));\n\t}\n\n\tprotected doQuitAndInstall(): void {\n\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\t\telectron.autoUpdater.quitAndInstall();\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { timeout } from 'vs/base/common/async';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { IUpdateService, State, StateType, AvailableForDownload, UpdateType } from 'vs/platform/update/common/update';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport * as path from 'vs/base/common/path';\nimport { realpath, watch } from 'fs';\nimport { spawn } from 'child_process';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nabstract class AbstractUpdateService2 implements IUpdateService {\n\n\t_serviceBrand: any;\n\n\tprivate _state: State = State.Uninitialized;\n\n\tprivate _onStateChange = new Emitter<State>();\n\tget onStateChange(): Event<State> { return this._onStateChange.event; }\n\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\n\tprotected setState(state: State): void {\n\t\tthis.logService.info('update#setState', state.type);\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService protected logService: ILogService,\n\t) {\n\t\tif (environmentService.disableUpdates) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.Idle(this.getUpdateType()));\n\n\t\t// Start checking for updates after 30 seconds\n\t\tthis.scheduleCheckForUpdates(30 * 1000).then(undefined, err => this.logService.error(err));\n\t}\n\n\tprivate scheduleCheckForUpdates(delay = 60 * 60 * 1000): Promise<void> {\n\t\treturn timeout(delay)\n\t\t\t.then(() => this.checkForUpdates(null))\n\t\t\t.then(() => {\n\t\t\t\t// Check again after 1 hour\n\t\t\t\treturn this.scheduleCheckForUpdates(60 * 60 * 1000);\n\t\t\t});\n\t}\n\n\tasync checkForUpdates(context: any): Promise<void> {\n\t\tthis.logService.trace('update#checkForUpdates, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.doCheckForUpdates(context);\n\t}\n\n\tasync downloadUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#downloadUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.AvailableForDownload) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doDownloadUpdate(this.state);\n\t}\n\n\tprotected doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync applyUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#applyUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Downloaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doApplyUpdate();\n\t}\n\n\tprotected doApplyUpdate(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tquitAndInstall(): Promise<void> {\n\t\tthis.logService.trace('update#quitAndInstall, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Ready) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.logService.trace('update#quitAndInstall(): before lifecycle quit()');\n\n\t\tthis.lifecycleService.quit(true /* from update */).then(vetod => {\n\t\t\tthis.logService.trace(`update#quitAndInstall(): after lifecycle quit() with veto: ${vetod}`);\n\t\t\tif (vetod) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\t\t\tthis.doQuitAndInstall();\n\t\t});\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\n\tprotected getUpdateType(): UpdateType {\n\t\treturn UpdateType.Snap;\n\t}\n\n\tprotected doQuitAndInstall(): void {\n\t\t// noop\n\t}\n\n\tabstract isLatestVersion(): Promise<boolean | undefined>;\n\tprotected abstract doCheckForUpdates(context: any): void;\n}\n\nexport class SnapUpdateService extends AbstractUpdateService2 {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\tprivate snap: string,\n\t\tprivate snapRevision: string,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tsuper(lifecycleService, environmentService, logService);\n\n\t\tconst watcher = watch(path.dirname(this.snap));\n\t\tconst onChange = Event.fromNodeEventEmitter(watcher, 'change', (_, fileName: string) => fileName);\n\t\tconst onCurrentChange = Event.filter(onChange, n => n === 'current');\n\t\tconst onDebouncedCurrentChange = Event.debounce(onCurrentChange, (_, e) => e, 2000);\n\t\tconst listener = onDebouncedCurrentChange(this.checkForUpdates, this);\n\n\t\tlifecycleService.onWillShutdown(() => {\n\t\t\tlistener.dispose();\n\t\t\twatcher.close();\n\t\t});\n\t}\n\n\tprotected doCheckForUpdates(context: any): void {\n\t\tthis.setState(State.CheckingForUpdates(context));\n\n\t\tthis.isUpdateAvailable().then(result => {\n\t\t\tif (result) {\n\t\t\t\tthis.setState(State.Ready({ version: 'something', productVersion: 'something' }));\n\t\t\t} else {\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"update:notAvailable\" : {\n\t\t\t\t\t\t\"explicit\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog('update:notAvailable', { explicit: !!context });\n\n\t\t\t\tthis.setState(State.Idle(UpdateType.Snap));\n\t\t\t}\n\t\t}, err => {\n\t\t\tthis.logService.error(err);\n\n\t\t\t/* __GDPR__\n\t\t\t\t\"update:notAvailable\" : {\n\t\t\t\t\t\"explicit\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\tthis.telemetryService.publicLog('update:notAvailable', { explicit: !!context });\n\t\t\tthis.setState(State.Idle(UpdateType.Snap, err.message || err));\n\t\t});\n\t}\n\n\tprotected doQuitAndInstall(): void {\n\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\n\t\t// Allow 3 seconds for VS Code to close\n\t\tspawn('sleep 3 && ' + path.basename(process.argv[0]), {\n\t\t\tshell: true,\n\t\t\tdetached: true,\n\t\t\tstdio: 'ignore',\n\t\t});\n\t}\n\n\tprivate async isUpdateAvailable(): Promise<boolean> {\n\t\tconst resolvedCurrentSnapPath = await new Promise<string>((c, e) => realpath(`${path.dirname(this.snap)}/current`, (err, r) => err ? e(err) : c(r)));\n\t\tconst currentRevision = path.basename(resolvedCurrentSnapPath);\n\t\treturn this.snapRevision !== currentRevision;\n\t}\n\n\tisLatestVersion(): Promise<boolean | undefined> {\n\t\treturn this.isUpdateAvailable().then(undefined, err => {\n\t\t\tthis.logService.error('update#checkForSnapUpdate(): Could not get realpath of application.');\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { localize } from 'vs/nls';\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'update',\n\torder: 15,\n\ttitle: localize('updateConfigurationTitle', \"Update\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'update.mode': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['none', 'manual', 'default'],\n\t\t\tdefault: 'default',\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('updateMode', \"Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.\"),\n\t\t\ttags: ['usesOnlineServices'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('none', \"Disable updates.\"),\n\t\t\t\tlocalize('manual', \"Disable automatic background update checks. Updates will be available if you manually check for updates.\"),\n\t\t\t\tlocalize('default', \"Enable automatic update checks. Code will check for updates automatically and periodically.\")\n\t\t\t]\n\t\t},\n\t\t'update.channel': {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'default',\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('updateMode', \"Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.\"),\n\t\t\tdeprecationMessage: localize('deprecated', \"This setting is deprecated, please use '{0}' instead.\", 'update.mode')\n\t\t},\n\t\t'update.enableWindowsBackgroundUpdates': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('enableWindowsBackgroundUpdates', \"Enables Windows background updates. The updates are fetched from a Microsoft online service.\"),\n\t\t\ttags: ['usesOnlineServices']\n\t\t},\n\t\t'update.showReleaseNotes': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: localize('showReleaseNotes', \"Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service.\"),\n\t\t\ttags: ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IUpdateService } from 'vs/platform/update/common/update';\n\nexport class UpdateChannel implements IServerChannel {\n\n\tconstructor(private service: IUpdateService) { }\n\n\tlisten(_, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onStateChange': return this.service.onStateChange;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'checkForUpdates': return this.service.checkForUpdates(arg);\n\t\t\tcase 'downloadUpdate': return this.service.downloadUpdate();\n\t\t\tcase 'applyUpdate': return this.service.applyUpdate();\n\t\t\tcase 'quitAndInstall': return this.service.quitAndInstall();\n\t\t\tcase '_getInitialState': return Promise.resolve(this.service.state);\n\t\t\tcase 'isLatestVersion': return this.service.isLatestVersion();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport const IURLService = createDecorator<IURLService>('urlService');\n\nexport interface IURLHandler {\n\thandleURL(uri: URI): Promise<boolean>;\n}\n\nexport interface IURLService {\n\t_serviceBrand: any;\n\n\topen(url: URI): Promise<boolean>;\n\tregisterHandler(handler: IURLHandler): IDisposable;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IURLService, IURLHandler } from 'vs/platform/url/common/url';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { first } from 'vs/base/common/async';\nimport { values } from 'vs/base/common/map';\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\nexport class URLService implements IURLService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate handlers = new Set<IURLHandler>();\n\n\topen(uri: URI): Promise<boolean> {\n\t\tconst handlers = values(this.handlers);\n\t\treturn first(handlers.map(h => () => h.handleURL(uri)), undefined, false).then(val => val || false);\n\t}\n\n\tregisterHandler(handler: IURLHandler): IDisposable {\n\t\tthis.handlers.add(handler);\n\t\treturn toDisposable(() => this.handlers.delete(handler));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { IURLService, IURLHandler } from 'vs/platform/url/common/url';\n\nexport class URLServiceChannel implements IServerChannel {\n\n\tconstructor(private service: IURLService) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'open': return this.service.open(URI.revive(arg));\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class URLServiceChannelClient implements IURLService {\n\n\t_serviceBrand: any;\n\n\tconstructor(private channel: IChannel) { }\n\n\topen(url: URI): Promise<boolean> {\n\t\treturn this.channel.call('open', url.toJSON());\n\t}\n\n\tregisterHandler(handler: IURLHandler): IDisposable {\n\t\tthrow new Error('Not implemented.');\n\t}\n}\n\nexport class URLHandlerChannel implements IServerChannel {\n\n\tconstructor(private handler: IURLHandler) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'handleURL': return this.handler.handleURL(URI.revive(arg));\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class URLHandlerChannelClient implements IURLHandler {\n\n\tconstructor(private channel: IChannel) { }\n\n\thandleURL(uri: URI): Promise<boolean> {\n\t\treturn this.channel.call('handleURL', uri.toJSON());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { IProcessEnvironment, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { ParsedArgs, IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IRecentlyOpened, IRecent } from 'vs/platform/history/common/history';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { ExportData } from 'vs/base/common/performance';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nexport const IWindowsService = createDecorator<IWindowsService>('windowsService');\n\nexport interface INativeOpenDialogOptions {\n\twindowId?: number;\n\tforceNewWindow?: boolean;\n\n\tdialogOptions?: OpenDialogOptions;\n\n\ttelemetryEventName?: string;\n\ttelemetryExtraData?: ITelemetryData;\n}\n\nexport interface IEnterWorkspaceResult {\n\tworkspace: IWorkspaceIdentifier;\n\tbackupPath?: string;\n}\n\nexport interface CrashReporterStartOptions {\n\tcompanyName?: string;\n\tsubmitURL: string;\n\tproductName?: string;\n\tuploadToServer?: boolean;\n\tignoreSystemCrashHandler?: boolean;\n\textra?: any;\n\tcrashesDirectory?: string;\n}\n\nexport interface OpenDialogOptions {\n\ttitle?: string;\n\tdefaultPath?: string;\n\tbuttonLabel?: string;\n\tfilters?: FileFilter[];\n\tproperties?: Array<'openFile' | 'openDirectory' | 'multiSelections' | 'showHiddenFiles' | 'createDirectory' | 'promptToCreate' | 'noResolveAliases' | 'treatPackageAsDirectory'>;\n\tmessage?: string;\n}\n\nexport interface FileFilter {\n\textensions: string[];\n\tname: string;\n}\n\nexport interface MessageBoxOptions {\n\ttype?: string;\n\tbuttons?: string[];\n\tdefaultId?: number;\n\ttitle?: string;\n\tmessage: string;\n\tdetail?: string;\n\tcheckboxLabel?: string;\n\tcheckboxChecked?: boolean;\n\tcancelId?: number;\n\tnoLink?: boolean;\n\tnormalizeAccessKeys?: boolean;\n}\n\nexport interface SaveDialogOptions {\n\ttitle?: string;\n\tdefaultPath?: string;\n\tbuttonLabel?: string;\n\tfilters?: FileFilter[];\n\tmessage?: string;\n\tnameFieldLabel?: string;\n\tshowsTagField?: boolean;\n}\n\nexport interface INewWindowOptions {\n\tremoteAuthority?: string;\n}\n\nexport interface IDevToolsOptions {\n\tmode: 'right' | 'bottom' | 'undocked' | 'detach';\n}\n\nexport interface IWindowsService {\n\n\t_serviceBrand: any;\n\n\tonWindowOpen: Event<number>;\n\tonWindowFocus: Event<number>;\n\tonWindowBlur: Event<number>;\n\tonWindowMaximize: Event<number>;\n\tonWindowUnmaximize: Event<number>;\n\tonRecentlyOpenedChange: Event<void>;\n\n\t// Dialogs\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFileAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tshowMessageBox(windowId: number, options: MessageBoxOptions): Promise<IMessageBoxResult>;\n\tshowSaveDialog(windowId: number, options: SaveDialogOptions): Promise<string>;\n\tshowOpenDialog(windowId: number, options: OpenDialogOptions): Promise<string[]>;\n\n\treloadWindow(windowId: number, args?: ParsedArgs): Promise<void>;\n\topenDevTools(windowId: number, options?: IDevToolsOptions): Promise<void>;\n\ttoggleDevTools(windowId: number): Promise<void>;\n\tcloseWorkspace(windowId: number): Promise<void>;\n\tenterWorkspace(windowId: number, path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\ttoggleFullScreen(windowId: number): Promise<void>;\n\tsetRepresentedFilename(windowId: number, fileName: string): Promise<void>;\n\taddRecentlyOpened(recents: IRecent[]): Promise<void>;\n\tremoveFromRecentlyOpened(paths: URI[]): Promise<void>;\n\tclearRecentlyOpened(): Promise<void>;\n\tgetRecentlyOpened(windowId: number): Promise<IRecentlyOpened>;\n\tfocusWindow(windowId: number): Promise<void>;\n\tcloseWindow(windowId: number): Promise<void>;\n\tisFocused(windowId: number): Promise<boolean>;\n\tisMaximized(windowId: number): Promise<boolean>;\n\tmaximizeWindow(windowId: number): Promise<void>;\n\tunmaximizeWindow(windowId: number): Promise<void>;\n\tminimizeWindow(windowId: number): Promise<void>;\n\tonWindowTitleDoubleClick(windowId: number): Promise<void>;\n\tsetDocumentEdited(windowId: number, flag: boolean): Promise<void>;\n\tquit(): Promise<void>;\n\trelaunch(options: { addArgs?: string[], removeArgs?: string[] }): Promise<void>;\n\n\t// macOS Native Tabs\n\tnewWindowTab(): Promise<void>;\n\tshowPreviousWindowTab(): Promise<void>;\n\tshowNextWindowTab(): Promise<void>;\n\tmoveWindowTabToNewWindow(): Promise<void>;\n\tmergeAllWindowTabs(): Promise<void>;\n\ttoggleWindowTabsBar(): Promise<void>;\n\n\t// macOS TouchBar\n\tupdateTouchBar(windowId: number, items: ISerializableCommandAction[][]): Promise<void>;\n\n\t// Shared process\n\twhenSharedProcessReady(): Promise<void>;\n\ttoggleSharedProcess(): Promise<void>;\n\n\t// Global methods\n\topenWindow(windowId: number, uris: IURIToOpen[], options?: IOpenSettings): Promise<void>;\n\topenNewWindow(options?: INewWindowOptions): Promise<void>;\n\tshowWindow(windowId: number): Promise<void>;\n\tgetWindows(): Promise<{ id: number; workspace?: IWorkspaceIdentifier; folderUri?: ISingleFolderWorkspaceIdentifier; title: string; filename?: string; }[]>;\n\tgetWindowCount(): Promise<number>;\n\tlog(severity: string, ...messages: string[]): Promise<void>;\n\tshowItemInFolder(path: URI): Promise<void>;\n\tgetActiveWindowId(): Promise<number | undefined>;\n\n\t// This needs to be handled from browser process to prevent\n\t// foreground ordering issues on Windows\n\topenExternal(url: string): Promise<boolean>;\n\n\t// TODO: this is a bit backwards\n\tstartCrashReporter(config: CrashReporterStartOptions): Promise<void>;\n\n\topenAboutDialog(): Promise<void>;\n\tresolveProxy(windowId: number, url: string): Promise<string | undefined>;\n}\n\nexport const IWindowService = createDecorator<IWindowService>('windowService');\n\nexport interface IMessageBoxResult {\n\tbutton: number;\n\tcheckboxChecked?: boolean;\n}\n\nexport interface IOpenSettings {\n\tforceNewWindow?: boolean;\n\tforceReuseWindow?: boolean;\n\tforceOpenWorkspaceAsFile?: boolean;\n\tdiffMode?: boolean;\n\taddMode?: boolean;\n\targs?: ParsedArgs;\n}\n\nexport type URIType = 'file' | 'folder';\n\nexport interface IURIToOpen {\n\turi: URI;\n\ttypeHint?: URIType;\n\tlabel?: string;\n}\n\nexport interface IWindowService {\n\n\t_serviceBrand: any;\n\n\treadonly onDidChangeFocus: Event<boolean>;\n\treadonly onDidChangeMaximize: Event<boolean>;\n\n\treadonly hasFocus: boolean;\n\n\tgetConfiguration(): IWindowConfiguration;\n\tgetCurrentWindowId(): number;\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFileAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\treloadWindow(args?: ParsedArgs): Promise<void>;\n\topenDevTools(options?: IDevToolsOptions): Promise<void>;\n\ttoggleDevTools(): Promise<void>;\n\tcloseWorkspace(): Promise<void>;\n\tupdateTouchBar(items: ISerializableCommandAction[][]): Promise<void>;\n\tenterWorkspace(path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\ttoggleFullScreen(): Promise<void>;\n\tsetRepresentedFilename(fileName: string): Promise<void>;\n\tgetRecentlyOpened(): Promise<IRecentlyOpened>;\n\tfocusWindow(): Promise<void>;\n\tcloseWindow(): Promise<void>;\n\topenWindow(uris: IURIToOpen[], options?: IOpenSettings): Promise<void>;\n\tisFocused(): Promise<boolean>;\n\tsetDocumentEdited(flag: boolean): Promise<void>;\n\tisMaximized(): Promise<boolean>;\n\tmaximizeWindow(): Promise<void>;\n\tunmaximizeWindow(): Promise<void>;\n\tminimizeWindow(): Promise<void>;\n\tonWindowTitleDoubleClick(): Promise<void>;\n\tshow(): Promise<void>;\n\tshowMessageBox(options: MessageBoxOptions): Promise<IMessageBoxResult>;\n\tshowSaveDialog(options: SaveDialogOptions): Promise<string>;\n\tshowOpenDialog(options: OpenDialogOptions): Promise<string[]>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport type MenuBarVisibility = 'default' | 'visible' | 'toggle' | 'hidden';\n\nexport interface IWindowsConfiguration {\n\twindow: IWindowSettings;\n}\n\nexport interface IWindowSettings {\n\topenFilesInNewWindow: 'on' | 'off' | 'default';\n\topenFoldersInNewWindow: 'on' | 'off' | 'default';\n\topenWithoutArgumentsInNewWindow: 'on' | 'off';\n\trestoreWindows: 'all' | 'folders' | 'one' | 'none';\n\trestoreFullscreen: boolean;\n\tzoomLevel: number;\n\ttitleBarStyle: 'native' | 'custom';\n\tautoDetectHighContrast: boolean;\n\tmenuBarVisibility: MenuBarVisibility;\n\tnewWindowDimensions: 'default' | 'inherit' | 'maximized' | 'fullscreen';\n\tnativeTabs: boolean;\n\tnativeFullScreen: boolean;\n\tenableMenuBarMnemonics: boolean;\n\tcloseWhenEmpty: boolean;\n\tclickThroughInactive: boolean;\n}\n\nexport function getTitleBarStyle(configurationService: IConfigurationService, environment: IEnvironmentService, isExtensionDevelopment = environment.isExtensionDevelopment): 'native' | 'custom' {\n\tconst configuration = configurationService.getValue<IWindowSettings>('window');\n\n\tconst isDev = !environment.isBuilt || isExtensionDevelopment;\n\tif (isMacintosh && isDev) {\n\t\treturn 'native'; // not enabled when developing due to https://github.com/electron/electron/issues/3647\n\t}\n\n\tif (configuration) {\n\t\tconst useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n\t\tif (useNativeTabs) {\n\t\t\treturn 'native'; // native tabs on sierra do not work with custom title style\n\t\t}\n\n\t\tconst useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n\t\tif (useSimpleFullScreen) {\n\t\t\treturn 'native'; // simple fullscreen does not work well with custom title style (https://github.com/Microsoft/vscode/issues/63291)\n\t\t}\n\n\t\tconst style = configuration.titleBarStyle;\n\t\tif (style === 'native' || style === 'custom') {\n\t\t\treturn style;\n\t\t}\n\t}\n\n\treturn isLinux ? 'native' : 'custom'; // default to custom on all macOS and Windows\n}\n\nexport const enum OpenContext {\n\n\t// opening when running from the command line\n\tCLI,\n\n\t// macOS only: opening from the dock (also when opening files to a running instance from desktop)\n\tDOCK,\n\n\t// opening from the main application window\n\tMENU,\n\n\t// opening from a file or folder dialog\n\tDIALOG,\n\n\t// opening from the OS's UI\n\tDESKTOP,\n\n\t// opening through the API\n\tAPI\n}\n\nexport const enum ReadyState {\n\n\t/**\n\t * This window has not loaded any HTML yet\n\t */\n\tNONE,\n\n\t/**\n\t * This window is loading HTML\n\t */\n\tLOADING,\n\n\t/**\n\t * This window is navigating to another HTML\n\t */\n\tNAVIGATING,\n\n\t/**\n\t * This window is done loading HTML\n\t */\n\tREADY\n}\n\nexport interface IPath extends IPathData {\n\n\t// the file path to open within a Code instance\n\tfileUri?: URI;\n}\n\nexport interface IPathsToWaitFor extends IPathsToWaitForData {\n\tpaths: IPath[];\n}\n\nexport interface IPathsToWaitForData {\n\tpaths: IPathData[];\n\twaitMarkerFilePath: string;\n}\n\nexport interface IPathData {\n\n\t// the file path to open within a Code instance\n\tfileUri?: UriComponents;\n\n\t// the line number in the file path to open\n\tlineNumber?: number;\n\n\t// the column number in the file path to open\n\tcolumnNumber?: number;\n}\n\nexport interface IOpenFileRequest {\n\tfilesToOpen?: IPathData[];\n\tfilesToCreate?: IPathData[];\n\tfilesToDiff?: IPathData[];\n\tfilesToWait?: IPathsToWaitForData;\n\ttermProgram?: string;\n}\n\nexport interface IAddFoldersRequest {\n\tfoldersToAdd: UriComponents[];\n}\n\nexport interface IWindowConfiguration extends ParsedArgs {\n\tmachineId: string;\n\twindowId: number;\n\tlogLevel: LogLevel;\n\n\tmainPid: number;\n\n\tappRoot: string;\n\texecPath: string;\n\tisInitialStartup?: boolean;\n\n\tuserEnv: IProcessEnvironment;\n\tnodeCachedDataDir?: string;\n\n\tbackupPath?: string;\n\n\tworkspace?: IWorkspaceIdentifier;\n\tfolderUri?: ISingleFolderWorkspaceIdentifier;\n\n\tremoteAuthority?: string;\n\n\tzoomLevel?: number;\n\tfullscreen?: boolean;\n\tmaximized?: boolean;\n\thighContrast?: boolean;\n\tframeless?: boolean;\n\taccessibilitySupport?: boolean;\n\tpartsSplashPath?: string;\n\n\tperfStartTime?: number;\n\tperfAppReady?: number;\n\tperfWindowLoadTime?: number;\n\tperfEntries: ExportData;\n\n\tfilesToOpen?: IPath[];\n\tfilesToCreate?: IPath[];\n\tfilesToDiff?: IPath[];\n\tfilesToWait?: IPathsToWaitFor;\n\ttermProgram?: string;\n}\n\nexport interface IRunActionInWindowRequest {\n\tid: string;\n\tfrom: 'menu' | 'touchbar' | 'mouse';\n\targs?: any[];\n}\n\nexport interface IRunKeybindingInWindowRequest {\n\tuserSettingsLabel: string;\n}\n\nexport class ActiveWindowManager implements IDisposable {\n\n\tprivate disposables: IDisposable[] = [];\n\tprivate firstActiveWindowIdPromise: Promise<any> | null;\n\tprivate _activeWindowId: number | undefined;\n\n\tconstructor(@IWindowsService windowsService: IWindowsService) {\n\t\tconst onActiveWindowChange = Event.latch(Event.any(windowsService.onWindowOpen, windowsService.onWindowFocus));\n\t\tonActiveWindowChange(this.setActiveWindow, this, this.disposables);\n\n\t\tthis.firstActiveWindowIdPromise = windowsService.getActiveWindowId()\n\t\t\t.then(id => (typeof this._activeWindowId === 'undefined') && this.setActiveWindow(id));\n\t}\n\n\tprivate setActiveWindow(windowId: number | undefined) {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\tthis.firstActiveWindowIdPromise = null;\n\t\t}\n\n\t\tthis._activeWindowId = windowId;\n\t}\n\n\tgetActiveClientId(): Promise<string> {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\treturn this.firstActiveWindowIdPromise;\n\t\t}\n\n\t\treturn Promise.resolve(`window:${this._activeWindowId}`);\n\t}\n\n\tdispose() {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OpenContext, IWindowConfiguration, INativeOpenDialogOptions, IEnterWorkspaceResult, IMessageBoxResult, INewWindowOptions, IURIToOpen } from 'vs/platform/windows/common/windows';\nimport { ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IWindowState {\n\twidth?: number;\n\theight?: number;\n\tx?: number;\n\ty?: number;\n\tmode?: WindowMode;\n\tdisplay?: number;\n}\n\nexport const enum WindowMode {\n\tMaximized,\n\tNormal,\n\tMinimized, // not used anymore, but also cannot remove due to existing stored UI state (needs migration)\n\tFullscreen\n}\n\nexport interface ICodeWindow {\n\treadonly id: number;\n\treadonly win: Electron.BrowserWindow;\n\treadonly config: IWindowConfiguration;\n\n\treadonly openedFolderUri?: URI;\n\treadonly openedWorkspace?: IWorkspaceIdentifier;\n\treadonly backupPath?: string;\n\n\treadonly remoteAuthority?: string;\n\n\treadonly isExtensionDevelopmentHost: boolean;\n\treadonly isExtensionTestHost: boolean;\n\n\treadonly lastFocusTime: number;\n\n\treadonly isReady: boolean;\n\tready(): Promise<ICodeWindow>;\n\n\taddTabbedWindow(window: ICodeWindow): void;\n\n\tload(config: IWindowConfiguration, isReload?: boolean, disableExtensions?: boolean): void;\n\treload(configuration?: IWindowConfiguration, cli?: ParsedArgs): void;\n\n\tfocus(): void;\n\tclose(): void;\n\n\tgetBounds(): Electron.Rectangle;\n\n\tsend(channel: string, ...args: any[]): void;\n\tsendWhenReady(channel: string, ...args: any[]): void;\n\n\ttoggleFullScreen(): void;\n\tisFullScreen(): boolean;\n\tisMinimized(): boolean;\n\thasHiddenTitleBarStyle(): boolean;\n\tsetRepresentedFilename(name: string): void;\n\tgetRepresentedFilename(): string;\n\tonWindowTitleDoubleClick(): void;\n\n\tupdateTouchBar(items: ISerializableCommandAction[][]): void;\n\n\tsetReady(): void;\n\tserializeWindowState(): IWindowState;\n\n\tdispose(): void;\n}\n\nexport const IWindowsMainService = createDecorator<IWindowsMainService>('windowsMainService');\n\nexport interface IWindowsCountChangedEvent {\n\treadonly oldCount: number;\n\treadonly newCount: number;\n}\n\nexport interface IWindowsMainService {\n\t_serviceBrand: any;\n\n\t// events\n\treadonly onWindowReady: Event<ICodeWindow>;\n\treadonly onWindowsCountChanged: Event<IWindowsCountChangedEvent>;\n\treadonly onWindowClose: Event<number>;\n\n\t// methods\n\tready(initialUserEnv: IProcessEnvironment): void;\n\treload(win: ICodeWindow, cli?: ParsedArgs): void;\n\tenterWorkspace(win: ICodeWindow, path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\tcloseWorkspace(win: ICodeWindow): void;\n\topen(openConfig: IOpenConfiguration): ICodeWindow[];\n\topenExtensionDevelopmentHostWindow(extensionDevelopmentPath: string, openConfig: IOpenConfiguration): void;\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): void;\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): void;\n\tpickFileAndOpen(options: INativeOpenDialogOptions): void;\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): void;\n\tshowMessageBox(options: Electron.MessageBoxOptions, win?: ICodeWindow): Promise<IMessageBoxResult>;\n\tshowSaveDialog(options: Electron.SaveDialogOptions, win?: ICodeWindow): Promise<string>;\n\tshowOpenDialog(options: Electron.OpenDialogOptions, win?: ICodeWindow): Promise<string[]>;\n\tfocusLastActive(cli: ParsedArgs, context: OpenContext): ICodeWindow;\n\tgetLastActiveWindow(): ICodeWindow | undefined;\n\twaitForWindowCloseOrLoad(windowId: number): Promise<void>;\n\topenNewWindow(context: OpenContext, options?: INewWindowOptions): ICodeWindow[];\n\topenNewTabbedWindow(context: OpenContext): ICodeWindow[];\n\tsendToFocused(channel: string, ...args: any[]): void;\n\tsendToAll(channel: string, payload: any, windowIdsToIgnore?: number[]): void;\n\tgetFocusedWindow(): ICodeWindow | undefined;\n\tgetWindowById(windowId: number): ICodeWindow | undefined;\n\tgetWindows(): ICodeWindow[];\n\tgetWindowCount(): number;\n\tquit(): void;\n}\n\nexport interface IOpenConfiguration {\n\treadonly context: OpenContext;\n\treadonly contextWindowId?: number;\n\treadonly cli: ParsedArgs;\n\treadonly userEnv?: IProcessEnvironment;\n\treadonly urisToOpen?: IURIToOpen[];\n\treadonly preferNewWindow?: boolean;\n\treadonly forceNewWindow?: boolean;\n\treadonly forceNewTabbedWindow?: boolean;\n\treadonly forceReuseWindow?: boolean;\n\treadonly forceEmpty?: boolean;\n\treadonly diffMode?: boolean;\n\taddMode?: boolean;\n\treadonly forceOpenWorkspaceAsFile?: boolean;\n\treadonly initialStartup?: boolean;\n}\n\nexport interface ISharedProcess {\n\twhenReady(): Promise<void>;\n\ttoggle(): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\nimport { Event } from 'vs/base/common/event';\nimport { BrowserWindow, app } from 'electron';\n\ntype LoginEvent = {\n\tevent: Electron.Event;\n\twebContents: Electron.WebContents;\n\treq: Electron.Request;\n\tauthInfo: Electron.AuthInfo;\n\tcb: (username: string, password: string) => void;\n};\n\ntype Credentials = {\n\tusername: string;\n\tpassword: string;\n};\n\nexport class ProxyAuthHandler {\n\n\t_serviceBrand: any;\n\n\tprivate retryCount = 0;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService\n\t) {\n\t\tconst onLogin = Event.fromNodeEventEmitter<LoginEvent>(app, 'login', (event, webContents, req, authInfo, cb) => ({ event, webContents, req, authInfo, cb }));\n\t\tonLogin(this.onLogin, this, this.disposables);\n\t}\n\n\tprivate onLogin({ event, authInfo, cb }: LoginEvent): void {\n\t\tif (!authInfo.isProxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.retryCount++ > 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst opts: any = {\n\t\t\talwaysOnTop: true,\n\t\t\tskipTaskbar: true,\n\t\t\tresizable: false,\n\t\t\twidth: 450,\n\t\t\theight: 220,\n\t\t\tshow: true,\n\t\t\ttitle: 'VS Code'\n\t\t};\n\n\t\tconst focusedWindow = this.windowsMainService.getFocusedWindow();\n\n\t\tif (focusedWindow) {\n\t\t\topts.parent = focusedWindow.win;\n\t\t\topts.modal = true;\n\t\t}\n\n\t\tconst win = new BrowserWindow(opts);\n\t\tconst config = {};\n\t\tconst baseUrl = require.toUrl('vs/code/electron-browser/proxy/auth.html');\n\t\tconst url = `${baseUrl}?config=${encodeURIComponent(JSON.stringify(config))}`;\n\t\tconst proxyUrl = `${authInfo.host}:${authInfo.port}`;\n\t\tconst title = localize('authRequire', \"Proxy Authentication Required\");\n\t\tconst message = localize('proxyauth', \"The proxy {0} requires authentication.\", proxyUrl);\n\t\tconst data = { title, message };\n\t\tconst javascript = 'promptForCredentials(' + JSON.stringify(data) + ')';\n\n\t\tconst onWindowClose = () => cb('', '');\n\t\twin.on('close', onWindowClose);\n\n\t\twin.setMenu(null);\n\t\twin.loadURL(url);\n\t\twin.webContents.executeJavaScript(javascript, true).then(({ username, password }: Credentials) => {\n\t\t\tcb(username, password);\n\t\t\twin.removeListener('close', onWindowClose);\n\t\t\twin.close();\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDriver, DriverChannel, IElement, WindowDriverChannelClient, IWindowDriverRegistry, WindowDriverRegistryChannel, IWindowDriver, IDriverOptions } from 'vs/platform/driver/node/driver';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\nimport { serve as serveNet } from 'vs/base/parts/ipc/node/ipc.net';\nimport { combinedDisposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IPCServer, StaticRouter } from 'vs/base/parts/ipc/node/ipc';\nimport { SimpleKeybinding, KeyCode } from 'vs/base/common/keyCodes';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { OS } from 'vs/base/common/platform';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ScanCodeBinding } from 'vs/base/common/scanCode';\nimport { KeybindingParser } from 'vs/base/common/keybindingParser';\nimport { timeout } from 'vs/base/common/async';\n\nfunction isSilentKeyCode(keyCode: KeyCode) {\n\treturn keyCode < KeyCode.KEY_0;\n}\n\nexport class Driver implements IDriver, IWindowDriverRegistry {\n\n\t_serviceBrand: any;\n\n\tprivate registeredWindowIds = new Set<number>();\n\tprivate reloadingWindowIds = new Set<number>();\n\tprivate onDidReloadingChange = new Emitter<void>();\n\n\tconstructor(\n\t\tprivate windowServer: IPCServer,\n\t\tprivate options: IDriverOptions,\n\t\t@IWindowsMainService private readonly windowsService: IWindowsMainService\n\t) { }\n\n\tasync registerWindowDriver(windowId: number): Promise<IDriverOptions> {\n\t\tthis.registeredWindowIds.add(windowId);\n\t\tthis.reloadingWindowIds.delete(windowId);\n\t\tthis.onDidReloadingChange.fire();\n\t\treturn this.options;\n\t}\n\n\tasync reloadWindowDriver(windowId: number): Promise<void> {\n\t\tthis.reloadingWindowIds.add(windowId);\n\t}\n\n\tasync getWindowIds(): Promise<number[]> {\n\t\treturn this.windowsService.getWindows()\n\t\t\t.map(w => w.id)\n\t\t\t.filter(id => this.registeredWindowIds.has(id) && !this.reloadingWindowIds.has(id));\n\t}\n\n\tasync capturePage(windowId: number): Promise<string> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst window = this.windowsService.getWindowById(windowId);\n\t\tif (!window) {\n\t\t\tthrow new Error('Invalid window');\n\t\t}\n\t\tconst webContents = window.win.webContents;\n\t\tconst image = await new Promise<Electron.NativeImage>(c => webContents.capturePage(c));\n\t\treturn image.toPNG().toString('base64');\n\t}\n\n\tasync reloadWindow(windowId: number): Promise<void> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst window = this.windowsService.getWindowById(windowId);\n\t\tif (!window) {\n\t\t\tthrow new Error('Invalid window');\n\t\t}\n\t\tthis.reloadingWindowIds.add(windowId);\n\t\tthis.windowsService.reload(window);\n\t}\n\n\tasync exitApplication(): Promise<void> {\n\t\treturn this.windowsService.quit();\n\t}\n\n\tasync dispatchKeybinding(windowId: number, keybinding: string): Promise<void> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst parts = KeybindingParser.parseUserBinding(keybinding);\n\n\t\tfor (let part of parts) {\n\t\t\tawait this._dispatchKeybinding(windowId, part);\n\t\t}\n\t}\n\n\tprivate async _dispatchKeybinding(windowId: number, keybinding: SimpleKeybinding | ScanCodeBinding): Promise<void> {\n\t\tif (keybinding instanceof ScanCodeBinding) {\n\t\t\tthrow new Error('ScanCodeBindings not supported');\n\t\t}\n\n\t\tconst window = this.windowsService.getWindowById(windowId);\n\t\tif (!window) {\n\t\t\tthrow new Error('Invalid window');\n\t\t}\n\t\tconst webContents = window.win.webContents;\n\t\tconst noModifiedKeybinding = new SimpleKeybinding(false, false, false, false, keybinding.keyCode);\n\t\tconst resolvedKeybinding = new USLayoutResolvedKeybinding(noModifiedKeybinding.toChord(), OS);\n\t\tconst keyCode = resolvedKeybinding.getElectronAccelerator();\n\n\t\tconst modifiers: string[] = [];\n\n\t\tif (keybinding.ctrlKey) {\n\t\t\tmodifiers.push('ctrl');\n\t\t}\n\n\t\tif (keybinding.metaKey) {\n\t\t\tmodifiers.push('meta');\n\t\t}\n\n\t\tif (keybinding.shiftKey) {\n\t\t\tmodifiers.push('shift');\n\t\t}\n\n\t\tif (keybinding.altKey) {\n\t\t\tmodifiers.push('alt');\n\t\t}\n\n\t\twebContents.sendInputEvent({ type: 'keyDown', keyCode, modifiers } as any);\n\n\t\tif (!isSilentKeyCode(keybinding.keyCode)) {\n\t\t\twebContents.sendInputEvent({ type: 'char', keyCode, modifiers } as any);\n\t\t}\n\n\t\twebContents.sendInputEvent({ type: 'keyUp', keyCode, modifiers } as any);\n\n\t\tawait timeout(100);\n\t}\n\n\tasync click(windowId: number, selector: string, xoffset?: number, yoffset?: number): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.click(selector, xoffset, yoffset);\n\t}\n\n\tasync doubleClick(windowId: number, selector: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.doubleClick(selector);\n\t}\n\n\tasync setValue(windowId: number, selector: string, text: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.setValue(selector, text);\n\t}\n\n\tasync getTitle(windowId: number): Promise<string> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getTitle();\n\t}\n\n\tasync isActiveElement(windowId: number, selector: string): Promise<boolean> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.isActiveElement(selector);\n\t}\n\n\tasync getElements(windowId: number, selector: string, recursive: boolean): Promise<IElement[]> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getElements(selector, recursive);\n\t}\n\n\tasync typeInEditor(windowId: number, selector: string, text: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.typeInEditor(selector, text);\n\t}\n\n\tasync getTerminalBuffer(windowId: number, selector: string): Promise<string[]> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getTerminalBuffer(selector);\n\t}\n\n\tasync writeInTerminal(windowId: number, selector: string, text: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.writeInTerminal(selector, text);\n\t}\n\n\tprivate async getWindowDriver(windowId: number): Promise<IWindowDriver> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst id = `window:${windowId}`;\n\t\tconst router = new StaticRouter(ctx => ctx === id);\n\t\tconst windowDriverChannel = this.windowServer.getChannel('windowDriver', router);\n\t\treturn new WindowDriverChannelClient(windowDriverChannel);\n\t}\n\n\tprivate async whenUnfrozen(windowId: number): Promise<void> {\n\t\twhile (this.reloadingWindowIds.has(windowId)) {\n\t\t\tawait Event.toPromise(this.onDidReloadingChange.event);\n\t\t}\n\t}\n}\n\nexport async function serve(\n\twindowServer: IPCServer,\n\thandle: string,\n\tenvironmentService: IEnvironmentService,\n\tinstantiationService: IInstantiationService\n): Promise<IDisposable> {\n\tconst verbose = environmentService.driverVerbose;\n\tconst driver = instantiationService.createInstance(Driver, windowServer, { verbose });\n\n\tconst windowDriverRegistryChannel = new WindowDriverRegistryChannel(driver);\n\twindowServer.registerChannel('windowDriverRegistry', windowDriverRegistryChannel);\n\n\tconst server = await serveNet(handle);\n\tconst channel = new DriverChannel(driver);\n\tserver.registerChannel('driver', channel);\n\n\treturn combinedDisposable([server, windowServer]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { isMacintosh, language } from 'vs/base/common/platform';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { app, shell, Menu, MenuItem, BrowserWindow } from 'electron';\nimport { OpenContext, IRunActionInWindowRequest, getTitleBarStyle, IRunKeybindingInWindowRequest } from 'vs/platform/windows/common/windows';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUpdateService, StateType } from 'vs/platform/update/common/update';\nimport product from 'vs/platform/product/node/product';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { mnemonicMenuLabel as baseMnemonicLabel } from 'vs/base/common/labels';\nimport { IWindowsMainService, IWindowsCountChangedEvent } from 'vs/platform/windows/electron-main/windows';\nimport { IHistoryMainService } from 'vs/platform/history/common/history';\nimport { IMenubarData, IMenubarKeybinding, MenubarMenuItem, isMenubarMenuItemSeparator, isMenubarMenuItemSubmenu, isMenubarMenuItemAction, IMenubarMenu, isMenubarMenuItemUriAction } from 'vs/platform/menubar/common/menubar';\nimport { URI } from 'vs/base/common/uri';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\n\nconst telemetryFrom = 'menu';\n\ninterface IMenuItemClickHandler {\n\tinDevTools: (contents: Electron.WebContents) => void;\n\tinNoWindow: () => void;\n}\n\ntype IMenuItemInvocation = (\n\t{ type: 'commandId'; commandId: string; }\n\t| { type: 'keybinding'; userSettingsLabel: string; }\n);\n\ninterface IMenuItemWithKeybinding {\n\tuserSettingsLabel?: string;\n}\n\nexport class Menubar {\n\n\tprivate static readonly lastKnownMenubarStorageKey = 'lastKnownMenubarData';\n\n\tprivate willShutdown: boolean;\n\tprivate appMenuInstalled: boolean;\n\tprivate closedLastWindow: boolean;\n\n\tprivate menuUpdater: RunOnceScheduler;\n\tprivate menuGC: RunOnceScheduler;\n\n\t// Array to keep menus around so that GC doesn't cause crash as explained in #55347\n\t// TODO@sbatten Remove this when fixed upstream by Electron\n\tprivate oldMenus: Menu[];\n\n\tprivate menubarMenus: { [id: string]: IMenubarMenu };\n\n\tprivate keybindings: { [commandId: string]: IMenubarKeybinding };\n\n\tprivate fallbackMenuHandlers: { [id: string]: (menuItem: MenuItem, browserWindow: BrowserWindow, event: Electron.Event) => void } = {};\n\n\tconstructor(\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IHistoryMainService private readonly historyMainService: IHistoryMainService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService\n\t) {\n\t\tthis.menuUpdater = new RunOnceScheduler(() => this.doUpdateMenu(), 0);\n\n\t\tthis.menuGC = new RunOnceScheduler(() => { this.oldMenus = []; }, 10000);\n\n\t\tthis.menubarMenus = Object.create(null);\n\t\tthis.keybindings = Object.create(null);\n\n\t\tif (isMacintosh || getTitleBarStyle(this.configurationService, this.environmentService) === 'native') {\n\t\t\tthis.restoreCachedMenubarData();\n\t\t}\n\n\t\tthis.addFallbackHandlers();\n\n\t\tthis.closedLastWindow = false;\n\n\t\tthis.oldMenus = [];\n\n\t\tthis.install();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate restoreCachedMenubarData() {\n\t\tconst menubarData = this.stateService.getItem<IMenubarData>(Menubar.lastKnownMenubarStorageKey);\n\t\tif (menubarData) {\n\t\t\tif (menubarData.menus) {\n\t\t\t\tthis.menubarMenus = menubarData.menus;\n\t\t\t}\n\n\t\t\tif (menubarData.keybindings) {\n\t\t\t\tthis.keybindings = menubarData.keybindings;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addFallbackHandlers(): void {\n\t\t// File Menu Items\n\t\tthis.fallbackMenuHandlers['workbench.action.files.newUntitledFile'] = () => this.windowsMainService.openNewWindow(OpenContext.MENU);\n\t\tthis.fallbackMenuHandlers['workbench.action.newWindow'] = () => this.windowsMainService.openNewWindow(OpenContext.MENU);\n\t\tthis.fallbackMenuHandlers['workbench.action.files.openFileFolder'] = (menuItem, win, event) => this.windowsMainService.pickFileFolderAndOpen({ forceNewWindow: this.isOptionClick(event), telemetryExtraData: { from: telemetryFrom } });\n\t\tthis.fallbackMenuHandlers['workbench.action.openWorkspace'] = (menuItem, win, event) => this.windowsMainService.pickWorkspaceAndOpen({ forceNewWindow: this.isOptionClick(event), telemetryExtraData: { from: telemetryFrom } });\n\n\t\t// Recent Menu Items\n\t\tthis.fallbackMenuHandlers['workbench.action.clearRecentFiles'] = () => this.historyMainService.clearRecentlyOpened();\n\n\t\t// Help Menu Items\n\t\tif (product.twitterUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openTwitterUrl'] = () => this.openUrl(product.twitterUrl, 'openTwitterUrl');\n\t\t}\n\n\t\tif (product.requestFeatureUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openRequestFeatureUrl'] = () => this.openUrl(product.requestFeatureUrl, 'openUserVoiceUrl');\n\t\t}\n\n\t\tif (product.reportIssueUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openIssueReporter'] = () => this.openUrl(product.reportIssueUrl, 'openReportIssues');\n\t\t}\n\n\t\tif (product.licenseUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openLicenseUrl'] = () => {\n\t\t\t\tif (language) {\n\t\t\t\t\tconst queryArgChar = product.licenseUrl.indexOf('?') > 0 ? '&' : '?';\n\t\t\t\t\tthis.openUrl(`${product.licenseUrl}${queryArgChar}lang=${language}`, 'openLicenseUrl');\n\t\t\t\t} else {\n\t\t\t\t\tthis.openUrl(product.licenseUrl, 'openLicenseUrl');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (product.privacyStatementUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openPrivacyStatementUrl'] = () => {\n\t\t\t\tif (language) {\n\t\t\t\t\tconst queryArgChar = product.licenseUrl.indexOf('?') > 0 ? '&' : '?';\n\t\t\t\t\tthis.openUrl(`${product.privacyStatementUrl}${queryArgChar}lang=${language}`, 'openPrivacyStatement');\n\t\t\t\t} else {\n\t\t\t\t\tthis.openUrl(product.privacyStatementUrl, 'openPrivacyStatement');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Keep flag when app quits\n\t\tthis.lifecycleService.onWillShutdown(() => this.willShutdown = true);\n\n\t\t// // Listen to some events from window service to update menu\n\t\tthis.windowsMainService.onWindowsCountChanged(e => this.onWindowsCountChanged(e));\n\t}\n\n\tprivate get currentEnableMenuBarMnemonics(): boolean {\n\t\tlet enableMenuBarMnemonics = this.configurationService.getValue<boolean>('window.enableMenuBarMnemonics');\n\t\tif (typeof enableMenuBarMnemonics !== 'boolean') {\n\t\t\tenableMenuBarMnemonics = true;\n\t\t}\n\n\t\treturn enableMenuBarMnemonics;\n\t}\n\n\tprivate get currentEnableNativeTabs(): boolean {\n\t\tif (!isMacintosh) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet enableNativeTabs = this.configurationService.getValue<boolean>('window.nativeTabs');\n\t\tif (typeof enableNativeTabs !== 'boolean') {\n\t\t\tenableNativeTabs = false;\n\t\t}\n\t\treturn enableNativeTabs;\n\t}\n\n\tupdateMenu(menubarData: IMenubarData, windowId: number) {\n\t\tthis.menubarMenus = menubarData.menus;\n\t\tthis.keybindings = menubarData.keybindings;\n\n\t\t// Save off new menu and keybindings\n\t\tthis.stateService.setItem(Menubar.lastKnownMenubarStorageKey, menubarData);\n\n\t\tthis.scheduleUpdateMenu();\n\t}\n\n\n\tprivate scheduleUpdateMenu(): void {\n\t\tthis.menuUpdater.schedule(); // buffer multiple attempts to update the menu\n\t}\n\n\tprivate doUpdateMenu(): void {\n\n\t\t// Due to limitations in Electron, it is not possible to update menu items dynamically. The suggested\n\t\t// workaround from Electron is to set the application menu again.\n\t\t// See also https://github.com/electron/electron/issues/846\n\t\t//\n\t\t// Run delayed to prevent updating menu while it is open\n\t\tif (!this.willShutdown) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.willShutdown) {\n\t\t\t\t\tthis.install();\n\t\t\t\t}\n\t\t\t}, 10 /* delay this because there is an issue with updating a menu when it is open */);\n\t\t}\n\t}\n\n\tprivate onWindowsCountChanged(e: IWindowsCountChangedEvent): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update menu if window count goes from N > 0 or 0 > N to update menu item enablement\n\t\tif ((e.oldCount === 0 && e.newCount > 0) || (e.oldCount > 0 && e.newCount === 0)) {\n\t\t\tthis.closedLastWindow = e.newCount === 0;\n\t\t\tthis.scheduleUpdateMenu();\n\t\t}\n\t}\n\n\tprivate install(): void {\n\t\t// Store old menu in our array to avoid GC to collect the menu and crash. See #55347\n\t\t// TODO@sbatten Remove this when fixed upstream by Electron\n\t\tconst oldMenu = Menu.getApplicationMenu();\n\t\tif (oldMenu) {\n\t\t\tthis.oldMenus.push(oldMenu);\n\t\t}\n\n\t\t// If we don't have a menu yet, set it to null to avoid the electron menu.\n\t\t// This should only happen on the first launch ever\n\t\tif (Object.keys(this.menubarMenus).length === 0) {\n\t\t\tMenu.setApplicationMenu(isMacintosh ? new Menu() : null);\n\t\t\treturn;\n\t\t}\n\n\t\t// Menus\n\t\tconst menubar = new Menu();\n\n\t\t// Mac: Application\n\t\tlet macApplicationMenuItem: Electron.MenuItem;\n\t\tif (isMacintosh) {\n\t\t\tconst applicationMenu = new Menu();\n\t\t\tmacApplicationMenuItem = new MenuItem({ label: product.nameShort, submenu: applicationMenu });\n\t\t\tthis.setMacApplicationMenu(applicationMenu);\n\t\t\tmenubar.append(macApplicationMenuItem);\n\t\t}\n\n\t\t// Mac: Dock\n\t\tif (isMacintosh && !this.appMenuInstalled) {\n\t\t\tthis.appMenuInstalled = true;\n\n\t\t\tconst dockMenu = new Menu();\n\t\t\tdockMenu.append(new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'miNewWindow', comment: ['&& denotes a mnemonic'] }, \"New &&Window\")), click: () => this.windowsMainService.openNewWindow(OpenContext.DOCK) }));\n\n\t\t\tapp.dock.setMenu(dockMenu);\n\t\t}\n\n\t\t// File\n\t\tconst fileMenu = new Menu();\n\t\tconst fileMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mFile', comment: ['&& denotes a mnemonic'] }, \"&&File\")), submenu: fileMenu });\n\n\t\tthis.setMenuById(fileMenu, 'File');\n\t\tmenubar.append(fileMenuItem);\n\n\t\t// Edit\n\t\tconst editMenu = new Menu();\n\t\tconst editMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mEdit', comment: ['&& denotes a mnemonic'] }, \"&&Edit\")), submenu: editMenu });\n\n\t\tthis.setMenuById(editMenu, 'Edit');\n\t\tmenubar.append(editMenuItem);\n\n\t\t// Selection\n\t\tconst selectionMenu = new Menu();\n\t\tconst selectionMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mSelection', comment: ['&& denotes a mnemonic'] }, \"&&Selection\")), submenu: selectionMenu });\n\n\t\tthis.setMenuById(selectionMenu, 'Selection');\n\t\tmenubar.append(selectionMenuItem);\n\n\t\t// View\n\t\tconst viewMenu = new Menu();\n\t\tconst viewMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mView', comment: ['&& denotes a mnemonic'] }, \"&&View\")), submenu: viewMenu });\n\n\t\tthis.setMenuById(viewMenu, 'View');\n\t\tmenubar.append(viewMenuItem);\n\n\t\t// Go\n\t\tconst gotoMenu = new Menu();\n\t\tconst gotoMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mGoto', comment: ['&& denotes a mnemonic'] }, \"&&Go\")), submenu: gotoMenu });\n\n\t\tthis.setMenuById(gotoMenu, 'Go');\n\t\tmenubar.append(gotoMenuItem);\n\n\t\t// Debug\n\t\tconst debugMenu = new Menu();\n\t\tconst debugMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mDebug', comment: ['&& denotes a mnemonic'] }, \"&&Debug\")), submenu: debugMenu });\n\n\t\tthis.setMenuById(debugMenu, 'Debug');\n\t\tmenubar.append(debugMenuItem);\n\n\t\t// Terminal\n\t\tconst terminalMenu = new Menu();\n\t\tconst terminalMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mTerminal', comment: ['&& denotes a mnemonic'] }, \"&&Terminal\")), submenu: terminalMenu });\n\n\t\tthis.setMenuById(terminalMenu, 'Terminal');\n\t\tmenubar.append(terminalMenuItem);\n\n\t\t// Mac: Window\n\t\tlet macWindowMenuItem: Electron.MenuItem | undefined;\n\t\tif (this.shouldDrawMenu('Window')) {\n\t\t\tconst windowMenu = new Menu();\n\t\t\tmacWindowMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize('mWindow', \"Window\")), submenu: windowMenu, role: 'window' });\n\t\t\tthis.setMacWindowMenu(windowMenu);\n\t\t}\n\n\t\tif (macWindowMenuItem) {\n\t\t\tmenubar.append(macWindowMenuItem);\n\t\t}\n\n\t\t// Help\n\t\tconst helpMenu = new Menu();\n\t\tconst helpMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mHelp', comment: ['&& denotes a mnemonic'] }, \"&&Help\")), submenu: helpMenu, role: 'help' });\n\n\t\tthis.setMenuById(helpMenu, 'Help');\n\t\tmenubar.append(helpMenuItem);\n\n\t\tif (menubar.items && menubar.items.length > 0) {\n\t\t\tMenu.setApplicationMenu(menubar);\n\t\t} else {\n\t\t\tMenu.setApplicationMenu(null);\n\t\t}\n\n\t\t// Dispose of older menus after some time\n\t\tthis.menuGC.schedule();\n\t}\n\n\tprivate setMacApplicationMenu(macApplicationMenu: Electron.Menu): void {\n\t\tconst about = new MenuItem({ label: nls.localize('mAbout', \"About {0}\", product.nameLong), role: 'about' });\n\t\tconst checkForUpdates = this.getUpdateMenuItems();\n\n\t\tlet preferences;\n\t\tif (this.shouldDrawMenu('Preferences')) {\n\t\t\tconst preferencesMenu = new Menu();\n\t\t\tthis.setMenuById(preferencesMenu, 'Preferences');\n\t\t\tpreferences = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'miPreferences', comment: ['&& denotes a mnemonic'] }, \"&&Preferences\")), submenu: preferencesMenu });\n\t\t}\n\n\t\tconst servicesMenu = new Menu();\n\t\tconst services = new MenuItem({ label: nls.localize('mServices', \"Services\"), role: 'services', submenu: servicesMenu });\n\t\tconst hide = new MenuItem({ label: nls.localize('mHide', \"Hide {0}\", product.nameLong), role: 'hide', accelerator: 'Command+H' });\n\t\tconst hideOthers = new MenuItem({ label: nls.localize('mHideOthers', \"Hide Others\"), role: 'hideothers', accelerator: 'Command+Alt+H' });\n\t\tconst showAll = new MenuItem({ label: nls.localize('mShowAll', \"Show All\"), role: 'unhide' });\n\t\tconst quit = new MenuItem(this.likeAction('workbench.action.quit', {\n\t\t\tlabel: nls.localize('miQuit', \"Quit {0}\", product.nameLong), click: () => {\n\t\t\t\tif (\n\t\t\t\t\tthis.windowsMainService.getWindowCount() === 0 || \t\t\t// allow to quit when no more windows are open\n\t\t\t\t\t!!this.windowsMainService.getFocusedWindow() ||\t\t\t\t// allow to quit when window has focus (fix for https://github.com/Microsoft/vscode/issues/39191)\n\t\t\t\t\tthis.windowsMainService.getLastActiveWindow()!.isMinimized()\t// allow to quit when window has no focus but is minimized (https://github.com/Microsoft/vscode/issues/63000)\n\t\t\t\t) {\n\t\t\t\t\tthis.windowsMainService.quit();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tconst actions = [about];\n\t\tactions.push(...checkForUpdates);\n\n\t\tif (preferences) {\n\t\t\tactions.push(...[\n\t\t\t\t__separator__(),\n\t\t\t\tpreferences\n\t\t\t]);\n\t\t}\n\n\t\tactions.push(...[\n\t\t\t__separator__(),\n\t\t\tservices,\n\t\t\t__separator__(),\n\t\t\thide,\n\t\t\thideOthers,\n\t\t\tshowAll,\n\t\t\t__separator__(),\n\t\t\tquit\n\t\t]);\n\n\t\tactions.forEach(i => macApplicationMenu.append(i));\n\t}\n\n\tprivate shouldDrawMenu(menuId: string): boolean {\n\t\t// We need to draw an empty menu to override the electron default\n\t\tif (!isMacintosh && getTitleBarStyle(this.configurationService, this.environmentService) === 'custom') {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (menuId) {\n\t\t\tcase 'File':\n\t\t\tcase 'Help':\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) || (!!this.menubarMenus && !!this.menubarMenus[menuId]);\n\t\t\t\t}\n\n\t\t\tcase 'Window':\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) || !!this.menubarMenus;\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn this.windowsMainService.getWindowCount() > 0 && (!!this.menubarMenus && !!this.menubarMenus[menuId]);\n\t\t}\n\t}\n\n\n\tprivate setMenu(menu: Electron.Menu, items: Array<MenubarMenuItem>) {\n\t\titems.forEach((item: MenubarMenuItem) => {\n\t\t\tif (isMenubarMenuItemSeparator(item)) {\n\t\t\t\tmenu.append(__separator__());\n\t\t\t} else if (isMenubarMenuItemSubmenu(item)) {\n\t\t\t\tconst submenu = new Menu();\n\t\t\t\tconst submenuItem = new MenuItem({ label: this.mnemonicLabel(item.label), submenu: submenu });\n\t\t\t\tthis.setMenu(submenu, item.submenu.items);\n\t\t\t\tmenu.append(submenuItem);\n\t\t\t} else if (isMenubarMenuItemUriAction(item)) {\n\t\t\t\tmenu.append(this.createOpenRecentMenuItem(item.uri, item.label, item.id));\n\t\t\t} else if (isMenubarMenuItemAction(item)) {\n\t\t\t\tif (item.id === 'workbench.action.showAboutDialog') {\n\t\t\t\t\tthis.insertCheckForUpdatesItems(menu);\n\t\t\t\t}\n\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tif (this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) {\n\t\t\t\t\t\t// In the fallback scenario, we are either disabled or using a fallback handler\n\t\t\t\t\t\tif (this.fallbackMenuHandlers[item.id]) {\n\t\t\t\t\t\t\tmenu.append(new MenuItem(this.likeAction(item.id, { label: this.mnemonicLabel(item.label), click: this.fallbackMenuHandlers[item.id] })));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, false, item.checked));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, item.enabled === false ? false : true, !!item.checked));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, item.enabled === false ? false : true, !!item.checked));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setMenuById(menu: Electron.Menu, menuId: string): void {\n\t\tif (this.menubarMenus && this.menubarMenus[menuId]) {\n\t\t\tthis.setMenu(menu, this.menubarMenus[menuId].items);\n\t\t}\n\t}\n\n\tprivate insertCheckForUpdatesItems(menu: Electron.Menu) {\n\t\tconst updateItems = this.getUpdateMenuItems();\n\t\tif (updateItems.length) {\n\t\t\tupdateItems.forEach(i => menu.append(i));\n\t\t\tmenu.append(__separator__());\n\t\t}\n\t}\n\n\tprivate createOpenRecentMenuItem(uri: URI, label: string, commandId: string): Electron.MenuItem {\n\t\tconst revivedUri = URI.revive(uri);\n\t\tconst typeHint = commandId === 'openRecentFile' || commandId === 'openRecentWorkspace' ? 'file' : 'folder';\n\n\t\treturn new MenuItem(this.likeAction(commandId, {\n\t\t\tlabel,\n\t\t\tclick: (menuItem, win, event) => {\n\t\t\t\tconst openInNewWindow = this.isOptionClick(event);\n\t\t\t\tconst success = this.windowsMainService.open({\n\t\t\t\t\tcontext: OpenContext.MENU,\n\t\t\t\t\tcli: this.environmentService.args,\n\t\t\t\t\turisToOpen: [{ uri: revivedUri, typeHint }],\n\t\t\t\t\tforceNewWindow: openInNewWindow,\n\t\t\t\t\tforceOpenWorkspaceAsFile: commandId === 'openRecentFile'\n\t\t\t\t}).length > 0;\n\n\t\t\t\tif (!success) {\n\t\t\t\t\tthis.historyMainService.removeFromRecentlyOpened([revivedUri]);\n\t\t\t\t}\n\t\t\t}\n\t\t}, false));\n\t}\n\n\tprivate isOptionClick(event: Electron.Event): boolean {\n\t\treturn !!(event && ((!isMacintosh && (event.ctrlKey || event.shiftKey)) || (isMacintosh && (event.metaKey || event.altKey))));\n\t}\n\n\tprivate createRoleMenuItem(label: string, commandId: string, role: any): Electron.MenuItem {\n\t\tconst options: Electron.MenuItemConstructorOptions = {\n\t\t\tlabel: this.mnemonicLabel(label),\n\t\t\trole,\n\t\t\tenabled: true\n\t\t};\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate setMacWindowMenu(macWindowMenu: Electron.Menu): void {\n\t\tconst minimize = new MenuItem({ label: nls.localize('mMinimize', \"Minimize\"), role: 'minimize', accelerator: 'Command+M', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst zoom = new MenuItem({ label: nls.localize('mZoom', \"Zoom\"), role: 'zoom', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst bringAllToFront = new MenuItem({ label: nls.localize('mBringToFront', \"Bring All to Front\"), role: 'front', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst switchWindow = this.createMenuItem(nls.localize({ key: 'miSwitchWindow', comment: ['&& denotes a mnemonic'] }, \"Switch &&Window...\"), 'workbench.action.switchWindow');\n\n\t\tconst nativeTabMenuItems: Electron.MenuItem[] = [];\n\t\tif (this.currentEnableNativeTabs) {\n\t\t\tnativeTabMenuItems.push(__separator__());\n\n\t\t\tnativeTabMenuItems.push(this.createMenuItem(nls.localize('mNewTab', \"New Tab\"), 'workbench.action.newWindowTab'));\n\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mShowPreviousTab', \"Show Previous Tab\"), 'workbench.action.showPreviousWindowTab', 'selectPreviousTab'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mShowNextTab', \"Show Next Tab\"), 'workbench.action.showNextWindowTab', 'selectNextTab'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mMoveTabToNewWindow', \"Move Tab to New Window\"), 'workbench.action.moveWindowTabToNewWindow', 'moveTabToNewWindow'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mMergeAllWindows', \"Merge All Windows\"), 'workbench.action.mergeAllWindowTabs', 'mergeAllWindows'));\n\t\t}\n\n\t\t[\n\t\t\tminimize,\n\t\t\tzoom,\n\t\t\tswitchWindow,\n\t\t\t...nativeTabMenuItems,\n\t\t\t__separator__(),\n\t\t\tbringAllToFront\n\t\t].forEach(item => macWindowMenu.append(item));\n\t}\n\n\tprivate getUpdateMenuItems(): Electron.MenuItem[] {\n\t\tconst state = this.updateService.state;\n\n\t\tswitch (state.type) {\n\t\t\tcase StateType.Uninitialized:\n\t\t\t\treturn [];\n\n\t\t\tcase StateType.Idle:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miCheckForUpdates', \"Check for &&Updates...\")), click: () => setTimeout(() => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('CheckForUpdate');\n\n\t\t\t\t\t\tconst focusedWindow = this.windowsMainService.getFocusedWindow();\n\t\t\t\t\t\tconst context = focusedWindow ? { windowId: focusedWindow.id } : null;\n\t\t\t\t\t\tthis.updateService.checkForUpdates(context);\n\t\t\t\t\t}, 0)\n\t\t\t\t})];\n\n\t\t\tcase StateType.CheckingForUpdates:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miCheckingForUpdates', \"Checking For Updates...\"), enabled: false })];\n\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miDownloadUpdate', \"D&&ownload Available Update\")), click: () => {\n\t\t\t\t\t\tthis.updateService.downloadUpdate();\n\t\t\t\t\t}\n\t\t\t\t})];\n\n\t\t\tcase StateType.Downloading:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miDownloadingUpdate', \"Downloading Update...\"), enabled: false })];\n\n\t\t\tcase StateType.Downloaded:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miInstallUpdate', \"Install &&Update...\")), click: () => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('InstallUpdate');\n\t\t\t\t\t\tthis.updateService.applyUpdate();\n\t\t\t\t\t}\n\t\t\t\t})];\n\n\t\t\tcase StateType.Updating:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miInstallingUpdate', \"Installing Update...\"), enabled: false })];\n\n\t\t\tcase StateType.Ready:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miRestartToUpdate', \"Restart to &&Update...\")), click: () => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('RestartToUpdate');\n\t\t\t\t\t\tthis.updateService.quitAndInstall();\n\t\t\t\t\t}\n\t\t\t\t})];\n\t\t}\n\t}\n\n\tprivate static _menuItemIsTriggeredViaKeybinding(event: Electron.Event, userSettingsLabel: string): boolean {\n\t\t// The event coming in from Electron will inform us only about the modifier keys pressed.\n\t\t// The strategy here is to check if the modifier keys match those of the keybinding,\n\t\t// since it is highly unlikely to use modifier keys when clicking with the mouse\n\t\tif (!userSettingsLabel) {\n\t\t\t// There is no keybinding\n\t\t\treturn false;\n\t\t}\n\n\t\tlet ctrlRequired = /ctrl/.test(userSettingsLabel);\n\t\tlet shiftRequired = /shift/.test(userSettingsLabel);\n\t\tlet altRequired = /alt/.test(userSettingsLabel);\n\t\tlet metaRequired = /cmd/.test(userSettingsLabel) || /super/.test(userSettingsLabel);\n\n\t\tif (!ctrlRequired && !shiftRequired && !altRequired && !metaRequired) {\n\t\t\t// This keybinding does not use any modifier keys, so we cannot use this heuristic\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tctrlRequired === event.ctrlKey\n\t\t\t&& shiftRequired === event.shiftKey\n\t\t\t&& altRequired === event.altKey\n\t\t\t&& metaRequired === event.metaKey\n\t\t);\n\t}\n\n\tprivate createMenuItem(label: string, commandId: string | string[], enabled?: boolean, checked?: boolean): Electron.MenuItem;\n\tprivate createMenuItem(label: string, click: () => void, enabled?: boolean, checked?: boolean): Electron.MenuItem;\n\tprivate createMenuItem(arg1: string, arg2: any, arg3?: boolean, arg4?: boolean): Electron.MenuItem {\n\t\tconst label = this.mnemonicLabel(arg1);\n\t\tconst click: () => void = (typeof arg2 === 'function') ? arg2 : (menuItem: Electron.MenuItem & IMenuItemWithKeybinding, win: Electron.BrowserWindow, event: Electron.Event) => {\n\t\t\tconst userSettingsLabel = menuItem ? menuItem.userSettingsLabel : null;\n\t\t\tlet commandId = arg2;\n\t\t\tif (Array.isArray(arg2)) {\n\t\t\t\tcommandId = this.isOptionClick(event) ? arg2[1] : arg2[0]; // support alternative action if we got multiple action Ids and the option key was pressed while invoking\n\t\t\t}\n\n\t\t\tif (userSettingsLabel && Menubar._menuItemIsTriggeredViaKeybinding(event, userSettingsLabel)) {\n\t\t\t\tthis.runActionInRenderer({ type: 'keybinding', userSettingsLabel });\n\t\t\t} else {\n\t\t\t\tthis.runActionInRenderer({ type: 'commandId', commandId });\n\t\t\t}\n\t\t};\n\t\tconst enabled = typeof arg3 === 'boolean' ? arg3 : this.windowsMainService.getWindowCount() > 0;\n\t\tconst checked = typeof arg4 === 'boolean' ? arg4 : false;\n\n\t\tconst options: Electron.MenuItemConstructorOptions = {\n\t\t\tlabel,\n\t\t\tclick,\n\t\t\tenabled\n\t\t};\n\n\t\tif (checked) {\n\t\t\toptions['type'] = 'checkbox';\n\t\t\toptions['checked'] = checked;\n\t\t}\n\n\t\tlet commandId: string | undefined;\n\t\tif (typeof arg2 === 'string') {\n\t\t\tcommandId = arg2;\n\t\t} else if (Array.isArray(arg2)) {\n\t\t\tcommandId = arg2[0];\n\t\t}\n\n\t\tif (isMacintosh) {\n\t\t\t// Add role for special case menu items\n\t\t\tif (commandId === 'editor.action.clipboardCutAction') {\n\t\t\t\toptions['role'] = 'cut';\n\t\t\t} else if (commandId === 'editor.action.clipboardCopyAction') {\n\t\t\t\toptions['role'] = 'copy';\n\t\t\t} else if (commandId === 'editor.action.clipboardPasteAction') {\n\t\t\t\toptions['role'] = 'paste';\n\t\t\t}\n\n\t\t\t// Add context aware click handlers for special case menu items\n\t\t\tif (commandId === 'undo') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.undo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('undo:')\n\t\t\t\t});\n\t\t\t} else if (commandId === 'redo') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.redo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('redo:')\n\t\t\t\t});\n\t\t\t} else if (commandId === 'editor.action.selectAll') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.selectAll(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('selectAll:')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate makeContextAwareClickHandler(click: () => void, contextSpecificHandlers: IMenuItemClickHandler): () => void {\n\t\treturn () => {\n\t\t\t// No Active Window\n\t\t\tconst activeWindow = this.windowsMainService.getFocusedWindow();\n\t\t\tif (!activeWindow) {\n\t\t\t\treturn contextSpecificHandlers.inNoWindow();\n\t\t\t}\n\n\t\t\t// DevTools focused\n\t\t\tif (activeWindow.win.webContents.isDevToolsFocused()) {\n\t\t\t\treturn contextSpecificHandlers.inDevTools(activeWindow.win.webContents.devToolsWebContents);\n\t\t\t}\n\n\t\t\t// Finally execute command in Window\n\t\t\tclick();\n\t\t};\n\t}\n\n\tprivate runActionInRenderer(invocation: IMenuItemInvocation): void {\n\t\t// We make sure to not run actions when the window has no focus, this helps\n\t\t// for https://github.com/Microsoft/vscode/issues/25907 and specifically for\n\t\t// https://github.com/Microsoft/vscode/issues/11928\n\t\t// Still allow to run when the last active window is minimized though for\n\t\t// https://github.com/Microsoft/vscode/issues/63000\n\t\tlet activeWindow = this.windowsMainService.getFocusedWindow();\n\t\tif (!activeWindow) {\n\t\t\tconst lastActiveWindow = this.windowsMainService.getLastActiveWindow();\n\t\t\tif (lastActiveWindow && lastActiveWindow.isMinimized()) {\n\t\t\t\tactiveWindow = lastActiveWindow;\n\t\t\t}\n\t\t}\n\n\t\tif (activeWindow) {\n\t\t\tif (isMacintosh && !this.environmentService.isBuilt && !activeWindow.isReady) {\n\t\t\t\tif ((invocation.type === 'commandId' && invocation.commandId === 'workbench.action.toggleDevTools') || (invocation.type !== 'commandId' && invocation.userSettingsLabel === 'alt+cmd+i')) {\n\t\t\t\t\t// prevent this action from running twice on macOS (https://github.com/Microsoft/vscode/issues/62719)\n\t\t\t\t\t// we already register a keybinding in bootstrap-window.js for opening developer tools in case something\n\t\t\t\t\t// goes wrong and that keybinding is only removed when the application has loaded (= window ready).\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (invocation.type === 'commandId') {\n\t\t\t\tthis.windowsMainService.sendToFocused('vscode:runAction', { id: invocation.commandId, from: 'menu' } as IRunActionInWindowRequest);\n\t\t\t} else {\n\t\t\t\tthis.windowsMainService.sendToFocused('vscode:runKeybinding', { userSettingsLabel: invocation.userSettingsLabel } as IRunKeybindingInWindowRequest);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate withKeybinding(commandId: string | undefined, options: Electron.MenuItemConstructorOptions & IMenuItemWithKeybinding): Electron.MenuItemConstructorOptions {\n\t\tconst binding = typeof commandId === 'string' ? this.keybindings[commandId] : undefined;\n\n\t\t// Apply binding if there is one\n\t\tif (binding && binding.label) {\n\n\t\t\t// if the binding is native, we can just apply it\n\t\t\tif (binding.isNative !== false) {\n\t\t\t\toptions.accelerator = binding.label;\n\t\t\t\toptions.userSettingsLabel = binding.userSettingsLabel;\n\t\t\t}\n\n\t\t\t// the keybinding is not native so we cannot show it as part of the accelerator of\n\t\t\t// the menu item. we fallback to a different strategy so that we always display it\n\t\t\telse if (typeof options.label === 'string') {\n\t\t\t\tconst bindingIndex = options.label.indexOf('[');\n\t\t\t\tif (bindingIndex >= 0) {\n\t\t\t\t\toptions.label = `${options.label.substr(0, bindingIndex)} [${binding.label}]`;\n\t\t\t\t} else {\n\t\t\t\t\toptions.label = `${options.label} [${binding.label}]`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unset bindings if there is none\n\t\telse {\n\t\t\toptions.accelerator = undefined;\n\t\t}\n\n\t\treturn options;\n\t}\n\n\tprivate likeAction(commandId: string, options: Electron.MenuItemConstructorOptions, setAccelerator = !options.accelerator): Electron.MenuItemConstructorOptions {\n\t\tif (setAccelerator) {\n\t\t\toptions = this.withKeybinding(commandId, options);\n\t\t}\n\n\t\tconst originalClick = options.click;\n\t\toptions.click = (item, window, event) => {\n\t\t\tthis.reportMenuActionTelemetry(commandId);\n\t\t\tif (originalClick) {\n\t\t\t\toriginalClick(item, window, event);\n\t\t\t}\n\t\t};\n\n\t\treturn options;\n\t}\n\n\tprivate openUrl(url: string, id: string): void {\n\t\tshell.openExternal(url);\n\t\tthis.reportMenuActionTelemetry(id);\n\t}\n\n\tprivate reportMenuActionTelemetry(id: string): void {\n\t\t/* __GDPR__\n\t\t\t\"workbenchActionExecuted\" : {\n\t\t\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id, from: telemetryFrom });\n\t}\n\n\tprivate mnemonicLabel(label: string): string {\n\t\treturn baseMnemonicLabel(label, !this.currentEnableMenuBarMnemonics);\n\t}\n}\n\nfunction __separator__(): Electron.MenuItem {\n\treturn new MenuItem({ type: 'separator' });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMenubarService, IMenubarData } from 'vs/platform/menubar/common/menubar';\nimport { Menubar } from 'vs/platform/menubar/electron-main/menubar';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\nexport class MenubarService implements IMenubarService {\n\t_serviceBrand: any;\n\n\tprivate _menubar: Menubar;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\t// Install Menu\n\t\tthis._menubar = this.instantiationService.createInstance(Menubar);\n\t}\n\n\tupdateMenubar(windowId: number, menus: IMenubarData): Promise<void> {\n\t\tthis.logService.trace('menubarService#updateMenubar', windowId);\n\n\t\tif (this._menubar) {\n\t\t\tthis._menubar.updateMenu(menus, windowId);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport product from 'vs/platform/product/node/product';\nimport { app } from 'electron';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\nimport { isWindows } from 'vs/base/common/platform';\nimport { coalesce } from 'vs/base/common/arrays';\n\nfunction uriFromRawUrl(url: string): URI | null {\n\ttry {\n\t\treturn URI.parse(url);\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\nexport class ElectronURLListener {\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tinitial: string | string[],\n\t\t@IURLService private readonly urlService: IURLService,\n\t\t@IWindowsMainService windowsService: IWindowsMainService\n\t) {\n\t\tlet globalBuffer;\n\t\ttry {\n\t\t\tglobalBuffer = ((<any>global).getOpenUrls() || []) as string[];\n\t\t} catch (e) {\n\t\t\tglobalBuffer = [];\n\t\t}\n\t\tconst rawBuffer = [\n\t\t\t...(typeof initial === 'string' ? [initial] : initial),\n\t\t\t...globalBuffer\n\t\t];\n\n\t\tconst buffer = coalesce(rawBuffer.map(uriFromRawUrl));\n\t\tconst flush = () => buffer.forEach(uri => {\n\t\t\tif (uri) {\n\t\t\t\turlService.open(uri);\n\t\t\t}\n\t\t});\n\n\t\tif (isWindows) {\n\t\t\tapp.setAsDefaultProtocolClient(product.urlProtocol, process.execPath, ['--open-url', '--']);\n\t\t}\n\n\t\tconst onOpenElectronUrl = Event.map(\n\t\t\tEvent.fromNodeEventEmitter(app, 'open-url', (event: Electron.Event, url: string) => ({ event, url })),\n\t\t\t({ event, url }) => {\n\t\t\t\t// always prevent default and return the url as string\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn url;\n\t\t\t});\n\n\t\tconst onOpenUrl = Event.filter(Event.map(onOpenElectronUrl, uriFromRawUrl), uri => !!uri);\n\t\tonOpenUrl(this.urlService.open, this.urlService, this.disposables);\n\n\t\tconst isWindowReady = windowsService.getWindows()\n\t\t\t.filter(w => w.isReady)\n\t\t\t.length > 0;\n\n\t\tif (isWindowReady) {\n\t\t\tflush();\n\t\t} else {\n\t\t\tEvent.once(windowsService.onWindowReady)(flush);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as os from 'os';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/node/product';\nimport { IWindowsService, OpenContext, INativeOpenDialogOptions, IEnterWorkspaceResult, IMessageBoxResult, IDevToolsOptions, INewWindowOptions, IOpenSettings, IURIToOpen } from 'vs/platform/windows/common/windows';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { shell, crashReporter, app, Menu, clipboard } from 'electron';\nimport { Event } from 'vs/base/common/event';\nimport { IURLService, IURLHandler } from 'vs/platform/url/common/url';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { IWindowsMainService, ISharedProcess, ICodeWindow } from 'vs/platform/windows/electron-main/windows';\nimport { IHistoryMainService, IRecentlyOpened, IRecent } from 'vs/platform/history/common/history';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { Schemas } from 'vs/base/common/network';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class WindowsService implements IWindowsService, IURLHandler, IDisposable {\n\n\t_serviceBrand: any;\n\n\tprivate disposables: IDisposable[] = [];\n\n\tprivate _activeWindowId: number | undefined;\n\n\treadonly onWindowOpen: Event<number> = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-created', (_, w: Electron.BrowserWindow) => w.id), id => !!this.windowsMainService.getWindowById(id));\n\treadonly onWindowBlur: Event<number> = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-blur', (_, w: Electron.BrowserWindow) => w.id), id => !!this.windowsMainService.getWindowById(id));\n\treadonly onWindowMaximize: Event<number> = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-maximize', (_, w: Electron.BrowserWindow) => w.id), id => !!this.windowsMainService.getWindowById(id));\n\treadonly onWindowUnmaximize: Event<number> = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-unmaximize', (_, w: Electron.BrowserWindow) => w.id), id => !!this.windowsMainService.getWindowById(id));\n\treadonly onWindowFocus: Event<number> = Event.any(\n\t\tEvent.map(Event.filter(Event.map(this.windowsMainService.onWindowsCountChanged, () => this.windowsMainService.getLastActiveWindow()), w => !!w), w => w!.id),\n\t\tEvent.filter(Event.fromNodeEventEmitter(app, 'browser-window-focus', (_, w: Electron.BrowserWindow) => w.id), id => !!this.windowsMainService.getWindowById(id))\n\t);\n\n\treadonly onRecentlyOpenedChange: Event<void> = this.historyService.onRecentlyOpenedChange;\n\n\tconstructor(\n\t\tprivate sharedProcess: ISharedProcess,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IURLService urlService: IURLService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IHistoryMainService private readonly historyService: IHistoryMainService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\turlService.registerHandler(this);\n\n\t\t// remember last active window id\n\t\tEvent.latch(Event.any(this.onWindowOpen, this.onWindowFocus))\n\t\t\t(id => this._activeWindowId = id, null, this.disposables);\n\t}\n\n\tasync pickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\tthis.logService.trace('windowsService#pickFileFolderAndOpen');\n\n\t\tthis.windowsMainService.pickFileFolderAndOpen(options);\n\t}\n\n\tasync pickFileAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\tthis.logService.trace('windowsService#pickFileAndOpen');\n\n\t\tthis.windowsMainService.pickFileAndOpen(options);\n\t}\n\n\tasync pickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\tthis.logService.trace('windowsService#pickFolderAndOpen');\n\n\t\tthis.windowsMainService.pickFolderAndOpen(options);\n\t}\n\n\tasync pickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\tthis.logService.trace('windowsService#pickWorkspaceAndOpen');\n\n\t\tthis.windowsMainService.pickWorkspaceAndOpen(options);\n\t}\n\n\tasync showMessageBox(windowId: number, options: Electron.MessageBoxOptions): Promise<IMessageBoxResult> {\n\t\tthis.logService.trace('windowsService#showMessageBox', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => this.windowsMainService.showMessageBox(options, codeWindow), () => this.windowsMainService.showMessageBox(options))!;\n\t}\n\n\tasync showSaveDialog(windowId: number, options: Electron.SaveDialogOptions): Promise<string> {\n\t\tthis.logService.trace('windowsService#showSaveDialog', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => this.windowsMainService.showSaveDialog(options, codeWindow), () => this.windowsMainService.showSaveDialog(options))!;\n\t}\n\n\tasync showOpenDialog(windowId: number, options: Electron.OpenDialogOptions): Promise<string[]> {\n\t\tthis.logService.trace('windowsService#showOpenDialog', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => this.windowsMainService.showOpenDialog(options, codeWindow), () => this.windowsMainService.showOpenDialog(options))!;\n\t}\n\n\tasync reloadWindow(windowId: number, args: ParsedArgs): Promise<void> {\n\t\tthis.logService.trace('windowsService#reloadWindow', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => this.windowsMainService.reload(codeWindow, args));\n\t}\n\n\tasync openDevTools(windowId: number, options?: IDevToolsOptions): Promise<void> {\n\t\tthis.logService.trace('windowsService#openDevTools', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.webContents.openDevTools(options));\n\t}\n\n\tasync toggleDevTools(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#toggleDevTools', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => {\n\t\t\tconst contents = codeWindow.win.webContents;\n\t\t\tif (isMacintosh && codeWindow.hasHiddenTitleBarStyle() && !codeWindow.isFullScreen() && !contents.isDevToolsOpened()) {\n\t\t\t\tcontents.openDevTools({ mode: 'undocked' }); // due to https://github.com/electron/electron/issues/3647\n\t\t\t} else {\n\t\t\t\tcontents.toggleDevTools();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync updateTouchBar(windowId: number, items: ISerializableCommandAction[][]): Promise<void> {\n\t\tthis.logService.trace('windowsService#updateTouchBar', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.updateTouchBar(items));\n\t}\n\n\tasync closeWorkspace(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#closeWorkspace', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => this.windowsMainService.closeWorkspace(codeWindow));\n\t}\n\n\tasync enterWorkspace(windowId: number, path: URI): Promise<IEnterWorkspaceResult | undefined> {\n\t\tthis.logService.trace('windowsService#enterWorkspace', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => this.windowsMainService.enterWorkspace(codeWindow, path));\n\t}\n\n\tasync toggleFullScreen(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#toggleFullScreen', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.toggleFullScreen());\n\t}\n\n\tasync setRepresentedFilename(windowId: number, fileName: string): Promise<void> {\n\t\tthis.logService.trace('windowsService#setRepresentedFilename', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.setRepresentedFilename(fileName));\n\t}\n\n\tasync addRecentlyOpened(recents: IRecent[]): Promise<void> {\n\t\tthis.logService.trace('windowsService#addRecentlyOpened');\n\t\tthis.historyService.addRecentlyOpened(recents);\n\t}\n\n\tasync removeFromRecentlyOpened(paths: URI[]): Promise<void> {\n\t\tthis.logService.trace('windowsService#removeFromRecentlyOpened');\n\n\t\tthis.historyService.removeFromRecentlyOpened(paths);\n\t}\n\n\tasync clearRecentlyOpened(): Promise<void> {\n\t\tthis.logService.trace('windowsService#clearRecentlyOpened');\n\n\t\tthis.historyService.clearRecentlyOpened();\n\t}\n\n\tasync getRecentlyOpened(windowId: number): Promise<IRecentlyOpened> {\n\t\tthis.logService.trace('windowsService#getRecentlyOpened', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => this.historyService.getRecentlyOpened(codeWindow.config.workspace, codeWindow.config.folderUri, codeWindow.config.filesToOpen), () => this.historyService.getRecentlyOpened())!;\n\t}\n\n\tasync newWindowTab(): Promise<void> {\n\t\tthis.logService.trace('windowsService#newWindowTab');\n\n\t\tthis.windowsMainService.openNewTabbedWindow(OpenContext.API);\n\t}\n\n\tasync showPreviousWindowTab(): Promise<void> {\n\t\tthis.logService.trace('windowsService#showPreviousWindowTab');\n\n\t\tMenu.sendActionToFirstResponder('selectPreviousTab:');\n\t}\n\n\tasync showNextWindowTab(): Promise<void> {\n\t\tthis.logService.trace('windowsService#showNextWindowTab');\n\n\t\tMenu.sendActionToFirstResponder('selectNextTab:');\n\t}\n\n\tasync moveWindowTabToNewWindow(): Promise<void> {\n\t\tthis.logService.trace('windowsService#moveWindowTabToNewWindow');\n\n\t\tMenu.sendActionToFirstResponder('moveTabToNewWindow:');\n\t}\n\n\tasync mergeAllWindowTabs(): Promise<void> {\n\t\tthis.logService.trace('windowsService#mergeAllWindowTabs');\n\n\t\tMenu.sendActionToFirstResponder('mergeAllWindows:');\n\t}\n\n\tasync toggleWindowTabsBar(): Promise<void> {\n\t\tthis.logService.trace('windowsService#toggleWindowTabsBar');\n\n\t\tMenu.sendActionToFirstResponder('toggleTabBar:');\n\t}\n\n\tasync focusWindow(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#focusWindow', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.focus());\n\t}\n\n\tasync closeWindow(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#closeWindow', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.close());\n\t}\n\n\tasync isFocused(windowId: number): Promise<boolean> {\n\t\tthis.logService.trace('windowsService#isFocused', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.isFocused(), () => false)!;\n\t}\n\n\tasync isMaximized(windowId: number): Promise<boolean> {\n\t\tthis.logService.trace('windowsService#isMaximized', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.isMaximized(), () => false)!;\n\t}\n\n\tasync maximizeWindow(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#maximizeWindow', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.maximize());\n\t}\n\n\tasync unmaximizeWindow(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#unmaximizeWindow', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.unmaximize());\n\t}\n\n\tasync minimizeWindow(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#minimizeWindow', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.minimize());\n\t}\n\n\tasync onWindowTitleDoubleClick(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#onWindowTitleDoubleClick', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.onWindowTitleDoubleClick());\n\t}\n\n\tasync setDocumentEdited(windowId: number, flag: boolean): Promise<void> {\n\t\tthis.logService.trace('windowsService#setDocumentEdited', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => {\n\t\t\tif (codeWindow.win.isDocumentEdited() !== flag) {\n\t\t\t\tcodeWindow.win.setDocumentEdited(flag);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync openWindow(windowId: number, urisToOpen: IURIToOpen[], options?: IOpenSettings): Promise<void> {\n\t\tthis.logService.trace('windowsService#openWindow');\n\t\tif (!urisToOpen || !urisToOpen.length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.windowsMainService.open({\n\t\t\tcontext: OpenContext.API,\n\t\t\tcontextWindowId: windowId,\n\t\t\turisToOpen: urisToOpen,\n\t\t\tcli: options && options.args ? { ...this.environmentService.args, ...options.args } : this.environmentService.args,\n\t\t\tforceNewWindow: options && options.forceNewWindow,\n\t\t\tforceReuseWindow: options && options.forceReuseWindow,\n\t\t\tforceOpenWorkspaceAsFile: options && options.forceOpenWorkspaceAsFile,\n\t\t\tdiffMode: options && options.diffMode,\n\t\t\taddMode: options && options.addMode\n\t\t});\n\t}\n\n\tasync openNewWindow(options?: INewWindowOptions): Promise<void> {\n\t\tthis.logService.trace('windowsService#openNewWindow ' + JSON.stringify(options));\n\n\t\tthis.windowsMainService.openNewWindow(OpenContext.API, options);\n\t}\n\n\tasync showWindow(windowId: number): Promise<void> {\n\t\tthis.logService.trace('windowsService#showWindow', windowId);\n\n\t\treturn this.withWindow(windowId, codeWindow => codeWindow.win.show());\n\t}\n\n\tasync getWindows(): Promise<{ id: number; workspace?: IWorkspaceIdentifier; folderUri?: ISingleFolderWorkspaceIdentifier; title: string; filename?: string; }[]> {\n\t\tthis.logService.trace('windowsService#getWindows');\n\n\t\tconst windows = this.windowsMainService.getWindows();\n\t\tconst result = windows.map(w => ({ id: w.id, workspace: w.openedWorkspace, folderUri: w.openedFolderUri, title: w.win.getTitle(), filename: w.getRepresentedFilename() }));\n\n\t\treturn result;\n\t}\n\n\tasync getWindowCount(): Promise<number> {\n\t\tthis.logService.trace('windowsService#getWindowCount');\n\n\t\treturn this.windowsMainService.getWindows().length;\n\t}\n\n\tasync log(severity: string, ...messages: string[]): Promise<void> {\n\t\tconsole[severity].apply(console, ...messages);\n\t}\n\n\tasync showItemInFolder(path: URI): Promise<void> {\n\t\tthis.logService.trace('windowsService#showItemInFolder');\n\n\t\tif (path.scheme === Schemas.file) {\n\t\t\tshell.showItemInFolder(path.fsPath);\n\t\t}\n\t}\n\n\tasync getActiveWindowId(): Promise<number | undefined> {\n\t\treturn this._activeWindowId;\n\t}\n\n\tasync openExternal(url: string): Promise<boolean> {\n\t\tthis.logService.trace('windowsService#openExternal');\n\n\t\treturn shell.openExternal(url);\n\t}\n\n\tasync startCrashReporter(config: Electron.CrashReporterStartOptions): Promise<void> {\n\t\tthis.logService.trace('windowsService#startCrashReporter');\n\n\t\tcrashReporter.start(config);\n\t}\n\n\tasync quit(): Promise<void> {\n\t\tthis.logService.trace('windowsService#quit');\n\n\t\tthis.windowsMainService.quit();\n\t}\n\n\tasync relaunch(options: { addArgs?: string[], removeArgs?: string[] }): Promise<void> {\n\t\tthis.logService.trace('windowsService#relaunch');\n\n\t\tthis.lifecycleService.relaunch(options);\n\t}\n\n\tasync whenSharedProcessReady(): Promise<void> {\n\t\tthis.logService.trace('windowsService#whenSharedProcessReady');\n\n\t\treturn this.sharedProcess.whenReady();\n\t}\n\n\tasync toggleSharedProcess(): Promise<void> {\n\t\tthis.logService.trace('windowsService#toggleSharedProcess');\n\n\t\tthis.sharedProcess.toggle();\n\n\t}\n\n\tasync openAboutDialog(): Promise<void> {\n\t\tthis.logService.trace('windowsService#openAboutDialog');\n\n\t\tlet version = app.getVersion();\n\t\tif (product.target) {\n\t\t\tversion = `${version} (${product.target} setup)`;\n\t\t}\n\n\t\tconst detail = nls.localize('aboutDetail',\n\t\t\t\"Version: {0}\\nCommit: {1}\\nDate: {2}\\nElectron: {3}\\nChrome: {4}\\nNode.js: {5}\\nV8: {6}\\nOS: {7}\",\n\t\t\tversion,\n\t\t\tproduct.commit || 'Unknown',\n\t\t\tproduct.date || 'Unknown',\n\t\t\tprocess.versions['electron'],\n\t\t\tprocess.versions['chrome'],\n\t\t\tprocess.versions['node'],\n\t\t\tprocess.versions['v8'],\n\t\t\t`${os.type()} ${os.arch()} ${os.release()}`\n\t\t);\n\n\t\tconst ok = nls.localize('okButton', \"OK\");\n\t\tconst copy = mnemonicButtonLabel(nls.localize({ key: 'copy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"));\n\t\tlet buttons: string[];\n\t\tif (isLinux) {\n\t\t\tbuttons = [copy, ok];\n\t\t} else {\n\t\t\tbuttons = [ok, copy];\n\t\t}\n\n\t\tthis.windowsMainService.showMessageBox({\n\t\t\ttitle: product.nameLong,\n\t\t\ttype: 'info',\n\t\t\tmessage: product.nameLong,\n\t\t\tdetail: `\\n${detail}`,\n\t\t\tbuttons,\n\t\t\tnoLink: true,\n\t\t\tdefaultId: buttons.indexOf(ok)\n\t\t}, this.windowsMainService.getFocusedWindow() || this.windowsMainService.getLastActiveWindow()).then(result => {\n\t\t\tif (buttons[result.button] === copy) {\n\t\t\t\tclipboard.writeText(detail);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync handleURL(uri: URI): Promise<boolean> {\n\n\t\t// Catch file URLs\n\t\tif (uri.authority === Schemas.file && !!uri.path) {\n\t\t\tthis.openFileForURI({ uri: URI.file(uri.fsPath) }); // using fsPath on a non-file URI...\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate openFileForURI(uri: IURIToOpen): void {\n\t\tconst cli = assign(Object.create(null), this.environmentService.args, { goto: true });\n\t\tconst urisToOpen = [uri];\n\n\t\tthis.windowsMainService.open({ context: OpenContext.API, cli, urisToOpen });\n\t}\n\n\tasync resolveProxy(windowId: number, url: string): Promise<string | undefined> {\n\t\treturn new Promise(resolve => {\n\t\t\tconst codeWindow = this.windowsMainService.getWindowById(windowId);\n\t\t\tif (codeWindow) {\n\t\t\t\tcodeWindow.win.webContents.session.resolveProxy(url, proxy => {\n\t\t\t\t\tresolve(proxy);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate withWindow<T>(windowId: number, fn: (window: ICodeWindow) => T, fallback?: () => T): T | undefined {\n\t\tconst codeWindow = this.windowsMainService.getWindowById(windowId);\n\t\tif (codeWindow) {\n\t\t\treturn fn(codeWindow);\n\t\t}\n\n\t\tif (fallback) {\n\t\t\treturn fallback();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { isWindows, isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { extname } from 'vs/base/common/path';\nimport { dirname, resolvePath, isEqualAuthority, isEqualOrParent, relativePath } from 'vs/base/common/resources';\nimport * as jsonEdit from 'vs/base/common/jsonEdit';\nimport * as json from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { toSlashes } from 'vs/base/common/extpath';\n\nexport const IWorkspacesMainService = createDecorator<IWorkspacesMainService>('workspacesMainService');\nexport const IWorkspacesService = createDecorator<IWorkspacesService>('workspacesService');\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\n/**\n * A single folder workspace identifier is just the path to the folder.\n */\nexport type ISingleFolderWorkspaceIdentifier = URI;\n\nexport interface IWorkspaceIdentifier {\n\tid: string;\n\tconfigPath: URI;\n}\n\nexport function reviveWorkspaceIdentifier(workspace: { id: string, configPath: UriComponents; }): IWorkspaceIdentifier {\n\treturn { id: workspace.id, configPath: URI.revive(workspace.configPath) };\n}\n\nexport function isStoredWorkspaceFolder(thing: any): thing is IStoredWorkspaceFolder {\n\treturn isRawFileWorkspaceFolder(thing) || isRawUriWorkspaceFolder(thing);\n}\n\nexport function isRawFileWorkspaceFolder(thing: any): thing is IRawFileWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.path === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport function isRawUriWorkspaceFolder(thing: any): thing is IRawUriWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.uri === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport interface IRawFileWorkspaceFolder {\n\tpath: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\turi: string;\n\tname?: string;\n}\n\nexport type IStoredWorkspaceFolder = IRawFileWorkspaceFolder | IRawUriWorkspaceFolder;\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier {\n\tfolders: IWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IStoredWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n}\n\nexport interface IWorkspaceSavedEvent {\n\tworkspace: IWorkspaceIdentifier;\n\toldConfigPath: string;\n}\n\nexport interface IWorkspaceFolderCreationData {\n\turi: URI;\n\tname?: string;\n}\n\nexport interface IUntitledWorkspaceInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IWorkspacesMainService extends IWorkspacesService {\n\t_serviceBrand: any;\n\n\tonUntitledWorkspaceDeleted: Event<IWorkspaceIdentifier>;\n\n\tcreateUntitledWorkspaceSync(folders?: IWorkspaceFolderCreationData[]): IWorkspaceIdentifier;\n\n\tresolveLocalWorkspaceSync(path: URI): IResolvedWorkspace | null;\n\n\tisUntitledWorkspace(workspace: IWorkspaceIdentifier): boolean;\n\n\tdeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void;\n\n\tgetUntitledWorkspacesSync(): IUntitledWorkspaceInfo[];\n}\n\nexport interface IWorkspacesService {\n\t_serviceBrand: any;\n\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n}\n\nexport function isSingleFolderWorkspaceIdentifier(obj: any): obj is ISingleFolderWorkspaceIdentifier {\n\treturn obj instanceof URI;\n}\n\nexport function isWorkspaceIdentifier(obj: any): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier;\n\n\treturn workspaceIdentifier && typeof workspaceIdentifier.id === 'string' && workspaceIdentifier.configPath instanceof URI;\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tconfigPath: workspace.configuration,\n\t\t\tid: workspace.id\n\t\t};\n\t}\n\tif (workspace.folders.length === 1) {\n\t\treturn workspace.folders[0].uri;\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport type IMultiFolderWorkspaceInitializationPayload = IWorkspaceIdentifier;\nexport interface ISingleFolderWorkspaceInitializationPayload { id: string; folder: ISingleFolderWorkspaceIdentifier; }\nexport interface IEmptyWorkspaceInitializationPayload { id: string; }\n\nexport type IWorkspaceInitializationPayload = IMultiFolderWorkspaceInitializationPayload | ISingleFolderWorkspaceInitializationPayload | IEmptyWorkspaceInitializationPayload;\n\nexport function isSingleFolderWorkspaceInitializationPayload(obj: any): obj is ISingleFolderWorkspaceInitializationPayload {\n\treturn isSingleFolderWorkspaceIdentifier((obj.folder as ISingleFolderWorkspaceIdentifier));\n}\n\nconst WORKSPACE_SUFFIX = '.' + WORKSPACE_EXTENSION;\n\nexport function hasWorkspaceFileExtension(path: string) {\n\treturn extname(path) === WORKSPACE_SUFFIX;\n}\n\nconst SLASH = '/';\n\n/**\n * Given a folder URI and the workspace config folder, computes the IStoredWorkspaceFolder using\n* a relative or absolute path or a uri.\n * Undefined is returned if the folderURI and the targetConfigFolderURI don't have the same schema or authority\n *\n * @param folderURI a workspace folder\n * @param folderName a workspace name\n * @param targetConfigFolderURI the folder where the workspace is living in\n * @param useSlashForPath if set, use forward slashes for file paths on windows\n */\nexport function getStoredWorkspaceFolder(folderURI: URI, folderName: string | undefined, targetConfigFolderURI: URI, useSlashForPath = !isWindows): IStoredWorkspaceFolder {\n\n\tif (folderURI.scheme !== targetConfigFolderURI.scheme || !isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t}\n\n\tlet folderPath: string | undefined;\n\tif (isEqualOrParent(folderURI, targetConfigFolderURI)) {\n\t\t// use relative path\n\t\tfolderPath = relativePath(targetConfigFolderURI, folderURI) || '.'; // always uses forward slashes\n\t\tif (isWindows && folderURI.scheme === Schemas.file && !useSlashForPath) {\n\t\t\t// Windows gets special treatment:\n\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\tfolderPath = folderPath.replace(/\\//g, '\\\\');\n\t\t}\n\t} else {\n\t\t// use absolute path\n\t\tif (folderURI.scheme === Schemas.file) {\n\t\t\tfolderPath = folderURI.fsPath;\n\t\t\tif (isWindows) {\n\t\t\t\t// Windows gets special treatment:\n\t\t\t\t// - normalize all paths to get nice casing of drive letters\n\t\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\t\tfolderPath = normalizeDriveLetter(folderPath);\n\t\t\t\tif (useSlashForPath) {\n\t\t\t\t\tfolderPath = toSlashes(folderPath);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfolderPath = folderURI.path;\n\t\t}\n\t}\n\treturn { name: folderName, path: folderPath };\n}\n\n/**\n * Rewrites the content of a workspace file to be saved at a new location.\n * Throws an exception if file is not a valid workspace file\n */\nexport function rewriteWorkspaceFileForNewLocation(rawWorkspaceContents: string, configPathURI: URI, targetConfigPathURI: URI) {\n\tlet storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n\n\tconst sourceConfigFolder = dirname(configPathURI);\n\tconst targetConfigFolder = dirname(targetConfigPathURI);\n\n\tconst rewrittenFolders: IStoredWorkspaceFolder[] = [];\n\tconst slashForPath = useSlashForPath(storedWorkspace.folders);\n\n\t// Rewrite absolute paths to relative paths if the target workspace folder\n\t// is a parent of the location of the workspace file itself. Otherwise keep\n\t// using absolute paths.\n\tfor (const folder of storedWorkspace.folders) {\n\t\tlet folderURI = isRawFileWorkspaceFolder(folder) ? resolvePath(sourceConfigFolder, folder.path) : URI.parse(folder.uri);\n\t\trewrittenFolders.push(getStoredWorkspaceFolder(folderURI, folder.name, targetConfigFolder, slashForPath));\n\t}\n\n\t// Preserve as much of the existing workspace as possible by using jsonEdit\n\t// and only changing the folders portion.\n\tlet newRawWorkspaceContents = rawWorkspaceContents;\n\tconst edits = jsonEdit.setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' });\n\tedits.forEach(edit => {\n\t\tnewRawWorkspaceContents = jsonEdit.applyEdit(rawWorkspaceContents, edit);\n\t});\n\treturn newRawWorkspaceContents;\n}\n\nfunction doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t// Parse workspace file\n\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t// Filter out folders which do not have a path or uri set\n\tif (Array.isArray(storedWorkspace.folders)) {\n\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t}\n\n\t// Validate\n\tif (!Array.isArray(storedWorkspace.folders)) {\n\t\tthrow new Error(`${path} looks like an invalid workspace file.`);\n\t}\n\n\treturn storedWorkspace;\n}\n\nexport function useSlashForPath(storedFolders: IStoredWorkspaceFolder[]): boolean {\n\tif (isWindows) {\n\t\tfor (const folder of storedFolders) {\n\t\t\tif (isRawFileWorkspaceFolder(folder) && folder.path.indexOf(SLASH) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as objects from 'vs/base/common/objects';\nimport * as nls from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { screen, BrowserWindow, systemPreferences, app, TouchBar, nativeImage } from 'electron';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { parseArgs } from 'vs/platform/environment/node/argv';\nimport product from 'vs/platform/product/node/product';\nimport { IWindowSettings, MenuBarVisibility, IWindowConfiguration, ReadyState, IRunActionInWindowRequest, getTitleBarStyle } from 'vs/platform/windows/common/windows';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ICodeWindow, IWindowState, WindowMode } from 'vs/platform/windows/electron-main/windows';\nimport { IWorkspaceIdentifier, IWorkspacesMainService } from 'vs/platform/workspaces/common/workspaces';\nimport { IBackupMainService } from 'vs/platform/backup/common/backup';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport * as perf from 'vs/base/common/performance';\n// import { resolveMarketplaceHeaders } from 'vs/platform/extensionManagement/node/extensionGalleryService';\nimport { getBackgroundColor } from 'vs/code/electron-main/theme';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { withNullAsUndefined } from 'vs/base/common/types';\n\nexport interface IWindowCreationOptions {\n\tstate: IWindowState;\n\textensionDevelopmentPath?: string;\n\tisExtensionTestHost?: boolean;\n}\n\nexport const defaultWindowState = function (mode = WindowMode.Normal): IWindowState {\n\treturn {\n\t\twidth: 1024,\n\t\theight: 768,\n\t\tmode\n\t};\n};\n\ninterface IWorkbenchEditorConfiguration {\n\tworkbench: {\n\t\teditor: {\n\t\t\tswipeToNavigate: boolean\n\t\t}\n\t};\n}\n\ninterface ITouchBarSegment extends Electron.SegmentedControlSegment {\n\tid: string;\n}\n\nexport class CodeWindow extends Disposable implements ICodeWindow {\n\n\tprivate static readonly MIN_WIDTH = 200;\n\tprivate static readonly MIN_HEIGHT = 120;\n\n\tprivate static readonly MAX_URL_LENGTH = 2 * 1024 * 1024; // https://cs.chromium.org/chromium/src/url/url_constants.cc?l=32\n\n\tprivate hiddenTitleBarStyle: boolean;\n\tprivate showTimeoutHandle: any;\n\tprivate _id: number;\n\tprivate _win: Electron.BrowserWindow;\n\tprivate _lastFocusTime: number;\n\tprivate _readyState: ReadyState;\n\tprivate windowState: IWindowState;\n\tprivate currentMenuBarVisibility: MenuBarVisibility;\n\tprivate representedFilename: string;\n\n\tprivate readonly whenReadyCallbacks: { (window: ICodeWindow): void }[];\n\n\tprivate currentConfig: IWindowConfiguration;\n\t// private pendingLoadConfig?: IWindowConfiguration;\n\n\t// private marketplaceHeadersPromise: Promise<object>;\n\n\tprivate readonly touchBarGroups: Electron.TouchBarSegmentedControl[];\n\n\tprivate nodeless: boolean;\n\n\tconstructor(\n\t\tconfig: IWindowCreationOptions,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@IWorkspacesMainService private readonly workspacesMainService: IWorkspacesMainService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService,\n\t) {\n\t\tsuper();\n\n\t\tthis.touchBarGroups = [];\n\t\tthis._lastFocusTime = -1;\n\t\tthis._readyState = ReadyState.NONE;\n\t\tthis.whenReadyCallbacks = [];\n\n\t\tthis.nodeless = !!(environmentService.args.nodeless && !environmentService.isBuilt);\n\n\t\t// create browser window\n\t\tthis.createBrowserWindow(config);\n\n\t\t// respect configured menu bar visibility\n\t\tthis.onConfigurationUpdated();\n\n\t\t// macOS: touch bar support\n\t\tthis.createTouchBar();\n\n\t\t// Request handling\n\t\tthis.handleMarketplaceRequests();\n\n\t\t// Eventing\n\t\tthis.registerListeners();\n\t}\n\n\tprivate createBrowserWindow(config: IWindowCreationOptions): void {\n\n\t\t// Load window state\n\t\tthis.windowState = this.restoreWindowState(config.state);\n\n\t\t// in case we are maximized or fullscreen, only show later after the call to maximize/fullscreen (see below)\n\t\tconst isFullscreenOrMaximized = (this.windowState.mode === WindowMode.Maximized || this.windowState.mode === WindowMode.Fullscreen);\n\n\t\tconst options: Electron.BrowserWindowConstructorOptions = {\n\t\t\twidth: this.windowState.width,\n\t\t\theight: this.windowState.height,\n\t\t\tx: this.windowState.x,\n\t\t\ty: this.windowState.y,\n\t\t\tbackgroundColor: this.nodeless ? undefined : getBackgroundColor(this.stateService),\n\t\t\tminWidth: CodeWindow.MIN_WIDTH,\n\t\t\tminHeight: CodeWindow.MIN_HEIGHT,\n\t\t\tshow: !isFullscreenOrMaximized,\n\t\t\ttitle: product.nameLong,\n\t\t\twebPreferences: {\n\t\t\t\t// By default if Code is in the background, intervals and timeouts get throttled, so we\n\t\t\t\t// want to enforce that Code stays in the foreground. This triggers a disable_hidden_\n\t\t\t\t// flag that Electron provides via patch:\n\t\t\t\t// https://github.com/electron/libchromiumcontent/blob/master/patches/common/chromium/disable_hidden.patch\n\t\t\t\tbackgroundThrottling: false\n\t\t\t}\n\t\t};\n\n\t\tif (this.nodeless) {\n\t\t\toptions.webPreferences!.nodeIntegration = false; // simulate Electron 5 behaviour\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\toptions.icon = path.join(this.environmentService.appRoot, 'resources/linux/code.png'); // Windows and Mac are better off using the embedded icon(s)\n\t\t}\n\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\n\t\tif (isMacintosh && !this.useNativeFullScreen()) {\n\t\t\toptions.fullscreenable = false; // enables simple fullscreen mode\n\t\t}\n\n\t\tif (isMacintosh) {\n\t\t\toptions.acceptFirstMouse = true; // enabled by default\n\n\t\t\tif (windowConfig && windowConfig.clickThroughInactive === false) {\n\t\t\t\toptions.acceptFirstMouse = false;\n\t\t\t}\n\t\t}\n\n\t\tif (isMacintosh && windowConfig && windowConfig.nativeTabs === true) {\n\t\t\toptions.tabbingIdentifier = product.nameShort; // this opts in to sierra tabs\n\t\t}\n\n\t\tconst useCustomTitleStyle = getTitleBarStyle(this.configurationService, this.environmentService, !!config.extensionDevelopmentPath) === 'custom';\n\t\tif (useCustomTitleStyle) {\n\t\t\toptions.titleBarStyle = 'hidden';\n\t\t\tthis.hiddenTitleBarStyle = true;\n\t\t\tif (!isMacintosh) {\n\t\t\t\toptions.frame = false;\n\t\t\t}\n\t\t}\n\n\t\t// Create the browser window.\n\t\tthis._win = new BrowserWindow(options);\n\t\tthis._id = this._win.id;\n\n\t\tif (isMacintosh && useCustomTitleStyle) {\n\t\t\tthis._win.setSheetOffset(22); // offset dialogs by the height of the custom title bar if we have any\n\t\t}\n\n\t\tif (isFullscreenOrMaximized) {\n\t\t\tthis._win.maximize();\n\n\t\t\tif (this.windowState.mode === WindowMode.Fullscreen) {\n\t\t\t\tthis.setFullScreen(true);\n\t\t\t}\n\n\t\t\tif (!this._win.isVisible()) {\n\t\t\t\tthis._win.show(); // to reduce flicker from the default window size to maximize, we only show after maximize\n\t\t\t}\n\t\t}\n\n\t\tif (this.nodeless) {\n\t\t\tthis._win.webContents.toggleDevTools();\n\t\t}\n\n\t\tthis._lastFocusTime = Date.now(); // since we show directly, we need to set the last focus time too\n\t}\n\n\thasHiddenTitleBarStyle(): boolean {\n\t\treturn this.hiddenTitleBarStyle;\n\t}\n\n\tget isExtensionDevelopmentHost(): boolean {\n\t\treturn !!this.config.extensionDevelopmentPath;\n\t}\n\n\tget isExtensionTestHost(): boolean {\n\t\treturn !!this.config.extensionTestsPath;\n\t}\n\n\tget extensionDevelopmentPath(): string | undefined {\n\t\treturn this.config.extensionDevelopmentPath;\n\t}\n\n\tget config(): IWindowConfiguration {\n\t\treturn this.currentConfig;\n\t}\n\n\tget id(): number {\n\t\treturn this._id;\n\t}\n\n\tget win(): Electron.BrowserWindow {\n\t\treturn this._win;\n\t}\n\n\tsetRepresentedFilename(filename: string): void {\n\t\tif (isMacintosh) {\n\t\t\tthis.win.setRepresentedFilename(filename);\n\t\t} else {\n\t\t\tthis.representedFilename = filename;\n\t\t}\n\t}\n\n\tgetRepresentedFilename(): string {\n\t\tif (isMacintosh) {\n\t\t\treturn this.win.getRepresentedFilename();\n\t\t}\n\n\t\treturn this.representedFilename;\n\t}\n\n\tfocus(): void {\n\t\tif (!this._win) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._win.isMinimized()) {\n\t\t\tthis._win.restore();\n\t\t}\n\n\t\tthis._win.focus();\n\t}\n\n\tget lastFocusTime(): number {\n\t\treturn this._lastFocusTime;\n\t}\n\n\tget backupPath(): string | undefined {\n\t\treturn this.currentConfig ? this.currentConfig.backupPath : undefined;\n\t}\n\n\tget openedWorkspace(): IWorkspaceIdentifier | undefined {\n\t\treturn this.currentConfig ? this.currentConfig.workspace : undefined;\n\t}\n\n\tget openedFolderUri(): URI | undefined {\n\t\treturn this.currentConfig ? this.currentConfig.folderUri : undefined;\n\t}\n\n\tget remoteAuthority(): string | undefined {\n\t\treturn this.currentConfig ? this.currentConfig.remoteAuthority : undefined;\n\t}\n\n\tsetReady(): void {\n\t\tthis._readyState = ReadyState.READY;\n\n\t\t// inform all waiting promises that we are ready now\n\t\twhile (this.whenReadyCallbacks.length) {\n\t\t\tthis.whenReadyCallbacks.pop()!(this);\n\t\t}\n\t}\n\n\tready(): Promise<ICodeWindow> {\n\t\treturn new Promise<ICodeWindow>(resolve => {\n\t\t\tif (this.isReady) {\n\t\t\t\treturn resolve(this);\n\t\t\t}\n\n\t\t\t// otherwise keep and call later when we are ready\n\t\t\tthis.whenReadyCallbacks.push(resolve);\n\t\t});\n\t}\n\n\tget isReady(): boolean {\n\t\treturn this._readyState === ReadyState.READY;\n\t}\n\n\tprivate handleMarketplaceRequests(): void {\n\n\t\t// Resolve marketplace headers\n\t\t// this.marketplaceHeadersPromise = resolveMarketplaceHeaders(this.environmentService);\n\n\t\t// Inject headers when requests are incoming\n\t\t// const urls = ['https://marketplace.visualstudio.com/*', 'https://*.vsassets.io/*'];\n\t\t/* Desktop\n\t\tthis._win.webContents.session.webRequest.onBeforeSendHeaders({ urls }, (details: any, cb: any) => {\n\t\t\tthis.marketplaceHeadersPromise.then(headers => {\n\t\t\t\tcb({ cancel: false, requestHeaders: objects.assign(details.requestHeaders, headers) });\n\t\t\t});\n\t\t});\n\t\t*/\n\t}\n\n\tprivate registerListeners(): void {\n\t\t/* Desktop\n\t\t// Prevent loading of svgs\n\t\tthis._win.webContents.session.webRequest.onBeforeRequest(null!, (details, callback) => {\n\t\t\tif (details.url.indexOf('.svg') > 0) {\n\t\t\t\tconst uri = URI.parse(details.url);\n\t\t\t\tif (uri && !uri.scheme.match(/file/i) && (uri.path as any).endsWith('.svg')) {\n\t\t\t\t\treturn callback({ cancel: true });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn callback({});\n\t\t});\n\n\t\tthis._win.webContents.session.webRequest.onHeadersReceived(null!, (details: any, callback: any) => {\n\t\t\tconst contentType: string[] = (details.responseHeaders['content-type'] || details.responseHeaders['Content-Type']) as any;\n\t\t\tif (contentType && Array.isArray(contentType) && contentType.some(x => x.toLowerCase().indexOf('image/svg') >= 0)) {\n\t\t\t\treturn callback({ cancel: true });\n\t\t\t}\n\n\t\t\treturn callback({ cancel: false, responseHeaders: details.responseHeaders });\n\t\t});\n\n\t\t// Remember that we loaded\n\t\tthis._win.webContents.on('did-finish-load', () => {\n\t\t\tthis._readyState = ReadyState.LOADING;\n\n\t\t\t// Associate properties from the load request if provided\n\t\t\tif (this.pendingLoadConfig) {\n\t\t\t\tthis.currentConfig = this.pendingLoadConfig;\n\n\t\t\t\tthis.pendingLoadConfig = undefined;\n\t\t\t}\n\n\t\t\t// To prevent flashing, we set the window visible after the page has finished to load but before Code is loaded\n\t\t\tif (this._win && !this._win.isVisible()) {\n\t\t\t\tif (this.windowState.mode === WindowMode.Maximized) {\n\t\t\t\t\tthis._win.maximize();\n\t\t\t\t}\n\n\t\t\t\tif (!this._win.isVisible()) { // maximize also makes visible\n\t\t\t\t\tthis._win.show();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t*/\n\n\t\t// App commands support\n\t\tthis.registerNavigationListenerOn('app-command', 'browser-backward', 'browser-forward', false);\n\n\t\t// Window Focus\n\t\tthis._win.on('focus', () => {\n\t\t\tthis._lastFocusTime = Date.now();\n\t\t});\n\n\t\t// Simple fullscreen doesn't resize automatically when the resolution changes so as a workaround\n\t\t// we need to detect when display metrics change or displays are added/removed and toggle the\n\t\t// fullscreen manually.\n\t\tif (isMacintosh) {\n\t\t\tconst simpleFullScreenScheduler = this._register(new RunOnceScheduler(() => {\n\t\t\t\tif (!this._win) {\n\t\t\t\t\treturn; // disposed\n\t\t\t\t}\n\n\t\t\t\tif (!this.useNativeFullScreen() && this.isFullScreen()) {\n\t\t\t\t\tthis.setFullScreen(false);\n\t\t\t\t\tthis.setFullScreen(true);\n\t\t\t\t}\n\t\t\t}, 100));\n\n\t\t\tconst displayChangedListener = () => simpleFullScreenScheduler.schedule();\n\n\t\t\tscreen.on('display-metrics-changed', displayChangedListener);\n\t\t\tthis._register(toDisposable(() => screen.removeListener('display-metrics-changed', displayChangedListener)));\n\n\t\t\tscreen.on('display-added', displayChangedListener);\n\t\t\tthis._register(toDisposable(() => screen.removeListener('display-added', displayChangedListener)));\n\n\t\t\tscreen.on('display-removed', displayChangedListener);\n\t\t\tthis._register(toDisposable(() => screen.removeListener('display-removed', displayChangedListener)));\n\t\t}\n\n\t\t// Window (Un)Maximize\n\t\tthis._win.on('maximize', (e: Event) => {\n\t\t\tif (this.currentConfig) {\n\t\t\t\tthis.currentConfig.maximized = true;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-maximize', e, this._win);\n\t\t});\n\n\t\tthis._win.on('unmaximize', (e: Event) => {\n\t\t\tif (this.currentConfig) {\n\t\t\t\tthis.currentConfig.maximized = false;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-unmaximize', e, this._win);\n\t\t});\n\n\t\t// Window Fullscreen\n\t\tthis._win.on('enter-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:enterFullScreen');\n\t\t});\n\n\t\tthis._win.on('leave-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:leaveFullScreen');\n\t\t});\n\n\t\t// Window Failed to load\n\t\tthis._win.webContents.on('did-fail-load', (event: Electron.Event, errorCode: number, errorDescription: string, validatedURL: string, isMainFrame: boolean) => {\n\t\t\tthis.logService.warn('[electron event]: fail to load, ', errorDescription);\n\t\t});\n\n\t\t// Handle configuration changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationUpdated()));\n\n\t\t// Handle Workspace events\n\t\tthis._register(this.workspacesMainService.onUntitledWorkspaceDeleted(e => this.onUntitledWorkspaceDeleted(e)));\n\t}\n\n\tprivate onUntitledWorkspaceDeleted(workspace: IWorkspaceIdentifier): void {\n\n\t\t// Make sure to update our workspace config if we detect that it\n\t\t// was deleted\n\t\tif (this.openedWorkspace && this.openedWorkspace.id === workspace.id) {\n\t\t\tthis.currentConfig.workspace = undefined;\n\t\t}\n\t}\n\n\tprivate onConfigurationUpdated(): void {\n\t\tconst newMenuBarVisibility = this.getMenuBarVisibility();\n\t\tif (newMenuBarVisibility !== this.currentMenuBarVisibility) {\n\t\t\tthis.currentMenuBarVisibility = newMenuBarVisibility;\n\t\t\tthis.setMenuBarVisibility(newMenuBarVisibility);\n\t\t}\n\n\t\t// Swipe command support (macOS)\n\t\tif (isMacintosh) {\n\t\t\tconst config = this.configurationService.getValue<IWorkbenchEditorConfiguration>();\n\t\t\tif (config && config.workbench && config.workbench.editor && config.workbench.editor.swipeToNavigate) {\n\t\t\t\tthis.registerNavigationListenerOn('swipe', 'left', 'right', true);\n\t\t\t} else {\n\t\t\t\tthis._win.removeAllListeners('swipe');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate registerNavigationListenerOn(command: 'swipe' | 'app-command', back: 'left' | 'browser-backward', forward: 'right' | 'browser-forward', acrossEditors: boolean) {\n\t\tthis._win.on(command as 'swipe' /* | 'app-command' */, (e: Electron.Event, cmd: string) => {\n\t\t\tif (!this.isReady) {\n\t\t\t\treturn; // window must be ready\n\t\t\t}\n\n\t\t\tif (cmd === back) {\n\t\t\t\tthis.send('vscode:runAction', { id: acrossEditors ? 'workbench.action.openPreviousRecentlyUsedEditor' : 'workbench.action.navigateBack', from: 'mouse' } as IRunActionInWindowRequest);\n\t\t\t} else if (cmd === forward) {\n\t\t\t\tthis.send('vscode:runAction', { id: acrossEditors ? 'workbench.action.openNextRecentlyUsedEditor' : 'workbench.action.navigateForward', from: 'mouse' } as IRunActionInWindowRequest);\n\t\t\t}\n\t\t});\n\t}\n\n\taddTabbedWindow(window: ICodeWindow): void {\n\t\tif (isMacintosh) {\n\t\t\tthis._win.addTabbedWindow(window.win);\n\t\t}\n\t}\n\n\tload(config: IWindowConfiguration, isReload?: boolean, disableExtensions?: boolean): void {\n\n\t\t// If this is the first time the window is loaded, we associate the paths\n\t\t// directly with the window because we assume the loading will just work\n\t\tif (this._readyState === ReadyState.NONE) {\n\t\t\tthis.currentConfig = config;\n\t\t}\n\n\t\t// Otherwise, the window is currently showing a folder and if there is an\n\t\t// unload handler preventing the load, we cannot just associate the paths\n\t\t// because the loading might be vetoed. Instead we associate it later when\n\t\t// the window load event has fired.\n\t\telse {\n\t\t\t// this.pendingLoadConfig = config;\n\t\t\tthis._readyState = ReadyState.NAVIGATING;\n\t\t}\n\n\t\t// Add disable-extensions to the config, but do not preserve it on currentConfig or\n\t\t// pendingLoadConfig so that it is applied only on this load\n\t\tconst configuration = objects.assign({}, config);\n\t\tif (disableExtensions !== undefined) {\n\t\t\tconfiguration['disable-extensions'] = disableExtensions;\n\t\t}\n\n\t\t// Clear Document Edited if needed\n\t\tif (isMacintosh && this._win.isDocumentEdited()) {\n\t\t\tif (!isReload || !this.backupMainService.isHotExitEnabled()) {\n\t\t\t\tthis._win.setDocumentEdited(false);\n\t\t\t}\n\t\t}\n\n\t\t// Clear Title and Filename if needed\n\t\tif (!isReload) {\n\t\t\tif (this.getRepresentedFilename()) {\n\t\t\t\tthis.setRepresentedFilename('');\n\t\t\t}\n\n\t\t\tthis._win.setTitle(product.nameLong);\n\t\t}\n\n\t\t// Load URL\n\t\tperf.mark('main:loadWindow');\n\t\tthis._win.loadURL(this.getUrl(configuration));\n\n\t\t// Make window visible if it did not open in N seconds because this indicates an error\n\t\t// Only do this when running out of sources and not when running tests\n\t\tif (!this.environmentService.isBuilt && !this.environmentService.extensionTestsLocationURI) {\n\t\t\tthis.showTimeoutHandle = setTimeout(() => {\n\t\t\t\tif (this._win && !this._win.isVisible() && !this._win.isMinimized()) {\n\t\t\t\t\tthis._win.show();\n\t\t\t\t\tthis._win.focus();\n\t\t\t\t\tthis._win.webContents.openDevTools();\n\t\t\t\t}\n\t\t\t}, 10000);\n\t\t}\n\t}\n\n\treload(configurationIn?: IWindowConfiguration, cli?: ParsedArgs): void {\n\n\t\t// If config is not provided, copy our current one\n\t\tconst configuration = configurationIn ? configurationIn : objects.mixin({}, this.currentConfig);\n\n\t\t// Delete some properties we do not want during reload\n\t\tdelete configuration.filesToOpen;\n\t\tdelete configuration.filesToCreate;\n\t\tdelete configuration.filesToDiff;\n\t\tdelete configuration.filesToWait;\n\n\t\t// Some configuration things get inherited if the window is being reloaded and we are\n\t\t// in extension development mode. These options are all development related.\n\t\tif (this.isExtensionDevelopmentHost && cli) {\n\t\t\tconfiguration.verbose = cli.verbose;\n\t\t\tconfiguration['inspect-extensions'] = cli['inspect-extensions'];\n\t\t\tconfiguration['inspect-brk-extensions'] = cli['inspect-brk-extensions'];\n\t\t\tconfiguration.debugId = cli.debugId;\n\t\t\tconfiguration['extensions-dir'] = cli['extensions-dir'];\n\t\t}\n\n\t\tconfiguration.isInitialStartup = false; // since this is a reload\n\n\t\t// Load config\n\t\tconst disableExtensions = cli ? cli['disable-extensions'] : undefined;\n\t\tthis.load(configuration, true, disableExtensions);\n\t}\n\n\tprivate getUrl(windowConfiguration: IWindowConfiguration): string {\n\n\t\t// Set window ID\n\t\twindowConfiguration.windowId = this._win.id;\n\t\twindowConfiguration.logLevel = this.logService.getLevel();\n\n\t\t// Set zoomlevel\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\tconst zoomLevel = windowConfig && windowConfig.zoomLevel;\n\t\tif (typeof zoomLevel === 'number') {\n\t\t\twindowConfiguration.zoomLevel = zoomLevel;\n\t\t}\n\n\t\t// Set fullscreen state\n\t\twindowConfiguration.fullscreen = this.isFullScreen();\n\n\t\t// Set Accessibility Config\n\t\tlet autoDetectHighContrast = true;\n\t\tif (windowConfig && windowConfig.autoDetectHighContrast === false) {\n\t\t\tautoDetectHighContrast = false;\n\t\t}\n\t\twindowConfiguration.highContrast = isWindows && autoDetectHighContrast && systemPreferences.isInvertedColorScheme();\n\t\twindowConfiguration.accessibilitySupport = app.isAccessibilitySupportEnabled();\n\n\t\t// Title style related\n\t\twindowConfiguration.maximized = this._win.isMaximized();\n\t\twindowConfiguration.frameless = this.hasHiddenTitleBarStyle() && !isMacintosh;\n\n\t\t// Dump Perf Counters\n\t\twindowConfiguration.perfEntries = perf.exportEntries();\n\n\t\t// Parts splash\n\t\twindowConfiguration.partsSplashPath = path.join(this.environmentService.userDataPath, 'rapid_render.json');\n\n\t\t// Config (combination of process.argv and window configuration)\n\t\tconst environment = parseArgs(process.argv);\n\t\tconst config = objects.assign(environment, windowConfiguration);\n\t\tfor (let key in config) {\n\t\t\tif (config[key] === undefined || config[key] === null || config[key] === '' || config[key] === false) {\n\t\t\t\tdelete config[key]; // only send over properties that have a true value\n\t\t\t}\n\t\t}\n\n\t\t// In the unlikely event of the URL becoming larger than 2MB, remove parts of\n\t\t// it that are not under our control. Mainly, the user environment can be very\n\t\t// large depending on user configuration, so we can only remove it in that case.\n\t\tlet configUrl = this.doGetUrl(config);\n\t\tif (configUrl.length > CodeWindow.MAX_URL_LENGTH) {\n\t\t\tdelete config.userEnv;\n\t\t\tthis.logService.warn('Application URL exceeds maximum of 2MB and was shortened.');\n\n\t\t\tconfigUrl = this.doGetUrl(config);\n\n\t\t\tif (configUrl.length > CodeWindow.MAX_URL_LENGTH) {\n\t\t\t\tthis.logService.error('Application URL exceeds maximum of 2MB and cannot be loaded.');\n\t\t\t}\n\t\t}\n\n\t\treturn configUrl;\n\t}\n\n\tprivate doGetUrl(config: object): string {\n\t\tif (this.nodeless) {\n\t\t\treturn `${require.toUrl('vs/code/electron-browser/workbench/workbench.nodeless.html')}?config=${encodeURIComponent(JSON.stringify(config))}`;\n\t\t}\n\n\t\treturn `${require.toUrl('vs/code/electron-browser/workbench/workbench.html')}?config=${encodeURIComponent(JSON.stringify(config))}`;\n\t}\n\n\tserializeWindowState(): IWindowState {\n\t\tif (!this._win) {\n\t\t\treturn defaultWindowState();\n\t\t}\n\n\t\t// fullscreen gets special treatment\n\t\tif (this.isFullScreen()) {\n\t\t\tconst display = screen.getDisplayMatching(this.getBounds());\n\n\t\t\tconst defaultState = defaultWindowState();\n\n\t\t\tconst res = {\n\t\t\t\tmode: WindowMode.Fullscreen,\n\t\t\t\tdisplay: display ? display.id : undefined,\n\n\t\t\t\t// Still carry over window dimensions from previous sessions\n\t\t\t\t// if we can compute it in fullscreen state.\n\t\t\t\t// does not seem possible in all cases on Linux for example\n\t\t\t\t// (https://github.com/Microsoft/vscode/issues/58218) so we\n\t\t\t\t// fallback to the defaults in that case.\n\t\t\t\twidth: this.windowState.width || defaultState.width,\n\t\t\t\theight: this.windowState.height || defaultState.height,\n\t\t\t\tx: this.windowState.x || 0,\n\t\t\t\ty: this.windowState.y || 0\n\t\t\t};\n\n\t\t\treturn res;\n\t\t}\n\n\t\tconst state: IWindowState = Object.create(null);\n\t\tlet mode: WindowMode;\n\n\t\t// get window mode\n\t\tif (!isMacintosh && this._win.isMaximized()) {\n\t\t\tmode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tmode = WindowMode.Normal;\n\t\t}\n\n\t\t// we don't want to save minimized state, only maximized or normal\n\t\tif (mode === WindowMode.Maximized) {\n\t\t\tstate.mode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tstate.mode = WindowMode.Normal;\n\t\t}\n\n\t\t// only consider non-minimized window states\n\t\tif (mode === WindowMode.Normal || mode === WindowMode.Maximized) {\n\t\t\tconst bounds = this.getBounds();\n\n\t\t\tstate.x = bounds.x;\n\t\t\tstate.y = bounds.y;\n\t\t\tstate.width = bounds.width;\n\t\t\tstate.height = bounds.height;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate restoreWindowState(state?: IWindowState): IWindowState {\n\t\tif (state) {\n\t\t\ttry {\n\t\t\t\tstate = withNullAsUndefined(this.validateWindowState(state));\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.warn(`Unexpected error validating window state: ${err}\\n${err.stack}`); // somehow display API can be picky about the state to validate\n\t\t\t}\n\t\t}\n\n\t\tif (!state) {\n\t\t\tstate = defaultWindowState();\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate validateWindowState(state: IWindowState): IWindowState | null {\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (typeof state.x !== 'number'\n\t\t\t|| typeof state.y !== 'number'\n\t\t\t|| typeof state.width !== 'number'\n\t\t\t|| typeof state.height !== 'number'\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (state.width <= 0 || state.height <= 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Monitor: be strict about x/y positioning\n\t\tif (displays.length === 1) {\n\t\t\tconst displayBounds = displays[0].bounds;\n\n\t\t\t// Careful with maximized: in that mode x/y can well be negative!\n\t\t\tif (state.mode !== WindowMode.Maximized && displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t\t}\n\n\t\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t\t}\n\n\t\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t\t}\n\n\t\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t\t}\n\n\t\t\t\tif (state.width > displayBounds.width) {\n\t\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t\t}\n\n\t\t\t\tif (state.height > displayBounds.height) {\n\t\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.mode === WindowMode.Maximized) {\n\t\t\t\treturn defaultWindowState(WindowMode.Maximized); // when maximized, make sure we have good values when the user restores the window\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\t// Multi Montior (fullscreen): try to find the previously used display\n\t\tif (state.display && state.mode === WindowMode.Fullscreen) {\n\t\t\tconst display = displays.filter(d => d.id === state.display)[0];\n\t\t\tif (display && display.bounds && typeof display.bounds.x === 'number' && typeof display.bounds.y === 'number') {\n\t\t\t\tconst defaults = defaultWindowState(WindowMode.Fullscreen); // make sure we have good values when the user restores the window\n\t\t\t\tdefaults.x = display.bounds.x; // carefull to use displays x/y position so that the window ends up on the correct monitor\n\t\t\t\tdefaults.y = display.bounds.y;\n\n\t\t\t\treturn defaults;\n\t\t\t}\n\t\t}\n\n\t\t// Multi Monitor (non-fullscreen): be less strict because metrics can be crazy\n\t\tconst bounds = { x: state.x, y: state.y, width: state.width, height: state.height };\n\t\tconst display = screen.getDisplayMatching(bounds);\n\t\tif (\n\t\t\tdisplay &&\t\t\t\t\t\t\t\t\t\t\t\t// we have a display matching the desired bounds\n\t\t\tbounds.x < display.bounds.x + display.bounds.width &&\t// prevent window from falling out of the screen to the right\n\t\t\tbounds.y < display.bounds.y + display.bounds.height &&\t// prevent window from falling out of the screen to the bottom\n\t\t\tbounds.x + bounds.width > display.bounds.x &&\t\t\t// prevent window from falling out of the screen to the left\n\t\t\tbounds.y + bounds.height > display.bounds.y\t\t\t\t// prevent window from falling out of the scree nto the top\n\t\t) {\n\t\t\tif (state.mode === WindowMode.Maximized) {\n\t\t\t\tconst defaults = defaultWindowState(WindowMode.Maximized); // when maximized, make sure we have good values when the user restores the window\n\t\t\t\tdefaults.x = state.x; // carefull to keep x/y position so that the window ends up on the correct monitor\n\t\t\t\tdefaults.y = state.y;\n\n\t\t\t\treturn defaults;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetBounds(): Electron.Rectangle {\n\t\tconst pos = this._win.getPosition();\n\t\tconst dimension = this._win.getSize();\n\n\t\treturn { x: pos[0], y: pos[1], width: dimension[0], height: dimension[1] };\n\t}\n\n\ttoggleFullScreen(): void {\n\t\tthis.setFullScreen(!this.isFullScreen());\n\t}\n\n\tprivate setFullScreen(fullscreen: boolean): void {\n\n\t\t// Set fullscreen state\n\t\tif (this.useNativeFullScreen()) {\n\t\t\tthis.setNativeFullScreen(fullscreen);\n\t\t} else {\n\t\t\tthis.setSimpleFullScreen(fullscreen);\n\t\t}\n\n\t\t// Events\n\t\tthis.sendWhenReady(fullscreen ? 'vscode:enterFullScreen' : 'vscode:leaveFullScreen');\n\n\t\t// Respect configured menu bar visibility or default to toggle if not set\n\t\tthis.setMenuBarVisibility(this.currentMenuBarVisibility, false);\n\t}\n\n\tisFullScreen(): boolean {\n\t\treturn this._win.isFullScreen() || this._win.isSimpleFullScreen();\n\t}\n\n\tprivate setNativeFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isSimpleFullScreen()) {\n\t\t\tthis._win.setSimpleFullScreen(false);\n\t\t}\n\n\t\tthis._win.setFullScreen(fullscreen);\n\t}\n\n\tprivate setSimpleFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isFullScreen()) {\n\t\t\tthis._win.setFullScreen(false);\n\t\t}\n\n\t\tthis._win.setSimpleFullScreen(fullscreen);\n\t\tthis._win.webContents.focus(); // workaround issue where focus is not going into window\n\t}\n\n\tprivate useNativeFullScreen(): boolean {\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\tif (!windowConfig || typeof windowConfig.nativeFullScreen !== 'boolean') {\n\t\t\treturn true; // default\n\t\t}\n\n\t\tif (windowConfig.nativeTabs) {\n\t\t\treturn true; // https://github.com/electron/electron/issues/16142\n\t\t}\n\n\t\treturn windowConfig.nativeFullScreen !== false;\n\t}\n\n\tisMinimized(): boolean {\n\t\treturn this._win.isMinimized();\n\t}\n\n\tprivate getMenuBarVisibility(): MenuBarVisibility {\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\tif (!windowConfig || !windowConfig.menuBarVisibility) {\n\t\t\treturn 'default';\n\t\t}\n\n\t\tlet menuBarVisibility = windowConfig.menuBarVisibility;\n\t\tif (['visible', 'toggle', 'hidden'].indexOf(menuBarVisibility) < 0) {\n\t\t\tmenuBarVisibility = 'default';\n\t\t}\n\n\t\treturn menuBarVisibility;\n\t}\n\n\tprivate setMenuBarVisibility(visibility: MenuBarVisibility, notify: boolean = true): void {\n\t\tif (isMacintosh) {\n\t\t\treturn; // ignore for macOS platform\n\t\t}\n\n\t\tif (visibility === 'toggle') {\n\t\t\tif (notify) {\n\t\t\t\tthis.send('vscode:showInfoMessage', nls.localize('hiddenMenuBar', \"You can still access the menu bar by pressing the Alt-key.\"));\n\t\t\t}\n\t\t}\n\n\t\tif (visibility === 'hidden') {\n\t\t\t// for some weird reason that I have no explanation for, the menu bar is not hiding when calling\n\t\t\t// this without timeout (see https://github.com/Microsoft/vscode/issues/19777). there seems to be\n\t\t\t// a timing issue with us opening the first window and the menu bar getting created. somehow the\n\t\t\t// fact that we want to hide the menu without being able to bring it back via Alt key makes Electron\n\t\t\t// still show the menu. Unable to reproduce from a simple Hello World application though...\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t}\n\t}\n\n\tprivate doSetMenuBarVisibility(visibility: MenuBarVisibility): void {\n\t\tconst isFullscreen = this.isFullScreen();\n\n\t\tswitch (visibility) {\n\t\t\tcase ('default'):\n\t\t\t\tthis._win.setMenuBarVisibility(!isFullscreen);\n\t\t\t\tthis._win.setAutoHideMenuBar(isFullscreen);\n\t\t\t\tbreak;\n\n\t\t\tcase ('visible'):\n\t\t\t\tthis._win.setMenuBarVisibility(true);\n\t\t\t\tthis._win.setAutoHideMenuBar(false);\n\t\t\t\tbreak;\n\n\t\t\tcase ('toggle'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.setAutoHideMenuBar(true);\n\t\t\t\tbreak;\n\n\t\t\tcase ('hidden'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.setAutoHideMenuBar(false);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tonWindowTitleDoubleClick(): void {\n\n\t\t// Respect system settings on mac with regards to title click on windows title\n\t\tif (isMacintosh) {\n\t\t\tconst action = systemPreferences.getUserDefault('AppleActionOnDoubleClick', 'string');\n\t\t\tswitch (action) {\n\t\t\t\tcase 'Minimize':\n\t\t\t\t\tthis.win.minimize();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'None':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Maximize':\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.win.isMaximized()) {\n\t\t\t\t\t\tthis.win.unmaximize();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.win.maximize();\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Linux/Windows: just toggle maximize/minimized state\n\t\telse {\n\t\t\tif (this.win.isMaximized()) {\n\t\t\t\tthis.win.unmaximize();\n\t\t\t} else {\n\t\t\t\tthis.win.maximize();\n\t\t\t}\n\t\t}\n\t}\n\n\tclose(): void {\n\t\tif (this._win) {\n\t\t\tthis._win.close();\n\t\t}\n\t}\n\n\tsendWhenReady(channel: string, ...args: any[]): void {\n\t\tif (this.isReady) {\n\t\t\tthis.send(channel, ...args);\n\t\t} else {\n\t\t\tthis.ready().then(() => this.send(channel, ...args));\n\t\t}\n\t}\n\n\tsend(channel: string, ...args: any[]): void {\n\t\tif (this._win) {\n\t\t\tthis._win.webContents.send(channel, ...args);\n\t\t}\n\t}\n\n\tupdateTouchBar(groups: ISerializableCommandAction[][]): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// Update segments for all groups. Setting the segments property\n\t\t// of the group directly prevents ugly flickering from happening\n\t\tthis.touchBarGroups.forEach((touchBarGroup, index) => {\n\t\t\tconst commands = groups[index];\n\t\t\ttouchBarGroup.segments = this.createTouchBarGroupSegments(commands);\n\t\t});\n\t}\n\n\tprivate createTouchBar(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// To avoid flickering, we try to reuse the touch bar group\n\t\t// as much as possible by creating a large number of groups\n\t\t// for reusing later.\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tconst groupTouchBar = this.createTouchBarGroup();\n\t\t\tthis.touchBarGroups.push(groupTouchBar);\n\t\t}\n\n\t\tthis._win.setTouchBar(new TouchBar({ items: this.touchBarGroups }));\n\t}\n\n\tprivate createTouchBarGroup(items: ISerializableCommandAction[] = []): Electron.TouchBarSegmentedControl {\n\n\t\t// Group Segments\n\t\tconst segments = this.createTouchBarGroupSegments(items);\n\n\t\t// Group Control\n\t\tconst control = new TouchBar.TouchBarSegmentedControl({\n\t\t\tsegments,\n\t\t\tmode: 'buttons',\n\t\t\tsegmentStyle: 'automatic',\n\t\t\tchange: (selectedIndex) => {\n\t\t\t\tthis.sendWhenReady('vscode:runAction', { id: (control.segments[selectedIndex] as ITouchBarSegment).id, from: 'touchbar' });\n\t\t\t}\n\t\t});\n\n\t\treturn control;\n\t}\n\n\tprivate createTouchBarGroupSegments(items: ISerializableCommandAction[] = []): ITouchBarSegment[] {\n\t\tconst segments: ITouchBarSegment[] = items.map(item => {\n\t\t\tlet icon: Electron.NativeImage | undefined;\n\t\t\tif (item.iconLocation && item.iconLocation.dark.scheme === 'file') {\n\t\t\t\ticon = nativeImage.createFromPath(URI.revive(item.iconLocation.dark).fsPath);\n\t\t\t\tif (icon.isEmpty()) {\n\t\t\t\t\ticon = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid: item.id,\n\t\t\t\tlabel: !icon ? item.title as string : undefined,\n\t\t\t\ticon\n\t\t\t};\n\t\t});\n\n\t\treturn segments;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.showTimeoutHandle) {\n\t\t\tclearTimeout(this.showTimeoutHandle);\n\t\t}\n\n\t\tthis._win = null!; // Important to dereference the window object to allow for GC\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport * as extpath from 'vs/base/common/extpath';\nimport { OpenContext } from 'vs/platform/windows/common/windows';\nimport { IWorkspaceIdentifier, IResolvedWorkspace, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { isEqual, isEqualOrParent } from 'vs/base/common/resources';\n\nexport interface ISimpleWindow {\n\topenedWorkspace?: IWorkspaceIdentifier;\n\topenedFolderUri?: URI;\n\n\textensionDevelopmentPath?: string;\n\tlastFocusTime: number;\n}\n\nexport interface IBestWindowOrFolderOptions<W extends ISimpleWindow> {\n\twindows: W[];\n\tnewWindow: boolean;\n\tcontext: OpenContext;\n\tfileUri?: URI;\n\tuserHome?: string;\n\tcodeSettingsFolder?: string;\n\tlocalWorkspaceResolver: (workspace: IWorkspaceIdentifier) => IResolvedWorkspace | null;\n}\n\nexport function findBestWindowOrFolderForFile<W extends ISimpleWindow>({ windows, newWindow, context, fileUri, localWorkspaceResolver: workspaceResolver }: IBestWindowOrFolderOptions<W>): W | undefined {\n\tif (!newWindow && fileUri && (context === OpenContext.DESKTOP || context === OpenContext.CLI || context === OpenContext.DOCK)) {\n\t\tconst windowOnFilePath = findWindowOnFilePath(windows, fileUri, workspaceResolver);\n\t\tif (windowOnFilePath) {\n\t\t\treturn windowOnFilePath;\n\t\t}\n\t}\n\treturn !newWindow ? getLastActiveWindow(windows) : undefined;\n}\n\nfunction findWindowOnFilePath<W extends ISimpleWindow>(windows: W[], fileUri: URI, localWorkspaceResolver: (workspace: IWorkspaceIdentifier) => IResolvedWorkspace | null): W | null {\n\n\t// First check for windows with workspaces that have a parent folder of the provided path opened\n\tfor (const window of windows) {\n\t\tconst workspace = window.openedWorkspace;\n\t\tif (workspace) {\n\t\t\tconst resolvedWorkspace = localWorkspaceResolver(workspace);\n\t\t\tif (resolvedWorkspace) {\n\t\t\t\t// workspace could be resolved: It's in the local file system\n\t\t\t\tif (resolvedWorkspace.folders.some(folder => isEqualOrParent(fileUri, folder.uri))) {\n\t\t\t\t\treturn window;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// use the config path instead\n\t\t\t\tif (isEqualOrParent(fileUri, workspace.configPath)) {\n\t\t\t\t\treturn window;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then go with single folder windows that are parent of the provided file path\n\tconst singleFolderWindowsOnFilePath = windows.filter(window => window.openedFolderUri && isEqualOrParent(fileUri, window.openedFolderUri));\n\tif (singleFolderWindowsOnFilePath.length) {\n\t\treturn singleFolderWindowsOnFilePath.sort((a, b) => -(a.openedFolderUri!.path.length - b.openedFolderUri!.path.length))[0];\n\t}\n\n\treturn null;\n}\n\nexport function getLastActiveWindow<W extends ISimpleWindow>(windows: W[]): W | undefined {\n\tconst lastFocusedDate = Math.max.apply(Math, windows.map(window => window.lastFocusTime));\n\n\treturn windows.filter(window => window.lastFocusTime === lastFocusedDate)[0];\n}\n\nexport function findWindowOnWorkspace<W extends ISimpleWindow>(windows: W[], workspace: (IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier)): W | null {\n\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\tfor (const window of windows) {\n\t\t\t// match on folder\n\t\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\t\tif (window.openedFolderUri && isEqual(window.openedFolderUri, workspace)) {\n\t\t\t\t\treturn window;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (isWorkspaceIdentifier(workspace)) {\n\t\tfor (const window of windows) {\n\t\t\t// match on workspace\n\t\t\tif (window.openedWorkspace && window.openedWorkspace.id === workspace.id) {\n\t\t\t\treturn window;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n\nexport function findWindowOnExtensionDevelopmentPath<W extends ISimpleWindow>(windows: W[], extensionDevelopmentPath: string): W | null {\n\tfor (const window of windows) {\n\t\t// match on extension development path. The path can be a path or uri string, using paths.isEqual is not 100% correct but good enough\n\t\tif (window.extensionDevelopmentPath && extpath.isEqual(window.extensionDevelopmentPath, extensionDevelopmentPath, !platform.isLinux /* ignorecase */)) {\n\t\t\treturn window;\n\t\t}\n\t}\n\treturn null;\n}\n\nexport function findWindowOnWorkspaceOrFolderUri<W extends ISimpleWindow>(windows: W[], uri: URI | undefined): W | null {\n\tif (!uri) {\n\t\treturn null;\n\t}\n\tfor (const window of windows) {\n\t\t// check for workspace config path\n\t\tif (window.openedWorkspace && isEqual(window.openedWorkspace.configPath, uri)) {\n\t\t\treturn window;\n\t\t}\n\n\t\t// check for folder path\n\t\tif (window.openedFolderUri && isEqual(window.openedFolderUri, uri)) {\n\t\t\treturn window;\n\t\t}\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as crypto from 'crypto';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { writeFileAndFlushSync } from 'vs/base/node/extfs';\nimport * as arrays from 'vs/base/common/arrays';\nimport { IBackupMainService, IBackupWorkspacesFormat, IEmptyWindowBackupInfo, IWorkspaceBackupInfo } from 'vs/platform/backup/common/backup';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IFilesConfiguration, HotExitConfiguration } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IWorkspaceIdentifier, isWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { isEqual as areResourcesEquals, getComparisonKey, hasToIgnoreCase } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport { writeFile, readFile, readdir, exists, del, rename } from 'vs/base/node/pfs';\n\nexport class BackupMainService implements IBackupMainService {\n\n\t_serviceBrand: any;\n\n\tprotected backupHome: string;\n\tprotected workspacesJsonPath: string;\n\n\tprivate rootWorkspaces: IWorkspaceBackupInfo[];\n\tprivate folderWorkspaces: URI[];\n\tprivate emptyWorkspaces: IEmptyWindowBackupInfo[];\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.backupHome = environmentService.backupHome;\n\t\tthis.workspacesJsonPath = environmentService.backupWorkspacesPath;\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tlet backups: IBackupWorkspacesFormat;\n\t\ttry {\n\t\t\tbackups = JSON.parse(await readFile(this.workspacesJsonPath, 'utf8')); // invalid JSON or permission issue can happen here\n\t\t} catch (error) {\n\t\t\tbackups = Object.create(null);\n\t\t}\n\n\t\t// read empty workspaces backups first\n\t\tif (backups.emptyWorkspaceInfos) {\n\t\t\tthis.emptyWorkspaces = await this.validateEmptyWorkspaces(backups.emptyWorkspaceInfos);\n\t\t} else if (Array.isArray(backups.emptyWorkspaces)) {\n\t\t\t// read legacy entries\n\t\t\tthis.emptyWorkspaces = await this.validateEmptyWorkspaces(backups.emptyWorkspaces.map(backupFolder => ({ backupFolder })));\n\t\t} else {\n\t\t\tthis.emptyWorkspaces = [];\n\t\t}\n\n\t\t// read workspace backups\n\t\tlet rootWorkspaces: IWorkspaceBackupInfo[] = [];\n\t\ttry {\n\t\t\tif (Array.isArray(backups.rootURIWorkspaces)) {\n\t\t\t\trootWorkspaces = backups.rootURIWorkspaces.map(f => ({ workspace: { id: f.id, configPath: URI.parse(f.configURIPath) }, remoteAuthority: f.remoteAuthority }));\n\t\t\t} else if (Array.isArray(backups.rootWorkspaces)) {\n\t\t\t\trootWorkspaces = backups.rootWorkspaces.map(f => ({ workspace: { id: f.id, configPath: URI.file(f.configPath) } }));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore URI parsing exceptions\n\t\t}\n\t\tthis.rootWorkspaces = await this.validateWorkspaces(rootWorkspaces);\n\n\t\t// read folder backups\n\t\tlet workspaceFolders: URI[] = [];\n\t\ttry {\n\t\t\tif (Array.isArray(backups.folderURIWorkspaces)) {\n\t\t\t\tworkspaceFolders = backups.folderURIWorkspaces.map(f => URI.parse(f));\n\t\t\t} else if (Array.isArray(backups.folderWorkspaces)) {\n\t\t\t\t// migrate legacy folder paths\n\t\t\t\tworkspaceFolders = [];\n\t\t\t\tfor (const folderPath of backups.folderWorkspaces) {\n\t\t\t\t\tconst oldFolderHash = this.getLegacyFolderHash(folderPath);\n\t\t\t\t\tconst folderUri = URI.file(folderPath);\n\t\t\t\t\tconst newFolderHash = this.getFolderHash(folderUri);\n\t\t\t\t\tif (newFolderHash !== oldFolderHash) {\n\t\t\t\t\t\tawait this.moveBackupFolder(this.getBackupPath(newFolderHash), this.getBackupPath(oldFolderHash));\n\t\t\t\t\t}\n\t\t\t\t\tworkspaceFolders.push(folderUri);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore URI parsing exceptions\n\t\t}\n\n\t\tthis.folderWorkspaces = await this.validateFolders(workspaceFolders);\n\n\t\t// save again in case some workspaces or folders have been removed\n\t\tawait this.save();\n\t}\n\n\tgetWorkspaceBackups(): IWorkspaceBackupInfo[] {\n\t\tif (this.isHotExitOnExitAndWindowClose()) {\n\t\t\t// Only non-folder windows are restored on main process launch when\n\t\t\t// hot exit is configured as onExitAndWindowClose.\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.rootWorkspaces.slice(0); // return a copy\n\t}\n\n\tgetFolderBackupPaths(): URI[] {\n\t\tif (this.isHotExitOnExitAndWindowClose()) {\n\t\t\t// Only non-folder windows are restored on main process launch when\n\t\t\t// hot exit is configured as onExitAndWindowClose.\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.folderWorkspaces.slice(0); // return a copy\n\t}\n\n\tisHotExitEnabled(): boolean {\n\t\treturn this.getHotExitConfig() !== HotExitConfiguration.OFF;\n\t}\n\n\tprivate isHotExitOnExitAndWindowClose(): boolean {\n\t\treturn this.getHotExitConfig() === HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE;\n\t}\n\n\tprivate getHotExitConfig(): string {\n\t\tconst config = this.configurationService.getValue<IFilesConfiguration>();\n\n\t\treturn (config && config.files && config.files.hotExit) || HotExitConfiguration.ON_EXIT;\n\t}\n\n\tgetEmptyWindowBackupPaths(): IEmptyWindowBackupInfo[] {\n\t\treturn this.emptyWorkspaces.slice(0); // return a copy\n\t}\n\n\tregisterWorkspaceBackupSync(workspaceInfo: IWorkspaceBackupInfo, migrateFrom?: string): string {\n\t\tif (!this.rootWorkspaces.some(w => workspaceInfo.workspace.id === w.workspace.id)) {\n\t\t\tthis.rootWorkspaces.push(workspaceInfo);\n\t\t\tthis.saveSync();\n\t\t}\n\n\t\tconst backupPath = this.getBackupPath(workspaceInfo.workspace.id);\n\n\t\tif (migrateFrom) {\n\t\t\tthis.moveBackupFolderSync(backupPath, migrateFrom);\n\t\t}\n\n\t\treturn backupPath;\n\t}\n\n\tprivate moveBackupFolderSync(backupPath: string, moveFromPath: string): void {\n\n\t\t// Target exists: make sure to convert existing backups to empty window backups\n\t\tif (fs.existsSync(backupPath)) {\n\t\t\tthis.convertToEmptyWindowBackupSync(backupPath);\n\t\t}\n\n\t\t// When we have data to migrate from, move it over to the target location\n\t\tif (fs.existsSync(moveFromPath)) {\n\t\t\ttry {\n\t\t\t\tfs.renameSync(moveFromPath, backupPath);\n\t\t\t} catch (ex) {\n\t\t\t\tthis.logService.error(`Backup: Could not move backup folder to new location: ${ex.toString()}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async moveBackupFolder(backupPath: string, moveFromPath: string): Promise<void> {\n\n\t\t// Target exists: make sure to convert existing backups to empty window backups\n\t\tif (await exists(backupPath)) {\n\t\t\tawait this.convertToEmptyWindowBackup(backupPath);\n\t\t}\n\n\t\t// When we have data to migrate from, move it over to the target location\n\t\tif (await exists(moveFromPath)) {\n\t\t\ttry {\n\t\t\t\tawait rename(moveFromPath, backupPath);\n\t\t\t} catch (ex) {\n\t\t\t\tthis.logService.error(`Backup: Could not move backup folder to new location: ${ex.toString()}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tunregisterWorkspaceBackupSync(workspace: IWorkspaceIdentifier): void {\n\t\tconst id = workspace.id;\n\t\tlet index = arrays.firstIndex(this.rootWorkspaces, w => w.workspace.id === id);\n\t\tif (index !== -1) {\n\t\t\tthis.rootWorkspaces.splice(index, 1);\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tregisterFolderBackupSync(folderUri: URI): string {\n\t\tif (!this.folderWorkspaces.some(uri => areResourcesEquals(folderUri, uri))) {\n\t\t\tthis.folderWorkspaces.push(folderUri);\n\t\t\tthis.saveSync();\n\t\t}\n\n\t\treturn this.getBackupPath(this.getFolderHash(folderUri));\n\t}\n\n\tunregisterFolderBackupSync(folderUri: URI): void {\n\t\tlet index = arrays.firstIndex(this.folderWorkspaces, uri => areResourcesEquals(folderUri, uri));\n\t\tif (index !== -1) {\n\t\t\tthis.folderWorkspaces.splice(index, 1);\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tregisterEmptyWindowBackupSync(backupInfo: IEmptyWindowBackupInfo): string {\n\t\tlet backupFolder = backupInfo.backupFolder;\n\t\tlet remoteAuthority = backupInfo.remoteAuthority;\n\n\t\t// Generate a new folder if this is a new empty workspace\n\t\tif (!backupFolder) {\n\t\t\tbackupFolder = this.getRandomEmptyWindowId();\n\t\t}\n\n\t\tif (!this.emptyWorkspaces.some(w => !!w.backupFolder && isEqual(w.backupFolder, backupFolder!, !platform.isLinux))) {\n\t\t\tthis.emptyWorkspaces.push({ backupFolder, remoteAuthority });\n\t\t\tthis.saveSync();\n\t\t}\n\n\t\treturn this.getBackupPath(backupFolder);\n\t}\n\n\tunregisterEmptyWindowBackupSync(backupFolder: string): void {\n\t\tlet index = arrays.firstIndex(this.emptyWorkspaces, w => !!w.backupFolder && isEqual(w.backupFolder, backupFolder, !platform.isLinux));\n\t\tif (index !== -1) {\n\t\t\tthis.emptyWorkspaces.splice(index, 1);\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate getBackupPath(oldFolderHash: string): string {\n\t\treturn path.join(this.backupHome, oldFolderHash);\n\t}\n\n\tprivate async validateWorkspaces(rootWorkspaces: IWorkspaceBackupInfo[]): Promise<IWorkspaceBackupInfo[]> {\n\t\tif (!Array.isArray(rootWorkspaces)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst seenIds: { [id: string]: boolean } = Object.create(null);\n\t\tconst result: IWorkspaceBackupInfo[] = [];\n\n\t\t// Validate Workspaces\n\t\tfor (let workspaceInfo of rootWorkspaces) {\n\t\t\tconst workspace = workspaceInfo.workspace;\n\t\t\tif (!isWorkspaceIdentifier(workspace)) {\n\t\t\t\treturn []; // wrong format, skip all entries\n\t\t\t}\n\n\t\t\tif (!seenIds[workspace.id]) {\n\t\t\t\tseenIds[workspace.id] = true;\n\n\t\t\t\tconst backupPath = this.getBackupPath(workspace.id);\n\t\t\t\tconst hasBackups = await this.hasBackups(backupPath);\n\n\t\t\t\t// If the workspace has no backups, ignore it\n\t\t\t\tif (hasBackups) {\n\t\t\t\t\tif (workspace.configPath.scheme !== Schemas.file || await exists(workspace.configPath.fsPath)) {\n\t\t\t\t\t\tresult.push(workspaceInfo);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If the workspace has backups, but the target workspace is missing, convert backups to empty ones\n\t\t\t\t\t\tawait this.convertToEmptyWindowBackup(backupPath);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.deleteStaleBackup(backupPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async validateFolders(folderWorkspaces: URI[]): Promise<URI[]> {\n\t\tif (!Array.isArray(folderWorkspaces)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: URI[] = [];\n\t\tconst seen: { [id: string]: boolean } = Object.create(null);\n\t\tfor (let folderURI of folderWorkspaces) {\n\t\t\tconst key = getComparisonKey(folderURI);\n\t\t\tif (!seen[key]) {\n\t\t\t\tseen[key] = true;\n\n\t\t\t\tconst backupPath = this.getBackupPath(this.getFolderHash(folderURI));\n\t\t\t\tconst hasBackups = await this.hasBackups(backupPath);\n\n\t\t\t\t// If the folder has no backups, ignore it\n\t\t\t\tif (hasBackups) {\n\t\t\t\t\tif (folderURI.scheme !== Schemas.file || await exists(folderURI.fsPath)) {\n\t\t\t\t\t\tresult.push(folderURI);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If the folder has backups, but the target workspace is missing, convert backups to empty ones\n\t\t\t\t\t\tawait this.convertToEmptyWindowBackup(backupPath);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.deleteStaleBackup(backupPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async validateEmptyWorkspaces(emptyWorkspaces: IEmptyWindowBackupInfo[]): Promise<IEmptyWindowBackupInfo[]> {\n\t\tif (!Array.isArray(emptyWorkspaces)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: IEmptyWindowBackupInfo[] = [];\n\t\tconst seen: { [id: string]: boolean } = Object.create(null);\n\n\t\t// Validate Empty Windows\n\t\tfor (let backupInfo of emptyWorkspaces) {\n\t\t\tconst backupFolder = backupInfo.backupFolder;\n\t\t\tif (typeof backupFolder !== 'string') {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tif (!seen[backupFolder]) {\n\t\t\t\tseen[backupFolder] = true;\n\n\t\t\t\tconst backupPath = this.getBackupPath(backupFolder);\n\t\t\t\tif (await this.hasBackups(backupPath)) {\n\t\t\t\t\tresult.push(backupInfo);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.deleteStaleBackup(backupPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async deleteStaleBackup(backupPath: string): Promise<void> {\n\t\ttry {\n\t\t\tif (await exists(backupPath)) {\n\t\t\t\tawait del(backupPath);\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(`Backup: Could not delete stale backup: ${ex.toString()}`);\n\t\t}\n\t}\n\n\tprivate async convertToEmptyWindowBackup(backupPath: string): Promise<boolean> {\n\n\t\t// New empty window backup\n\t\tlet newBackupFolder = this.getRandomEmptyWindowId();\n\t\twhile (this.emptyWorkspaces.some(w => !!w.backupFolder && isEqual(w.backupFolder, newBackupFolder, platform.isLinux))) {\n\t\t\tnewBackupFolder = this.getRandomEmptyWindowId();\n\t\t}\n\n\t\t// Rename backupPath to new empty window backup path\n\t\tconst newEmptyWindowBackupPath = this.getBackupPath(newBackupFolder);\n\t\ttry {\n\t\t\tawait rename(backupPath, newEmptyWindowBackupPath);\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(`Backup: Could not rename backup folder: ${ex.toString()}`);\n\t\t\treturn false;\n\t\t}\n\t\tthis.emptyWorkspaces.push({ backupFolder: newBackupFolder });\n\n\t\treturn true;\n\t}\n\n\tprivate convertToEmptyWindowBackupSync(backupPath: string): boolean {\n\n\t\t// New empty window backup\n\t\tlet newBackupFolder = this.getRandomEmptyWindowId();\n\t\twhile (this.emptyWorkspaces.some(w => !!w.backupFolder && isEqual(w.backupFolder, newBackupFolder, platform.isLinux))) {\n\t\t\tnewBackupFolder = this.getRandomEmptyWindowId();\n\t\t}\n\n\t\t// Rename backupPath to new empty window backup path\n\t\tconst newEmptyWindowBackupPath = this.getBackupPath(newBackupFolder);\n\t\ttry {\n\t\t\tfs.renameSync(backupPath, newEmptyWindowBackupPath);\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(`Backup: Could not rename backup folder: ${ex.toString()}`);\n\t\t\treturn false;\n\t\t}\n\t\tthis.emptyWorkspaces.push({ backupFolder: newBackupFolder });\n\n\t\treturn true;\n\t}\n\n\tprivate async hasBackups(backupPath: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst backupSchemas = await readdir(backupPath);\n\n\t\t\tfor (const backupSchema of backupSchemas) {\n\t\t\t\ttry {\n\t\t\t\t\tconst backupSchemaChildren = await readdir(path.join(backupPath, backupSchema));\n\t\t\t\t\tif (backupSchemaChildren.length > 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// invalid folder\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// backup path does not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate saveSync(): void {\n\t\ttry {\n\t\t\twriteFileAndFlushSync(this.workspacesJsonPath, JSON.stringify(this.serializeBackups()));\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(`Backup: Could not save workspaces.json: ${ex.toString()}`);\n\t\t}\n\t}\n\n\tprivate async save(): Promise<void> {\n\t\ttry {\n\t\t\tawait writeFile(this.workspacesJsonPath, JSON.stringify(this.serializeBackups()));\n\t\t} catch (ex) {\n\t\t\tthis.logService.error(`Backup: Could not save workspaces.json: ${ex.toString()}`);\n\t\t}\n\t}\n\n\tprivate serializeBackups(): IBackupWorkspacesFormat {\n\t\treturn {\n\t\t\trootURIWorkspaces: this.rootWorkspaces.map(f => ({ id: f.workspace.id, configURIPath: f.workspace.configPath.toString(), remoteAuthority: f.remoteAuthority })),\n\t\t\tfolderURIWorkspaces: this.folderWorkspaces.map(f => f.toString()),\n\t\t\temptyWorkspaceInfos: this.emptyWorkspaces,\n\t\t\temptyWorkspaces: this.emptyWorkspaces.map(info => info.backupFolder)\n\t\t} as IBackupWorkspacesFormat;\n\t}\n\n\tprivate getRandomEmptyWindowId(): string {\n\t\treturn (Date.now() + Math.round(Math.random() * 1000)).toString();\n\t}\n\n\tprotected getFolderHash(folderUri: URI): string {\n\t\tlet key: string;\n\n\t\tif (folderUri.scheme === Schemas.file) {\n\t\t\t// for backward compatibility, use the fspath as key\n\t\t\tkey = platform.isLinux ? folderUri.fsPath : folderUri.fsPath.toLowerCase();\n\t\t} else {\n\t\t\tkey = hasToIgnoreCase(folderUri) ? folderUri.toString().toLowerCase() : folderUri.toString();\n\t\t}\n\n\t\treturn crypto.createHash('md5').update(key).digest('hex');\n\t}\n\n\tprotected getLegacyFolderHash(folderPath: string): string {\n\t\treturn crypto.createHash('md5').update(platform.isLinux ? folderPath : folderPath.toLowerCase()).digest('hex');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, WORKSPACE_EXTENSION } from 'vs/platform/workspaces/common/workspaces';\nimport { localize } from 'vs/nls';\nimport { isEqualOrParent, basename } from 'vs/base/common/resources';\n\nexport interface ILabelService {\n\t_serviceBrand: any;\n\t/**\n\t * Gets the human readable label for a uri.\n\t * If relative is passed returns a label relative to the workspace root that the uri belongs to.\n\t * If noPrefix is passed does not tildify the label and also does not prepand the root name for relative labels in a multi root scenario.\n\t */\n\tgetUriLabel(resource: URI, options?: { relative?: boolean, noPrefix?: boolean, endWithSeparator?: boolean }): string;\n\tgetWorkspaceLabel(workspace: (IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IWorkspace), options?: { verbose: boolean }): string;\n\tgetHostLabel(scheme: string, authority?: string): string;\n\tgetSeparator(scheme: string, authority?: string): '/' | '\\\\';\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable;\n\tonDidChangeFormatters: Event<void>;\n}\n\nexport interface ResourceLabelFormatter {\n\tscheme: string;\n\tauthority?: string;\n\tpriority?: boolean;\n\tformatting: ResourceLabelFormatting;\n}\n\nexport interface ResourceLabelFormatting {\n\tlabel: string; // myLabel:/${path}\n\tseparator: '/' | '\\\\' | '';\n\ttildify?: boolean;\n\tnormalizeDriveLetter?: boolean;\n\tworkspaceSuffix?: string;\n\tauthorityPrefix?: string;\n}\n\nconst LABEL_SERVICE_ID = 'label';\n\nexport function getSimpleWorkspaceLabel(workspace: IWorkspaceIdentifier | URI, workspaceHome: URI): string {\n\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\treturn basename(workspace);\n\t}\n\t// Workspace: Untitled\n\tif (isEqualOrParent(workspace.configPath, workspaceHome)) {\n\t\treturn localize('untitledWorkspace', \"Untitled (Workspace)\");\n\t}\n\n\tconst filename = basename(workspace.configPath);\n\tconst workspaceName = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n\treturn localize('workspaceName', \"{0} (Workspace)\", workspaceName);\n}\n\n\nexport const ILabelService = createDecorator<ILabelService>(LABEL_SERVICE_ID);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as arrays from 'vs/base/common/arrays';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { app } from 'electron';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getBaseLabel, getPathLabel } from 'vs/base/common/labels';\nimport { IPath } from 'vs/platform/windows/common/windows';\nimport { Event as CommonEvent, Emitter } from 'vs/base/common/event';\nimport { isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { IWorkspaceIdentifier, IWorkspacesMainService, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IHistoryMainService, IRecentlyOpened, isRecentWorkspace, isRecentFolder, IRecent, isRecentFile, IRecentFolder, IRecentWorkspace, IRecentFile } from 'vs/platform/history/common/history';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { isEqual as areResourcesEqual, dirname, originalFSPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getSimpleWorkspaceLabel } from 'vs/platform/label/common/label';\nimport { toStoreData, restoreRecentlyOpened, RecentlyOpenedStorageData } from 'vs/platform/history/electron-main/historyStorage';\nimport { exists } from 'vs/base/node/pfs';\n\nexport class HistoryMainService implements IHistoryMainService {\n\n\tprivate static readonly MAX_TOTAL_RECENT_ENTRIES = 100;\n\tprivate static readonly MAX_MACOS_DOCK_RECENT_FOLDERS = 10;\n\tprivate static readonly MAX_MACOS_DOCK_RECENT_FILES = 5;\n\n\tprivate static readonly recentlyOpenedStorageKey = 'openedPathsList';\n\n\t_serviceBrand: any;\n\n\tprivate _onRecentlyOpenedChange = new Emitter<void>();\n\tonRecentlyOpenedChange: CommonEvent<void> = this._onRecentlyOpenedChange.event;\n\n\tprivate macOSRecentDocumentsUpdater: ThrottledDelayer<void>;\n\n\tconstructor(\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWorkspacesMainService private readonly workspacesMainService: IWorkspacesMainService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tthis.macOSRecentDocumentsUpdater = new ThrottledDelayer<void>(800);\n\t}\n\n\taddRecentlyOpened(newlyAdded: IRecent[]): void {\n\t\tconst mru = this.getRecentlyOpened();\n\n\t\tfor (let curr of newlyAdded) {\n\t\t\tif (isRecentWorkspace(curr)) {\n\t\t\t\tif (!this.workspacesMainService.isUntitledWorkspace(curr.workspace) && indexOfWorkspace(mru.workspaces, curr.workspace) === -1) {\n\t\t\t\t\tmru.workspaces.unshift(curr);\n\t\t\t\t}\n\t\t\t} else if (isRecentFolder(curr)) {\n\t\t\t\tif (indexOfFolder(mru.workspaces, curr.folderUri) === -1) {\n\t\t\t\t\tmru.workspaces.unshift(curr);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (indexOfFile(mru.files, curr.fileUri) === -1) {\n\t\t\t\t\tmru.files.unshift(curr);\n\t\t\t\t\t// Add to recent documents (Windows only, macOS later)\n\t\t\t\t\tif (isWindows && curr.fileUri.scheme === Schemas.file) {\n\t\t\t\t\t\tapp.addRecentDocument(curr.fileUri.fsPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Make sure its bounded\n\t\t\tmru.workspaces = mru.workspaces.slice(0, HistoryMainService.MAX_TOTAL_RECENT_ENTRIES);\n\t\t\tmru.files = mru.files.slice(0, HistoryMainService.MAX_TOTAL_RECENT_ENTRIES);\n\n\t\t\tthis.saveRecentlyOpened(mru);\n\t\t\tthis._onRecentlyOpenedChange.fire();\n\n\t\t\t// Schedule update to recent documents on macOS dock\n\t\t\tif (isMacintosh) {\n\t\t\t\tthis.macOSRecentDocumentsUpdater.trigger(() => this.updateMacOSRecentDocuments());\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveFromRecentlyOpened(toRemove: URI[]): void {\n\t\tconst keep = (recent: IRecent) => {\n\t\t\tconst uri = location(recent);\n\t\t\tfor (const r of toRemove) {\n\t\t\t\tif (areResourcesEqual(r, uri)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst mru = this.getRecentlyOpened();\n\t\tconst workspaces = mru.workspaces.filter(keep);\n\t\tconst files = mru.files.filter(keep);\n\n\t\tif (workspaces.length !== mru.workspaces.length || files.length !== mru.files.length) {\n\t\t\tthis.saveRecentlyOpened({ files, workspaces });\n\t\t\tthis._onRecentlyOpenedChange.fire();\n\n\t\t\t// Schedule update to recent documents on macOS dock\n\t\t\tif (isMacintosh) {\n\t\t\t\tthis.macOSRecentDocumentsUpdater.trigger(() => this.updateMacOSRecentDocuments());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async updateMacOSRecentDocuments(): Promise<void> {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\t// macOS recent documents in the dock are behaving strangely. the entries seem to get\n\t\t// out of sync quickly over time. the attempted fix is to always set the list fresh\n\t\t// from our MRU history data. So we clear the documents first and then set the documents\n\t\t// again.\n\t\tapp.clearRecentDocuments();\n\n\t\tconst mru = this.getRecentlyOpened();\n\n\t\t// Fill in workspaces\n\t\tfor (let i = 0, entries = 0; i < mru.workspaces.length && entries < HistoryMainService.MAX_MACOS_DOCK_RECENT_FOLDERS; i++) {\n\t\t\tconst loc = location(mru.workspaces[i]);\n\t\t\tif (loc.scheme === Schemas.file) {\n\t\t\t\tconst workspacePath = originalFSPath(loc);\n\t\t\t\tif (await exists(workspacePath)) {\n\t\t\t\t\tapp.addRecentDocument(workspacePath);\n\t\t\t\t\tentries++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Fill in files\n\t\tfor (let i = 0, entries = 0; i < mru.files.length && entries < HistoryMainService.MAX_MACOS_DOCK_RECENT_FILES; i++) {\n\t\t\tconst loc = location(mru.files[i]);\n\t\t\tif (loc.scheme === Schemas.file) {\n\t\t\t\tconst filePath = originalFSPath(loc);\n\t\t\t\tif (await exists(filePath)) {\n\t\t\t\t\tapp.addRecentDocument(filePath);\n\t\t\t\t\tentries++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tclearRecentlyOpened(): void {\n\t\tthis.saveRecentlyOpened({ workspaces: [], files: [] });\n\t\tapp.clearRecentDocuments();\n\n\t\t// Event\n\t\tthis._onRecentlyOpenedChange.fire();\n\t}\n\n\tgetRecentlyOpened(currentWorkspace?: IWorkspaceIdentifier, currentFolder?: ISingleFolderWorkspaceIdentifier, currentFiles?: IPath[]): IRecentlyOpened {\n\n\t\tconst workspaces: Array<IRecentFolder | IRecentWorkspace> = [];\n\t\tconst files: IRecentFile[] = [];\n\n\t\t// Add current workspace to beginning if set\n\t\tif (currentWorkspace && !this.workspacesMainService.isUntitledWorkspace(currentWorkspace)) {\n\t\t\tworkspaces.push({ workspace: currentWorkspace });\n\t\t}\n\t\tif (currentFolder) {\n\t\t\tworkspaces.push({ folderUri: currentFolder });\n\t\t}\n\n\t\t// Add currently files to open to the beginning if any\n\t\tif (currentFiles) {\n\t\t\tfor (let currentFile of currentFiles) {\n\t\t\t\tconst fileUri = currentFile.fileUri;\n\t\t\t\tif (fileUri && indexOfFile(files, fileUri) === -1) {\n\t\t\t\t\tfiles.push({ fileUri });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get from storage\n\t\tlet recents = this.getRecentlyOpenedFromStorage();\n\t\tfor (let recent of recents.workspaces) {\n\t\t\tlet index = isRecentFolder(recent) ? indexOfFolder(workspaces, recent.folderUri) : indexOfWorkspace(workspaces, recent.workspace);\n\t\t\tif (index >= 0) {\n\t\t\t\tworkspaces[index].label = workspaces[index].label || recent.label;\n\t\t\t} else {\n\t\t\t\tworkspaces.push(recent);\n\t\t\t}\n\t\t}\n\t\tfor (let recent of recents.files) {\n\t\t\tlet index = indexOfFile(files, recent.fileUri);\n\t\t\tif (index >= 0) {\n\t\t\t\tfiles[index].label = files[index].label || recent.label;\n\t\t\t} else {\n\t\t\t\tfiles.push(recent);\n\t\t\t}\n\t\t}\n\t\treturn { workspaces, files };\n\t}\n\n\tprivate getRecentlyOpenedFromStorage(): IRecentlyOpened {\n\t\tconst storedRecents = this.stateService.getItem<RecentlyOpenedStorageData>(HistoryMainService.recentlyOpenedStorageKey);\n\t\treturn restoreRecentlyOpened(storedRecents);\n\t}\n\n\tprivate saveRecentlyOpened(recent: IRecentlyOpened): void {\n\t\tconst serialized = toStoreData(recent);\n\t\tthis.stateService.setItem(HistoryMainService.recentlyOpenedStorageKey, serialized);\n\t}\n\n\tupdateWindowsJumpList(): void {\n\t\tif (!isWindows) {\n\t\t\treturn; // only on windows\n\t\t}\n\n\t\tconst jumpList: Electron.JumpListCategory[] = [];\n\n\t\t// Tasks\n\t\tjumpList.push({\n\t\t\ttype: 'tasks',\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'task',\n\t\t\t\t\ttitle: nls.localize('newWindow', \"New Window\"),\n\t\t\t\t\tdescription: nls.localize('newWindowDesc', \"Opens a new window\"),\n\t\t\t\t\tprogram: process.execPath,\n\t\t\t\t\targs: '-n', // force new window\n\t\t\t\t\ticonPath: process.execPath,\n\t\t\t\t\ticonIndex: 0\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\t// Recent Workspaces\n\t\tif (this.getRecentlyOpened().workspaces.length > 0) {\n\n\t\t\t// The user might have meanwhile removed items from the jump list and we have to respect that\n\t\t\t// so we need to update our list of recent paths with the choice of the user to not add them again\n\t\t\t// Also: Windows will not show our custom category at all if there is any entry which was removed\n\t\t\t// by the user! See https://github.com/Microsoft/vscode/issues/15052\n\t\t\tlet toRemove: URI[] = [];\n\t\t\tfor (let item of app.getJumpListSettings().removedItems) {\n\t\t\t\tconst args = item.args;\n\t\t\t\tif (args) {\n\t\t\t\t\tconst match = /^--(folder|file)-uri\\s+\"([^\"]+)\"$/.exec(args);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\ttoRemove.push(URI.parse(match[2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.removeFromRecentlyOpened(toRemove);\n\n\t\t\t// Add entries\n\t\t\tjumpList.push({\n\t\t\t\ttype: 'custom',\n\t\t\t\tname: nls.localize('recentFolders', \"Recent Workspaces\"),\n\t\t\t\titems: arrays.coalesce(this.getRecentlyOpened().workspaces.slice(0, 7 /* limit number of entries here */).map(recent => {\n\t\t\t\t\tconst workspace = isRecentWorkspace(recent) ? recent.workspace : recent.folderUri;\n\t\t\t\t\tconst title = recent.label || getSimpleWorkspaceLabel(workspace, this.environmentService.untitledWorkspacesHome);\n\t\t\t\t\tlet description;\n\t\t\t\t\tlet args;\n\t\t\t\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\t\t\t\tconst parentFolder = dirname(workspace);\n\t\t\t\t\t\tdescription = nls.localize('folderDesc', \"{0} {1}\", getBaseLabel(workspace), getPathLabel(parentFolder, this.environmentService));\n\t\t\t\t\t\targs = `--folder-uri \"${workspace.toString()}\"`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdescription = nls.localize('codeWorkspace', \"Code Workspace\");\n\t\t\t\t\t\targs = `--file-uri \"${workspace.configPath.toString()}\"`;\n\t\t\t\t\t}\n\t\t\t\t\treturn <Electron.JumpListItem>{\n\t\t\t\t\t\ttype: 'task',\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tdescription,\n\t\t\t\t\t\tprogram: process.execPath,\n\t\t\t\t\t\targs,\n\t\t\t\t\t\ticonPath: 'explorer.exe', // simulate folder icon\n\t\t\t\t\t\ticonIndex: 0\n\t\t\t\t\t};\n\t\t\t\t}))\n\t\t\t});\n\t\t}\n\n\t\t// Recent\n\t\tjumpList.push({\n\t\t\ttype: 'recent' // this enables to show files in the \"recent\" category\n\t\t});\n\n\t\ttry {\n\t\t\tapp.setJumpList(jumpList);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('#setJumpList', error); // since setJumpList is relatively new API, make sure to guard for errors\n\t\t}\n\t}\n}\n\nfunction location(recent: IRecent): URI {\n\tif (isRecentFolder(recent)) {\n\t\treturn recent.folderUri;\n\t}\n\tif (isRecentFile(recent)) {\n\t\treturn recent.fileUri;\n\t}\n\treturn recent.workspace.configPath;\n}\n\nfunction indexOfWorkspace(arr: IRecent[], workspace: IWorkspaceIdentifier): number {\n\treturn arrays.firstIndex(arr, w => isRecentWorkspace(w) && w.workspace.id === workspace.id);\n}\n\nfunction indexOfFolder(arr: IRecent[], folderURI: ISingleFolderWorkspaceIdentifier): number {\n\treturn arrays.firstIndex(arr, f => isRecentFolder(f) && areResourcesEqual(f.folderUri, folderURI));\n}\n\nfunction indexOfFile(arr: IRecentFile[], fileURI: URI): number {\n\treturn arrays.firstIndex(arr, f => areResourcesEqual(f.fileUri, fileURI));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { IProcessEnvironment, isMacintosh } from 'vs/base/common/platform';\nimport { ParsedArgs, IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { OpenContext, IWindowSettings } from 'vs/platform/windows/common/windows';\nimport { IWindowsMainService, ICodeWindow } from 'vs/platform/windows/electron-main/windows';\nimport { whenDeleted } from 'vs/base/node/pfs';\nimport { IWorkspacesMainService } from 'vs/platform/workspaces/common/workspaces';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { BrowserWindow } from 'electron';\nimport { Event } from 'vs/base/common/event';\nimport { hasArgs } from 'vs/platform/environment/node/argv';\nimport { coalesce } from 'vs/base/common/arrays';\n\nexport const ID = 'launchService';\nexport const ILaunchService = createDecorator<ILaunchService>(ID);\n\nexport interface IStartArguments {\n\targs: ParsedArgs;\n\tuserEnv: IProcessEnvironment;\n}\n\nexport interface IWindowInfo {\n\tpid: number;\n\ttitle: string;\n\tfolderURIs: UriComponents[];\n}\n\nexport interface IMainProcessInfo {\n\tmainPID: number;\n\t// All arguments after argv[0], the exec path\n\tmainArguments: string[];\n\twindows: IWindowInfo[];\n}\n\nfunction parseOpenUrl(args: ParsedArgs): URI[] {\n\tif (args['open-url'] && args._urls && args._urls.length > 0) {\n\t\t// --open-url must contain -- followed by the url(s)\n\t\t// process.argv is used over args._ as args._ are resolved to file paths at this point\n\t\treturn coalesce(args._urls\n\t\t\t.map(url => {\n\t\t\t\ttry {\n\t\t\t\t\treturn URI.parse(url);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\treturn [];\n}\n\nexport interface ILaunchService {\n\t_serviceBrand: any;\n\tstart(args: ParsedArgs, userEnv: IProcessEnvironment): Promise<void>;\n\tgetMainProcessId(): Promise<number>;\n\tgetMainProcessInfo(): Promise<IMainProcessInfo>;\n\tgetLogsPath(): Promise<string>;\n}\n\nexport class LaunchChannel implements IServerChannel {\n\n\tconstructor(private service: ILaunchService) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'start':\n\t\t\t\tconst { args, userEnv } = arg as IStartArguments;\n\t\t\t\treturn this.service.start(args, userEnv);\n\n\t\t\tcase 'get-main-process-id':\n\t\t\t\treturn this.service.getMainProcessId();\n\n\t\t\tcase 'get-main-process-info':\n\t\t\t\treturn this.service.getMainProcessInfo();\n\n\t\t\tcase 'get-logs-path':\n\t\t\t\treturn this.service.getLogsPath();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class LaunchChannelClient implements ILaunchService {\n\n\t_serviceBrand: any;\n\n\tconstructor(private channel: IChannel) { }\n\n\tstart(args: ParsedArgs, userEnv: IProcessEnvironment): Promise<void> {\n\t\treturn this.channel.call('start', { args, userEnv });\n\t}\n\n\tgetMainProcessId(): Promise<number> {\n\t\treturn this.channel.call('get-main-process-id', null);\n\t}\n\n\tgetMainProcessInfo(): Promise<IMainProcessInfo> {\n\t\treturn this.channel.call('get-main-process-info', null);\n\t}\n\n\tgetLogsPath(): Promise<string> {\n\t\treturn this.channel.call('get-logs-path', null);\n\t}\n}\n\nexport class LaunchService implements ILaunchService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IURLService private readonly urlService: IURLService,\n\t\t@IWorkspacesMainService private readonly workspacesMainService: IWorkspacesMainService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) { }\n\n\tstart(args: ParsedArgs, userEnv: IProcessEnvironment): Promise<void> {\n\t\tthis.logService.trace('Received data from other instance: ', args, userEnv);\n\n\t\tconst urlsToOpen = parseOpenUrl(args);\n\n\t\t// Check early for open-url which is handled in URL service\n\t\tif (urlsToOpen.length) {\n\t\t\tlet whenWindowReady: Promise<any> = Promise.resolve<any>(null);\n\n\t\t\t// Create a window if there is none\n\t\t\tif (this.windowsMainService.getWindowCount() === 0) {\n\t\t\t\tconst window = this.windowsMainService.openNewWindow(OpenContext.DESKTOP)[0];\n\t\t\t\twhenWindowReady = window.ready();\n\t\t\t}\n\n\t\t\t// Make sure a window is open, ready to receive the url event\n\t\t\twhenWindowReady.then(() => {\n\t\t\t\tfor (const url of urlsToOpen) {\n\t\t\t\t\tthis.urlService.open(url);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Otherwise handle in windows service\n\t\treturn this.startOpenWindow(args, userEnv);\n\t}\n\n\tprivate startOpenWindow(args: ParsedArgs, userEnv: IProcessEnvironment): Promise<void> {\n\t\tconst context = !!userEnv['VSCODE_CLI'] ? OpenContext.CLI : OpenContext.DESKTOP;\n\t\tlet usedWindows: ICodeWindow[] = [];\n\n\t\t// Special case extension development\n\t\tif (!!args.extensionDevelopmentPath) {\n\t\t\tthis.windowsMainService.openExtensionDevelopmentHostWindow(args.extensionDevelopmentPath, { context, cli: args, userEnv });\n\t\t}\n\n\t\t// Start without file/folder arguments\n\t\telse if (!hasArgs(args._) && !hasArgs(args['folder-uri']) && !hasArgs(args['file-uri'])) {\n\t\t\tlet openNewWindow = false;\n\n\t\t\t// Force new window\n\t\t\tif (args['new-window'] || args['unity-launch']) {\n\t\t\t\topenNewWindow = true;\n\t\t\t}\n\n\t\t\t// Force reuse window\n\t\t\telse if (args['reuse-window']) {\n\t\t\t\topenNewWindow = false;\n\t\t\t}\n\n\t\t\t// Otherwise check for settings\n\t\t\telse {\n\t\t\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\t\t\tconst openWithoutArgumentsInNewWindowConfig = (windowConfig && windowConfig.openWithoutArgumentsInNewWindow) || 'default' /* default */;\n\t\t\t\tswitch (openWithoutArgumentsInNewWindowConfig) {\n\t\t\t\t\tcase 'on':\n\t\t\t\t\t\topenNewWindow = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'off':\n\t\t\t\t\t\topenNewWindow = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\topenNewWindow = !isMacintosh; // prefer to restore running instance on macOS\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (openNewWindow) {\n\t\t\t\tusedWindows = this.windowsMainService.open({ context, cli: args, userEnv, forceNewWindow: true, forceEmpty: true });\n\t\t\t} else {\n\t\t\t\tusedWindows = [this.windowsMainService.focusLastActive(args, context)];\n\t\t\t}\n\t\t}\n\n\t\t// Start with file/folder arguments\n\t\telse {\n\t\t\tusedWindows = this.windowsMainService.open({\n\t\t\t\tcontext,\n\t\t\t\tcli: args,\n\t\t\t\tuserEnv,\n\t\t\t\tforceNewWindow: args['new-window'],\n\t\t\t\tpreferNewWindow: !args['reuse-window'] && !args.wait,\n\t\t\t\tforceReuseWindow: args['reuse-window'],\n\t\t\t\tdiffMode: args.diff,\n\t\t\t\taddMode: args.add\n\t\t\t});\n\t\t}\n\n\t\t// If the other instance is waiting to be killed, we hook up a window listener if one window\n\t\t// is being used and only then resolve the startup promise which will kill this second instance.\n\t\t// In addition, we poll for the wait marker file to be deleted to return.\n\t\tif (args.wait && args.waitMarkerFilePath && usedWindows.length === 1 && usedWindows[0]) {\n\t\t\treturn Promise.race([\n\t\t\t\tthis.windowsMainService.waitForWindowCloseOrLoad(usedWindows[0].id),\n\t\t\t\twhenDeleted(args.waitMarkerFilePath)\n\t\t\t]).then(() => undefined, () => undefined);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tgetMainProcessId(): Promise<number> {\n\t\tthis.logService.trace('Received request for process ID from other instance.');\n\n\t\treturn Promise.resolve(process.pid);\n\t}\n\n\tgetMainProcessInfo(): Promise<IMainProcessInfo> {\n\t\tthis.logService.trace('Received request for main process info from other instance.');\n\n\t\tconst windows: IWindowInfo[] = [];\n\t\tBrowserWindow.getAllWindows().forEach(window => {\n\t\t\tconst codeWindow = this.windowsMainService.getWindowById(window.id);\n\t\t\tif (codeWindow) {\n\t\t\t\twindows.push(this.codeWindowToInfo(codeWindow));\n\t\t\t} else {\n\t\t\t\twindows.push(this.browserWindowToInfo(window));\n\t\t\t}\n\t\t});\n\n\t\treturn Promise.resolve({\n\t\t\tmainPID: process.pid,\n\t\t\tmainArguments: process.argv.slice(1),\n\t\t\twindows\n\t\t});\n\t}\n\n\tgetLogsPath(): Promise<string> {\n\t\tthis.logService.trace('Received request for logs path from other instance.');\n\n\t\treturn Promise.resolve(this.environmentService.logsPath);\n\t}\n\n\tprivate codeWindowToInfo(window: ICodeWindow): IWindowInfo {\n\t\tconst folderURIs: URI[] = [];\n\n\t\tif (window.openedFolderUri) {\n\t\t\tfolderURIs.push(window.openedFolderUri);\n\t\t} else if (window.openedWorkspace) {\n\t\t\t// workspace folders can only be shown for local workspaces\n\t\t\tconst workspaceConfigPath = window.openedWorkspace.configPath;\n\t\t\tconst resolvedWorkspace = this.workspacesMainService.resolveLocalWorkspaceSync(workspaceConfigPath);\n\t\t\tif (resolvedWorkspace) {\n\t\t\t\tconst rootFolders = resolvedWorkspace.folders;\n\t\t\t\trootFolders.forEach(root => {\n\t\t\t\t\tfolderURIs.push(root.uri);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO: can we add the workspace file here?\n\t\t\t}\n\t\t}\n\n\t\treturn this.browserWindowToInfo(window.win, folderURIs);\n\t}\n\n\tprivate browserWindowToInfo(win: BrowserWindow, folderURIs: URI[] = []): IWindowInfo {\n\t\treturn {\n\t\t\tpid: win.webContents.getOSProcessId(),\n\t\t\ttitle: win.getTitle(),\n\t\t\tfolderURIs\n\t\t} as IWindowInfo;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport * as objects from 'vs/base/common/objects';\nimport { parseArgs } from 'vs/platform/environment/node/argv';\nimport { IIssueService, IssueReporterData, IssueReporterFeatures, ProcessExplorerData } from 'vs/platform/issue/common/issue';\nimport { BrowserWindow, ipcMain, screen, Event, dialog } from 'electron';\nimport { ILaunchService } from 'vs/platform/launch/electron-main/launchService';\nimport { PerformanceInfo, SystemInfo, IDiagnosticsService } from 'vs/platform/diagnostics/electron-main/diagnosticsService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isMacintosh, IProcessEnvironment } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IWindowsService } from 'vs/platform/windows/common/windows';\nimport { IWindowState } from 'vs/platform/windows/electron-main/windows';\n\nconst DEFAULT_BACKGROUND_COLOR = '#1E1E1E';\n\nexport class IssueService implements IIssueService {\n\t_serviceBrand: any;\n\t_issueWindow: BrowserWindow | null;\n\t_issueParentWindow: BrowserWindow | null;\n\t_processExplorerWindow: BrowserWindow | null;\n\t_processExplorerParentWindow: BrowserWindow | null;\n\n\tconstructor(\n\t\tprivate machineId: string,\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ILaunchService private readonly launchService: ILaunchService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDiagnosticsService private readonly diagnosticsService: IDiagnosticsService,\n\t\t@IWindowsService private readonly windowsService: IWindowsService\n\t) {\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tipcMain.on('vscode:issueSystemInfoRequest', (event: Event) => {\n\t\t\tthis.getSystemInformation().then(msg => {\n\t\t\t\tevent.sender.send('vscode:issueSystemInfoResponse', msg);\n\t\t\t});\n\t\t});\n\n\t\tipcMain.on('vscode:issuePerformanceInfoRequest', (event: Event) => {\n\t\t\tthis.getPerformanceInfo().then(msg => {\n\t\t\t\tevent.sender.send('vscode:issuePerformanceInfoResponse', msg);\n\t\t\t});\n\t\t});\n\n\t\tipcMain.on('vscode:issueReporterConfirmClose', (_) => {\n\t\t\tconst messageOptions = {\n\t\t\t\tmessage: localize('confirmCloseIssueReporter', \"Your input will not be saved. Are you sure you want to close this window?\"),\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize('yes', \"Yes\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t};\n\n\t\t\tif (this._issueWindow) {\n\t\t\t\tdialog.showMessageBox(this._issueWindow, messageOptions, (response) => {\n\t\t\t\t\tif (response === 0) {\n\t\t\t\t\t\tif (this._issueWindow) {\n\t\t\t\t\t\t\tthis._issueWindow.destroy();\n\t\t\t\t\t\t\tthis._issueWindow = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:workbenchCommand', (_, commandInfo) => {\n\t\t\tconst { id, from, args } = commandInfo;\n\n\t\t\tlet parentWindow: BrowserWindow | null;\n\t\t\tswitch (from) {\n\t\t\t\tcase 'issueReporter':\n\t\t\t\t\tparentWindow = this._issueParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'processExplorer':\n\t\t\t\t\tparentWindow = this._processExplorerParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected command source: ${from}`);\n\t\t\t}\n\n\t\t\tif (parentWindow) {\n\t\t\t\tparentWindow.webContents.send('vscode:runAction', { id, from, args });\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:openExternal', (_, arg) => {\n\t\t\tthis.windowsService.openExternal(arg);\n\t\t});\n\n\t\tipcMain.on('vscode:closeIssueReporter', (event: Event) => {\n\t\t\tif (this._issueWindow) {\n\t\t\t\tthis._issueWindow.close();\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('windowsInfoRequest', (event: Event) => {\n\t\t\tthis.launchService.getMainProcessInfo().then(info => {\n\t\t\t\tevent.sender.send('vscode:windowsInfoResponse', info.windows);\n\t\t\t});\n\t\t});\n\n\t}\n\n\topenReporter(data: IssueReporterData): Promise<void> {\n\t\treturn new Promise(_ => {\n\t\t\tif (!this._issueWindow) {\n\t\t\t\tthis._issueParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\t\tif (this._issueParentWindow) {\n\t\t\t\t\tconst position = this.getWindowPosition(this._issueParentWindow, 700, 800);\n\n\t\t\t\t\tthis._issueWindow = new BrowserWindow({\n\t\t\t\t\t\tfullscreen: false,\n\t\t\t\t\t\twidth: position.width,\n\t\t\t\t\t\theight: position.height,\n\t\t\t\t\t\tminWidth: 300,\n\t\t\t\t\t\tminHeight: 200,\n\t\t\t\t\t\tx: position.x,\n\t\t\t\t\t\ty: position.y,\n\t\t\t\t\t\ttitle: localize('issueReporter', \"Issue Reporter\"),\n\t\t\t\t\t\tbackgroundColor: data.styles.backgroundColor || DEFAULT_BACKGROUND_COLOR\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._issueWindow.setMenuBarVisibility(false); // workaround for now, until a menu is implemented\n\n\t\t\t\t\t// Modified when testing UI\n\t\t\t\t\tconst features: IssueReporterFeatures = {};\n\n\t\t\t\t\tthis.logService.trace('issueService#openReporter: opening issue reporter');\n\t\t\t\t\tthis._issueWindow.loadURL(this.getIssueReporterPath(data, features));\n\n\t\t\t\t\tthis._issueWindow.on('close', () => this._issueWindow = null);\n\n\t\t\t\t\tthis._issueParentWindow.on('closed', () => {\n\t\t\t\t\t\tif (this._issueWindow) {\n\t\t\t\t\t\t\tthis._issueWindow.close();\n\t\t\t\t\t\t\tthis._issueWindow = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._issueWindow) {\n\t\t\t\tthis._issueWindow.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\topenProcessExplorer(data: ProcessExplorerData): Promise<void> {\n\t\treturn new Promise(_ => {\n\t\t\t// Create as singleton\n\t\t\tif (!this._processExplorerWindow) {\n\t\t\t\tthis._processExplorerParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\t\tif (this._processExplorerParentWindow) {\n\t\t\t\t\tconst position = this.getWindowPosition(this._processExplorerParentWindow, 800, 300);\n\t\t\t\t\tthis._processExplorerWindow = new BrowserWindow({\n\t\t\t\t\t\tskipTaskbar: true,\n\t\t\t\t\t\tresizable: true,\n\t\t\t\t\t\tfullscreen: false,\n\t\t\t\t\t\twidth: position.width,\n\t\t\t\t\t\theight: position.height,\n\t\t\t\t\t\tminWidth: 300,\n\t\t\t\t\t\tminHeight: 200,\n\t\t\t\t\t\tx: position.x,\n\t\t\t\t\t\ty: position.y,\n\t\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\t\ttitle: localize('processExplorer', \"Process Explorer\")\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._processExplorerWindow.setMenuBarVisibility(false);\n\n\t\t\t\t\tconst windowConfiguration = {\n\t\t\t\t\t\tappRoot: this.environmentService.appRoot,\n\t\t\t\t\t\tnodeCachedDataDir: this.environmentService.nodeCachedDataDir,\n\t\t\t\t\t\twindowId: this._processExplorerWindow.id,\n\t\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\t\tmachineId: this.machineId,\n\t\t\t\t\t\tdata\n\t\t\t\t\t};\n\n\t\t\t\t\tconst environment = parseArgs(process.argv);\n\t\t\t\t\tconst config = objects.assign(environment, windowConfiguration);\n\t\t\t\t\tfor (let key in config) {\n\t\t\t\t\t\tif (config[key] === undefined || config[key] === null || config[key] === '') {\n\t\t\t\t\t\t\tdelete config[key]; // only send over properties that have a true value\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._processExplorerWindow.loadURL(`${require.toUrl('vs/code/electron-browser/processExplorer/processExplorer.html')}?config=${encodeURIComponent(JSON.stringify(config))}`);\n\n\t\t\t\t\tthis._processExplorerWindow.on('close', () => this._processExplorerWindow = null);\n\n\t\t\t\t\tthis._processExplorerParentWindow.on('close', () => {\n\t\t\t\t\t\tif (this._processExplorerWindow) {\n\t\t\t\t\t\t\tthis._processExplorerWindow.close();\n\t\t\t\t\t\t\tthis._processExplorerWindow = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Focus\n\t\t\tif (this._processExplorerWindow) {\n\t\t\t\tthis._processExplorerWindow.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getWindowPosition(parentWindow: BrowserWindow, defaultWidth: number, defaultHeight: number): IWindowState {\n\t\t// We want the new window to open on the same display that the parent is in\n\t\tlet displayToUse: Electron.Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && parentWindow) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(parentWindow.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\tconst state: IWindowState = {\n\t\t\twidth: defaultWidth,\n\t\t\theight: defaultHeight\n\t\t};\n\n\t\tconst displayBounds = displayToUse.bounds;\n\t\tstate.x = displayBounds.x + (displayBounds.width / 2) - (state.width! / 2);\n\t\tstate.y = displayBounds.y + (displayBounds.height / 2) - (state.height! / 2);\n\n\t\tif (displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t}\n\n\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t}\n\n\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t}\n\n\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t}\n\n\t\t\tif (state.width! > displayBounds.width) {\n\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t}\n\n\t\t\tif (state.height! > displayBounds.height) {\n\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate getSystemInformation(): Promise<SystemInfo> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.launchService.getMainProcessInfo().then(info => {\n\t\t\t\tresolve(this.diagnosticsService.getSystemInfo(info));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getPerformanceInfo(): Promise<PerformanceInfo> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.launchService.getMainProcessInfo().then(info => {\n\t\t\t\tthis.diagnosticsService.getPerformanceInfo(info)\n\t\t\t\t\t.then(diagnosticInfo => {\n\t\t\t\t\t\tresolve(diagnosticInfo);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tthis.logService.warn('issueService#getPerformanceInfo ', err.message);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getIssueReporterPath(data: IssueReporterData, features: IssueReporterFeatures): string {\n\t\tif (!this._issueWindow) {\n\t\t\tthrow new Error('Issue window has been disposed');\n\t\t}\n\n\t\tconst windowConfiguration = {\n\t\t\tappRoot: this.environmentService.appRoot,\n\t\t\tnodeCachedDataDir: this.environmentService.nodeCachedDataDir,\n\t\t\twindowId: this._issueWindow.id,\n\t\t\tmachineId: this.machineId,\n\t\t\tuserEnv: this.userEnv,\n\t\t\tdata,\n\t\t\tfeatures\n\t\t};\n\n\t\tconst environment = parseArgs(process.argv);\n\t\tconst config = objects.assign(environment, windowConfiguration);\n\t\tfor (let key in config) {\n\t\t\tif (config[key] === undefined || config[key] === null || config[key] === '') {\n\t\t\t\tdelete config[key]; // only send over properties that have a true value\n\t\t\t}\n\t\t}\n\n\t\treturn `${require.toUrl('vs/code/electron-browser/issue/issueReporter.html')}?config=${encodeURIComponent(JSON.stringify(config))}`;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { IWindowsService, IURIToOpen } from 'vs/platform/windows/common/windows';\nimport { reviveWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { IRecent, isRecentFile, isRecentFolder } from 'vs/platform/history/common/history';\n\nexport class WindowsChannel implements IServerChannel {\n\n\tprivate onWindowOpen: Event<number>;\n\tprivate onWindowFocus: Event<number>;\n\tprivate onWindowBlur: Event<number>;\n\tprivate onWindowMaximize: Event<number>;\n\tprivate onWindowUnmaximize: Event<number>;\n\tprivate onRecentlyOpenedChange: Event<void>;\n\n\tconstructor(private service: IWindowsService) {\n\t\tthis.onWindowOpen = Event.buffer(service.onWindowOpen, true);\n\t\tthis.onWindowFocus = Event.buffer(service.onWindowFocus, true);\n\t\tthis.onWindowBlur = Event.buffer(service.onWindowBlur, true);\n\t\tthis.onWindowMaximize = Event.buffer(service.onWindowMaximize, true);\n\t\tthis.onWindowUnmaximize = Event.buffer(service.onWindowUnmaximize, true);\n\t\tthis.onRecentlyOpenedChange = Event.buffer(service.onRecentlyOpenedChange, true);\n\t}\n\n\tlisten(_, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onWindowOpen': return this.onWindowOpen;\n\t\t\tcase 'onWindowFocus': return this.onWindowFocus;\n\t\t\tcase 'onWindowBlur': return this.onWindowBlur;\n\t\t\tcase 'onWindowMaximize': return this.onWindowMaximize;\n\t\t\tcase 'onWindowUnmaximize': return this.onWindowUnmaximize;\n\t\t\tcase 'onRecentlyOpenedChange': return this.onRecentlyOpenedChange;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'pickFileFolderAndOpen': return this.service.pickFileFolderAndOpen(arg);\n\t\t\tcase 'pickFileAndOpen': return this.service.pickFileAndOpen(arg);\n\t\t\tcase 'pickFolderAndOpen': return this.service.pickFolderAndOpen(arg);\n\t\t\tcase 'pickWorkspaceAndOpen': return this.service.pickWorkspaceAndOpen(arg);\n\t\t\tcase 'showMessageBox': return this.service.showMessageBox(arg[0], arg[1]);\n\t\t\tcase 'showSaveDialog': return this.service.showSaveDialog(arg[0], arg[1]);\n\t\t\tcase 'showOpenDialog': return this.service.showOpenDialog(arg[0], arg[1]);\n\t\t\tcase 'reloadWindow': return this.service.reloadWindow(arg[0], arg[1]);\n\t\t\tcase 'openDevTools': return this.service.openDevTools(arg[0], arg[1]);\n\t\t\tcase 'toggleDevTools': return this.service.toggleDevTools(arg);\n\t\t\tcase 'closeWorkspace': return this.service.closeWorkspace(arg);\n\t\t\tcase 'enterWorkspace': return this.service.enterWorkspace(arg[0], URI.revive(arg[1]));\n\t\t\tcase 'toggleFullScreen': return this.service.toggleFullScreen(arg);\n\t\t\tcase 'setRepresentedFilename': return this.service.setRepresentedFilename(arg[0], arg[1]);\n\t\t\tcase 'addRecentlyOpened': return this.service.addRecentlyOpened(arg.map((recent: IRecent) => {\n\t\t\t\tif (isRecentFile(recent)) {\n\t\t\t\t\trecent.fileUri = URI.revive(recent.fileUri);\n\t\t\t\t} else if (isRecentFolder(recent)) {\n\t\t\t\t\trecent.folderUri = URI.revive(recent.folderUri);\n\t\t\t\t} else {\n\t\t\t\t\trecent.workspace = reviveWorkspaceIdentifier(recent.workspace);\n\t\t\t\t}\n\t\t\t\treturn recent;\n\t\t\t}));\n\t\t\tcase 'removeFromRecentlyOpened': return this.service.removeFromRecentlyOpened(arg.map(URI.revive));\n\t\t\tcase 'clearRecentlyOpened': return this.service.clearRecentlyOpened();\n\t\t\tcase 'newWindowTab': return this.service.newWindowTab();\n\t\t\tcase 'showPreviousWindowTab': return this.service.showPreviousWindowTab();\n\t\t\tcase 'showNextWindowTab': return this.service.showNextWindowTab();\n\t\t\tcase 'moveWindowTabToNewWindow': return this.service.moveWindowTabToNewWindow();\n\t\t\tcase 'mergeAllWindowTabs': return this.service.mergeAllWindowTabs();\n\t\t\tcase 'toggleWindowTabsBar': return this.service.toggleWindowTabsBar();\n\t\t\tcase 'updateTouchBar': return this.service.updateTouchBar(arg[0], arg[1]);\n\t\t\tcase 'getRecentlyOpened': return this.service.getRecentlyOpened(arg);\n\t\t\tcase 'focusWindow': return this.service.focusWindow(arg);\n\t\t\tcase 'closeWindow': return this.service.closeWindow(arg);\n\t\t\tcase 'isFocused': return this.service.isFocused(arg);\n\t\t\tcase 'isMaximized': return this.service.isMaximized(arg);\n\t\t\tcase 'maximizeWindow': return this.service.maximizeWindow(arg);\n\t\t\tcase 'unmaximizeWindow': return this.service.unmaximizeWindow(arg);\n\t\t\tcase 'minimizeWindow': return this.service.minimizeWindow(arg);\n\t\t\tcase 'onWindowTitleDoubleClick': return this.service.onWindowTitleDoubleClick(arg);\n\t\t\tcase 'setDocumentEdited': return this.service.setDocumentEdited(arg[0], arg[1]);\n\t\t\tcase 'openWindow': return this.service.openWindow(arg[0], arg[1] ? (<IURIToOpen[]>arg[1]).map(r => { r.uri = URI.revive(r.uri); return r; }) : arg[1], arg[2]);\n\t\t\tcase 'openNewWindow': return this.service.openNewWindow(arg);\n\t\t\tcase 'showWindow': return this.service.showWindow(arg);\n\t\t\tcase 'getWindows': return this.service.getWindows();\n\t\t\tcase 'getWindowCount': return this.service.getWindowCount();\n\t\t\tcase 'relaunch': return this.service.relaunch(arg[0]);\n\t\t\tcase 'whenSharedProcessReady': return this.service.whenSharedProcessReady();\n\t\t\tcase 'toggleSharedProcess': return this.service.toggleSharedProcess();\n\t\t\tcase 'quit': return this.service.quit();\n\t\t\tcase 'log': return this.service.log(arg[0], arg[1]);\n\t\t\tcase 'showItemInFolder': return this.service.showItemInFolder(URI.revive(arg));\n\t\t\tcase 'getActiveWindowId': return this.service.getActiveWindowId();\n\t\t\tcase 'openExternal': return this.service.openExternal(arg);\n\t\t\tcase 'startCrashReporter': return this.service.startCrashReporter(arg);\n\t\t\tcase 'openAboutDialog': return this.service.openAboutDialog();\n\t\t\tcase 'resolveProxy': return this.service.resolveProxy(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { isAbsolute } from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceIdentifier, IStoredWorkspaceFolder, isRawFileWorkspaceFolder, isRawUriWorkspaceFolder, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { coalesce, distinct } from 'vs/base/common/arrays';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport interface IWorkspaceContextService {\n\t_serviceBrand: any;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\tonDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\tonDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\tonDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdentifier: ISingleFolderWorkspaceIdentifier | IWorkspaceIdentifier): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport namespace IWorkspace {\n\texport function isIWorkspace(thing: any): thing is IWorkspace {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& typeof (thing as IWorkspace).id === 'string'\n\t\t\t&& Array.isArray((thing as IWorkspace).folders);\n\t}\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport interface IWorkspaceFolderData {\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport namespace IWorkspaceFolder {\n\texport function isIWorkspaceFolder(thing: any): thing is IWorkspaceFolder {\n\t\treturn thing && typeof thing === 'object'\n\t\t\t&& URI.isUri((thing as IWorkspaceFolder).uri)\n\t\t\t&& typeof (thing as IWorkspaceFolder).name === 'string'\n\t\t\t&& typeof (thing as IWorkspaceFolder).toResource === 'function';\n\t}\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<WorkspaceFolder> = TernarySearchTree.forPaths<WorkspaceFolder>();\n\tprivate _folders: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[] = [],\n\t\tprivate _configuration: URI | null = null\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource.toString()) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forPaths<WorkspaceFolder>();\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri.toString(), folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, configuration: this.configuration };\n\t}\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\tname: string;\n\tindex: number;\n\n\tconstructor(data: IWorkspaceFolderData,\n\t\treadonly raw?: IStoredWorkspaceFolder) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn resources.joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], relativeTo?: URI): WorkspaceFolder[] {\n\tlet workspaceFolders = parseWorkspaceFolders(configuredFolders, relativeTo);\n\treturn ensureUnique(coalesce(workspaceFolders))\n\t\t.map(({ uri, raw, name }, index) => new WorkspaceFolder({ uri, name: name || resources.basenameOrAuthority(uri), index }, raw));\n}\n\nfunction parseWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], relativeTo: URI | undefined): Array<WorkspaceFolder | undefined> {\n\treturn configuredFolders.map((configuredFolder, index) => {\n\t\tlet uri: URI | null = null;\n\t\tif (isRawFileWorkspaceFolder(configuredFolder)) {\n\t\t\turi = toUri(configuredFolder.path, relativeTo);\n\t\t} else if (isRawUriWorkspaceFolder(configuredFolder)) {\n\t\t\ttry {\n\t\t\t\turi = URI.parse(configuredFolder.uri);\n\t\t\t\t// this makes sure all workspace folder are absolute\n\t\t\t\tif (uri.path[0] !== '/') {\n\t\t\t\t\turi = uri.with({ path: '/' + uri.path });\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(e);\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\tif (!uri) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new WorkspaceFolder({ uri, name: configuredFolder.name! /*is ensured in caller*/, index }, configuredFolder);\n\t});\n}\n\nfunction toUri(path: string, relativeTo: URI | undefined): URI | null {\n\tif (path) {\n\t\tif (isAbsolute(path)) {\n\t\t\treturn URI.file(path);\n\t\t}\n\t\tif (relativeTo) {\n\t\t\treturn resources.joinPath(relativeTo, path);\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction ensureUnique(folders: WorkspaceFolder[]): WorkspaceFolder[] {\n\treturn distinct(folders, folder => isLinux ? folder.uri.toString() : folder.uri.toString().toLowerCase());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkspacesMainService, IWorkspaceIdentifier, hasWorkspaceFileExtension, UNTITLED_WORKSPACE_NAME, IResolvedWorkspace, IStoredWorkspaceFolder, isStoredWorkspaceFolder, IWorkspaceFolderCreationData, IUntitledWorkspaceInfo, getStoredWorkspaceFolder } from 'vs/platform/workspaces/common/workspaces';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname } from 'vs/base/common/path';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { readFileSync, existsSync, mkdirSync, writeFileSync } from 'fs';\nimport { isLinux } from 'vs/base/common/platform';\nimport { delSync, readdirSync, writeFileAndFlushSync } from 'vs/base/node/extfs';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { createHash } from 'crypto';\nimport * as json from 'vs/base/common/json';\nimport { toWorkspaceFolders } from 'vs/platform/workspace/common/workspace';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { originalFSPath, dirname as resourcesDirname, isEqualOrParent, joinPath } from 'vs/base/common/resources';\n\nexport interface IStoredWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport class WorkspacesMainService extends Disposable implements IWorkspacesMainService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly untitledWorkspacesHome: URI; // local URI that contains all untitled workspaces\n\n\tprivate readonly _onUntitledWorkspaceDeleted = this._register(new Emitter<IWorkspaceIdentifier>());\n\tget onUntitledWorkspaceDeleted(): Event<IWorkspaceIdentifier> { return this._onUntitledWorkspaceDeleted.event; }\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis.untitledWorkspacesHome = environmentService.untitledWorkspacesHome;\n\t}\n\n\tresolveLocalWorkspaceSync(uri: URI): IResolvedWorkspace | null {\n\t\tif (!this.isWorkspacePath(uri)) {\n\t\t\treturn null; // does not look like a valid workspace config file\n\t\t}\n\t\tif (uri.scheme !== Schemas.file) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet contents: string;\n\t\ttry {\n\t\t\tcontents = readFileSync(uri.fsPath, 'utf8');\n\t\t} catch (error) {\n\t\t\treturn null; // invalid workspace\n\t\t}\n\n\t\treturn this.doResolveWorkspace(uri, contents);\n\t}\n\n\tprivate isWorkspacePath(uri: URI): boolean {\n\t\treturn this.isInsideWorkspacesHome(uri) || hasWorkspaceFileExtension(uri.path);\n\t}\n\n\tprivate doResolveWorkspace(path: URI, contents: string): IResolvedWorkspace | null {\n\t\ttry {\n\t\t\tconst workspace = this.doParseStoredWorkspace(path, contents);\n\t\t\tconst workspaceIdentifier = getWorkspaceIdentifier(path);\n\t\t\treturn {\n\t\t\t\tid: workspaceIdentifier.id,\n\t\t\t\tconfigPath: workspaceIdentifier.configPath,\n\t\t\t\tfolders: toWorkspaceFolders(workspace.folders, resourcesDirname(path)),\n\t\t\t\tremoteAuthority: workspace.remoteAuthority\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthis.logService.warn(error.toString());\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t\t// Parse workspace file\n\t\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t\t// Filter out folders which do not have a path or uri set\n\t\tif (Array.isArray(storedWorkspace.folders)) {\n\t\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t\t}\n\n\t\t// Validate\n\t\tif (!Array.isArray(storedWorkspace.folders)) {\n\t\t\tthrow new Error(`${path.toString()} looks like an invalid workspace file.`);\n\t\t}\n\n\t\treturn storedWorkspace;\n\t}\n\n\tprivate isInsideWorkspacesHome(path: URI): boolean {\n\t\treturn isEqualOrParent(path, this.environmentService.untitledWorkspacesHome);\n\t}\n\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier> {\n\t\tconst { workspace, storedWorkspace } = this.newUntitledWorkspace(folders, remoteAuthority);\n\t\tconst configPath = workspace.configPath.fsPath;\n\n\t\treturn mkdirp(dirname(configPath)).then(() => {\n\t\t\treturn writeFile(configPath, JSON.stringify(storedWorkspace, null, '\\t')).then(() => workspace);\n\t\t});\n\t}\n\n\tcreateUntitledWorkspaceSync(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): IWorkspaceIdentifier {\n\t\tconst { workspace, storedWorkspace } = this.newUntitledWorkspace(folders, remoteAuthority);\n\t\tconst configPath = workspace.configPath.fsPath;\n\n\t\tconst configPathDir = dirname(configPath);\n\t\tif (!existsSync(configPathDir)) {\n\t\t\tconst configPathDirDir = dirname(configPathDir);\n\t\t\tif (!existsSync(configPathDirDir)) {\n\t\t\t\tmkdirSync(configPathDirDir);\n\t\t\t}\n\t\t\tmkdirSync(configPathDir);\n\t\t}\n\n\t\twriteFileAndFlushSync(configPath, JSON.stringify(storedWorkspace, null, '\\t'));\n\n\t\treturn workspace;\n\t}\n\n\tprivate newUntitledWorkspace(folders: IWorkspaceFolderCreationData[] = [], remoteAuthority?: string): { workspace: IWorkspaceIdentifier, storedWorkspace: IStoredWorkspace } {\n\t\tconst randomId = (Date.now() + Math.round(Math.random() * 1000)).toString();\n\t\tconst untitledWorkspaceConfigFolder = joinPath(this.untitledWorkspacesHome, randomId);\n\t\tconst untitledWorkspaceConfigPath = joinPath(untitledWorkspaceConfigFolder, UNTITLED_WORKSPACE_NAME);\n\n\t\tconst storedWorkspaceFolder: IStoredWorkspaceFolder[] = [];\n\n\t\tfor (const folder of folders) {\n\t\t\tstoredWorkspaceFolder.push(getStoredWorkspaceFolder(folder.uri, folder.name, untitledWorkspaceConfigFolder));\n\t\t}\n\n\t\treturn {\n\t\t\tworkspace: getWorkspaceIdentifier(untitledWorkspaceConfigPath),\n\t\t\tstoredWorkspace: { folders: storedWorkspaceFolder, remoteAuthority }\n\t\t};\n\t}\n\n\tgetWorkspaceIdentifier(configPath: URI): Promise<IWorkspaceIdentifier> {\n\t\treturn Promise.resolve(getWorkspaceIdentifier(configPath));\n\t}\n\n\tisUntitledWorkspace(workspace: IWorkspaceIdentifier): boolean {\n\t\treturn this.isInsideWorkspacesHome(workspace.configPath);\n\t}\n\n\tdeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void {\n\t\tif (!this.isUntitledWorkspace(workspace)) {\n\t\t\treturn; // only supported for untitled workspaces\n\t\t}\n\n\t\t// Delete from disk\n\t\tthis.doDeleteUntitledWorkspaceSync(workspace);\n\n\t\t// Event\n\t\tthis._onUntitledWorkspaceDeleted.fire(workspace);\n\t}\n\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void> {\n\t\tthis.deleteUntitledWorkspaceSync(workspace);\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate doDeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void {\n\t\tconst configPath = originalFSPath(workspace.configPath);\n\t\ttry {\n\t\t\t// Delete Workspace\n\t\t\tdelSync(dirname(configPath));\n\n\t\t\t// Mark Workspace Storage to be deleted\n\t\t\tconst workspaceStoragePath = join(this.environmentService.workspaceStorageHome, workspace.id);\n\t\t\tif (existsSync(workspaceStoragePath)) {\n\t\t\t\twriteFileSync(join(workspaceStoragePath, 'obsolete'), '');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.warn(`Unable to delete untitled workspace ${configPath} (${error}).`);\n\t\t}\n\t}\n\n\tgetUntitledWorkspacesSync(): IUntitledWorkspaceInfo[] {\n\t\tlet untitledWorkspaces: IUntitledWorkspaceInfo[] = [];\n\t\ttry {\n\t\t\tconst untitledWorkspacePaths = readdirSync(this.untitledWorkspacesHome.fsPath).map(folder => joinPath(this.untitledWorkspacesHome, folder, UNTITLED_WORKSPACE_NAME));\n\t\t\tfor (const untitledWorkspacePath of untitledWorkspacePaths) {\n\t\t\t\tconst workspace = getWorkspaceIdentifier(untitledWorkspacePath);\n\t\t\t\tconst resolvedWorkspace = this.resolveLocalWorkspaceSync(untitledWorkspacePath);\n\t\t\t\tif (!resolvedWorkspace) {\n\t\t\t\t\tthis.doDeleteUntitledWorkspaceSync(workspace);\n\t\t\t\t} else {\n\t\t\t\t\tuntitledWorkspaces.push({ workspace, remoteAuthority: resolvedWorkspace.remoteAuthority });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error && error.code !== 'ENOENT') {\n\t\t\t\tthis.logService.warn(`Unable to read folders in ${this.untitledWorkspacesHome} (${error}).`);\n\t\t\t}\n\t\t}\n\t\treturn untitledWorkspaces;\n\t}\n}\n\nfunction getWorkspaceId(configPath: URI): string {\n\tlet workspaceConfigPath = configPath.scheme === Schemas.file ? originalFSPath(configPath) : configPath.toString();\n\tif (!isLinux) {\n\t\tworkspaceConfigPath = workspaceConfigPath.toLowerCase(); // sanitize for platform file system\n\t}\n\n\treturn createHash('md5').update(workspaceConfigPath).digest('hex');\n}\n\nexport function getWorkspaceIdentifier(configPath: URI): IWorkspaceIdentifier {\n\treturn {\n\t\tconfigPath,\n\t\tid: getWorkspaceId(configPath)\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { basename, normalize, join, dirname } from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport * as arrays from 'vs/base/common/arrays';\nimport { assign, mixin, equals } from 'vs/base/common/objects';\nimport { IBackupMainService, IEmptyWindowBackupInfo } from 'vs/platform/backup/common/backup';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { CodeWindow, defaultWindowState } from 'vs/code/electron-main/window';\nimport { hasArgs, asArray } from 'vs/platform/environment/node/argv';\nimport { ipcMain as ipc, screen, BrowserWindow, dialog, systemPreferences } from 'electron';\nimport { parseLineAndColumnAware } from 'vs/code/node/paths';\nimport { ILifecycleService, UnloadReason, LifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IWindowSettings, OpenContext, IPath, IWindowConfiguration, INativeOpenDialogOptions, IPathsToWaitFor, IEnterWorkspaceResult, IMessageBoxResult, INewWindowOptions, IURIToOpen, URIType, OpenDialogOptions } from 'vs/platform/windows/common/windows';\nimport { getLastActiveWindow, findBestWindowOrFolderForFile, findWindowOnWorkspace, findWindowOnExtensionDevelopmentPath, findWindowOnWorkspaceOrFolderUri } from 'vs/code/node/windowsFinder';\nimport { Event as CommonEvent, Emitter } from 'vs/base/common/event';\nimport product from 'vs/platform/product/node/product';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWindowsMainService, IOpenConfiguration, IWindowsCountChangedEvent, ICodeWindow, IWindowState as ISingleWindowState, WindowMode } from 'vs/platform/windows/electron-main/windows';\nimport { IHistoryMainService, IRecent } from 'vs/platform/history/common/history';\nimport { IProcessEnvironment, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { IWorkspacesMainService, IWorkspaceIdentifier, WORKSPACE_FILTER, isSingleFolderWorkspaceIdentifier, hasWorkspaceFileExtension } from 'vs/platform/workspaces/common/workspaces';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { URI } from 'vs/base/common/uri';\nimport { Queue } from 'vs/base/common/async';\nimport { exists } from 'vs/base/node/pfs';\nimport { getComparisonKey, isEqual, normalizePath, basename as resourcesBasename, originalFSPath, hasTrailingPathSeparator, removeTrailingPathSeparator } from 'vs/base/common/resources';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { restoreWindowsState, WindowsStateStorageData, getWindowsStateStoreData } from 'vs/code/electron-main/windowsStateStorage';\nimport { getWorkspaceIdentifier } from 'vs/platform/workspaces/electron-main/workspacesMainService';\n\nconst enum WindowError {\n\tUNRESPONSIVE = 1,\n\tCRASHED = 2\n}\n\nexport interface IWindowState {\n\tworkspace?: IWorkspaceIdentifier;\n\tfolderUri?: URI;\n\tbackupPath?: string;\n\tremoteAuthority?: string;\n\tuiState: ISingleWindowState;\n}\n\nexport interface IWindowsState {\n\tlastActiveWindow?: IWindowState;\n\tlastPluginDevelopmentHostWindow?: IWindowState;\n\topenedWindows: IWindowState[];\n}\n\ninterface INewWindowState extends ISingleWindowState {\n\thasDefaultState?: boolean;\n}\n\ntype RestoreWindowsSetting = 'all' | 'folders' | 'one' | 'none';\n\ninterface IOpenBrowserWindowOptions {\n\tuserEnv?: IProcessEnvironment;\n\tcli?: ParsedArgs;\n\n\tworkspace?: IWorkspaceIdentifier;\n\tfolderUri?: URI;\n\n\tremoteAuthority?: string;\n\n\tinitialStartup?: boolean;\n\n\tfileInputs?: IFileInputs;\n\n\tforceNewWindow?: boolean;\n\tforceNewTabbedWindow?: boolean;\n\twindowToUse?: ICodeWindow;\n\n\temptyWindowBackupInfo?: IEmptyWindowBackupInfo;\n}\n\ninterface IPathParseOptions {\n\tignoreFileNotFound?: boolean;\n\tgotoLineMode?: boolean;\n\tforceOpenWorkspaceAsFile?: boolean;\n\tremoteAuthority?: string;\n}\n\ninterface IFileInputs {\n\tfilesToOpen: IPath[];\n\tfilesToCreate: IPath[];\n\tfilesToDiff: IPath[];\n\tfilesToWait?: IPathsToWaitFor;\n\tremoteAuthority?: string;\n}\n\ninterface IPathToOpen extends IPath {\n\n\t// the workspace for a Code instance to open\n\tworkspace?: IWorkspaceIdentifier;\n\n\t// the folder path for a Code instance to open\n\tfolderUri?: URI;\n\n\t// the backup path for a Code instance to use\n\tbackupPath?: string;\n\n\t// the remote authority for the Code instance to open. Undefined if not remote.\n\tremoteAuthority?: string;\n\n\t// indicator to create the file path in the Code instance\n\tcreateFilePath?: boolean;\n\n\t// optional label for the recent history\n\tlabel?: string;\n}\n\nfunction isFolderPathToOpen(path: IPathToOpen): path is IFolderPathToOpen {\n\treturn !!path.folderUri;\n}\n\ninterface IFolderPathToOpen {\n\n\t// the folder path for a Code instance to open\n\tfolderUri: URI;\n\n\t// the backup path for a Code instance to use\n\tbackupPath?: string;\n\n\t// the remote authority for the Code instance to open. Undefined if not remote.\n\tremoteAuthority?: string;\n\n\t// optional label for the recent history\n\tlabel?: string;\n}\n\nfunction isWorkspacePathToOpen(path: IPathToOpen): path is IWorkspacePathToOpen {\n\treturn !!path.workspace;\n}\n\ninterface IWorkspacePathToOpen {\n\n\t// the workspace for a Code instance to open\n\tworkspace: IWorkspaceIdentifier;\n\n\t// the backup path for a Code instance to use\n\tbackupPath?: string;\n\n\t// the remote authority for the Code instance to open. Undefined if not remote.\n\tremoteAuthority?: string;\n\n\t// optional label for the recent history\n\tlabel?: string;\n}\n\nexport class WindowsManager implements IWindowsMainService {\n\n\t_serviceBrand: any;\n\n\tprivate static readonly windowsStateStorageKey = 'windowsState';\n\n\tprivate static WINDOWS: ICodeWindow[] = [];\n\n\tprivate initialUserEnv: IProcessEnvironment;\n\n\tprivate readonly windowsState: IWindowsState;\n\tprivate lastClosedWindowState?: IWindowState;\n\n\tprivate readonly dialogs: Dialogs;\n\tprivate readonly workspacesManager: WorkspacesManager;\n\n\tprivate _onWindowReady = new Emitter<ICodeWindow>();\n\tonWindowReady: CommonEvent<ICodeWindow> = this._onWindowReady.event;\n\n\tprivate _onWindowClose = new Emitter<number>();\n\tonWindowClose: CommonEvent<number> = this._onWindowClose.event;\n\n\tprivate _onWindowLoad = new Emitter<number>();\n\tonWindowLoad: CommonEvent<number> = this._onWindowLoad.event;\n\n\tprivate _onWindowsCountChanged = new Emitter<IWindowsCountChangedEvent>();\n\tonWindowsCountChanged: CommonEvent<IWindowsCountChangedEvent> = this._onWindowsCountChanged.event;\n\n\tconstructor(\n\t\tprivate readonly machineId: string,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHistoryMainService private readonly historyMainService: IHistoryMainService,\n\t\t@IWorkspacesMainService private readonly workspacesMainService: IWorkspacesMainService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tconst windowsStateStoreData = this.stateService.getItem<WindowsStateStorageData>(WindowsManager.windowsStateStorageKey);\n\n\t\tthis.windowsState = restoreWindowsState(windowsStateStoreData);\n\t\tif (!Array.isArray(this.windowsState.openedWindows)) {\n\t\t\tthis.windowsState.openedWindows = [];\n\t\t}\n\n\t\tthis.dialogs = new Dialogs(environmentService, telemetryService, stateService, this);\n\t\tthis.workspacesManager = new WorkspacesManager(workspacesMainService, backupMainService, this);\n\t}\n\n\tready(initialUserEnv: IProcessEnvironment): void {\n\t\tthis.initialUserEnv = initialUserEnv;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// React to workbench ready events from windows\n\t\tipc.on('vscode:workbenchReady', (event: any, windowId: number) => {\n\t\t\tthis.logService.trace('IPC#vscode-workbenchReady');\n\n\t\t\tconst win = this.getWindowById(windowId);\n\t\t\tif (win) {\n\t\t\t\twin.setReady();\n\n\t\t\t\t// Event\n\t\t\t\tthis._onWindowReady.fire(win);\n\t\t\t}\n\t\t});\n\n\t\t// React to HC color scheme changes (Windows)\n\t\tif (isWindows) {\n\t\t\tsystemPreferences.on('inverted-color-scheme-changed', () => {\n\t\t\t\tif (systemPreferences.isInvertedColorScheme()) {\n\t\t\t\t\tthis.sendToAll('vscode:enterHighContrast');\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendToAll('vscode:leaveHighContrast');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle various lifecycle events around windows\n\t\tthis.lifecycleService.onBeforeWindowClose(window => this.onBeforeWindowClose(window));\n\t\tthis.lifecycleService.onBeforeShutdown(() => this.onBeforeShutdown());\n\t\tthis.onWindowsCountChanged(e => {\n\t\t\tif (e.newCount - e.oldCount > 0) {\n\t\t\t\t// clear last closed window state when a new window opens. this helps on macOS where\n\t\t\t\t// otherwise closing the last window, opening a new window and then quitting would\n\t\t\t\t// use the state of the previously closed window when restarting.\n\t\t\t\tthis.lastClosedWindowState = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t// Note that onBeforeShutdown() and onBeforeWindowClose() are fired in different order depending on the OS:\n\t// - macOS: since the app will not quit when closing the last window, you will always first get\n\t//          the onBeforeShutdown() event followed by N onbeforeWindowClose() events for each window\n\t// - other: on other OS, closing the last window will quit the app so the order depends on the\n\t//          user interaction: closing the last window will first trigger onBeforeWindowClose()\n\t//          and then onBeforeShutdown(). Using the quit action however will first issue onBeforeShutdown()\n\t//          and then onBeforeWindowClose().\n\t//\n\t// Here is the behaviour on different OS dependig on action taken (Electron 1.7.x):\n\t//\n\t// Legend\n\t// -  quit(N): quit application with N windows opened\n\t// - close(1): close one window via the window close button\n\t// - closeAll: close all windows via the taskbar command\n\t// - onBeforeShutdown(N): number of windows reported in this event handler\n\t// - onBeforeWindowClose(N, M): number of windows reported and quitRequested boolean in this event handler\n\t//\n\t// macOS\n\t// \t-     quit(1): onBeforeShutdown(1), onBeforeWindowClose(1, true)\n\t// \t-     quit(2): onBeforeShutdown(2), onBeforeWindowClose(2, true), onBeforeWindowClose(2, true)\n\t// \t-     quit(0): onBeforeShutdown(0)\n\t// \t-    close(1): onBeforeWindowClose(1, false)\n\t//\n\t// Windows\n\t// \t-     quit(1): onBeforeShutdown(1), onBeforeWindowClose(1, true)\n\t// \t-     quit(2): onBeforeShutdown(2), onBeforeWindowClose(2, true), onBeforeWindowClose(2, true)\n\t// \t-    close(1): onBeforeWindowClose(2, false)[not last window]\n\t// \t-    close(1): onBeforeWindowClose(1, false), onBeforeShutdown(0)[last window]\n\t// \t- closeAll(2): onBeforeWindowClose(2, false), onBeforeWindowClose(2, false), onBeforeShutdown(0)\n\t//\n\t// Linux\n\t// \t-     quit(1): onBeforeShutdown(1), onBeforeWindowClose(1, true)\n\t// \t-     quit(2): onBeforeShutdown(2), onBeforeWindowClose(2, true), onBeforeWindowClose(2, true)\n\t// \t-    close(1): onBeforeWindowClose(2, false)[not last window]\n\t// \t-    close(1): onBeforeWindowClose(1, false), onBeforeShutdown(0)[last window]\n\t// \t- closeAll(2): onBeforeWindowClose(2, false), onBeforeWindowClose(2, false), onBeforeShutdown(0)\n\t//\n\tprivate onBeforeShutdown(): void {\n\t\tconst currentWindowsState: IWindowsState = {\n\t\t\topenedWindows: [],\n\t\t\tlastPluginDevelopmentHostWindow: this.windowsState.lastPluginDevelopmentHostWindow,\n\t\t\tlastActiveWindow: this.lastClosedWindowState\n\t\t};\n\n\t\t// 1.) Find a last active window (pick any other first window otherwise)\n\t\tif (!currentWindowsState.lastActiveWindow) {\n\t\t\tlet activeWindow = this.getLastActiveWindow();\n\t\t\tif (!activeWindow || activeWindow.isExtensionDevelopmentHost) {\n\t\t\t\tactiveWindow = WindowsManager.WINDOWS.filter(w => !w.isExtensionDevelopmentHost)[0];\n\t\t\t}\n\n\t\t\tif (activeWindow) {\n\t\t\t\tcurrentWindowsState.lastActiveWindow = this.toWindowState(activeWindow);\n\t\t\t}\n\t\t}\n\n\t\t// 2.) Find extension host window\n\t\tconst extensionHostWindow = WindowsManager.WINDOWS.filter(w => w.isExtensionDevelopmentHost && !w.isExtensionTestHost)[0];\n\t\tif (extensionHostWindow) {\n\t\t\tcurrentWindowsState.lastPluginDevelopmentHostWindow = this.toWindowState(extensionHostWindow);\n\t\t}\n\n\t\t// 3.) All windows (except extension host) for N >= 2 to support restoreWindows: all or for auto update\n\t\t//\n\t\t// Carefull here: asking a window for its window state after it has been closed returns bogus values (width: 0, height: 0)\n\t\t// so if we ever want to persist the UI state of the last closed window (window count === 1), it has\n\t\t// to come from the stored lastClosedWindowState on Win/Linux at least\n\t\tif (this.getWindowCount() > 1) {\n\t\t\tcurrentWindowsState.openedWindows = WindowsManager.WINDOWS.filter(w => !w.isExtensionDevelopmentHost).map(w => this.toWindowState(w));\n\t\t}\n\n\t\t// Persist\n\t\tthis.stateService.setItem(WindowsManager.windowsStateStorageKey, getWindowsStateStoreData(currentWindowsState));\n\t}\n\n\t// See note on #onBeforeShutdown() for details how these events are flowing\n\tprivate onBeforeWindowClose(win: ICodeWindow): void {\n\t\tif (this.lifecycleService.quitRequested) {\n\t\t\treturn; // during quit, many windows close in parallel so let it be handled in the before-quit handler\n\t\t}\n\n\t\t// On Window close, update our stored UI state of this window\n\t\tconst state: IWindowState = this.toWindowState(win);\n\t\tif (win.isExtensionDevelopmentHost && !win.isExtensionTestHost) {\n\t\t\tthis.windowsState.lastPluginDevelopmentHostWindow = state; // do not let test run window state overwrite our extension development state\n\t\t}\n\n\t\t// Any non extension host window with same workspace or folder\n\t\telse if (!win.isExtensionDevelopmentHost && (!!win.openedWorkspace || !!win.openedFolderUri)) {\n\t\t\tthis.windowsState.openedWindows.forEach(o => {\n\t\t\t\tconst sameWorkspace = win.openedWorkspace && o.workspace && o.workspace.id === win.openedWorkspace.id;\n\t\t\t\tconst sameFolder = win.openedFolderUri && o.folderUri && isEqual(o.folderUri, win.openedFolderUri);\n\n\t\t\t\tif (sameWorkspace || sameFolder) {\n\t\t\t\t\to.uiState = state.uiState;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// On Windows and Linux closing the last window will trigger quit. Since we are storing all UI state\n\t\t// before quitting, we need to remember the UI state of this window to be able to persist it.\n\t\t// On macOS we keep the last closed window state ready in case the user wants to quit right after or\n\t\t// wants to open another window, in which case we use this state over the persisted one.\n\t\tif (this.getWindowCount() === 1) {\n\t\t\tthis.lastClosedWindowState = state;\n\t\t}\n\t}\n\n\tprivate toWindowState(win: ICodeWindow): IWindowState {\n\t\treturn {\n\t\t\tworkspace: win.openedWorkspace,\n\t\t\tfolderUri: win.openedFolderUri,\n\t\t\tbackupPath: win.backupPath,\n\t\t\tremoteAuthority: win.remoteAuthority,\n\t\t\tuiState: win.serializeWindowState()\n\t\t};\n\t}\n\n\topen(openConfig: IOpenConfiguration): ICodeWindow[] {\n\t\tthis.logService.trace('windowsManager#open');\n\t\topenConfig = this.validateOpenConfig(openConfig);\n\n\t\tconst pathsToOpen = this.getPathsToOpen(openConfig);\n\n\t\tconst foldersToAdd: IFolderPathToOpen[] = [];\n\t\tconst foldersToOpen: IFolderPathToOpen[] = [];\n\t\tconst workspacesToOpen: IWorkspacePathToOpen[] = [];\n\t\tconst emptyToRestore: IEmptyWindowBackupInfo[] = []; // empty windows with backupPath\n\t\tlet emptyToOpen: number = 0;\n\t\tlet fileInputs: IFileInputs | undefined; \t\t// collect all file inputs\n\t\tfor (const path of pathsToOpen) {\n\t\t\tif (isFolderPathToOpen(path)) {\n\t\t\t\tif (openConfig.addMode) {\n\t\t\t\t\t// When run with --add, take the folders that are to be opened as\n\t\t\t\t\t// folders that should be added to the currently active window.\n\t\t\t\t\tfoldersToAdd.push(path);\n\t\t\t\t} else {\n\t\t\t\t\tfoldersToOpen.push(path);\n\t\t\t\t}\n\t\t\t} else if (isWorkspacePathToOpen(path)) {\n\t\t\t\tworkspacesToOpen.push(path);\n\t\t\t} else if (path.fileUri) {\n\t\t\t\tif (!fileInputs) {\n\t\t\t\t\tfileInputs = { filesToCreate: [], filesToOpen: [], filesToDiff: [], remoteAuthority: path.remoteAuthority };\n\t\t\t\t}\n\t\t\t\tif (!path.createFilePath) {\n\t\t\t\t\tfileInputs.filesToOpen.push(path);\n\t\t\t\t} else {\n\t\t\t\t\tfileInputs.filesToCreate.push(path);\n\t\t\t\t}\n\t\t\t} else if (path.backupPath) {\n\t\t\t\temptyToRestore.push({ backupFolder: basename(path.backupPath), remoteAuthority: path.remoteAuthority });\n\t\t\t} else {\n\t\t\t\temptyToOpen++;\n\t\t\t}\n\t\t}\n\n\t\t// When run with --diff, take the files to open as files to diff\n\t\t// if there are exactly two files provided.\n\t\tif (fileInputs && openConfig.diffMode && fileInputs.filesToOpen.length === 2) {\n\t\t\tfileInputs.filesToDiff = fileInputs.filesToOpen;\n\t\t\tfileInputs.filesToOpen = [];\n\t\t\tfileInputs.filesToCreate = []; // diff ignores other files that do not exist\n\t\t}\n\n\t\t// When run with --wait, make sure we keep the paths to wait for\n\t\tif (fileInputs && openConfig.cli.wait && openConfig.cli.waitMarkerFilePath) {\n\t\t\tfileInputs.filesToWait = { paths: [...fileInputs.filesToDiff, ...fileInputs.filesToOpen, ...fileInputs.filesToCreate], waitMarkerFilePath: openConfig.cli.waitMarkerFilePath };\n\t\t}\n\n\t\t//\n\t\t// These are windows to restore because of hot-exit or from previous session (only performed once on startup!)\n\t\t//\n\t\tlet foldersToRestore: URI[] = [];\n\t\tlet workspacesToRestore: IWorkspacePathToOpen[] = [];\n\t\tif (openConfig.initialStartup && !openConfig.cli.extensionDevelopmentPath && !openConfig.cli['disable-restore-windows']) {\n\t\t\tlet foldersToRestore = this.backupMainService.getFolderBackupPaths();\n\t\t\tfoldersToAdd.push(...foldersToRestore.map(f => ({ folderUri: f, remoteAuhority: getRemoteAuthority(f), isRestored: true })));\n\n\t\t\t// collect from workspaces with hot-exit backups and from previous window session\n\t\t\tworkspacesToRestore = [...this.backupMainService.getWorkspaceBackups(), ...this.workspacesMainService.getUntitledWorkspacesSync()];\n\t\t\tworkspacesToOpen.push(...workspacesToRestore);\n\n\t\t\temptyToRestore.push(...this.backupMainService.getEmptyWindowBackupPaths());\n\t\t} else {\n\t\t\temptyToRestore.length = 0;\n\t\t}\n\n\t\t// Open based on config\n\t\tconst usedWindows = this.doOpen(openConfig, workspacesToOpen, foldersToOpen, emptyToRestore, emptyToOpen, fileInputs, foldersToAdd);\n\n\t\t// Make sure to pass focus to the most relevant of the windows if we open multiple\n\t\tif (usedWindows.length > 1) {\n\n\t\t\tconst focusLastActive = this.windowsState.lastActiveWindow && !openConfig.forceEmpty && !hasArgs(openConfig.cli._) && !hasArgs(openConfig.cli['file-uri']) && !hasArgs(openConfig.cli['folder-uri']) && !(openConfig.urisToOpen && openConfig.urisToOpen.length);\n\t\t\tlet focusLastOpened = true;\n\t\t\tlet focusLastWindow = true;\n\n\t\t\t// 1.) focus last active window if we are not instructed to open any paths\n\t\t\tif (focusLastActive) {\n\t\t\t\tconst lastActiveWindow = usedWindows.filter(w => w.backupPath === this.windowsState.lastActiveWindow!.backupPath);\n\t\t\t\tif (lastActiveWindow.length) {\n\t\t\t\t\tlastActiveWindow[0].focus();\n\t\t\t\t\tfocusLastOpened = false;\n\t\t\t\t\tfocusLastWindow = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 2.) if instructed to open paths, focus last window which is not restored\n\t\t\tif (focusLastOpened) {\n\t\t\t\tfor (let i = usedWindows.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst usedWindow = usedWindows[i];\n\t\t\t\t\tif (\n\t\t\t\t\t\t(usedWindow.openedWorkspace && workspacesToRestore.some(workspace => workspace.workspace.id === usedWindow.openedWorkspace!.id)) ||\t// skip over restored workspace\n\t\t\t\t\t\t(usedWindow.openedFolderUri && foldersToRestore.some(uri => isEqual(uri, usedWindow.openedFolderUri))) ||\t\t\t// skip over restored folder\n\t\t\t\t\t\t(usedWindow.backupPath && emptyToRestore.some(empty => empty.backupFolder === basename(usedWindow.backupPath!)))\t\t\t\t// skip over restored empty window\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tusedWindow.focus();\n\t\t\t\t\tfocusLastWindow = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 3.) finally, always ensure to have at least last used window focused\n\t\t\tif (focusLastWindow) {\n\t\t\t\tusedWindows[usedWindows.length - 1].focus();\n\t\t\t}\n\t\t}\n\n\t\t// Remember in recent document list (unless this opens for extension development)\n\t\t// Also do not add paths when files are opened for diffing, only if opened individually\n\t\tif (!usedWindows.some(w => w.isExtensionDevelopmentHost) && !openConfig.diffMode && !this.environmentService.skipAddToRecentlyOpened) {\n\t\t\tconst recents: IRecent[] = [];\n\t\t\tfor (let pathToOpen of pathsToOpen) {\n\t\t\t\tif (pathToOpen.workspace) {\n\t\t\t\t\trecents.push({ label: pathToOpen.label, workspace: pathToOpen.workspace });\n\t\t\t\t} else if (pathToOpen.folderUri) {\n\t\t\t\t\trecents.push({ label: pathToOpen.label, folderUri: pathToOpen.folderUri });\n\t\t\t\t} else if (pathToOpen.fileUri) {\n\t\t\t\t\trecents.push({ label: pathToOpen.label, fileUri: pathToOpen.fileUri });\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.historyMainService.addRecentlyOpened(recents);\n\t\t}\n\n\t\t// If we got started with --wait from the CLI, we need to signal to the outside when the window\n\t\t// used for the edit operation is closed or loaded to a different folder so that the waiting\n\t\t// process can continue. We do this by deleting the waitMarkerFilePath.\n\t\tif (openConfig.context === OpenContext.CLI && openConfig.cli.wait && openConfig.cli.waitMarkerFilePath && usedWindows.length === 1 && usedWindows[0]) {\n\t\t\tthis.waitForWindowCloseOrLoad(usedWindows[0].id).then(() => fs.unlink(openConfig.cli.waitMarkerFilePath!, _error => undefined));\n\t\t}\n\n\t\treturn usedWindows;\n\t}\n\n\tprivate validateOpenConfig(config: IOpenConfiguration): IOpenConfiguration {\n\n\t\t// Make sure addMode is only enabled if we have an active window\n\t\tif (config.addMode && (config.initialStartup || !this.getLastActiveWindow())) {\n\t\t\tconfig.addMode = false;\n\t\t}\n\n\t\treturn config;\n\t}\n\n\tprivate doOpen(\n\t\topenConfig: IOpenConfiguration,\n\t\tworkspacesToOpen: IWorkspacePathToOpen[],\n\t\tfoldersToOpen: IFolderPathToOpen[],\n\t\temptyToRestore: IEmptyWindowBackupInfo[],\n\t\temptyToOpen: number,\n\t\tfileInputs: IFileInputs | undefined,\n\t\tfoldersToAdd: IFolderPathToOpen[]\n\t) {\n\t\tconst usedWindows: ICodeWindow[] = [];\n\n\t\t// Settings can decide if files/folders open in new window or not\n\t\tlet { openFolderInNewWindow, openFilesInNewWindow } = this.shouldOpenNewWindow(openConfig);\n\n\t\t// Handle folders to add by looking for the last active workspace (not on initial startup)\n\t\tif (!openConfig.initialStartup && foldersToAdd.length > 0) {\n\t\t\tconst authority = foldersToAdd[0].remoteAuthority;\n\t\t\tconst lastActiveWindow = this.getLastActiveWindowForAuthority(authority);\n\t\t\tif (lastActiveWindow) {\n\t\t\t\tusedWindows.push(this.doAddFoldersToExistingWindow(lastActiveWindow, foldersToAdd.map(f => f.folderUri)));\n\t\t\t}\n\t\t}\n\n\t\t// Handle files to open/diff or to create when we dont open a folder and we do not restore any folder/untitled from hot-exit\n\t\tconst potentialWindowsCount = foldersToOpen.length + workspacesToOpen.length + emptyToRestore.length;\n\t\tif (potentialWindowsCount === 0 && fileInputs) {\n\n\t\t\t// Find suitable window or folder path to open files in\n\t\t\tconst fileToCheck = fileInputs.filesToOpen[0] || fileInputs.filesToCreate[0] || fileInputs.filesToDiff[0];\n\t\t\t// only look at the windows with correct authority\n\t\t\tconst windows = WindowsManager.WINDOWS.filter(w => w.remoteAuthority === fileInputs!.remoteAuthority);\n\n\t\t\tconst bestWindowOrFolder = findBestWindowOrFolderForFile({\n\t\t\t\twindows,\n\t\t\t\tnewWindow: openFilesInNewWindow,\n\t\t\t\tcontext: openConfig.context,\n\t\t\t\tfileUri: fileToCheck && fileToCheck.fileUri,\n\t\t\t\tlocalWorkspaceResolver: workspace => workspace.configPath.scheme === Schemas.file ? this.workspacesMainService.resolveLocalWorkspaceSync(workspace.configPath) : null\n\t\t\t});\n\n\t\t\t// We found a window to open the files in\n\t\t\tif (bestWindowOrFolder instanceof CodeWindow) {\n\n\t\t\t\t// Window is workspace\n\t\t\t\tif (bestWindowOrFolder.openedWorkspace) {\n\t\t\t\t\tworkspacesToOpen.push({ workspace: bestWindowOrFolder.openedWorkspace, remoteAuthority: bestWindowOrFolder.remoteAuthority });\n\t\t\t\t}\n\n\t\t\t\t// Window is single folder\n\t\t\t\telse if (bestWindowOrFolder.openedFolderUri) {\n\t\t\t\t\tfoldersToOpen.push({ folderUri: bestWindowOrFolder.openedFolderUri, remoteAuthority: bestWindowOrFolder.remoteAuthority });\n\t\t\t\t}\n\n\t\t\t\t// Window is empty\n\t\t\t\telse {\n\n\t\t\t\t\t// Do open files\n\t\t\t\t\tusedWindows.push(this.doOpenFilesInExistingWindow(openConfig, bestWindowOrFolder, fileInputs));\n\n\t\t\t\t\t// Reset these because we handled them\n\t\t\t\t\tfileInputs = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Finally, if no window or folder is found, just open the files in an empty window\n\t\t\telse {\n\t\t\t\tusedWindows.push(this.openInBrowserWindow({\n\t\t\t\t\tuserEnv: openConfig.userEnv,\n\t\t\t\t\tcli: openConfig.cli,\n\t\t\t\t\tinitialStartup: openConfig.initialStartup,\n\t\t\t\t\tfileInputs,\n\t\t\t\t\tforceNewWindow: true,\n\t\t\t\t\tremoteAuthority: fileInputs.remoteAuthority,\n\t\t\t\t\tforceNewTabbedWindow: openConfig.forceNewTabbedWindow\n\t\t\t\t}));\n\n\t\t\t\t// Reset these because we handled them\n\t\t\t\tfileInputs = undefined;\n\t\t\t}\n\t\t}\n\n\t\t// Handle workspaces to open (instructed and to restore)\n\t\tconst allWorkspacesToOpen = arrays.distinct(workspacesToOpen, workspace => workspace.workspace.id); // prevent duplicates\n\t\tif (allWorkspacesToOpen.length > 0) {\n\n\t\t\t// Check for existing instances\n\t\t\tconst windowsOnWorkspace = arrays.coalesce(allWorkspacesToOpen.map(workspaceToOpen => findWindowOnWorkspace(WindowsManager.WINDOWS, workspaceToOpen.workspace)));\n\t\t\tif (windowsOnWorkspace.length > 0) {\n\t\t\t\tconst windowOnWorkspace = windowsOnWorkspace[0];\n\t\t\t\tconst fileInputsForWindow = (fileInputs && fileInputs.remoteAuthority === windowOnWorkspace.remoteAuthority) ? fileInputs : undefined;\n\n\t\t\t\t// Do open files\n\t\t\t\tusedWindows.push(this.doOpenFilesInExistingWindow(openConfig, windowOnWorkspace, fileInputsForWindow));\n\n\t\t\t\t// Reset these because we handled them\n\t\t\t\tif (fileInputsForWindow) {\n\t\t\t\t\tfileInputs = undefined;\n\t\t\t\t}\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t}\n\n\t\t\t// Open remaining ones\n\t\t\tallWorkspacesToOpen.forEach(workspaceToOpen => {\n\t\t\t\tif (windowsOnWorkspace.some(win => win.openedWorkspace!.id === workspaceToOpen.workspace.id)) {\n\t\t\t\t\treturn; // ignore folders that are already open\n\t\t\t\t}\n\n\t\t\t\tconst remoteAuthority = workspaceToOpen.remoteAuthority;\n\t\t\t\tconst fileInputsForWindow = (fileInputs && fileInputs.remoteAuthority === remoteAuthority) ? fileInputs : undefined;\n\n\t\t\t\t// Do open folder\n\t\t\t\tusedWindows.push(this.doOpenFolderOrWorkspace(openConfig, workspaceToOpen, openFolderInNewWindow, fileInputsForWindow));\n\n\t\t\t\t// Reset these because we handled them\n\t\t\t\tif (fileInputsForWindow) {\n\t\t\t\t\tfileInputs = undefined;\n\t\t\t\t}\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t});\n\t\t}\n\n\t\t// Handle folders to open (instructed and to restore)\n\t\tconst allFoldersToOpen = arrays.distinct(foldersToOpen, folder => getComparisonKey(folder.folderUri)); // prevent duplicates\n\n\t\tif (allFoldersToOpen.length > 0) {\n\n\t\t\t// Check for existing instances\n\t\t\tconst windowsOnFolderPath = arrays.coalesce(allFoldersToOpen.map(folderToOpen => findWindowOnWorkspace(WindowsManager.WINDOWS, folderToOpen.folderUri)));\n\t\t\tif (windowsOnFolderPath.length > 0) {\n\t\t\t\tconst windowOnFolderPath = windowsOnFolderPath[0];\n\t\t\t\tconst fileInputsForWindow = fileInputs && fileInputs.remoteAuthority === windowOnFolderPath.remoteAuthority ? fileInputs : undefined;\n\n\t\t\t\t// Do open files\n\t\t\t\tusedWindows.push(this.doOpenFilesInExistingWindow(openConfig, windowOnFolderPath, fileInputsForWindow));\n\n\t\t\t\t// Reset these because we handled them\n\t\t\t\tif (fileInputsForWindow) {\n\t\t\t\t\tfileInputs = undefined;\n\t\t\t\t}\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t}\n\n\t\t\t// Open remaining ones\n\t\t\tallFoldersToOpen.forEach(folderToOpen => {\n\n\t\t\t\tif (windowsOnFolderPath.some(win => isEqual(win.openedFolderUri, folderToOpen.folderUri))) {\n\t\t\t\t\treturn; // ignore folders that are already open\n\t\t\t\t}\n\n\t\t\t\tconst remoteAuthority = folderToOpen.remoteAuthority;\n\t\t\t\tconst fileInputsForWindow = (fileInputs && fileInputs.remoteAuthority === remoteAuthority) ? fileInputs : undefined;\n\n\t\t\t\t// Do open folder\n\t\t\t\tusedWindows.push(this.doOpenFolderOrWorkspace(openConfig, folderToOpen, openFolderInNewWindow, fileInputsForWindow));\n\n\t\t\t\t// Reset these because we handled them\n\t\t\t\tif (fileInputsForWindow) {\n\t\t\t\t\tfileInputs = undefined;\n\t\t\t\t}\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t});\n\t\t}\n\n\t\t// Handle empty to restore\n\t\tconst allEmptyToRestore = arrays.distinct(emptyToRestore, info => info.backupFolder || ''); // prevent duplicates\n\t\tif (allEmptyToRestore.length > 0) {\n\t\t\tallEmptyToRestore.forEach(emptyWindowBackupInfo => {\n\t\t\t\tconst remoteAuthority = emptyWindowBackupInfo.remoteAuthority;\n\t\t\t\tconst fileInputsForWindow = (fileInputs && fileInputs.remoteAuthority === remoteAuthority) ? fileInputs : undefined;\n\n\t\t\t\tusedWindows.push(this.openInBrowserWindow({\n\t\t\t\t\tuserEnv: openConfig.userEnv,\n\t\t\t\t\tcli: openConfig.cli,\n\t\t\t\t\tinitialStartup: openConfig.initialStartup,\n\t\t\t\t\tfileInputs: fileInputsForWindow,\n\t\t\t\t\tremoteAuthority,\n\t\t\t\t\tforceNewWindow: true,\n\t\t\t\t\tforceNewTabbedWindow: openConfig.forceNewTabbedWindow,\n\t\t\t\t\temptyWindowBackupInfo\n\t\t\t\t}));\n\n\t\t\t\t// Reset these because we handled them\n\t\t\t\tif (fileInputsForWindow) {\n\t\t\t\t\tfileInputs = undefined;\n\t\t\t\t}\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t});\n\t\t}\n\n\t\t// Handle empty to open (only if no other window opened)\n\t\tif (usedWindows.length === 0 || fileInputs) {\n\t\t\tif (fileInputs && !emptyToOpen) {\n\t\t\t\temptyToOpen++;\n\t\t\t}\n\t\t\tconst remoteAuthority = fileInputs ? fileInputs.remoteAuthority : (openConfig.cli && openConfig.cli.remote || undefined);\n\t\t\tfor (let i = 0; i < emptyToOpen; i++) {\n\t\t\t\tusedWindows.push(this.openInBrowserWindow({\n\t\t\t\t\tuserEnv: openConfig.userEnv,\n\t\t\t\t\tcli: openConfig.cli,\n\t\t\t\t\tinitialStartup: openConfig.initialStartup,\n\t\t\t\t\tremoteAuthority,\n\t\t\t\t\tforceNewWindow: openFolderInNewWindow,\n\t\t\t\t\tforceNewTabbedWindow: openConfig.forceNewTabbedWindow,\n\t\t\t\t\tfileInputs\n\t\t\t\t}));\n\n\t\t\t\t// Reset these because we handled them\n\t\t\t\tfileInputs = undefined;\n\t\t\t\topenFolderInNewWindow = true; // any other window to open must open in new window then\n\t\t\t}\n\t\t}\n\n\t\treturn arrays.distinct(usedWindows);\n\t}\n\n\tprivate doOpenFilesInExistingWindow(configuration: IOpenConfiguration, window: ICodeWindow, fileInputs?: IFileInputs): ICodeWindow {\n\t\twindow.focus(); // make sure window has focus\n\n\t\tconst params: { filesToOpen?, filesToCreate?, filesToDiff?, filesToWait?, termProgram?} = {};\n\t\tif (fileInputs) {\n\t\t\tparams.filesToOpen = fileInputs.filesToOpen;\n\t\t\tparams.filesToCreate = fileInputs.filesToCreate;\n\t\t\tparams.filesToDiff = fileInputs.filesToDiff;\n\t\t\tparams.filesToWait = fileInputs.filesToWait;\n\t\t}\n\n\t\tif (configuration.userEnv) {\n\t\t\tparams.termProgram = configuration.userEnv['TERM_PROGRAM'];\n\t\t}\n\n\t\twindow.sendWhenReady('vscode:openFiles', params);\n\n\t\treturn window;\n\t}\n\n\tprivate doAddFoldersToExistingWindow(window: ICodeWindow, foldersToAdd: URI[]): ICodeWindow {\n\t\twindow.focus(); // make sure window has focus\n\n\t\twindow.sendWhenReady('vscode:addFolders', { foldersToAdd });\n\n\t\treturn window;\n\t}\n\n\tprivate doOpenFolderOrWorkspace(openConfig: IOpenConfiguration, folderOrWorkspace: IPathToOpen, forceNewWindow: boolean, fileInputs: IFileInputs | undefined, windowToUse?: ICodeWindow): ICodeWindow {\n\t\tif (!forceNewWindow && !windowToUse && typeof openConfig.contextWindowId === 'number') {\n\t\t\twindowToUse = this.getWindowById(openConfig.contextWindowId); // fix for https://github.com/Microsoft/vscode/issues/49587\n\t\t}\n\n\t\tconst browserWindow = this.openInBrowserWindow({\n\t\t\tuserEnv: openConfig.userEnv,\n\t\t\tcli: openConfig.cli,\n\t\t\tinitialStartup: openConfig.initialStartup,\n\t\t\tworkspace: folderOrWorkspace.workspace,\n\t\t\tfolderUri: folderOrWorkspace.folderUri,\n\t\t\tfileInputs,\n\t\t\tremoteAuthority: folderOrWorkspace.remoteAuthority,\n\t\t\tforceNewWindow,\n\t\t\tforceNewTabbedWindow: openConfig.forceNewTabbedWindow,\n\t\t\twindowToUse\n\t\t});\n\n\t\treturn browserWindow;\n\t}\n\n\tprivate getPathsToOpen(openConfig: IOpenConfiguration): IPathToOpen[] {\n\t\tlet windowsToOpen: IPathToOpen[];\n\t\tlet isCommandLineOrAPICall = false;\n\n\t\t// Extract paths: from API\n\t\tif (openConfig.urisToOpen && openConfig.urisToOpen.length > 0) {\n\t\t\twindowsToOpen = this.doExtractPathsFromAPI(openConfig);\n\t\t\tisCommandLineOrAPICall = true;\n\t\t}\n\n\t\t// Check for force empty\n\t\telse if (openConfig.forceEmpty) {\n\t\t\twindowsToOpen = [Object.create(null)];\n\t\t}\n\n\t\t// Extract paths: from CLI\n\t\telse if (hasArgs(openConfig.cli._) || hasArgs(openConfig.cli['folder-uri']) || hasArgs(openConfig.cli['file-uri'])) {\n\t\t\twindowsToOpen = this.doExtractPathsFromCLI(openConfig.cli);\n\t\t\tisCommandLineOrAPICall = true;\n\t\t}\n\n\t\t// Extract windows: from previous session\n\t\telse {\n\t\t\twindowsToOpen = this.doGetWindowsFromLastSession();\n\t\t}\n\n\t\t// Convert multiple folders into workspace (if opened via API or CLI)\n\t\t// This will ensure to open these folders in one window instead of multiple\n\t\t// If we are in addMode, we should not do this because in that case all\n\t\t// folders should be added to the existing window.\n\t\tif (!openConfig.addMode && isCommandLineOrAPICall) {\n\t\t\tconst foldersToOpen = windowsToOpen.filter(path => !!path.folderUri);\n\t\t\tif (foldersToOpen.length > 1) {\n\t\t\t\tconst remoteAuthority = foldersToOpen[0].remoteAuthority;\n\t\t\t\tif (foldersToOpen.every(f => f.remoteAuthority === remoteAuthority)) { // only if all folder have the same authority\n\t\t\t\t\tconst workspace = this.workspacesMainService.createUntitledWorkspaceSync(foldersToOpen.map(folder => ({ uri: folder.folderUri! })));\n\n\t\t\t\t\t// Add workspace and remove folders thereby\n\t\t\t\t\twindowsToOpen.push({ workspace, remoteAuthority });\n\t\t\t\t\twindowsToOpen = windowsToOpen.filter(path => !path.folderUri);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn windowsToOpen;\n\t}\n\n\tprivate doExtractPathsFromAPI(openConfig: IOpenConfiguration): IPathToOpen[] {\n\t\tconst pathsToOpen: IPathToOpen[] = [];\n\t\tconst cli = openConfig.cli;\n\t\tconst parseOptions: IPathParseOptions = { gotoLineMode: cli && cli.goto, forceOpenWorkspaceAsFile: openConfig.forceOpenWorkspaceAsFile };\n\t\tfor (const pathToOpen of openConfig.urisToOpen || []) {\n\t\t\tif (!pathToOpen) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst path = this.parseUri(pathToOpen.uri, pathToOpen.typeHint, parseOptions);\n\t\t\tif (path) {\n\t\t\t\tpath.label = pathToOpen.label;\n\t\t\t\tpathsToOpen.push(path);\n\t\t\t} else {\n\n\t\t\t\t// Warn about the invalid URI or path\n\t\t\t\tlet message, detail;\n\t\t\t\tif (pathToOpen.uri.scheme === Schemas.file) {\n\t\t\t\t\tmessage = localize('pathNotExistTitle', \"Path does not exist\");\n\t\t\t\t\tdetail = localize('pathNotExistDetail', \"The path '{0}' does not seem to exist anymore on disk.\", pathToOpen.uri.fsPath);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = localize('uriInvalidTitle', \"URI can not be opened\");\n\t\t\t\t\tdetail = localize('uriInvalidDetail', \"The URI '{0}' is not valid and can not be opened.\", pathToOpen.uri.toString());\n\t\t\t\t}\n\t\t\t\tconst options: Electron.MessageBoxOptions = {\n\t\t\t\t\ttitle: product.nameLong,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tbuttons: [localize('ok', \"OK\")],\n\t\t\t\t\tmessage,\n\t\t\t\t\tdetail,\n\t\t\t\t\tnoLink: true\n\t\t\t\t};\n\n\t\t\t\tthis.dialogs.showMessageBox(options, this.getFocusedWindow());\n\t\t\t}\n\t\t}\n\t\treturn pathsToOpen;\n\t}\n\n\tprivate doExtractPathsFromCLI(cli: ParsedArgs): IPath[] {\n\t\tconst pathsToOpen: IPathToOpen[] = [];\n\t\tconst parseOptions: IPathParseOptions = { ignoreFileNotFound: true, gotoLineMode: cli.goto, remoteAuthority: cli.remote || undefined };\n\n\t\t// folder uris\n\t\tconst folderUris = asArray(cli['folder-uri']);\n\t\tfor (let folderUri of folderUris) {\n\t\t\tconst path = this.parseUri(this.argToUri(folderUri), 'folder', parseOptions);\n\t\t\tif (path) {\n\t\t\t\tpathsToOpen.push(path);\n\t\t\t}\n\t\t}\n\n\t\t// file uris\n\t\tconst fileUris = asArray(cli['file-uri']);\n\t\tfor (let fileUri of fileUris) {\n\t\t\tconst path = this.parseUri(this.argToUri(fileUri), 'file');\n\t\t\tif (path) {\n\t\t\t\tpathsToOpen.push(path);\n\t\t\t}\n\t\t}\n\n\t\t// folder or file paths\n\t\tconst cliArgs = asArray(cli._);\n\t\tfor (let cliArg of cliArgs) {\n\t\t\tconst path = this.parsePath(cliArg, parseOptions);\n\t\t\tif (path) {\n\t\t\t\tpathsToOpen.push(path);\n\t\t\t}\n\t\t}\n\n\t\tif (pathsToOpen.length) {\n\t\t\treturn pathsToOpen;\n\t\t}\n\n\t\t// No path provided, return empty to open empty\n\t\treturn [Object.create(null)];\n\t}\n\n\tprivate doGetWindowsFromLastSession(): IPathToOpen[] {\n\t\tconst restoreWindows = this.getRestoreWindowsSetting();\n\n\t\tswitch (restoreWindows) {\n\n\t\t\t// none: we always open an empty window\n\t\t\tcase 'none':\n\t\t\t\treturn [Object.create(null)];\n\n\t\t\t// one: restore last opened workspace/folder or empty window\n\t\t\t// all: restore all windows\n\t\t\t// folders: restore last opened folders only\n\t\t\tcase 'one':\n\t\t\tcase 'all':\n\t\t\tcase 'folders':\n\t\t\t\tconst openedWindows: IWindowState[] = [];\n\t\t\t\tif (restoreWindows !== 'one') {\n\t\t\t\t\topenedWindows.push(...this.windowsState.openedWindows);\n\t\t\t\t}\n\t\t\t\tif (this.windowsState.lastActiveWindow) {\n\t\t\t\t\topenedWindows.push(this.windowsState.lastActiveWindow);\n\t\t\t\t}\n\n\t\t\t\tconst windowsToOpen: IPathToOpen[] = [];\n\t\t\t\tfor (const openedWindow of openedWindows) {\n\t\t\t\t\tif (openedWindow.workspace) { // Workspaces\n\t\t\t\t\t\tconst pathToOpen = this.parseUri(openedWindow.workspace.configPath, 'file', { remoteAuthority: openedWindow.remoteAuthority });\n\t\t\t\t\t\tif (pathToOpen && pathToOpen.workspace) {\n\t\t\t\t\t\t\twindowsToOpen.push(pathToOpen);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (openedWindow.folderUri) { // Folders\n\t\t\t\t\t\tconst pathToOpen = this.parseUri(openedWindow.folderUri, 'folder', { remoteAuthority: openedWindow.remoteAuthority });\n\t\t\t\t\t\tif (pathToOpen && pathToOpen.folderUri) {\n\t\t\t\t\t\t\twindowsToOpen.push(pathToOpen);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (restoreWindows !== 'folders' && openedWindow.backupPath) { // Windows that were Empty\n\t\t\t\t\t\twindowsToOpen.push({ backupPath: openedWindow.backupPath, remoteAuthority: openedWindow.remoteAuthority });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (windowsToOpen.length > 0) {\n\t\t\t\t\treturn windowsToOpen;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Always fallback to empty window\n\t\treturn [Object.create(null)];\n\t}\n\n\tprivate getRestoreWindowsSetting(): RestoreWindowsSetting {\n\t\tlet restoreWindows: RestoreWindowsSetting;\n\t\tif (this.lifecycleService.wasRestarted) {\n\t\t\trestoreWindows = 'all'; // always reopen all windows when an update was applied\n\t\t} else {\n\t\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\t\trestoreWindows = ((windowConfig && windowConfig.restoreWindows) || 'one') as RestoreWindowsSetting;\n\n\t\t\tif (['all', 'folders', 'one', 'none'].indexOf(restoreWindows) === -1) {\n\t\t\t\trestoreWindows = 'one';\n\t\t\t}\n\t\t}\n\n\t\treturn restoreWindows;\n\t}\n\n\tprivate argToUri(arg: string): URI | undefined {\n\t\ttry {\n\t\t\tconst uri = URI.parse(arg);\n\t\t\tif (!uri.scheme) {\n\t\t\t\tthis.logService.error(`Invalid URI input string, scheme missing: ${arg}`);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn uri;\n\t\t} catch (e) {\n\t\t\tthis.logService.error(`Invalid URI input string: ${arg}, ${e.message}`);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate parseUri(uri: URI | undefined, typeHint?: URIType, options: IPathParseOptions = {}): IPathToOpen | undefined {\n\t\tif (!uri || !uri.scheme) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (uri.scheme === Schemas.file) {\n\t\t\treturn this.parsePath(uri.fsPath, options);\n\t\t}\n\n\t\t// open remote if either specified in the cli or if it's a remotehost URI\n\t\tconst remoteAuthority = options.remoteAuthority || getRemoteAuthority(uri);\n\n\t\t// normalize URI\n\t\turi = normalizePath(uri);\n\n\n\t\t// remove trailing slash\n\t\tif (hasTrailingPathSeparator(uri)) {\n\t\t\turi = removeTrailingPathSeparator(uri);\n\t\t\tif (!typeHint) {\n\t\t\t\ttypeHint = 'folder';\n\t\t\t}\n\t\t}\n\n\t\t// if there's no type hint\n\t\tif (!typeHint && (hasWorkspaceFileExtension(uri.path) || options.gotoLineMode)) {\n\t\t\ttypeHint = 'file';\n\t\t}\n\n\t\tif (typeHint === 'file') {\n\t\t\tif (options.gotoLineMode) {\n\t\t\t\tconst parsedPath = parseLineAndColumnAware(uri.path);\n\t\t\t\treturn {\n\t\t\t\t\tfileUri: uri.with({ path: parsedPath.path }),\n\t\t\t\t\tlineNumber: parsedPath.line,\n\t\t\t\t\tcolumnNumber: parsedPath.column,\n\t\t\t\t\tremoteAuthority\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (hasWorkspaceFileExtension(uri.path) && !options.forceOpenWorkspaceAsFile) {\n\t\t\t\treturn {\n\t\t\t\t\tworkspace: getWorkspaceIdentifier(uri),\n\t\t\t\t\tremoteAuthority\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tfileUri: uri,\n\t\t\t\tremoteAuthority\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tfolderUri: uri,\n\t\t\tremoteAuthority\n\t\t};\n\t}\n\n\tprivate parsePath(anyPath: string, options: IPathParseOptions): IPathToOpen | undefined {\n\t\tif (!anyPath) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet lineNumber, columnNumber: number | undefined;\n\n\t\tif (options.gotoLineMode) {\n\t\t\tconst parsedPath = parseLineAndColumnAware(anyPath);\n\t\t\tlineNumber = parsedPath.line;\n\t\t\tcolumnNumber = parsedPath.column;\n\n\t\t\tanyPath = parsedPath.path;\n\t\t}\n\n\t\t// open remote if either specified in the cli even if it is a local file. TODO: Future idea: resolve in remote host context.\n\t\tconst remoteAuthority = options.remoteAuthority;\n\n\t\tconst candidate = normalize(anyPath);\n\t\ttry {\n\t\t\tconst candidateStat = fs.statSync(candidate);\n\t\t\tif (candidateStat) {\n\t\t\t\tif (candidateStat.isFile()) {\n\n\t\t\t\t\t// Workspace (unless disabled via flag)\n\t\t\t\t\tif (!options.forceOpenWorkspaceAsFile) {\n\t\t\t\t\t\tconst workspace = this.workspacesMainService.resolveLocalWorkspaceSync(URI.file(candidate));\n\t\t\t\t\t\tif (workspace) {\n\t\t\t\t\t\t\treturn { workspace: { id: workspace.id, configPath: workspace.configPath }, remoteAuthority: workspace.remoteAuthority };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// File\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfileUri: URI.file(candidate),\n\t\t\t\t\t\tlineNumber,\n\t\t\t\t\t\tcolumnNumber,\n\t\t\t\t\t\tremoteAuthority\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Folder (we check for isDirectory() because e.g. paths like /dev/null\n\t\t\t\t// are neither file nor folder but some external tools might pass them\n\t\t\t\t// over to us)\n\t\t\t\telse if (candidateStat.isDirectory()) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfolderUri: URI.file(candidate),\n\t\t\t\t\t\tremoteAuthority\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst fileUri = URI.file(candidate);\n\t\t\tthis.historyMainService.removeFromRecentlyOpened([fileUri]); // since file does not seem to exist anymore, remove from recent\n\t\t\tif (options && options.ignoreFileNotFound) {\n\t\t\t\treturn { fileUri, createFilePath: true, remoteAuthority }; // assume this is a file that does not yet exist\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate shouldOpenNewWindow(openConfig: IOpenConfiguration): { openFolderInNewWindow: boolean; openFilesInNewWindow: boolean; } {\n\n\t\t// let the user settings override how folders are open in a new window or same window unless we are forced\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\tconst openFolderInNewWindowConfig = (windowConfig && windowConfig.openFoldersInNewWindow) || 'default' /* default */;\n\t\tconst openFilesInNewWindowConfig = (windowConfig && windowConfig.openFilesInNewWindow) || 'off' /* default */;\n\n\t\tlet openFolderInNewWindow = (openConfig.preferNewWindow || openConfig.forceNewWindow) && !openConfig.forceReuseWindow;\n\t\tif (!openConfig.forceNewWindow && !openConfig.forceReuseWindow && (openFolderInNewWindowConfig === 'on' || openFolderInNewWindowConfig === 'off')) {\n\t\t\topenFolderInNewWindow = (openFolderInNewWindowConfig === 'on');\n\t\t}\n\n\t\t// let the user settings override how files are open in a new window or same window unless we are forced (not for extension development though)\n\t\tlet openFilesInNewWindow: boolean = false;\n\t\tif (openConfig.forceNewWindow || openConfig.forceReuseWindow) {\n\t\t\topenFilesInNewWindow = !!openConfig.forceNewWindow && !openConfig.forceReuseWindow;\n\t\t} else {\n\n\t\t\t// macOS: by default we open files in a new window if this is triggered via DOCK context\n\t\t\tif (isMacintosh) {\n\t\t\t\tif (openConfig.context === OpenContext.DOCK) {\n\t\t\t\t\topenFilesInNewWindow = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Linux/Windows: by default we open files in the new window unless triggered via DIALOG or MENU context\n\t\t\telse {\n\t\t\t\tif (openConfig.context !== OpenContext.DIALOG && openConfig.context !== OpenContext.MENU) {\n\t\t\t\t\topenFilesInNewWindow = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// finally check for overrides of default\n\t\t\tif (!openConfig.cli.extensionDevelopmentPath && (openFilesInNewWindowConfig === 'on' || openFilesInNewWindowConfig === 'off')) {\n\t\t\t\topenFilesInNewWindow = (openFilesInNewWindowConfig === 'on');\n\t\t\t}\n\t\t}\n\n\t\treturn { openFolderInNewWindow: !!openFolderInNewWindow, openFilesInNewWindow };\n\t}\n\n\topenExtensionDevelopmentHostWindow(extensionDevelopmentPath: string, openConfig: IOpenConfiguration): void {\n\n\t\t// Reload an existing extension development host window on the same path\n\t\t// We currently do not allow more than one extension development window\n\t\t// on the same extension path.\n\t\tconst existingWindow = findWindowOnExtensionDevelopmentPath(WindowsManager.WINDOWS, extensionDevelopmentPath);\n\t\tif (existingWindow) {\n\t\t\tthis.reload(existingWindow, openConfig.cli);\n\t\t\texistingWindow.focus(); // make sure it gets focus and is restored\n\n\t\t\treturn;\n\t\t}\n\t\tlet folderUris = asArray(openConfig.cli['folder-uri']);\n\t\tlet fileUris = asArray(openConfig.cli['file-uri']);\n\t\tlet cliArgs = openConfig.cli._;\n\n\t\t// Fill in previously opened workspace unless an explicit path is provided and we are not unit testing\n\t\tif (!cliArgs.length && !folderUris.length && !fileUris.length && !openConfig.cli.extensionTestsPath) {\n\t\t\tconst extensionDevelopmentWindowState = this.windowsState.lastPluginDevelopmentHostWindow;\n\t\t\tconst workspaceToOpen = extensionDevelopmentWindowState && (extensionDevelopmentWindowState.workspace || extensionDevelopmentWindowState.folderUri);\n\t\t\tif (workspaceToOpen) {\n\t\t\t\tif (isSingleFolderWorkspaceIdentifier(workspaceToOpen)) {\n\t\t\t\t\tif (workspaceToOpen.scheme === Schemas.file) {\n\t\t\t\t\t\tcliArgs = [workspaceToOpen.fsPath];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfolderUris = [workspaceToOpen.toString()];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (workspaceToOpen.configPath.scheme === Schemas.file) {\n\t\t\t\t\t\tcliArgs = [originalFSPath(workspaceToOpen.configPath)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfileUris = [workspaceToOpen.configPath.toString()];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Make sure we are not asked to open a workspace or folder that is already opened\n\t\tif (cliArgs.length && cliArgs.some(path => !!findWindowOnWorkspaceOrFolderUri(WindowsManager.WINDOWS, URI.file(path)))) {\n\t\t\tcliArgs = [];\n\t\t}\n\n\t\tif (folderUris.length && folderUris.some(uri => !!findWindowOnWorkspaceOrFolderUri(WindowsManager.WINDOWS, this.argToUri(uri)))) {\n\t\t\tfolderUris = [];\n\t\t}\n\n\t\tif (fileUris.length && fileUris.some(uri => !!findWindowOnWorkspaceOrFolderUri(WindowsManager.WINDOWS, this.argToUri(uri)))) {\n\t\t\tfileUris = [];\n\t\t}\n\n\t\topenConfig.cli._ = cliArgs;\n\t\topenConfig.cli['folder-uri'] = folderUris;\n\t\topenConfig.cli['file-uri'] = fileUris;\n\n\t\tconst match = extensionDevelopmentPath.match(/^vscode-remote:\\/\\/([^\\/]+)/);\n\t\tif (match) {\n\t\t\topenConfig.cli['remote'] = URI.parse(extensionDevelopmentPath).authority;\n\t\t}\n\n\t\t// Open it\n\t\tthis.open({ context: openConfig.context, cli: openConfig.cli, forceNewWindow: true, forceEmpty: !cliArgs.length && !folderUris.length && !fileUris.length, userEnv: openConfig.userEnv });\n\t}\n\n\tprivate openInBrowserWindow(options: IOpenBrowserWindowOptions): ICodeWindow {\n\n\t\t// Build IWindowConfiguration from config and options\n\t\tconst configuration: IWindowConfiguration = mixin({}, options.cli); // inherit all properties from CLI\n\t\tconfiguration.appRoot = this.environmentService.appRoot;\n\t\tconfiguration.machineId = this.machineId;\n\t\tconfiguration.nodeCachedDataDir = this.environmentService.nodeCachedDataDir;\n\t\tconfiguration.mainPid = process.pid;\n\t\tconfiguration.execPath = process.execPath;\n\t\tconfiguration.userEnv = assign({}, this.initialUserEnv, options.userEnv || {});\n\t\tconfiguration.isInitialStartup = options.initialStartup;\n\t\tconfiguration.workspace = options.workspace;\n\t\tconfiguration.folderUri = options.folderUri;\n\t\tconfiguration.remoteAuthority = options.remoteAuthority;\n\n\t\tconst fileInputs = options.fileInputs;\n\t\tif (fileInputs) {\n\t\t\tconfiguration.filesToOpen = fileInputs.filesToOpen;\n\t\t\tconfiguration.filesToCreate = fileInputs.filesToCreate;\n\t\t\tconfiguration.filesToDiff = fileInputs.filesToDiff;\n\t\t\tconfiguration.filesToWait = fileInputs.filesToWait;\n\t\t}\n\n\t\t// if we know the backup folder upfront (for empty windows to restore), we can set it\n\t\t// directly here which helps for restoring UI state associated with that window.\n\t\t// For all other cases we first call into registerEmptyWindowBackupSync() to set it before\n\t\t// loading the window.\n\t\tif (options.emptyWindowBackupInfo) {\n\t\t\tconfiguration.backupPath = join(this.environmentService.backupHome, options.emptyWindowBackupInfo.backupFolder!);\n\t\t}\n\n\t\tlet window: ICodeWindow | undefined;\n\t\tif (!options.forceNewWindow && !options.forceNewTabbedWindow) {\n\t\t\twindow = options.windowToUse || this.getLastActiveWindow();\n\t\t\tif (window) {\n\t\t\t\twindow.focus();\n\t\t\t}\n\t\t}\n\n\t\t// New window\n\t\tif (!window) {\n\t\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\t\tconst state = this.getNewWindowState(configuration);\n\n\t\t\t// Window state is not from a previous session: only allow fullscreen if we inherit it or user wants fullscreen\n\t\t\tlet allowFullscreen: boolean;\n\t\t\tif (state.hasDefaultState) {\n\t\t\t\tallowFullscreen = (windowConfig && windowConfig.newWindowDimensions && ['fullscreen', 'inherit'].indexOf(windowConfig.newWindowDimensions) >= 0);\n\t\t\t}\n\n\t\t\t// Window state is from a previous session: only allow fullscreen when we got updated or user wants to restore\n\t\t\telse {\n\t\t\t\tallowFullscreen = this.lifecycleService.wasRestarted || (windowConfig && windowConfig.restoreFullscreen);\n\t\t\t}\n\n\t\t\tif (state.mode === WindowMode.Fullscreen && !allowFullscreen) {\n\t\t\t\tstate.mode = WindowMode.Normal;\n\t\t\t}\n\n\t\t\t// Create the window\n\t\t\twindow = this.instantiationService.createInstance(CodeWindow, {\n\t\t\t\tstate,\n\t\t\t\textensionDevelopmentPath: configuration.extensionDevelopmentPath,\n\t\t\t\tisExtensionTestHost: !!configuration.extensionTestsPath\n\t\t\t});\n\n\t\t\t// Add as window tab if configured (macOS only)\n\t\t\tif (options.forceNewTabbedWindow) {\n\t\t\t\tconst activeWindow = this.getLastActiveWindow();\n\t\t\t\tif (activeWindow) {\n\t\t\t\t\tactiveWindow.addTabbedWindow(window);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to our list of windows\n\t\t\tWindowsManager.WINDOWS.push(window);\n\n\t\t\t// Indicate number change via event\n\t\t\tthis._onWindowsCountChanged.fire({ oldCount: WindowsManager.WINDOWS.length - 1, newCount: WindowsManager.WINDOWS.length });\n\n\t\t\t// Window Events\n\t\t\twindow.win.webContents.removeAllListeners('devtools-reload-page'); // remove built in listener so we can handle this on our own\n\t\t\twindow.win.webContents.on('devtools-reload-page', () => this.reload(window!));\n\t\t\twindow.win.webContents.on('crashed', () => this.onWindowError(window!, WindowError.CRASHED));\n\t\t\twindow.win.on('unresponsive', () => this.onWindowError(window!, WindowError.UNRESPONSIVE));\n\t\t\twindow.win.on('closed', () => this.onWindowClosed(window!));\n\n\t\t\t// Lifecycle\n\t\t\t(this.lifecycleService as LifecycleService).registerWindow(window);\n\t\t}\n\n\t\t// Existing window\n\t\telse {\n\n\t\t\t// Some configuration things get inherited if the window is being reused and we are\n\t\t\t// in extension development host mode. These options are all development related.\n\t\t\tconst currentWindowConfig = window.config;\n\t\t\tif (!configuration.extensionDevelopmentPath && currentWindowConfig && !!currentWindowConfig.extensionDevelopmentPath) {\n\t\t\t\tconfiguration.extensionDevelopmentPath = currentWindowConfig.extensionDevelopmentPath;\n\t\t\t\tconfiguration.verbose = currentWindowConfig.verbose;\n\t\t\t\tconfiguration['inspect-brk-extensions'] = currentWindowConfig['inspect-brk-extensions'];\n\t\t\t\tconfiguration.debugId = currentWindowConfig.debugId;\n\t\t\t\tconfiguration['inspect-extensions'] = currentWindowConfig['inspect-extensions'];\n\t\t\t\tconfiguration['extensions-dir'] = currentWindowConfig['extensions-dir'];\n\t\t\t}\n\t\t}\n\n\t\t// If the window was already loaded, make sure to unload it\n\t\t// first and only load the new configuration if that was\n\t\t// not vetoed\n\t\tif (window.isReady) {\n\t\t\tthis.lifecycleService.unload(window, UnloadReason.LOAD).then(veto => {\n\t\t\t\tif (!veto) {\n\t\t\t\t\tthis.doOpenInBrowserWindow(window!, configuration, options);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.doOpenInBrowserWindow(window, configuration, options);\n\t\t}\n\n\t\treturn window;\n\t}\n\n\tprivate doOpenInBrowserWindow(window: ICodeWindow, configuration: IWindowConfiguration, options: IOpenBrowserWindowOptions): void {\n\n\t\t// Register window for backups\n\t\tif (!configuration.extensionDevelopmentPath) {\n\t\t\tif (configuration.workspace) {\n\t\t\t\tconfiguration.backupPath = this.backupMainService.registerWorkspaceBackupSync({ workspace: configuration.workspace, remoteAuthority: configuration.remoteAuthority });\n\t\t\t} else if (configuration.folderUri) {\n\t\t\t\tconfiguration.backupPath = this.backupMainService.registerFolderBackupSync(configuration.folderUri);\n\t\t\t} else {\n\t\t\t\tconst backupFolder = options.emptyWindowBackupInfo && options.emptyWindowBackupInfo.backupFolder;\n\t\t\t\tconfiguration.backupPath = this.backupMainService.registerEmptyWindowBackupSync({ backupFolder, remoteAuthority: configuration.remoteAuthority });\n\t\t\t}\n\t\t}\n\n\t\t// Load it\n\t\twindow.load(configuration);\n\n\t\t// Signal event\n\t\tthis._onWindowLoad.fire(window.id);\n\t}\n\n\tprivate getNewWindowState(configuration: IWindowConfiguration): INewWindowState {\n\t\tconst lastActive = this.getLastActiveWindow();\n\n\t\t// Restore state unless we are running extension tests\n\t\tif (!configuration.extensionTestsPath) {\n\n\t\t\t// extension development host Window - load from stored settings if any\n\t\t\tif (!!configuration.extensionDevelopmentPath && this.windowsState.lastPluginDevelopmentHostWindow) {\n\t\t\t\treturn this.windowsState.lastPluginDevelopmentHostWindow.uiState;\n\t\t\t}\n\n\t\t\t// Known Workspace - load from stored settings\n\t\t\tconst workspace = configuration.workspace;\n\t\t\tif (workspace) {\n\t\t\t\tconst stateForWorkspace = this.windowsState.openedWindows.filter(o => o.workspace && o.workspace.id === workspace.id).map(o => o.uiState);\n\t\t\t\tif (stateForWorkspace.length) {\n\t\t\t\t\treturn stateForWorkspace[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Known Folder - load from stored settings\n\t\t\tif (configuration.folderUri) {\n\t\t\t\tconst stateForFolder = this.windowsState.openedWindows.filter(o => o.folderUri && isEqual(o.folderUri, configuration.folderUri)).map(o => o.uiState);\n\t\t\t\tif (stateForFolder.length) {\n\t\t\t\t\treturn stateForFolder[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Empty windows with backups\n\t\t\telse if (configuration.backupPath) {\n\t\t\t\tconst stateForEmptyWindow = this.windowsState.openedWindows.filter(o => o.backupPath === configuration.backupPath).map(o => o.uiState);\n\t\t\t\tif (stateForEmptyWindow.length) {\n\t\t\t\t\treturn stateForEmptyWindow[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// First Window\n\t\t\tconst lastActiveState = this.lastClosedWindowState || this.windowsState.lastActiveWindow;\n\t\t\tif (!lastActive && lastActiveState) {\n\t\t\t\treturn lastActiveState.uiState;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// In any other case, we do not have any stored settings for the window state, so we come up with something smart\n\t\t//\n\n\t\t// We want the new window to open on the same display that the last active one is in\n\t\tlet displayToUse: Electron.Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && lastActive) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(lastActive.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\t// Compute x/y based on display bounds\n\t\t// Note: important to use Math.round() because Electron does not seem to be too happy about\n\t\t// display coordinates that are not absolute numbers.\n\t\tlet state = defaultWindowState() as INewWindowState;\n\t\tstate.x = Math.round(displayToUse.bounds.x + (displayToUse.bounds.width / 2) - (state.width! / 2));\n\t\tstate.y = Math.round(displayToUse.bounds.y + (displayToUse.bounds.height / 2) - (state.height! / 2));\n\n\t\t// Check for newWindowDimensions setting and adjust accordingly\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings>('window');\n\t\tlet ensureNoOverlap = true;\n\t\tif (windowConfig && windowConfig.newWindowDimensions) {\n\t\t\tif (windowConfig.newWindowDimensions === 'maximized') {\n\t\t\t\tstate.mode = WindowMode.Maximized;\n\t\t\t\tensureNoOverlap = false;\n\t\t\t} else if (windowConfig.newWindowDimensions === 'fullscreen') {\n\t\t\t\tstate.mode = WindowMode.Fullscreen;\n\t\t\t\tensureNoOverlap = false;\n\t\t\t} else if (windowConfig.newWindowDimensions === 'inherit' && lastActive) {\n\t\t\t\tconst lastActiveState = lastActive.serializeWindowState();\n\t\t\t\tif (lastActiveState.mode === WindowMode.Fullscreen) {\n\t\t\t\t\tstate.mode = WindowMode.Fullscreen; // only take mode (fixes https://github.com/Microsoft/vscode/issues/19331)\n\t\t\t\t} else {\n\t\t\t\t\tstate = lastActiveState;\n\t\t\t\t}\n\n\t\t\t\tensureNoOverlap = false;\n\t\t\t}\n\t\t}\n\n\t\tif (ensureNoOverlap) {\n\t\t\tstate = this.ensureNoOverlap(state);\n\t\t}\n\n\t\tstate.hasDefaultState = true; // flag as default state\n\n\t\treturn state;\n\t}\n\n\tprivate ensureNoOverlap(state: ISingleWindowState): ISingleWindowState {\n\t\tif (WindowsManager.WINDOWS.length === 0) {\n\t\t\treturn state;\n\t\t}\n\n\t\tstate.x = typeof state.x === 'number' ? state.x : 0;\n\t\tstate.y = typeof state.y === 'number' ? state.y : 0;\n\n\t\tconst existingWindowBounds = WindowsManager.WINDOWS.map(win => win.getBounds());\n\t\twhile (existingWindowBounds.some(b => b.x === state.x || b.y === state.y)) {\n\t\t\tstate.x += 30;\n\t\t\tstate.y += 30;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\treload(win: ICodeWindow, cli?: ParsedArgs): void {\n\n\t\t// Only reload when the window has not vetoed this\n\t\tthis.lifecycleService.unload(win, UnloadReason.RELOAD).then(veto => {\n\t\t\tif (!veto) {\n\t\t\t\twin.reload(undefined, cli);\n\t\t\t}\n\t\t});\n\t}\n\n\tcloseWorkspace(win: ICodeWindow): void {\n\t\tthis.openInBrowserWindow({\n\t\t\tcli: this.environmentService.args,\n\t\t\twindowToUse: win,\n\t\t\tremoteAuthority: win.remoteAuthority\n\t\t});\n\t}\n\n\tenterWorkspace(win: ICodeWindow, path: URI): Promise<IEnterWorkspaceResult | undefined> {\n\t\treturn this.workspacesManager.enterWorkspace(win, path).then(result => result ? this.doEnterWorkspace(win, result) : undefined);\n\t}\n\n\tprivate doEnterWorkspace(win: ICodeWindow, result: IEnterWorkspaceResult): IEnterWorkspaceResult {\n\n\t\t// Mark as recently opened\n\t\tthis.historyMainService.addRecentlyOpened([{ workspace: result.workspace }]);\n\n\t\t// Trigger Eevent to indicate load of workspace into window\n\t\tthis._onWindowReady.fire(win);\n\n\t\treturn result;\n\t}\n\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): void {\n\t\tthis.workspacesManager.pickWorkspaceAndOpen(options);\n\t}\n\n\tfocusLastActive(cli: ParsedArgs, context: OpenContext): ICodeWindow {\n\t\tconst lastActive = this.getLastActiveWindow();\n\t\tif (lastActive) {\n\t\t\tlastActive.focus();\n\n\t\t\treturn lastActive;\n\t\t}\n\n\t\t// No window - open new empty one\n\t\treturn this.open({ context, cli, forceEmpty: true })[0];\n\t}\n\n\tgetLastActiveWindow(): ICodeWindow | undefined {\n\t\treturn getLastActiveWindow(WindowsManager.WINDOWS);\n\t}\n\n\tgetLastActiveWindowForAuthority(remoteAuthority: string | undefined): ICodeWindow | undefined {\n\t\treturn getLastActiveWindow(WindowsManager.WINDOWS.filter(w => w.remoteAuthority === remoteAuthority));\n\t}\n\n\topenNewWindow(context: OpenContext, options?: INewWindowOptions): ICodeWindow[] {\n\t\tlet cli = this.environmentService.args;\n\t\tconst remote = options && options.remoteAuthority || undefined;\n\t\tif (cli && (cli.remote !== remote)) {\n\t\t\tcli = { ...cli, remote };\n\t\t}\n\t\treturn this.open({ context, cli, forceNewWindow: true, forceEmpty: true });\n\t}\n\n\topenNewTabbedWindow(context: OpenContext): ICodeWindow[] {\n\t\treturn this.open({ context, cli: this.environmentService.args, forceNewTabbedWindow: true, forceEmpty: true });\n\t}\n\n\twaitForWindowCloseOrLoad(windowId: number): Promise<void> {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tfunction handler(id: number) {\n\t\t\t\tif (id === windowId) {\n\t\t\t\t\tcloseListener.dispose();\n\t\t\t\t\tloadListener.dispose();\n\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst closeListener = this.onWindowClose(id => handler(id));\n\t\t\tconst loadListener = this.onWindowLoad(id => handler(id));\n\t\t});\n\t}\n\n\tsendToFocused(channel: string, ...args: any[]): void {\n\t\tconst focusedWindow = this.getFocusedWindow() || this.getLastActiveWindow();\n\n\t\tif (focusedWindow) {\n\t\t\tfocusedWindow.sendWhenReady(channel, ...args);\n\t\t}\n\t}\n\n\tsendToAll(channel: string, payload?: any, windowIdsToIgnore?: number[]): void {\n\t\tWindowsManager.WINDOWS.forEach(w => {\n\t\t\tif (windowIdsToIgnore && windowIdsToIgnore.indexOf(w.id) >= 0) {\n\t\t\t\treturn; // do not send if we are instructed to ignore it\n\t\t\t}\n\n\t\t\tw.sendWhenReady(channel, payload);\n\t\t});\n\t}\n\n\tgetFocusedWindow(): ICodeWindow | undefined {\n\t\tconst win = BrowserWindow.getFocusedWindow();\n\t\tif (win) {\n\t\t\treturn this.getWindowById(win.id);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetWindowById(windowId: number): ICodeWindow | undefined {\n\t\tconst res = WindowsManager.WINDOWS.filter(w => w.id === windowId);\n\t\tif (res && res.length === 1) {\n\t\t\treturn res[0];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetWindows(): ICodeWindow[] {\n\t\treturn WindowsManager.WINDOWS;\n\t}\n\n\tgetWindowCount(): number {\n\t\treturn WindowsManager.WINDOWS.length;\n\t}\n\n\tprivate onWindowError(window: ICodeWindow, error: WindowError): void {\n\t\tthis.logService.error(error === WindowError.CRASHED ? '[VS Code]: render process crashed!' : '[VS Code]: detected unresponsive');\n\n\t\t/* __GDPR__\n\t\t\t\"windowerror\" : {\n\t\t\t\t\"type\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('windowerror', { type: error });\n\n\t\t// Unresponsive\n\t\tif (error === WindowError.UNRESPONSIVE) {\n\t\t\tif (window.isExtensionDevelopmentHost || window.isExtensionTestHost || (window.win && window.win.webContents && window.win.webContents.isDevToolsOpened())) {\n\t\t\t\t// TODO@Ben Workaround for https://github.com/Microsoft/vscode/issues/56994\n\t\t\t\t// In certain cases the window can report unresponsiveness because a breakpoint was hit\n\t\t\t\t// and the process is stopped executing. The most typical cases are:\n\t\t\t\t// - devtools are opened and debugging happens\n\t\t\t\t// - window is an extensions development host that is being debugged\n\t\t\t\t// - window is an extension test development host that is being debugged\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Show Dialog\n\t\t\tthis.dialogs.showMessageBox({\n\t\t\t\ttitle: product.nameLong,\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\")), mnemonicButtonLabel(localize({ key: 'wait', comment: ['&& denotes a mnemonic'] }, \"&&Keep Waiting\")), mnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))],\n\t\t\t\tmessage: localize('appStalled', \"The window is no longer responding\"),\n\t\t\t\tdetail: localize('appStalledDetail', \"You can reopen or close the window or keep waiting.\"),\n\t\t\t\tnoLink: true\n\t\t\t}, window).then(result => {\n\t\t\t\tif (!window.win) {\n\t\t\t\t\treturn; // Return early if the window has been going down already\n\t\t\t\t}\n\n\t\t\t\tif (result.button === 0) {\n\t\t\t\t\twindow.reload();\n\t\t\t\t} else if (result.button === 2) {\n\t\t\t\t\tthis.onBeforeWindowClose(window); // 'close' event will not be fired on destroy(), so run it manually\n\t\t\t\t\twindow.win.destroy(); // make sure to destroy the window as it is unresponsive\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Crashed\n\t\telse {\n\t\t\tthis.dialogs.showMessageBox({\n\t\t\t\ttitle: product.nameLong,\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\")), mnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))],\n\t\t\t\tmessage: localize('appCrashed', \"The window has crashed\"),\n\t\t\t\tdetail: localize('appCrashedDetail', \"We are sorry for the inconvenience! You can reopen the window to continue where you left off.\"),\n\t\t\t\tnoLink: true\n\t\t\t}, window).then(result => {\n\t\t\t\tif (!window.win) {\n\t\t\t\t\treturn; // Return early if the window has been going down already\n\t\t\t\t}\n\n\t\t\t\tif (result.button === 0) {\n\t\t\t\t\twindow.reload();\n\t\t\t\t} else if (result.button === 1) {\n\t\t\t\t\tthis.onBeforeWindowClose(window); // 'close' event will not be fired on destroy(), so run it manually\n\t\t\t\t\twindow.win.destroy(); // make sure to destroy the window as it has crashed\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onWindowClosed(win: ICodeWindow): void {\n\n\t\t// Tell window\n\t\twin.dispose();\n\n\t\t// Remove from our list so that Electron can clean it up\n\t\tconst index = WindowsManager.WINDOWS.indexOf(win);\n\t\tWindowsManager.WINDOWS.splice(index, 1);\n\n\t\t// Emit\n\t\tthis._onWindowsCountChanged.fire({ oldCount: WindowsManager.WINDOWS.length + 1, newCount: WindowsManager.WINDOWS.length });\n\t\tthis._onWindowClose.fire(win.id);\n\t}\n\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): void {\n\t\tthis.doPickAndOpen(options, true /* pick folders */, true /* pick files */);\n\t}\n\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): void {\n\t\tthis.doPickAndOpen(options, true /* pick folders */, false /* pick files */);\n\t}\n\n\tpickFileAndOpen(options: INativeOpenDialogOptions): void {\n\t\tthis.doPickAndOpen(options, false /* pick folders */, true /* pick files */);\n\t}\n\n\tprivate doPickAndOpen(options: INativeOpenDialogOptions, pickFolders: boolean, pickFiles: boolean): void {\n\t\tconst internalOptions = options as IInternalNativeOpenDialogOptions;\n\n\t\tinternalOptions.pickFolders = pickFolders;\n\t\tinternalOptions.pickFiles = pickFiles;\n\n\t\tconst dialogOptions: OpenDialogOptions = internalOptions.dialogOptions || Object.create(null);\n\t\tinternalOptions.dialogOptions = dialogOptions;\n\n\t\tif (!internalOptions.dialogOptions.title) {\n\t\t\tif (pickFolders && pickFiles) {\n\t\t\t\tinternalOptions.dialogOptions.title = localize('open', \"Open\");\n\t\t\t} else if (pickFolders) {\n\t\t\t\tinternalOptions.dialogOptions.title = localize('openFolder', \"Open Folder\");\n\t\t\t} else {\n\t\t\t\tinternalOptions.dialogOptions.title = localize('openFile', \"Open File\");\n\t\t\t}\n\t\t}\n\n\t\tif (!internalOptions.telemetryEventName) {\n\t\t\tif (pickFolders && pickFiles) {\n\t\t\t\t// __GDPR__TODO__ classify event\n\t\t\t\tinternalOptions.telemetryEventName = 'openFileFolder';\n\t\t\t} else if (pickFolders) {\n\t\t\t\tinternalOptions.telemetryEventName = 'openFolder';\n\t\t\t} else {\n\t\t\t\tinternalOptions.telemetryEventName = 'openFile';\n\t\t\t}\n\t\t}\n\n\t\tthis.dialogs.pickAndOpen(internalOptions);\n\t}\n\n\tshowMessageBox(options: Electron.MessageBoxOptions, win?: ICodeWindow): Promise<IMessageBoxResult> {\n\t\treturn this.dialogs.showMessageBox(options, win);\n\t}\n\n\tshowSaveDialog(options: Electron.SaveDialogOptions, win?: ICodeWindow): Promise<string> {\n\t\treturn this.dialogs.showSaveDialog(options, win);\n\t}\n\n\tshowOpenDialog(options: Electron.OpenDialogOptions, win?: ICodeWindow): Promise<string[]> {\n\t\treturn this.dialogs.showOpenDialog(options, win);\n\t}\n\n\tquit(): void {\n\n\t\t// If the user selected to exit from an extension development host window, do not quit, but just\n\t\t// close the window unless this is the last window that is opened.\n\t\tconst window = this.getFocusedWindow();\n\t\tif (window && window.isExtensionDevelopmentHost && this.getWindowCount() > 1) {\n\t\t\twindow.win.close();\n\t\t}\n\n\t\t// Otherwise: normal quit\n\t\telse {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.lifecycleService.quit();\n\t\t\t}, 10 /* delay to unwind callback stack (IPC) */);\n\t\t}\n\t}\n}\n\ninterface IInternalNativeOpenDialogOptions extends INativeOpenDialogOptions {\n\tpickFolders?: boolean;\n\tpickFiles?: boolean;\n}\n\nclass Dialogs {\n\n\tprivate static readonly workingDirPickerStorageKey = 'pickerWorkingDir';\n\n\tprivate readonly mapWindowToDialogQueue: Map<number, Queue<any>>;\n\tprivate readonly noWindowDialogQueue: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\tprivate readonly telemetryService: ITelemetryService,\n\t\tprivate readonly stateService: IStateService,\n\t\tprivate readonly windowsMainService: IWindowsMainService,\n\t) {\n\t\tthis.mapWindowToDialogQueue = new Map<number, Queue<any>>();\n\t\tthis.noWindowDialogQueue = new Queue<any>();\n\t}\n\n\tpickAndOpen(options: INativeOpenDialogOptions): void {\n\t\tthis.getFileOrFolderUris(options).then(paths => {\n\t\t\tconst numberOfPaths = paths ? paths.length : 0;\n\n\t\t\t// Telemetry\n\t\t\tif (options.telemetryEventName) {\n\t\t\t\t// __GDPR__TODO__ Dynamic event names and dynamic properties. Can not be registered statically.\n\t\t\t\tthis.telemetryService.publicLog(options.telemetryEventName, {\n\t\t\t\t\t...options.telemetryExtraData,\n\t\t\t\t\toutcome: numberOfPaths ? 'success' : 'canceled',\n\t\t\t\t\tnumberOfPaths\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Open\n\t\t\tif (numberOfPaths) {\n\t\t\t\tthis.windowsMainService.open({\n\t\t\t\t\tcontext: OpenContext.DIALOG,\n\t\t\t\t\tcontextWindowId: options.windowId,\n\t\t\t\t\tcli: this.environmentService.args,\n\t\t\t\t\turisToOpen: paths,\n\t\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\t\tforceOpenWorkspaceAsFile: options.dialogOptions && !equals(options.dialogOptions.filters, WORKSPACE_FILTER)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getFileOrFolderUris(options: IInternalNativeOpenDialogOptions): Promise<IURIToOpen[] | undefined> {\n\n\t\t// Ensure dialog options\n\t\tconst dialogOptions = options.dialogOptions || Object.create(null);\n\t\toptions.dialogOptions = dialogOptions;\n\n\t\t// Ensure defaultPath\n\t\tif (!dialogOptions.defaultPath) {\n\t\t\tdialogOptions.defaultPath = this.stateService.getItem<string>(Dialogs.workingDirPickerStorageKey);\n\t\t}\n\n\t\t// Ensure properties\n\t\tif (typeof options.pickFiles === 'boolean' || typeof options.pickFolders === 'boolean') {\n\t\t\tdialogOptions.properties = undefined; // let it override based on the booleans\n\n\t\t\tif (options.pickFiles && options.pickFolders) {\n\t\t\t\tdialogOptions.properties = ['multiSelections', 'openDirectory', 'openFile', 'createDirectory'];\n\t\t\t}\n\t\t}\n\n\t\tif (!dialogOptions.properties) {\n\t\t\tdialogOptions.properties = ['multiSelections', options.pickFolders ? 'openDirectory' : 'openFile', 'createDirectory'];\n\t\t}\n\n\t\tif (isMacintosh) {\n\t\t\tdialogOptions.properties.push('treatPackageAsDirectory'); // always drill into .app files\n\t\t}\n\n\t\t// Show Dialog\n\t\tconst focusedWindow = (typeof options.windowId === 'number' ? this.windowsMainService.getWindowById(options.windowId) : undefined) || this.windowsMainService.getFocusedWindow();\n\n\t\treturn this.showOpenDialog(dialogOptions, focusedWindow).then(paths => {\n\t\t\tif (paths && paths.length > 0) {\n\n\t\t\t\t// Remember path in storage for next time\n\t\t\t\tthis.stateService.setItem(Dialogs.workingDirPickerStorageKey, dirname(paths[0]));\n\n\t\t\t\tconst result: IURIToOpen[] = [];\n\t\t\t\tfor (const path of paths) {\n\t\t\t\t\tresult.push({ uri: URI.file(path) });\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate getDialogQueue(window?: ICodeWindow): Queue<any> {\n\t\tif (!window) {\n\t\t\treturn this.noWindowDialogQueue;\n\t\t}\n\n\t\tlet windowDialogQueue = this.mapWindowToDialogQueue.get(window.id);\n\t\tif (!windowDialogQueue) {\n\t\t\twindowDialogQueue = new Queue<any>();\n\t\t\tthis.mapWindowToDialogQueue.set(window.id, windowDialogQueue);\n\t\t}\n\n\t\treturn windowDialogQueue;\n\t}\n\n\tshowMessageBox(options: Electron.MessageBoxOptions, window?: ICodeWindow): Promise<IMessageBoxResult> {\n\t\treturn this.getDialogQueue(window).queue(() => {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tdialog.showMessageBox(window ? window.win : undefined!, options, (response: number, checkboxChecked: boolean) => {\n\t\t\t\t\tresolve({ button: response, checkboxChecked });\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tshowSaveDialog(options: Electron.SaveDialogOptions, window?: ICodeWindow): Promise<string> {\n\n\t\tfunction normalizePath(path: string): string {\n\t\t\tif (path && isMacintosh) {\n\t\t\t\tpath = normalizeNFC(path); // normalize paths returned from the OS\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\treturn this.getDialogQueue(window).queue(() => {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tdialog.showSaveDialog(window ? window.win : undefined!, options, path => {\n\t\t\t\t\tresolve(normalizePath(path));\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tshowOpenDialog(options: Electron.OpenDialogOptions, window?: ICodeWindow): Promise<string[]> {\n\n\t\tfunction normalizePaths(paths: string[]): string[] {\n\t\t\tif (paths && paths.length > 0 && isMacintosh) {\n\t\t\t\tpaths = paths.map(path => normalizeNFC(path)); // normalize paths returned from the OS\n\t\t\t}\n\n\t\t\treturn paths;\n\t\t}\n\n\t\treturn this.getDialogQueue(window).queue(() => {\n\t\t\treturn new Promise(resolve => {\n\n\t\t\t\t// Ensure the path exists (if provided)\n\t\t\t\tlet validatePathPromise: Promise<void> = Promise.resolve();\n\t\t\t\tif (options.defaultPath) {\n\t\t\t\t\tvalidatePathPromise = exists(options.defaultPath).then(exists => {\n\t\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\t\toptions.defaultPath = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Show dialog and wrap as promise\n\t\t\t\tvalidatePathPromise.then(() => {\n\t\t\t\t\tdialog.showOpenDialog(window ? window.win : undefined!, options, paths => {\n\t\t\t\t\t\tresolve(normalizePaths(paths));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n\nclass WorkspacesManager {\n\n\tconstructor(\n\t\tprivate readonly workspacesMainService: IWorkspacesMainService,\n\t\tprivate readonly backupMainService: IBackupMainService,\n\t\tprivate readonly windowsMainService: IWindowsMainService,\n\t) { }\n\n\tenterWorkspace(window: ICodeWindow, path: URI): Promise<IEnterWorkspaceResult | null> {\n\t\tif (!window || !window.win || !window.isReady) {\n\t\t\treturn Promise.resolve(null); // return early if the window is not ready or disposed\n\t\t}\n\n\t\treturn this.isValidTargetWorkspacePath(window, path).then(isValid => {\n\t\t\tif (!isValid) {\n\t\t\t\treturn null; // return early if the workspace is not valid\n\t\t\t}\n\t\t\tconst workspaceIdentifier = getWorkspaceIdentifier(path);\n\t\t\treturn this.doOpenWorkspace(window, workspaceIdentifier);\n\t\t});\n\n\t}\n\n\tprivate isValidTargetWorkspacePath(window: ICodeWindow, path?: URI): Promise<boolean> {\n\t\tif (!path) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (window.openedWorkspace && isEqual(window.openedWorkspace.configPath, path)) {\n\t\t\treturn Promise.resolve(false); // window is already opened on a workspace with that path\n\t\t}\n\n\t\t// Prevent overwriting a workspace that is currently opened in another window\n\t\tif (findWindowOnWorkspace(this.windowsMainService.getWindows(), getWorkspaceIdentifier(path))) {\n\t\t\tconst options: Electron.MessageBoxOptions = {\n\t\t\t\ttitle: product.nameLong,\n\t\t\t\ttype: 'info',\n\t\t\t\tbuttons: [localize('ok', \"OK\")],\n\t\t\t\tmessage: localize('workspaceOpenedMessage', \"Unable to save workspace '{0}'\", resourcesBasename(path)),\n\t\t\t\tdetail: localize('workspaceOpenedDetail', \"The workspace is already opened in another window. Please close that window first and then try again.\"),\n\t\t\t\tnoLink: true\n\t\t\t};\n\n\t\t\treturn this.windowsMainService.showMessageBox(options, this.windowsMainService.getFocusedWindow()).then(() => false);\n\t\t}\n\n\t\treturn Promise.resolve(true); // OK\n\t}\n\n\tprivate doOpenWorkspace(window: ICodeWindow, workspace: IWorkspaceIdentifier): IEnterWorkspaceResult {\n\t\twindow.focus();\n\n\t\t// Register window for backups and migrate current backups over\n\t\tlet backupPath: string | undefined;\n\t\tif (!window.config.extensionDevelopmentPath) {\n\t\t\tbackupPath = this.backupMainService.registerWorkspaceBackupSync({ workspace, remoteAuthority: window.remoteAuthority }, window.config.backupPath);\n\t\t}\n\n\t\t// if the window was opened on an untitled workspace, delete it.\n\t\tif (window.openedWorkspace && this.workspacesMainService.isUntitledWorkspace(window.openedWorkspace)) {\n\t\t\tthis.workspacesMainService.deleteUntitledWorkspaceSync(window.openedWorkspace);\n\t\t}\n\n\t\t// Update window configuration properly based on transition to workspace\n\t\twindow.config.folderUri = undefined;\n\t\twindow.config.workspace = workspace;\n\t\twindow.config.backupPath = backupPath;\n\n\t\treturn { workspace, backupPath };\n\t}\n\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): void {\n\t\tconst window = (typeof options.windowId === 'number' ? this.windowsMainService.getWindowById(options.windowId) : undefined) || this.windowsMainService.getFocusedWindow() || this.windowsMainService.getLastActiveWindow();\n\n\t\tthis.windowsMainService.pickFileAndOpen({\n\t\t\twindowId: window ? window.id : undefined,\n\t\t\tdialogOptions: {\n\t\t\t\tbuttonLabel: mnemonicButtonLabel(localize({ key: 'openWorkspace', comment: ['&& denotes a mnemonic'] }, \"&&Open\")),\n\t\t\t\ttitle: localize('openWorkspaceTitle', \"Open Workspace\"),\n\t\t\t\tfilters: WORKSPACE_FILTER,\n\t\t\t\tproperties: ['openFile'],\n\t\t\t\tdefaultPath: options.dialogOptions && options.dialogOptions.defaultPath\n\t\t\t},\n\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\ttelemetryEventName: options.telemetryEventName,\n\t\t\ttelemetryExtraData: options.telemetryExtraData\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { IWorkspaceIdentifier, IWorkspaceFolderCreationData, IWorkspacesMainService } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\n\nexport class WorkspacesChannel implements IServerChannel {\n\n\tconstructor(private service: IWorkspacesMainService) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'createUntitledWorkspace': {\n\t\t\t\tconst rawFolders: IWorkspaceFolderCreationData[] = arg[0];\n\t\t\t\tconst remoteAuthority: string = arg[1];\n\t\t\t\tlet folders: IWorkspaceFolderCreationData[] | undefined = undefined;\n\t\t\t\tif (Array.isArray(rawFolders)) {\n\t\t\t\t\tfolders = rawFolders.map(rawFolder => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\turi: URI.revive(rawFolder.uri), // convert raw URI back to real URI\n\t\t\t\t\t\t\tname: rawFolder.name\n\t\t\t\t\t\t} as IWorkspaceFolderCreationData;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn this.service.createUntitledWorkspace(folders, remoteAuthority);\n\t\t\t}\n\t\t\tcase 'deleteUntitledWorkspace': {\n\t\t\t\tconst w: IWorkspaceIdentifier = arg;\n\t\t\t\treturn this.service.deleteUntitledWorkspace({ id: w.id, configPath: URI.revive(w.configPath) });\n\t\t\t}\n\t\t\tcase 'getWorkspaceIdentifier': {\n\t\t\t\treturn this.service.getWorkspaceIdentifier(URI.revive(arg));\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport * as https from 'https';\nimport * as http from 'http';\nimport { Stream } from 'stream';\nimport { parse as parseUrl } from 'url';\nimport { createWriteStream } from 'fs';\nimport { assign } from 'vs/base/common/objects';\nimport { createGunzip } from 'zlib';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\n\nexport type Agent = any;\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface IRequestOptions {\n\ttype?: string;\n\turl?: string;\n\tuser?: string;\n\tpassword?: string;\n\theaders?: any;\n\ttimeout?: number;\n\tdata?: string | Stream;\n\tagent?: Agent;\n\tfollowRedirects?: number;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\nexport interface IRequestContext {\n\t// req: http.ClientRequest;\n\t// res: http.ClientResponse;\n\tres: {\n\t\theaders: { [n: string]: string };\n\t\tstatusCode?: number;\n\t};\n\tstream: Stream;\n}\n\nexport interface IRequestFunction {\n\t(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n}\n\nasync function getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\tconst endpoint = parseUrl(options.url!);\n\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\treturn module.request;\n}\n\nexport function request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\tlet req: http.ClientRequest;\n\n\tconst rawRequestPromise = options.getRawRequest\n\t\t? Promise.resolve(options.getRawRequest(options))\n\t\t: Promise.resolve(getNodeRequest(options));\n\n\treturn rawRequestPromise.then(rawRequest => {\n\n\t\treturn new Promise<IRequestContext>((c, e) => {\n\t\t\tconst endpoint = parseUrl(options.url!);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\trequest(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: Stream = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = stream.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t} else {\n\t\t\t\t\toptions.data.pipe(req);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport function download(filePath: string, context: IRequestContext): Promise<void> {\n\treturn new Promise<void>((c, e) => {\n\t\tconst out = createWriteStream(filePath);\n\n\t\tout.once('finish', () => c(undefined));\n\t\tcontext.stream.once('error', e);\n\t\tcontext.stream.pipe(out);\n\t});\n}\n\nexport function asText(context: IRequestContext): Promise<string | null> {\n\treturn new Promise((c, e) => {\n\t\tif (!isSuccess(context)) {\n\t\t\treturn e('Server returned ' + context.res.statusCode);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\treturn c(null);\n\t\t}\n\n\t\tconst buffer: string[] = [];\n\t\tcontext.stream.on('data', (d: string) => buffer.push(d));\n\t\tcontext.stream.on('end', () => c(buffer.join('')));\n\t\tcontext.stream.on('error', e);\n\t});\n}\n\nexport function asJson<T>(context: IRequestContext): Promise<T | null> {\n\treturn new Promise((c, e) => {\n\t\tif (!isSuccess(context)) {\n\t\t\treturn e('Server returned ' + context.res.statusCode);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\treturn c(null);\n\t\t}\n\n\t\tconst buffer: string[] = [];\n\t\tcontext.stream.on('data', (d: string) => buffer.push(d));\n\t\tcontext.stream.on('end', () => {\n\t\t\ttry {\n\t\t\t\tc(JSON.parse(buffer.join('')));\n\t\t\t} catch (err) {\n\t\t\t\te(err);\n\t\t\t}\n\t\t});\n\t\tcontext.stream.on('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { IRequestOptions, IRequestContext, IRequestFunction, request } from 'vs/base/node/request';\nimport { getProxyAgent } from 'vs/base/node/proxy';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/node/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService implements IRequestService {\n\n\t_serviceBrand: any;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean;\n\tprivate authorization?: string;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tconfigurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this, this.disposables);\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\trequest(options: IRequestOptions, token: CancellationToken, requestFn: IRequestFunction = request): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agentPromise = options.agent ? Promise.resolve(options.agent) : Promise.resolve(getProxyAgent(options.url || '', { proxyUrl, strictSSL }));\n\n\t\treturn agentPromise.then(agent => {\n\t\t\toptions.agent = agent;\n\t\t\toptions.strictSSL = strictSSL;\n\n\t\t\tif (this.authorization) {\n\t\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t\t}\n\n\t\t\treturn requestFn(options, token);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRequestOptions, IRequestContext, request, IRawRequestFunction } from 'vs/base/node/request';\nimport { RequestService as NodeRequestService } from 'vs/platform/request/node/requestService';\nimport { assign } from 'vs/base/common/objects';\nimport { net } from 'electron';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nfunction getRawRequest(options: IRequestOptions): IRawRequestFunction {\n\treturn net.request as any as IRawRequestFunction;\n}\n\nexport class RequestService extends NodeRequestService {\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn super.request(options, token, options => request(assign({}, options || {}, { getRawRequest }), token));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport product from 'vs/platform/product/node/product';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { State, IUpdate, AvailableForDownload, UpdateType } from 'vs/platform/update/common/update';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { createUpdateURL, AbstractUpdateService } from 'vs/platform/update/electron-main/abstractUpdateService';\nimport { asJson } from 'vs/base/node/request';\nimport { shell } from 'electron';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport class LinuxUpdateService extends AbstractUpdateService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(lifecycleService, configurationService, environmentService, requestService, logService);\n\t}\n\n\tprotected buildUpdateFeedUrl(quality: string): string {\n\t\treturn createUpdateURL(`linux-${process.arch}`, quality);\n\t}\n\n\tprotected doCheckForUpdates(context: any): void {\n\t\tif (!this.url) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.CheckingForUpdates(context));\n\n\t\tthis.requestService.request({ url: this.url }, CancellationToken.None)\n\t\t\t.then<IUpdate>(asJson)\n\t\t\t.then(update => {\n\t\t\t\tif (!update || !update.url || !update.version || !update.productVersion) {\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\"update:notAvailable\" : {\n\t\t\t\t\t\t\t\t\"explicit\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('update:notAvailable', { explicit: !!context });\n\n\t\t\t\t\tthis.setState(State.Idle(UpdateType.Archive));\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(State.AvailableForDownload(update));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(undefined, err => {\n\t\t\t\tthis.logService.error(err);\n\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"update:notAvailable\" : {\n\t\t\t\t\t\t\"explicit\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog('update:notAvailable', { explicit: !!context });\n\n\t\t\t\t// only show message when explicitly checking for updates\n\t\t\t\tconst message: string | undefined = !!context ? (err.message || err) : undefined;\n\t\t\t\tthis.setState(State.Idle(UpdateType.Archive, message));\n\t\t\t});\n\t}\n\n\tprotected async doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\t// Use the download URL if available as we don't currently detect the package type that was\n\t\t// installed and the website download page is more useful than the tarball generally.\n\t\tif (product.downloadUrl && product.downloadUrl.length > 0) {\n\t\t\tshell.openExternal(product.downloadUrl);\n\t\t} else if (state.update.url) {\n\t\t\tshell.openExternal(state.update.url);\n\t\t}\n\n\t\tthis.setState(State.Idle(UpdateType.Archive));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { memoize } from 'vs/base/common/decorators';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport product from 'vs/platform/product/node/product';\nimport { State, IUpdate, StateType, AvailableForDownload, UpdateType } from 'vs/platform/update/common/update';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { createUpdateURL, AbstractUpdateService } from 'vs/platform/update/electron-main/abstractUpdateService';\nimport { download, asJson } from 'vs/base/node/request';\nimport { checksum } from 'vs/base/node/crypto';\nimport { tmpdir } from 'os';\nimport { spawn } from 'child_process';\nimport { shell } from 'electron';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { timeout } from 'vs/base/common/async';\n\nasync function pollUntil(fn: () => boolean, millis = 1000): Promise<void> {\n\twhile (!fn()) {\n\t\tawait timeout(millis);\n\t}\n}\n\ninterface IAvailableUpdate {\n\tpackagePath: string;\n\tupdateFilePath?: string;\n}\n\nlet _updateType: UpdateType | undefined = undefined;\nfunction getUpdateType(): UpdateType {\n\tif (typeof _updateType === 'undefined') {\n\t\t_updateType = fs.existsSync(path.join(path.dirname(process.execPath), 'unins000.exe'))\n\t\t\t? UpdateType.Setup\n\t\t\t: UpdateType.Archive;\n\t}\n\n\treturn _updateType;\n}\n\nexport class Win32UpdateService extends AbstractUpdateService {\n\n\t_serviceBrand: any;\n\n\tprivate availableUpdate: IAvailableUpdate | undefined;\n\n\t@memoize\n\tget cachePath(): Promise<string> {\n\t\tconst result = path.join(tmpdir(), `vscode-update-${product.target}-${process.arch}`);\n\t\treturn pfs.mkdirp(result, undefined).then(() => result);\n\t}\n\n\tconstructor(\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(lifecycleService, configurationService, environmentService, requestService, logService);\n\n\t\tif (getUpdateType() === UpdateType.Setup) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"update:win32SetupTarget\" : {\n\t\t\t\t\t\"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\t/* __GDPR__\n\t\t\t\t\"update:win<NUMBER>SetupTarget\" : {\n\t\t\t\t\t\"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('update:win32SetupTarget', { target: product.target });\n\t\t}\n\t}\n\n\tprotected buildUpdateFeedUrl(quality: string): string | undefined {\n\t\tlet platform = 'win32';\n\n\t\tif (process.arch === 'x64') {\n\t\t\tplatform += '-x64';\n\t\t}\n\n\t\tif (getUpdateType() === UpdateType.Archive) {\n\t\t\tplatform += '-archive';\n\t\t} else if (product.target === 'user') {\n\t\t\tplatform += '-user';\n\t\t}\n\n\t\treturn createUpdateURL(platform, quality);\n\t}\n\n\tprotected doCheckForUpdates(context: any): void {\n\t\tif (!this.url) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.CheckingForUpdates(context));\n\n\t\tthis.requestService.request({ url: this.url }, CancellationToken.None)\n\t\t\t.then<IUpdate>(asJson)\n\t\t\t.then(update => {\n\t\t\t\tconst updateType = getUpdateType();\n\n\t\t\t\tif (!update || !update.url || !update.version || !update.productVersion) {\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\"update:notAvailable\" : {\n\t\t\t\t\t\t\t\t\"explicit\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('update:notAvailable', { explicit: !!context });\n\n\t\t\t\t\tthis.setState(State.Idle(updateType));\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\n\t\t\t\tif (updateType === UpdateType.Archive) {\n\t\t\t\t\tthis.setState(State.AvailableForDownload(update));\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\n\t\t\t\tthis.setState(State.Downloading(update));\n\n\t\t\t\treturn this.cleanup(update.version).then(() => {\n\t\t\t\t\treturn this.getUpdatePackagePath(update.version).then(updatePackagePath => {\n\t\t\t\t\t\treturn pfs.exists(updatePackagePath).then(exists => {\n\t\t\t\t\t\t\tif (exists) {\n\t\t\t\t\t\t\t\treturn Promise.resolve(updatePackagePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst url = update.url;\n\t\t\t\t\t\t\tconst hash = update.hash;\n\t\t\t\t\t\t\tconst downloadPath = `${updatePackagePath}.tmp`;\n\n\t\t\t\t\t\t\treturn this.requestService.request({ url }, CancellationToken.None)\n\t\t\t\t\t\t\t\t.then(context => download(downloadPath, context))\n\t\t\t\t\t\t\t\t.then(hash ? () => checksum(downloadPath, update.hash) : () => undefined)\n\t\t\t\t\t\t\t\t.then(() => pfs.rename(downloadPath, updatePackagePath))\n\t\t\t\t\t\t\t\t.then(() => updatePackagePath);\n\t\t\t\t\t\t});\n\t\t\t\t\t}).then(packagePath => {\n\t\t\t\t\t\tconst fastUpdatesEnabled = this.configurationService.getValue<boolean>('update.enableWindowsBackgroundUpdates');\n\n\t\t\t\t\t\tthis.availableUpdate = { packagePath };\n\n\t\t\t\t\t\tif (fastUpdatesEnabled && update.supportsFastUpdate) {\n\t\t\t\t\t\t\tif (product.target === 'user') {\n\t\t\t\t\t\t\t\tthis.doApplyUpdate();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setState(State.Downloaded(update));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setState(State.Ready(update));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(undefined, err => {\n\t\t\t\tthis.logService.error(err);\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"update:notAvailable\" : {\n\t\t\t\t\t\t\"explicit\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog('update:notAvailable', { explicit: !!context });\n\n\t\t\t\t// only show message when explicitly checking for updates\n\t\t\t\tconst message: string | undefined = !!context ? (err.message || err) : undefined;\n\t\t\t\tthis.setState(State.Idle(getUpdateType(), message));\n\t\t\t});\n\t}\n\n\tprotected async doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\tif (state.update.url) {\n\t\t\tshell.openExternal(state.update.url);\n\t\t}\n\t\tthis.setState(State.Idle(getUpdateType()));\n\t}\n\n\tprivate async getUpdatePackagePath(version: string): Promise<string> {\n\t\tconst cachePath = await this.cachePath;\n\t\treturn path.join(cachePath, `CodeSetup-${product.quality}-${version}.exe`);\n\t}\n\n\tprivate async cleanup(exceptVersion: string | null = null): Promise<any> {\n\t\tconst filter = exceptVersion ? one => !(new RegExp(`${product.quality}-${exceptVersion}\\\\.exe$`).test(one)) : () => true;\n\n\t\tconst cachePath = await this.cachePath;\n\t\tconst versions = await pfs.readdir(cachePath);\n\n\t\tconst promises = versions.filter(filter).map(async one => {\n\t\t\ttry {\n\t\t\t\tawait pfs.unlink(path.join(cachePath, one));\n\t\t\t} catch (err) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected async doApplyUpdate(): Promise<void> {\n\t\tif (this.state.type !== StateType.Downloaded && this.state.type !== StateType.Downloading) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (!this.availableUpdate) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst update = this.state.update;\n\t\tthis.setState(State.Updating(update));\n\n\t\tconst cachePath = await this.cachePath;\n\n\t\tthis.availableUpdate.updateFilePath = path.join(cachePath, `CodeSetup-${product.quality}-${update.version}.flag`);\n\n\t\tawait pfs.writeFile(this.availableUpdate.updateFilePath, 'flag');\n\t\tconst child = spawn(this.availableUpdate.packagePath, ['/verysilent', `/update=\"${this.availableUpdate.updateFilePath}\"`, '/nocloseapplications', '/mergetasks=runcode,!desktopicon,!quicklaunchicon'], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'ignore', 'ignore'],\n\t\t\twindowsVerbatimArguments: true\n\t\t});\n\n\t\tchild.once('exit', () => {\n\t\t\tthis.availableUpdate = undefined;\n\t\t\tthis.setState(State.Idle(getUpdateType()));\n\t\t});\n\n\t\tconst readyMutexName = `${product.win32MutexName}-ready`;\n\t\tconst isActive = (require.__$__nodeRequire('windows-mutex') as any).isActive;\n\n\t\t// poll for mutex-ready\n\t\tpollUntil(() => isActive(readyMutexName))\n\t\t\t.then(() => this.setState(State.Ready(update)));\n\t}\n\n\tprotected doQuitAndInstall(): void {\n\t\tif (this.state.type !== StateType.Ready || !this.availableUpdate) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\n\t\tif (this.state.update.supportsFastUpdate && this.availableUpdate.updateFilePath) {\n\t\t\tfs.unlinkSync(this.availableUpdate.updateFilePath);\n\t\t} else {\n\t\t\tspawn(this.availableUpdate.packagePath, ['/silent', '/mergetasks=runcode,!desktopicon,!quicklaunchicon'], {\n\t\t\t\tdetached: true,\n\t\t\t\tstdio: ['ignore', 'ignore', 'ignore']\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected getUpdateType(): UpdateType {\n\t\treturn getUpdateType();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, ipcMain as ipc, systemPreferences, shell, Event, contentTracing, protocol, powerMonitor } from 'electron';\nimport { IProcessEnvironment, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { WindowsManager } from 'vs/code/electron-main/windows';\nimport { IWindowsService, OpenContext, ActiveWindowManager, IURIToOpen } from 'vs/platform/windows/common/windows';\nimport { WindowsChannel } from 'vs/platform/windows/node/windowsIpc';\nimport { WindowsService } from 'vs/platform/windows/electron-main/windowsService';\nimport { ILifecycleService, LifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { getShellEnvironment } from 'vs/code/node/shellEnv';\nimport { IUpdateService } from 'vs/platform/update/common/update';\nimport { UpdateChannel } from 'vs/platform/update/node/updateIpc';\nimport { Server as ElectronIPCServer } from 'vs/base/parts/ipc/electron-main/ipc.electron-main';\nimport { Server, connect, Client } from 'vs/base/parts/ipc/node/ipc.net';\nimport { SharedProcess } from 'vs/code/electron-main/sharedProcess';\nimport { LaunchService, LaunchChannel, ILaunchService } from 'vs/platform/launch/electron-main/launchService';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { URLHandlerChannelClient, URLServiceChannel } from 'vs/platform/url/node/urlIpc';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { NullTelemetryService, combinedAppender, LogAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryAppenderClient } from 'vs/platform/telemetry/node/telemetryIpc';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { getDelayedChannel, StaticRouter } from 'vs/base/parts/ipc/node/ipc';\nimport product from 'vs/platform/product/node/product';\nimport pkg from 'vs/platform/product/node/package';\nimport { ProxyAuthHandler } from 'vs/code/electron-main/auth';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ConfigurationService } from 'vs/platform/configuration/node/configurationService';\nimport { IWindowsMainService, ICodeWindow } from 'vs/platform/windows/electron-main/windows';\nimport { IHistoryMainService } from 'vs/platform/history/common/history';\nimport { isUndefinedOrNull, withUndefinedAsNull } from 'vs/base/common/types';\nimport { KeyboardLayoutMonitor } from 'vs/code/electron-main/keyboard';\nimport { URI } from 'vs/base/common/uri';\nimport { WorkspacesChannel } from 'vs/platform/workspaces/node/workspacesIpc';\nimport { IWorkspacesMainService } from 'vs/platform/workspaces/common/workspaces';\nimport { getMachineId } from 'vs/base/node/id';\nimport { Win32UpdateService } from 'vs/platform/update/electron-main/updateService.win32';\nimport { LinuxUpdateService } from 'vs/platform/update/electron-main/updateService.linux';\nimport { DarwinUpdateService } from 'vs/platform/update/electron-main/updateService.darwin';\nimport { IIssueService } from 'vs/platform/issue/common/issue';\nimport { IssueChannel } from 'vs/platform/issue/node/issueIpc';\nimport { IssueService } from 'vs/platform/issue/electron-main/issueService';\nimport { LogLevelSetterChannel } from 'vs/platform/log/node/logIpc';\nimport * as errors from 'vs/base/common/errors';\nimport { ElectronURLListener } from 'vs/platform/url/electron-main/electronUrlListener';\nimport { serve as serveDriver } from 'vs/platform/driver/electron-main/driver';\nimport { connectRemoteAgentManagement, RemoteAgentConnectionContext } from 'vs/platform/remote/node/remoteAgentConnection';\nimport { IMenubarService } from 'vs/platform/menubar/common/menubar';\nimport { MenubarService } from 'vs/platform/menubar/electron-main/menubarService';\nimport { MenubarChannel } from 'vs/platform/menubar/node/menubarIpc';\nimport { hasArgs } from 'vs/platform/environment/node/argv';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { registerContextMenuListener } from 'vs/base/parts/contextmenu/electron-main/contextmenu';\nimport { storeBackgroundColor } from 'vs/code/electron-main/theme';\nimport { homedir } from 'os';\nimport { join, sep } from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport { REMOTE_HOST_SCHEME } from 'vs/platform/remote/common/remoteHosts';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from 'vs/platform/remote/node/remoteAgentFileSystemChannel';\nimport { ResolvedAuthority } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { SnapUpdateService } from 'vs/platform/update/electron-main/updateService.snap';\nimport { IStorageMainService, StorageMainService } from 'vs/platform/storage/node/storageMainService';\nimport { GlobalStorageDatabaseChannel } from 'vs/platform/storage/node/storageIpc';\nimport { startsWith } from 'vs/base/common/strings';\nimport { BackupMainService } from 'vs/platform/backup/electron-main/backupMainService';\nimport { IBackupMainService } from 'vs/platform/backup/common/backup';\nimport { HistoryMainService } from 'vs/platform/history/electron-main/historyMainService';\nimport { URLService } from 'vs/platform/url/common/urlService';\nimport { WorkspacesMainService } from 'vs/platform/workspaces/electron-main/workspacesMainService';\n\nexport class CodeApplication extends Disposable {\n\n\tprivate static readonly MACHINE_ID_KEY = 'telemetry.machineId';\n\n\tprivate windowsMainService: IWindowsMainService;\n\n\tprivate electronIpcServer: ElectronIPCServer;\n\n\tprivate sharedProcess: SharedProcess;\n\tprivate sharedProcessClient: Promise<Client>;\n\n\tconstructor(\n\t\tprivate readonly mainIpcServer: Server,\n\t\tprivate readonly userEnv: IProcessEnvironment,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IConfigurationService private readonly configurationService: ConfigurationService,\n\t\t@IStateService private readonly stateService: IStateService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(mainIpcServer);\n\t\tthis._register(configurationService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// We handle uncaught exceptions here to prevent electron from opening a dialog to the user\n\t\terrors.setUnexpectedErrorHandler(err => this.onUnexpectedError(err));\n\t\tprocess.on('uncaughtException', err => this.onUnexpectedError(err));\n\t\tprocess.on('unhandledRejection', (reason: any, promise: Promise<any>) => errors.onUnexpectedError(reason));\n\n\t\t// Contextmenu via IPC support\n\t\tregisterContextMenuListener();\n\n\t\t// Dispose on shutdown\n\t\tthis.lifecycleService.onWillShutdown(() => this.dispose());\n\n\t\tapp.on('accessibility-support-changed', (event: Event, accessibilitySupportEnabled: boolean) => {\n\t\t\tif (this.windowsMainService) {\n\t\t\t\tthis.windowsMainService.sendToAll('vscode:accessibilitySupportChanged', accessibilitySupportEnabled);\n\t\t\t}\n\t\t});\n\n\t\tapp.on('activate', (event: Event, hasVisibleWindows: boolean) => {\n\t\t\tthis.logService.trace('App#activate');\n\n\t\t\t// Mac only event: open new window when we get activated\n\t\t\tif (!hasVisibleWindows && this.windowsMainService) {\n\t\t\t\tthis.windowsMainService.openNewWindow(OpenContext.DOCK);\n\t\t\t}\n\t\t});\n\n\t\t// Security related measures (https://electronjs.org/docs/tutorial/security)\n\t\t// DO NOT CHANGE without consulting the documentation\n\t\tapp.on('web-contents-created', (event: any, contents) => {\n\t\t\tcontents.on('will-attach-webview', (event: Electron.Event, webPreferences, params) => {\n\n\t\t\t\tconst isValidWebviewSource = (source: string): boolean => {\n\t\t\t\t\tif (!source) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (source === 'data:text/html;charset=utf-8,%3C%21DOCTYPE%20html%3E%0D%0A%3Chtml%20lang%3D%22en%22%20style%3D%22width%3A%20100%25%3B%20height%3A%20100%25%22%3E%0D%0A%3Chead%3E%0D%0A%09%3Ctitle%3EVirtual%20Document%3C%2Ftitle%3E%0D%0A%3C%2Fhead%3E%0D%0A%3Cbody%20style%3D%22margin%3A%200%3B%20overflow%3A%20hidden%3B%20width%3A%20100%25%3B%20height%3A%20100%25%22%3E%0D%0A%3C%2Fbody%3E%0D%0A%3C%2Fhtml%3E') {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst srcUri = URI.parse(source).fsPath.toLowerCase();\n\t\t\t\t\tconst rootUri = URI.file(this.environmentService.appRoot).fsPath.toLowerCase();\n\n\t\t\t\t\treturn startsWith(srcUri, rootUri + sep);\n\t\t\t\t};\n\n\t\t\t\t// Ensure defaults\n\t\t\t\tdelete webPreferences.preload;\n\t\t\t\twebPreferences.nodeIntegration = false;\n\n\t\t\t\t// Verify URLs being loaded\n\t\t\t\tif (isValidWebviewSource(params.src) && isValidWebviewSource(webPreferences.preloadURL)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdelete webPreferences.preloadUrl;\n\n\t\t\t\t// Otherwise prevent loading\n\t\t\t\tthis.logService.error('webContents#web-contents-created: Prevented webview attach');\n\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\tcontents.on('will-navigate', event => {\n\t\t\t\tthis.logService.error('webContents#will-navigate: Prevented webcontent navigation');\n\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\tcontents.on('new-window', (event: Event, url: string) => {\n\t\t\t\tevent.preventDefault(); // prevent code that wants to open links\n\n\t\t\t\tshell.openExternal(url);\n\t\t\t});\n\t\t});\n\n\t\tlet macOpenFileURIs: IURIToOpen[] = [];\n\t\tlet runningTimeout: any = null;\n\t\tapp.on('open-file', (event: Event, path: string) => {\n\t\t\tthis.logService.trace('App#open-file: ', path);\n\t\t\tevent.preventDefault();\n\n\t\t\t// Keep in array because more might come!\n\t\t\tmacOpenFileURIs.push({ uri: URI.file(path) });\n\n\t\t\t// Clear previous handler if any\n\t\t\tif (runningTimeout !== null) {\n\t\t\t\tclearTimeout(runningTimeout);\n\t\t\t\trunningTimeout = null;\n\t\t\t}\n\n\t\t\t// Handle paths delayed in case more are coming!\n\t\t\trunningTimeout = setTimeout(() => {\n\t\t\t\tif (this.windowsMainService) {\n\t\t\t\t\tthis.windowsMainService.open({\n\t\t\t\t\t\tcontext: OpenContext.DOCK /* can also be opening from finder while app is running */,\n\t\t\t\t\t\tcli: this.environmentService.args,\n\t\t\t\t\t\turisToOpen: macOpenFileURIs,\n\t\t\t\t\t\tpreferNewWindow: true /* dropping on the dock or opening from finder prefers to open in a new window */\n\t\t\t\t\t});\n\t\t\t\t\tmacOpenFileURIs = [];\n\t\t\t\t\trunningTimeout = null;\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\tapp.on('new-window-for-tab', () => {\n\t\t\tthis.windowsMainService.openNewWindow(OpenContext.DESKTOP); //macOS native tab \"+\" button\n\t\t});\n\n\t\tipc.on('vscode:exit', (event: Event, code: number) => {\n\t\t\tthis.logService.trace('IPC#vscode:exit', code);\n\n\t\t\tthis.dispose();\n\t\t\tthis.lifecycleService.kill(code);\n\t\t});\n\n\t\tipc.on('vscode:fetchShellEnv', (event: Event) => {\n\t\t\tconst webContents = event.sender;\n\t\t\tgetShellEnvironment().then(shellEnv => {\n\t\t\t\tif (!webContents.isDestroyed()) {\n\t\t\t\t\twebContents.send('vscode:acceptShellEnv', shellEnv);\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tif (!webContents.isDestroyed()) {\n\t\t\t\t\twebContents.send('vscode:acceptShellEnv', {});\n\t\t\t\t}\n\n\t\t\t\tthis.logService.error('Error fetching shell env', err);\n\t\t\t});\n\t\t});\n\n\t\tipc.on('vscode:broadcast', (event: Event, windowId: number, broadcast: { channel: string; payload: any; }) => {\n\t\t\tif (this.windowsMainService && broadcast.channel && !isUndefinedOrNull(broadcast.payload)) {\n\t\t\t\tthis.logService.trace('IPC#vscode:broadcast', broadcast.channel, broadcast.payload);\n\n\t\t\t\t// Handle specific events on main side\n\t\t\t\tthis.onBroadcast(broadcast.channel, broadcast.payload);\n\n\t\t\t\t// Send to all windows (except sender window)\n\t\t\t\tthis.windowsMainService.sendToAll('vscode:broadcast', broadcast, [windowId]);\n\t\t\t}\n\t\t});\n\n\t\tipc.on('vscode:toggleDevTools', (event: Event) => event.sender.toggleDevTools());\n\t\tipc.on('vscode:openDevTools', (event: Event) => event.sender.openDevTools());\n\n\t\tipc.on('vscode:reloadWindow', (event: Event) => event.sender.reload());\n\n\t\tpowerMonitor.on('resume', () => { // After waking up from sleep\n\t\t\tif (this.windowsMainService) {\n\t\t\t\tthis.windowsMainService.sendToAll('vscode:osResume', undefined);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onUnexpectedError(err: Error): void {\n\t\tif (err) {\n\n\t\t\t// take only the message and stack property\n\t\t\tconst friendlyError = {\n\t\t\t\tmessage: err.message,\n\t\t\t\tstack: err.stack\n\t\t\t};\n\n\t\t\t// handle on client side\n\t\t\tif (this.windowsMainService) {\n\t\t\t\tthis.windowsMainService.sendToFocused('vscode:reportError', JSON.stringify(friendlyError));\n\t\t\t}\n\t\t}\n\n\t\tthis.logService.error(`[uncaught exception in main]: ${err}`);\n\t\tif (err.stack) {\n\t\t\tthis.logService.error(err.stack);\n\t\t}\n\t}\n\n\tprivate onBroadcast(event: string, payload: any): void {\n\n\t\t// Theme changes\n\t\tif (event === 'vscode:changeColorTheme' && typeof payload === 'string') {\n\t\t\tstoreBackgroundColor(this.stateService, JSON.parse(payload));\n\t\t}\n\t}\n\n\tstartup(): Promise<void> {\n\t\tthis.logService.debug('Starting VS Code');\n\t\tthis.logService.debug(`from: ${this.environmentService.appRoot}`);\n\t\tthis.logService.debug('args:', this.environmentService.args);\n\n\t\t// Make sure we associate the program with the app user model id\n\t\t// This will help Windows to associate the running program with\n\t\t// any shortcut that is pinned to the taskbar and prevent showing\n\t\t// two icons in the taskbar for the same app.\n\t\tif (isWindows && product.win32AppUserModelId) {\n\t\t\tapp.setAppUserModelId(product.win32AppUserModelId);\n\t\t}\n\n\t\t// Fix native tabs on macOS 10.13\n\t\t// macOS enables a compatibility patch for any bundle ID beginning with\n\t\t// \"com.microsoft.\", which breaks native tabs for VS Code when using this\n\t\t// identifier (from the official build).\n\t\t// Explicitly opt out of the patch here before creating any windows.\n\t\t// See: https://github.com/Microsoft/vscode/issues/35361#issuecomment-399794085\n\t\ttry {\n\t\t\tif (isMacintosh && this.configurationService.getValue<boolean>('window.nativeTabs') === true && !systemPreferences.getUserDefault('NSUseImprovedLayoutPass', 'boolean')) {\n\t\t\t\tsystemPreferences.setUserDefault('NSUseImprovedLayoutPass', 'boolean', true as any);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\n\t\t// Create Electron IPC Server\n\t\tthis.electronIpcServer = new ElectronIPCServer();\n\n\t\tconst startupWithMachineId = (machineId: string) => {\n\t\t\tthis.logService.trace(`Resolved machine identifier: ${machineId}`);\n\n\t\t\t// Spawn shared process\n\t\t\tthis.sharedProcess = this.instantiationService.createInstance(SharedProcess, machineId, this.userEnv);\n\t\t\tthis.sharedProcessClient = this.sharedProcess.whenReady().then(() => connect(this.environmentService.sharedIPCHandle, 'main'));\n\n\t\t\t// Services\n\t\t\treturn this.initServices(machineId).then(appInstantiationService => {\n\n\t\t\t\t// Create driver\n\t\t\t\tif (this.environmentService.driverHandle) {\n\t\t\t\t\tserveDriver(this.electronIpcServer, this.environmentService.driverHandle, this.environmentService, appInstantiationService).then(server => {\n\t\t\t\t\t\tthis.logService.info('Driver started at:', this.environmentService.driverHandle);\n\t\t\t\t\t\tthis._register(server);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Setup Auth Handler\n\t\t\t\tconst authHandler = appInstantiationService.createInstance(ProxyAuthHandler);\n\t\t\t\tthis._register(authHandler);\n\n\t\t\t\t// Open Windows\n\t\t\t\tconst windows = appInstantiationService.invokeFunction(accessor => this.openFirstWindow(accessor));\n\n\t\t\t\t// Post Open Windows Tasks\n\t\t\t\tappInstantiationService.invokeFunction(accessor => this.afterWindowOpen(accessor));\n\n\t\t\t\t// Tracing: Stop tracing after windows are ready if enabled\n\t\t\t\tif (this.environmentService.args.trace) {\n\t\t\t\t\tthis.stopTracingEventually(windows);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Resolve unique machine ID\n\t\tthis.logService.trace('Resolving machine identifier...');\n\t\tconst resolvedMachineId = this.resolveMachineId();\n\t\tif (typeof resolvedMachineId === 'string') {\n\t\t\treturn startupWithMachineId(resolvedMachineId);\n\t\t} else {\n\t\t\treturn resolvedMachineId.then(machineId => startupWithMachineId(machineId));\n\t\t}\n\t}\n\n\tprivate resolveMachineId(): string | Promise<string> {\n\t\tconst machineId = this.stateService.getItem<string>(CodeApplication.MACHINE_ID_KEY);\n\t\tif (machineId) {\n\t\t\treturn machineId;\n\t\t}\n\n\t\treturn getMachineId().then(machineId => {\n\t\t\tthis.stateService.setItem(CodeApplication.MACHINE_ID_KEY, machineId);\n\n\t\t\treturn machineId;\n\t\t});\n\t}\n\n\tprivate stopTracingEventually(windows: ICodeWindow[]): void {\n\t\tthis.logService.info(`Tracing: waiting for windows to get ready...`);\n\n\t\tlet recordingStopped = false;\n\t\tconst stopRecording = (timeout) => {\n\t\t\tif (recordingStopped) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trecordingStopped = true; // only once\n\n\t\t\tcontentTracing.stopRecording(join(homedir(), `${product.applicationName}-${Math.random().toString(16).slice(-4)}.trace.txt`), path => {\n\t\t\t\tif (!timeout) {\n\t\t\t\t\tthis.windowsMainService.showMessageBox({\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tmessage: localize('trace.message', \"Successfully created trace.\"),\n\t\t\t\t\t\tdetail: localize('trace.detail', \"Please create an issue and manually attach the following file:\\n{0}\", path),\n\t\t\t\t\t\tbuttons: [localize('trace.ok', \"Ok\")]\n\t\t\t\t\t}, this.windowsMainService.getLastActiveWindow());\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`Tracing: data recorded (after 30s timeout) to ${path}`);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Wait up to 30s before creating the trace anyways\n\t\tconst timeoutHandle = setTimeout(() => stopRecording(true), 30000);\n\n\t\t// Wait for all windows to get ready and stop tracing then\n\t\tPromise.all(windows.map(window => window.ready())).then(() => {\n\t\t\tclearTimeout(timeoutHandle);\n\t\t\tstopRecording(false);\n\t\t});\n\t}\n\n\tprivate initServices(machineId: string): Promise<IInstantiationService> {\n\t\tconst services = new ServiceCollection();\n\n\t\tif (process.platform === 'win32') {\n\t\t\tservices.set(IUpdateService, new SyncDescriptor(Win32UpdateService));\n\t\t} else if (process.platform === 'linux') {\n\t\t\tif (process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t\t\tservices.set(IUpdateService, new SyncDescriptor(SnapUpdateService, [process.env.SNAP, process.env.SNAP_REVISION]));\n\t\t\t} else {\n\t\t\t\tservices.set(IUpdateService, new SyncDescriptor(LinuxUpdateService));\n\t\t\t}\n\t\t} else if (process.platform === 'darwin') {\n\t\t\tservices.set(IUpdateService, new SyncDescriptor(DarwinUpdateService));\n\t\t}\n\n\t\tservices.set(IWindowsMainService, new SyncDescriptor(WindowsManager, [machineId]));\n\t\tservices.set(IWindowsService, new SyncDescriptor(WindowsService, [this.sharedProcess]));\n\t\tservices.set(ILaunchService, new SyncDescriptor(LaunchService));\n\t\tservices.set(IIssueService, new SyncDescriptor(IssueService, [machineId, this.userEnv]));\n\t\tservices.set(IMenubarService, new SyncDescriptor(MenubarService));\n\t\tservices.set(IStorageMainService, new SyncDescriptor(StorageMainService));\n\t\tservices.set(IBackupMainService, new SyncDescriptor(BackupMainService));\n\t\tservices.set(IHistoryMainService, new SyncDescriptor(HistoryMainService));\n\t\tservices.set(IURLService, new SyncDescriptor(URLService));\n\t\tservices.set(IWorkspacesMainService, new SyncDescriptor(WorkspacesMainService));\n\n\t\t// Telemetry\n\t\tif (!this.environmentService.isExtensionDevelopment && !this.environmentService.args['disable-telemetry'] && !!product.enableTelemetry) {\n\t\t\tconst channel = getDelayedChannel(this.sharedProcessClient.then(c => c.getChannel('telemetryAppender')));\n\t\t\tconst appender = combinedAppender(new TelemetryAppenderClient(channel), new LogAppender(this.logService));\n\t\t\tconst commonProperties = resolveCommonProperties(product.commit, pkg.version, machineId, this.environmentService.installSourcePath);\n\t\t\tconst piiPaths = [this.environmentService.appRoot, this.environmentService.extensionsPath];\n\t\t\tconst config: ITelemetryServiceConfig = { appender, commonProperties, piiPaths };\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst appInstantiationService = this.instantiationService.createChild(services);\n\n\t\t// Init services that require it\n\t\treturn appInstantiationService.invokeFunction(accessor => Promise.all([\n\t\t\tthis.initStorageService(accessor),\n\t\t\tthis.initBackupService(accessor)\n\t\t])).then(() => appInstantiationService);\n\t}\n\n\tprivate initStorageService(accessor: ServicesAccessor): Promise<void> {\n\t\tconst storageMainService = accessor.get(IStorageMainService) as StorageMainService;\n\n\t\t// Ensure to close storage on shutdown\n\t\tthis.lifecycleService.onWillShutdown(e => e.join(storageMainService.close()));\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\tprivate initBackupService(accessor: ServicesAccessor): Promise<void> {\n\t\tconst backupMainService = accessor.get(IBackupMainService) as BackupMainService;\n\n\t\treturn backupMainService.initialize();\n\t}\n\n\tprivate openFirstWindow(accessor: ServicesAccessor): ICodeWindow[] {\n\t\tconst appInstantiationService = accessor.get(IInstantiationService);\n\n\t\t// Register more Main IPC services\n\t\tconst launchService = accessor.get(ILaunchService);\n\t\tconst launchChannel = new LaunchChannel(launchService);\n\t\tthis.mainIpcServer.registerChannel('launch', launchChannel);\n\n\t\t// Register more Electron IPC services\n\t\tconst updateService = accessor.get(IUpdateService);\n\t\tconst updateChannel = new UpdateChannel(updateService);\n\t\tthis.electronIpcServer.registerChannel('update', updateChannel);\n\n\t\tconst issueService = accessor.get(IIssueService);\n\t\tconst issueChannel = new IssueChannel(issueService);\n\t\tthis.electronIpcServer.registerChannel('issue', issueChannel);\n\n\t\tconst workspacesService = accessor.get(IWorkspacesMainService);\n\t\tconst workspacesChannel = appInstantiationService.createInstance(WorkspacesChannel, workspacesService);\n\t\tthis.electronIpcServer.registerChannel('workspaces', workspacesChannel);\n\n\t\tconst windowsService = accessor.get(IWindowsService);\n\t\tconst windowsChannel = new WindowsChannel(windowsService);\n\t\tthis.electronIpcServer.registerChannel('windows', windowsChannel);\n\t\tthis.sharedProcessClient.then(client => client.registerChannel('windows', windowsChannel));\n\n\t\tconst menubarService = accessor.get(IMenubarService);\n\t\tconst menubarChannel = new MenubarChannel(menubarService);\n\t\tthis.electronIpcServer.registerChannel('menubar', menubarChannel);\n\n\t\tconst urlService = accessor.get(IURLService);\n\t\tconst urlChannel = new URLServiceChannel(urlService);\n\t\tthis.electronIpcServer.registerChannel('url', urlChannel);\n\n\t\tconst storageMainService = accessor.get(IStorageMainService);\n\t\tconst storageChannel = this._register(new GlobalStorageDatabaseChannel(this.logService, storageMainService as StorageMainService));\n\t\tthis.electronIpcServer.registerChannel('storage', storageChannel);\n\n\t\t// Log level management\n\t\tconst logLevelChannel = new LogLevelSetterChannel(accessor.get(ILogService));\n\t\tthis.electronIpcServer.registerChannel('loglevel', logLevelChannel);\n\t\tthis.sharedProcessClient.then(client => client.registerChannel('loglevel', logLevelChannel));\n\n\t\t// Lifecycle\n\t\t(this.lifecycleService as LifecycleService).ready();\n\n\t\t// Propagate to clients\n\t\tconst windowsMainService = this.windowsMainService = accessor.get(IWindowsMainService); // TODO@Joao: unfold this\n\n\t\t// Create a URL handler which forwards to the last active window\n\t\tconst activeWindowManager = new ActiveWindowManager(windowsService);\n\t\tconst activeWindowRouter = new StaticRouter(ctx => activeWindowManager.getActiveClientId().then(id => ctx === id));\n\t\tconst urlHandlerChannel = this.electronIpcServer.getChannel('urlHandler', activeWindowRouter);\n\t\tconst multiplexURLHandler = new URLHandlerChannelClient(urlHandlerChannel);\n\n\t\t// On Mac, Code can be running without any open windows, so we must create a window to handle urls,\n\t\t// if there is none\n\t\tif (isMacintosh) {\n\t\t\tconst environmentService = accessor.get(IEnvironmentService);\n\n\t\t\turlService.registerHandler({\n\t\t\t\thandleURL(uri: URI): Promise<boolean> {\n\t\t\t\t\tif (windowsMainService.getWindowCount() === 0) {\n\t\t\t\t\t\tconst cli = { ...environmentService.args, goto: true };\n\t\t\t\t\t\tconst [window] = windowsMainService.open({ context: OpenContext.API, cli, forceEmpty: true });\n\n\t\t\t\t\t\treturn window.ready().then(() => urlService.open(uri));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Register the multiple URL handler\n\t\turlService.registerHandler(multiplexURLHandler);\n\n\t\t// Watch Electron URLs and forward them to the UrlService\n\t\tconst args = this.environmentService.args;\n\t\tconst urls = args['open-url'] ? args._urls : [];\n\t\tconst urlListener = new ElectronURLListener(urls || [], urlService, this.windowsMainService);\n\t\tthis._register(urlListener);\n\n\t\tthis.windowsMainService.ready(this.userEnv);\n\n\t\t// Open our first window\n\t\tconst macOpenFiles = (<any>global).macOpenFiles as string[];\n\t\tconst context = !!process.env['VSCODE_CLI'] ? OpenContext.CLI : OpenContext.DESKTOP;\n\t\tconst hasCliArgs = hasArgs(args._);\n\t\tconst hasFolderURIs = hasArgs(args['folder-uri']);\n\t\tconst hasFileURIs = hasArgs(args['file-uri']);\n\n\t\tif (args['new-window'] && !hasCliArgs && !hasFolderURIs && !hasFileURIs) {\n\t\t\treturn this.windowsMainService.open({ context, cli: args, forceNewWindow: true, forceEmpty: true, initialStartup: true }); // new window if \"-n\" was used without paths\n\t\t}\n\n\t\tif (macOpenFiles && macOpenFiles.length && !hasCliArgs && !hasFolderURIs && !hasFileURIs) {\n\t\t\treturn this.windowsMainService.open({ context: OpenContext.DOCK, cli: args, urisToOpen: macOpenFiles.map(file => ({ uri: URI.file(file) })), initialStartup: true }); // mac: open-file event received on startup\n\t\t}\n\n\t\treturn this.windowsMainService.open({ context, cli: args, forceNewWindow: args['new-window'] || (!hasCliArgs && args['unity-launch']), diffMode: args.diff, initialStartup: true }); // default: read paths from cli\n\t}\n\n\tprivate afterWindowOpen(accessor: ServicesAccessor): void {\n\t\tconst windowsMainService = accessor.get(IWindowsMainService);\n\t\tconst historyMainService = accessor.get(IHistoryMainService);\n\n\t\tif (isWindows) {\n\n\t\t\t// Setup Windows mutex\n\t\t\ttry {\n\t\t\t\tconst Mutex = (require.__$__nodeRequire('windows-mutex') as any).Mutex;\n\t\t\t\tconst windowsMutex = new Mutex(product.win32MutexName);\n\t\t\t\tthis._register(toDisposable(() => windowsMutex.release()));\n\t\t\t} catch (e) {\n\t\t\t\tif (!this.environmentService.isBuilt) {\n\t\t\t\t\twindowsMainService.showMessageBox({\n\t\t\t\t\t\ttitle: product.nameLong,\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tmessage: 'Failed to load windows-mutex!',\n\t\t\t\t\t\tdetail: e.toString(),\n\t\t\t\t\t\tnoLink: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Ensure Windows foreground love module\n\t\t\ttry {\n\t\t\t\t// tslint:disable-next-line:no-unused-expression\n\t\t\t\trequire.__$__nodeRequire('windows-foreground-love');\n\t\t\t} catch (e) {\n\t\t\t\tif (!this.environmentService.isBuilt) {\n\t\t\t\t\twindowsMainService.showMessageBox({\n\t\t\t\t\t\ttitle: product.nameLong,\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tmessage: 'Failed to load windows-foreground-love!',\n\t\t\t\t\t\tdetail: e.toString(),\n\t\t\t\t\t\tnoLink: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remote Authorities\n\t\tthis.handleRemoteAuthorities();\n\n\t\t// Keyboard layout changes\n\t\tKeyboardLayoutMonitor.INSTANCE.onDidChangeKeyboardLayout(() => {\n\t\t\tthis.windowsMainService.sendToAll('vscode:keyboardLayoutChanged', false);\n\t\t});\n\n\t\t// Jump List\n\t\thistoryMainService.updateWindowsJumpList();\n\t\thistoryMainService.onRecentlyOpenedChange(() => historyMainService.updateWindowsJumpList());\n\n\t\t// Start shared process after a while\n\t\tconst sharedProcessSpawn = this._register(new RunOnceScheduler(() => getShellEnvironment().then(userEnv => this.sharedProcess.spawn(userEnv)), 3000));\n\t\tsharedProcessSpawn.schedule();\n\t}\n\n\tprivate handleRemoteAuthorities(): void {\n\t\tconst connectionPool: Map<string, ActiveConnection> = new Map<string, ActiveConnection>();\n\n\t\tconst isBuilt = this.environmentService.isBuilt;\n\n\t\tclass ActiveConnection {\n\t\t\tprivate readonly _authority: string;\n\t\t\tprivate readonly _client: Promise<Client<RemoteAgentConnectionContext>>;\n\t\t\tprivate readonly _disposeRunner: RunOnceScheduler;\n\n\t\t\tconstructor(authority: string, host: string, port: number) {\n\t\t\t\tthis._authority = authority;\n\t\t\t\tthis._client = connectRemoteAgentManagement(authority, host, port, `main`, isBuilt);\n\t\t\t\tthis._disposeRunner = new RunOnceScheduler(() => this.dispose(), 5000);\n\t\t\t}\n\n\t\t\tdispose(): void {\n\t\t\t\tthis._disposeRunner.dispose();\n\t\t\t\tconnectionPool.delete(this._authority);\n\t\t\t\tthis._client.then((connection) => {\n\t\t\t\t\tconnection.dispose();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tgetClient(): Promise<Client<RemoteAgentConnectionContext>> {\n\t\t\t\tthis._disposeRunner.schedule();\n\t\t\t\treturn this._client;\n\t\t\t}\n\t\t}\n\n\t\tconst resolvedAuthorities = new Map<string, ResolvedAuthority>();\n\t\tipc.on('vscode:remoteAuthorityResolved', (event: any, data: ResolvedAuthority) => {\n\t\t\tthis.logService.info('Received resolved authority', data.authority);\n\t\t\tresolvedAuthorities.set(data.authority, data);\n\t\t\t// Make sure to close and remove any existing connections\n\t\t\tif (connectionPool.has(data.authority)) {\n\t\t\t\tconnectionPool.get(data.authority)!.dispose();\n\t\t\t}\n\t\t});\n\n\t\tconst resolveAuthority = (authority: string): ResolvedAuthority | null => {\n\t\t\tthis.logService.info('Resolving authority', authority);\n\t\t\tif (authority.indexOf('+') >= 0) {\n\t\t\t\tif (resolvedAuthorities.has(authority)) {\n\t\t\t\t\treturn withUndefinedAsNull(resolvedAuthorities.get(authority));\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Didnot find resolved authority for', authority);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst [host, strPort] = authority.split(':');\n\t\t\t\tconst port = parseInt(strPort, 10);\n\t\t\t\treturn { authority, host, port };\n\t\t\t}\n\t\t};\n\n\t\tprotocol.registerBufferProtocol(REMOTE_HOST_SCHEME, async (request, callback) => {\n\t\t\tif (request.method !== 'GET') {\n\t\t\t\treturn callback(undefined);\n\t\t\t}\n\t\t\tconst uri = URI.parse(request.url);\n\n\t\t\tlet activeConnection: ActiveConnection | undefined;\n\t\t\tif (connectionPool.has(uri.authority)) {\n\t\t\t\tactiveConnection = connectionPool.get(uri.authority);\n\t\t\t} else {\n\t\t\t\tconst resolvedAuthority = resolveAuthority(uri.authority);\n\t\t\t\tif (!resolvedAuthority) {\n\t\t\t\t\tcallback(undefined);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tactiveConnection = new ActiveConnection(uri.authority, resolvedAuthority.host, resolvedAuthority.port);\n\t\t\t\tconnectionPool.set(uri.authority, activeConnection);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst rawClient = await activeConnection!.getClient();\n\t\t\t\tif (connectionPool.has(uri.authority)) { // not disposed in the meantime\n\t\t\t\t\tconst channel = rawClient.getChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\t\t\t\t// TODO@alex don't use call directly, wrap it around a `RemoteExtensionsFileSystemProvider`\n\t\t\t\t\tconst fileContents = await channel.call<Uint8Array>('readFile', [uri]);\n\t\t\t\t\tcallback(Buffer.from(fileContents));\n\t\t\t\t} else {\n\t\t\t\t\tcallback(undefined);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\tcallback(undefined);\n\t\t\t}\n\t\t});\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/code/code.main';\nimport { app, dialog } from 'electron';\nimport { assign } from 'vs/base/common/objects';\nimport * as platform from 'vs/base/common/platform';\nimport product from 'vs/platform/product/node/product';\nimport { parseMainProcessArgv, createWaitMarkerFile } from 'vs/platform/environment/node/argvHelper';\nimport { addArg } from 'vs/platform/environment/node/argv';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport { validatePaths } from 'vs/code/node/paths';\nimport { LifecycleService, ILifecycleService } from 'vs/platform/lifecycle/electron-main/lifecycleMain';\nimport { Server, serve, connect } from 'vs/base/parts/ipc/node/ipc.net';\nimport { LaunchChannelClient } from 'vs/platform/launch/electron-main/launchService';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ILogService, ConsoleLogMainService, MultiplexLogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/node/configurationService';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { RequestService } from 'vs/platform/request/electron-main/requestService';\nimport * as fs from 'fs';\nimport { CodeApplication } from 'vs/code/electron-main/app';\nimport { localize } from 'vs/nls';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { createSpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { IDiagnosticsService, DiagnosticsService } from 'vs/platform/diagnostics/electron-main/diagnosticsService';\nimport { BufferLogService } from 'vs/platform/log/common/bufferLog';\nimport { uploadLogs } from 'vs/code/electron-main/logUploader';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\n\nclass ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\nfunction setupIPC(accessor: ServicesAccessor): Promise<Server> {\n\tconst logService = accessor.get(ILogService);\n\tconst environmentService = accessor.get(IEnvironmentService);\n\tconst instantiationService = accessor.get(IInstantiationService);\n\n\tfunction allowSetForegroundWindow(service: LaunchChannelClient): Promise<void> {\n\t\tlet promise: Promise<void> = Promise.resolve();\n\t\tif (platform.isWindows) {\n\t\t\tpromise = service.getMainProcessId()\n\t\t\t\t.then(processId => {\n\t\t\t\t\tlogService.trace('Sending some foreground love to the running instance:', processId);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst { allowSetForegroundWindow } = <any>require.__$__nodeRequire('windows-foreground-love');\n\t\t\t\t\t\tallowSetForegroundWindow(processId);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// noop\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tfunction setup(retry: boolean): Promise<Server> {\n\t\treturn serve(environmentService.mainIPCHandle).then(server => {\n\n\t\t\t// Print --status usage info\n\t\t\tif (environmentService.args.status) {\n\t\t\t\tlogService.warn('Warning: The --status argument can only be used if Code is already running. Please run it again after Code has started.');\n\t\t\t\tthrow new ExpectedError('Terminating...');\n\t\t\t}\n\n\t\t\t// Log uploader usage info\n\t\t\tif (typeof environmentService.args['upload-logs'] !== 'undefined') {\n\t\t\t\tlogService.warn('Warning: The --upload-logs argument can only be used if Code is already running. Please run it again after Code has started.');\n\t\t\t\tthrow new ExpectedError('Terminating...');\n\t\t\t}\n\n\t\t\t// dock might be hidden at this case due to a retry\n\t\t\tif (platform.isMacintosh) {\n\t\t\t\tapp.dock.show();\n\t\t\t}\n\n\t\t\t// Set the VSCODE_PID variable here when we are sure we are the first\n\t\t\t// instance to startup. Otherwise we would wrongly overwrite the PID\n\t\t\tprocess.env['VSCODE_PID'] = String(process.pid);\n\n\t\t\treturn server;\n\t\t}, err => {\n\n\t\t\t// Handle unexpected errors (the only expected error is EADDRINUSE that\n\t\t\t// indicates a second instance of Code is running)\n\t\t\tif (err.code !== 'EADDRINUSE') {\n\n\t\t\t\t// Show a dialog for errors that can be resolved by the user\n\t\t\t\thandleStartupDataDirError(environmentService, err);\n\n\t\t\t\t// Any other runtime error is just printed to the console\n\t\t\t\treturn Promise.reject<Server>(err);\n\t\t\t}\n\n\t\t\t// Since we are the second instance, we do not want to show the dock\n\t\t\tif (platform.isMacintosh) {\n\t\t\t\tapp.dock.hide();\n\t\t\t}\n\n\t\t\t// there's a running instance, let's connect to it\n\t\t\treturn connect(environmentService.mainIPCHandle, 'main').then(\n\t\t\t\tclient => {\n\n\t\t\t\t\t// Tests from CLI require to be the only instance currently\n\t\t\t\t\tif (environmentService.extensionTestsLocationURI && !environmentService.debugExtensionHost.break) {\n\t\t\t\t\t\tconst msg = 'Running extension tests from the command line is currently only supported if no other instance of Code is running.';\n\t\t\t\t\t\tlogService.error(msg);\n\t\t\t\t\t\tclient.dispose();\n\n\t\t\t\t\t\treturn Promise.reject(new Error(msg));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show a warning dialog after some timeout if it takes long to talk to the other instance\n\t\t\t\t\t// Skip this if we are running with --wait where it is expected that we wait for a while.\n\t\t\t\t\t// Also skip when gathering diagnostics (--status) which can take a longer time.\n\t\t\t\t\tlet startupWarningDialogHandle: any;\n\t\t\t\t\tif (!environmentService.wait && !environmentService.status && !environmentService.args['upload-logs']) {\n\t\t\t\t\t\tstartupWarningDialogHandle = setTimeout(() => {\n\t\t\t\t\t\t\tshowStartupWarningDialog(\n\t\t\t\t\t\t\t\tlocalize('secondInstanceNoResponse', \"Another instance of {0} is running but not responding\", product.nameShort),\n\t\t\t\t\t\t\t\tlocalize('secondInstanceNoResponseDetail', \"Please close all other instances and try again.\")\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}, 10000);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst channel = client.getChannel('launch');\n\t\t\t\t\tconst service = new LaunchChannelClient(channel);\n\n\t\t\t\t\t// Process Info\n\t\t\t\t\tif (environmentService.args.status) {\n\t\t\t\t\t\treturn service.getMainProcessInfo().then(info => {\n\t\t\t\t\t\t\treturn instantiationService.invokeFunction(accessor => {\n\t\t\t\t\t\t\t\treturn accessor.get(IDiagnosticsService).printDiagnostics(info).then(() => Promise.reject(new ExpectedError()));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Log uploader\n\t\t\t\t\tif (typeof environmentService.args['upload-logs'] !== 'undefined') {\n\t\t\t\t\t\treturn instantiationService.invokeFunction(accessor => {\n\t\t\t\t\t\t\treturn uploadLogs(service, accessor.get(IRequestService), environmentService)\n\t\t\t\t\t\t\t\t.then(() => Promise.reject(new ExpectedError()));\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tlogService.trace('Sending env to running instance...');\n\n\t\t\t\t\treturn allowSetForegroundWindow(service)\n\t\t\t\t\t\t.then(() => service.start(environmentService.args, process.env as platform.IProcessEnvironment))\n\t\t\t\t\t\t.then(() => client.dispose())\n\t\t\t\t\t\t.then(() => {\n\n\t\t\t\t\t\t\t// Now that we started, make sure the warning dialog is prevented\n\t\t\t\t\t\t\tif (startupWarningDialogHandle) {\n\t\t\t\t\t\t\t\tclearTimeout(startupWarningDialogHandle);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn Promise.reject(new ExpectedError('Sent env to running instance. Terminating...'));\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (!retry || platform.isWindows || err.code !== 'ECONNREFUSED') {\n\t\t\t\t\t\tif (err.code === 'EPERM') {\n\t\t\t\t\t\t\tshowStartupWarningDialog(\n\t\t\t\t\t\t\t\tlocalize('secondInstanceAdmin', \"A second instance of {0} is already running as administrator.\", product.nameShort),\n\t\t\t\t\t\t\t\tlocalize('secondInstanceAdminDetail', \"Please close the other instance and try again.\")\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Promise.reject<Server>(err);\n\t\t\t\t\t}\n\n\t\t\t\t\t// it happens on Linux and OS X that the pipe is left behind\n\t\t\t\t\t// let's delete it, since we can't connect to it\n\t\t\t\t\t// and then retry the whole thing\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfs.unlinkSync(environmentService.mainIPCHandle);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogService.warn('Could not delete obsolete instance handle', e);\n\t\t\t\t\t\treturn Promise.reject<Server>(e);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn setup(false);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\treturn setup(true);\n}\n\nfunction showStartupWarningDialog(message: string, detail: string): void {\n\tdialog.showMessageBox({\n\t\ttitle: product.nameLong,\n\t\ttype: 'warning',\n\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))],\n\t\tmessage,\n\t\tdetail,\n\t\tnoLink: true\n\t});\n}\n\nfunction handleStartupDataDirError(environmentService: IEnvironmentService, error): void {\n\tif (error.code === 'EACCES' || error.code === 'EPERM') {\n\t\tshowStartupWarningDialog(\n\t\t\tlocalize('startupDataDirError', \"Unable to write program user data.\"),\n\t\t\tlocalize('startupDataDirErrorDetail', \"Please make sure the directories {0} and {1} are writeable.\", environmentService.userDataPath, environmentService.extensionsPath)\n\t\t);\n\t}\n}\n\nfunction quit(accessor: ServicesAccessor, reason?: ExpectedError | Error): void {\n\tconst logService = accessor.get(ILogService);\n\tconst lifecycleService = accessor.get(ILifecycleService);\n\n\tlet exitCode = 0;\n\n\tif (reason) {\n\t\tif ((reason as ExpectedError).isExpected) {\n\t\t\tif (reason.message) {\n\t\t\t\tlogService.trace(reason.message);\n\t\t\t}\n\t\t} else {\n\t\t\texitCode = 1; // signal error to the outside\n\n\t\t\tif (reason.stack) {\n\t\t\t\tlogService.error(reason.stack);\n\t\t\t} else {\n\t\t\t\tlogService.error(`Startup error: ${reason.toString()}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tlifecycleService.kill(exitCode);\n}\n\nfunction patchEnvironment(environmentService: IEnvironmentService): typeof process.env {\n\tconst instanceEnvironment: typeof process.env = {\n\t\tVSCODE_IPC_HOOK: environmentService.mainIPCHandle,\n\t\tVSCODE_NLS_CONFIG: process.env['VSCODE_NLS_CONFIG'],\n\t\tVSCODE_LOGS: process.env['VSCODE_LOGS']\n\t};\n\n\tif (process.env['VSCODE_PORTABLE']) {\n\t\tinstanceEnvironment['VSCODE_PORTABLE'] = process.env['VSCODE_PORTABLE'];\n\t}\n\n\tassign(process.env, instanceEnvironment);\n\n\treturn instanceEnvironment;\n}\n\nfunction startup(args: ParsedArgs): void {\n\t// We need to buffer the spdlog logs until we are sure\n\t// we are the only instance running, otherwise we'll have concurrent\n\t// log file access on Windows (https://github.com/Microsoft/vscode/issues/41218)\n\tconst bufferLogService = new BufferLogService();\n\n\tconst instantiationService = createServices(args, bufferLogService);\n\tinstantiationService.invokeFunction(accessor => {\n\t\tconst environmentService = accessor.get(IEnvironmentService);\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\t// Patch `process.env` with the instance's environment\n\t\tconst instanceEnvironment = patchEnvironment(environmentService);\n\n\t\t// Startup\n\t\treturn initServices(environmentService, stateService as StateService)\n\t\t\t.then(() => instantiationService.invokeFunction(setupIPC), error => {\n\t\t\t\t// Show a dialog for errors that can be resolved by the user\n\t\t\t\thandleStartupDataDirError(environmentService, error);\n\n\t\t\t\treturn Promise.reject(error);\n\t\t\t})\n\t\t\t.then(mainIpcServer => {\n\t\t\t\tbufferLogService.logger = createSpdLogService('main', bufferLogService.getLevel(), environmentService.logsPath);\n\n\t\t\t\treturn instantiationService.createInstance(CodeApplication, mainIpcServer, instanceEnvironment).startup();\n\t\t\t});\n\t}).then(() => {}, err => instantiationService.invokeFunction(quit, err));\n}\n\nfunction createServices(args: ParsedArgs, bufferLogService: BufferLogService): IInstantiationService {\n\tconst services = new ServiceCollection();\n\n\tconst environmentService = new EnvironmentService(args, process.execPath);\n\n\tconst logService = new MultiplexLogService([new ConsoleLogMainService(getLogLevel(environmentService)), bufferLogService]);\n\tprocess.once('exit', () => logService.dispose());\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(ILifecycleService, new SyncDescriptor(LifecycleService));\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IConfigurationService, new SyncDescriptor(ConfigurationService));\n\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\tservices.set(IDiagnosticsService, new SyncDescriptor(DiagnosticsService));\n\n\treturn new InstantiationService(services, true);\n}\n\nfunction initServices(environmentService: IEnvironmentService, stateService: StateService): Promise<any> {\n\n\t// Ensure paths for environment service exist\n\tconst environmentServiceInitialization = Promise.all<boolean | undefined>([\n\t\tenvironmentService.extensionsPath,\n\t\tenvironmentService.nodeCachedDataDir,\n\t\tenvironmentService.logsPath,\n\t\tenvironmentService.globalStorageHome,\n\t\tenvironmentService.workspaceStorageHome,\n\t\tenvironmentService.backupHome\n\t].map((path): undefined | Promise<boolean> => path ? mkdirp(path) : undefined));\n\n\t// State service\n\tconst stateServiceInitialization = stateService.init();\n\n\treturn Promise.all([environmentServiceInitialization, stateServiceInitialization]);\n}\n\nfunction main(): void {\n\n\t// Set the error handler early enough so that we are not getting the\n\t// default electron error dialog popping up\n\tsetUnexpectedErrorHandler(err => console.error(err));\n\n\t// Parse arguments\n\tlet args: ParsedArgs;\n\ttry {\n\t\targs = parseMainProcessArgv(process.argv);\n\t\targs = validatePaths(args);\n\t} catch (err) {\n\t\tconsole.error(err.message);\n\t\tapp.exit(1);\n\n\t\treturn undefined;\n\t}\n\n\t// If we are started with --wait create a random temporary file\n\t// and pass it over to the starting instance. We can use this file\n\t// to wait for it to be deleted to monitor that the edited file\n\t// is closed and then exit the waiting process.\n\t//\n\t// Note: we are not doing this if the wait marker has been already\n\t// added as argument. This can happen if Code was started from CLI.\n\tif (args.wait && !args.waitMarkerFilePath) {\n\t\tcreateWaitMarkerFile(args.verbose).then(waitMarkerFilePath => {\n\t\t\tif (waitMarkerFilePath) {\n\t\t\t\taddArg(process.argv, '--waitMarkerFilePath', waitMarkerFilePath);\n\t\t\t\targs.waitMarkerFilePath = waitMarkerFilePath;\n\t\t\t}\n\n\t\t\tstartup(args);\n\t\t});\n\t}\n\n\t// Otherwise just startup normally\n\telse {\n\t\tstartup(args);\n\t}\n}\n\nmain();\n"]}