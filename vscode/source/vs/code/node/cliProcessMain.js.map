{"version":3,"sources":["vs/code/node/fake","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/assert.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/collections.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/decorators.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/json.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/date.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/labels.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/paths.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/proxy.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/config.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/errorMessage.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensions/common/extensions.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/descriptors.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/graph.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/download/common/download.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/common/environment.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/serviceCollection.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/instantiationService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/localizations/common/localizations.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/common/log.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/node/spdlogService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensions/node/extensionValidator.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/node/environmentService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensions/node/extensionsUtil.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/localizations/node/localizations.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/registry/common/platform.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationRegistry.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configuration.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationModels.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/node/configuration.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/node/configurationService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/node/request.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/state/common/state.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/state/node/stateService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetry.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetryService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/commonProperties.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/zip.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/request.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionGalleryService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/node/requestService.ts","vs/code/node/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/node/cliProcessMain.ts"],"names":["__m","__M","deps","result","i","len","length","exports","ok","value","message","Error","hasOwnProperty","Object","prototype","values","from","key","call","push","size","count","first","forEach","callback","groupBy","data","groupFn","create","element","target","fromMap","original","createDecorator","mapFn","descriptor","fnKey","fn","get","memoize","console","warn","memoizeKey","args","this","defineProperty","configurable","enumerable","writable","apply","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","undefined","clearTimeout","setTimeout","createScanner","text","ignoreTrivia","scanHexDigits","digits","ch","charCodeAt","pos","scanNext","scanError","tokenOffset","token","code","isWhiteSpace","String","fromCharCode","isLineBreak","start","substring","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","getNodePath","node","parent","children","path","type","index","indexOf","getNodeValue","map","obj","prop","valueNode","contains","offset","includeRightBound","findNodeAtOffset","Array","isArray","item","visit","visitor","options","ParseOptions","DEFAULT","toNoArgVisit","visitFunction","_scanner","toOneArgVisit","arg","handleError","disallowComments","onComment","error","skipUntilAfter","skipUntil","onError","parseString","isValue","onLiteralValue","onObjectProperty","parseProperty","onSeparator","parseValue","onArrayBegin","needsComma","allowTrailingComma","onArrayEnd","parseArray","onObjectBegin","onObjectEnd","parseObject","JSON","parse","e","parseLiteral","getLiteralNodeType","ScanError","SyntaxKind","ParseErrorCode","CharacterCodes","getLocation","position","setPreviousNode","previousNodeInst","colonOffset","previousNode","segments","earlyReturnException","isAtPropertyKey","name","pop","sep","last","matches","pattern","k","errors","onValue","currentParent","currentProperty","previousParents","object","array","parseTree","ensurePropertyComplete","endOffset","findNodeAtLocation","root","segment","found","propertyNode","stripComments","replaceCh","kind","parts","replace","join","toLocalISOString","date","getFullYear","strings_1","pad","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","slice","hasDriveLetter","platform_1","isWindows","normalizeDriveLetter","charAt","toUpperCase","tildify","userHome","normalizedUserHome","normalizedUserHomeCached","normalized","rtrim","path_1","posix","isLinux","startsWith","startsWithIgnoreCase","substr","getPathLabel","resource","userHomeProvider","rootProvider","uri_1","URI","file","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","isEqual","uri","normalize","ltrim","rootName","basename","scheme","network_1","Schemas","untitled","with","query","fragment","toString","fsPath","res","getBaseLabel","base","untildify","ellipsis","unc","home","shorten","paths","shortenedPaths","match","pathIndex","prefix","split","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","endsWith","Type","template","inVariable","curVal","char","TEXT","resolved","VARIABLE","prevSegment","SEPARATOR","label","filter","every","mnemonicMenuLabel","forceDisableMnemonics","isMacintosh","m","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","pathsPath","amd_1","getPathFromAmdModule","require","__$__nodeRequire","getAppDataPath","getDefaultUserDataPath","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","protocol","process","env","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","test","opts","host","hostname","port","Number","auth","rejectUnauthorized","types_1","isBoolean","strictSSL","Promise","resolve_1","reject_1","resolve_2","reject_2","ConfigWatcher","[object Object]","_path","defaultConfig","disposables","configName","_onDidUpdateConfiguration","event_1","Emitter","registerWatcher","initAsync","hasParseErrors","parseErrors","onDidUpdateConfiguration","event","loadAsync","config","loaded","updateCache","initCallback","getConfig","cache","fs","readFileSync","readFile","raw","json","parentFolder","dirname","watch","lstat","err","stat","isDirectory","isSymbolicLink","readlink","realPath","isParentFolder","disposed","extfs","onConfigFileChange","eventType","filename","timeoutHandle","global","reload","changeBufferDelay","currentConfig","objects","equals","fire","ensureLoaded","loadSync","lifecycle_1","dispose","define","nls","exceptionToErrorMessage","exception","verbose","stack","stacktrace","localize","detectSystemErrorMessage","errno","syscall","toErrorMessage","arrays","coalesce","msg","types","isString","detail","areSameExtensions","a","b","uuid","id","compareIgnoreCase","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","extensions","getExtensionIdentifier","byExtension","findGroup","extension","group","some","getLocalExtensionTelemetryData","identifier","manifest","galleryId","publisherId","metadata","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","assign","properties","telemetryData","BetterMergeId","getMaliciousExtensionsSet","report","Set","malicious","add","nlsRegex","localizeManifest","translations","objects_1","cloneAndChange","exec","ExtensionsLifecycle","Disposable","environmentService","logService","super","processesLimiter","async_1","Limiter","script","parseScript","info","version","queue","runLifecycleHook","then","pfs_1","rimraf","getExtensionStoragePath","scriptKey","location","lifecycleHook","lifecycleType","timeout","c","extensionLifecycleProcess","timeoutHandler","onexit","on","errorMessage_1","signal","kill","uninstallHook","silent","execArgv","extensionUninstallProcess","child_process_1","fork","stdout","setEncoding","stderr","onStdout","Event","fromNodeEventEmitter","onStderr","onOutput","any","o","format","r","onDebouncedOutput","log","groupEnd","globalStorageHome","toLowerCase","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","ExtensionIdentifierWithVersion","extensionManagementUtil_1","isIExtensionIdentifier","thing","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","strings","equalsIgnoreCase","isLanguagePackExtension","contributes","localizations","ExtensionsManifestCache","extensionsManagementServuce","extensionsManifestCache","userDataPath","extensions_1","_register","onDidInstallExtension","onDidUninstallExtension","onDidUnInstallExtension","invalidate","pfs","del","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","Graph","_hashFn","_nodes","ret","collections_1","entry","isEmptyObject","outgoing","to","fromNode","lookupOrInsertNode","toNode","incoming","newNode","_key","keys","IDownloadService","instantiation_1","IEnvironmentService","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","RegExp","IExtensionManagementService","IExtensionGalleryService","SortBy","SortOrder","StatisticType","InstallOperation","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","IExtensionManagementServerService","EnablementState","IExtensionEnablementService","IExtensionTipsService","ExtensionRecommendationReason","ExtensionsLabel","nls_1","ExtensionsChannelId","PreferencesLabel","ServiceCollection","entries","_entries","Map","service","set","instanceOrDescriptor","has","_canUseProxy","Proxy","InstantiationService","services","serviceCollection_1","strict","_services","_strict","_parent","IInstantiationService","_trace","Trace","traceInvocation","_done","accessor","isOptional","errors_1","illegalState","_getOrCreateServiceInstance","optional","stop","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","concat","serviceDependencies","_util","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","delta","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","throwCycleError","graph","graph_1","d","insertEdge","roots","isEmpty","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","IdleValue","_target","getValue","p","TraceType","_start","Date","now","_dep","_None","child","printChild","n","trace","causedCreation","nested","dur","_totals","lines","LanguageType","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","ILogService","LogLevel","DEFAULT_LOG_LEVEL","Info","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Warning","Critical","ConsoleLogService","MultiplexLogService","logServices","debug","critical","DelegatedLogService","NullLogService","getLogLevel","Off","createSpdLogService","processName","logsFolder","_spdlog","setAsyncMode","logfilePath","logger","RotatingLogger","SpdLogService","log_1","createRotatingLogger","filesize","filecount","window","self","postMessage","$type","$data","dirs","abDirPath","dir","existsSync","mkdirSync","writeFileSync","flush","content","fileContent","clearFormatters","arguments","drop","stringify","isValidVersionStr","trim","VERSION_REGEXP","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","parseInt","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","vscode","isEngineValid","engine","package_1","default","getIPCHandle","crypto","createHash","update","digest","getWin32IPCHandle","xdgRuntimeDir","scope","getNixIPCHandle","parseExtensionHostPort","isBuild","parseDebugPort","debugId","parseSearchPort","debugArg","debugBrkArg","defaultBuildPort","portStr","break","Boolean","parsePathArg","resolve","cwd","parseUserDataDir","platform","EnvironmentService","_args","_execPath","date_1","logsPath","appRoot","execPath","cliPath","isBuilt","product_1","applicationName","getCLIPath","os","homedir","vscodePortable","appNameLong","nameLong","appQuality","quality","appSettingsHome","appSettingsPath","workspaceStorageHome","settingsSearchBuildId","settingsSearchUrl","appKeybindingsPath","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","extensionsPath","vscodeExtensions","dataFolderName","extensionDevelopmentLocationURI","s","extensionTestsLocationURI","extensionTestsPath","disableExtensions","skipGettingStarted","skipReleaseNotes","skipAddToRecentlyOpened","debugExtensionHost","debugSearch","wait","logExtensionHostCommunication","status","mainIPCHandle","sharedIPCHandle","nodeCachedDataDir","disableUpdates","disableCrashReporter","driverHandle","driverVerbose","__decorate","decorators_1","isUIExtension","uiContributions","configurationService","extensionId","configuredUIExtensions","extensionKind","arrays_1","isNonEmptyArray","uiExtensions","contribution","systemLanguages","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","local","getLanguagePacks","languagePacks","languages","distinct","changed","language","extensionIdentifier","all","getInstalled","current","installed","updated","__param","extensionManagement_1","environment_1","languagePacksFilePath","languagePacksFileLimiter","Queue","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","hash","extensionInLanguagePack","md5","crypto_1","reject","writeFile","RegistryImpl","Assert","Types","isObject","Registry","Extensions","JSONContribution","JSONContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","normalizeId","schemas","jsonContributionRegistry","getDefaultValue","validateProperty","property","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","getConfigurationProperties","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","windowSettings","resourceSettings","editorConfigurationSchemaId","contributionRegistry","as","jsonContributionRegistry_1","ConfigurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","defaultOverridesConfigurationNode","title","configurationContributors","editorConfigurationSchema","additionalProperties","errorMessage","configurationProperties","excludedConfigurationProperties","computeOverridePropertyPattern","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","updateSchemaForOverrideSettingsConfiguration","deregisterConfiguration","allOf","splice","defaultConfigurations","defaultConfiguration","defaults","defaultValue","propertySchema","description","$ref","updateOverridePropertyPatternKey","overridable","isUndefinedOrNull","propertyKeys","isUndefined","included","subNodes","register","SETTINGS_OVERRRIDE_NODE_ID","overridePropertyPattern","subNode","OVERRIDE_PATTERN_WITH_SUBSTITUTION","createRegExp","source","OVERRIDE_PROPERTY","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","curr","doRemoveFromValueTree","valueTree","shift","getConfigurationValue","settingPath","component","accessSetting","merge","overwrite","overrideIdentifierFromKey","IConfigurationService","isConfigurationOverrides","overrideIdentifier","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","compare","added","removed","value1","contents","value2","toOverrides","overrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","identifiers","removeFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","keyFromOverrideIdentifier","getMigratedSettingValue","currentSettingName","legacySettingName","setting","inspect","legacySetting","user","workspace","workspaceFolder","ConfigurationModel","_contents","_keys","_overrides","isFrozen","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","deepClone","mergeContents","others","other","otherOverride","override","deepFreeze","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_configurationModel","_parseErrors","configurationModel","parseContent","parseRaw","_defaultConfiguration","_userConfiguration","_workspaceConfiguration","_folderConfigurations","map_1","ResourceMap","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","freeze","memory","clear","userConfiguration","workspaceConfiguration","delete","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","reduce","isComplete","addKeys","AbstractConfigurationChangeEvent","changedKeysTree","requestedTree","ConfigurationChangeEvent","_changedConfiguration","_changedConfigurationByResource","changedConfiguration","changedConfigurationByResource","arg1","arg2","getOrSetChangedConfigurationForResource","changeWithKeys","sourceConfig","_source","_sourceConfig","affectedKeys","model","configurationModelsToSearch","doesConfigurationContains","updateKeys","UserConfiguration","settingsPath","_onDidChangeConfiguration","onDidChangeConfiguration","initializePromise","userConfigModelWatcher","config_1","onUnexpectedError","configurationModels_1","userConfigModelParser","initialize","ConfigurationService","configuration_2","initializeSync","_configuration","userConfigurationModel","onDidChangeUserConfiguration","onDidDefaultConfigurationChange","toData","arg3","arg4","changedKeys","updateUserConfiguration","trigger","updateDefaultConfiguration","change","getTargetConfiguration","IRequestService","registerConfiguration","order","http.proxy","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","removeItem","saveSync","serializedDatabase","extfs_1","writeFileAndFlushSync","StateService","fileStorage","STATE_FILE","init","getItem","setItem","ITelemetryService","TelemetryService","_configurationService","_disposables","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","piiPath","escapeRegExpCharacters","_updateUserOptIn","publicLog","optIn","isHashedId","usingFallbackGuid","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","sessionId","instanceId","machineId","eventName","anonymizeFilePaths","mixin","_cleanupInfo","updatedStack","cleanUpIndexes","regexp","lastIndex","nodeModulesRegex","fileRegex","x","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","configurationTelemetry","telemetryService","configurationSource","configurationKeys","flatKeys","flattenKeys","configurationValues","v","tmp","flattenValues","configurationValueWhitelist","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","keybindingsTelemetry","keybindingService","onDidUpdateKeybindings","keybindings","bindings","binding","command","when","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","client","appInsights","defaultClient","TelemetryClient","channel","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","measurements","flat","_flaten","getOwnPropertyNames","safeStringify","_getData","trackEvent","resolveCommonProperties","commit","generateUuid","release","Platform","PlatformToString","arch","seq","startTime","defineProperties","timestamp","common.timesincesessionstart","common.sequence","extractZip","zipfile","targetPath","createCancelablePromise","extractedEntriesCount","once","onCancellationRequested","cancel","close","throttler","Sequencer","readNextEntry","isCancellationRequested","readEntry","entryCount","ExtractError","sourcePathRegex","fileName","targetFileName","mkdirp","stream","ninvoke","openReadStream","mode","attr","externalFileAttributes","mask","modeFromEntry","dirName","targetDirName","istream","destroy","fs_1","createWriteStream","pipe","extractEntry","openZip","zipFile","lazy","nfcall","yauzl_1","open","lazyEntries","toExtractError","buffer","zipPath","filePath","read","buffers","Buffer","cause","zip","files","yazl","ZipFile","f","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","promise","getManifest","vsix","zip_1","parseManifest","__metadata","ExtensionManagementError","ExtensionManagementService","remote","galleryService","downloadService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","onInstallExtension","_onDidInstallExtension","_onUninstallExtension","onUninstallExtension","_onDidUninstallExtension","_devSystemExtensionsPath","_devSystemExtensionsFilePath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","manifestCache","extensionsManifestCache_1","extensionLifecycle","extensionLifecycle_1","toDisposable","collectFiles","os_1","tmpdir","uuid_1","zipLocation","install","collectFilesFromDirectory","__awaiter","readdir","stats","isFile","relative","downloadVsix","downloadLocation","extensionManagementUtil_2","operation","extensionValidator_1","identifierWithVersion","installedExtensions","existing","removeExtension","displayName","semver","gt","uninstall","getMetadata","installFromZipPath","downloadedLocation","download","toNonCancellablePromise","installExtension","installDependenciesAndPackExtensions","getTime","gallery","onDidInstallExtensionFailure","errorCode","reportTelemetry","getTelemetryEvent","checkAndGetCompatibleVersion","cancellablePromise","cancellationToken","successCallback","errorCallback","existingExtension","downloadInstallableExtension","installableExtension","finally","onDidInstallExtensionSuccess","isMalicious","compatibleExtension","getCompatibleExtension","cancellation_1","CancellationToken","None","extensionsUtil_1","isEnabled","findGalleryExtension","galleryExtension","setUninstalled","removeUninstalledExtension","installFromGallery","getExtensionsReport","joinErrors","unsetUninstalledAndGetLocal","extractAndInstall","isUninstalled","unsetUninstalled","folderName","tempPath","extensionPath","extractAndRename","scanExtension","saveMetadataForLocalExtension","extractPath","renamePath","rename","identfier","retryUntil","dependenciesAndPackExtensions","extensionPack","old","names","galleryIdentifier","pageSize","galleryResult","extensionsToInstall","firstPage","rollback","force","extensionToUninstall","checkForDependenciesAndUninstall","localExtension","manifestPath","extensionName","findGalleryExtensionByName","findGalleryExtensionById","ids","errorOrErrors","previousValue","currentValue","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","uninstallExtension","doUninstall","checked","extensionsPack","packOfPackedExtensions","packedExtension","exists","scanUserExtensions","userExtensions","u","reportStatistic","errorcode","promises","scanSystemExtensions","flatten","systemExtensionsPromise","scanExtensions","devSystemExtensionsPromise","getDevSystemExtensionsList","devSystemExtensionsList","devSystemExtensionsPath","systemExtensions","devSystemExtensions","excludeOutdated","getUninstalledExtensions","uninstalled","rcompare","limiter","extensionsFolders","extensionFolder","extensionNls_1","readManifest","readme","readmeUrl","changelog","changelogUrl","removeUninstalledExtensions","removeOutdatedExtensions","toRemove","postUninstall","withUninstalledExtensions","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","devSystemExtensionsFilePath","extensionData","duration","success","download_1","telemetry_1","request","req","getRawRequest","url","getNodeRequest","rawRequest","endpoint","method","headers","agent","password","followRedirects","isNumber","statusCode","zlib_1","createGunzip","write","abort","canceled","isSuccess","context","hasNoContent","out","asText","asJson","flagsToString","flags","getStatistic","statistics","statisticName","getVersionAsset","assetType","assetUri","fallbackUri","fallbackAssetUri","getExtensions","getEngine","PropertyType","Engine","toExtension","querySource","assets","AssetType","Manifest","Details","Changelog","license","License","repository","results","Repository","gitRegExp","getRepositoryAsset","VSIX","getDownloadAsset","icon","asset","Icon","toUrl","getIconAsset","coreTranslations","getCoreTranslationAssets","lastUpdated","shortDescription","installCount","rating","ratingCount","Dependency","ExtensionPack","localizedLanguages","LocalizedLanguages","getLocalizedLanguages","pageNumber","searchText","preview","getIsPreview","resolveMarketplaceHeaders","marketplaceMachineIdFile","isUUID","X-Market-Client-Id","User-Agent","X-Market-User-Id","Flags","FilterType","DefaultQueryState","sortBy","sortOrder","criteria","assetTypes","Query","state","filterType","filters","criterium","SearchText","ExtensionGalleryService","requestService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","ExcludeNonValidated","withPage","withFilter","Target","ExcludeWithFlags","Unpublished","ExtensionId","ExtensionName","queryGallery","galleryExtensions","rawExtension","versions","versionAsset","getLastValidExtensionVersion","rawVersion","getOrDefault","IncludeLatestVersionOnly","_","quotedCategory","category","Category","quotedTag","tag","Tag","withSortBy","withSortOrder","total","getPage","pageIndex","ct","nextPageQuery","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","api","request_2","resultCount","resultMetadata","metadataType","metadataItems","operationParam","downloadAsset","getAsset","getDependenciesReccursively","compatible","IncludeVersions","extensionNames","withAssetTypes","toGet","hasExtensionByName","loadDependencies","loadedDependencies","dependenciesSet","dep","fallbackUrl","firstOptions","isPromiseCanceledError","getErrorMessage","cdn","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionReccursively","ext","slow","request_1","RequestService","configure","http","proxy","proxyStrictSSL","authorization","proxyAuthorization","requestFn","proxy_1","Proxy-Authorization","getId","withVersion","getIdAndVersion","EXTENSION_ID_REGEX","notInstalled","useId","Main","instantiationService","extensionGalleryService","argv","setInstallSource","listExtensions","installExtensions","installSource","showVersions","failed","installedExtensionsManifests","updateLocalizationsCache","isAbsolute","labels_1","responseText","response","notFound","installedExtension","newer","getExtensionId","extensionDescription","uninstalledExtensions","localizationService","createInstance","eventPrefix","environmentService_1","spdlogService_1","state_1","stateService_1","instantiationService_1","invokeFunction","envService","stateService","configurationService_1","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","telemetryUtils_1","commonProperties_1","telemetryService_1","createChild","run"],"mappings":";;;CAAA;AACA,IAAAA,GAAA,UAAA,UAAA,iDAAA,sBAAA,uBAAA,6BAAA,yBAAA,uBAAA,qCAAA,mBAAA,SAAA,2BAAA,iDAAA,iEAAA,6CAAA,uCAAA,wBAAA,yBAAA,0BAAA,yDAAA,wBAAA,qBAAA,mCAAA,mCAAA,6DAAA,KAAA,uBAAA,2CAAA,yCAAA,yBAAA,KAAA,+CAAA,qBAAA,sBAAA,8BAAA,6CAAA,qDAAA,+DAAA,qBAAA,uDAAA,mCAAA,iDAAA,uBAAA,sBAAA,mBAAA,8BAAA,uCAAA,yCAAA,qBAAA,qCAAA,wBAAA,qBAAA,MAAA,wDAAA,4BAAA,iDAAA,0BAAA,qCAAA,gEAAA,oEAAA,kDAAA,SAAA,yEAAA,sEAAA,wDAAA,+CAAA,0CAAA,0DAAA,uDAAA,sBAAA,sDAAA,qBAAA,+CAAA,sDAAA,0DAAA,iCAAA,sCAAA,+DAAA,gDAAA,8CAAA,iDAAA,wBAAA,8CAAA,sBAAA,6BAAA,+DAAA,SAAA,0CAAA,kEAAA,OAAA,QAAA,sBAAA,OAAA,gBAAA,2BAAA,+BACAC,EAAA,SAAAC;AAEA,IAAA,IADAC,KACAC,EAAA,EAAAC,EAAAH,EAAAI,OAAAF,EAAAC,EAAAD,IACAD,EAAAC,GAAAJ,EAAAE,EAAAE,IAEA,OAAAD,qGCCAI,EAAAC,GAAA,SAAmBC,EAAaC,GAC/B,IAAKD,EACJ,MAAM,IAAIE,MAAMD,EAAU,qBAAuBA,EAAU,IAAM,yHCWnE,MAAME,EAAiBC,OAAOC,UAAUF,eAMxCL,EAAAQ,OAAA,SAA0BC,GACzB,MAAMb,KACN,IAAK,IAAIc,KAAOD,EACXJ,EAAeM,KAAKF,EAAMC,IAC7Bd,EAAOgB,KAAMH,EAAaC,IAG5B,OAAOd,GAGRI,EAAAa,KAAA,SAAwBJ,GACvB,IAAIK,EAAQ,EACZ,IAAK,IAAIJ,KAAOD,EACXJ,EAAeM,KAAKF,EAAMC,KAC7BI,GAAS,GAGX,OAAOA,GAGRd,EAAAe,MAAA,SAAyBN,GACxB,IAAK,IAAIC,KAAOD,EACf,GAAIJ,EAAeM,KAAKF,EAAMC,GAC7B,OAAOD,EAAKC,IAUfV,EAAAgB,QAAA,SAA2BP,EAAmDQ,GAC7E,IAAK,IAAIP,KAAOD,EACf,GAAIJ,EAAeM,KAAKF,EAAMC,KAId,IAHAO,GAAWP,IAAKA,EAAKR,MAAQO,EAAaC,IAAQ,kBACxDD,EAAaC,KAGrB,QAUJV,EAAAkB,QAAA,SAA2BC,EAAWC,GACrC,MAAMxB,EAAiCU,OAAOe,OAAO,MACrD,IAAK,MAAMC,KAAWH,EAAM,CAC3B,MAAMT,EAAMU,EAAQE,GACpB,IAAIC,EAAS3B,EAAOc,GACfa,IACJA,EAAS3B,EAAOc,OAEjBa,EAAOX,KAAKU,GAEb,OAAO1B,GAGRI,EAAAwB,QAAA,SAA2BC,GAC1B,MAAM7B,EAA+BU,OAAOe,OAAO,MAMnD,OALII,GACHA,EAAST,QAAQ,CAACd,EAAOQ,KACxBd,EAAOc,GAAOR,IAGTN,sDC5FR,SAAgB8B,EAAgBC,GAC/B,MAAO,CAACJ,EAAab,EAAakB;AACjC,IAAIC,EAAuB,KACvBC,EAAsB,KAU1B,GARgC,mBAArBF,EAAW1B,OACrB2B,EAAQ,QACRC,EAAKF,EAAW1B,OACoB,mBAAnB0B,EAAWG,MAC5BF,EAAQ,MACRC,EAAKF,EAAWG,MAGZD,EACJ,MAAM,IAAI1B,MAAM,iBAGjBwB,EAAWC,GAAUF,EAAMG,EAAIpB,qDAjBjCV,EAAA0B,gBAAAA,EAqBA1B,EAAAgC,QAAA,SAAwBT,EAAab,EAAakB,GACjD,IAAIC,EAAuB,KACvBC,EAAsB,KAc1B,GAZgC,mBAArBF,EAAW1B,OACrB2B,EAAQ,QAGW,KAFnBC,EAAKF,EAAW1B,OAERH,QACPkC,QAAQC,KAAK,kEAEsB,mBAAnBN,EAAWG,MAC5BF,EAAQ,MACRC,EAAKF,EAAWG,MAGZD,EACJ,MAAM,IAAI1B,MAAM,iBAGjB,MAAM+B,cAAyBzB,IAE/BkB,EAAWC,GAAU,YAAaO,GAUjC,OATKC,KAAKhC,eAAe8B,IACxB7B,OAAOgC,eAAeD,KAAMF,GAC3BI,cAAc,EACdC,YAAY,EACZC,UAAU,EACVvC,MAAO4B,EAAIY,MAAML,KAAMD,KAIlBC,KAAKF,KAQdnC,EAAA2C,SAAA,SAA4BC,EAAeC,EAA8BC,GACxE,OAAOpB,EAAgB,CAACI,EAAIpB,KAC3B,MAAMqC,eAAwBrC,IACxBsC,sBAAgCtC,IAEtC,OAAO,YAAwB0B,GACzBC,KAAKW,KACTX,KAAKW,GAAaF,EAAuBA,SAAyBG,GAGnEC,aAAab,KAAKU,IAEdF,IACHR,KAAKW,GAAaH,EAAQR,KAAKW,MAAeZ,GAC9CA,GAAQC,KAAKW,KAGdX,KAAKU,GAAYI,WAAW,KAC3BrB,EAAGY,MAAML,KAAMD,GACfC,KAAKW,GAAaF,EAAuBA,SAAyBG,GAChEL;CCgHN,SAAgBQ,EAAcC,EAAcC,GAAwB,GASnE,SAASC,EAAczC,GACtB,IAAI0C,EAAS,EACTtD,EAAQ,EACZ,KAAOsD,EAAS1C,GAAO,CACtB,MAAM2C,EAAKJ,EAAKK,WAAWC,GAC3B,GAAIF,GAAE,IAAyBA,GAAE,GAChCvD,EAAgB,GAARA,EAAauD,EAAE,QAEnB,GAAIA,GAAE,IAAwBA,GAAE,GACpCvD,EAAgB,GAARA,EAAauD,EAAE,GAAsB,OAEzC,CAAA,KAAIA,GAAE,IAAwBA,GAAE,KAIpC,MAHAvD,EAAgB,GAARA,EAAauD,EAAE,GAAsB,GAK9CE,IACAH,IAKD,OAHIA,EAAS1C,IACZZ,GAAS,GAEHA,EAmIR,SAAS0D,IAOR,GALA1D,EAAQ,GACR2D,EAAS,EAETC,EAAcH,EAEVA,GAAO7D,EAGV,OADAgE,EAAchE,EACPiE,EAAK,GAGb,IAAIC,EAAOX,EAAKK,WAAWC,GAE3B,GAAIM,EAAaD,GAAO,CACvB,GACCL,IACAzD,GAASgE,OAAOC,aAAaH,GAC7BA,EAAOX,EAAKK,WAAWC,SACfM,EAAaD,IAEtB,OAAOD,EAAK,GAIb,GAAIK,EAAYJ,GAOf,OANAL,IACAzD,GAASgE,OAAOC,aAAaH,GACrB,KAAJA,GAA8D,KAApBX,EAAKK,WAAWC,KAC7DA,IACAzD,GAAS,MAEH6D,EAAK,GAGb,OAAQC,GAEP,KAAA,IAEC,OADAL,IACOI,EAAK,EACb,KAAA,IAEC,OADAJ,IACOI,EAAK,EACb,KAAA,GAEC,OADAJ,IACOI,EAAK,EACb,KAAA,GAEC,OADAJ,IACOI,EAAK,EACb,KAAA,GAEC,OADAJ,IACOI,EAAK,EACb,KAAA,GAEC,OADAJ,IACOI,EAAK,EAGb,KAAA,GAGC,OAFAJ,IACAzD,EA3IH,WAEC,IAAIN,EAAS,GACZyE,EAAQV,EAET,OAAa,CACZ,GAAIA,GAAO7D,EAAK,CACfF,GAAUyD,EAAKiB,UAAUD,EAAOV,GAChCE,EAAS,EACT,MAED,IAAIJ,EAAKJ,EAAKK,WAAWC,GACzB,GAAM,KAAFF,EAAmC,CACtC7D,GAAUyD,EAAKiB,UAAUD,EAAOV,GAChCA,IACA,MAED,GAAM,KAAFF,EAAJ,CA+CA,GAAIA,GAAM,GAAKA,GAAM,GAAM,CAC1B,GAAIW,EAAYX,GAAK,CACpB7D,GAAUyD,EAAKiB,UAAUD,EAAOV,GAChCE,EAAS,EACT,MAEAA,EAAS,EAIXF,QAzDA,CAGC,GAFA/D,GAAUyD,EAAKiB,UAAUD,EAAOV,KAChCA,GACW7D,EAAK,CACf+D,EAAS,EACT,MAGD,OADAJ,EAAKJ,EAAKK,WAAWC,MAEpB,KAAA,GACC/D,GAAU,IACV,MACD,KAAA,GACCA,GAAU,KACV,MACD,KAAA,GACCA,GAAU,IACV,MACD,KAAA,GACCA,GAAU,KACV,MACD,KAAA;AACCA,GAAU,KACV,MACD,KAAA,IACCA,GAAU,KACV,MACD,KAAA,IACCA,GAAU,KACV,MACD,KAAA,IACCA,GAAU,KACV,MACD,KAAA,IACC,MAAM6D,EAAKF,EAAc,GACrBE,GAAM,EACT7D,GAAUsE,OAAOC,aAAaV,GAE9BI,EAAS,EAEV,MACD,QACCA,EAAS,EAEXQ,EAAQV,GAeV,OAAO/D,EA+DG2E,GACDR,EAAK,GAGb,KAAA,GACC,MAAMM,EAAQV,EAAM,EAEpB,GAA4B,KAAxBN,EAAKK,WAAWC,EAAM,GAA6B,CAGtD,IAFAA,GAAO,EAEAA,EAAM7D,IACRsE,EAAYf,EAAKK,WAAWC,KAGhCA,IAID,OADAzD,EAAQmD,EAAKiB,UAAUD,EAAOV,GACvBI,EAAK,GAIb,GAA4B,KAAxBV,EAAKK,WAAWC,EAAM,GAAgC,CACzDA,GAAO,EAEP,MAAMa,EAAa1E,EAAM,EACzB,IAAI2E,GAAgB,EACpB,KAAOd,EAAMa,GAAY,CAGxB,GAAM,KAFKnB,EAAKK,WAAWC,IAEmC,KAAxBN,EAAKK,WAAWC,EAAM,GAA6B,CACxFA,GAAO,EACPc,GAAgB,EAChB,MAEDd,IASD,OANKc,IACJd,IACAE,EAAS,GAGV3D,EAAQmD,EAAKiB,UAAUD,EAAOV,GACvBI,EAAK,GAKb,OAFA7D,GAASgE,OAAOC,aAAaH,GAC7BL,IACOI,EAAK,GAGb,KAAA,GAGC,GAFA7D,GAASgE,OAAOC,aAAaH,KAC7BL,IACY7D,IAAQ4E,EAAQrB,EAAKK,WAAWC,IAC3C,OAAOI,EAAK,GAKd,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GAEC,OADA7D,GA3PH,WACC,MAAMmE,EAAQV,EACd,GAAwB,KAApBN,EAAKK,WAAWC,GACnBA,SAGA,IADAA,IACOA,EAAMN,EAAKtD,QAAU2E,EAAQrB,EAAKK,WAAWC,KACnDA,IAGF,GAAIA,EAAMN,EAAKtD,QAA8B,KAApBsD,EAAKK,WAAWC,GAA6B,CAErE,OADAA,EACUN,EAAKtD,QAAU2E,EAAQrB,EAAKK,WAAWC,KAOhD,OADAE,EAAS,EACFR,EAAKiB,UAAUD,EAAOV,GAL7B,IADAA,IACOA,EAAMN,EAAKtD,QAAU2E,EAAQrB,EAAKK,WAAWC,KACnDA,IAOH,IAAIgB,EAAMhB;CACV,GAAIA,EAAMN,EAAKtD,SAA+B,KAApBsD,EAAKK,WAAWC,IAAiD,MAApBN,EAAKK,WAAWC,IAKtF,MAJAA,EACUN,EAAKtD,QAA8B,KAApBsD,EAAKK,WAAWC,IAAoD,KAApBN,EAAKK,WAAWC,KACxFA,IAEGA,EAAMN,EAAKtD,QAAU2E,EAAQrB,EAAKK,WAAWC,IAAO,CAEvD,IADAA,IACOA,EAAMN,EAAKtD,QAAU2E,EAAQrB,EAAKK,WAAWC,KACnDA,IAEDgB,EAAMhB,OAENE,EAAS,EAGX,OAAOR,EAAKiB,UAAUD,EAAOM,GAqNlBC,GACFb,EAAK,GAEb,QAEC,KAAOJ,EAAM7D,GAqBhB,SAAmCkE,GAClC,GAAIC,EAAaD,IAASI,EAAYJ,GACrC,OAAO,EAER,OAAQA,GACP,KAAA,IACA,KAAA,GACA,KAAA,IACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACC,OAAO,EAET,OAAO,EApCea,CAA0Bb,IAC7CL,IACAK,EAAOX,EAAKK,WAAWC,GAExB,GAAIG,IAAgBH,EAAK,CAGxB,OAFAzD,EAAQmD,EAAKiB,UAAUR,EAAaH,IAGnC,IAAK,OAAQ,OAAOI,EAAK,EACzB,IAAK,QAAS,OAAOA,EAAK,EAC1B,IAAK,OAAQ,OAAOA,EAAK,EAE1B,OAAOA,EAAK,GAKb,OAFA7D,GAASgE,OAAOC,aAAaH,GAC7BL,IACOI,EAAK,IA1Tf,IAAIJ,EAAM,EACT7D,EAAMuD,EAAKtD,OACXG,EAAgB,GAChB4D,EAAc,EACdC,EAAK,GACLF,EAAS,EAoVV,OACCiB,YAzTD,SAAqBC,GACpBpB,EAAMoB,EACN7E,EAAQ,GACR4D,EAAc,EACdC,EAAK,GACLF,EAAS,GAqTTmB,YAAa,IAAMrB,EACnBsB,KAAM3B,EAXP,WACC,IAAI1D,EACJ,GACCA,EAASgE,UACDhE,GAAM,IAAoCA,GAAM,IACzD,OAAOA,GAMkCgE,EACzCsB,SAAU,IAAMnB,EAChBoB,cAAe,IAAMjF,EACrBkF,eAAgB,IAAMtB,EACtBuB,eAAgB,IAAM1B,EAAMG,EAC5BwB,cAAe,IAAMzB,GAIvB,SAASI,EAAaR,GACrB,OAAS,KAAFA,GAAiC,IAAFA,GAA+B,KAAFA,GAAuC,KAAFA,GACrG,MAAFA,GAA4C,OAAFA,GAA+BA,GAAE,MAA6BA,GAAE,MACxG,OAAFA,GAA8C,OAAFA,GAA6C,QAAFA,GAA4C,QAAFA,EAGnI,SAASW,EAAYX;AACpB,OAAS,KAAFA,GAAoC,KAAFA,GAA0C,OAAFA,GAAyC,OAAFA,EAGzH,SAASiB,EAAQjB,GAChB,OAAOA,GAAE,IAAyBA,GAAE,GAwarC,SAAgB8B,EAAYC,GAC3B,IAAKA,EAAKC,SAAWD,EAAKC,OAAOC,SAChC,SAED,MAAMC,EAAOJ,EAAYC,EAAKC,QAC9B,GAAyB,aAArBD,EAAKC,OAAOG,KAAqB,CACpC,MAAMlF,EAAM8E,EAAKC,OAAOC,SAAS,GAAGxF,MACpCyF,EAAK/E,KAAKF,QACJ,GAAyB,UAArB8E,EAAKC,OAAOG,KAAkB,CACxC,MAAMC,EAAQL,EAAKC,OAAOC,SAASI,QAAQN,IAC5B,IAAXK,GACHF,EAAK/E,KAAKiF,GAGZ,OAAOF,EAMR,SAAgBI,EAAaP,GAC5B,OAAQA,EAAKI,MACZ,IAAK,QACJ,OAAOJ,EAAKE,SAAUM,IAAID,GAC3B,IAAK,SACJ,MAAME,EAAM3F,OAAOe,OAAO,MAC1B,IAAK,IAAI6E,KAAQV,EAAKE,SAAW,CAChC,MAAMS,EAAYD,EAAKR,SAAU,GAC7BS,IACHF,EAAIC,EAAKR,SAAU,GAAGxF,OAAS6F,EAAaI,IAG9C,OAAOF,EACR,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,UACJ,OAAOT,EAAKtF,MACb,QACC,QAKH,SAAgBkG,EAASZ,EAAYa,EAAgBC,GAAoB,GACxE,OAAQD,GAAUb,EAAKa,QAAUA,EAAUb,EAAKa,OAASb,EAAKzF,QAAYuG,GAAsBD,IAAYb,EAAKa,OAASb,EAAKzF,OAMhI,SAAgBwG,EAAiBf,EAAYa,EAAgBC,GAAoB,GAChF,GAAIF,EAASZ,EAAMa,EAAQC,GAAoB,CAC9C,MAAMZ,EAAWF,EAAKE,SACtB,GAAIc,MAAMC,QAAQf,GACjB,IAAK,IAAI7F,EAAI,EAAGA,EAAI6F,EAAS3F,QAAU2F,EAAS7F,GAAGwG,QAAUA,EAAQxG,IAAK,CACzE,MAAM6G,EAAOH,EAAiBb,EAAS7F,GAAIwG,EAAQC,GACnD,GAAII,EACH,OAAOA,EAKV,OAAOlB,GAST,SAAgBmB,EAAMtD,EAAcuD,EAAsBC,EAAwBC,EAAaC,SAI9F,SAASC,EAAaC,GACrB,OAAOA,EAAgB,IAAMA,EAAcC,EAAS9B,iBAAkB8B,EAAS7B,kBAAoB,KAAM,EAE1G,SAAS8B,EAAiBF;AACzB,OAAOA,EAAiBG,GAAWH,EAAcG,EAAKF,EAAS9B,iBAAkB8B,EAAS7B,kBAAoB,KAAM,EAerH,SAASzB,IACR,OAAa,CACZ,MAAMG,EAAQmD,EAASjC,OACvB,OAAQiC,EAAS5B,iBAChB,KAAA,EACC+B,EAAW,IACX,MACD,KAAA,EACCA,EAAW,IACX,MACD,KAAA,EACCA,EAAW,IACX,MACD,KAAA,EACMC,GACJD,EAAW,IAEZ,MACD,KAAA,EACCA,EAAW,IACX,MACD,KAAA,EACCA,EAAW,IAGb,OAAQtD,GACP,KAAA,GACA,KAAA,GACKuD,EACHD,EAAW,IAEXE,IAED,MACD,KAAA,GACCF,EAAW,GACX,MACD,KAAA,GACA,KAAA,GACC,MACD,QACC,OAAOtD,IAKX,SAASsD,EAAYG,EAAuBC,KAAmCC,MAE9E,GADAC,EAAQH,GACJC,EAAe1H,OAAS2H,EAAU3H,OAAS,EAAG,CACjD,IAAIgE,EAAQmD,EAAShC,WACrB,KAAY,KAALnB,GAA0B,CAChC,IAAuC,IAAnC0D,EAAe3B,QAAQ/B,GAAe,CACzCH,IACA,MACM,IAAkC,IAA9B8D,EAAU5B,QAAQ/B,GAC5B,MAEDA,EAAQH,MAKX,SAASgE,EAAYC,GACpB,MAAM3H,EAAQgH,EAAS/B,gBAOvB,OANI0C,EACHC,EAAe5H,GAEf6H,EAAiB7H,GAElB0D,KACO,EAkCR,SAASoE,IACR,OAAuB,KAAnBd,EAAShC,YACZmC,EAAW,MAA0C,EAAA,KAC9C,IAERO,GAAY,GACW,IAAnBV,EAAShC,YACZ+C,EAAY,KACZrE,IAEKsE,KACJb,EAAW,MAAmC,EAAA,KAG/CA,EAAW,MAAmC,EAAA,KAExC,GAmER,SAASa,IACR,OAAQhB,EAAShC,YAChB,KAAA,EACC,OAnCH,WACCiD,IACAvE,IAEA,IAAIwE,GAAa,EACjB,KAA0B,IAAnBlB,EAAShC,YAAkE,KAAnBgC,EAAShC,YAA+B,CACtG,GAAuB,IAAnBgC,EAAShC,YAMZ,GALKkD,GACJf,EAAW,SAEZY,EAAY,KACZrE,IACuB,IAAnBsD,EAAShC,YAA+CmD,EAC3D,WAESD,GACVf,EAAW,SAEPa,KACJb,EAAW,MAAmC,EAAA,IAE/Ce,GAAa,EAQd,OANAE,IACuB,IAAnBpB,EAAShC,WACZmC,EAAW,GAAsC,OAEjDzD,KAEM,EAME2E,GACR,KAAA,EACC,OArEH,WACCC,IACA5E,IAEA,IAAIwE,GAAa;CACjB,KAA0B,IAAnBlB,EAAShC,YAAgE,KAAnBgC,EAAShC,YAA+B,CACpG,GAAuB,IAAnBgC,EAAShC,YAMZ,GALKkD,GACJf,EAAW,SAEZY,EAAY,KACZrE,IACuB,IAAnBsD,EAAShC,YAA6CmD,EACzD,WAESD,GACVf,EAAW,SAEPW,KACJX,EAAW,MAAmC,EAAA,IAE/Ce,GAAa,EAQd,OANAK,IACuB,IAAnBvB,EAAShC,WACZmC,EAAW,GAAoC,OAE/CzD,KAEM,EAwCE8E,GACR,KAAA,GACC,OAAOd,GAAY,GACpB,QACC,OA3HH,WACC,OAAQV,EAAShC,YAChB,KAAA,GACC,IAAIhF,EAAQ,EACZ,IAEsB,iBADrBA,EAAQyI,KAAKC,MAAM1B,EAAS/B,oBAE3BkC,EAAW,GACXnH,EAAQ,GAER,MAAO2I,GACRxB,EAAW,GAEZS,EAAe5H,GACf,MACD,KAAA,EACC4H,EAAe,MACf,MACD,KAAA,EACCA,GAAe,GACf,MACD,KAAA,EACCA,GAAe,GACf,MACD,QACC,OAAO,EAGT,OADAlE,KACO,EA+FEkF,IAzNV,MAAM5B,EAAW9D,EAAcC,GAAM,GAS/BmF,EAAgBxB,EAAaJ,EAAQ4B,eAC1CT,EAAmBZ,EAAcP,EAAQmB,kBACzCU,EAAczB,EAAaJ,EAAQ6B,aACnCN,EAAenB,EAAaJ,EAAQuB,cACpCG,EAAatB,EAAaJ,EAAQ0B,YAClCR,EAAiBX,EAAcP,EAAQkB,gBACvCG,EAAcd,EAAcP,EAAQqB,aACpCV,EAAYP,EAAaJ,EAAQW,WACjCI,EAAUR,EAAcP,EAAQe,SAE3BL,EAAmBT,GAAWA,EAAQS,iBACtCe,EAAqBxB,GAAWA,EAAQwB,mBA0M9C,OADAzE,IACuB,KAAnBsD,EAAShC,aAGRgD,KAIkB,KAAnBhB,EAAShC,YACZmC,EAAW,UAEL,IANNA,EAAW,UACJ,IA0CT,SAAS0B,EAAmB7I,GAC3B,cAAeA,GACd,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,0DAvzClB,SAAkB8I;AACjBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,iBAAA,GAAA,mBAPD,CAAkBhJ,EAAAgJ,YAAAhJ,EAAAgJ,gBAUlB,SAAkBC,GACjBA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,kBAAA,IAAA,oBACAA,EAAAA,EAAA,mBAAA,IAAA,qBACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,IAAA,IAAA,MAjBD,CAAkBjJ,EAAAiJ,aAAAjJ,EAAAiJ,iBAiElB,SAAkBC;AACjBA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,uBAAA,IAAA,yBACAA,EAAAA,EAAA,sBAAA,IAAA,wBACAA,EAAAA,EAAA,sBAAA,IAAA,wBACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,uBAAA,IAAA,yBACAA,EAAAA,EAAA,iBAAA,IAAA,mBAhBD,CAAkBlJ,EAAAkJ,iBAAAlJ,EAAAkJ,oBA6DlB,IAAiBpC,GAAjB,SAAiBA,GACHA,EAAAC,SACZsB,oBAAoB,GAFtB,CAAiBvB,EAAA9G,EAAA8G,eAAA9G,EAAA8G,kBAyDjB9G,EAAAoD,cAAAA,EAqXA,IAAW+F,GAAX,SAAWA,GACVA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,kBAAA,KAAA;AAEAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,mBAAA,MAAA,qBAIAA,EAAAA,EAAA,SAAA,KAAA,WAGAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,OAAA,MAAA,SACAA,EAAAA,EAAA,OAAA,MAAA,SACAA,EAAAA,EAAA,QAAA,MAAA,UACAA,EAAAA,EAAA,QAAA,MAAA,UACAA,EAAAA,EAAA,gBAAA,MAAA,kBACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,iBAAA,MAAA,mBACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,mBAAA,MAAA,qBACAA,EAAAA,EAAA,iBAAA,OAAA,mBACAA,EAAAA,EAAA,kBAAA,MAAA,oBACAA,EAAAA,EAAA,MAAA,MAAA,QAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IAEAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA;AACAA,EAAAA,EAAA,GAAA,IAAA,KAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,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C3sB,IAAK,IAAM,KAAMjH,QAAS,IAAM3D,QAAQqc,QAAQ,OAGlG,IAAamb,QAGZl3B,YAA0Cm3B,GAAArpC,KAAAqpC,YAAAA,EADlCrpC,KAAAspC,sBAAwB,2DAGhCp3B,UACC,OAAON,QAAQqc,aAAQrtB,GAGxBsR,IAAIm1B,EAAmBvoC,GACtB,MAAMyqC,KACNtrC,OAAO4hB,KAAK/gB,GAAMH,QAAQN,IACpB2B,KAAKspC,sBAAsBr4B,KAAK5S,KACpCkrC,EAAalrC,GAAOS,EAAKT,MAG3B2B,KAAKqpC,YAAYrjB,mBAAmBqhB,IAAakC,KAhBtCH,EAAWvX,GAGV+B,EAAA,EAAA3K,EAAAlC,cAHDqiB,GAAAzrC,EAAAyrC,YAAAA;CAsCb,MAAML,GACL,oBACA,oBACA,kBACA,oBACA,uBACA,qBACA,gBACA,wBACA,iBACA,oBACA,sBACA,2BACA,0BACA,8BACA,yBACA,sBACA,kCACA,2BACA,4CACA,kCACA,kBACA,wBACA,wBACA,qCACA,6BACA,0BACA,+BACA,gCACA,8BACA,6BACA,2BACA,sBACA,oBACA,sBACA,uBACA,oCACA,iCACA,2CACA,4BACA,iCACA,8BACA,0BACA,yBACA,2BACA,uBACA,4BACA,8BACA,4BACA,6BACA,wBACA,oCACA,qBACA,wBACA,uBACA,mCACA,0BACA,iCACA,4BACA,6BACA,kBACA,iBACA,6BACA,uBACA,qBACA,qBACA,4BACA,oBACA,qBACA,sBACA,yBAEA,sBACA,uBACA,yBACA,8BACA,2BACA,+BACA,wBACA,qBACA,0BACA,iBACA,sBACA,iBACA,YACA,gBACA,+BACA,kBACA,cACA,sBACA,6BACA,gCACA,sBACA,mBACA,iCACA,8BACA,wBACA,mBACA,iCACA,8CACA,4BACA,yCACA,mCACA,6BACA,0BACA,8BACA;CAGDprC,EAAA0qC,uBAAAA,EA2BA1qC,EAAA6rC,qBAAA,SAAqClB,EAAqCmB,GACzE,OAAOA,EAAkBC,uBAAuB32B,IAC/B,IAAZA,EAAM6mB,QAAoC7mB,EAAM42B,aAMnDrB,EAAiB3B,UAAU,qBAC1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","file":"cliProcessMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport interface IStringDictionary<V> {\n\t[name: string]: V;\n}\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport interface INumberDictionary<V> {\n\t[idx: number]: V;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn from[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebouceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebouceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet value = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\tvalue = -1;\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tch = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch = scanHexDigits(4);\n\t\t\t\t\t\tif (ch >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhiteSpace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhiteSpace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhiteSpace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhiteSpace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getLiteralNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getLiteralNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\treturn true;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nfunction getLiteralNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tdefault: return 'null';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { sep, posix, normalize } from 'vs/base/common/path';\nimport { endsWith, ltrim, startsWithIgnoreCase, rtrim, startsWith } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename } from 'vs/base/common/resources';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: string;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\t// TODO: isidor use resources.relative\n\t\t\t\tpathLabel = normalize(ltrim(resource.path.substr(baseResource.uri.path.length), posix.sep)!);\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = (baseResource && baseResource.name) ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider) {\n\t\tres = tildify(res, userHomeProvider.userHome);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? startsWith(path, normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[]): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${sep}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(sep) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(sep) + sep.length);\n\t\t\tpath = path.substr(path.indexOf(sep) + sep.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(sep);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(sep);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(sep) > -1) ? sep + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = endsWith(paths[otherPathIndex], subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (endsWith(segments[0], ':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + sep + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + sep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + sep + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string): string {\n\tif (isMacintosh) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tfor (let i = fullPath.length - 1; i >= 1; i--) {\n\t\tconst code = fullPath.charCodeAt(i);\n\t\tif (code === CharCode.Slash || code === CharCode.Backslash) {\n\t\t\treturn { parentPath: fullPath.substr(0, i), name: fullPath.substr(i + 1) };\n\t\t}\n\t}\n\treturn { parentPath: '', name: fullPath };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\nimport { Agent } from './request';\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: Number(proxyEndpoint.port),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t};\n\n\tconst Ctor = requestURL.protocol === 'http:'\n\t\t? await import('http-proxy-agent')\n\t\t: await import('https-proxy-agent');\n\n\treturn new Ctor(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { dirname, basename } from 'vs/base/common/path';\nimport * as objects from 'vs/base/common/objects';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport * as extfs from 'vs/base/node/extfs';\nimport { isWindows } from 'vs/base/common/platform';\n\nexport interface IConfigurationChangeEvent<T> {\n\tconfig: T;\n}\n\nexport interface IConfigWatcher<T> {\n\tpath: string;\n\thasParseErrors: boolean;\n\n\treload(callback: (config: T) => void): void;\n\tgetConfig(): T;\n}\n\nexport interface IConfigOptions<T> {\n\tonError: (error: Error | string) => void;\n\tdefaultConfig: T;\n\tchangeBufferDelay?: number;\n\tparse?: (content: string, errors: any[]) => T;\n\tinitCallback?: (config: T) => void;\n}\n\n/**\n * A simple helper to watch a configured file for changes and process its contents as JSON object.\n * Supports:\n * - comments in JSON files and errors\n * - symlinks for the config file itself\n * - delayed processing of changes to accomodate for lots of changes\n * - configurable defaults\n */\nexport class ConfigWatcher<T> implements IConfigWatcher<T>, IDisposable {\n\tprivate cache: T;\n\tprivate parseErrors: json.ParseError[];\n\tprivate disposed: boolean;\n\tprivate loaded: boolean;\n\tprivate timeoutHandle: NodeJS.Timer | null;\n\tprivate disposables: IDisposable[];\n\tprivate readonly _onDidUpdateConfiguration: Emitter<IConfigurationChangeEvent<T>>;\n\tprivate configName: string;\n\n\tconstructor(private _path: string, private options: IConfigOptions<T> = { defaultConfig: Object.create(null), onError: error => console.error(error) }) {\n\t\tthis.disposables = [];\n\t\tthis.configName = basename(this._path);\n\n\t\tthis._onDidUpdateConfiguration = new Emitter<IConfigurationChangeEvent<T>>();\n\t\tthis.disposables.push(this._onDidUpdateConfiguration);\n\n\t\tthis.registerWatcher();\n\t\tthis.initAsync();\n\t}\n\n\tpublic get path(): string {\n\t\treturn this._path;\n\t}\n\n\tpublic get hasParseErrors(): boolean {\n\t\treturn this.parseErrors && this.parseErrors.length > 0;\n\t}\n\n\tpublic get onDidUpdateConfiguration(): Event<IConfigurationChangeEvent<T>> {\n\t\treturn this._onDidUpdateConfiguration.event;\n\t}\n\n\tprivate initAsync(): void {\n\t\tthis.loadAsync(config => {\n\t\t\tif (!this.loaded) {\n\t\t\t\tthis.updateCache(config); // prevent race condition if config was loaded sync already\n\t\t\t}\n\t\t\tif (this.options.initCallback) {\n\t\t\t\tthis.options.initCallback(this.getConfig());\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateCache(value: T): void {\n\t\tthis.cache = value;\n\t\tthis.loaded = true;\n\t}\n\n\tprivate loadSync(): T {\n\t\ttry {\n\t\t\treturn this.parse(fs.readFileSync(this._path).toString());\n\t\t} catch (error) {\n\t\t\treturn this.options.defaultConfig;\n\t\t}\n\t}\n\n\tprivate loadAsync(callback: (config: T) => void): void {\n\t\tfs.readFile(this._path, (error, raw) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(this.options.defaultConfig);\n\t\t\t}\n\n\t\t\treturn callback(this.parse(raw.toString()));\n\t\t});\n\t}\n\n\tprivate parse(raw: string): T {\n\t\tlet res: T;\n\t\ttry {\n\t\t\tthis.parseErrors = [];\n\t\t\tres = this.options.parse ? this.options.parse(raw, this.parseErrors) : json.parse(raw, this.parseErrors);\n\t\t\treturn res || this.options.defaultConfig;\n\t\t} catch (error) {\n\t\t\t// Ignore parsing errors\n\t\t\treturn this.options.defaultConfig;\n\t\t}\n\t}\n\n\tprivate registerWatcher(): void {\n\n\t\t// Watch the parent of the path so that we detect ADD and DELETES\n\t\tconst parentFolder = dirname(this._path);\n\t\tthis.watch(parentFolder, true);\n\n\t\t// Check if the path is a symlink and watch its target if so\n\t\tfs.lstat(this._path, (err, stat) => {\n\t\t\tif (err || stat.isDirectory()) {\n\t\t\t\treturn; // path is not a valid file\n\t\t\t}\n\n\t\t\t// We found a symlink\n\t\t\tif (stat.isSymbolicLink()) {\n\t\t\t\tfs.readlink(this._path, (err, realPath) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn; // path is not a valid symlink\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.watch(realPath, false);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate watch(path: string, isParentFolder: boolean): void {\n\t\tif (this.disposed) {\n\t\t\treturn; // avoid watchers that will never get disposed by checking for being disposed\n\t\t}\n\n\t\tthis.disposables.push(extfs.watch(path,\n\t\t\t(type, file) => this.onConfigFileChange(type, file, isParentFolder),\n\t\t\t(error: string) => this.options.onError(error)\n\t\t));\n\t}\n\n\tprivate onConfigFileChange(eventType: string, filename: string | undefined, isParentFolder: boolean): void {\n\t\tif (isParentFolder) {\n\n\t\t\t// Windows: in some cases the filename contains artifacts from the absolute path\n\t\t\t// see https://github.com/nodejs/node/issues/19170\n\t\t\t// As such, we have to ensure that the filename basename is used for comparison.\n\t\t\tif (isWindows && filename && filename !== this.configName) {\n\t\t\t\tfilename = basename(filename);\n\t\t\t}\n\n\t\t\tif (filename !== this.configName) {\n\t\t\t\treturn; // a change to a sibling file that is not our config file\n\t\t\t}\n\t\t}\n\n\t\tif (this.timeoutHandle) {\n\t\t\tglobal.clearTimeout(this.timeoutHandle);\n\t\t\tthis.timeoutHandle = null;\n\t\t}\n\n\t\t// we can get multiple change events for one change, so we buffer through a timeout\n\t\tthis.timeoutHandle = global.setTimeout(() => this.reload(), this.options.changeBufferDelay || 0);\n\t}\n\n\tpublic reload(callback?: (config: T) => void): void {\n\t\tthis.loadAsync(currentConfig => {\n\t\t\tif (!objects.equals(currentConfig, this.cache)) {\n\t\t\t\tthis.updateCache(currentConfig);\n\n\t\t\t\tthis._onDidUpdateConfiguration.fire({ config: this.cache });\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(currentConfig);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getConfig(): T {\n\t\tthis.ensureLoaded();\n\n\t\treturn this.cache;\n\t}\n\n\tprivate ensureLoaded(): void {\n\t\tif (!this.loaded) {\n\t\t\tthis.updateCache(this.loadSync());\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (exception.message) {\n\t\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), exception.stack || exception.stacktrace);\n\t\t}\n\n\t\treturn detectSystemErrorMessage(exception);\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message;\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = extension => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = 'pprice.better-merge';\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = value => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { rimraf } from 'vs/base/node/pfs';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\tprivate environmentService: IEnvironmentService,\n\t\tprivate logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string;\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace';\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind;\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\textensionsManagementServuce: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementServuce.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementServuce.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.del(this.extensionsManifestCache).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { forEach } from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes[key];\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn this._nodes[this._hashFn(data)];\n\t}\n\n\tisEmpty(): boolean {\n\t\tfor (const _key in this._nodes) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\t_serviceBrand: any;\n\n\tdownload(uri: URI, to?: string, cancellationToken?: CancellationToken): Promise<string>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface ParsedArgs {\n\t[arg: string]: any;\n\t_: string[];\n\t'folder-uri'?: string | string[];\n\t'file-uri'?: string | string[];\n\t_urls?: string[];\n\thelp?: boolean;\n\tversion?: boolean;\n\tstatus?: boolean;\n\twait?: boolean;\n\twaitMarkerFilePath?: string;\n\tdiff?: boolean;\n\tadd?: boolean;\n\tgoto?: boolean;\n\t'new-window'?: boolean;\n\t'unity-launch'?: boolean; // Always open a new window, except if opening the first window or opening a file or folder as part of the launch.\n\t'reuse-window'?: boolean;\n\tlocale?: string;\n\t'user-data-dir'?: string;\n\t'prof-startup'?: string;\n\t'prof-startup-prefix'?: string;\n\t'prof-append-timers'?: string;\n\t'prof-modules'?: string;\n\tverbose?: boolean;\n\ttrace?: boolean;\n\t'trace-category-filter'?: string;\n\t'trace-options'?: string;\n\tlog?: string;\n\tlogExtensionHostCommunication?: boolean;\n\t'extensions-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\textensionDevelopmentPath?: string; // either a local path or a URI\n\textensionTestsPath?: string; // either a local path or a URI\n\t'inspect-extensions'?: string;\n\t'inspect-brk-extensions'?: string;\n\tdebugId?: string;\n\t'inspect-search'?: string;\n\t'inspect-brk-search'?: string;\n\t'disable-extensions'?: boolean;\n\t'disable-extension'?: string | string[];\n\t'list-extensions'?: boolean;\n\t'show-versions'?: boolean;\n\t'install-extension'?: string | string[];\n\t'uninstall-extension'?: string | string[];\n\t'enable-proposed-api'?: string | string[];\n\t'open-url'?: boolean;\n\t'skip-getting-started'?: boolean;\n\t'skip-release-notes'?: boolean;\n\t'sticky-quickopen'?: boolean;\n\t'disable-restore-windows'?: boolean;\n\t'disable-telemetry'?: boolean;\n\t'export-default-configuration'?: string;\n\t'install-source'?: string;\n\t'disable-updates'?: string;\n\t'disable-crash-reporter'?: string;\n\t'skip-add-to-recently-opened'?: boolean;\n\t'max-memory'?: string;\n\t'file-write'?: boolean;\n\t'file-chmod'?: boolean;\n\t'upload-logs'?: string;\n\t'driver'?: string;\n\t'driver-verbose'?: boolean;\n\tremote?: string;\n\t'nodeless'?: boolean; // TODO@ben revisit electron5 nodeless support\n}\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport interface IEnvironmentService {\n\t_serviceBrand: any;\n\n\targs: ParsedArgs;\n\n\texecPath: string;\n\tcliPath: string;\n\tappRoot: string;\n\n\tuserHome: string;\n\tuserDataPath: string;\n\n\tappNameLong: string;\n\tappQuality?: string;\n\tappSettingsHome: string;\n\tappSettingsPath: string;\n\tappKeybindingsPath: string;\n\n\tsettingsSearchBuildId?: number;\n\tsettingsSearchUrl?: string;\n\n\tglobalStorageHome: string;\n\tworkspaceStorageHome: string;\n\n\tbackupHome: string;\n\tbackupWorkspacesPath: string;\n\n\tuntitledWorkspacesHome: URI;\n\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tbuiltinExtensionsPath: string;\n\textensionsPath: string;\n\textensionDevelopmentLocationURI?: URI;\n\textensionTestsLocationURI?: URI;\n\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tdebugSearch: IDebugParams;\n\n\tlogExtensionHostCommunication: boolean;\n\n\tisBuilt: boolean;\n\twait: boolean;\n\tstatus: boolean;\n\n\t// logging\n\tlog?: string;\n\tlogsPath: string;\n\tverbose: boolean;\n\n\tskipGettingStarted: boolean | undefined;\n\tskipReleaseNotes: boolean | undefined;\n\n\tskipAddToRecentlyOpened: boolean;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tnodeCachedDataDir?: string;\n\n\tinstallSourcePath: string;\n\tdisableUpdates: boolean;\n\tdisableCrashReporter: boolean;\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: { [languageId: string]: IGalleryExtensionAsset };\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\treadonly manifest: IExtensionManifest;\n\tmetadata: IGalleryMetadata;\n\treadmeUrl: URI | null;\n\tchangelogUrl: URI | null;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionGalleryService {\n\t_serviceBrand: any;\n\tisEnabled(): boolean;\n\tquery(options?: IQueryOptions): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, operation: InstallOperation): Promise<string>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tloadAllDependencies(dependencies: IExtensionIdentifier[], token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport interface IExtensionManagementService {\n\t_serviceBrand: any;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier>;\n\tinstall(vsix: URI): Promise<IExtensionIdentifier>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<void>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const IExtensionManagementServerService = createDecorator<IExtensionManagementServerService>('extensionManagementServerService');\n\nexport interface IExtensionManagementServer {\n\textensionManagementService: IExtensionManagementService;\n\tauthority: string;\n\tlabel: string;\n}\n\nexport interface IExtensionManagementServerService {\n\t_serviceBrand: any;\n\treadonly localExtensionManagementServer: IExtensionManagementServer;\n\treadonly remoteExtensionManagementServer: IExtensionManagementServer | null;\n\tgetExtensionManagementServer(location: URI): IExtensionManagementServer | null;\n}\n\nexport const enum EnablementState {\n\tDisabled,\n\tWorkspaceDisabled,\n\tEnabled,\n\tWorkspaceEnabled\n}\n\nexport const IExtensionEnablementService = createDecorator<IExtensionEnablementService>('extensionEnablementService');\n\nexport interface IExtensionEnablementService {\n\t_serviceBrand: any;\n\n\treadonly allUserExtensionsDisabled: boolean;\n\n\t/**\n\t * Event to listen on for extension enablement changes\n\t */\n\tonEnablementChanged: Event<IExtension[]>;\n\n\t/**\n\t * Returns all disabled extension identifiers for current workspace\n\t * Returns an empty array if none exist\n\t */\n\tgetDisabledExtensions(): Promise<IExtensionIdentifier[]>;\n\n\t/**\n\t * Returns the enablement state for the given extension\n\t */\n\tgetEnablementState(extension: IExtension): EnablementState;\n\n\t/**\n\t * Returns `true` if the enablement can be changed.\n\t */\n\tcanChangeEnablement(extension: IExtension): boolean;\n\n\t/**\n\t * Returns `true` if the given extension identifier is enabled.\n\t */\n\tisEnabled(extension: IExtension): boolean;\n\n\t/**\n\t * Enable or disable the given extension.\n\t * if `workspace` is `true` then enablement is done for workspace, otherwise globally.\n\t *\n\t * Returns a promise that resolves to boolean value.\n\t * if resolves to `true` then requires restart for the change to take effect.\n\t *\n\t * Throws error if enablement is requested for workspace and there is no workspace\n\t */\n\tsetEnablement(extensions: IExtension[], state: EnablementState): Promise<boolean[]>;\n}\n\nexport interface IExtensionsConfigContent {\n\trecommendations: string[];\n\tunwantedRecommendations: string[];\n}\n\nexport type RecommendationChangeNotification = {\n\textensionId: string,\n\tisRecommended: boolean\n};\n\nexport type DynamicRecommendation = 'dynamic';\nexport type ExecutableRecommendation = 'executable';\nexport type CachedRecommendation = 'cached';\nexport type ApplicationRecommendation = 'application';\nexport type ExtensionRecommendationSource = IWorkspace | IWorkspaceFolder | URI | DynamicRecommendation | ExecutableRecommendation | CachedRecommendation | ApplicationRecommendation;\n\nexport interface IExtensionRecommendation {\n\textensionId: string;\n\tsources: ExtensionRecommendationSource[];\n}\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('extensionTipsService');\n\nexport interface IExtensionTipsService {\n\t_serviceBrand: any;\n\tgetAllRecommendationsWithReason(): { [id: string]: { reasonId: ExtensionRecommendationReason, reasonText: string }; };\n\tgetFileBasedRecommendations(): IExtensionRecommendation[];\n\tgetOtherRecommendations(): Promise<IExtensionRecommendation[]>;\n\tgetWorkspaceRecommendations(): Promise<IExtensionRecommendation[]>;\n\tgetKeymapRecommendations(): IExtensionRecommendation[];\n\ttoggleIgnoredRecommendation(extensionId: string, shouldIgnore: boolean): void;\n\tgetAllIgnoredRecommendations(): { global: string[], workspace: string[] };\n\tonRecommendationChange: Event<RecommendationChangeNotification>;\n}\n\nexport const enum ExtensionRecommendationReason {\n\tWorkspace,\n\tFile,\n\tExecutable,\n\tDynamicWorkspace,\n\tExperimental\n}\n\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { create } from 'vs/base/common/types';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\n// PROXY\n// Ghetto-declare of the global Proxy object. This isn't the proper way\n// but allows us to run this code in the browser without IE11.\ndeclare var Proxy: any;\nconst _canUseProxy = typeof Proxy === 'function';\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: any;\n\n\tprotected readonly _services: ServiceCollection;\n\tprotected readonly _strict: boolean;\n\tprotected readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[]=[]>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn.apply(undefined, [accessor, ...args]);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>create.apply(null, [ctor].concat(args, serviceArgs));\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tfunction throwCycleError() {\n\t\t\tconst err = new Error('[createInstance] cyclic dependency between services');\n\t\t\terr.message = graph.toString();\n\t\t\tthrow err;\n\t\t}\n\n\t\tlet count = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// TODO@joh use the graph to find a cycle\n\t\t\t// a weak heuristic for cycle checks\n\t\t\tif (count++ > 100) {\n\t\t\t\tthrowCycleError();\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tlet dependencies = _util.getServiceDependencies(item.desc.ctor);\n\t\t\tfor (let dependency of dependencies) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrowCycleError();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - creating UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation || !_canUseProxy) {\n\t\t\t// eager instantiation or no support JS proxies (e.g. IE11)\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue(() => this._createInstance(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(_target: T, prop: PropertyKey): any {\n\t\t\t\t\treturn idle.getValue()[prop];\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const enum LanguageType {\n\tCore = 1,\n\tContributed\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\t_serviceBrand: any;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(type?: LanguageType): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogService extends IDisposable {\n\t_serviceBrand: any;\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logServices: ILogService[]) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: any;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, NullLogService, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n// @ts-ignore\nimport * as fs from 'fs';\n\nexport function createSpdLogService(processName: string, logLevel: LogLevel, logsFolder: string): ILogService {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\tconst logger = new _spdlog.RotatingLogger(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t\tlogger.setLevel(0);\n\n\t\treturn new SpdLogService(logger, logLevel);\n\t} catch (e) {\n\t\t/** Desktop console.error(e); */\n\t\treturn new NullLogService();\n\t}\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\treturn new _spdlog.RotatingLogger(name, filename, filesize, filecount);\n\t} catch (e) {\n\t\tif (typeof window === 'undefined') {\n\t\t\t// @ts-ignore\n\t\t\tself.postMessage({\n\t\t\t\t$type: 'create-log',\n\t\t\t\t$data: {\n\t\t\t\t\tname, filename, filesize, filecount\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst dirs = filename.split('/');\n\t\t\tdirs.pop();\n\t\t\tlet abDirPath = '';\n\t\t\tdirs.forEach(dir => {\n\t\t\t\tif (!dir) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tabDirPath += `/${dir}`;\n\t\t\t\tif (!fs.existsSync(abDirPath)) {\n\t\t\t\t\tfs.mkdirSync(abDirPath);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!fs.existsSync(filename)) {\n\t\t\t\tfs.writeFileSync(filename, '', 'utf-8');\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tflush: function () {},\n\t\t\tcritical: function (content) {\n\t\t\t\tif (typeof window === 'undefined') {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t$type: 'log-critical',\n\t\t\t\t\t\t$data: {\n\t\t\t\t\t\t\tfilename, content\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst fileContent = fs.readFileSync(filename).toString();\n\t\t\t\t\tfs.writeFileSync(filename, fileContent + content, 'utf-8');\n\t\t\t\t}\n\t\t\t},\n\t\t\tclearFormatters: function () {},\n\t\t} as spdlog.RotatingLogger;\n\t}\n}\n\nclass SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\tprivate readonly logger: spdlog.RotatingLogger,\n\t\tlevel: LogLevel = LogLevel.Error\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.logger.trace(this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.logger.debug(this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.logger.info(this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.logger.warn(this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis.logger.error(this.format(array));\n\t\t\t} else {\n\t\t\t\tthis.logger.error(this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.logger.critical(this.format(arguments));\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.logger.drop();\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport pkg from 'vs/platform/product/node/package';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(pkg.version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, ParsedArgs, IDebugParams, IExtensionHostDebugParams } from 'vs/platform/environment/common/environment';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport { memoize } from 'vs/base/common/decorators';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nconst xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tif (xdgRuntimeDir) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\treturn path.join(xdgRuntimeDir, `vscode-${scope}-${pkg.version}-${type}.sock`);\n\t}\n\n\treturn path.join(userDataPath, `${pkg.version}-${type}.sock`);\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${pkg.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport class EnvironmentService implements IEnvironmentService {\n\n\t_serviceBrand: any;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): string { return os.homedir(); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\tget appNameLong(): string { return product.nameLong; }\n\n\tget appQuality(): string | undefined { return product.quality; }\n\n\t@memoize\n\tget appSettingsHome(): string { return path.join(this.userDataPath, 'User'); }\n\n\t@memoize\n\tget appSettingsPath(): string { return path.join(this.appSettingsHome, 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget settingsSearchBuildId(): number | undefined { return product.settingsSearchBuildId; }\n\n\t@memoize\n\tget settingsSearchUrl(): string | undefined { return product.settingsSearchUrl; }\n\n\t@memoize\n\tget appKeybindingsPath(): string { return path.join(this.appSettingsHome, 'keybindings.json'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): string { return path.join(this.userDataPath, 'Backups'); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn path.join(this.userHome, product.dataFolderName, 'extensions');\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget skipGettingStarted(): boolean { return !!this._args['skip-getting-started']; }\n\n\tget skipReleaseNotes(): boolean { return !!this._args['skip-release-notes']; }\n\n\tget skipAddToRecentlyOpened(): boolean { return !!this._args['skip-add-to-recently-opened']; }\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\n\t@memoize\n\tget debugSearch(): IDebugParams { return parseSearchPort(this._args, this.isBuilt); }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget log(): string | undefined { return this._args.log; }\n\n\tget wait(): boolean { return !!this._args.wait; }\n\n\tget logExtensionHostCommunication(): boolean { return !!this._args.logExtensionHostCommunication; }\n\n\tget status(): boolean { return !!this._args.status; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nexport function parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\treturn { port, break: brk, debugId };\n}\n\nfunction parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t} else {\n\t\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n\t}\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { getGalleryExtensionId, areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport product from 'vs/platform/product/node/product';\n\nexport function isUIExtension(manifest: IExtensionManifest, uiContributions: string[], configurationService: IConfigurationService): boolean {\n\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\tconst configuredUIExtensions = configurationService.getValue<string[]>('_workbench.uiExtensions') || [];\n\tif (configuredUIExtensions.length) {\n\t\tif (configuredUIExtensions.indexOf(extensionId) !== -1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (configuredUIExtensions.indexOf(`-${extensionId}`) !== -1) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tswitch (manifest.extensionKind) {\n\t\tcase 'ui': return true;\n\t\tcase 'workspace': return false;\n\t\tdefault: {\n\t\t\tif (isNonEmptyArray(product.uiExtensions) && product.uiExtensions.some(id => areSameExtensions({ id }, { id: extensionId }))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (manifest.main) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (manifest.contributes) {\n\t\t\t\tif (!uiContributions.length || Object.keys(manifest.contributes).some(contribution => uiContributions.indexOf(contribution) === -1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Default is UI Extension\n\t\t\treturn true;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService, LanguageType } from 'vs/platform/localizations/common/localizations';\nimport product from 'vs/platform/product/node/product';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nconst systemLanguages: string[] = ['de', 'en', 'en-US', 'es', 'fr', 'it', 'ja', 'ko', 'ru', 'zh-CN', 'zh-TW'];\nif (product.quality !== 'stable') {\n\tsystemLanguages.push('hu');\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(type: LanguageType): Promise<string[]> {\n\t\tif (type === LanguageType.Core) {\n\t\t\treturn Promise.resolve([...systemLanguages]);\n\t\t}\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tconst languages = type === LanguageType.Contributed ? Object.keys(languagePacks) : [...systemLanguages, ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate data: { [id: string]: any; };\n\n\tconstructor() {\n\t\tthis.data = {};\n\t}\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n\n\t\tthis.data[id] = data;\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.hasOwnProperty(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data[id] || null;\n\t}\n}\n\nexport const Registry = <IRegistry>new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport * as strings from 'vs/base/common/strings';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\tAPPLICATION = 1,\n\tWINDOW,\n\tRESOURCE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tcontributedByExtension?: boolean;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\nexport const allSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\n\nexport const editorConfigurationSchemaId = 'vscode://schemas/settings/editor';\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly editorConfigurationSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers: string[] = [];\n\tprivate overridePropertyPattern: string;\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.editorConfigurationSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting' };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t\tthis.updateSchemaForOverrideSettingsConfiguration(configuration);\n\t\t});\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.editorConfigurationSchema.properties![key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tthis.overrideIdentifiers.push(...overrideIdentifiers);\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW, overridable: boolean = false): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\toverridable = configuration.overridable || overridable;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tlet message;\n\t\t\t\tif (validate && (message = validateProperty(key))) {\n\t\t\t\t\tconsole.warn(message);\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\t// Inherit overridable property from parent\n\t\t\t\tif (overridable) {\n\t\t\t\t\tproperty.overridable = true;\n\t\t\t\t}\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope, overridable));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tfunction register(configuration: IConfigurationNode) {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t}\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchemaForOverrideSettingsConfiguration(configuration: IConfigurationNode): void {\n\t\tif (configuration.id !== SETTINGS_OVERRRIDE_NODE_ID) {\n\t\t\tthis.update(configuration);\n\t\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tlet patternProperties: IJSONSchema = allSettings.patternProperties[this.overridePropertyPattern];\n\t\tif (!patternProperties) {\n\t\t\tpatternProperties = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: 'Unknown Identifier. Use language identifiers',\n\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t};\n\t\t}\n\n\t\tdelete allSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete applicationSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete windowSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete resourceSettings.patternProperties[this.overridePropertyPattern];\n\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tallSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tapplicationSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\twindowSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tresourceSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate update(configuration: IConfigurationNode): void {\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (properties[key].overridable) {\n\t\t\t\t\tthis.editorConfigurationSchema.properties![key] = this.getConfigurationProperties()[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tsubNodes.forEach(subNode => this.update(subNode));\n\t\t}\n\t}\n\n\tprivate computeOverridePropertyPattern(): void {\n\t\tthis.overridePropertyPattern = this.overrideIdentifiers.length ? OVERRIDE_PATTERN_WITH_SUBSTITUTION.replace('${0}', this.overrideIdentifiers.map(identifier => strings.createRegExp(identifier, false).source).join('|')) : OVERRIDE_PROPERTY;\n\t}\n}\n\nconst SETTINGS_OVERRRIDE_NODE_ID = 'override';\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nconst OVERRIDE_PATTERN_WITH_SUBSTITUTION = '\\\\[(${0})\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): { [key: string]: ConfigurationScope } {\n\tconst scopes = {};\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes[key] = configurationProperties[key].scope;\n\t}\n\tscopes['launch'] = ConfigurationScope.RESOURCE;\n\tscopes['task'] = ConfigurationScope.RESOURCE;\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ResourceMap } from 'vs/base/common/map';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChangeEvent {\n\n\tsource: ConfigurationTarget;\n\taffectedKeys: string[];\n\taffectsConfiguration(configuration: string, resource?: URI): boolean;\n\n\t// Following data is used for telemetry\n\tsourceConfig: any;\n\n\t// Following data is used for Extension host configuration event\n\tchangedConfiguration: IConfigurationModel;\n\tchangedConfigurationByResource: ResourceMap<IConfigurationModel>;\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: any;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): {\n\t\tdefault: T,\n\t\tuser: T,\n\t\tworkspace?: T,\n\t\tworkspaceFolder?: T,\n\t\tmemory?: T,\n\t\tvalue: T,\n\t};\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: { [folder: string]: IConfigurationModel };\n\tisComplete: boolean;\n}\n\nexport function compare(from: IConfigurationModel, to: IConfigurationModel): { added: string[], removed: string[], updated: string[] } {\n\tconst added = to.keys.filter(key => from.keys.indexOf(key) === -1);\n\tconst removed = from.keys.filter(key => to.keys.indexOf(key) === -1);\n\tconst updated: string[] = [];\n\n\tfor (const key of from.keys) {\n\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\tif (!objects.equals(value1, value2)) {\n\t\t\tupdated.push(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\tif (configurationProperties[keyInOverrideRaw] && configurationProperties[keyInOverrideRaw].overridable) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object') {\n\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.user !== 'undefined' || typeof setting.workspace !== 'undefined' || typeof setting.workspaceFolder !== 'undefined') {\n\t\treturn setting.value;\n\t} else if (typeof legacySetting.user !== 'undefined' || typeof legacySetting.workspace !== 'undefined' || typeof legacySetting.workspaceFolder !== 'undefined') {\n\t\treturn legacySetting.value;\n\t} else {\n\t\treturn setting.default;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, IConfigurationChangeEvent, ConfigurationTarget, removeFromValueTree, toOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`))\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined): void {\n\t\tif (content) {\n\t\t\tconst raw = this.parseContent(content);\n\t\t\tconst configurationModel = this.parseRaw(raw);\n\t\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t\t}\n\t}\n\n\tprotected parseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected parseRaw(raw: any): IConfigurationModel {\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n}\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _userConfiguration: ConfigurationModel,\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): {\n\t\tdefault: C,\n\t\tuser: C,\n\t\tworkspace?: C,\n\t\tworkspaceFolder?: C\n\t\tmemory?: C\n\t\tvalue: C,\n\t} {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\t\treturn {\n\t\t\tdefault: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key),\n\t\t\tuser: overrides.overrideIdentifier ? this._userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._userConfiguration.freeze().getValue(key),\n\t\t\tworkspace: workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined, //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\t\tworkspaceFolder: folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined,\n\t\t\tmemory: overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key),\n\t\t\tvalue: consolidateConfigurationModel.getValue(key)\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this._userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateUserConfiguration(userConfiguration: ConfigurationModel): void {\n\t\tthis._userConfiguration = userConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folders.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tget user(): ConfigurationModel {\n\t\treturn this._userConfiguration;\n\t}\n\n\tget workspace(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folders(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this._userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | null {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri) || null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this._userConfiguration.contents,\n\t\t\t\toverrides: this._userConfiguration.overrides,\n\t\t\t\tkeys: this._userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: this._folderConfigurations.keys().reduce((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult[folder.toString()] = { contents, overrides, keys };\n\t\t\t\treturn result;\n\t\t\t}, Object.create({})),\n\t\t\tisComplete: true\n\t\t};\n\t}\n\n\tallKeys(workspace: Workspace | undefined): string[] {\n\t\tlet keys = this.keys(workspace);\n\t\tlet all = [...keys.default];\n\t\tconst addKeys = (keys) => {\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (all.indexOf(key) === -1) {\n\t\t\t\t\tall.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\taddKeys(keys.user);\n\t\taddKeys(keys.workspace);\n\t\tfor (const resource of this.folders.keys()) {\n\t\t\taddKeys(this.folders.get(resource)!.keys);\n\t\t}\n\t\treturn all;\n\t}\n}\n\nexport class AbstractConfigurationChangeEvent {\n\n\tprotected doesConfigurationContains(configuration: ConfigurationModel, config: string): boolean {\n\t\tlet changedKeysTree = configuration.contents;\n\t\tlet requestedTree = toValuesTree({ [config]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\tchangedKeysTree = changedKeysTree[key];\n\t\t\tif (!changedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected updateKeys(configuration: ConfigurationModel, keys: string[], resource?: URI): void {\n\t\tfor (const key of keys) {\n\t\t\tconfiguration.setValue(key, {});\n\t\t}\n\t}\n}\n\nexport class ConfigurationChangeEvent extends AbstractConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate _source: ConfigurationTarget;\n\tprivate _sourceConfig: any;\n\n\tconstructor(\n\t\tprivate _changedConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _changedConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>()) {\n\t\tsuper();\n\t}\n\n\tget changedConfiguration(): IConfigurationModel {\n\t\treturn this._changedConfiguration;\n\t}\n\n\tget changedConfigurationByResource(): ResourceMap<IConfigurationModel> {\n\t\treturn this._changedConfigurationByResource;\n\t}\n\n\tchange(event: ConfigurationChangeEvent): ConfigurationChangeEvent;\n\tchange(keys: string[], resource?: URI): ConfigurationChangeEvent;\n\tchange(arg1: any, arg2?: any): ConfigurationChangeEvent {\n\t\tif (arg1 instanceof ConfigurationChangeEvent) {\n\t\t\tthis._changedConfiguration = this._changedConfiguration.merge(arg1._changedConfiguration);\n\t\t\tfor (const resource of arg1._changedConfigurationByResource.keys()) {\n\t\t\t\tlet changedConfigurationByResource = this.getOrSetChangedConfigurationForResource(resource);\n\t\t\t\tchangedConfigurationByResource = changedConfigurationByResource.merge(arg1._changedConfigurationByResource.get(resource)!);\n\t\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.changeWithKeys(arg1, arg2);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttelemetryData(source: ConfigurationTarget, sourceConfig: any): ConfigurationChangeEvent {\n\t\tthis._source = source;\n\t\tthis._sourceConfig = sourceConfig;\n\t\treturn this;\n\t}\n\n\tget affectedKeys(): string[] {\n\t\tconst keys = [...this._changedConfiguration.keys];\n\t\tthis._changedConfigurationByResource.forEach(model => keys.push(...model.keys));\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tget source(): ConfigurationTarget {\n\t\treturn this._source;\n\t}\n\n\tget sourceConfig(): any {\n\t\treturn this._sourceConfig;\n\t}\n\n\taffectsConfiguration(config: string, resource?: URI): boolean {\n\t\tlet configurationModelsToSearch: ConfigurationModel[] = [this._changedConfiguration];\n\n\t\tif (resource) {\n\t\t\tlet model = this._changedConfigurationByResource.get(resource);\n\t\t\tif (model) {\n\t\t\t\tconfigurationModelsToSearch.push(model);\n\t\t\t}\n\t\t} else {\n\t\t\tconfigurationModelsToSearch.push(...this._changedConfigurationByResource.values());\n\t\t}\n\n\t\tfor (const configuration of configurationModelsToSearch) {\n\t\t\tif (this.doesConfigurationContains(configuration, config)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate changeWithKeys(keys: string[], resource?: URI): void {\n\t\tlet changedConfiguration = resource ? this.getOrSetChangedConfigurationForResource(resource) : this._changedConfiguration;\n\t\tthis.updateKeys(changedConfiguration, keys);\n\t}\n\n\tprivate getOrSetChangedConfigurationForResource(resource: URI): ConfigurationModel {\n\t\tlet changedConfigurationByResource = this._changedConfigurationByResource.get(resource);\n\t\tif (!changedConfigurationByResource) {\n\t\t\tchangedConfigurationByResource = new ConfigurationModel();\n\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t}\n\t\treturn changedConfigurationByResource;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ConfigurationModelParser, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { ConfigWatcher } from 'vs/base/node/config';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport class UserConfiguration extends Disposable {\n\n\tprivate userConfigModelWatcher: ConfigWatcher<ConfigurationModelParser>;\n\tprivate initializePromise: Promise<void>;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tconstructor(private settingsPath: string) {\n\t\tsuper();\n\t}\n\n\tinitialize(): Promise<ConfigurationModel> {\n\t\tif (!this.initializePromise) {\n\t\t\tthis.initializePromise = new Promise<void>((c, e) => {\n\t\t\t\tthis.userConfigModelWatcher = new ConfigWatcher(this.settingsPath, {\n\t\t\t\t\tchangeBufferDelay: 300, onError: error => onUnexpectedError(error), defaultConfig: new ConfigurationModelParser(this.settingsPath), parse: (content: string, parseErrors: any[]) => {\n\t\t\t\t\t\tconst userConfigModelParser = new ConfigurationModelParser(this.settingsPath);\n\t\t\t\t\t\tuserConfigModelParser.parse(content);\n\t\t\t\t\t\tparseErrors = [...userConfigModelParser.errors];\n\t\t\t\t\t\treturn userConfigModelParser;\n\t\t\t\t\t}, initCallback: () => c(undefined)\n\t\t\t\t});\n\t\t\t\tthis._register(this.userConfigModelWatcher);\n\n\t\t\t\t// Listeners\n\t\t\t\tthis._register(this.userConfigModelWatcher.onDidUpdateConfiguration(() => this._onDidChangeConfiguration.fire(this.userConfigModelWatcher.getConfig().configurationModel)));\n\t\t\t});\n\t\t}\n\t\treturn this.initializePromise.then(() => this.userConfigModelWatcher.getConfig().configurationModel);\n\t}\n\n\tinitializeSync(): ConfigurationModel {\n\t\tthis.initialize();\n\t\treturn this.userConfigModelWatcher.getConfig().configurationModel;\n\t}\n\n\treload(): Promise<ConfigurationModel> {\n\t\treturn this.initialize().then(() => new Promise<ConfigurationModel>(c => this.userConfigModelWatcher.reload(userConfigModelParser => c(userConfigModelParser.configurationModel))));\n\t}\n\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, compare, isConfigurationOverrides, IConfigurationData } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationChangeEvent, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { UserConfiguration } from 'vs/platform/configuration/node/configuration';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\t_serviceBrand: any;\n\n\tprivate _configuration: Configuration;\n\tprivate userConfiguration: UserConfiguration;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.userConfiguration = this._register(new UserConfiguration(environmentService.appSettingsPath));\n\n\t\t// Initialize\n\t\tconst defaults = new DefaultConfigurationModel();\n\t\tconst user = this.userConfiguration.initializeSync();\n\t\tthis._configuration = new Configuration(defaults, user);\n\n\t\t// Listeners\n\t\tthis._register(this.userConfiguration.onDidChangeConfiguration(userConfigurationModel => this.onDidChangeUserConfiguration(userConfigurationModel)));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t}\n\n\tget configuration(): Configuration {\n\t\treturn this._configuration;\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): {\n\t\tdefault: T,\n\t\tuser: T,\n\t\tworkspace?: T,\n\t\tworkspaceFolder?: T\n\t\tvalue: T\n\t} {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void> {\n\t\treturn folder ? Promise.resolve(undefined) :\n\t\t\tthis.userConfiguration.reload().then(userConfigurationModel => this.onDidChangeUserConfiguration(userConfigurationModel));\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst { added, updated, removed } = compare(this._configuration.user, userConfigurationModel);\n\t\tconst changedKeys = [...added, ...updated, ...removed];\n\t\tif (changedKeys.length) {\n\t\t\tthis._configuration.updateUserConfiguration(userConfigurationModel);\n\t\t\tthis.trigger(changedKeys, ConfigurationTarget.USER);\n\t\t}\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tthis._configuration.updateDefaultConfiguration(new DefaultConfigurationModel());\n\t\tthis.trigger(keys, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(keys: string[], source: ConfigurationTarget): void {\n\t\tthis._onDidChangeConfiguration.fire(new ConfigurationChangeEvent().change(keys).telemetryData(source, this.getTargetConfiguration(source)));\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this._configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this._configuration.user.contents;\n\t\t}\n\t\treturn {};\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IRequestOptions, IRequestContext } from 'vs/base/node/request';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService2');\n\nexport interface IRequestService {\n\t_serviceBrand: any;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n}\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+)(:\\\\d+)?/?$|^$',\n\t\t\t\tdescription: localize('proxy', \"The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tdescription: localize('proxyAuthorization', \"The value to send as the 'Proxy-Authorization' header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS.\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\t_serviceBrand: any;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data: any): void;\n\tremoveItem(key: string): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileAndFlushSync } from 'vs/base/node/extfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport class FileStorage {\n\n\tprivate _database: object | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): object {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn readFile(this.dbPath).then(contents => {\n\t\t\ttry {\n\t\t\t\tthis.lastFlushedSerializedDatabase = contents.toString();\n\t\t\t\tthis._database = JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t\t} catch (error) {\n\t\t\t\tthis._database = {};\n\t\t\t}\n\t\t}, error => {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\tthis._database = {};\n\t\t});\n\t}\n\n\tprivate loadSync(): object {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data: any): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileAndFlushSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\t_serviceBrand: any;\n\n\tprivate static STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data: any): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\t_serviceBrand: any;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\n\tprivate _disposables: IDisposable[] = [];\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\t/* __GDPR__\n\t\t\t\t\"optInStatus\" : {\n\t\t\t\t\t\"optIn\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"BusinessInsight\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.publicLog('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"machineIdFallback\" : {\n\t\t\t\t\t\t\"usingFallbackGuid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"BusinessInsight\", \"isMeasurement\": true }\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.publicLog('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn;\n\t}\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this._commonProperties.then(values => {\n\t\t\t// well known properties\n\t\t\tlet sessionId = values['sessionID'];\n\t\t\tlet instanceId = values['common.instanceId'];\n\t\t\tlet machineId = values['common.machineId'];\n\n\t\t\treturn { sessionId, instanceId, machineId };\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this._userOptIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { IKeybindingService, KeybindingSource } from 'vs/platform/keybinding/common/keybinding';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tisOptedIn: true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tdispose(): Promise<any> | undefined;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tdispose: () => Promise.all(appenders.map(a => a.dispose()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, dispose: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tdispose(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\n/**\n * Only add settings that cannot contain any personal/private information of users (PII).\n */\nconst configurationValueWhitelist = [\n\t'editor.fontFamily',\n\t'editor.fontWeight',\n\t'editor.fontSize',\n\t'editor.lineHeight',\n\t'editor.letterSpacing',\n\t'editor.lineNumbers',\n\t'editor.rulers',\n\t'editor.wordSeparators',\n\t'editor.tabSize',\n\t'editor.indentSize',\n\t'editor.insertSpaces',\n\t'editor.detectIndentation',\n\t'editor.roundedSelection',\n\t'editor.scrollBeyondLastLine',\n\t'editor.minimap.enabled',\n\t'editor.minimap.side',\n\t'editor.minimap.renderCharacters',\n\t'editor.minimap.maxColumn',\n\t'editor.find.seedSearchStringFromSelection',\n\t'editor.find.autoFindInSelection',\n\t'editor.wordWrap',\n\t'editor.wordWrapColumn',\n\t'editor.wrappingIndent',\n\t'editor.mouseWheelScrollSensitivity',\n\t'editor.multiCursorModifier',\n\t'editor.quickSuggestions',\n\t'editor.quickSuggestionsDelay',\n\t'editor.parameterHints.enabled',\n\t'editor.parameterHints.cycle',\n\t'editor.autoClosingBrackets',\n\t'editor.autoClosingQuotes',\n\t'editor.autoSurround',\n\t'editor.autoIndent',\n\t'editor.formatOnType',\n\t'editor.formatOnPaste',\n\t'editor.suggestOnTriggerCharacters',\n\t'editor.acceptSuggestionOnEnter',\n\t'editor.acceptSuggestionOnCommitCharacter',\n\t'editor.snippetSuggestions',\n\t'editor.emptySelectionClipboard',\n\t'editor.wordBasedSuggestions',\n\t'editor.suggestSelection',\n\t'editor.suggestFontSize',\n\t'editor.suggestLineHeight',\n\t'editor.tabCompletion',\n\t'editor.selectionHighlight',\n\t'editor.occurrencesHighlight',\n\t'editor.overviewRulerLanes',\n\t'editor.overviewRulerBorder',\n\t'editor.cursorBlinking',\n\t'editor.cursorSmoothCaretAnimation',\n\t'editor.cursorStyle',\n\t'editor.mouseWheelZoom',\n\t'editor.fontLigatures',\n\t'editor.hideCursorInOverviewRuler',\n\t'editor.renderWhitespace',\n\t'editor.renderControlCharacters',\n\t'editor.renderIndentGuides',\n\t'editor.renderLineHighlight',\n\t'editor.codeLens',\n\t'editor.folding',\n\t'editor.showFoldingControls',\n\t'editor.matchBrackets',\n\t'editor.glyphMargin',\n\t'editor.useTabStops',\n\t'editor.trimAutoWhitespace',\n\t'editor.stablePeek',\n\t'editor.dragAndDrop',\n\t'editor.formatOnSave',\n\t'editor.colorDecorators',\n\n\t'breadcrumbs.enabled',\n\t'breadcrumbs.filePath',\n\t'breadcrumbs.symbolPath',\n\t'breadcrumbs.symbolSortOrder',\n\t'breadcrumbs.useQuickPick',\n\t'explorer.openEditors.visible',\n\t'extensions.autoUpdate',\n\t'files.associations',\n\t'files.autoGuessEncoding',\n\t'files.autoSave',\n\t'files.autoSaveDelay',\n\t'files.encoding',\n\t'files.eol',\n\t'files.hotExit',\n\t'files.trimTrailingWhitespace',\n\t'git.confirmSync',\n\t'git.enabled',\n\t'http.proxyStrictSSL',\n\t'javascript.validate.enable',\n\t'php.builtInCompletions.enable',\n\t'php.validate.enable',\n\t'php.validate.run',\n\t'terminal.integrated.fontFamily',\n\t'window.openFilesInNewWindow',\n\t'window.restoreWindows',\n\t'window.zoomLevel',\n\t'workbench.editor.enablePreview',\n\t'workbench.editor.enablePreviewFromQuickOpen',\n\t'workbench.editor.showTabs',\n\t'workbench.editor.highlightModifiedTabs',\n\t'workbench.editor.swipeToNavigate',\n\t'workbench.sideBar.location',\n\t'workbench.startupEditor',\n\t'workbench.statusBar.visible',\n\t'workbench.welcome.enabled',\n];\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfiguration\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationKeys\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfigurationValues\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationValues\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfigurationValues', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationValues: flattenValues(event.sourceConfig, configurationValueWhitelist)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function keybindingsTelemetry(telemetryService: ITelemetryService, keybindingService: IKeybindingService): IDisposable {\n\treturn keybindingService.onDidUpdateKeybindings(event => {\n\t\tif (event.source === KeybindingSource.User && event.keybindings) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateKeybindings\" : {\n\t\t\t\t\t\"bindings\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateKeybindings', {\n\t\t\t\tbindings: event.keybindings.map(binding => ({\n\t\t\t\t\tkey: binding.key,\n\t\t\t\t\tcommand: binding.command,\n\t\t\t\t\twhen: binding.when,\n\t\t\t\t\targs: binding.args ? true : undefined\n\t\t\t\t}))\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction flattenKeys(value: Object): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: Object): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n\nfunction flattenValues(value: Object, keys: string[]): { [key: string]: any }[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\n\treturn keys.reduce((array, key) => {\n\t\tconst v = key.split('.')\n\t\t\t.reduce((tmp, k) => tmp && typeof tmp === 'object' ? tmp[k] : undefined, value);\n\t\tif (typeof v !== 'undefined') {\n\t\t\tarray.push({ [key]: v });\n\t\t}\n\t\treturn array;\n\t}, <{ [key: string]: any }[]>[]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { isObject } from 'vs/base/common/types';\nimport { safeStringify, mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://fes.bytedance.net/collect';\n\t}\n\treturn client;\n}\n\ninterface Properties {\n\t[key: string]: string;\n}\n\ninterface Measurements {\n\t[key: string]: number;\n}\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.ITelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tprivate static _getData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\t\tconst properties: Properties = Object.create(null);\n\t\tconst measurements: Measurements = Object.create(null);\n\n\t\tconst flat = Object.create(null);\n\t\tAppInsightsAppender._flaten(data, flat);\n\n\t\tfor (let prop in flat) {\n\t\t\t// enforce property names less than 150 char, take the last 150 char\n\t\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\t\tconst value = flat[prop];\n\n\t\t\tif (typeof value === 'number') {\n\t\t\t\tmeasurements[prop] = value;\n\n\t\t\t} else if (typeof value === 'boolean') {\n\t\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tproperties[prop] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tproperties,\n\t\t\tmeasurements\n\t\t};\n\t}\n\n\tprivate static _flaten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\t\tif (!obj) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\t\tconst value = obj[item];\n\t\t\tconst index = prefix ? prefix + item : item;\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tresult[index] = safeStringify(value);\n\n\t\t\t} else if (value instanceof Date) {\n\t\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\t\tresult[index] = value.toISOString();\n\n\t\t\t} else if (isObject(value)) {\n\t\t\t\tif (order < 2) {\n\t\t\t\t\tAppInsightsAppender._flaten(value, result, order + 1, index + '.');\n\t\t\t\t} else {\n\t\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult[index] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = AppInsightsAppender._getData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tdispose(): Promise<any> | undefined {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport function resolveCommonProperties(commit: string | undefined, version: string | undefined, machineId: string | undefined, installSourcePath: string): Promise<{ [name: string]: string | undefined; }> {\n\tconst result: { [name: string]: string | undefined; } = Object.create(null);\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\treturn readFile(installSourcePath, 'utf8').then(contents => {\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\n\t\treturn result;\n\t}, error => {\n\t\treturn result;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { nfcall, ninvoke, Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\t\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\tEvent.once(token.onCancellationRequested)(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName, undefined, token)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\tEvent.once(token.onCancellationRequested)(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName, undefined, token).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = ninvoke(zipfile, zipfile.openReadStream, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null!, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn nfcall<ZipFile>(_openZip, zipFile, lazy ? { lazyEntries: true } : undefined)\n\t\t.then(undefined, err => Promise.reject(toExtractError(err)));\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\tninvoke<Readable>(zipfile, zipfile.openReadStream, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', b => buffers.push(b as Buffer));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { flatten } from 'vs/base/common/arrays';\nimport { extract, ExtractError, zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, groupByExtension, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from '../common/extensionNls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Limiter, createCancelablePromise, CancelablePromise, Queue } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver';\nimport { URI } from 'vs/base/common/uri';\nimport pkg from 'vs/platform/product/node/package';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/node/extensionValidator';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, ExtensionIdentifierWithVersion, isLanguagePackExtension } from 'vs/platform/extensions/common/extensions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { isUIExtension } from 'vs/platform/extensions/node/extensionsUtil';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst ERROR_UNKNOWN = 'unknown';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nfunction parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tconst manifest = JSON.parse(raw);\n\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\tdelete manifest.__metadata;\n\t\t\tc({ manifest, metadata });\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\tconst promises = [\n\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t.then(raw => parseManifest(raw)),\n\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t.then(raw => JSON.parse(raw))\n\t];\n\n\treturn Promise.all<any>(promises).then(([{ manifest, metadata }, translations]) => {\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t});\n}\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata: IGalleryMetadata | null;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\t_serviceBrand: any;\n\n\tprivate systemExtensionsPath: string;\n\tprivate extensionsPath: string;\n\tprivate uninstalledPath: string;\n\tprivate uninstalledFileLimiter: Queue<any>;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionLifecycle: ExtensionsLifecycle;\n\n\tprivate readonly _onInstallExtension = new Emitter<InstallExtensionEvent>();\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = new Emitter<DidInstallExtensionEvent>();\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = new Emitter<IExtensionIdentifier>();\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = new Emitter<DidUninstallExtensionEvent>();\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\tprivate readonly remote: boolean,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionLifecycle = this._register(new ExtensionsLifecycle(environmentService, this.logService));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\treturn this.collectFiles(extension)\n\t\t\t.then(files => zip(path.join(tmpdir(), generateUuid()), files))\n\t\t\t.then(path => URI.file(path));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\treturn this.install(zipLocation, type);\n\t}\n\n\tprivate collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn collectFilesFromDirectory(extension.location.fsPath)\n\t\t\t.then(files => files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f })));\n\n\t}\n\n\tinstall(vsix: URI, type: ExtensionType = ExtensionType.User): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(token => {\n\t\t\treturn this.downloadVsix(vsix).then(downloadLocation => {\n\t\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t.then(manifest => {\n\t\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\t\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, pkg.version)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t\t\t\t\t.then(installedExtensions => {\n\t\t\t\t\t\t\t\tconst existing = installedExtensions.filter(i => areSameExtensions(identifier, i.identifier))[0];\n\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\t\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\t\t\t\t\t\treturn this.uninstall(existing, true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\t\t\t\t\t\t\t\treturn this.getMetadata(getGalleryExtensionId(manifest.publisher, manifest.name))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tmetadata => this.installFromZipPath(identifierWithVersion, zipPath, metadata, type, operation, token),\n\t\t\t\t\t\t\t\t\t\t() => this.installFromZipPath(identifierWithVersion, zipPath, null, type, operation, token))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\t() => { this.logService.info('Successfully installed the extension:', identifier.id); return identifier; },\n\t\t\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn Promise.resolve(vsix);\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\t\tconst downloadedLocation = path.join(tmpdir(), generateUuid());\n\t\treturn this.downloadService.download(vsix, downloadedLocation).then(() => URI.file(downloadedLocation));\n\t}\n\n\tprivate installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IGalleryMetadata | null, type: ExtensionType, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.toNonCancellablePromise(this.installExtension({ zipPath, identifierWithVersion, metadata }, type, token)\n\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, null).then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t.then(\n\t\t\t\tlocal => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation }); return local; },\n\t\t\t\terror => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error }); return Promise.reject(error); }\n\t\t\t));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension): Promise<void> {\n\t\tconst startTime = new Date().getTime();\n\n\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\tconst onDidInstallExtensionSuccess = (extension: IGalleryExtension, operation: InstallOperation, local: ILocalExtension) => {\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t};\n\n\t\tconst onDidInstallExtensionFailure = (extension: IGalleryExtension, operation: InstallOperation, error) => {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tonDidInstallExtensionFailure(extension, InstallOperation.Install, error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tlet cancellationToken: CancellationToken, successCallback: (a?: any) => void, errorCallback: (e?: any) => any | null;\n\t\t\tcancellablePromise = createCancelablePromise(token => { cancellationToken = token; return new Promise((c, e) => { successCallback = c; errorCallback = e; }); });\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\ttry {\n\t\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\t\tconst existingExtension = installed.filter(i => areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (existingExtension) {\n\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\tif (semver.gt(existingExtension.manifest.version, extension.version)) {\n\t\t\t\t\t\tawait this.uninstall(existingExtension, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.downloadInstallableExtension(extension, operation)\n\t\t\t\t\t.then(installableExtension => this.installExtension(installableExtension, ExtensionType.User, cancellationToken)\n\t\t\t\t\t\t.then(local => pfs.rimraf(installableExtension.zipPath).finally(() => null).then(() => local)))\n\t\t\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, existingExtension)\n\t\t\t\t\t\t.then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t\t\t.then(\n\t\t\t\t\t\tlocal => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionSuccess(extension, operation, local);\n\t\t\t\t\t\t\tsuccessCallback(null);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS));\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\n\t\tif (!compatibleExtension) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install because, the extension '{0}' compatible with current version '{1}' of VS Code is not found.\", extension.identifier.id, pkg.version), INSTALL_ERROR_INCOMPATIBLE));\n\t\t}\n\n\t\tif (this.remote) {\n\t\t\tconst manifest = await this.galleryService.getManifest(extension, CancellationToken.None);\n\t\t\tif (manifest && isUIExtension(manifest, [], this.configurationService) && !isLanguagePackExtension(manifest)) {\n\t\t\t\treturn Promise.reject(new Error(nls.localize('notSupportedUIExtension', \"Can't install extension {0} since UI Extensions are not supported\", extension.identifier.id)));\n\t\t\t}\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\treturn this.findGalleryExtension(extension)\n\t\t\t.then(galleryExtension => {\n\t\t\t\tif (galleryExtension) {\n\t\t\t\t\treturn this.setUninstalled(extension)\n\t\t\t\t\t\t.then(() => this.removeUninstalledExtension(extension)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => this.installFromGallery(galleryExtension),\n\t\t\t\t\t\t\t\te => Promise.reject(new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e))))));\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\")));\n\t\t\t});\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.getExtensionsReport()\n\t\t\t.then(report => getMaliciousExtensionsSet(report).has(extension.identifier.id));\n\t}\n\n\tprivate downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<InstallableExtension> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\treturn this.galleryService.download(extension, operation)\n\t\t\t.then(\n\t\t\t\tzipPath => {\n\t\t\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tmanifest => (<InstallableExtension>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata }),\n\t\t\t\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING))\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING)));\n\t}\n\n\tprivate installExtension(installableExtension: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion)\n\t\t\t.then(\n\t\t\t\tlocal => {\n\t\t\t\t\tif (local) {\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.extractAndInstall(installableExtension, type, token);\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t});\n\t}\n\n\tprivate unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\treturn this.isUninstalled(identifierWithVersion)\n\t\t\t.then<ILocalExtension | null>(isUninstalled => {\n\t\t\t\tif (isUninstalled) {\n\t\t\t\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\t\t\t\treturn this.unsetUninstalled(identifierWithVersion)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(installed => installed.filter(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion))[0]);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst location = type === ExtensionType.User ? this.extensionsPath : this.systemExtensionsPath;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(location, `.${folderName}`);\n\t\tconst extensionPath = path.join(location, folderName);\n\t\treturn pfs.rimraf(extensionPath)\n\t\t\t.then(() => this.extractAndRename(identifier, zipPath, tempPath, extensionPath, token), e => Promise.reject(new ExtensionManagementError(nls.localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING)))\n\t\t\t.then(() => this.scanExtension(folderName, location, type))\n\t\t\t.then(local => {\n\t\t\t\tif (!local) {\n\t\t\t\t\treturn Promise.reject(nls.localize('cannot read', \"Cannot read the extension from {0}\", location));\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\t\t\tif (metadata) {\n\t\t\t\t\tlocal.metadata = metadata;\n\t\t\t\t\treturn this.saveMetadataForLocalExtension(local);\n\t\t\t\t}\n\t\t\t\treturn local;\n\t\t\t}, error => pfs.rimraf(extensionPath).then(() => Promise.reject(error), () => Promise.reject(error)));\n\t}\n\n\tprivate extractAndRename(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, renamePath: string, token: CancellationToken): Promise<void> {\n\t\treturn this.extract(identifier, zipPath, extractPath, token)\n\t\t\t.then(() => this.rename(identifier, extractPath, renamePath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */)\n\t\t\t\t.then(\n\t\t\t\t\t() => this.logService.info('Renamed to', renamePath),\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', extractPath);\n\t\t\t\t\t\treturn pfs.rimraf(extractPath).finally(() => null).then(() => Promise.reject(e));\n\t\t\t\t\t}));\n\t}\n\n\tprivate extract(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${extractPath}`);\n\t\treturn pfs.rimraf(extractPath)\n\t\t\t.then(\n\t\t\t\t() => extract(zipPath, extractPath, { sourcePath: 'extension', overwrite: true }, token)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => this.logService.info(`Extracted extension to ${extractPath}:`, identifier.id),\n\t\t\t\t\t\te => pfs.rimraf(extractPath).finally(() => null)\n\t\t\t\t\t\t\t.then(() => Promise.reject(new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING)))),\n\t\t\t\te => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING)));\n\t}\n\n\tprivate rename(identfier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\treturn pfs.rename(extractPath, renamePath)\n\t\t\t.then(undefined, error => {\n\t\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identfier.id);\n\t\t\t\t\treturn this.rename(identfier, extractPath, renamePath, retryUntil);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new ExtensionManagementError(error.message || nls.localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING));\n\t\t\t});\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | null): Promise<void> {\n\t\tif (this.galleryService.isEnabled()) {\n\t\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\t\tif (installed.manifest.extensionPack) {\n\t\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\treturn this.getInstalled()\n\t\t\t\t\t.then(installed => {\n\t\t\t\t\t\t// filter out installed extensions\n\t\t\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\t\t\tif (names.length) {\n\t\t\t\t\t\t\treturn this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length })\n\t\t\t\t\t\t\t\t.then(galleryResult => {\n\t\t\t\t\t\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\t\t\t\t\t\treturn Promise.all(extensionsToInstall.map(async e => {\n\t\t\t\t\t\t\t\t\t\tif (this.remote) {\n\t\t\t\t\t\t\t\t\t\t\tconst manifest = await this.galleryService.getManifest(e, CancellationToken.None);\n\t\t\t\t\t\t\t\t\t\t\tif (manifest && isUIExtension(manifest, [], this.configurationService) && !isLanguagePackExtension(manifest)) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.logService.info('Ignored installing the UI dependency', e.identifier.id);\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn this.installFromGallery(e);\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t.then(() => null, errors => this.rollback(extensionsToInstall).then(() => Promise.reject(errors), () => Promise.reject(errors)));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed =>\n\t\t\t\tPromise.all(installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))) // Check with version because we want to rollback the exact version\n\t\t\t\t\t.map(local => this.uninstall(local, true))))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.toNonCancellablePromise(this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => {\n\t\t\t\tconst extensionToUninstall = installed.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\t\tif (extensionToUninstall) {\n\t\t\t\t\treturn this.checkForDependenciesAndUninstall(extensionToUninstall, installed).then(() => null, error => Promise.reject(this.joinErrors(error)));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name)));\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal.metadata = metadata;\n\t\treturn this.saveMetadataForLocalExtension(local)\n\t\t\t.then(localExtension => {\n\t\t\t\tthis.manifestCache.invalidate();\n\t\t\t\treturn localExtension;\n\t\t\t});\n\t}\n\n\tprivate saveMetadataForLocalExtension(local: ILocalExtension): Promise<ILocalExtension> {\n\t\tif (!local.metadata) {\n\t\t\treturn Promise.resolve(local);\n\t\t}\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\treturn pfs.readFile(manifestPath, 'utf8')\n\t\t\t.then(raw => parseManifest(raw))\n\t\t\t.then(({ manifest }) => assign(manifest, { __metadata: local.metadata }))\n\t\t\t.then(manifest => pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t')))\n\t\t\t.then(() => local);\n\t}\n\n\tprivate getMetadata(extensionName: string): Promise<IGalleryMetadata | null> {\n\t\treturn this.findGalleryExtensionByName(extensionName)\n\t\t\t.then(galleryExtension => galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : null);\n\t}\n\n\tprivate findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\treturn this.findGalleryExtensionById(local.identifier.uuid)\n\t\t\t\t.then(galleryExtension => galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id));\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ ids: [uuid], pageSize: 1 }).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ names: [name], pageSize: 1 }).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tif (packedExtensions.length) {\n\t\t\t\t\treturn this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t\t}\n\t\t\t\treturn this.uninstallExtensions(extension, [], installed);\n\t\t\t})\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extension !== dependent && otherExtensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, remainingDependents)));\n\t\t\t}\n\t\t}\n\t\treturn Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]).then(() => undefined);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate doUninstall(extension: ILocalExtension): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => this.uninstallExtension(extension))\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(pfs.exists(extension.location.fsPath))\n\t\t\t.then(exists => exists ? null : Promise.reject(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => {\n\t\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\t});\n\t}\n\n\tprivate uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(token => this.scanUserExtensions(false)\n\t\t\t\t.then(userExtensions => this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier))))\n\t\t\t\t.then(() => { this.uninstallingExtensions.delete(local.identifier.id); }));\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\treturn Promise.all<ILocalExtension[]>(promises).then(flatten, errors => Promise.reject(this.joinErrors(errors)));\n\t}\n\n\tprivate scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanExtensions(this.systemExtensionsPath, ExtensionType.System)\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.info('Scanned system extensions:', result.length);\n\t\t\t\treturn result;\n\t\t\t});\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.getDevSystemExtensionsList()\n\t\t\t.then(devSystemExtensionsList => {\n\t\t\t\tif (devSystemExtensionsList.length) {\n\t\t\t\t\treturn this.scanExtensions(this.devSystemExtensionsPath, ExtensionType.System)\n\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\tthis.logService.info('Scanned dev system extensions:', result.length);\n\t\t\t\t\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t});\n\t\treturn Promise.all([systemExtensionsPromise, devSystemExtensionsPromise])\n\t\t\t.then(([systemExtensions, devSystemExtensions]) => [...systemExtensions, ...devSystemExtensions]);\n\t}\n\n\tprivate scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\treturn Promise.all([this.getUninstalledExtensions(), this.scanExtensions(this.extensionsPath, ExtensionType.User)])\n\t\t\t.then(([uninstalled, extensions]) => {\n\t\t\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\tif (excludeOutdated) {\n\t\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Scanned user extensions:', extensions.length);\n\t\t\t\treturn extensions;\n\t\t\t});\n\t}\n\n\tprivate scanExtensions(root: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\treturn pfs.readdir(root)\n\t\t\t.then(extensionsFolders => Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, root, type)))))\n\t\t\t.then(extensions => extensions.filter(e => e && e.identifier));\n\t}\n\n\tprivate scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\treturn pfs.readdir(extensionPath)\n\t\t\t.then(children => readManifest(extensionPath)\n\t\t\t\t.then(({ manifest, metadata }) => {\n\t\t\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : null;\n\t\t\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : null;\n\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name), uuid: metadata ? metadata.id : null };\n\t\t\t\t\treturn <ILocalExtension>{ type, identifier, manifest, metadata, location: URI.file(extensionPath), readmeUrl, changelogUrl };\n\t\t\t\t}))\n\t\t\t.then(undefined, () => null);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<any> {\n\t\treturn this.removeUninstalledExtensions()\n\t\t\t.then(() => this.removeOutdatedExtensions());\n\t}\n\n\tprivate removeUninstalledExtensions(): Promise<void> {\n\t\treturn this.getUninstalledExtensions()\n\t\t\t.then(uninstalled => this.scanExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t\t.then(extensions => {\n\t\t\t\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\t\treturn Promise.all(toRemove.map(e => this.extensionLifecycle.postUninstall(e).then(() => this.removeUninstalledExtension(e))));\n\t\t\t\t})\n\t\t\t).then(() => undefined);\n\t}\n\n\tprivate removeOutdatedExtensions(): Promise<void> {\n\t\treturn this.scanExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t.then(extensions => {\n\t\t\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t\t\t// Outdated extensions\n\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\t\t\treturn Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t\t\t}).then(() => undefined);\n\t}\n\n\tprivate removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn this.removeExtension(extension, 'uninstalled')\n\t\t\t.then(() => this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]))\n\t\t\t.then(() => undefined);\n\t}\n\n\tprivate removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\treturn pfs.rimraf(extension.location.fsPath).then(() => this.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath));\n\t}\n\n\tprivate isUninstalled(identfier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\treturn this.filterUninstalled(identfier).then(uninstalled => uninstalled.length === 1);\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.withUninstalledExtensions(uninstalled => assign(uninstalled, ids.reduce((result, id) => { result[id.key()] = true; return result; }, {} as { [id: string]: boolean })));\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tprivate getUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tprivate async withUninstalledExtensions<T>(fn: (uninstalled: { [id: string]: boolean; }) => T): Promise<T> {\n\t\treturn await this.uninstalledFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.uninstalledPath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(uninstalled => { result = fn(uninstalled); return uninstalled; })\n\t\t\t\t.then(uninstalled => {\n\t\t\t\t\tif (Object.keys(uninstalled).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.uninstalledPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(uninstalled);\n\t\t\t\t\t\treturn pfs.writeFile(this.uninstalledPath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate updateReportCache(): Promise<IReportedExtension[]> {\n\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\n\t\treturn this.galleryService.getExtensionsReport()\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\t\treturn result;\n\t\t\t}, err => {\n\t\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate _devSystemExtensionsFilePath: string | null = null;\n\tprivate get devSystemExtensionsFilePath(): string {\n\t\tif (!this._devSystemExtensionsFilePath) {\n\t\t\tthis._devSystemExtensionsFilePath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'build', 'builtInExtensions.json'));\n\t\t}\n\t\treturn this._devSystemExtensionsFilePath;\n\t}\n\n\tprivate getDevSystemExtensionsList(): Promise<string[]> {\n\t\treturn pfs.readFile(this.devSystemExtensionsFilePath, 'utf8')\n\t\t\t.then<string[]>(raw => {\n\t\t\t\tconst parsed: { name: string }[] = JSON.parse(raw);\n\t\t\t\treturn parsed.map(({ name }) => name);\n\t\t\t});\n\t}\n\n\tprivate toNonCancellablePromise<T>(promise: Promise<T>): Promise<T> {\n\t\treturn new Promise((c, e) => promise.then(result => c(result), error => e(error)));\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog(eventName, assign(extensionData, { success: !error, duration, errorcode }));\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport * as https from 'https';\nimport * as http from 'http';\nimport { Stream } from 'stream';\nimport { parse as parseUrl } from 'url';\nimport { createWriteStream } from 'fs';\nimport { assign } from 'vs/base/common/objects';\nimport { createGunzip } from 'zlib';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\n\nexport type Agent = any;\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface IRequestOptions {\n\ttype?: string;\n\turl?: string;\n\tuser?: string;\n\tpassword?: string;\n\theaders?: any;\n\ttimeout?: number;\n\tdata?: string | Stream;\n\tagent?: Agent;\n\tfollowRedirects?: number;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\nexport interface IRequestContext {\n\t// req: http.ClientRequest;\n\t// res: http.ClientResponse;\n\tres: {\n\t\theaders: { [n: string]: string };\n\t\tstatusCode?: number;\n\t};\n\tstream: Stream;\n}\n\nexport interface IRequestFunction {\n\t(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n}\n\nasync function getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\tconst endpoint = parseUrl(options.url!);\n\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\treturn module.request;\n}\n\nexport function request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\tlet req: http.ClientRequest;\n\n\tconst rawRequestPromise = options.getRawRequest\n\t\t? Promise.resolve(options.getRawRequest(options))\n\t\t: Promise.resolve(getNodeRequest(options));\n\n\treturn rawRequestPromise.then(rawRequest => {\n\n\t\treturn new Promise<IRequestContext>((c, e) => {\n\t\t\tconst endpoint = parseUrl(options.url!);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\trequest(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: Stream = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = stream.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t} else {\n\t\t\t\t\toptions.data.pipe(req);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport function download(filePath: string, context: IRequestContext): Promise<void> {\n\treturn new Promise<void>((c, e) => {\n\t\tconst out = createWriteStream(filePath);\n\n\t\tout.once('finish', () => c(undefined));\n\t\tcontext.stream.once('error', e);\n\t\tcontext.stream.pipe(out);\n\t});\n}\n\nexport function asText(context: IRequestContext): Promise<string | null> {\n\treturn new Promise((c, e) => {\n\t\tif (!isSuccess(context)) {\n\t\t\treturn e('Server returned ' + context.res.statusCode);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\treturn c(null);\n\t\t}\n\n\t\tconst buffer: string[] = [];\n\t\tcontext.stream.on('data', (d: string) => buffer.push(d));\n\t\tcontext.stream.on('end', () => c(buffer.join('')));\n\t\tcontext.stream.on('error', e);\n\t});\n}\n\nexport function asJson<T>(context: IRequestContext): Promise<T | null> {\n\treturn new Promise((c, e) => {\n\t\tif (!isSuccess(context)) {\n\t\t\treturn e('Server returned ' + context.res.statusCode);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\treturn c(null);\n\t\t}\n\n\t\tconst buffer: string[] = [];\n\t\tcontext.stream.on('data', (d: string) => buffer.push(d));\n\t\tcontext.stream.on('end', () => {\n\t\t\ttry {\n\t\t\t\tc(JSON.parse(buffer.join('')));\n\t\t\t} catch (err) {\n\t\t\t\te(err);\n\t\t\t}\n\t\t});\n\t\tcontext.stream.on('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { tmpdir } from 'os';\nimport * as path from 'vs/base/common/path';\nimport { distinct } from 'vs/base/common/arrays';\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestOptions, IRequestContext, download, asJson, asText } from 'vs/base/node/request';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { isEngineValid } from 'vs/platform/extensions/node/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { readFile } from 'vs/base/node/pfs';\nimport { writeFileAndFlushSync } from 'vs/base/node/extfs';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { values } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.map(value => ({ filterType, value }))\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): { [languageId: string]: IGalleryExtensionAsset } {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce((result, file) => {\n\t\tresult[file.assetType.substring(coreTranslationAssetPrefix.length)] = getVersionAsset(version, file.assetType);\n\t\treturn result;\n\t}, {});\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = require.toUrl('./media/defaultIcon.png');\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install') + getStatistic(galleryExtension.statistics, 'updateCount'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\t_serviceBrand: any;\n\n\tprivate extensionsGalleryUrl: string;\n\tprivate extensionsControlUrl: string;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tconst config = product.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(this.environmentService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(options: IQueryOptions = {}): Promise<IPager<IGalleryExtension>> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\t/* __GDPR__\n\t\t\t\"galleryService:query\" : {\n\t\t\t\t\"type\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"text\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, operation: InstallOperation): Promise<string> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst zipPath = path.join(tmpdir(), generateUuid());\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => download(zipPath, context))\n\t\t\t.then(() => log(new Date().getTime() - startTime))\n\t\t\t.then(() => zipPath);\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(JSON.parse);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations[languageId.toUpperCase()];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(JSON.parse);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tloadAllDependencies(extensions: IExtensionIdentifier[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\treturn this.getDependenciesReccursively(extensions.map(e => e.id), [], token);\n\t}\n\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions }) => {\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tif (compatible) {\n\t\t\t\t\treturn Promise.all(galleryExtensions[0].versions.map(v => this.getEngine(v).then(engine => isEngineValid(engine) ? v : null)))\n\t\t\t\t\t\t.then(versions => versions\n\t\t\t\t\t\t\t.filter(v => !!v)\n\t\t\t\t\t\t\t.map(v => ({ version: v!.version, date: v!.lastUpdated })));\n\t\t\t\t} else {\n\t\t\t\t\treturn galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated }));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\n\tprivate loadDependencies(extensionNames: string[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tif (!extensionNames || extensionNames.length === 0) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, extensionNames.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished))\n\t\t\t.withAssetTypes(AssetType.Icon, AssetType.License, AssetType.Details, AssetType.Manifest, AssetType.VSIX)\n\t\t\t.withFilter(FilterType.ExtensionName, ...extensionNames);\n\n\t\treturn this.queryGallery(query, token).then(result => {\n\t\t\tconst dependencies: IGalleryExtension[] = [];\n\t\t\tconst ids: string[] = [];\n\n\t\t\tfor (let index = 0; index < result.galleryExtensions.length; index++) {\n\t\t\t\tconst rawExtension = result.galleryExtensions[index];\n\t\t\t\tif (ids.indexOf(rawExtension.extensionId) === -1) {\n\t\t\t\t\tdependencies.push(toExtension(rawExtension, rawExtension.versions[0], index, query, 'dependencies'));\n\t\t\t\t\tids.push(rawExtension.extensionId);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dependencies;\n\t\t});\n\t}\n\n\tprivate getDependenciesReccursively(toGet: string[], result: IGalleryExtension[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tif (!toGet || !toGet.length) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\t\ttoGet = result.length ? toGet.filter(e => !ExtensionGalleryService.hasExtensionByName(result, e)) : toGet;\n\t\tif (!toGet.length) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\n\t\treturn this.loadDependencies(toGet, token)\n\t\t\t.then(loadedDependencies => {\n\t\t\t\tconst dependenciesSet = new Set<string>();\n\t\t\t\tfor (const dep of loadedDependencies) {\n\t\t\t\t\tif (dep.properties.dependencies) {\n\t\t\t\t\t\tdep.properties.dependencies.forEach(d => dependenciesSet.add(d));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult = distinct(result.concat(loadedDependencies), d => d.identifier.uuid);\n\t\t\t\tconst dependencies: string[] = [];\n\t\t\t\tdependenciesSet.forEach(d => !ExtensionGalleryService.hasExtensionByName(result, d) && dependencies.push(d));\n\t\t\t\treturn this.getDependenciesReccursively(dependencies, result, token);\n\t\t\t});\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"galleryService:requestError\" : {\n\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\t\t\t\"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('galleryService:requestError', { url, cdn: true, message });\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"galleryService:cdnFallback\" : {\n\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\"message\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token).then(undefined, err => {\n\t\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\"galleryService:requestError\" : {\n\t\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tthis.telemetryService.publicLog('galleryService:requestError', { url: fallbackUrl, cdn: false, message });\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionReccursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionReccursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionReccursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tprivate static hasExtensionByName(extensions: IGalleryExtension[], name: string): boolean {\n\t\tfor (const extension of extensions) {\n\t\t\tif (`${extension.publisher}.${extension.name}` === name) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(values(map));\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport function resolveMarketplaceHeaders(environmentService: IEnvironmentService): Promise<{ [key: string]: string; }> {\n\tconst marketplaceMachineIdFile = path.join(environmentService.userDataPath, 'machineid');\n\n\treturn readFile(marketplaceMachineIdFile, 'utf8')\n\t\t.then<string | null>(contents => isUUID(contents) ? contents : null, () => null /* error reading ID file */)\n\t\t.then(uuid => {\n\t\t\tif (!uuid) {\n\t\t\t\tuuid = generateUuid();\n\t\t\t\ttry {\n\t\t\t\t\twriteFileAndFlushSync(marketplaceMachineIdFile, uuid);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t//noop\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'X-Market-Client-Id': `VSCode ${pkg.version}`,\n\t\t\t\t'User-Agent': `VSCode ${pkg.version}`,\n\t\t\t\t'X-Market-User-Id': uuid\n\t\t\t};\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { IRequestOptions, IRequestContext, IRequestFunction, request } from 'vs/base/node/request';\nimport { getProxyAgent } from 'vs/base/node/proxy';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/node/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService implements IRequestService {\n\n\t_serviceBrand: any;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean;\n\tprivate authorization?: string;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tconfigurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this, this.disposables);\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\trequest(options: IRequestOptions, token: CancellationToken, requestFn: IRequestFunction = request): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agentPromise = options.agent ? Promise.resolve(options.agent) : Promise.resolve(getProxyAgent(options.url || '', { proxyUrl, strictSSL }));\n\n\t\treturn agentPromise.then(agent => {\n\t\t\toptions.agent = agent;\n\t\t\toptions.strictSSL = strictSSL;\n\n\t\t\tif (this.authorization) {\n\t\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t\t}\n\n\t\t\treturn requestFn(options, token);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport product from 'vs/platform/product/node/product';\nimport pkg from 'vs/platform/product/node/package';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver';\n\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/node/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/node/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/common/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { createSpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension } from 'vs/platform/extensions/common/extensions';\nimport { isUIExtension } from 'vs/platform/extensions/node/extensionsUtil';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, eg: {0}\", 'ms-vscode.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\n\nexport class Main {\n\n\tconstructor(\n\t\tprivate readonly remote: boolean,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: ParsedArgs): Promise<any> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions']);\n\n\t\t} else if (argv['install-extension']) {\n\t\t\tconst arg = argv['install-extension'];\n\t\t\tconst args: string[] = typeof arg === 'string' ? [arg] : arg;\n\t\t\tawait this.installExtensions(args, argv['force']);\n\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tconst arg = argv['uninstall-extension'];\n\t\t\tconst ids: string[] = typeof arg === 'string' ? [arg] : arg;\n\t\t\tawait this.uninstallExtension(ids);\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<any> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean): Promise<any> {\n\t\tconst extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.installExtension(extension, force);\n\t\t\t\tif (manifest) {\n\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\tfailed.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t\treturn failed.length ? Promise.reject(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', '))) : Promise.resolve();\n\t}\n\n\tprivate async installExtension(extension: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\textension = path.isAbsolute(extension) ? extension : path.join(process.cwd(), extension);\n\n\t\t\tconst manifest = await getManifest(extension);\n\t\t\tif (this.remote && (!isLanguagePackExtension(manifest) && isUIExtension(manifest, [], this.configurationService))) {\n\t\t\t\tconsole.log(localize('notSupportedUIExtension', \"Can't install extension {0} since UI Extensions are not supported\", getBaseLabel(extension)));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst valid = await this.validate(manifest, force);\n\n\t\t\tif (valid) {\n\t\t\t\treturn this.extensionManagementService.install(URI.file(extension)).then(id => {\n\t\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed!\", getBaseLabel(extension)));\n\t\t\t\t\treturn manifest;\n\t\t\t\t}, error => {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing Extension '{0}'.\", getBaseLabel(extension)));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [id, version] = getIdAndVersion(extension);\n\t\treturn this.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => this.extensionGalleryService.getCompatibleExtension({ id }, version)\n\t\t\t\t.then<IGalleryExtension>(null, err => {\n\t\t\t\t\tif (err.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(err.responseText);\n\t\t\t\t\t\t\treturn Promise.reject(response.message);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(async extension => {\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn Promise.reject(new Error(`${notFound(version ? `${id}@${version}` : id)}\\n${useId}`));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(extension, CancellationToken.None);\n\t\t\t\t\tif (this.remote && manifest && (!isLanguagePackExtension(manifest) && isUIExtension(manifest, [], this.configurationService))) {\n\t\t\t\t\t\tconsole.log(localize('notSupportedUIExtension', \"Can't install extension {0} since UI Extensions are not supported\", extension.identifier.id));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst [installedExtension] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\t\tif (installedExtension) {\n\t\t\t\t\t\tif (extension.version === installedExtension.manifest.version) {\n\t\t\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version && !force) {\n\t\t\t\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, extension.version));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(localize('updateMessage', \"Updating the Extension '{0}' to the version {1}\", id, extension.version));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(localize('foundExtension', \"Found '{0}' in the marketplace.\", id));\n\t\t\t\t\t}\n\t\t\t\t\tawait this.installFromGallery(id, extension);\n\t\t\t\t\treturn manifest;\n\t\t\t\t}));\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.filter(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version))[0];\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of this extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async installFromGallery(id: string, extension: IGalleryExtension): Promise<void> {\n\t\tconsole.log(localize('installing', \"Installing...\"));\n\n\t\ttry {\n\t\t\tawait this.extensionManagementService.installFromGallery(extension);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed!\", id, extension.version));\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing Extension '{0}'.\", id));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async uninstallExtension(extensions: string[]): Promise<any> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\treturn Promise.reject(new Error(`${notInstalled(id)}\\n${useId}`));\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport function main(argv: ParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\n\tconst environmentService = new EnvironmentService(argv, process.execPath);\n\tconst logService = createSpdLogService('cli', getLogLevel(environmentService), environmentService.logsPath);\n\tprocess.once('exit', () => logService.dispose());\n\n\tlogService.info('main', argv);\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(accessor => {\n\t\tconst envService = accessor.get(IEnvironmentService);\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\treturn Promise.all([envService.appSettingsHome, envService.extensionsPath].map(p => mkdirp(p))).then(() => {\n\t\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = envService;\n\n\t\t\tconst services = new ServiceCollection();\n\t\t\tservices.set(IConfigurationService, new SyncDescriptor(ConfigurationService));\n\t\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService, [false]));\n\t\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\t\tconst appenders: AppInsightsAppender[] = [];\n\t\t\tif (isBuilt && !extensionDevelopmentLocationURI && !envService.args['disable-telemetry'] && product.enableTelemetry) {\n\n\t\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, logService));\n\t\t\t\t}\n\n\t\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, pkg.version, stateService.getItem('telemetry.machineId'), installSourcePath),\n\t\t\t\t\tpiiPaths: [appRoot, extensionsPath]\n\t\t\t\t};\n\n\t\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\t\t\t} else {\n\t\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t\t}\n\n\t\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\t\tconst main = instantiationService2.createInstance(Main, false);\n\n\t\t\treturn main.run(argv).then(() => {\n\t\t\t\t// Dispose the AI adapter so that remaining data gets flushed.\n\t\t\t\treturn combinedAppender(...appenders).dispose();\n\t\t\t});\n\t\t});\n\t});\n}\n"]}