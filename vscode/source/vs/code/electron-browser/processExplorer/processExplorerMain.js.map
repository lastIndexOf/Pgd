{"version":3,"sources":["vs/code/electron-browser/processExplorer/fake","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/errors.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/functional.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/iterator.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/lifecycle.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/linkedList.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/event.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/browser/browser.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/platform.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/process.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/path.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/strings.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uri.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/amd.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/ps.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/contextmenu/common/contextmenu.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/contextmenu/electron-browser/contextmenu.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/product/node/product.ts","vs/code/electron-browser/processExplorer/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-browser/processExplorer/processExplorerMain.ts"],"names":["__m","__M","deps","result","i","len","length","isPromiseCanceledError","error","Error","name","canceledName","message","ErrorHandler","[object Object]","this","listeners","unexpectedErrorHandler","e","setTimeout","stack","listener","push","_removeListener","forEach","splice","indexOf","newUnexpectedErrorHandler","emit","exports","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","once","fn","_this","didCall","apply","arguments","FIN","done","value","undefined","Iterator","iterator","next","_empty","empty","fromArray","array","index","from","elements","Array","isArray","map","element","filter","collect","getSequenceIterator","arg","ArrayIterator","items","start","end","current","Math","min","ArrayNavigator","super","max","MappedIterator","MappedNavigator","navigator","previous","parent","first","last","dispose","rest","d","isDisposable","thing","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","toDispose","t","console","warn","None","Object","freeze","ReferenceCollection","references","create","key","reference","counter","object","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","LinkedList","_size","size","_first","_last","_insert","atTheEnd","newNode","oldLast","prev","oldFirst","_remove","bind","res","node","candidate","anchor","iterator_1","Event","event","thisArgs","didFire","call","snapshot","each","reduce","merge","initial","output","emitter","Emitter","fire","latch","cache","firstCall","shouldEmit","_disposable","signal","any","events","lifecycle_1","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","slice","flush","echo","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromPromise","promise","then","toPromise","Promise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","n","oldValue","LeakageMonitor","customThreshold","random","toString","_warnCountdown","_stacks","clear","listenerCount","threshold","Map","join","count","get","set","topStack","topCount","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","onFirstListenerDidAdd","onListenerDidAdd","removeMonitor","check","_noop","_deliveryQueue","iter","shift","errors_1","AsyncEmitter","eventFn","_asyncDeliveryQueue","thenables","all","EventMultiplexer","hasListeners","hook","unhook","idx","r","EventBufferer","buffers","pop","Relay","listening","inputEvent","inputEventListener","input","WindowManager","_zoomLevel","_lastZoomLevelChangeTime","_onDidChangeZoomLevel","event_1","onDidChangeZoomLevel","_zoomFactor","_onDidChangeFullscreen","onDidChangeFullscreen","now","zoomLevel","isTrusted","zoomFactor","ctx","document","createElement","getContext","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","fullscreen","_fullscreen","INSTANCE","setZoomLevel","getZoomLevel","getTimeSinceLastZoomLevelChanged","callback","getZoomFactor","setZoomFactor","getPixelRatio","setFullscreen","isFullscreen","userAgent","isIE","isEdge","isEdgeOrIE","isOpera","isFirefox","isWebKit","isChrome","isSafari","isWebkitWebView","isIPad","isEdgeWebView","hasClipboardSupport","version","parseInt","substring","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isNative","_locale","_language","_translationsConfigFile","isElectronRenderer","process","versions","electron","type","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","language","Platform","PlatformToString","isRealWindows","isWindows","isMacintosh","isLinux","isNative","isWeb","isRootUser","getuid","translationsConfigFile","_globals","self","global","globals","_setImmediate","setImmediate","OperatingSystem","OS","safeProcess","cwd","platform_1","validateString","ErrorInvalidArgType","isPathSeparator","code","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","isPosixPathSeparator","isWindowsDeviceRoot","CHAR_UPPERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_A","CHAR_LOWERCASE_Z","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","CHAR_DOT","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","expected","actual","determiner","replace","msg","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","j","firstPart","tail","paths","joined","needsReplace","slashCount","firstLen","normalize","to","fromOrig","resolve","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","offset","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","format","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","compare","a","b","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","fromCharCode","substrEquals","aStart","aEnd","bStart","bEnd","isFullWidthCharacter","charCode","startsWithUTF8BOM","str","isFalsyOrWhitespace","trim","pad","l","char","reverse","_formatRegexp","match","group","isNaN","escape","html","convertSimple2RegExpPattern","pattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","test","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","source","exec","lastIndex","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","isHighSurrogate","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","lcut","text","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","removeAccents","prototype","regex","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","target","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","escaped","encodeTable","_makeFsPath","uri","authority","scheme","_asFormatted","skipEncoding","encoder","fragment","_slash","userinfo","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","setUriThrowOnMissingScheme","old","_regexp","URI","fsPath","with","schemeOrData","_strict","trace","_schemeFix","_referenceResolution","_validateUri","change","_URI","decodeURIComponent","components","data","_fsPath","_formatted","external","$mid","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","getPathFromAmdModule","requirefn","relativePath","uri_1","toUrl","listProcesses","rootPid","reject","addToTree","pid","ppid","cmd","load","mem","item","findName","rootItem","children","sort","SHARED_PROCESS_HINT","matches","JS","resolve_1","reject_1","require","windowsProcessTree","getProcessList","processList","getProcessCpuUsage","completeProcessList","processItems","commandLine","cleanUNCPrefix","cpu","memory","ProcessDataFlag","CommandLine","Memory","PID_CMD","child_process_1","maxBuffer","LC_NUMERIC","stdout","stderr","lines","line","parseFloat","processes","pids","concat","stringify","amd_1","cpuUsage","CONTEXT_MENU_CHANNEL","CONTEXT_MENU_CLOSE_CHANNEL","createItem","processedItems","serializableItem","label","accelerator","checked","enabled","visible","submenu","submenuItem","contextMenuIdPool","popup","contextMenuId","onClickChannel","onClickChannelHandler","itemId","context","click","electron_1","ipcRenderer","contextmenu_1","closedContextMenuId","onHide","send","define","rootPath","productJsonPath","product","__$__nodeRequire","nameShort","nameLong","dataFolderName","default","getProcessItem","indent","isRoot","product_1","applicationName","mapPidToWindowTitle","formattedName","strings_1","os_1","totalmem","Number","toFixed","child","getProcessIdWithHighestProperty","propertyName","maxProcessId","applyZoom","webFrame","browser","showContextMenu","preventDefault","currentTarget","nls_1","localize","kill","row","getElementById","clipboard","writeText","innerText","DEBUG_FLAGS_PATTERN","isDebuggable","config","request","port","protocol","processId","DEBUG_PORT_PATTERN","attachTo","startup","styles","styleTag","content","hoverBackground","hoverForeground","highlightForeground","innerHTML","head","appendChild","color","body","style","applyStyles","windows","title","setInterval","ps_1","container","highestCPUProcess","highestMemoryProcess","tableHead","tableBody","p","classList","add","textContent","scope","append","updateProcessInfo","rootProcess","tableRows","getElementsByTagName","addEventListener","onkeydown","cmdOrCtrlKey","metaKey","ctrlKey","keyCode"],"mappings":"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","file":"processExplorerMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function fromArray<T>(array: T[], index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>): T[] {\n\t\tconst result: T[] = [];\n\t\tforEach(iterator, value => result.push(value));\n\t\treturn result;\n\t}\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: Iterator<T> | T[]): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate items: T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(...disposables: Array<T | undefined>): T[];\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(first: T | T[], ...rest: T[]): T | T[] | undefined {\n\tif (Array.isArray(first)) {\n\t\tfirst.forEach(d => d && d.dispose());\n\t\treturn [];\n\t} else if (rest.length === 0) {\n\t\tif (first) {\n\t\t\tfirst.dispose();\n\t\t\treturn first;\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tdispose(first);\n\t\tdispose(rest);\n\t\treturn [];\n\t}\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\treturn { dispose() { fn(); } };\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected _toDispose: IDisposable[] = [];\n\tprotected get toDispose(): IDisposable[] { return this._toDispose; }\n\n\tprivate _lifecycle_disposable_isDisposed = false;\n\n\tpublic dispose(): void {\n\t\tthis._lifecycle_disposable_isDisposed = true;\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif (this._lifecycle_disposable_isDisposed) {\n\t\t\tconsole.warn('Registering disposable on object that has already been disposed.');\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.push(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate references: { [key: string]: { readonly object: T; counter: number; } } = Object.create(null);\n\n\tconstructor() { }\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references[key];\n\n\t\tif (!reference) {\n\t\t\treference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference.object);\n\t\t\t\tdelete this.references[key];\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\telement: E;\n\tnext: Node<E> | undefined;\n\tprev: Node<E> | undefined;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> | undefined;\n\tprivate _last: Node<E> | undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._first;\n\t}\n\n\tclear(): void {\n\t\tthis._first = undefined;\n\t\tthis._last = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (!this._first) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\t\treturn this._remove.bind(this, newNode);\n\t}\n\n\n\tshift(): E | undefined {\n\t\tif (!this._first) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (!this._last) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tlet candidate: Node<E> | undefined = this._first;\n\t\twhile (candidate instanceof Node) {\n\t\t\tif (candidate !== node) {\n\t\t\t\tcandidate = candidate.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (candidate.prev && candidate.next) {\n\t\t\t\t// middle\n\t\t\t\tconst anchor = candidate.prev;\n\t\t\t\tanchor.next = candidate.next;\n\t\t\t\tcandidate.next.prev = anchor;\n\n\t\t\t} else if (!candidate.prev && !candidate.next) {\n\t\t\t\t// only node\n\t\t\t\tthis._first = undefined;\n\t\t\t\tthis._last = undefined;\n\n\t\t\t} else if (!candidate.next) {\n\t\t\t\t// last\n\t\t\t\tthis._last = this._last!.prev!;\n\t\t\t\tthis._last.next = undefined;\n\n\t\t\t} else if (!candidate.prev) {\n\t\t\t\t// first\n\t\t\t\tthis._first = this._first!.next!;\n\t\t\t\tthis._first.prev = undefined;\n\t\t\t}\n\n\t\t\t// done\n\t\t\tthis._size -= 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node instanceof Node; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nexport namespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function () { return _disposable; };\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * throught the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Similar to `buffer` but it buffers indefinitely and repeats\n\t * the buffered events to every new listener.\n\t */\n\texport function echo<T>(event: Event<T>, nextTick = false, buffer: T[] = []): Event<T> {\n\t\tbuffer = buffer.slice();\n\n\t\tevent(e => {\n\t\t\tbuffer.push(e);\n\t\t\temitter.fire(e);\n\t\t});\n\n\t\tconst flush = (listener: (e: T) => any, thisArgs?: any) => buffer.forEach(e => listener.call(thisArgs, e));\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonListenerDidAdd(emitter: Emitter<T>, listener: (e: T) => any, thisArgs?: any) {\n\t\t\t\tif (nextTick) {\n\t\t\t\t\tsetTimeout(() => flush(listener, thisArgs));\n\t\t\t\t} else {\n\t\t\t\t\tflush(listener, thisArgs);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue: [Listener<T>, T][];\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = [];\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.length > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners = undefined;\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.length = 0;\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue: [Listener<T>, T, Promise<any>[]][];\n\n\tasync fireAsync(eventFn: (thenables: Promise<any>[], listener: Function) => T): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\t// put all [listener,event]-pairs into delivery queue\n\t\t// then emit all event. an inner/nested event might be\n\t\t// the driver of this\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = [];\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tconst thenables: Promise<void>[] = [];\n\t\t\tthis._asyncDeliveryQueue.push([e.value, eventFn(thenables, typeof e.value === 'function' ? e.value : e.value[0]), thenables]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.length > 0) {\n\t\t\tconst [listener, event, thenables] = this._asyncDeliveryQueue.shift()!;\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables);\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nclass WindowManager {\n\n\tpublic static readonly INSTANCE = new WindowManager();\n\n\t// --- Zoom Level\n\tprivate _zoomLevel: number = 0;\n\tprivate _lastZoomLevelChangeTime: number = 0;\n\tprivate readonly _onDidChangeZoomLevel = new Emitter<number>();\n\n\tpublic readonly onDidChangeZoomLevel: Event<number> = this._onDidChangeZoomLevel.event;\n\tpublic getZoomLevel(): number {\n\t\treturn this._zoomLevel;\n\t}\n\tpublic getTimeSinceLastZoomLevelChanged(): number {\n\t\treturn Date.now() - this._lastZoomLevelChangeTime;\n\t}\n\tpublic setZoomLevel(zoomLevel: number, isTrusted: boolean): void {\n\t\tif (this._zoomLevel === zoomLevel) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._zoomLevel = zoomLevel;\n\t\t// See https://github.com/Microsoft/vscode/issues/26151\n\t\tthis._lastZoomLevelChangeTime = isTrusted ? 0 : Date.now();\n\t\tthis._onDidChangeZoomLevel.fire(this._zoomLevel);\n\t}\n\n\t// --- Zoom Factor\n\tprivate _zoomFactor: number = 1;\n\n\tpublic getZoomFactor(): number {\n\t\treturn this._zoomFactor;\n\t}\n\tpublic setZoomFactor(zoomFactor: number): void {\n\t\tthis._zoomFactor = zoomFactor;\n\t}\n\n\t// --- Pixel Ratio\n\tpublic getPixelRatio(): number {\n\t\tlet ctx = document.createElement('canvas').getContext('2d');\n\t\tlet dpr = window.devicePixelRatio || 1;\n\t\tlet bsr = (<any>ctx).webkitBackingStorePixelRatio ||\n\t\t\t(<any>ctx).mozBackingStorePixelRatio ||\n\t\t\t(<any>ctx).msBackingStorePixelRatio ||\n\t\t\t(<any>ctx).oBackingStorePixelRatio ||\n\t\t\t(<any>ctx).backingStorePixelRatio || 1;\n\t\treturn dpr / bsr;\n\t}\n\n\t// --- Fullscreen\n\tprivate _fullscreen: boolean;\n\tprivate readonly _onDidChangeFullscreen = new Emitter<void>();\n\n\tpublic readonly onDidChangeFullscreen: Event<void> = this._onDidChangeFullscreen.event;\n\tpublic setFullscreen(fullscreen: boolean): void {\n\t\tif (this._fullscreen === fullscreen) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._fullscreen = fullscreen;\n\t\tthis._onDidChangeFullscreen.fire();\n\t}\n\tpublic isFullscreen(): boolean {\n\t\treturn this._fullscreen;\n\t}\n}\n\n/** A zoom index, e.g. 1, 2, 3 */\nexport function setZoomLevel(zoomLevel: number, isTrusted: boolean): void {\n\tWindowManager.INSTANCE.setZoomLevel(zoomLevel, isTrusted);\n}\nexport function getZoomLevel(): number {\n\treturn WindowManager.INSTANCE.getZoomLevel();\n}\n/** Returns the time (in ms) since the zoom level was changed */\nexport function getTimeSinceLastZoomLevelChanged(): number {\n\treturn WindowManager.INSTANCE.getTimeSinceLastZoomLevelChanged();\n}\nexport function onDidChangeZoomLevel(callback: (zoomLevel: number) => void): IDisposable {\n\treturn WindowManager.INSTANCE.onDidChangeZoomLevel(callback);\n}\n\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\nexport function getZoomFactor(): number {\n\treturn WindowManager.INSTANCE.getZoomFactor();\n}\nexport function setZoomFactor(zoomFactor: number): void {\n\tWindowManager.INSTANCE.setZoomFactor(zoomFactor);\n}\n\nexport function getPixelRatio(): number {\n\treturn WindowManager.INSTANCE.getPixelRatio();\n}\n\nexport function setFullscreen(fullscreen: boolean): void {\n\tWindowManager.INSTANCE.setFullscreen(fullscreen);\n}\nexport function isFullscreen(): boolean {\n\treturn WindowManager.INSTANCE.isFullscreen();\n}\nexport const onDidChangeFullscreen = WindowManager.INSTANCE.onDidChangeFullscreen;\n\nconst userAgent = navigator.userAgent;\n\nexport const isIE = (userAgent.indexOf('Trident') >= 0);\nexport const isEdge = (userAgent.indexOf('Edge/') >= 0);\nexport const isEdgeOrIE = isIE || isEdge;\n\nexport const isOpera = (userAgent.indexOf('Opera') >= 0);\nexport const isFirefox = (userAgent.indexOf('Firefox') >= 0);\nexport const isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);\nexport const isChrome = (userAgent.indexOf('Chrome') >= 0);\nexport const isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));\nexport const isWebkitWebView = (!isChrome && !isSafari && isWebKit);\nexport const isIPad = (userAgent.indexOf('iPad') >= 0);\nexport const isEdgeWebView = isEdge && (userAgent.indexOf('WebView/') >= 0);\n\nexport function hasClipboardSupport() {\n\tif (isIE) {\n\t\treturn false;\n\t}\n\n\tif (isEdge) {\n\t\tlet index = userAgent.indexOf('Edge/');\n\t\tlet version = parseInt(userAgent.substring(index + 5, userAgent.indexOf('.', index)), 10);\n\n\t\tif (!version || (version >= 12 && version <= 16)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\n// let _isLinux = false;\nlet _isNative = false;\n// let _isWeb = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\tconst userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t// _isLinux = userAgent.indexOf('Linux') >= 0;\n\t// _isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t// _isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\n// let _platform: Platform = Platform.Web;\n// if (_isNative) {\n// \tif (_isMacintosh) {\n// \t\t_platform = Platform.Mac;\n// \t} else if (_isWindows) {\n// \t\t_platform = Platform.Windows;\n// \t} else if (_isLinux) {\n// \t\t_platform = Platform.Linux;\n// \t}\n// }\n\nexport const isRealWindows = _isWindows;\nexport const isWindows = false; // _isWindows;\nexport const isMacintosh = true; // _isMacintosh;\nexport const isLinux = false; // _isLinux;\nexport const isNative = false; // _isNative;\nexport const isWeb = false; // _isWeb;\nexport const platform = 1; // _platform;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\nlet _setImmediate: ((callback: (...args: any[]) => void) => number) | null = null;\nexport function setImmediate(callback: (...args: any[]) => void): number {\n\tif (_setImmediate === null) {\n\t\tif (globals.setImmediate) {\n\t\t\t_setImmediate = globals.setImmediate.bind(globals);\n\t\t} else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\t\t_setImmediate = process.nextTick.bind(process);\n\t\t} else {\n\t\t\t_setImmediate = globals.setTimeout.bind(globals);\n\t\t}\n\t}\n\treturn _setImmediate!(callback);\n}\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: object;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): number;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): number { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: string) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tlet msg;\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tmsg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\t}\n}\n\nfunction validateString(value: string, name) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep, pathObject) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\ninterface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\ninterface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && <any>regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\tconst len1 = a ? a.length : 0;\n\tconst len2 = b ? b.length : 0;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tif (typeof a !== 'string' || typeof b !== 'string') {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, empty);\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\n/**\n * @internal\n */\nexport function setUriThrowOnMissingScheme(value: boolean): boolean {\n\tconst old = _throwOnMissingSchema;\n\t_throwOnMissingSchema = value;\n\treturn old;\n}\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\t// console.error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t} else {\n\t\t\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (_strict || _throwOnMissingSchema) {\n\t\treturn scheme || _empty;\n\t}\n\tif (!scheme) {\n\t\tconsole.trace('BAD uri lacks scheme, falling back to file-scheme.');\n\t\tscheme = 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tpublic static parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tpublic static file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tpublic static from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | any): URI {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._fsPath = (<UriState>data).fsPath;\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): object {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn URI.parse(requirefn.toUrl(relativePath)).fsPath;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\nexport function listProcesses(rootPid: number): Promise<ProcessItem> {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet rootItem: ProcessItem | undefined;\n\t\tconst map = new Map<number, ProcessItem>();\n\n\t\tfunction addToTree(pid: number, ppid: number, cmd: string, load: number, mem: number) {\n\n\t\t\tconst parent = map.get(ppid);\n\t\t\tif (pid === rootPid || parent) {\n\n\t\t\t\tconst item: ProcessItem = {\n\t\t\t\t\tname: findName(cmd),\n\t\t\t\t\tcmd,\n\t\t\t\t\tpid,\n\t\t\t\t\tppid,\n\t\t\t\t\tload,\n\t\t\t\t\tmem\n\t\t\t\t};\n\t\t\t\tmap.set(pid, item);\n\n\t\t\t\tif (pid === rootPid) {\n\t\t\t\t\trootItem = item;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t}\n\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\tparent.children = parent.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction findName(cmd: string): string {\n\n\t\t\tconst SHARED_PROCESS_HINT = /--disable-blink-features=Auxclick/;\n\t\t\tconst WINDOWS_WATCHER_HINT = /\\\\watcher\\\\win32\\\\CodeHelper\\.exe/;\n\t\t\tconst WINDOWS_CRASH_REPORTER = /--crashes-directory/;\n\t\t\tconst WINDOWS_PTY = /\\\\pipe\\\\winpty-control/;\n\t\t\tconst WINDOWS_CONSOLE_HOST = /conhost\\.exe/;\n\t\t\tconst TYPE = /--type=([a-zA-Z-]+)/;\n\n\t\t\t// find windows file watcher\n\t\t\tif (WINDOWS_WATCHER_HINT.exec(cmd)) {\n\t\t\t\treturn 'watcherService ';\n\t\t\t}\n\n\t\t\t// find windows crash reporter\n\t\t\tif (WINDOWS_CRASH_REPORTER.exec(cmd)) {\n\t\t\t\treturn 'electron-crash-reporter';\n\t\t\t}\n\n\t\t\t// find windows pty process\n\t\t\tif (WINDOWS_PTY.exec(cmd)) {\n\t\t\t\treturn 'winpty-process';\n\t\t\t}\n\n\t\t\t//find windows console host process\n\t\t\tif (WINDOWS_CONSOLE_HOST.exec(cmd)) {\n\t\t\t\treturn 'console-window-host (Windows internal process)';\n\t\t\t}\n\n\t\t\t// find \"--type=xxxx\"\n\t\t\tlet matches = TYPE.exec(cmd);\n\t\t\tif (matches && matches.length === 2) {\n\t\t\t\tif (matches[1] === 'renderer') {\n\t\t\t\t\tif (SHARED_PROCESS_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'shared-process';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `window`;\n\t\t\t\t}\n\t\t\t\treturn matches[1];\n\t\t\t}\n\n\t\t\t// find all xxxx.js\n\t\t\tconst JS = /[a-zA-Z-]+\\.js/g;\n\t\t\tlet result = '';\n\t\t\tdo {\n\t\t\t\tmatches = JS.exec(cmd);\n\t\t\t\tif (matches) {\n\t\t\t\t\tresult += matches + ' ';\n\t\t\t\t}\n\t\t\t} while (matches);\n\n\t\t\tif (result) {\n\t\t\t\tif (cmd.indexOf('node ') < 0 && cmd.indexOf('node.exe') < 0) {\n\t\t\t\t\treturn `electron_node ${result}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cmd;\n\t\t}\n\n\t\tif (process.platform === 'win32') {\n\n\t\t\tconst cleanUNCPrefix = (value: string): string => {\n\t\t\t\tif (value.indexOf('\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\\\\??\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\"\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else if (value.indexOf('\"\\\\??\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t(import('windows-process-tree')).then(windowsProcessTree => {\n\t\t\t\twindowsProcessTree.getProcessList(rootPid, (processList) => {\n\t\t\t\t\twindowsProcessTree.getProcessCpuUsage(processList, (completeProcessList) => {\n\t\t\t\t\t\tconst processItems: Map<number, ProcessItem> = new Map();\n\t\t\t\t\t\tcompleteProcessList.forEach(process => {\n\t\t\t\t\t\t\tconst commandLine = cleanUNCPrefix(process.commandLine || '');\n\t\t\t\t\t\t\tprocessItems.set(process.pid, {\n\t\t\t\t\t\t\t\tname: findName(commandLine),\n\t\t\t\t\t\t\t\tcmd: commandLine,\n\t\t\t\t\t\t\t\tpid: process.pid,\n\t\t\t\t\t\t\t\tppid: process.ppid,\n\t\t\t\t\t\t\t\tload: process.cpu || 0,\n\t\t\t\t\t\t\t\tmem: process.memory || 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\trootItem = processItems.get(rootPid);\n\t\t\t\t\t\tif (rootItem) {\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tconst parent = processItems.get(item.ppid);\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tif (item.children) {\n\t\t\t\t\t\t\t\t\titem.children = item.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, windowsProcessTree.ProcessDataFlag.CommandLine | windowsProcessTree.ProcessDataFlag.Memory);\n\t\t\t});\n\t\t} else {\t// OS X & Linux\n\n\t\t\tconst CMD = '/bin/ps -ax -o pid=,ppid=,pcpu=,pmem=,command=';\n\t\t\tconst PID_CMD = /^\\s*([0-9]+)\\s+([0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+(.+)$/;\n\n\t\t\t// Set numeric locale to ensure '.' is used as the decimal separator\n\t\t\texec(CMD, { maxBuffer: 1000 * 1024, env: { LC_NUMERIC: 'en_US.UTF-8' } }, (err, stdout, stderr) => {\n\n\t\t\t\tif (err || stderr) {\n\t\t\t\t\treject(err || stderr.toString());\n\t\t\t\t} else {\n\n\t\t\t\t\tconst lines = stdout.toString().split('\\n');\n\t\t\t\t\tfor (const line of lines) {\n\t\t\t\t\t\tconst matches = PID_CMD.exec(line.trim());\n\t\t\t\t\t\tif (matches && matches.length === 6) {\n\t\t\t\t\t\t\taddToTree(parseInt(matches[1]), parseInt(matches[2]), matches[5], parseFloat(matches[3]), parseFloat(matches[4]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (process.platform === 'linux') {\n\t\t\t\t\t\t// Flatten rootItem to get a list of all VSCode processes\n\t\t\t\t\t\tlet processes = [rootItem];\n\t\t\t\t\t\tconst pids: number[] = [];\n\t\t\t\t\t\twhile (processes.length) {\n\t\t\t\t\t\t\tconst process = processes.shift();\n\t\t\t\t\t\t\tif (process) {\n\t\t\t\t\t\t\t\tpids.push(process.pid);\n\t\t\t\t\t\t\t\tif (process.children) {\n\t\t\t\t\t\t\t\t\tprocesses = processes.concat(process.children);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The cpu usage value reported on Linux is the average over the process lifetime,\n\t\t\t\t\t\t// recalculate the usage over a one second interval\n\t\t\t\t\t\t// JSON.stringify is needed to escape spaces, https://github.com/nodejs/node/issues/6803\n\t\t\t\t\t\tlet cmd = JSON.stringify(getPathFromAmdModule(require, 'vs/base/node/cpuUsage.sh'));\n\t\t\t\t\t\tcmd += ' ' + pids.join(' ');\n\n\t\t\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\t\t\treject(err || stderr.toString());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst cpuUsage = stdout.toString().split('\\n');\n\t\t\t\t\t\t\t\tfor (let i = 0; i < pids.length; i++) {\n\t\t\t\t\t\t\t\t\tconst processInfo = map.get(pids[i])!;\n\t\t\t\t\t\t\t\t\tprocessInfo.load = parseFloat(cpuUsage[i]);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ICommonContextMenuItem {\n\tlabel?: string;\n\n\ttype?: 'normal' | 'separator' | 'submenu' | 'checkbox' | 'radio';\n\n\taccelerator?: string;\n\n\tenabled?: boolean;\n\tvisible?: boolean;\n\tchecked?: boolean;\n}\n\nexport interface ISerializableContextMenuItem extends ICommonContextMenuItem {\n\tid: number;\n\tsubmenu?: ISerializableContextMenuItem[];\n}\n\nexport interface IContextMenuItem extends ICommonContextMenuItem {\n\tclick?: (event: IContextMenuEvent) => void;\n\tsubmenu?: IContextMenuItem[];\n}\n\nexport interface IContextMenuEvent {\n\tshiftKey?: boolean;\n\tctrlKey?: boolean;\n\taltKey?: boolean;\n\tmetaKey?: boolean;\n}\n\nexport interface IPopupOptions {\n\tx?: number;\n\ty?: number;\n\tpositioningItem?: number;\n\tonHide?: () => void;\n}\n\nexport const CONTEXT_MENU_CHANNEL = 'vscode:contextmenu';\nexport const CONTEXT_MENU_CLOSE_CHANNEL = 'vscode:onCloseContextMenu';","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcRenderer, Event } from 'electron';\nimport { IContextMenuItem, ISerializableContextMenuItem, CONTEXT_MENU_CLOSE_CHANNEL, CONTEXT_MENU_CHANNEL, IPopupOptions, IContextMenuEvent } from 'vs/base/parts/contextmenu/common/contextmenu';\n\nlet contextMenuIdPool = 0;\n\nexport function popup(items: IContextMenuItem[], options?: IPopupOptions): void {\n\tconst processedItems: IContextMenuItem[] = [];\n\n\tconst contextMenuId = contextMenuIdPool++;\n\tconst onClickChannel = `vscode:onContextMenu${contextMenuId}`;\n\tconst onClickChannelHandler = (_event: Event, itemId: number, context: IContextMenuEvent) => {\n\t\tconst item = processedItems[itemId];\n\t\tif (item.click) {\n\t\t\titem.click(context);\n\t\t}\n\t};\n\n\tipcRenderer.once(onClickChannel, onClickChannelHandler);\n\tipcRenderer.once(CONTEXT_MENU_CLOSE_CHANNEL, (_event: Event, closedContextMenuId: number) => {\n\t\tif (closedContextMenuId !== contextMenuId) {\n\t\t\treturn;\n\t\t}\n\n\t\tipcRenderer.removeListener(onClickChannel, onClickChannelHandler);\n\n\t\tif (options && options.onHide) {\n\t\t\toptions.onHide();\n\t\t}\n\t});\n\n\tipcRenderer.send(CONTEXT_MENU_CHANNEL, contextMenuId, items.map(item => createItem(item, processedItems)), onClickChannel, options);\n}\n\nfunction createItem(item: IContextMenuItem, processedItems: IContextMenuItem[]): ISerializableContextMenuItem {\n\tconst serializableItem = {\n\t\tid: processedItems.length,\n\t\tlabel: item.label,\n\t\ttype: item.type,\n\t\taccelerator: item.accelerator,\n\t\tchecked: item.checked,\n\t\tenabled: typeof item.enabled === 'boolean' ? item.enabled : true,\n\t\tvisible: typeof item.visible === 'boolean' ? item.visible : true\n\t} as ISerializableContextMenuItem;\n\n\tprocessedItems.push(item);\n\n\t// Submenu\n\tif (Array.isArray(item.submenu)) {\n\t\tserializableItem.submenu = item.submenu.map(submenuItem => createItem(submenuItem, processedItems));\n\t}\n\n\treturn serializableItem;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface IProductConfiguration {\n\tnameShort: string;\n\tnameLong: string;\n\tapplicationName: string;\n\twin32AppId: string;\n\twin32x64AppId: string;\n\twin32UserAppId: string;\n\twin32x64UserAppId: string;\n\twin32AppUserModelId: string;\n\twin32MutexName: string;\n\tdarwinBundleIdentifier: string;\n\turlProtocol: string;\n\tdataFolderName: string;\n\tdownloadUrl: string;\n\tupdateUrl?: string;\n\tquality?: string;\n\ttarget?: string;\n\tcommit?: string;\n\tsettingsSearchBuildId?: number;\n\tsettingsSearchUrl?: string;\n\texperimentsUrl?: string;\n\tdate: string;\n\textensionsGallery: {\n\t\tserviceUrl: string;\n\t\titemUrl: string;\n\t\tcontrolUrl: string;\n\t\trecommendationsUrl: string;\n\t};\n\textensionTips: { [id: string]: string; };\n\textensionImportantTips: { [id: string]: { name: string; pattern: string; }; };\n\texeBasedExtensionTips: { [id: string]: { friendlyName: string, windowsPath?: string, recommendations: string[] }; };\n\textensionKeywords: { [extension: string]: string[]; };\n\textensionAllowedBadgeProviders: string[];\n\textensionAllowedProposedApi: string[];\n\tkeymapExtensionTips: string[];\n\tcrashReporter: {\n\t\tcompanyName: string;\n\t\tproductName: string;\n\t};\n\twelcomePage: string;\n\tenableTelemetry: boolean;\n\taiConfig: {\n\t\tasimovKey: string;\n\t};\n\tsendASmile: {\n\t\treportIssueUrl: string,\n\t\trequestFeatureUrl: string\n\t};\n\tdocumentationUrl: string;\n\treleaseNotesUrl: string;\n\tkeyboardShortcutsUrlMac: string;\n\tkeyboardShortcutsUrlLinux: string;\n\tkeyboardShortcutsUrlWin: string;\n\tintroductoryVideosUrl: string;\n\ttipsAndTricksUrl: string;\n\ttwitterUrl: string;\n\trequestFeatureUrl: string;\n\treportIssueUrl: string;\n\tlicenseUrl: string;\n\tprivacyStatementUrl: string;\n\ttelemetryOptOutUrl: string;\n\tnpsSurveyUrl: string;\n\tsurveys: ISurveyData[];\n\tchecksums: { [path: string]: string; };\n\tchecksumFailMoreInfoUrl: string;\n\thockeyApp: {\n\t\t'win32-ia32': string;\n\t\t'win32-x64': string;\n\t\t'linux-ia32': string;\n\t\t'linux-x64': string;\n\t\t'darwin': string;\n\t};\n\tlogUploaderUrl: string;\n\tportable?: string;\n\tuiExtensions?: string[];\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n\nconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\nconst productJsonPath = path.join(rootPath, 'product.json');\nconst product = require.__$__nodeRequire(productJsonPath) as IProductConfiguration;\n\nif (process.env['VSCODE_DEV']) {\n\tproduct.nameShort += ' Dev';\n\tproduct.nameLong += ' Dev';\n\tproduct.dataFolderName += '-dev';\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/processExplorer';\nimport { listProcesses, ProcessItem } from 'vs/base/node/ps';\nimport { webFrame, ipcRenderer, clipboard } from 'electron';\nimport { repeat } from 'vs/base/common/strings';\nimport { totalmem } from 'os';\nimport product from 'vs/platform/product/node/product';\nimport { localize } from 'vs/nls';\nimport { ProcessExplorerStyles, ProcessExplorerData } from 'vs/platform/issue/common/issue';\nimport * as browser from 'vs/base/browser/browser';\nimport * as platform from 'vs/base/common/platform';\nimport { IContextMenuItem } from 'vs/base/parts/contextmenu/common/contextmenu';\nimport { popup } from 'vs/base/parts/contextmenu/electron-browser/contextmenu';\n\nlet processList: any[];\nlet mapPidToWindowTitle = new Map<number, string>();\n\nconst DEBUG_FLAGS_PATTERN = /\\s--(inspect|debug)(-brk|port)?=(\\d+)?/;\nconst DEBUG_PORT_PATTERN = /\\s--(inspect|debug)-port=(\\d+)/;\n\nfunction getProcessList(rootProcess: ProcessItem) {\n\tconst processes: any[] = [];\n\n\tif (rootProcess) {\n\t\tgetProcessItem(processes, rootProcess, 0);\n\t}\n\n\treturn processes;\n}\n\nfunction getProcessItem(processes: any[], item: ProcessItem, indent: number): void {\n\tconst isRoot = (indent === 0);\n\n\tconst MB = 1024 * 1024;\n\n\tlet name = item.name;\n\tif (isRoot) {\n\t\tname = `${product.applicationName} main`;\n\t}\n\n\tif (name === 'window') {\n\t\tconst windowTitle = mapPidToWindowTitle.get(item.pid);\n\t\tname = windowTitle !== undefined ? `${name} (${mapPidToWindowTitle.get(item.pid)})` : name;\n\t}\n\n\t// Format name with indent\n\tconst formattedName = isRoot ? name : `${repeat('    ', indent)} ${name}`;\n\tconst memory = process.platform === 'win32' ? item.mem : (totalmem() * (item.mem / 100));\n\tprocesses.push({\n\t\tcpu: Number(item.load.toFixed(0)),\n\t\tmemory: Number((memory / MB).toFixed(0)),\n\t\tpid: Number((item.pid).toFixed(0)),\n\t\tname,\n\t\tformattedName,\n\t\tcmd: item.cmd\n\t});\n\n\t// Recurse into children if any\n\tif (Array.isArray(item.children)) {\n\t\titem.children.forEach(child => getProcessItem(processes, child, indent + 1));\n\t}\n}\n\nfunction isDebuggable(cmd: string): boolean {\n\tconst matches = DEBUG_FLAGS_PATTERN.exec(cmd);\n\treturn (matches && matches.length >= 2) || cmd.indexOf('node ') >= 0 || cmd.indexOf('node.exe') >= 0;\n}\n\nfunction attachTo(item: ProcessItem) {\n\tconst config: any = {\n\t\ttype: 'node',\n\t\trequest: 'attach',\n\t\tname: `process ${item.pid}`\n\t};\n\n\tlet matches = DEBUG_FLAGS_PATTERN.exec(item.cmd);\n\tif (matches && matches.length >= 2) {\n\t\t// attach via port\n\t\tif (matches.length === 4 && matches[3]) {\n\t\t\tconfig.port = parseInt(matches[3]);\n\t\t}\n\t\tconfig.protocol = matches[1] === 'debug' ? 'legacy' : 'inspector';\n\t} else {\n\t\t// no port -> try to attach via pid (send SIGUSR1)\n\t\tconfig.processId = String(item.pid);\n\t}\n\n\t// a debug-port=n or inspect-port=n overrides the port\n\tmatches = DEBUG_PORT_PATTERN.exec(item.cmd);\n\tif (matches && matches.length === 3) {\n\t\t// override port\n\t\tconfig.port = parseInt(matches[2]);\n\t}\n\n\tipcRenderer.send('vscode:workbenchCommand', { id: 'debug.startFromConfig', from: 'processExplorer', args: [config] });\n}\n\nfunction getProcessIdWithHighestProperty(processList, propertyName: string) {\n\tlet max = 0;\n\tlet maxProcessId;\n\tprocessList.forEach(process => {\n\t\tif (process[propertyName] > max) {\n\t\t\tmax = process[propertyName];\n\t\t\tmaxProcessId = process.pid;\n\t\t}\n\t});\n\n\treturn maxProcessId;\n}\n\nfunction updateProcessInfo(processList): void {\n\tconst container = document.getElementById('process-list');\n\tif (!container) {\n\t\treturn;\n\t}\n\n\tcontainer.innerHTML = '';\n\tconst highestCPUProcess = getProcessIdWithHighestProperty(processList, 'cpu');\n\tconst highestMemoryProcess = getProcessIdWithHighestProperty(processList, 'memory');\n\n\tconst tableHead = document.createElement('thead');\n\ttableHead.innerHTML = `<tr>\n\t\t<th scope=\"col\" class=\"cpu\">${localize('cpu', \"CPU %\")}</th>\n\t\t<th scope=\"col\" class=\"memory\">${localize('memory', \"Memory (MB)\")}</th>\n\t\t<th scope=\"col\" class=\"pid\">${localize('pid', \"pid\")}</th>\n\t\t<th scope=\"col\" class=\"nameLabel\">${localize('name', \"Name\")}</th>\n\t</tr>`;\n\n\tconst tableBody = document.createElement('tbody');\n\n\tprocessList.forEach(p => {\n\t\tconst row = document.createElement('tr');\n\t\trow.id = p.pid;\n\n\t\tconst cpu = document.createElement('td');\n\t\tp.pid === highestCPUProcess\n\t\t\t? cpu.classList.add('centered', 'highest')\n\t\t\t: cpu.classList.add('centered');\n\t\tcpu.textContent = p.cpu;\n\n\t\tconst memory = document.createElement('td');\n\t\tp.pid === highestMemoryProcess\n\t\t\t? memory.classList.add('centered', 'highest')\n\t\t\t: memory.classList.add('centered');\n\t\tmemory.textContent = p.memory;\n\n\t\tconst pid = document.createElement('td');\n\t\tpid.classList.add('centered');\n\t\tpid.textContent = p.pid;\n\n\t\tconst name = document.createElement('th');\n\t\tname.scope = 'row';\n\t\tname.classList.add('data');\n\t\tname.title = p.cmd;\n\t\tname.textContent = p.formattedName;\n\n\t\trow.append(cpu, memory, pid, name);\n\t\ttableBody.appendChild(row);\n\t});\n\n\tcontainer.append(tableHead, tableBody);\n}\n\nfunction applyStyles(styles: ProcessExplorerStyles): void {\n\tconst styleTag = document.createElement('style');\n\tconst content: string[] = [];\n\n\tif (styles.hoverBackground) {\n\t\tcontent.push(`tbody > tr:hover  { background-color: ${styles.hoverBackground}; }`);\n\t}\n\n\tif (styles.hoverForeground) {\n\t\tcontent.push(`tbody > tr:hover{ color: ${styles.hoverForeground}; }`);\n\t}\n\n\tif (styles.highlightForeground) {\n\t\tcontent.push(`.highest { color: ${styles.highlightForeground}; }`);\n\t}\n\n\tstyleTag.innerHTML = content.join('\\n');\n\tif (document.head) {\n\t\tdocument.head.appendChild(styleTag);\n\t}\n\tif (styles.color) {\n\t\tdocument.body.style.color = styles.color;\n\t}\n}\n\nfunction applyZoom(zoomLevel: number): void {\n\twebFrame.setZoomLevel(zoomLevel);\n\tbrowser.setZoomFactor(webFrame.getZoomFactor());\n\t// See https://github.com/Microsoft/vscode/issues/26151\n\t// Cannot be trusted because the webFrame might take some time\n\t// until it really applies the new zoom level\n\tbrowser.setZoomLevel(webFrame.getZoomLevel(), /*isTrusted*/false);\n}\n\nfunction showContextMenu(e) {\n\te.preventDefault();\n\n\tconst items: IContextMenuItem[] = [];\n\n\tconst pid = parseInt(e.currentTarget.id);\n\tif (pid && typeof pid === 'number') {\n\t\titems.push({\n\t\t\tlabel: localize('killProcess', \"Kill Process\"),\n\t\t\tclick() {\n\t\t\t\tprocess.kill(pid, 'SIGTERM');\n\t\t\t}\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: localize('forceKillProcess', \"Force Kill Process\"),\n\t\t\tclick() {\n\t\t\t\tprocess.kill(pid, 'SIGKILL');\n\t\t\t}\n\t\t});\n\n\t\titems.push({\n\t\t\ttype: 'separator'\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: localize('copy', \"Copy\"),\n\t\t\tclick() {\n\t\t\t\tconst row = document.getElementById(pid.toString());\n\t\t\t\tif (row) {\n\t\t\t\t\tclipboard.writeText(row.innerText);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: localize('copyAll', \"Copy All\"),\n\t\t\tclick() {\n\t\t\t\tconst processList = document.getElementById('process-list');\n\t\t\t\tif (processList) {\n\t\t\t\t\tclipboard.writeText(processList.innerText);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst item = processList.filter(process => process.pid === pid)[0];\n\t\tif (item && isDebuggable(item.cmd)) {\n\t\t\titems.push({\n\t\t\t\ttype: 'separator'\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: localize('debug', \"Debug\"),\n\t\t\t\tclick() {\n\t\t\t\t\tattachTo(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} else {\n\t\titems.push({\n\t\t\tlabel: localize('copyAll', \"Copy All\"),\n\t\t\tclick() {\n\t\t\t\tconst processList = document.getElementById('process-list');\n\t\t\t\tif (processList) {\n\t\t\t\t\tclipboard.writeText(processList.innerText);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpopup(items);\n}\n\nexport function startup(data: ProcessExplorerData): void {\n\tapplyStyles(data.styles);\n\tapplyZoom(data.zoomLevel);\n\n\t// Map window process pids to titles, annotate process names with this when rendering to distinguish between them\n\tipcRenderer.on('vscode:windowsInfoResponse', (event, windows) => {\n\t\tmapPidToWindowTitle = new Map<number, string>();\n\t\twindows.forEach(window => mapPidToWindowTitle.set(window.pid, window.title));\n\t});\n\n\tsetInterval(() => {\n\t\tipcRenderer.send('windowsInfoRequest');\n\n\t\tlistProcesses(data.pid).then(processes => {\n\t\t\tprocessList = getProcessList(processes);\n\t\t\tupdateProcessInfo(processList);\n\n\t\t\tconst tableRows = document.getElementsByTagName('tr');\n\t\t\tfor (let i = 0; i < tableRows.length; i++) {\n\t\t\t\tconst tableRow = tableRows[i];\n\t\t\t\ttableRow.addEventListener('contextmenu', (e) => {\n\t\t\t\t\tshowContextMenu(e);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, 1200);\n\n\n\tdocument.onkeydown = (e: KeyboardEvent) => {\n\t\tconst cmdOrCtrlKey = platform.isMacintosh ? e.metaKey : e.ctrlKey;\n\n\t\t// Cmd/Ctrl + zooms in\n\t\tif (cmdOrCtrlKey && e.keyCode === 187) {\n\t\t\tapplyZoom(webFrame.getZoomLevel() + 1);\n\t\t}\n\n\t\t// Cmd/Ctrl - zooms out\n\t\tif (cmdOrCtrlKey && e.keyCode === 189) {\n\t\t\tapplyZoom(webFrame.getZoomLevel() - 1);\n\t\t}\n\t};\n}\n"]}