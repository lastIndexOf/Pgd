{"version":3,"sources":["vs/code/electron-browser/sharedProcess/fake","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/assert.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/collections.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/decorators.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/errors.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/arrays.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/functional.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/iterator.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/json.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/jsonFormatter.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/jsonEdit.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/lifecycle.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/linkedList.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/event.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/cancellation.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/async.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/network.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/platform.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/process.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/path.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/strings.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/date.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/extpath.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/types.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/objects.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uri.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/amd.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/map.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/glob.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/normalization.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/resources.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/labels.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uriIpc.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/uuid.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/flow.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/paths.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/proxy.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/stream.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/encoding.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/extfs.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/config.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/pfs.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.electron.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/electron-browser/ipc.electron-browser.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/parts/ipc/node/ipc.net.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/common/errorMessage.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionManagementIpc.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensions/common/extensions.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/descriptors.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/graph.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/instantiation.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/dialogs/common/dialogs.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/dialogs/node/dialogIpc.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/download/common/download.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/common/environment.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-browser/sharedProcess/contrib/storageDataCleaner.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/history/common/history.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/serviceCollection.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/instantiation/common/instantiationService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/ipc/electron-browser/mainProcessService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/localizations/common/localizations.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/localizations/node/localizationsIpc.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/common/log.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/node/logIpc.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/log/node/spdlogService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/product/node/package.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensions/node/extensionValidator.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/product/node/product.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-browser/sharedProcess/contrib/languagePackCachedDataCleaner.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-browser/sharedProcess/contrib/nodeCachedDataCleaner.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/environment/node/environmentService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensions/node/extensionsUtil.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/localizations/node/localizations.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/registry/common/platform.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationRegistry.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configuration.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/common/configurationModels.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/node/configuration.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/configuration/node/configurationService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/node/request.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetry.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetryService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/commonProperties.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/telemetry/node/telemetryIpc.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/windows/common/windows.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/workspaces/common/workspaces.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/windows/electron-browser/windowsService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/zip.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/base/node/request.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/download/node/downloadService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/extensionManagement/node/extensionGalleryService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/node/requestService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/platform/request/electron-browser/requestService.ts","vs/code/electron-browser/sharedProcess/file:/Users/zhengfankai/Desktop/workspace/vs-editor/src/vs/code/electron-browser/sharedProcess/sharedProcessMain.ts"],"names":["__m","__M","deps","result","i","len","length","exports","ok","value","message","Error","hasOwnProperty","Object","prototype","values","from","key","call","push","size","count","first","forEach","callback","groupBy","data","groupFn","create","element","target","fromMap","original","createDecorator","mapFn","descriptor","fnKey","fn","get","memoize","console","warn","memoizeKey","args","this","defineProperty","configurable","enumerable","writable","apply","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","undefined","clearTimeout","setTimeout","isPromiseCanceledError","error","name","canceledName","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","e","stack","listener","_removeListener","splice","indexOf","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","__awaiter","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","elem","uniqueFilter","notFoundValue","index","commonPrefixLength","flatten","concat","range","arg","fill","num","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","map","once","_this","didCall","arguments","FIN","done","Iterator","iterator","next","_empty","empty","fromArray","elements","collect","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","super","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","createScanner","text","ignoreTrivia","scanHexDigits","digits","ch","charCodeAt","pos","scanNext","scanError","tokenOffset","code","isWhiteSpace","fromCharCode","isLineBreak","substring","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","getNodePath","node","children","path","type","getNodeValue","prop","valueNode","contains","offset","includeRightBound","findNodeAtOffset","item","visit","visitor","options","ParseOptions","DEFAULT","toNoArgVisit","visitFunction","_scanner","toOneArgVisit","handleError","disallowComments","onComment","skipUntilAfter","skipUntil","onError","parseString","isValue","onLiteralValue","onObjectProperty","parseProperty","onSeparator","parseValue","onArrayBegin","needsComma","allowTrailingComma","onArrayEnd","parseArray","onObjectBegin","onObjectEnd","parseObject","JSON","parse","parseLiteral","getLiteralNodeType","ScanError","SyntaxKind","ParseErrorCode","CharacterCodes","getLocation","setPreviousNode","previousNodeInst","colonOffset","previousNode","segments","earlyReturnException","isAtPropertyKey","sep","matches","pattern","k","errors","onValue","currentParent","currentProperty","previousParents","object","parseTree","ensurePropertyComplete","endOffset","findNodeAtLocation","root","segment","found","propertyNode","stripComments","replaceCh","kind","parts","replace","join","format","documentText","newLineAndIndent","eol","repeat","indentValue","initialIndentLevel","indentLevel","scanner","lineBreak","hasError","addEdit","startOffset","rangeEnd","rangeStart","editOperations","content","formatText","formatTextStart","isEOL","nChars","tabSize","charAt","computeIndentLevel","getEOL","insertSpaces","json_1","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","setProperty","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","withFormatting","stringify","newProperty","edit","removalIndex","toRemove","newText","applyEdit","begin","jsonFormatter_1","edits","removeProperty","isWS","dispose","rest","d","isDisposable","thing","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","toDispose","None","freeze","ReferenceCollection","references","reference","counter","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","LinkedList","_size","_first","_last","_insert","atTheEnd","newNode","oldLast","prev","oldFirst","_remove","bind","res","candidate","anchor","iterator_1","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","fire","latch","cache","firstCall","shouldEmit","_disposable","signal","any","events","lifecycle_1","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","flush","echo","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","clear","listenerCount","threshold","Map","set","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","onFirstListenerDidAdd","onListenerDidAdd","removeMonitor","check","_noop","_deliveryQueue","iter","shift","AsyncEmitter","eventFn","_asyncDeliveryQueue","thenables","all","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","timeout","millis","sequence","promiseFactories","thenHandler","results","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","task","cancelTimeout","doReject","ThrottledDelayer","delayer","throttler","trigger","isTriggered","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","timer","ignoreErrors","shouldStop","defaultValue","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","doRun","RunOnceWorker","units","unit","schedule","nfcall","ninvoke","thisArg","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_executor","_value","_error","_didRun","_handle","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","command","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isNative","_locale","_language","_translationsConfigFile","isElectronRenderer","process","versions","electron","platform","rawNlsConfig","env","nlsConfig","resolved","availableLanguages","locale","userAgent","language","Platform","PlatformToString","isRealWindows","isWindows","isMacintosh","isLinux","isNative","isWeb","isRootUser","getuid","translationsConfigFile","_globals","self","global","globals","_setImmediate","setImmediate","OperatingSystem","OS","safeProcess","cwd","platform_1","validateString","ErrorInvalidArgType","isPathSeparator","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","isPosixPathSeparator","isWindowsDeviceRoot","CHAR_UPPERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_A","CHAR_LOWERCASE_Z","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","CHAR_DOT","lastSlashIndex","lastIndexOf","_format","pathObject","dir","base","ext","expected","actual","determiner","msg","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","substrEquals","aStart","aEnd","bStart","bEnd","isFullWidthCharacter","charCode","startsWithUTF8BOM","str","isFalsyOrWhitespace","trim","pad","l","char","reverse","_formatRegexp","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","test","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","lastIndex","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","isHighSurrogate","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","lcut","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","removeAccents","regex","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","toLocalISOString","date","getFullYear","strings_1","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","isWindowsDriveLetter","char0","toSlashes","osPath","path_1","getRoot","firstLetter","isUNC","INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","isValidBasename","isEqual","pathA","pathB","identityEquals","isEqualOrParent","sepOffset","_typeof","number","constructor","isString","string","isObject","isUndefined","isUndefinedOrNull","isFunction","function","validateConstraint","constraint","_a","isStringArray","every","isNumber","Number","isBoolean","isEmptyObject","areFunctions","objects","validateConstraints","constraints","ctor","isNativeClass","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","withNullAsUndefined","withUndefinedAsNull","deepClone","keys","_cloneAndChange","changer","types_1","changed","r1","has","add","r2","i2","_hasOwnProperty","delete","mixin","destination","overwrite","oneKeys","otherKeys","deepFreeze","isFrozen","cloneAndChange","Set","assign","sources","createKeywordMatcher","caseInsensitive","hash","arrayToHash","word","safeStringify","getOrDefault","baseValue","targetValue","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeTable","_makeFsPath","uri","authority","scheme","_asFormatted","skipEncoding","encoder","fragment","_slash","userinfo","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","setUriThrowOnMissingScheme","old","_regexp","URI","fsPath","with","schemeOrData","_strict","trace","_schemeFix","_referenceResolution","_validateUri","change","_URI","decodeURIComponent","components","_fsPath","_formatted","external","$mid","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","getPathFromAmdModule","requirefn","relativePath","uri_1","toUrl","forEachable","getOrSet","mapToString","entries","setToString","mapToSerializable","serializable","serializableToMap","StringIterator","_pos","PathIterator","_from","_to","justSeps","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","reset","val","hasNext","oldElement","_nodeIterator","_forEach","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","touch","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","starsToRegExp","starCount","NO_PATH_REGEX","PATH_REGEX","splitGlobAware","splitChar","inBraces","inBrackets","curVal","parseRegExp","regEx","GLOB_SPLIT","GLOBSTAR","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","strings","parsePattern","arg1","NULL","patternKey","trimForExclusions","parsedPattern","CACHE","wrapRelativePattern","T1","T2","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","T3_2","T3","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","T4","trivia4and5","T5","regExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","ALL_FORWARD_SLASHES","nativePathEnd","FALSE","isRelativePattern","resultPattern","expression","when","hasSibling","clausePattern","matched","async_1","requiresSiblings","parseExpressionPattern","some","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","getEmptyExpression","map_1","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","parseToAsync","getBasenameTerms","patternOrExpression","getPathTerms","form","normalizedCache","canNormalize","cached","nonAsciiCharactersPattern","nfcCache","normalizeNFC","nfdCache","normalizeNFD","hasToIgnoreCase","network_1","parentCandidate","originalFSPath","isEqualAuthority","a1","a2","uriPath","hasTrailingPathSeparator","fsp","getComparisonKey","basenameOrAuthority","second","p1","p2","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","resolvePath","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","hasDriveLetter","normalizeDriveLetter","tildify","userHome","normalizedUserHome","normalizedUserHomeCached","normalized","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","getBaseLabel","untildify","ellipsis","unc","home","shorten","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","Type","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","label","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","_transformOutgoingURIs","transformer","depth","transformOutgoing","_transformIncomingURIs","revive","transformIncoming","DefaultURITransformer","transformOutgoingURIs","transformIncomingURIs","transformAndReviveIncomingURIs","v4","V4UUID","isUUID","_UUIDPattern","ValueUUID","_randomHex","_oneOf","_timeHighBits","_chars","generateUuid","asHex","param","assert","looper","sequences","sequenceResult","sequenceFunction","Sequence","parallel","didErrorOccur","doneCount","pathsPath","amd_1","require","__$__nodeRequire","getAppDataPath","getDefaultUserDataPath","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","protocol","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","opts","host","hostname","port","auth","rejectUnauthorized","strictSSL","resolve_1","reject_1","resolve_2","reject_2","readExactlyByFile","totalBytes","fs","open","fd","resultBuffer","bytesRead","close","closeError","readChunk","read","Buffer","allocUnsafe","readToMatchingString","matchingString","chunkBytes","maximumBytesToRead","newLineIndex","decodeStream","encoding","iconv","toNodeEncoding","enc","UTF8_with_bom","UTF8","detectEncodingByBOMFromBuffer","b0","readUInt8","b1","UTF16be","UTF16le","b2","guessEncodingByBuffer","jschardet","Constants","MINIMUM_THRESHOLD","guessed","detect","IGNORE_ENCODINGS","toIconvLiteEncoding","encodingName","normalizedEncodingName","JSCHARDET_TO_ICONV_ENCODINGS","detectEncodingFromBuffer","autoGuessEncoding","seemsBinary","couldBeUTF16LE","couldBeUTF16BE","containsZeroByte","ZERO_BYTE_DETECTION_BUFFER_MAX_LEN","isEndian","isZeroByte","readInt8","guessedEncoding","toDecodeStream","readable","minBytesRequiredForDetection","guessEncoding","AUTO_GUESS_BUFFER_MAX_LEN","NO_GUESS_BUFFER_MAX_LEN","overwriteEncoding","detected","pipe","stream_1","Writable","_bytesBuffered","chunk","isBuffer","_decodeStream","write","_decodeStreamConstruction","_startDecodeStream","stream","bomLength","decode","encode","encodingExists","encodeStream","detectEncodingByBOM","ibm866","big5","toCanonicalName","windowsTerminalEncodings","437","850","852","855","857","860","861","863","865","866","869","936","1252","resolveTerminalEncoding","verbose","rawEncodingPromise","cliEncodingEnv","log","child_process_1","stdout","stderr","windowsTerminalEncodingKeys","rawEncoding","iconvEncoding","readdirSync","normalization_1","readdir","copy","copiedSourcesIn","copiedSources","stat","isDirectory","mode","reader","createReadStream","writer","createWriteStream","finished","finish","chmod","doCopyFile","proceed","files","mkdirp","mkdir","mkdirErr","statErr","rmRecursive","exists","lstat","isSymbolicLink","unlink","rmdir","firstError","childrenLeft","child","delSync","lstatSync","rmdirSync","unlinkSync","writeFileAndFlush","ensureOptions","encoding_1","charset","addBOM","canFlush","writeFile","flag","openError","writeError","fdatasync","syncError","doWriteFileAndFlush","isBrowser","isOpen","destroy","flags","autoClose","doWriteFileStreamAndFlush","ensuredOptions","realcaseSync","ix","flow","statLink","del","tmpFolder","pathInTemp","uuid","rename","mv","updateMtime","futimes","atime","writeFileAndFlushSync","writeFileSync","openSync","fdatasyncSync","closeSync","realpathSync","accessSync","constants","R_OK","realpath","access","watch","onChange","watcher","raw","removeAllListeners","sanitizeFilePath","ConfigWatcher","_path","defaultConfig","configName","_onDidUpdateConfiguration","registerWatcher","initAsync","hasParseErrors","parseErrors","onDidUpdateConfiguration","loadAsync","config","loaded","updateCache","initCallback","getConfig","readFileSync","readFile","json","parentFolder","readlink","realPath","isParentFolder","extfs","onConfigFileChange","eventType","filename","timeoutHandle","reload","changeBufferDelay","currentConfig","ensureLoaded","loadSync","rimraf","queueKey","writeFileQueue","writeFilePathQueue","onFinish","ensureWriteFileQueue","toQueueKey","dirExists","tmp","_tmpDir","os","tmpdir","oldPath","newPath","renameIgnoreError","symlink","truncate","readDirsInDir","dirPath","fileExists","isFile","whenDeleted","running","createSizeBuffer","writeUInt32BE","readSizeBuffer","readUInt32BE","serialize","BufferPresets","Undefined","el","deserialize","DataType","getDelayedChannel","cancellationToken","relay","listen","RequestType","ResponseType","State","BufferReader","bytes","BufferWriter","alloc","ChannelServer","ctx","channels","activeRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","cancellationTokenSource","disposable","ChannelClient","state","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidChangeConnections","onDidChangeConnections","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","router","routeCall","getChannel","routeEvent","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","Protocol","sender","Client","ipc_1","electron_1","ipcRenderer","ipc_electron_1","createProtocol","createBufferedEvent","isDeliveringMessages","bufferedMessages","deliverMessages","generateRandomPipeName","randomSuffix","uuid_1","os_1","ChunkStream","byteLength","_totalLength","_chunks","buff","byteCount","resultOffset","_socket","_onMessage","_onClose","onClose","_writeBuffer","_data","head","wasEmpty","_isDisposed","_incomingData","readHead","bodyLen","_socketDataListener","acceptChunk","_headerLen","_socketEndListener","_socketCloseListener","_writeSoon","destroyed","take","Server","server","onConnection","socket","toClientConnectionEvent","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","BufferedProtocol","_actual","define","nls","exceptionToErrorMessage","exception","localize","detectSystemErrorMessage","errno","syscall","toErrorMessage","types","detail","areSameExtensions","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","extensions","getExtensionIdentifier","byExtension","findGroup","extension","getLocalExtensionTelemetryData","identifier","manifest","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","properties","telemetryData","BetterMergeId","getMaliciousExtensionsSet","report","malicious","nlsRegex","localizeManifest","translations","objects_1","ExtensionsLifecycle","environmentService","logService","processesLimiter","script","parseScript","info","version","runLifecycleHook","pfs_1","getExtensionStoragePath","scriptKey","location","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","errorMessage_1","kill","uninstallHook","silent","execArgv","extensionUninstallProcess","fork","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","transformIncomingURI","transformIncomingExtension","uriIpc_1","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","service","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","uriTransformer","local","zip","unzip","install","installFromGallery","uninstall","reinstallFromGallery","getInstalled","updateMetadata","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","force","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","ExtensionIdentifierWithVersion","extensionManagementUtil_1","isIExtensionIdentifier","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","ExtensionsManifestCache","extensionsManagementServuce","extensionsManifestCache","userDataPath","extensions_1","_register","onDidUnInstallExtension","invalidate","pfs","SyncDescriptor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","Graph","_hashFn","_nodes","collections_1","entry","outgoing","fromNode","lookupOrInsertNode","toNode","incoming","_key","storeServiceDependency","optional","_util","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IDialogService","instantiation_1","IFileDialogService","MAX_CONFIRM_FILES","getConfirmMessage","resourcesToConfirm","nls_1","DialogChannel","dialogService","show","confirm","__decorate","__param","dialogs_1","DialogChannelClient","severity","confirmation","IDownloadService","IEnvironmentService","LogsDataCleaner","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","toDelete","environment_1","StorageDataCleaner","cleanUpStorageSoon","backupWorkspacesPath","contents","emptyWorkspaces","emptyWorkspaceInfos","backupFolder","workspaceStorageHome","storageFolders","deletes","storageFolder","NON_EMPTY_WORKSPACE_ID_LENGTH","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","IExtensionManagementService","IExtensionGalleryService","SortBy","SortOrder","StatisticType","InstallOperation","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","IExtensionManagementServerService","EnablementState","IExtensionEnablementService","IExtensionTipsService","ExtensionRecommendationReason","ExtensionsLabel","ExtensionsChannelId","PreferencesLabel","IHistoryMainService","isRecentWorkspace","curr","isRecentFolder","isRecentFile","ServiceCollection","_entries","instanceOrDescriptor","_canUseProxy","Proxy","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","accessor","isOptional","_getOrCreateServiceInstance","stop","ctorOrDescriptor","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","throwCycleError","graph","graph_1","insertEdge","roots","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","_target","getValue","TraceType","_start","now","_dep","_None","printChild","causedCreation","nested","dur","_totals","lines","IMainProcessService","MainProcessService","windowId","mainProcessConnection","ipc_electron_browser_1","LanguageType","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","LocalizationsChannel","onDidLanguagesChange","getLanguageIds","toISOString","ILogService","LogLevel","DEFAULT_LOG_LEVEL","Info","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Warning","Critical","ConsoleLogService","MultiplexLogService","logServices","debug","critical","DelegatedLogService","NullLogService","getLogLevel","Off","LogLevelSetterChannel","LogLevelSetterChannelClient","FollowerLogService","log_1","master","createSpdLogService","processName","logsFolder","_spdlog","setAsyncMode","logfilePath","logger","RotatingLogger","SpdLogService","createRotatingLogger","filesize","filecount","window","postMessage","$type","$data","dirs","abDirPath","existsSync","mkdirSync","fileContent","clearFormatters","drop","rootPath","packageJsonPath","default","isValidVersionStr","VERSION_REGEXP","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","package_1","productJsonPath","product","nameShort","nameLong","dataFolderName","LanguagePackCachedDataCleaner","_environmentService","_logService","_disposables","isBuilt","_manageCachedDataSoon","maxAge","product_1","installed","metaData","cacheDir","packEntry","folder","mtime","NodeCachedDataCleaner","nodeCachedDataDir","nodeCachedDataRootDir","nodeCachedDataCurrent","stats","_DataMaxAge","getIPCHandle","crypto","createHash","update","digest","getWin32IPCHandle","xdgRuntimeDir","scope","getNixIPCHandle","parseExtensionHostPort","isBuild","parseDebugPort","debugId","parseSearchPort","debugArg","debugBrkArg","defaultBuildPort","portStr","break","Boolean","parsePathArg","parseUserDataDir","EnvironmentService","_args","_execPath","date_1","appRoot","execPath","cliPath","applicationName","getCLIPath","homedir","vscodePortable","appNameLong","appQuality","quality","appSettingsHome","appSettingsPath","settingsSearchBuildId","settingsSearchUrl","appKeybindingsPath","isExtensionDevelopment","extensionDevelopmentPath","backupHome","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","extensionsPath","vscodeExtensions","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","skipGettingStarted","skipReleaseNotes","skipAddToRecentlyOpened","debugExtensionHost","debugSearch","wait","logExtensionHostCommunication","status","mainIPCHandle","sharedIPCHandle","disableUpdates","disableCrashReporter","driverHandle","driverVerbose","decorators_1","isUIExtension","uiContributions","configurationService","extensionId","configuredUIExtensions","extensionKind","arrays_1","uiExtensions","contribution","systemLanguages","LocalizationsService","extensionManagementService","_onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionIdentifier","updated","extensionManagement_1","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","crypto_1","RegistryImpl","Assert","Types","Registry","Extensions","JSONContribution","JSONContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","normalizeId","schemas","jsonContributionRegistry","getDefaultValue","validateProperty","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","getConfigurationProperties","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","windowSettings","resourceSettings","editorConfigurationSchemaId","contributionRegistry","as","jsonContributionRegistry_1","ConfigurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","defaultOverridesConfigurationNode","title","configurationContributors","editorConfigurationSchema","additionalProperties","errorMessage","configurationProperties","excludedConfigurationProperties","computeOverridePropertyPattern","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","updateSchemaForOverrideSettingsConfiguration","deregisterConfiguration","allOf","defaultConfigurations","defaultConfiguration","defaults","propertySchema","description","$ref","updateOverridePropertyPatternKey","overridable","propertyKeys","included","subNodes","register","SETTINGS_OVERRRIDE_NODE_ID","overridePropertyPattern","subNode","OVERRIDE_PATTERN_WITH_SUBSTITUTION","OVERRIDE_PROPERTY","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","doRemoveFromValueTree","valueTree","getConfigurationValue","settingPath","component","accessSetting","overrideIdentifierFromKey","IConfigurationService","isConfigurationOverrides","overrideIdentifier","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","toOverrides","overrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","identifiers","removeFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","keyFromOverrideIdentifier","getMigratedSettingValue","currentSettingName","legacySettingName","setting","inspect","legacySetting","user","workspace","workspaceFolder","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","override","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_configurationModel","_parseErrors","configurationModel","parseContent","parseRaw","_defaultConfiguration","_userConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","memory","userConfiguration","workspaceConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","isComplete","addKeys","AbstractConfigurationChangeEvent","changedKeysTree","requestedTree","ConfigurationChangeEvent","_changedConfiguration","_changedConfigurationByResource","changedConfiguration","changedConfigurationByResource","getOrSetChangedConfigurationForResource","changeWithKeys","sourceConfig","_source","_sourceConfig","affectedKeys","model","configurationModelsToSearch","doesConfigurationContains","updateKeys","UserConfiguration","settingsPath","_onDidChangeConfiguration","onDidChangeConfiguration","initializePromise","userConfigModelWatcher","config_1","configurationModels_1","userConfigModelParser","initialize","ConfigurationService","configuration_2","initializeSync","_configuration","userConfigurationModel","onDidChangeUserConfiguration","onDidDefaultConfigurationChange","toData","arg3","arg4","changedKeys","updateUserConfiguration","updateDefaultConfiguration","getTargetConfiguration","IRequestService","registerConfiguration","order","http.proxy","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","ITelemetryService","TelemetryService","_configurationService","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","piiPath","_updateUserOptIn","publicLog","optIn","isHashedId","usingFallbackGuid","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","sessionId","instanceId","machineId","anonymizeFilePaths","_cleanupInfo","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","configurationTelemetry","telemetryService","configurationSource","configurationKeys","flatKeys","flattenKeys","configurationValues","v","flattenValues","configurationValueWhitelist","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","commonPropertiesRegex","strippedData","keybindingsTelemetry","keybindingService","onDidUpdateKeybindings","keybindings","bindings","binding","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","client","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","measurements","flat","_flaten","_getData","trackEvent","resolveCommonProperties","commit","release","arch","seq","startTime","defineProperties","timestamp","common.timesincesessionstart","common.sequence","TelemetryAppenderChannel","TelemetryAppenderClient","IWindowsService","IWindowService","getTitleBarStyle","environment","isDev","nativeTabs","nativeFullScreen","style","titleBarStyle","OpenContext","ReadyState","ActiveWindowManager","windowsService","onWindowOpen","onWindowFocus","onActiveWindowChange","setActiveWindow","firstActiveWindowIdPromise","getActiveWindowId","_activeWindowId","isStoredWorkspaceFolder","isRawFileWorkspaceFolder","isRawUriWorkspaceFolder","isSingleFolderWorkspaceIdentifier","getStoredWorkspaceFolder","folderURI","folderName","targetConfigFolderURI","useSlashForPath","folderPath","labels_1","extpath_1","rewriteWorkspaceFileForNewLocation","rawWorkspaceContents","configPathURI","targetConfigPathURI","storedWorkspace","doParseStoredWorkspace","sourceConfigFolder","targetConfigFolder","rewrittenFolders","slashForPath","newRawWorkspaceContents","jsonEdit","storedFolders","SLASH","IWorkspacesMainService","IWorkspacesService","WORKSPACE_EXTENSION","WORKSPACE_FILTER","UNTITLED_WORKSPACE_NAME","reviveWorkspaceIdentifier","configPath","isWorkspaceIdentifier","workspaceIdentifier","toWorkspaceIdentifier","isSingleFolderWorkspaceInitializationPayload","WORKSPACE_SUFFIX","hasWorkspaceFileExtension","WindowsService","mainProcessService","onWindowBlur","onWindowMaximize","onWindowUnmaximize","onRecentlyOpenedChange","workspaces_1","fileName","recent","recentlyOpened","workspaces","history_1","folderUri","fileUri","uris","win","messages","url","mainProcessService_1","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","ExtractError","sourcePathRegex","targetFileName","openReadStream","attr","externalFileAttributes","mask","modeFromEntry","dirName","targetDirName","istream","fs_1","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","toExtractError","zipPath","filePath","cause","yazl","ZipFile","f","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","getManifest","zip_1","parseManifest","__metadata","ExtensionManagementError","ExtensionManagementService","remote","galleryService","downloadService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","_devSystemExtensionsPath","_devSystemExtensionsFilePath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","manifestCache","extensionsManifestCache_1","extensionLifecycle","extensionLifecycle_1","collectFiles","collectFilesFromDirectory","downloadVsix","downloadLocation","extensionManagementUtil_2","operation","extensionValidator_1","identifierWithVersion","installedExtensions","removeExtension","displayName","semver","gt","getMetadata","installFromZipPath","downloadedLocation","download","toNonCancellablePromise","installExtension","installDependenciesAndPackExtensions","gallery","onDidInstallExtensionFailure","errorCode","reportTelemetry","getTelemetryEvent","checkAndGetCompatibleVersion","cancellablePromise","successCallback","errorCallback","existingExtension","downloadInstallableExtension","installableExtension","onDidInstallExtensionSuccess","isMalicious","compatibleExtension","getCompatibleExtension","extensionsUtil_1","isEnabled","findGalleryExtension","galleryExtension","setUninstalled","removeUninstalledExtension","joinErrors","unsetUninstalledAndGetLocal","extractAndInstall","isUninstalled","unsetUninstalled","tempPath","extensionPath","extractAndRename","scanExtension","saveMetadataForLocalExtension","extractPath","renamePath","identfier","retryUntil","dependenciesAndPackExtensions","extensionPack","names","galleryIdentifier","pageSize","galleryResult","extensionsToInstall","firstPage","rollback","extensionToUninstall","checkForDependenciesAndUninstall","localExtension","manifestPath","extensionName","findGalleryExtensionByName","findGalleryExtensionById","ids","errorOrErrors","previousValue","currentValue","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","uninstallExtension","doUninstall","checked","extensionsPack","packOfPackedExtensions","packedExtension","scanUserExtensions","userExtensions","u","reportStatistic","errorcode","promises","scanSystemExtensions","systemExtensionsPromise","scanExtensions","devSystemExtensionsPromise","getDevSystemExtensionsList","devSystemExtensionsList","devSystemExtensionsPath","systemExtensions","devSystemExtensions","excludeOutdated","getUninstalledExtensions","uninstalled","rcompare","limiter","extensionsFolders","extensionFolder","extensionNls_1","readManifest","readme","readmeUrl","changelog","changelogUrl","removeUninstalledExtensions","removeOutdatedExtensions","postUninstall","withUninstalledExtensions","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","devSystemExtensionsFilePath","extensionData","duration","success","download_1","telemetry_1","req","getRawRequest","getNodeRequest","rawRequest","endpoint","method","headers","agent","password","followRedirects","statusCode","zlib_1","createGunzip","abort","isSuccess","hasNoContent","asText","asJson","DownloadService","requestService","request_2","request_1","flagsToString","getStatistic","statistics","statisticName","getVersionAsset","assetType","assetUri","fallbackUri","fallbackAssetUri","getExtensions","getEngine","PropertyType","Engine","toExtension","querySource","assets","AssetType","Manifest","Details","Changelog","license","License","repository","Repository","gitRegExp","getRepositoryAsset","VSIX","getDownloadAsset","icon","asset","Icon","getIconAsset","coreTranslations","getCoreTranslationAssets","lastUpdated","shortDescription","installCount","rating","ratingCount","Dependency","ExtensionPack","localizedLanguages","LocalizedLanguages","getLocalizedLanguages","pageNumber","searchText","preview","getIsPreview","resolveMarketplaceHeaders","marketplaceMachineIdFile","extfs_1","X-Market-Client-Id","User-Agent","X-Market-User-Id","Flags","FilterType","DefaultQueryState","sortBy","sortOrder","criteria","assetTypes","Query","filterType","filters","criterium","SearchText","ExtensionGalleryService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","ExcludeNonValidated","withPage","withFilter","Target","ExcludeWithFlags","Unpublished","ExtensionId","ExtensionName","queryGallery","galleryExtensions","rawExtension","versionAsset","getLastValidExtensionVersion","rawVersion","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","withSortBy","withSortOrder","total","getPage","pageIndex","ct","nextPageQuery","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","api","resultCount","resultMetadata","metadataType","metadataItems","operationParam","downloadAsset","getAsset","getDependenciesReccursively","compatible","IncludeVersions","extensionNames","withAssetTypes","toGet","hasExtensionByName","loadDependencies","loadedDependencies","dependenciesSet","dep","fallbackUrl","firstOptions","cdn","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionReccursively","slow","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","requestFn","proxy_1","Proxy-Authorization","requestService_1","xhrRequest","xhr","XMLHttpRequest","outer","setRequestHeader","setRequestHeaders","responseType","onerror","statusText","onload","line","getAllResponseHeaders","getResponseHeaders","Readable","arraybuffer","Uint8Array","_offset","_length","ontimeout","startup","initData","onExit","environmentService_1","mainRouter","logLevelClient","logIpc_1","spdlogService_1","configurationService_1","downloadService_1","windowsService_1","windows_1","activeWindowManager","activeWindowRouter","getActiveClientId","dialogChannel","dialogIpc_1","instantiationService","instantiationService_1","invokeFunction","telemetryLogService","appInsightsAppender","telemetryUtils_1","aiConfig","asimovKey","appInsightsAppender_1","eventPrefix","commonProperties_1","telemetryService_1","telemetryIpc_1","extensionManagementService_1","extensionGalleryService_1","localizations_2","instantiationService2","createChild","extensionManagementIpc_1","localizationsService","localizationsChannel","localizationsIpc_1","removeDeprecatedExtensions","createInstance","nodeCachedDataCleaner_1","languagePackCachedDataCleaner_1","storageDataCleaner_1","logsDataCleaner_1","retry","ipc_net_1","setupIPC","handshake"],"mappings":"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","file":"sharedProcessMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport interface IStringDictionary<V> {\n\t[name: string]: V;\n}\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport interface INumberDictionary<V> {\n\t[idx: number]: V;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn from[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebouceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebouceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: Array<T | undefined | null>): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tif (!array) {\n\t\treturn;\n\t}\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: ReadonlyArray<T> | undefined | null): obj is Array<T> {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null = null): T | null {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function fromArray<T>(array: T[], index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>): T[] {\n\t\tconst result: T[] = [];\n\t\tforEach(iterator, value => result.push(value));\n\t\treturn result;\n\t}\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: Iterator<T> | T[]): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate items: T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet value = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\tvalue = -1;\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tch = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch = scanHexDigits(4);\n\t\t\t\t\t\tif (ch >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhiteSpace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhiteSpace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhiteSpace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhiteSpace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getLiteralNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getLiteralNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\treturn true;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nfunction getLiteralNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tdefault: return 'null';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, SyntaxKind, ScanError } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nfunction getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParseError, Node, JSONPath, Segment, parseTree, findNodeAtLocation } from './json';\nimport { Edit, format, isEOL, FormattingOptions } from './jsonFormatter';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tconst insertIndex = lastSegment;\n\t\tif (insertIndex === -1) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tconst previous = parent.children[parent.children.length - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\tif (value === undefined && parent.children.length >= 0) {\n\t\t\t\t//Removal\n\t\t\t\tconst removalIndex = lastSegment;\n\t\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\t\tlet edit: Edit;\n\t\t\t\tif (parent.children.length === 1) {\n\t\t\t\t\t// only item\n\t\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t\t// last item\n\t\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t\t} else {\n\t\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Array modification not supported yet');\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nfunction withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst edit = edits[i];\n\t\tnewText = applyEdit(newText, edit);\n\t\tbegin = Math.min(begin, edit.offset);\n\t\tend = Math.max(end, edit.offset + edit.length);\n\t\tend += edit.content.length - edit.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function isWS(text: string, offset: number) {\n\treturn '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(...disposables: Array<T | undefined>): T[];\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(first: T | T[], ...rest: T[]): T | T[] | undefined {\n\tif (Array.isArray(first)) {\n\t\tfirst.forEach(d => d && d.dispose());\n\t\treturn [];\n\t} else if (rest.length === 0) {\n\t\tif (first) {\n\t\t\tfirst.dispose();\n\t\t\treturn first;\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tdispose(first);\n\t\tdispose(rest);\n\t\treturn [];\n\t}\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\treturn { dispose() { fn(); } };\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected _toDispose: IDisposable[] = [];\n\tprotected get toDispose(): IDisposable[] { return this._toDispose; }\n\n\tprivate _lifecycle_disposable_isDisposed = false;\n\n\tpublic dispose(): void {\n\t\tthis._lifecycle_disposable_isDisposed = true;\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif (this._lifecycle_disposable_isDisposed) {\n\t\t\tconsole.warn('Registering disposable on object that has already been disposed.');\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.push(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate references: { [key: string]: { readonly object: T; counter: number; } } = Object.create(null);\n\n\tconstructor() { }\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references[key];\n\n\t\tif (!reference) {\n\t\t\treference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference.object);\n\t\t\t\tdelete this.references[key];\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\telement: E;\n\tnext: Node<E> | undefined;\n\tprev: Node<E> | undefined;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> | undefined;\n\tprivate _last: Node<E> | undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._first;\n\t}\n\n\tclear(): void {\n\t\tthis._first = undefined;\n\t\tthis._last = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (!this._first) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\t\treturn this._remove.bind(this, newNode);\n\t}\n\n\n\tshift(): E | undefined {\n\t\tif (!this._first) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (!this._last) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tlet candidate: Node<E> | undefined = this._first;\n\t\twhile (candidate instanceof Node) {\n\t\t\tif (candidate !== node) {\n\t\t\t\tcandidate = candidate.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (candidate.prev && candidate.next) {\n\t\t\t\t// middle\n\t\t\t\tconst anchor = candidate.prev;\n\t\t\t\tanchor.next = candidate.next;\n\t\t\t\tcandidate.next.prev = anchor;\n\n\t\t\t} else if (!candidate.prev && !candidate.next) {\n\t\t\t\t// only node\n\t\t\t\tthis._first = undefined;\n\t\t\t\tthis._last = undefined;\n\n\t\t\t} else if (!candidate.next) {\n\t\t\t\t// last\n\t\t\t\tthis._last = this._last!.prev!;\n\t\t\t\tthis._last.next = undefined;\n\n\t\t\t} else if (!candidate.prev) {\n\t\t\t\t// first\n\t\t\t\tthis._first = this._first!.next!;\n\t\t\t\tthis._first.prev = undefined;\n\t\t\t}\n\n\t\t\t// done\n\t\t\tthis._size -= 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node instanceof Node; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nexport namespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function () { return _disposable; };\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * throught the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Similar to `buffer` but it buffers indefinitely and repeats\n\t * the buffered events to every new listener.\n\t */\n\texport function echo<T>(event: Event<T>, nextTick = false, buffer: T[] = []): Event<T> {\n\t\tbuffer = buffer.slice();\n\n\t\tevent(e => {\n\t\t\tbuffer.push(e);\n\t\t\temitter.fire(e);\n\t\t});\n\n\t\tconst flush = (listener: (e: T) => any, thisArgs?: any) => buffer.forEach(e => listener.call(thisArgs, e));\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonListenerDidAdd(emitter: Emitter<T>, listener: (e: T) => any, thisArgs?: any) {\n\t\t\t\tif (nextTick) {\n\t\t\t\t\tsetTimeout(() => flush(listener, thisArgs));\n\t\t\t\t} else {\n\t\t\t\t\tflush(listener, thisArgs);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue: [Listener<T>, T][];\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = [];\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.length > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners = undefined;\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.length = 0;\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue: [Listener<T>, T, Promise<any>[]][];\n\n\tasync fireAsync(eventFn: (thenables: Promise<any>[], listener: Function) => T): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\t// put all [listener,event]-pairs into delivery queue\n\t\t// then emit all event. an inner/nested event might be\n\t\t// the driver of this\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = [];\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tconst thenables: Promise<void>[] = [];\n\t\t\tthis._asyncDeliveryQueue.push([e.value, eventFn(thenables, typeof e.value === 'function' ? e.value : e.value[0]), thenables]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.length > 0) {\n\t\t\tconst [listener, event, thenables] = this._asyncDeliveryQueue.shift()!;\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables);\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn new class implements CancelablePromise<T> {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: (err: any) => void;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tconst task = this.task!;\n\t\t\t\tthis.task = null;\n\n\t\t\t\treturn task();\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tthis.doResolve!(null);\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject(errors.canceled());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tpublic get onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue {\n\tprivate queues: { [path: string]: Queue<void> };\n\n\tconstructor() {\n\t\tthis.queues = Object.create(null);\n\t}\n\n\tpublic queueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues[key]) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tdelete this.queues[key];\n\t\t\t});\n\n\t\t\tthis.queues[key] = queue;\n\t\t}\n\n\t\treturn this.queues[key];\n\t}\n}\n\nexport class TimeoutTimer extends Disposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tsuper();\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer extends Disposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tsuper.dispose();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport function nfcall(fn: Function, ...args: any[]): Promise<any>;\nexport function nfcall<T>(fn: Function, ...args: any[]): Promise<T>;\nexport function nfcall(fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn(...args, (err: any, result: any) => err ? e(err) : c(result)));\n}\n\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): Promise<any>;\nexport function ninvoke<T>(thisArg: any, fn: Function, ...args: any[]): Promise<T>;\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): any {\n\treturn new Promise((resolve, reject) => fn.call(thisArg, ...args, (err: any, result: any) => err ? reject(err) : resolve(result)));\n}\n\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): DOMHighResTimeStamp;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean;\n\tprivate _value: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory: string = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode: string = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal: string = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough: string = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet: string = 'walkThroughSnippet';\n\n\texport const http: string = 'http';\n\n\texport const https: string = 'https';\n\n\texport const file: string = 'file';\n\n\texport const mailto: string = 'mailto';\n\n\texport const untitled: string = 'untitled';\n\n\texport const data: string = 'data';\n\n\texport const command: string = 'command';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\n// let _isLinux = false;\nlet _isNative = false;\n// let _isWeb = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\tconst userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t// _isLinux = userAgent.indexOf('Linux') >= 0;\n\t// _isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t// _isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\n// let _platform: Platform = Platform.Web;\n// if (_isNative) {\n// \tif (_isMacintosh) {\n// \t\t_platform = Platform.Mac;\n// \t} else if (_isWindows) {\n// \t\t_platform = Platform.Windows;\n// \t} else if (_isLinux) {\n// \t\t_platform = Platform.Linux;\n// \t}\n// }\n\nexport const isRealWindows = _isWindows;\nexport const isWindows = false; // _isWindows;\nexport const isMacintosh = true; // _isMacintosh;\nexport const isLinux = false; // _isLinux;\nexport const isNative = false; // _isNative;\nexport const isWeb = false; // _isWeb;\nexport const platform = 1; // _platform;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\nlet _setImmediate: ((callback: (...args: any[]) => void) => number) | null = null;\nexport function setImmediate(callback: (...args: any[]) => void): number {\n\tif (_setImmediate === null) {\n\t\tif (globals.setImmediate) {\n\t\t\t_setImmediate = globals.setImmediate.bind(globals);\n\t\t} else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\t\t_setImmediate = process.nextTick.bind(process);\n\t\t} else {\n\t\t\t_setImmediate = globals.setTimeout.bind(globals);\n\t\t}\n\t}\n\treturn _setImmediate!(callback);\n}\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: object;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): number;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): number { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: string) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tlet msg;\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tmsg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\t}\n}\n\nfunction validateString(value: string, name) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep, pathObject) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\ninterface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\ninterface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && <any>regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\tconst len1 = a ? a.length : 0;\n\tconst len2 = b ? b.length : 0;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tif (typeof a !== 'string' || typeof b !== 'string') {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, empty);\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix } from 'vs/base/common/path';\n\nfunction isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst INVALID_FILE_CHARS = isWindows ? /[\\\\/:\\*\\?\"<>\\|]/g : /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined): boolean {\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tINVALID_FILE_CHARS.lastIndex = 0; // the holy grail of software development\n\tif (INVALID_FILE_CHARS.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindows && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindows && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindows && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 lenth\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor: Function, ...args: any[]): any {\n\tif (isNativeClass(ctor)) {\n\t\treturn new (ctor as any)(...args);\n\t} else {\n\t\tconst obj = Object.create(ctor.prototype);\n\t\tctor.apply(obj, args);\n\t\treturn obj;\n\t}\n}\n\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing): boolean {\n\treturn typeof thing === 'function'\n\t\t&& thing.hasOwnProperty('prototype')\n\t\t&& !thing.hasOwnProperty('arguments');\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(obj).forEach((key: string) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = deepClone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction arrayToHash(array: string[]): { [name: string]: true } {\n\tconst result: any = {};\n\tfor (const e of array) {\n\t\tresult[e] = true;\n\t}\n\treturn result;\n}\n\n/**\n * Given an array of strings, returns a function which, given a string\n * returns true or false whether the string is in that array.\n */\nexport function createKeywordMatcher(arr: string[], caseInsensitive: boolean = false): (str: string) => boolean {\n\tif (caseInsensitive) {\n\t\tarr = arr.map(function (x) { return x.toLowerCase(); });\n\t}\n\tconst hash = arrayToHash(arr);\n\tif (caseInsensitive) {\n\t\treturn function (word) {\n\t\t\treturn hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n\t\t};\n\t} else {\n\t\treturn function (word) {\n\t\t\treturn hash[word] !== undefined && hash.hasOwnProperty(word);\n\t\t};\n\t}\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\n/**\n * @internal\n */\nexport function setUriThrowOnMissingScheme(value: boolean): boolean {\n\tconst old = _throwOnMissingSchema;\n\t_throwOnMissingSchema = value;\n\treturn old;\n}\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\t// console.error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t} else {\n\t\t\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (_strict || _throwOnMissingSchema) {\n\t\treturn scheme || _empty;\n\t}\n\tif (!scheme) {\n\t\tconsole.trace('BAD uri lacks scheme, falling back to file-scheme.');\n\t\tscheme = 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tpublic static parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tpublic static file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tpublic static from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | any): URI {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._fsPath = (<UriState>data).fsPath;\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): object {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn URI.parse(requirefn.toUrl(relativePath)).fsPath;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value: string;\n\tprivate _from: number;\n\tprivate _to: number;\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment: string;\n\tvalue: E | undefined;\n\tkey: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T) => void): void {\n\t\tthis.map.forEach(clb);\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\n// We should fold BoundedMap and LinkedMap. See https://github.com/Microsoft/vscode/issues/28496\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause | any;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && strings.endsWith(path, base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string, basename: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): any {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): any {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1 as string | IRelativePattern, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern = function (path: string, basename: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\t(<ParsedStringPattern><any>resultPattern).allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\t(<ParsedStringPattern><any>resultPattern).allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: any): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\n/**\n * Same as `parse`, but the ParsedExpression is guaranteed to return a Promise\n */\nexport function parseToAsync(expression: IExpression, options?: IGlobOptions): ParsedExpression {\n\tconst parsedExpression = parse(expression, options);\n\treturn (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> => {\n\t\tconst result = parsedExpression(path, basename, hasSibling);\n\t\treturn isThenable(result) ? result : Promise.resolve(result);\n\t};\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: any, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename: string, name: string, hasSibling: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof ((<any>'').normalize) === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function getComparisonKey(resource: URI): string {\n\treturn hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase);\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, ignoreCase, '/');\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests wheter the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\nexport function isEqual(first: URI | undefined, second: URI | undefined, ignoreCase = hasToIgnoreCase(first)): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tif (resource.scheme === Schemas.file) {\n\t\treturn URI.file(paths.dirname(originalFSPath(resource)));\n\t}\n\tlet dirname = paths.posix.dirname(resource.path);\n\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns the fsPath of an URI where the drive letter is not normalized.\n * See #56403.\n */\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === paths.sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash; // ignore the slash at offset 0\n\t}\n}\n\n\n/**\n * Removes a trailing path seperator, if theres one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI): URI {\n\tif (hasTrailingPathSeparator(resource)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(from.path, to.path);\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\treturn paths.posix.relative(from.path || '/', to.path || '/');\n}\n\n/**\n * Resolves a absolute or relative path against a base URI.\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tlet resolvedPath: string;\n\tif (base.scheme === Schemas.file) {\n\t\tresolvedPath = URI.file(paths.resolve(originalFSPath(base), path)).path;\n\t} else {\n\t\tresolvedPath = paths.posix.resolve(base.path, path);\n\t}\n\treturn base.with({\n\t\tpath: resolvedPath\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { sep, posix, normalize } from 'vs/base/common/path';\nimport { endsWith, ltrim, startsWithIgnoreCase, rtrim, startsWith } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename } from 'vs/base/common/resources';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: string;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\t// TODO: isidor use resources.relative\n\t\t\t\tpathLabel = normalize(ltrim(resource.path.substr(baseResource.uri.path.length), posix.sep)!);\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = (baseResource && baseResource.name) ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider) {\n\t\tres = tildify(res, userHomeProvider.userHome);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? startsWith(path, normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[]): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${sep}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(sep) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(sep) + sep.length);\n\t\t\tpath = path.substr(path.indexOf(sep) + sep.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(sep);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(sep);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(sep) > -1) ? sep + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = endsWith(paths[otherPathIndex], subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (endsWith(segments[0], ':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + sep + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + sep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + sep + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string): string {\n\tif (isMacintosh) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tfor (let i = fullPath.length - 1; i >= 1; i--) {\n\t\tconst code = fullPath.charCodeAt(i);\n\t\tif (code === CharCode.Slash || code === CharCode.Backslash) {\n\t\t\treturn { parentPath: fullPath.substr(0, i), name: fullPath.substr(i + 1) };\n\t\t}\n\t}\n\treturn { parentPath: '', name: fullPath };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex(): string;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value: string) {\n\t\t// empty\n\t}\n\n\tpublic asHex(): string {\n\t\treturn this._value;\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static readonly _chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static readonly _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array: string[]): string {\n\t\treturn array[Math.floor(array.length * Math.random())];\n\t}\n\n\tprivate static _randomHex(): string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\nexport function v4(): UUID {\n\treturn new V4UUID();\n}\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value: string): UUID {\n\tif (!isUUID(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid(): string {\n\treturn v4().asHex();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\n\n/**\n * Executes the given function (fn) over the given array of items (list) in parallel and returns the resulting errors and results as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function.\n */\nexport function parallel<T, E>(list: T[], fn: (item: T, callback: (err: Error | null, result: E | null) => void) => void, callback: (err: Array<Error | null> | null, result: E[]) => void): void {\n\tconst results = new Array(list.length);\n\tconst errors = new Array<Error | null>(list.length);\n\tlet didErrorOccur = false;\n\tlet doneCount = 0;\n\n\tif (list.length === 0) {\n\t\treturn callback(null, []);\n\t}\n\n\tlist.forEach((item, index) => {\n\t\tfn(item, (error, result) => {\n\t\t\tif (error) {\n\t\t\t\tdidErrorOccur = true;\n\t\t\t\tresults[index] = null;\n\t\t\t\terrors[index] = error;\n\t\t\t} else {\n\t\t\t\tresults[index] = result;\n\t\t\t\terrors[index] = null;\n\t\t\t}\n\n\t\t\tif (++doneCount === list.length) {\n\t\t\t\treturn callback(didErrorOccur ? errors : null, results);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Executes the given function (fn) over the given array of items (param) in sequential order and returns the first occurred error or the result as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function. The first param can\n * either be a function that returns an array of results to loop in async fashion or be an array of items already.\n */\nexport function loop<T, E>(param: (callback: (error: Error, result: T[]) => void) => void, fn: (item: T, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void;\nexport function loop<T, E>(param: T[], fn: (item: T, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void;\nexport function loop<E>(param: any, fn: (item: any, callback: (error: Error | null, result: E | null) => void, index: number, total: number) => void, callback: (error: Error | null, result: E[] | null) => void): void {\n\n\t// Assert\n\tassert.ok(param, 'Missing first parameter');\n\tassert.ok(typeof (fn) === 'function', 'Second parameter must be a function that is called for each element');\n\tassert.ok(typeof (callback) === 'function', 'Third parameter must be a function that is called on error and success');\n\n\t// Param is function, execute to retrieve array\n\tif (typeof (param) === 'function') {\n\t\ttry {\n\t\t\tparam((error: Error, result: E[]) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t} else {\n\t\t\t\t\tloop(result, fn, callback);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tcallback(error, null);\n\t\t}\n\t}\n\n\t// Expect the param to be an array and loop over it\n\telse {\n\t\tconst results: E[] = [];\n\n\t\tconst looper: (i: number) => void = function (i: number): void {\n\n\t\t\t// Still work to do\n\t\t\tif (i < param.length) {\n\n\t\t\t\t// Execute function on array element\n\t\t\t\ttry {\n\t\t\t\t\tfn(param[i], (error: any, result: E) => {\n\n\t\t\t\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\t\t\t\tif (error === true || error === false) {\n\t\t\t\t\t\t\tresult = error;\n\t\t\t\t\t\t\terror = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Quit looping on error\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise push result on stack and continue looping\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (result) { //Could be that provided function is not returning a result\n\t\t\t\t\t\t\t\tresults.push(result);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\t\t\tlooper(i + 1);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i, param.length);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Done looping, pass back results too callback function\n\t\t\telse {\n\t\t\t\tcallback(null, results);\n\t\t\t}\n\t\t};\n\n\t\t// Start looping with first element in array\n\t\tlooper(0);\n\t}\n}\n\nfunction Sequence(sequences: { (...param: any[]): void; }[]): void {\n\n\t// Assert\n\tassert.ok(sequences.length > 1, 'Need at least one error handler and one function to process sequence');\n\tsequences.forEach((sequence) => {\n\t\tassert.ok(typeof (sequence) === 'function');\n\t});\n\n\t// Execute in Loop\n\tconst errorHandler = sequences.splice(0, 1)[0]; //Remove error handler\n\tlet sequenceResult: any = null;\n\n\tloop(sequences, (sequence, clb) => {\n\t\tconst sequenceFunction = function (error: any, result: any): void {\n\n\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\tif (error === true || error === false) {\n\t\t\t\tresult = error;\n\t\t\t\terror = null;\n\t\t\t}\n\n\t\t\t// Handle Error and Result\n\t\t\tif (error) {\n\t\t\t\tclb(error, null);\n\t\t\t} else {\n\t\t\t\tsequenceResult = result; //Remember result of sequence\n\t\t\t\tclb(null, null); //Don't pass on result to Looper as we are not aggregating it\n\t\t\t}\n\t\t};\n\n\t\t// We call the sequence function setting \"this\" to be the callback we define here\n\t\t// and we pass in the \"sequenceResult\" as first argument. Doing all this avoids having\n\t\t// to pass in a callback to the sequence because the callback is already \"this\".\n\t\ttry {\n\t\t\tsequence.call(sequenceFunction, sequenceResult);\n\t\t} catch (error) {\n\t\t\tclb(error, null);\n\t\t}\n\t}, (error, result) => {\n\t\tif (error) {\n\t\t\terrorHandler(error);\n\t\t}\n\t});\n}\n\n/**\n * Takes a variable list of functions to execute in sequence. The first function must be the error handler and the\n * following functions can do arbitrary work. \"this\" must be used as callback value for async functions to continue\n * through the sequence:\n * \tsequence(\n * \t\tfunction errorHandler(error) {\n * \t\t\tclb(error, null);\n * \t\t},\n *\n * \t\tfunction doSomethingAsync() {\n * \t\t\tfs.doAsync(path, this);\n * \t\t},\n *\n * \t\tfunction done(result) {\n * \t\t\tclb(null, result);\n * \t\t}\n * \t);\n */\nexport function sequence(errorHandler: (error: Error) => void, ...sequences: Function[]): void;\nexport function sequence(sequences: Function[]): void;\nexport function sequence(sequences: any): void {\n\tSequence((Array.isArray(sequences)) ? sequences : Array.prototype.slice.call(arguments));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\nimport { Agent } from './request';\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: Number(proxyEndpoint.port),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t};\n\n\tconst Ctor = requestURL.protocol === 'http:'\n\t\t? await import('http-proxy-agent')\n\t\t: await import('https-proxy-agent');\n\n\treturn new Ctor(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\n\nexport interface ReadResult {\n\tbuffer: Buffer | null;\n\tbytesRead: number;\n}\n\n/**\n * Reads totalBytes from the provided file.\n */\nexport function readExactlyByFile(file: string, totalBytes: number): Promise<ReadResult> {\n\treturn new Promise<ReadResult>((resolve, reject) => {\n\t\tfs.open(file, 'r', null, (err, fd) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tfunction end(err: Error | null, resultBuffer: Buffer | null, bytesRead: number): void {\n\t\t\t\tfs.close(fd, closeError => {\n\t\t\t\t\tif (closeError) {\n\t\t\t\t\t\treturn reject(closeError);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err && (<any>err).code === 'EISDIR') {\n\t\t\t\t\t\treturn reject(err); // we want to bubble this error up (file is actually a folder)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ buffer: resultBuffer, bytesRead });\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst buffer = Buffer.allocUnsafe(totalBytes);\n\t\t\tlet offset = 0;\n\n\t\t\tfunction readChunk(): void {\n\t\t\t\tfs.read(fd, buffer, offset, totalBytes - offset, null, (err, bytesRead) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn end(err, null, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bytesRead === 0) {\n\t\t\t\t\t\treturn end(null, buffer, offset);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += bytesRead;\n\n\t\t\t\t\tif (offset === totalBytes) {\n\t\t\t\t\t\treturn end(null, buffer, offset);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn readChunk();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treadChunk();\n\t\t});\n\t});\n}\n\n/**\n * Reads a file until a matching string is found.\n *\n * @param file The file to read.\n * @param matchingString The string to search for.\n * @param chunkBytes The number of bytes to read each iteration.\n * @param maximumBytesToRead The maximum number of bytes to read before giving up.\n * @param callback The finished callback.\n */\nexport function readToMatchingString(file: string, matchingString: string, chunkBytes: number, maximumBytesToRead: number): Promise<string | null> {\n\treturn new Promise<string | null>((resolve, reject) =>\n\t\tfs.open(file, 'r', null, (err, fd) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tfunction end(err: Error | null, result: string | null): void {\n\t\t\t\tfs.close(fd, closeError => {\n\t\t\t\t\tif (closeError) {\n\t\t\t\t\t\treturn reject(closeError);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err && (<any>err).code === 'EISDIR') {\n\t\t\t\t\t\treturn reject(err); // we want to bubble this error up (file is actually a folder)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve(result);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst buffer = Buffer.allocUnsafe(maximumBytesToRead);\n\t\t\tlet offset = 0;\n\n\t\t\tfunction readChunk(): void {\n\t\t\t\tfs.read(fd, buffer, offset, chunkBytes, null, (err, bytesRead) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn end(err, null);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bytesRead === 0) {\n\t\t\t\t\t\treturn end(null, null);\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += bytesRead;\n\n\t\t\t\t\tconst newLineIndex = buffer.indexOf(matchingString);\n\t\t\t\t\tif (newLineIndex >= 0) {\n\t\t\t\t\t\treturn end(null, buffer.toString('utf8').substr(0, newLineIndex));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (offset >= maximumBytesToRead) {\n\t\t\t\t\t\treturn end(new Error(`Could not find ${matchingString} in first ${maximumBytesToRead} bytes of ${file}`), null);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn readChunk();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treadChunk();\n\t\t})\n\t);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as stream from 'vs/base/node/stream';\nimport * as iconv from 'iconv-lite';\nimport { isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { exec } from 'child_process';\nimport { Readable, Writable } from 'stream';\n\nexport const UTF8 = 'utf8';\nexport const UTF8_with_bom = 'utf8bom';\nexport const UTF16be = 'utf16be';\nexport const UTF16le = 'utf16le';\n\nexport interface IDecodeStreamOptions {\n\tguessEncoding?: boolean;\n\tminBytesRequiredForDetection?: number;\n\toverwriteEncoding?(detectedEncoding: string | null): string;\n}\n\nexport function toDecodeStream(readable: Readable, options: IDecodeStreamOptions): Promise<{ detected: IDetectedEncodingResult, stream: NodeJS.ReadableStream }> {\n\tif (!options.minBytesRequiredForDetection) {\n\t\toptions.minBytesRequiredForDetection = options.guessEncoding ? AUTO_GUESS_BUFFER_MAX_LEN : NO_GUESS_BUFFER_MAX_LEN;\n\t}\n\n\tif (!options.overwriteEncoding) {\n\t\toptions.overwriteEncoding = detected => detected || UTF8;\n\t}\n\n\treturn new Promise<{ detected: IDetectedEncodingResult, stream: NodeJS.ReadableStream }>((resolve, reject) => {\n\n\t\treadable.on('error', reject);\n\n\t\treadable.pipe(new class extends Writable {\n\n\t\t\tprivate _decodeStream: NodeJS.ReadWriteStream;\n\t\t\tprivate _decodeStreamConstruction: Promise<any>;\n\t\t\tprivate _buffer: Buffer[] = [];\n\t\t\tprivate _bytesBuffered = 0;\n\n\t\t\t_write(chunk: any, encoding: string, callback: Function): void {\n\t\t\t\tif (!Buffer.isBuffer(chunk)) {\n\t\t\t\t\tcallback(new Error('data must be a buffer'));\n\t\t\t\t}\n\n\t\t\t\tif (this._decodeStream) {\n\t\t\t\t\t// just a forwarder now\n\t\t\t\t\tthis._decodeStream.write(chunk, callback);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._buffer.push(chunk);\n\t\t\t\tthis._bytesBuffered += chunk.length;\n\n\t\t\t\tif (this._decodeStreamConstruction) {\n\t\t\t\t\t// waiting for the decoder to be ready\n\t\t\t\t\tthis._decodeStreamConstruction.then(_ => callback(), err => callback(err));\n\n\t\t\t\t} else if (typeof options.minBytesRequiredForDetection === 'number' && this._bytesBuffered >= options.minBytesRequiredForDetection) {\n\t\t\t\t\t// buffered enough data, create stream and forward data\n\t\t\t\t\tthis._startDecodeStream(callback);\n\n\t\t\t\t} else {\n\t\t\t\t\t// only buffering\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_startDecodeStream(callback: Function): void {\n\n\t\t\t\tthis._decodeStreamConstruction = Promise.resolve(detectEncodingFromBuffer({\n\t\t\t\t\tbuffer: Buffer.concat(this._buffer), bytesRead: this._bytesBuffered\n\t\t\t\t}, options.guessEncoding)).then(detected => {\n\t\t\t\t\tif (options.overwriteEncoding) {\n\t\t\t\t\t\tdetected.encoding = options.overwriteEncoding(detected.encoding);\n\t\t\t\t\t}\n\t\t\t\t\tthis._decodeStream = decodeStream(detected.encoding);\n\t\t\t\t\tfor (const buffer of this._buffer) {\n\t\t\t\t\t\tthis._decodeStream.write(buffer);\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t\t\tresolve({ detected, stream: this._decodeStream });\n\n\t\t\t\t}, err => {\n\t\t\t\t\tthis.emit('error', err);\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_final(callback: (err?: any) => any) {\n\t\t\t\tif (this._decodeStream) {\n\t\t\t\t\t// normal finish\n\t\t\t\t\tthis._decodeStream.end(callback);\n\t\t\t\t} else {\n\t\t\t\t\t// we were still waiting for data...\n\t\t\t\t\tthis._startDecodeStream(() => this._decodeStream.end(callback));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function bomLength(encoding: string): number {\n\tswitch (encoding) {\n\t\tcase UTF8:\n\t\t\treturn 3;\n\t\tcase UTF16be:\n\t\tcase UTF16le:\n\t\t\treturn 2;\n\t}\n\n\treturn 0;\n}\n\nexport function decode(buffer: Buffer, encoding: string): string {\n\treturn iconv.decode(buffer, toNodeEncoding(encoding));\n}\n\nexport function encode(content: string | Buffer, encoding: string, options?: { addBOM?: boolean }): Buffer {\n\treturn iconv.encode(content, toNodeEncoding(encoding), options);\n}\n\nexport function encodingExists(encoding: string): boolean {\n\treturn iconv.encodingExists(toNodeEncoding(encoding));\n}\n\nexport function decodeStream(encoding: string | null): NodeJS.ReadWriteStream {\n\treturn iconv.decodeStream(toNodeEncoding(encoding));\n}\n\nexport function encodeStream(encoding: string, options?: { addBOM?: boolean }): NodeJS.ReadWriteStream {\n\treturn iconv.encodeStream(toNodeEncoding(encoding), options);\n}\n\nfunction toNodeEncoding(enc: string | null): string {\n\tif (enc === UTF8_with_bom || enc === null) {\n\t\treturn UTF8; // iconv does not distinguish UTF 8 with or without BOM, so we need to help it\n\t}\n\n\treturn enc;\n}\n\nexport function detectEncodingByBOMFromBuffer(buffer: Buffer | null, bytesRead: number): string | null {\n\tif (!buffer || bytesRead < 2) {\n\t\treturn null;\n\t}\n\n\tconst b0 = buffer.readUInt8(0);\n\tconst b1 = buffer.readUInt8(1);\n\n\t// UTF-16 BE\n\tif (b0 === 0xFE && b1 === 0xFF) {\n\t\treturn UTF16be;\n\t}\n\n\t// UTF-16 LE\n\tif (b0 === 0xFF && b1 === 0xFE) {\n\t\treturn UTF16le;\n\t}\n\n\tif (bytesRead < 3) {\n\t\treturn null;\n\t}\n\n\tconst b2 = buffer.readUInt8(2);\n\n\t// UTF-8\n\tif (b0 === 0xEF && b1 === 0xBB && b2 === 0xBF) {\n\t\treturn UTF8;\n\t}\n\n\treturn null;\n}\n\n/**\n * Detects the Byte Order Mark in a given file.\n * If no BOM is detected, null will be passed to callback.\n */\nexport function detectEncodingByBOM(file: string): Promise<string | null> {\n\treturn stream.readExactlyByFile(file, 3).then(({ buffer, bytesRead }) => detectEncodingByBOMFromBuffer(buffer, bytesRead));\n}\n\nconst MINIMUM_THRESHOLD = 0.2;\nconst IGNORE_ENCODINGS = ['ascii', 'utf-8', 'utf-16', 'utf-32'];\n\n/**\n * Guesses the encoding from buffer.\n */\nexport function guessEncodingByBuffer(buffer: Buffer): Promise<string | null> {\n\treturn import('jschardet').then(jschardet => {\n\t\tjschardet.Constants.MINIMUM_THRESHOLD = MINIMUM_THRESHOLD;\n\n\t\tconst guessed = jschardet.detect(buffer);\n\t\tif (!guessed || !guessed.encoding) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst enc = guessed.encoding.toLowerCase();\n\n\t\t// Ignore encodings that cannot guess correctly\n\t\t// (http://chardet.readthedocs.io/en/latest/supported-encodings.html)\n\t\tif (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn toIconvLiteEncoding(guessed.encoding);\n\t});\n}\n\nconst JSCHARDET_TO_ICONV_ENCODINGS: { [name: string]: string } = {\n\t'ibm866': 'cp866',\n\t'big5': 'cp950'\n};\n\nfunction toIconvLiteEncoding(encodingName: string): string {\n\tconst normalizedEncodingName = encodingName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\tconst mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\n\n\treturn mapped || normalizedEncodingName;\n}\n\n/**\n * The encodings that are allowed in a settings file don't match the canonical encoding labels specified by WHATWG.\n * See https://encoding.spec.whatwg.org/#names-and-labels\n * Iconv-lite strips all non-alphanumeric characters, but ripgrep doesn't. For backcompat, allow these labels.\n */\nexport function toCanonicalName(enc: string): string {\n\tswitch (enc) {\n\t\tcase 'shiftjis':\n\t\t\treturn 'shift-jis';\n\t\tcase 'utf16le':\n\t\t\treturn 'utf-16le';\n\t\tcase 'utf16be':\n\t\t\treturn 'utf-16be';\n\t\tcase 'big5hkscs':\n\t\t\treturn 'big5-hkscs';\n\t\tcase 'eucjp':\n\t\t\treturn 'euc-jp';\n\t\tcase 'euckr':\n\t\t\treturn 'euc-kr';\n\t\tcase 'koi8r':\n\t\t\treturn 'koi8-r';\n\t\tcase 'koi8u':\n\t\t\treturn 'koi8-u';\n\t\tcase 'macroman':\n\t\t\treturn 'x-mac-roman';\n\t\tcase 'utf8bom':\n\t\t\treturn 'utf8';\n\t\tdefault:\n\t\t\tconst m = enc.match(/windows(\\d+)/);\n\t\t\tif (m) {\n\t\t\t\treturn 'windows-' + m[1];\n\t\t\t}\n\n\t\t\treturn enc;\n\t}\n}\n\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512; // number of bytes to look at to decide about a file being binary or not\nconst NO_GUESS_BUFFER_MAX_LEN = 512; \t\t\t// when not auto guessing the encoding, small number of bytes are enough\nconst AUTO_GUESS_BUFFER_MAX_LEN = 512 * 8; \t\t// with auto guessing we want a lot more content to be read for guessing\n\nexport interface IDetectedEncodingResult {\n\tencoding: string | null;\n\tseemsBinary: boolean;\n}\n\nexport function detectEncodingFromBuffer(readResult: stream.ReadResult, autoGuessEncoding?: false): IDetectedEncodingResult;\nexport function detectEncodingFromBuffer(readResult: stream.ReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult>;\nexport function detectEncodingFromBuffer({ buffer, bytesRead }: stream.ReadResult, autoGuessEncoding?: boolean): Promise<IDetectedEncodingResult> | IDetectedEncodingResult {\n\n\t// Always first check for BOM to find out about encoding\n\tlet encoding = detectEncodingByBOMFromBuffer(buffer, bytesRead);\n\n\t// Detect 0 bytes to see if file is binary or UTF-16 LE/BE\n\t// unless we already know that this file has a UTF-16 encoding\n\tlet seemsBinary = false;\n\tif (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n\t\tlet couldBeUTF16LE = true; // e.g. 0xAA 0x00\n\t\tlet couldBeUTF16BE = true; // e.g. 0x00 0xAA\n\t\tlet containsZeroByte = false;\n\n\t\t// This is a simplified guess to detect UTF-16 BE or LE by just checking if\n\t\t// the first 512 bytes have the 0-byte at a specific location. For UTF-16 LE\n\t\t// this would be the odd byte index and for UTF-16 BE the even one.\n\t\t// Note: this can produce false positives (a binary file that uses a 2-byte\n\t\t// encoding of the same format as UTF-16) and false negatives (a UTF-16 file\n\t\t// that is using 4 bytes to encode a character).\n\t\tfor (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n\t\t\tconst isEndian = (i % 2 === 1); // assume 2-byte sequences typical for UTF-16\n\t\t\tconst isZeroByte = (buffer.readInt8(i) === 0);\n\n\t\t\tif (isZeroByte) {\n\t\t\t\tcontainsZeroByte = true;\n\t\t\t}\n\n\t\t\t// UTF-16 LE: expect e.g. 0xAA 0x00\n\t\t\tif (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n\t\t\t\tcouldBeUTF16LE = false;\n\t\t\t}\n\n\t\t\t// UTF-16 BE: expect e.g. 0x00 0xAA\n\t\t\tif (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n\t\t\t\tcouldBeUTF16BE = false;\n\t\t\t}\n\n\t\t\t// Return if this is neither UTF16-LE nor UTF16-BE and thus treat as binary\n\t\t\tif (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Handle case of 0-byte included\n\t\tif (containsZeroByte) {\n\t\t\tif (couldBeUTF16LE) {\n\t\t\t\tencoding = UTF16le;\n\t\t\t} else if (couldBeUTF16BE) {\n\t\t\t\tencoding = UTF16be;\n\t\t\t} else {\n\t\t\t\tseemsBinary = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Auto guess encoding if configured\n\tif (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n\t\treturn guessEncodingByBuffer(buffer.slice(0, bytesRead)).then(guessedEncoding => {\n\t\t\treturn {\n\t\t\t\tseemsBinary: false,\n\t\t\t\tencoding: guessedEncoding\n\t\t\t};\n\t\t});\n\t}\n\n\treturn { seemsBinary, encoding };\n}\n\n// https://ss64.com/nt/chcp.html\nconst windowsTerminalEncodings = {\n\t'437': 'cp437', // United States\n\t'850': 'cp850', // Multilingual(Latin I)\n\t'852': 'cp852', // Slavic(Latin II)\n\t'855': 'cp855', // Cyrillic(Russian)\n\t'857': 'cp857', // Turkish\n\t'860': 'cp860', // Portuguese\n\t'861': 'cp861', // Icelandic\n\t'863': 'cp863', // Canadian - French\n\t'865': 'cp865', // Nordic\n\t'866': 'cp866', // Russian\n\t'869': 'cp869', // Modern Greek\n\t'936': 'cp936', // Simplified Chinese\n\t'1252': 'cp1252' // West European Latin\n};\n\nexport function resolveTerminalEncoding(verbose?: boolean): Promise<string> {\n\tlet rawEncodingPromise: Promise<string>;\n\n\t// Support a global environment variable to win over other mechanics\n\tconst cliEncodingEnv = process.env['VSCODE_CLI_ENCODING'];\n\tif (cliEncodingEnv) {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Found VSCODE_CLI_ENCODING variable: ${cliEncodingEnv}`);\n\t\t}\n\n\t\trawEncodingPromise = Promise.resolve(cliEncodingEnv);\n\t}\n\n\t// Linux/Mac: use \"locale charmap\" command\n\telse if (isLinux || isMacintosh) {\n\t\trawEncodingPromise = new Promise<string>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"locale charmap\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('locale charmap', (err, stdout, stderr) => resolve(stdout));\n\t\t});\n\t}\n\n\t// Windows: educated guess\n\telse {\n\t\trawEncodingPromise = new Promise<string>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"chcp\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('chcp', (err, stdout, stderr) => {\n\t\t\t\tif (stdout) {\n\t\t\t\t\tconst windowsTerminalEncodingKeys = Object.keys(windowsTerminalEncodings);\n\t\t\t\t\tfor (const key of windowsTerminalEncodingKeys) {\n\t\t\t\t\t\tif (stdout.indexOf(key) >= 0) {\n\t\t\t\t\t\t\treturn resolve(windowsTerminalEncodings[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn resolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\treturn rawEncodingPromise.then(rawEncoding => {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Detected raw terminal encoding: ${rawEncoding}`);\n\t\t}\n\n\t\tif (!rawEncoding || rawEncoding.toLowerCase() === 'utf-8' || rawEncoding.toLowerCase() === UTF8) {\n\t\t\treturn UTF8;\n\t\t}\n\n\t\tconst iconvEncoding = toIconvLiteEncoding(rawEncoding);\n\t\tif (iconv.encodingExists(iconvEncoding)) {\n\t\t\treturn iconvEncoding;\n\t\t}\n\n\t\tif (verbose) {\n\t\t\tconsole.log('Unsupported terminal encoding, falling back to UTF-8.');\n\t\t}\n\n\t\treturn UTF8;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as paths from 'vs/base/common/path';\nimport { nfcall } from 'vs/base/common/async';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport * as platform from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport * as uuid from 'vs/base/common/uuid';\nimport { encode, encodeStream } from 'vs/base/node/encoding';\nimport * as flow from 'vs/base/node/flow';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDisposable, toDisposable, Disposable } from 'vs/base/common/lifecycle';\n\nconst loop = flow.loop;\n\nexport function readdirSync(path: string): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn fs.readdirSync(path).map(c => normalizeNFC(c));\n\t}\n\n\treturn fs.readdirSync(path);\n}\n\nexport function readdir(path: string, callback: (error: Error | null, files: string[]) => void): void {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn fs.readdir(path, (error, children) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error, []);\n\t\t\t}\n\n\t\t\treturn callback(null, children.map(c => normalizeNFC(c)));\n\t\t});\n\t}\n\n\treturn fs.readdir(path, callback);\n}\n\nexport interface IStatAndLink {\n\tstat: fs.Stats;\n\tisSymbolicLink: boolean;\n}\n\nexport function statLink(path: string, callback: (error: Error | null, statAndIsLink: IStatAndLink | null) => void): void {\n\tfs.lstat(path, (error, lstat) => {\n\t\tif (error || lstat.isSymbolicLink()) {\n\t\t\tfs.stat(path, (error, stat) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn callback(error, null);\n\t\t\t\t}\n\n\t\t\t\tcallback(null, { stat, isSymbolicLink: lstat && lstat.isSymbolicLink() });\n\t\t\t});\n\t\t} else {\n\t\t\tcallback(null, { stat: lstat, isSymbolicLink: false });\n\t\t}\n\t});\n}\n\nexport function copy(source: string, target: string, callback: (error: Error | null) => void, copiedSourcesIn?: { [path: string]: boolean }): void {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tfs.stat(source, (error, stat) => {\n\t\tif (error) {\n\t\t\treturn callback(error);\n\t\t}\n\n\t\tif (!stat.isDirectory()) {\n\t\t\treturn doCopyFile(source, target, stat.mode & 511, callback);\n\t\t}\n\n\t\tif (copiedSources[source]) {\n\t\t\treturn callback(null); // escape when there are cycles (can happen with symlinks)\n\t\t}\n\n\t\tcopiedSources[source] = true; // remember as copied\n\n\t\tconst proceed = function () {\n\t\t\treaddir(source, (err, files) => {\n\t\t\t\tloop(files, (file: string, clb: (error: Error | null, result: string[]) => void) => {\n\t\t\t\t\tcopy(paths.join(source, file), paths.join(target, file), (error: Error) => clb(error, []), copiedSources);\n\t\t\t\t}, callback);\n\t\t\t});\n\t\t};\n\n\t\tmkdirp(target, stat.mode & 511).then(proceed, proceed);\n\t});\n}\n\nfunction doCopyFile(source: string, target: string, mode: number, callback: (error: Error) => void): void {\n\tconst reader = fs.createReadStream(source);\n\tconst writer = fs.createWriteStream(target, { mode });\n\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases, pass to callback\n\t\t\tif (error) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\n\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\telse {\n\t\t\t\tfs.chmod(target, mode, callback);\n\t\t\t}\n\t\t}\n\t};\n\n\t// handle errors properly\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// we are done (underlying fd has been closed)\n\twriter.once('close', () => finish());\n\n\t// start piping\n\treader.pipe(writer);\n}\n\nexport function mkdirp(path: string, mode?: number, token?: CancellationToken): Promise<boolean> {\n\tconst mkdir = (): Promise<null> => {\n\t\treturn nfcall(fs.mkdir, path, mode).then(undefined, (mkdirErr: NodeJS.ErrnoException) => {\n\n\t\t\t// ENOENT: a parent folder does not exist yet\n\t\t\tif (mkdirErr.code === 'ENOENT') {\n\t\t\t\treturn Promise.reject(mkdirErr);\n\t\t\t}\n\n\t\t\t// Any other error: check if folder exists and\n\t\t\t// return normally in that case if its a folder\n\t\t\treturn nfcall(fs.stat, path).then((stat: fs.Stats) => {\n\t\t\t\tif (!stat.isDirectory()) {\n\t\t\t\t\treturn Promise.reject(new Error(`'${path}' exists and is not a directory.`));\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}, statErr => {\n\t\t\t\treturn Promise.reject(mkdirErr); // bubble up original mkdir error\n\t\t\t});\n\t\t});\n\t};\n\n\t// stop at root\n\tif (path === paths.dirname(path)) {\n\t\treturn Promise.resolve(true);\n\t}\n\n\t// recursively mkdir\n\treturn mkdir().then(undefined, (err: NodeJS.ErrnoException) => {\n\n\t\t// Respect cancellation\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\t// ENOENT: a parent folder does not exist yet, continue\n\t\t// to create the parent folder and then try again.\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn mkdirp(paths.dirname(path), mode).then(mkdir);\n\t\t}\n\n\t\t// Any other error\n\t\treturn Promise.reject(err);\n\t});\n}\n\n// Deletes the given path by first moving it out of the workspace. This has two benefits. For one, the operation can return fast because\n// after the rename, the contents are out of the workspace although not yet deleted. The greater benefit however is that this operation\n// will fail in case any file is used by another process. fs.unlink() in node will not bail if a file unlinked is used by another process.\n// However, the consequences are bad as outlined in all the related bugs from https://github.com/joyent/node/issues/7164\nexport function del(path: string, tmpFolder: string, callback: (error: Error | null) => void, done?: (error: Error | null) => void): void {\n\tfs.exists(path, exists => {\n\t\tif (!exists) {\n\t\t\treturn callback(null);\n\t\t}\n\n\t\tfs.stat(path, (err, stat) => {\n\t\t\tif (err || !stat) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\t// Special windows workaround: A file or folder that ends with a \".\" cannot be moved to another place\n\t\t\t// because it is not a valid file name. In this case, we really have to do the deletion without prior move.\n\t\t\tif (path[path.length - 1] === '.' || strings.endsWith(path, './') || strings.endsWith(path, '.\\\\')) {\n\t\t\t\treturn rmRecursive(path, callback);\n\t\t\t}\n\n\t\t\tconst pathInTemp = paths.join(tmpFolder, uuid.generateUuid());\n\t\t\tfs.rename(path, pathInTemp, (error: Error | null) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn rmRecursive(path, callback); // if rename fails, delete without tmp dir\n\t\t\t\t}\n\n\t\t\t\t// Return early since the move succeeded\n\t\t\t\tcallback(null);\n\n\t\t\t\t// do the heavy deletion outside the callers callback\n\t\t\t\trmRecursive(pathInTemp, error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tdone(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction rmRecursive(path: string, callback: (error: Error | null) => void): void {\n\tif (path === paths.win32.sep || path === paths.posix.sep) {\n\t\treturn callback(new Error('Will not delete root!'));\n\t}\n\n\tfs.exists(path, exists => {\n\t\tif (!exists) {\n\t\t\tcallback(null);\n\t\t} else {\n\t\t\tfs.lstat(path, (err, stat) => {\n\t\t\t\tif (err || !stat) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else if (!stat.isDirectory() || stat.isSymbolicLink() /* !!! never recurse into links when deleting !!! */) {\n\t\t\t\t\tconst mode = stat.mode;\n\t\t\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\t\t\tfs.chmod(path, mode | 128, (err: Error) => { // 128 === 0200\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treaddir(path, (err, children) => {\n\t\t\t\t\t\tif (err || !children) {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t} else if (children.length === 0) {\n\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet firstError: Error | null = null;\n\t\t\t\t\t\t\tlet childrenLeft = children.length;\n\t\t\t\t\t\t\tchildren.forEach(child => {\n\t\t\t\t\t\t\t\trmRecursive(paths.join(path, child), (err: Error) => {\n\t\t\t\t\t\t\t\t\tchildrenLeft--;\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tfirstError = firstError || err;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (childrenLeft === 0) {\n\t\t\t\t\t\t\t\t\t\tif (firstError) {\n\t\t\t\t\t\t\t\t\t\t\tcallback(firstError);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function delSync(path: string): void {\n\tif (path === paths.win32.sep || path === paths.posix.sep) {\n\t\tthrow new Error('Will not delete root!');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\treaddirSync(path).forEach(child => delSync(paths.join(path, child)));\n\t\t\tfs.rmdirSync(path);\n\t\t} else {\n\t\t\tfs.unlinkSync(path);\n\t\t}\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn; // not found\n\t\t}\n\n\t\tthrow err;\n\t}\n}\n\nexport function mv(source: string, target: string, callback: (error: Error | null) => void): void {\n\tif (source === target) {\n\t\treturn callback(null);\n\t}\n\n\tfunction updateMtime(err: Error | null): void {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tfs.stat(target, (error, stat) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\treturn callback(null);\n\t\t\t}\n\n\t\t\tfs.open(target, 'a', null, (err: Error, fd: number) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tfs.futimes(fd, stat.atime, new Date(), (err: Error) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tfs.close(fd, callback);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t// Try native rename()\n\tfs.rename(source, target, (err: Error) => {\n\t\tif (!err) {\n\t\t\treturn updateMtime(null);\n\t\t}\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (err && source.toLowerCase() !== target.toLowerCase() && ((<any>err).code === 'EXDEV') || strings.endsWith(source, '.')) {\n\t\t\treturn copy(source, target, (err: Error) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\trmRecursive(source, updateMtime);\n\t\t\t});\n\t\t}\n\n\t\treturn callback(err);\n\t});\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n\tencoding?: {\n\t\tcharset: string;\n\t\taddBOM: boolean;\n\t};\n}\n\nlet canFlush = true;\nexport function writeFileAndFlush(path: string, data: string | Buffer | NodeJS.ReadableStream, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\toptions = ensureOptions(options);\n\n\tif (typeof data === 'string' || Buffer.isBuffer(data)) {\n\t\tdoWriteFileAndFlush(path, data, options, callback);\n\t} else {\n\t\tdoWriteFileStreamAndFlush(path, data, options, callback);\n\t}\n}\n\nfunction doWriteFileStreamAndFlush(path: string, reader: NodeJS.ReadableStream, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\tif (process.env.isBrowser) {\n\t\tlet content = '';\n\t\tlet chunk = reader.read();\n\t\twhile (chunk !== null) {\n\t\t\tcontent += chunk;\n\t\t\tchunk = reader.read();\n\t\t}\n\t\tfs.writeFile(path, content, 'utf-8', function (error) {\n\t\t\tif (error) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\t// finish only once\n\tlet finished = false;\n\tconst finish = (error?: Error) => {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\n\t\t\t// in error cases we need to manually close streams\n\t\t\t// if the write stream was successfully opened\n\t\t\tif (error) {\n\t\t\t\tif (isOpen) {\n\t\t\t\t\twriter.once('close', () => callback(error));\n\t\t\t\t\twriter.destroy();\n\t\t\t\t} else {\n\t\t\t\t\tcallback(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// otherwise just return without error\n\t\t\telse {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t};\n\n\t// create writer to target. we set autoClose: false because we want to use the streams\n\t// file descriptor to call fs.fdatasync to ensure the data is flushed to disk\n\tconst writer = fs.createWriteStream(path, { mode: options.mode, flags: options.flag, autoClose: false });\n\n\t// Event: 'open'\n\t// Purpose: save the fd for later use and start piping\n\t// Notes: will not be called when there is an error opening the file descriptor!\n\tlet fd: number;\n\tlet isOpen: boolean;\n\twriter.once('open', descriptor => {\n\t\tfd = descriptor;\n\t\tisOpen = true;\n\n\t\t// if an encoding is provided, we need to pipe the stream through\n\t\t// an encoder stream and forward the encoding related options\n\t\tif (options.encoding) {\n\t\t\treader = reader.pipe(encodeStream(options.encoding.charset, { addBOM: options.encoding.addBOM }));\n\t\t}\n\n\t\t// start data piping only when we got a successful open. this ensures that we do\n\t\t// not consume the stream when an error happens and helps to fix this issue:\n\t\t// https://github.com/Microsoft/vscode/issues/42542\n\t\treader.pipe(writer);\n\t});\n\n\t// Event: 'error'\n\t// Purpose: to return the error to the outside and to close the write stream (does not happen automatically)\n\treader.once('error', error => finish(error));\n\twriter.once('error', error => finish(error));\n\n\t// Event: 'finish'\n\t// Purpose: use fs.fdatasync to flush the contents to disk\n\t// Notes: event is called when the writer has finished writing to the underlying resource. we must call writer.close()\n\t// because we have created the WriteStream with autoClose: false\n\twriter.once('finish', () => {\n\n\t\t// flush to disk\n\t\tif (canFlush && isOpen) {\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\twriter.destroy();\n\t\t\t});\n\t\t} else {\n\t\t\twriter.destroy();\n\t\t}\n\t});\n\n\t// Event: 'close'\n\t// Purpose: signal we are done to the outside\n\t// Notes: event is called when the writer's filedescriptor is closed\n\twriter.once('close', () => finish());\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer, options: IWriteFileOptions, callback: (error?: Error) => void): void {\n\tif (options.encoding) {\n\t\tdata = encode(data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, typeof options.flag === 'string' ? options.flag : 'r', options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(/** Desktop fd */path, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileAndFlushSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\toptions = ensureOptions(options);\n\n\tif (options.encoding) {\n\t\tdata = encode(data, options.encoding.charset, { addBOM: options.encoding.addBOM });\n\t}\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: options.mode, flag: options.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, typeof options.flag === 'string' ? options.flag : 'r', options.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(path, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureOptions(options?: IWriteFileOptions): IWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\tconst ensuredOptions: IWriteFileOptions = { mode: options.mode, flag: options.flag, encoding: options.encoding };\n\n\tif (typeof ensuredOptions.mode !== 'number') {\n\t\tensuredOptions.mode = 0o666;\n\t}\n\n\tif (typeof ensuredOptions.flag !== 'string') {\n\t\tensuredOptions.flag = 'w';\n\t}\n\n\treturn ensuredOptions;\n}\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = paths.dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (paths.basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn paths.join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn paths.join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpath(path: string, callback: (error: Error | null, realpath: string) => void): void {\n\treturn fs.realpath(path, (error, realpath) => {\n\t\tif (!error) {\n\t\t\treturn callback(null, realpath);\n\t\t}\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\treturn fs.access(normalizedPath, fs.constants.R_OK, error => {\n\t\t\treturn callback(error, normalizedPath);\n\t\t});\n\t});\n}\n\nfunction normalizePath(path: string): string {\n\treturn strings.rtrim(paths.normalize(path), paths.sep);\n}\n\nexport function watch(path: string, onChange: (type: string, path?: string) => void, onError: (error: string) => void): IDisposable {\n\ttry {\n\t\tconst watcher = fs.watch(path);\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tlet file: string | undefined;\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tfile = raw.toString();\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tfile = normalizeNFC(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tonChange(type, file);\n\t\t});\n\n\t\twatcher.on('error', (code: number, signal: string) => onError(`Failed to watch ${path} for changes (${code}, ${signal})`));\n\n\t\treturn toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t});\n\t} catch (error) {\n\t\tfs.exists(path, exists => {\n\t\t\tif (exists) {\n\t\t\t\tonError(`Failed to watch ${path} for changes (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn Disposable.None;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (platform.isWindows && strings.endsWith(candidate, ':')) {\n\t\tcandidate += paths.sep;\n\t}\n\n\t// Ensure absolute\n\tif (!paths.isAbsolute(candidate)) {\n\t\tcandidate = paths.join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = paths.normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (platform.isWindows) {\n\t\tcandidate = strings.rtrim(candidate, paths.sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (strings.endsWith(candidate, ':')) {\n\t\t\tcandidate += paths.sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = strings.rtrim(candidate, paths.sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = paths.sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { dirname, basename } from 'vs/base/common/path';\nimport * as objects from 'vs/base/common/objects';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport * as extfs from 'vs/base/node/extfs';\nimport { isWindows } from 'vs/base/common/platform';\n\nexport interface IConfigurationChangeEvent<T> {\n\tconfig: T;\n}\n\nexport interface IConfigWatcher<T> {\n\tpath: string;\n\thasParseErrors: boolean;\n\n\treload(callback: (config: T) => void): void;\n\tgetConfig(): T;\n}\n\nexport interface IConfigOptions<T> {\n\tonError: (error: Error | string) => void;\n\tdefaultConfig: T;\n\tchangeBufferDelay?: number;\n\tparse?: (content: string, errors: any[]) => T;\n\tinitCallback?: (config: T) => void;\n}\n\n/**\n * A simple helper to watch a configured file for changes and process its contents as JSON object.\n * Supports:\n * - comments in JSON files and errors\n * - symlinks for the config file itself\n * - delayed processing of changes to accomodate for lots of changes\n * - configurable defaults\n */\nexport class ConfigWatcher<T> implements IConfigWatcher<T>, IDisposable {\n\tprivate cache: T;\n\tprivate parseErrors: json.ParseError[];\n\tprivate disposed: boolean;\n\tprivate loaded: boolean;\n\tprivate timeoutHandle: NodeJS.Timer | null;\n\tprivate disposables: IDisposable[];\n\tprivate readonly _onDidUpdateConfiguration: Emitter<IConfigurationChangeEvent<T>>;\n\tprivate configName: string;\n\n\tconstructor(private _path: string, private options: IConfigOptions<T> = { defaultConfig: Object.create(null), onError: error => console.error(error) }) {\n\t\tthis.disposables = [];\n\t\tthis.configName = basename(this._path);\n\n\t\tthis._onDidUpdateConfiguration = new Emitter<IConfigurationChangeEvent<T>>();\n\t\tthis.disposables.push(this._onDidUpdateConfiguration);\n\n\t\tthis.registerWatcher();\n\t\tthis.initAsync();\n\t}\n\n\tpublic get path(): string {\n\t\treturn this._path;\n\t}\n\n\tpublic get hasParseErrors(): boolean {\n\t\treturn this.parseErrors && this.parseErrors.length > 0;\n\t}\n\n\tpublic get onDidUpdateConfiguration(): Event<IConfigurationChangeEvent<T>> {\n\t\treturn this._onDidUpdateConfiguration.event;\n\t}\n\n\tprivate initAsync(): void {\n\t\tthis.loadAsync(config => {\n\t\t\tif (!this.loaded) {\n\t\t\t\tthis.updateCache(config); // prevent race condition if config was loaded sync already\n\t\t\t}\n\t\t\tif (this.options.initCallback) {\n\t\t\t\tthis.options.initCallback(this.getConfig());\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateCache(value: T): void {\n\t\tthis.cache = value;\n\t\tthis.loaded = true;\n\t}\n\n\tprivate loadSync(): T {\n\t\ttry {\n\t\t\treturn this.parse(fs.readFileSync(this._path).toString());\n\t\t} catch (error) {\n\t\t\treturn this.options.defaultConfig;\n\t\t}\n\t}\n\n\tprivate loadAsync(callback: (config: T) => void): void {\n\t\tfs.readFile(this._path, (error, raw) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(this.options.defaultConfig);\n\t\t\t}\n\n\t\t\treturn callback(this.parse(raw.toString()));\n\t\t});\n\t}\n\n\tprivate parse(raw: string): T {\n\t\tlet res: T;\n\t\ttry {\n\t\t\tthis.parseErrors = [];\n\t\t\tres = this.options.parse ? this.options.parse(raw, this.parseErrors) : json.parse(raw, this.parseErrors);\n\t\t\treturn res || this.options.defaultConfig;\n\t\t} catch (error) {\n\t\t\t// Ignore parsing errors\n\t\t\treturn this.options.defaultConfig;\n\t\t}\n\t}\n\n\tprivate registerWatcher(): void {\n\n\t\t// Watch the parent of the path so that we detect ADD and DELETES\n\t\tconst parentFolder = dirname(this._path);\n\t\tthis.watch(parentFolder, true);\n\n\t\t// Check if the path is a symlink and watch its target if so\n\t\tfs.lstat(this._path, (err, stat) => {\n\t\t\tif (err || stat.isDirectory()) {\n\t\t\t\treturn; // path is not a valid file\n\t\t\t}\n\n\t\t\t// We found a symlink\n\t\t\tif (stat.isSymbolicLink()) {\n\t\t\t\tfs.readlink(this._path, (err, realPath) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn; // path is not a valid symlink\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.watch(realPath, false);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate watch(path: string, isParentFolder: boolean): void {\n\t\tif (this.disposed) {\n\t\t\treturn; // avoid watchers that will never get disposed by checking for being disposed\n\t\t}\n\n\t\tthis.disposables.push(extfs.watch(path,\n\t\t\t(type, file) => this.onConfigFileChange(type, file, isParentFolder),\n\t\t\t(error: string) => this.options.onError(error)\n\t\t));\n\t}\n\n\tprivate onConfigFileChange(eventType: string, filename: string | undefined, isParentFolder: boolean): void {\n\t\tif (isParentFolder) {\n\n\t\t\t// Windows: in some cases the filename contains artifacts from the absolute path\n\t\t\t// see https://github.com/nodejs/node/issues/19170\n\t\t\t// As such, we have to ensure that the filename basename is used for comparison.\n\t\t\tif (isWindows && filename && filename !== this.configName) {\n\t\t\t\tfilename = basename(filename);\n\t\t\t}\n\n\t\t\tif (filename !== this.configName) {\n\t\t\t\treturn; // a change to a sibling file that is not our config file\n\t\t\t}\n\t\t}\n\n\t\tif (this.timeoutHandle) {\n\t\t\tglobal.clearTimeout(this.timeoutHandle);\n\t\t\tthis.timeoutHandle = null;\n\t\t}\n\n\t\t// we can get multiple change events for one change, so we buffer through a timeout\n\t\tthis.timeoutHandle = global.setTimeout(() => this.reload(), this.options.changeBufferDelay || 0);\n\t}\n\n\tpublic reload(callback?: (config: T) => void): void {\n\t\tthis.loadAsync(currentConfig => {\n\t\t\tif (!objects.equals(currentConfig, this.cache)) {\n\t\t\t\tthis.updateCache(currentConfig);\n\n\t\t\t\tthis._onDidUpdateConfiguration.fire({ config: this.cache });\n\t\t\t}\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(currentConfig);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getConfig(): T {\n\t\tthis.ensureLoaded();\n\n\t\treturn this.cache;\n\t}\n\n\tprivate ensureLoaded(): void {\n\t\tif (!this.loaded) {\n\t\t\tthis.updateCache(this.loadSync());\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extfs from 'vs/base/node/extfs';\nimport { join } from 'vs/base/common/path';\nimport { nfcall, Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\n\nexport function readdir(path: string): Promise<string[]> {\n\treturn nfcall(extfs.readdir, path);\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn new Promise(c => fs.exists(path, c));\n}\n\nexport function chmod(path: string, mode: number): Promise<boolean> {\n\treturn nfcall(fs.chmod, path, mode);\n}\n\nexport import mkdirp = extfs.mkdirp;\n\nexport function rimraf(path: string): Promise<void> {\n\treturn lstat(path).then(stat => {\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\treturn readdir(path)\n\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(join(path, child)))))\n\t\t\t\t.then(() => rmdir(path));\n\t\t} else {\n\t\t\treturn unlink(path);\n\t\t}\n\t}, (err: NodeJS.ErrnoException) => {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Promise.reject(err);\n\t});\n}\n\nexport function realpath(path: string): Promise<string> {\n\treturn nfcall(extfs.realpath, path);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn nfcall(fs.stat, path);\n}\n\nexport function statLink(path: string): Promise<{ stat: fs.Stats, isSymbolicLink: boolean }> {\n\treturn nfcall(extfs.statLink, path);\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn nfcall(fs.lstat, path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn nfcall(fs.rename, oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tfs.rename(oldPath, newPath, () => resolve());\n\t});\n}\n\nexport function rmdir(path: string): Promise<void> {\n\treturn nfcall(fs.rmdir, path);\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn nfcall(fs.unlink, path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn nfcall<void>(fs.symlink, target, path, type);\n}\n\nexport function readlink(path: string): Promise<string> {\n\treturn nfcall<string>(fs.readlink, path);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn nfcall(fs.truncate, path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn nfcall(fs.readFile, path, encoding);\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueue: { [path: string]: Queue<void> } = Object.create(null);\n\nexport function writeFile(path: string, data: string, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: NodeJS.ReadableStream, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: any, options?: extfs.IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: any, options?: extfs.IWriteFileOptions): any {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => nfcall(extfs.writeFileAndFlush, path, data, options));\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accomodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tlet writeFileQueue = writeFilePathQueue[queueKey];\n\tif (!writeFileQueue) {\n\t\twriteFileQueue = new Queue<void>();\n\t\twriteFilePathQueue[queueKey] = writeFileQueue;\n\n\t\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\t\tonFinish(() => {\n\t\t\tdelete writeFilePathQueue[queueKey];\n\t\t\twriteFileQueue.dispose();\n\t\t});\n\t}\n\n\treturn writeFileQueue;\n}\n\n/**\n* Read a dir and return only subfolders\n*/\nexport function readDirsInDir(dirPath: string): Promise<string[]> {\n\treturn readdir(dirPath).then(children => {\n\t\treturn Promise.all(children.map(c => dirExists(join(dirPath, c)))).then(exists => {\n\t\t\treturn children.filter((_, i) => exists[i]);\n\t\t});\n\t});\n}\n\n/**\n* `path` exists and is a directory\n*/\nexport function dirExists(path: string): Promise<boolean> {\n\treturn stat(path).then(stat => stat.isDirectory(), () => false);\n}\n\n/**\n* `path` exists and is a file.\n*/\nexport function fileExists(path: string): Promise<boolean> {\n\treturn stat(path).then(stat => stat.isFile(), () => false);\n}\n\n/**\n * Deletes a path from disk.\n */\nlet _tmpDir: string | null = null;\nfunction getTmpDir(): string {\n\tif (!_tmpDir) {\n\t\t_tmpDir = os.tmpdir();\n\t}\n\treturn _tmpDir;\n}\nexport function del(path: string, tmp = getTmpDir()): Promise<void> {\n\treturn nfcall(extfs.del, path, tmp);\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport function copy(source: string, target: string): Promise<void> {\n\treturn nfcall(extfs.copy, source, target);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, toDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: Buffer): void;\n\tonMessage: Event<Buffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the couter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidChangeConnections: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): Buffer;\n}\n\ninterface IWriter {\n\twrite(buffer: Buffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: Buffer) { }\n\n\tread(bytes: number): Buffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.length;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: Buffer[] = [];\n\n\tget buffer(): Buffer {\n\t\treturn Buffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: Buffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tArray = 3,\n\tObject = 4\n}\n\nfunction createSizeBuffer(size: number): Buffer {\n\tconst result = Buffer.allocUnsafe(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nconst BufferPresets = {\n\tUndefined: Buffer.alloc(1, DataType.Undefined),\n\tString: Buffer.alloc(1, DataType.String),\n\tBuffer: Buffer.alloc(1, DataType.Buffer),\n\tArray: Buffer.alloc(1, DataType.Array),\n\tObject: Buffer.alloc(1, DataType.Object)\n};\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = Buffer.from(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.length));\n\t\twriter.write(buffer);\n\t} else if (Buffer.isBuffer(data)) {\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(data.length));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = Buffer.from(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.length));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: Buffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error('Unknown channel');\n\t\t}\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error('Unknown channel');\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable([toDisposable(cancel), cancellationTokenListener]);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => this.activeRequests.delete(disposable));\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawEventFireResponse) => emitter.fire(res.data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: Buffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate _onDidChangeConnections = new Emitter<Connection<TContext>>();\n\treadonly onDidChangeConnections: Event<Connection<TContext>> = this._onDidChangeConnections.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidChangeConnections.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tconst channelPromise = router.routeCall(that, command, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tconst channelPromise = router.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidChangeConnections.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidChangeConnections);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/node/ipc';\nimport { Event } from 'vs/base/common/event';\n\nexport interface Sender {\n\tsend(channel: string, msg: Buffer | null): void;\n}\n\nexport class Protocol implements IMessagePassingProtocol {\n\n\tconstructor(private sender: Sender, readonly onMessage: Event<Buffer>) { }\n\n\tsend(message: Buffer): void {\n\t\ttry {\n\t\t\tthis.sender.send('ipc:message', message);\n\t\t} catch (e) {\n\t\t\t// systems are going down\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.sender.send('ipc:disconnect', null);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IPCClient } from 'vs/base/parts/ipc/node/ipc';\nimport { Protocol } from 'vs/base/parts/ipc/node/ipc.electron';\nimport { ipcRenderer } from 'electron';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class Client extends IPCClient implements IDisposable {\n\n\tprivate protocol: Protocol;\n\n\tprivate static createProtocol(): Protocol {\n\t\tconst onMessage = Event.fromNodeEventEmitter<Buffer>(ipcRenderer, 'ipc:message', (_, message: Buffer) => message);\n\t\tipcRenderer.send('ipc:hello');\n\t\treturn new Protocol(ipcRenderer, onMessage);\n\t}\n\n\tconstructor(id: string) {\n\t\tconst protocol = Client.createProtocol();\n\t\tsuper(protocol, id);\n\t\tthis.protocol = protocol;\n\t}\n\n\tdispose(): void {\n\t\tthis.protocol.dispose();\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, ClientConnectionEvent, IPCServer, IPCClient } from 'vs/base/parts/ipc/node/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nclass ChunkStream {\n\n\tprivate _chunks: Buffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: Buffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic readUInt32BE(): number {\n\t\tlet tmp = this.read(4);\n\t\treturn tmp.readUInt32BE(0);\n\t}\n\n\tpublic read(byteCount: number): Buffer {\n\t\tif (byteCount === 0) {\n\t\t\treturn Buffer.allocUnsafe(0);\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks.shift()!;\n\t\t\tthis._totalLength -= byteCount;\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\tthis._totalLength -= byteCount;\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = Buffer.allocUnsafe(byteCount);\n\t\tlet resultOffset = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[0];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tthis._chunks[0] = chunk.slice(byteCount);\n\n\t\t\t\tchunk.copy(result, resultOffset, 0, byteCount);\n\t\t\t\tresultOffset += byteCount;\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tthis._chunks.shift();\n\n\t\t\t\tchunk.copy(result, resultOffset, 0, chunk.byteLength);\n\t\t\t\tresultOffset += chunk.byteLength;\n\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/**\n * A message has the following format:\n *\n * \t\t[bodyLen|message]\n * \t\t[header^|data^^^]\n * \t\t[u32be^^|buffer^]\n */\n\nexport class Protocol implements IDisposable, IMessagePassingProtocol {\n\n\tprivate static readonly _headerLen = 4;\n\n\tprivate _isDisposed: boolean;\n\tprivate _incomingData: ChunkStream;\n\n\tprivate _socketDataListener: (data: Buffer) => void;\n\tprivate _socketEndListener: () => void;\n\tprivate _socketCloseListener: () => void;\n\n\tprivate _onMessage = new Emitter<Buffer>();\n\treadonly onMessage: Event<Buffer> = this._onMessage.event;\n\n\tprivate _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(private _socket: Socket) {\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\n\t\tconst state = {\n\t\t\treadHead: true,\n\t\t\tbodyLen: -1,\n\t\t};\n\n\t\tconst acceptChunk = (data: Buffer) => {\n\n\t\t\tthis._incomingData.acceptChunk(data);\n\n\t\t\twhile (this._incomingData.byteLength > 0) {\n\n\t\t\t\tif (state.readHead) {\n\t\t\t\t\t// expecting header -> read header\n\t\t\t\t\tif (this._incomingData.byteLength >= Protocol._headerLen) {\n\t\t\t\t\t\tstate.bodyLen = this._incomingData.readUInt32BE();\n\t\t\t\t\t\tstate.readHead = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!state.readHead) {\n\t\t\t\t\t// expecting body -> read bodyLen-bytes for\n\t\t\t\t\t// the actual message or wait for more data\n\t\t\t\t\tif (this._incomingData.byteLength >= state.bodyLen) {\n\t\t\t\t\t\tconst buffer = this._incomingData.read(state.bodyLen);\n\n\t\t\t\t\t\tstate.bodyLen = -1;\n\t\t\t\t\t\tstate.readHead = true;\n\n\t\t\t\t\t\tthis._onMessage.fire(buffer);\n\n\t\t\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._socketDataListener = (data: Buffer) => {\n\t\t\tacceptChunk(data);\n\t\t};\n\t\t_socket.on('data', this._socketDataListener);\n\n\t\tthis._socketEndListener = () => {\n\t\t};\n\t\t_socket.on('end', this._socketEndListener);\n\n\t\tthis._socketCloseListener = () => {\n\t\t\tthis._onClose.fire();\n\t\t};\n\t\t_socket.once('close', this._socketCloseListener);\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tthis._socket.removeListener('data', this._socketDataListener);\n\t\tthis._socket.removeListener('end', this._socketEndListener);\n\t\tthis._socket.removeListener('close', this._socketCloseListener);\n\t}\n\n\tend(): void {\n\t\tthis._socket.end();\n\t}\n\n\treadEntireBuffer(): Buffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tsend(buffer: Buffer): void {\n\t\tconst header = Buffer.allocUnsafe(Protocol._headerLen);\n\t\theader.writeUInt32BE(buffer.length, 0, true);\n\t\tthis._writeSoon(header, buffer);\n\t}\n\n\tprivate _writeBuffer = new class {\n\n\t\tprivate _data: Buffer[] = [];\n\t\tprivate _totalLength = 0;\n\n\t\tadd(head: Buffer, body: Buffer): boolean {\n\t\t\tconst wasEmpty = this._totalLength === 0;\n\t\t\tthis._data.push(head, body);\n\t\t\tthis._totalLength += head.length + body.length;\n\t\t\treturn wasEmpty;\n\t\t}\n\n\t\ttake(): Buffer {\n\t\t\tconst ret = Buffer.concat(this._data, this._totalLength);\n\t\t\tthis._data.length = 0;\n\t\t\tthis._totalLength = 0;\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\tprivate _writeSoon(header: Buffer, data: Buffer): void {\n\t\tif (this._writeBuffer.add(header, data)) {\n\t\t\tsetImmediate(() => {\n\t\t\t\t// return early if socket has been destroyed in the meantime\n\t\t\t\tif (this._socket.destroyed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t\t\t// anyways and nodejs is already doing that for us:\n\t\t\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t\t\t// > accept and buffer chunk even if it has not not been allowed to drain.\n\t\t\t\tthis._socket.write(this._writeBuffer.take());\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(socket),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: Socket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | BufferedProtocol, id: TContext) {\n\t\tsuper(protocol, id);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.protocol.end();\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(socket, clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nfunction createBufferedEvent<T>(source: Event<T>): Event<T> {\n\tlet emitter: Emitter<T>;\n\tlet hasListeners = false;\n\tlet isDeliveringMessages = false;\n\tlet bufferedMessages: T[] = [];\n\n\tconst deliverMessages = () => {\n\t\tif (isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tisDeliveringMessages = true;\n\t\twhile (hasListeners && bufferedMessages.length > 0) {\n\t\t\temitter.fire(bufferedMessages.shift()!);\n\t\t}\n\t\tisDeliveringMessages = false;\n\t};\n\n\tsource((e: T) => {\n\t\tbufferedMessages.push(e);\n\t\tdeliverMessages();\n\t});\n\n\temitter = new Emitter<T>({\n\t\tonFirstListenerAdd: () => {\n\t\t\thasListeners = true;\n\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\tprocess.nextTick(deliverMessages);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\thasListeners = false;\n\t\t}\n\t});\n\n\treturn emitter.event;\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedProtocol implements IMessagePassingProtocol {\n\n\tprivate readonly _actual: Protocol;\n\tpublic readonly onMessage: Event<Buffer>;\n\tpublic readonly onClose: Event<void>;\n\n\tconstructor(actual: Protocol) {\n\t\tthis._actual = actual;\n\t\tthis.onMessage = createBufferedEvent(this._actual.onMessage);\n\t\tthis.onClose = createBufferedEvent(this._actual.onClose);\n\t}\n\n\tpublic send(buffer: Buffer): void {\n\t\tthis._actual.send(buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis._actual.end();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (exception.message) {\n\t\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), exception.stack || exception.stacktrace);\n\t\t}\n\n\t\treturn detectSystemErrorMessage(exception);\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message;\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = extension => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = 'pprice.better-merge';\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = value => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { rimraf } from 'vs/base/node/pfs';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\tprivate environmentService: IEnvironmentService,\n\t\tprivate logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension } from '../common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer), args[1]);\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\t_serviceBrand: any;\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(result)));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation, type]));\n\t}\n\n\tinstall(vsix: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('install', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('installFromGallery', [extension]));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string;\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace';\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind;\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\textensionsManagementServuce: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementServuce.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementServuce.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.del(this.extensionsManifestCache).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { forEach } from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes[key];\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn this._nodes[this._hashFn(data)];\n\t}\n\n\tisEmpty(): boolean {\n\t\tfor (const _key in this._nodes) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew(first: A1, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { _serviceBrand: any; }[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>, isOptional?: typeof optional): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<T>(ctor: IConstructorSignature0<T>): T;\n\tcreateInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n\tcreateInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n\tcreateInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[]=[]>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif (target[_util.DI_TARGET] === target) {\n\t\ttarget[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\ttarget[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\ttarget[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): { (...args: any[]): void; type: T; } {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport Severity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { basename } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { FileFilter } from 'vs/platform/windows/common/windows';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\n\nexport interface IConfirmation {\n\ttitle?: string;\n\ttype?: 'none' | 'info' | 'error' | 'question' | 'warning';\n\tmessage: string;\n\tdetail?: string;\n\tprimaryButton?: string;\n\tsecondaryButton?: string;\n\tcheckbox?: {\n\t\tlabel: string;\n\t\tchecked?: boolean;\n\t};\n}\n\nexport interface IConfirmationResult {\n\n\t/**\n\t * Will be true if the dialog was confirmed with the primary button\n\t * pressed.\n\t */\n\tconfirmed: boolean;\n\n\t/**\n\t * This will only be defined if the confirmation was created\n\t * with the checkox option defined.\n\t */\n\tcheckboxChecked?: boolean;\n}\n\nexport interface IPickAndOpenOptions {\n\tforceNewWindow?: boolean;\n\tdefaultUri?: URI;\n\ttelemetryExtraData?: ITelemetryData;\n}\n\nexport interface ISaveDialogOptions {\n\t/**\n\t * A human-readable string for the dialog title\n\t */\n\ttitle?: string;\n\n\t/**\n\t * The resource the dialog shows when opened.\n\t */\n\tdefaultUri?: URI;\n\n\t/**\n\t * A set of file filters that are used by the dialog. Each entry is a human readable label,\n\t * like \"TypeScript\", and an array of extensions.\n\t */\n\tfilters?: FileFilter[];\n\n\t/**\n\t * A human-readable string for the ok button\n\t */\n\tsaveLabel?: string;\n\n\t/**\n\t * Specifies a list of schemas for the file systems the user can save to. If not specified, uses the schema of the defaultURI or, if also not specified,\n\t * the schema of the current window.\n\t */\n\tavailableFileSystems?: string[];\n}\n\nexport interface IOpenDialogOptions {\n\t/**\n\t * A human-readable string for the dialog title\n\t */\n\ttitle?: string;\n\n\t/**\n\t * The resource the dialog shows when opened.\n\t */\n\tdefaultUri?: URI;\n\n\t/**\n\t * A human-readable string for the open button.\n\t */\n\topenLabel?: string;\n\n\t/**\n\t * Allow to select files, defaults to `true`.\n\t */\n\tcanSelectFiles?: boolean;\n\n\t/**\n\t * Allow to select folders, defaults to `false`.\n\t */\n\tcanSelectFolders?: boolean;\n\n\t/**\n\t * Allow to select many files or folders.\n\t */\n\tcanSelectMany?: boolean;\n\n\t/**\n\t * A set of file filters that are used by the dialog. Each entry is a human readable label,\n\t * like \"TypeScript\", and an array of extensions.\n\t */\n\tfilters?: FileFilter[];\n\n\t/**\n\t * Specifies a list of schemas for the file systems the user can load from. If not specified, uses the schema of the defaultURI or, if also not available,\n\t * the schema of the current window.\n\t */\n\tavailableFileSystems?: string[];\n}\n\n\nexport const IDialogService = createDecorator<IDialogService>('dialogService');\n\nexport interface IDialogOptions {\n\tcancelId?: number;\n\tdetail?: string;\n}\n\n/**\n * A service to bring up modal dialogs.\n *\n * Note: use the `INotificationService.prompt()` method for a non-modal way to ask\n * the user for input.\n */\nexport interface IDialogService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Ask the user for confirmation with a modal dialog.\n\t */\n\tconfirm(confirmation: IConfirmation): Promise<IConfirmationResult>;\n\n\t/**\n\t * Present a modal dialog to the user.\n\t *\n\t * @returns A promise with the selected choice index. If the user refused to choose,\n\t * then a promise with index of `cancelId` option is returned. If there is no such\n\t * option then promise with index `0` is returned.\n\t */\n\tshow(severity: Severity, message: string, buttons: string[], options?: IDialogOptions): Promise<number>;\n}\n\nexport const IFileDialogService = createDecorator<IFileDialogService>('fileDialogService');\n\n/**\n * A service to bring up file dialogs.\n */\nexport interface IFileDialogService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * The default path for a new file based on previously used files.\n\t * @param schemeFilter The scheme of the file path. If no filter given, the scheme of the current window is used.\n\t */\n\tdefaultFilePath(schemeFilter?: string): URI | undefined;\n\n\t/**\n\t * The default path for a new folder based on previously used folders.\n\t * @param schemeFilter The scheme of the folder path. If no filter given, the scheme of the current window is used.\n\t */\n\tdefaultFolderPath(schemeFilter?: string): URI | undefined;\n\n\t/**\n\t * The default path for a new workspace based on previously used workspaces.\n\t * @param schemeFilter The scheme of the workspace path. If no filter given, the scheme of the current window is used.\n\t */\n\tdefaultWorkspacePath(schemeFilter?: string): URI | undefined;\n\n\t/**\n\t * Shows a file-folder selection dialog and opens the selected entry.\n\t */\n\tpickFileFolderAndOpen(options: IPickAndOpenOptions): Promise<any>;\n\n\t/**\n\t * Shows a file selection dialog and opens the selected entry.\n\t */\n\tpickFileAndOpen(options: IPickAndOpenOptions): Promise<any>;\n\n\t/**\n\t * Shows a folder selection dialog and opens the selected entry.\n\t */\n\tpickFolderAndOpen(options: IPickAndOpenOptions): Promise<any>;\n\n\t/**\n\t * Shows a workspace selection dialog and opens the selected entry.\n\t */\n\tpickWorkspaceAndOpen(options: IPickAndOpenOptions): Promise<any>;\n\n\t/**\n\t * Shows a save file dialog and returns the chosen file URI.\n\t */\n\tshowSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined>;\n\n\t/**\n\t * Shows a open file dialog and returns the chosen file URI.\n\t */\n\tshowOpenDialog(options: IOpenDialogOptions): Promise<URI[] | undefined>;\n\n}\n\nconst MAX_CONFIRM_FILES = 10;\nexport function getConfirmMessage(start: string, resourcesToConfirm: URI[]): string {\n\tconst message = [start];\n\tmessage.push('');\n\tmessage.push(...resourcesToConfirm.slice(0, MAX_CONFIRM_FILES).map(r => basename(r)));\n\n\tif (resourcesToConfirm.length > MAX_CONFIRM_FILES) {\n\t\tif (resourcesToConfirm.length - MAX_CONFIRM_FILES === 1) {\n\t\t\tmessage.push(localize('moreFile', \"...1 additional file not shown\"));\n\t\t} else {\n\t\t\tmessage.push(localize('moreFiles', \"...{0} additional files not shown\", resourcesToConfirm.length - MAX_CONFIRM_FILES));\n\t\t}\n\t}\n\n\tmessage.push('');\n\treturn message.join('\\n');\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { IDialogService, IConfirmation, IConfirmationResult } from 'vs/platform/dialogs/common/dialogs';\nimport Severity from 'vs/base/common/severity';\nimport { Event } from 'vs/base/common/event';\n\nexport class DialogChannel implements IServerChannel {\n\n\tconstructor(@IDialogService private readonly dialogService: IDialogService) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, args?: any[]): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'show': return this.dialogService.show(args![0], args![1], args![2]);\n\t\t\tcase 'confirm': return this.dialogService.confirm(args![0]);\n\t\t}\n\t\treturn Promise.reject(new Error('invalid command'));\n\t}\n}\n\nexport class DialogChannelClient implements IDialogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(private channel: IChannel) { }\n\n\tshow(severity: Severity, message: string, options: string[]): Promise<number> {\n\t\treturn this.channel.call('show', [severity, message, options]);\n\t}\n\n\tconfirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\treturn this.channel.call('confirm', [confirmation]);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\t_serviceBrand: any;\n\n\tdownload(uri: URI, to?: string, cancellationToken?: CancellationToken): Promise<string>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface ParsedArgs {\n\t[arg: string]: any;\n\t_: string[];\n\t'folder-uri'?: string | string[];\n\t'file-uri'?: string | string[];\n\t_urls?: string[];\n\thelp?: boolean;\n\tversion?: boolean;\n\tstatus?: boolean;\n\twait?: boolean;\n\twaitMarkerFilePath?: string;\n\tdiff?: boolean;\n\tadd?: boolean;\n\tgoto?: boolean;\n\t'new-window'?: boolean;\n\t'unity-launch'?: boolean; // Always open a new window, except if opening the first window or opening a file or folder as part of the launch.\n\t'reuse-window'?: boolean;\n\tlocale?: string;\n\t'user-data-dir'?: string;\n\t'prof-startup'?: string;\n\t'prof-startup-prefix'?: string;\n\t'prof-append-timers'?: string;\n\t'prof-modules'?: string;\n\tverbose?: boolean;\n\ttrace?: boolean;\n\t'trace-category-filter'?: string;\n\t'trace-options'?: string;\n\tlog?: string;\n\tlogExtensionHostCommunication?: boolean;\n\t'extensions-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\textensionDevelopmentPath?: string; // either a local path or a URI\n\textensionTestsPath?: string; // either a local path or a URI\n\t'inspect-extensions'?: string;\n\t'inspect-brk-extensions'?: string;\n\tdebugId?: string;\n\t'inspect-search'?: string;\n\t'inspect-brk-search'?: string;\n\t'disable-extensions'?: boolean;\n\t'disable-extension'?: string | string[];\n\t'list-extensions'?: boolean;\n\t'show-versions'?: boolean;\n\t'install-extension'?: string | string[];\n\t'uninstall-extension'?: string | string[];\n\t'enable-proposed-api'?: string | string[];\n\t'open-url'?: boolean;\n\t'skip-getting-started'?: boolean;\n\t'skip-release-notes'?: boolean;\n\t'sticky-quickopen'?: boolean;\n\t'disable-restore-windows'?: boolean;\n\t'disable-telemetry'?: boolean;\n\t'export-default-configuration'?: string;\n\t'install-source'?: string;\n\t'disable-updates'?: string;\n\t'disable-crash-reporter'?: string;\n\t'skip-add-to-recently-opened'?: boolean;\n\t'max-memory'?: string;\n\t'file-write'?: boolean;\n\t'file-chmod'?: boolean;\n\t'upload-logs'?: string;\n\t'driver'?: string;\n\t'driver-verbose'?: boolean;\n\tremote?: string;\n\t'nodeless'?: boolean; // TODO@ben revisit electron5 nodeless support\n}\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport interface IEnvironmentService {\n\t_serviceBrand: any;\n\n\targs: ParsedArgs;\n\n\texecPath: string;\n\tcliPath: string;\n\tappRoot: string;\n\n\tuserHome: string;\n\tuserDataPath: string;\n\n\tappNameLong: string;\n\tappQuality?: string;\n\tappSettingsHome: string;\n\tappSettingsPath: string;\n\tappKeybindingsPath: string;\n\n\tsettingsSearchBuildId?: number;\n\tsettingsSearchUrl?: string;\n\n\tglobalStorageHome: string;\n\tworkspaceStorageHome: string;\n\n\tbackupHome: string;\n\tbackupWorkspacesPath: string;\n\n\tuntitledWorkspacesHome: URI;\n\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tbuiltinExtensionsPath: string;\n\textensionsPath: string;\n\textensionDevelopmentLocationURI?: URI;\n\textensionTestsLocationURI?: URI;\n\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tdebugSearch: IDebugParams;\n\n\tlogExtensionHostCommunication: boolean;\n\n\tisBuilt: boolean;\n\twait: boolean;\n\tstatus: boolean;\n\n\t// logging\n\tlog?: string;\n\tlogsPath: string;\n\tverbose: boolean;\n\n\tskipGettingStarted: boolean | undefined;\n\tskipReleaseNotes: boolean | undefined;\n\n\tskipAddToRecentlyOpened: boolean;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tnodeCachedDataDir?: string;\n\n\tinstallSourcePath: string;\n\tdisableUpdates: boolean;\n\tdisableCrashReporter: boolean;\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: any = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => clearTimeout(handle)));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join } from 'vs/base/common/path';\nimport { readdir, readFile, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IBackupWorkspacesFormat } from 'vs/platform/backup/common/backup';\n\nexport class StorageDataCleaner extends Disposable {\n\n\t// Workspace/Folder storage names are MD5 hashes (128bits / 4 due to hex presentation)\n\tprivate static NON_EMPTY_WORKSPACE_ID_LENGTH = 128 / 4;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpStorageSoon();\n\t}\n\n\tprivate cleanUpStorageSoon(): void {\n\t\tlet handle: any = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\t// Leverage the backup workspace file to find out which empty workspace is currently in use to\n\t\t\t// determine which empty workspace storage can safely be deleted\n\t\t\treadFile(this.environmentService.backupWorkspacesPath, 'utf8').then(contents => {\n\t\t\t\tconst workspaces = JSON.parse(contents) as IBackupWorkspacesFormat;\n\t\t\t\tconst emptyWorkspaces = workspaces.emptyWorkspaceInfos.map(info => info.backupFolder);\n\n\t\t\t\t// Read all workspace storage folders that exist\n\t\t\t\treturn readdir(this.environmentService.workspaceStorageHome).then(storageFolders => {\n\t\t\t\t\tconst deletes: Promise<void>[] = [];\n\n\t\t\t\t\tstorageFolders.forEach(storageFolder => {\n\t\t\t\t\t\tif (storageFolder.length === StorageDataCleaner.NON_EMPTY_WORKSPACE_ID_LENGTH) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (emptyWorkspaces.indexOf(storageFolder) === -1) {\n\t\t\t\t\t\t\tdeletes.push(rimraf(join(this.environmentService.workspaceStorageHome, storageFolder)));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn Promise.all(deletes);\n\t\t\t\t});\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 30 * 1000);\n\n\t\tthis._register(toDisposable(() => clearTimeout(handle)));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: { [languageId: string]: IGalleryExtensionAsset };\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\treadonly manifest: IExtensionManifest;\n\tmetadata: IGalleryMetadata;\n\treadmeUrl: URI | null;\n\tchangelogUrl: URI | null;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionGalleryService {\n\t_serviceBrand: any;\n\tisEnabled(): boolean;\n\tquery(options?: IQueryOptions): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, operation: InstallOperation): Promise<string>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tloadAllDependencies(dependencies: IExtensionIdentifier[], token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport interface IExtensionManagementService {\n\t_serviceBrand: any;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier>;\n\tinstall(vsix: URI): Promise<IExtensionIdentifier>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<void>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const IExtensionManagementServerService = createDecorator<IExtensionManagementServerService>('extensionManagementServerService');\n\nexport interface IExtensionManagementServer {\n\textensionManagementService: IExtensionManagementService;\n\tauthority: string;\n\tlabel: string;\n}\n\nexport interface IExtensionManagementServerService {\n\t_serviceBrand: any;\n\treadonly localExtensionManagementServer: IExtensionManagementServer;\n\treadonly remoteExtensionManagementServer: IExtensionManagementServer | null;\n\tgetExtensionManagementServer(location: URI): IExtensionManagementServer | null;\n}\n\nexport const enum EnablementState {\n\tDisabled,\n\tWorkspaceDisabled,\n\tEnabled,\n\tWorkspaceEnabled\n}\n\nexport const IExtensionEnablementService = createDecorator<IExtensionEnablementService>('extensionEnablementService');\n\nexport interface IExtensionEnablementService {\n\t_serviceBrand: any;\n\n\treadonly allUserExtensionsDisabled: boolean;\n\n\t/**\n\t * Event to listen on for extension enablement changes\n\t */\n\tonEnablementChanged: Event<IExtension[]>;\n\n\t/**\n\t * Returns all disabled extension identifiers for current workspace\n\t * Returns an empty array if none exist\n\t */\n\tgetDisabledExtensions(): Promise<IExtensionIdentifier[]>;\n\n\t/**\n\t * Returns the enablement state for the given extension\n\t */\n\tgetEnablementState(extension: IExtension): EnablementState;\n\n\t/**\n\t * Returns `true` if the enablement can be changed.\n\t */\n\tcanChangeEnablement(extension: IExtension): boolean;\n\n\t/**\n\t * Returns `true` if the given extension identifier is enabled.\n\t */\n\tisEnabled(extension: IExtension): boolean;\n\n\t/**\n\t * Enable or disable the given extension.\n\t * if `workspace` is `true` then enablement is done for workspace, otherwise globally.\n\t *\n\t * Returns a promise that resolves to boolean value.\n\t * if resolves to `true` then requires restart for the change to take effect.\n\t *\n\t * Throws error if enablement is requested for workspace and there is no workspace\n\t */\n\tsetEnablement(extensions: IExtension[], state: EnablementState): Promise<boolean[]>;\n}\n\nexport interface IExtensionsConfigContent {\n\trecommendations: string[];\n\tunwantedRecommendations: string[];\n}\n\nexport type RecommendationChangeNotification = {\n\textensionId: string,\n\tisRecommended: boolean\n};\n\nexport type DynamicRecommendation = 'dynamic';\nexport type ExecutableRecommendation = 'executable';\nexport type CachedRecommendation = 'cached';\nexport type ApplicationRecommendation = 'application';\nexport type ExtensionRecommendationSource = IWorkspace | IWorkspaceFolder | URI | DynamicRecommendation | ExecutableRecommendation | CachedRecommendation | ApplicationRecommendation;\n\nexport interface IExtensionRecommendation {\n\textensionId: string;\n\tsources: ExtensionRecommendationSource[];\n}\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('extensionTipsService');\n\nexport interface IExtensionTipsService {\n\t_serviceBrand: any;\n\tgetAllRecommendationsWithReason(): { [id: string]: { reasonId: ExtensionRecommendationReason, reasonText: string }; };\n\tgetFileBasedRecommendations(): IExtensionRecommendation[];\n\tgetOtherRecommendations(): Promise<IExtensionRecommendation[]>;\n\tgetWorkspaceRecommendations(): Promise<IExtensionRecommendation[]>;\n\tgetKeymapRecommendations(): IExtensionRecommendation[];\n\ttoggleIgnoredRecommendation(extensionId: string, shouldIgnore: boolean): void;\n\tgetAllIgnoredRecommendations(): { global: string[], workspace: string[] };\n\tonRecommendationChange: Event<RecommendationChangeNotification>;\n}\n\nexport const enum ExtensionRecommendationReason {\n\tWorkspace,\n\tFile,\n\tExecutable,\n\tDynamicWorkspace,\n\tExperimental\n}\n\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event as CommonEvent } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { IPath } from 'vs/platform/windows/common/windows';\n\nexport const IHistoryMainService = createDecorator<IHistoryMainService>('historyMainService');\n\nexport interface IRecentlyOpened {\n\tworkspaces: Array<IRecentWorkspace | IRecentFolder>;\n\tfiles: IRecentFile[];\n}\n\nexport type IRecent = IRecentWorkspace | IRecentFolder | IRecentFile;\n\nexport interface IRecentWorkspace {\n\tworkspace: IWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFolder {\n\tfolderUri: ISingleFolderWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFile {\n\tfileUri: URI;\n\tlabel?: string;\n}\n\nexport function isRecentWorkspace(curr: IRecent): curr is IRecentWorkspace {\n\treturn !!curr['workspace'];\n}\n\nexport function isRecentFolder(curr: IRecent): curr is IRecentFolder {\n\treturn !!curr['folderUri'];\n}\n\nexport function isRecentFile(curr: IRecent): curr is IRecentFile {\n\treturn !!curr['fileUri'];\n}\n\n\nexport interface IHistoryMainService {\n\t_serviceBrand: any;\n\n\tonRecentlyOpenedChange: CommonEvent<void>;\n\n\taddRecentlyOpened(recents: IRecent[]): void;\n\tgetRecentlyOpened(currentWorkspace?: IWorkspaceIdentifier, currentFolder?: ISingleFolderWorkspaceIdentifier, currentFiles?: IPath[]): IRecentlyOpened;\n\tremoveFromRecentlyOpened(paths: URI[]): void;\n\tclearRecentlyOpened(): void;\n\n\tupdateWindowsJumpList(): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { create } from 'vs/base/common/types';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\n// PROXY\n// Ghetto-declare of the global Proxy object. This isn't the proper way\n// but allows us to run this code in the browser without IE11.\ndeclare var Proxy: any;\nconst _canUseProxy = typeof Proxy === 'function';\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: any;\n\n\tprotected readonly _services: ServiceCollection;\n\tprotected readonly _strict: boolean;\n\tprotected readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[]=[]>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn.apply(undefined, [accessor, ...args]);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>create.apply(null, [ctor].concat(args, serviceArgs));\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tfunction throwCycleError() {\n\t\t\tconst err = new Error('[createInstance] cyclic dependency between services');\n\t\t\terr.message = graph.toString();\n\t\t\tthrow err;\n\t\t}\n\n\t\tlet count = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// TODO@joh use the graph to find a cycle\n\t\t\t// a weak heuristic for cycle checks\n\t\t\tif (count++ > 100) {\n\t\t\t\tthrowCycleError();\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tlet dependencies = _util.getServiceDependencies(item.desc.ctor);\n\t\t\tfor (let dependency of dependencies) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrowCycleError();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - creating UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation || !_canUseProxy) {\n\t\t\t// eager instantiation or no support JS proxies (e.g. IE11)\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue(() => this._createInstance(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(_target: T, prop: PropertyKey): any {\n\t\t\t\t\treturn idle.getValue()[prop];\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { Client } from 'vs/base/parts/ipc/electron-browser/ipc.electron-browser';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nexport const IMainProcessService = createDecorator<IMainProcessService>('mainProcessService');\n\nexport interface IMainProcessService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tgetChannel(channelName: string): IChannel;\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void;\n}\n\nexport class MainProcessService extends Disposable implements IMainProcessService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate mainProcessConnection: Client;\n\n\tconstructor(\n\t\twindowId: number\n\t) {\n\t\tsuper();\n\n\t\tthis.mainProcessConnection = this._register(new Client(`window:${windowId}`));\n\t}\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.mainProcessConnection.getChannel(channelName);\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void {\n\t\tthis.mainProcessConnection.registerChannel(channelName, channel);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const enum LanguageType {\n\tCore = 1,\n\tContributed\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\t_serviceBrand: any;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(type?: LanguageType): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\n\nexport class LocalizationsChannel implements IServerChannel {\n\n\tonDidLanguagesChange: Event<void>;\n\n\tconstructor(private service: ILocalizationsService) {\n\t\tthis.onDidLanguagesChange = Event.buffer(service.onDidLanguagesChange, true);\n\t}\n\n\tlisten(_, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidLanguagesChange': return this.onDidLanguagesChange;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getLanguageIds': return this.service.getLanguageIds(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogService extends IDisposable {\n\t_serviceBrand: any;\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logServices: ILogService[]) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: any;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LogLevelSetterChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class LogLevelSetterChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.channel.call('setLevel', level);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private master: LogLevelSetterChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(master.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.master.setLevel(level);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, NullLogService, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n// @ts-ignore\nimport * as fs from 'fs';\n\nexport function createSpdLogService(processName: string, logLevel: LogLevel, logsFolder: string): ILogService {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\tconst logger = new _spdlog.RotatingLogger(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t\tlogger.setLevel(0);\n\n\t\treturn new SpdLogService(logger, logLevel);\n\t} catch (e) {\n\t\t/** Desktop console.error(e); */\n\t\treturn new NullLogService();\n\t}\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\ttry {\n\t\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\t\treturn new _spdlog.RotatingLogger(name, filename, filesize, filecount);\n\t} catch (e) {\n\t\tif (typeof window === 'undefined') {\n\t\t\t// @ts-ignore\n\t\t\tself.postMessage({\n\t\t\t\t$type: 'create-log',\n\t\t\t\t$data: {\n\t\t\t\t\tname, filename, filesize, filecount\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst dirs = filename.split('/');\n\t\t\tdirs.pop();\n\t\t\tlet abDirPath = '';\n\t\t\tdirs.forEach(dir => {\n\t\t\t\tif (!dir) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tabDirPath += `/${dir}`;\n\t\t\t\tif (!fs.existsSync(abDirPath)) {\n\t\t\t\t\tfs.mkdirSync(abDirPath);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!fs.existsSync(filename)) {\n\t\t\t\tfs.writeFileSync(filename, '', 'utf-8');\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tflush: function () {},\n\t\t\tcritical: function (content) {\n\t\t\t\tif (typeof window === 'undefined') {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t$type: 'log-critical',\n\t\t\t\t\t\t$data: {\n\t\t\t\t\t\t\tfilename, content\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst fileContent = fs.readFileSync(filename).toString();\n\t\t\t\t\tfs.writeFileSync(filename, fileContent + content, 'utf-8');\n\t\t\t\t}\n\t\t\t},\n\t\t\tclearFormatters: function () {},\n\t\t} as spdlog.RotatingLogger;\n\t}\n}\n\nclass SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\tprivate readonly logger: spdlog.RotatingLogger,\n\t\tlevel: LogLevel = LogLevel.Error\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.logger.trace(this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.logger.debug(this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.logger.info(this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.logger.warn(this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis.logger.error(this.format(array));\n\t\t\t} else {\n\t\t\t\tthis.logger.error(this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.logger.critical(this.format(arguments));\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.logger.drop();\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface IPackageConfiguration {\n\tname: string;\n\tversion: string;\n}\n\nconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\nconst packageJsonPath = path.join(rootPath, 'package.json');\nexport default require.__$__nodeRequire(packageJsonPath) as IPackageConfiguration;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport pkg from 'vs/platform/product/node/package';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(pkg.version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport interface IProductConfiguration {\n\tnameShort: string;\n\tnameLong: string;\n\tapplicationName: string;\n\twin32AppId: string;\n\twin32x64AppId: string;\n\twin32UserAppId: string;\n\twin32x64UserAppId: string;\n\twin32AppUserModelId: string;\n\twin32MutexName: string;\n\tdarwinBundleIdentifier: string;\n\turlProtocol: string;\n\tdataFolderName: string;\n\tdownloadUrl: string;\n\tupdateUrl?: string;\n\tquality?: string;\n\ttarget?: string;\n\tcommit?: string;\n\tsettingsSearchBuildId?: number;\n\tsettingsSearchUrl?: string;\n\texperimentsUrl?: string;\n\tdate: string;\n\textensionsGallery: {\n\t\tserviceUrl: string;\n\t\titemUrl: string;\n\t\tcontrolUrl: string;\n\t\trecommendationsUrl: string;\n\t};\n\textensionTips: { [id: string]: string; };\n\textensionImportantTips: { [id: string]: { name: string; pattern: string; }; };\n\texeBasedExtensionTips: { [id: string]: { friendlyName: string, windowsPath?: string, recommendations: string[] }; };\n\textensionKeywords: { [extension: string]: string[]; };\n\textensionAllowedBadgeProviders: string[];\n\textensionAllowedProposedApi: string[];\n\tkeymapExtensionTips: string[];\n\tcrashReporter: {\n\t\tcompanyName: string;\n\t\tproductName: string;\n\t};\n\twelcomePage: string;\n\tenableTelemetry: boolean;\n\taiConfig: {\n\t\tasimovKey: string;\n\t};\n\tsendASmile: {\n\t\treportIssueUrl: string,\n\t\trequestFeatureUrl: string\n\t};\n\tdocumentationUrl: string;\n\treleaseNotesUrl: string;\n\tkeyboardShortcutsUrlMac: string;\n\tkeyboardShortcutsUrlLinux: string;\n\tkeyboardShortcutsUrlWin: string;\n\tintroductoryVideosUrl: string;\n\ttipsAndTricksUrl: string;\n\ttwitterUrl: string;\n\trequestFeatureUrl: string;\n\treportIssueUrl: string;\n\tlicenseUrl: string;\n\tprivacyStatementUrl: string;\n\ttelemetryOptOutUrl: string;\n\tnpsSurveyUrl: string;\n\tsurveys: ISurveyData[];\n\tchecksums: { [path: string]: string; };\n\tchecksumFailMoreInfoUrl: string;\n\thockeyApp: {\n\t\t'win32-ia32': string;\n\t\t'win32-x64': string;\n\t\t'linux-ia32': string;\n\t\t'linux-x64': string;\n\t\t'darwin': string;\n\t};\n\tlogUploaderUrl: string;\n\tportable?: string;\n\tuiExtensions?: string[];\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n\nconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\nconst productJsonPath = path.join(rootPath, 'product.json');\nconst product = require.__$__nodeRequire(productJsonPath) as IProductConfiguration;\n\nif (process.env['VSCODE_DEV']) {\n\tproduct.nameShort += ' Dev';\n\tproduct.nameLong += ' Dev';\n\tproduct.dataFolderName += '-dev';\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport product from 'vs/platform/product/node/product';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\ninterface ExtensionEntry {\n\tversion: string;\n\textensionIdentifier: {\n\t\tid: string;\n\t\tuuid: string;\n\t};\n}\n\ninterface LanguagePackEntry {\n\thash: string;\n\textensions: ExtensionEntry[];\n}\n\ninterface LanguagePackFile {\n\t[locale: string]: LanguagePackEntry;\n}\n\nexport class LanguagePackCachedDataCleaner {\n\n\tprivate _disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\t// We have no Language pack support for dev version (run from source)\n\t\t// So only cleanup when we have a build version.\n\t\tif (this._environmentService.isBuilt) {\n\t\t\tthis._manageCachedDataSoon();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t}\n\n\tprivate _manageCachedDataSoon(): void {\n\t\tlet handle: any = setTimeout(async () => {\n\t\t\thandle = undefined;\n\t\t\tthis._logService.info('Starting to clean up unused language packs.');\n\t\t\tconst maxAge = product.nameLong.indexOf('Insiders') >= 0\n\t\t\t\t? 1000 * 60 * 60 * 24 * 7 // roughly 1 week\n\t\t\t\t: 1000 * 60 * 60 * 24 * 30 * 3; // roughly 3 months\n\t\t\ttry {\n\t\t\t\tconst installed: IStringDictionary<boolean> = Object.create(null);\n\t\t\t\tconst metaData: LanguagePackFile = JSON.parse(await pfs.readFile(path.join(this._environmentService.userDataPath, 'languagepacks.json'), 'utf8'));\n\t\t\t\tfor (let locale of Object.keys(metaData)) {\n\t\t\t\t\tconst entry = metaData[locale];\n\t\t\t\t\tinstalled[`${entry.hash}.${locale}`] = true;\n\t\t\t\t}\n\t\t\t\t// Cleanup entries for language packs that aren't installed anymore\n\t\t\t\tconst cacheDir = path.join(this._environmentService.userDataPath, 'clp');\n\t\t\t\tconst exists = await pfs.exists(cacheDir);\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (let entry of await pfs.readdir(cacheDir)) {\n\t\t\t\t\tif (installed[entry]) {\n\t\t\t\t\t\tthis._logService.info(`Skipping directory ${entry}. Language pack still in use.`);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthis._logService.info('Removing unused language pack:', entry);\n\t\t\t\t\tawait pfs.rimraf(path.join(cacheDir, entry));\n\t\t\t\t}\n\n\t\t\t\tconst now = Date.now();\n\t\t\t\tfor (let packEntry of Object.keys(installed)) {\n\t\t\t\t\tconst folder = path.join(cacheDir, packEntry);\n\t\t\t\t\tfor (let entry of await pfs.readdir(folder)) {\n\t\t\t\t\t\tif (entry === 'tcf.json') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst candidate = path.join(folder, entry);\n\t\t\t\t\t\tconst stat = await pfs.stat(candidate);\n\t\t\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\t\t\tconst diff = now - stat.mtime.getTime();\n\t\t\t\t\t\t\tif (diff > maxAge) {\n\t\t\t\t\t\t\t\tthis._logService.info('Removing language pack cache entry: ', path.join(packEntry, entry));\n\t\t\t\t\t\t\t\tawait pfs.rimraf(candidate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error);\n\t\t\t}\n\t\t}, 40 * 1000);\n\n\t\tthis._disposables.push({\n\t\t\tdispose() {\n\t\t\t\tif (handle !== undefined) {\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename, dirname, join } from 'vs/base/common/path';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { readdir, rimraf, stat } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport product from 'vs/platform/product/node/product';\n\nexport class NodeCachedDataCleaner {\n\n\tprivate static readonly _DataMaxAge = product.nameLong.indexOf('Insiders') >= 0\n\t\t? 1000 * 60 * 60 * 24 * 7 // roughly 1 week\n\t\t: 1000 * 60 * 60 * 24 * 30 * 3; // roughly 3 months\n\n\tprivate _disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService\n\t) {\n\t\tthis._manageCachedDataSoon();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t}\n\n\tprivate _manageCachedDataSoon(): void {\n\t\t// Cached data is stored as user data and we run a cleanup task everytime\n\t\t// the editor starts. The strategy is to delete all files that are older than\n\t\t// 3 months (1 week respectively)\n\t\tif (!this._environmentService.nodeCachedDataDir) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The folder which contains folders of cached data. Each of these folder is per\n\t\t// version\n\t\tconst nodeCachedDataRootDir = dirname(this._environmentService.nodeCachedDataDir);\n\t\tconst nodeCachedDataCurrent = basename(this._environmentService.nodeCachedDataDir);\n\n\t\tlet handle: any = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\treaddir(nodeCachedDataRootDir).then(entries => {\n\n\t\t\t\tconst now = Date.now();\n\t\t\t\tconst deletes: Promise<any>[] = [];\n\n\t\t\t\tentries.forEach(entry => {\n\t\t\t\t\t// name check\n\t\t\t\t\t// * not the current cached data folder\n\t\t\t\t\tif (entry !== nodeCachedDataCurrent) {\n\n\t\t\t\t\t\tconst path = join(nodeCachedDataRootDir, entry);\n\t\t\t\t\t\tdeletes.push(stat(path).then(stats => {\n\t\t\t\t\t\t\t// stat check\n\t\t\t\t\t\t\t// * only directories\n\t\t\t\t\t\t\t// * only when old enough\n\t\t\t\t\t\t\tif (stats.isDirectory()) {\n\t\t\t\t\t\t\t\tconst diff = now - stats.mtime.getTime();\n\t\t\t\t\t\t\t\tif (diff > NodeCachedDataCleaner._DataMaxAge) {\n\t\t\t\t\t\t\t\t\treturn rimraf(path);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all(deletes);\n\n\t\t\t}).then(undefined, onUnexpectedError);\n\n\t\t}, 30 * 1000);\n\n\t\tthis._disposables.push({\n\t\t\tdispose() { clearTimeout(handle); }\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, ParsedArgs, IDebugParams, IExtensionHostDebugParams } from 'vs/platform/environment/common/environment';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport { memoize } from 'vs/base/common/decorators';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nconst xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tif (xdgRuntimeDir) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\treturn path.join(xdgRuntimeDir, `vscode-${scope}-${pkg.version}-${type}.sock`);\n\t}\n\n\treturn path.join(userDataPath, `${pkg.version}-${type}.sock`);\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${pkg.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport class EnvironmentService implements IEnvironmentService {\n\n\t_serviceBrand: any;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): string { return os.homedir(); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\tget appNameLong(): string { return product.nameLong; }\n\n\tget appQuality(): string | undefined { return product.quality; }\n\n\t@memoize\n\tget appSettingsHome(): string { return path.join(this.userDataPath, 'User'); }\n\n\t@memoize\n\tget appSettingsPath(): string { return path.join(this.appSettingsHome, 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget settingsSearchBuildId(): number | undefined { return product.settingsSearchBuildId; }\n\n\t@memoize\n\tget settingsSearchUrl(): string | undefined { return product.settingsSearchUrl; }\n\n\t@memoize\n\tget appKeybindingsPath(): string { return path.join(this.appSettingsHome, 'keybindings.json'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): string { return path.join(this.userDataPath, 'Backups'); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn path.join(this.userHome, product.dataFolderName, 'extensions');\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget skipGettingStarted(): boolean { return !!this._args['skip-getting-started']; }\n\n\tget skipReleaseNotes(): boolean { return !!this._args['skip-release-notes']; }\n\n\tget skipAddToRecentlyOpened(): boolean { return !!this._args['skip-add-to-recently-opened']; }\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\n\t@memoize\n\tget debugSearch(): IDebugParams { return parseSearchPort(this._args, this.isBuilt); }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget log(): string | undefined { return this._args.log; }\n\n\tget wait(): boolean { return !!this._args.wait; }\n\n\tget logExtensionHostCommunication(): boolean { return !!this._args.logExtensionHostCommunication; }\n\n\tget status(): boolean { return !!this._args.status; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nexport function parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\treturn { port, break: brk, debugId };\n}\n\nfunction parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t} else {\n\t\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n\t}\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { getGalleryExtensionId, areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport product from 'vs/platform/product/node/product';\n\nexport function isUIExtension(manifest: IExtensionManifest, uiContributions: string[], configurationService: IConfigurationService): boolean {\n\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\tconst configuredUIExtensions = configurationService.getValue<string[]>('_workbench.uiExtensions') || [];\n\tif (configuredUIExtensions.length) {\n\t\tif (configuredUIExtensions.indexOf(extensionId) !== -1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (configuredUIExtensions.indexOf(`-${extensionId}`) !== -1) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tswitch (manifest.extensionKind) {\n\t\tcase 'ui': return true;\n\t\tcase 'workspace': return false;\n\t\tdefault: {\n\t\t\tif (isNonEmptyArray(product.uiExtensions) && product.uiExtensions.some(id => areSameExtensions({ id }, { id: extensionId }))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (manifest.main) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (manifest.contributes) {\n\t\t\t\tif (!uiContributions.length || Object.keys(manifest.contributes).some(contribution => uiContributions.indexOf(contribution) === -1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Default is UI Extension\n\t\t\treturn true;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService, LanguageType } from 'vs/platform/localizations/common/localizations';\nimport product from 'vs/platform/product/node/product';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nconst systemLanguages: string[] = ['de', 'en', 'en-US', 'es', 'fr', 'it', 'ja', 'ko', 'ru', 'zh-CN', 'zh-TW'];\nif (product.quality !== 'stable') {\n\tsystemLanguages.push('hu');\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(type: LanguageType): Promise<string[]> {\n\t\tif (type === LanguageType.Core) {\n\t\t\treturn Promise.resolve([...systemLanguages]);\n\t\t}\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tconst languages = type === LanguageType.Contributed ? Object.keys(languagePacks) : [...systemLanguages, ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate data: { [id: string]: any; };\n\n\tconstructor() {\n\t\tthis.data = {};\n\t}\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n\n\t\tthis.data[id] = data;\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.hasOwnProperty(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data[id] || null;\n\t}\n}\n\nexport const Registry = <IRegistry>new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport * as strings from 'vs/base/common/strings';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\tAPPLICATION = 1,\n\tWINDOW,\n\tRESOURCE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\toverridable?: boolean;\n\tscope?: ConfigurationScope;\n\tcontributedByExtension?: boolean;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\nexport const allSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: {}, patternProperties: {} } = { properties: {}, patternProperties: {} };\n\nexport const editorConfigurationSchemaId = 'vscode://schemas/settings/editor';\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly editorConfigurationSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers: string[] = [];\n\tprivate overridePropertyPattern: string;\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.editorConfigurationSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting' };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t\tthis.updateSchemaForOverrideSettingsConfiguration(configuration);\n\t\t});\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.editorConfigurationSchema.properties![key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tthis.overrideIdentifiers.push(...overrideIdentifiers);\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW, overridable: boolean = false): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\toverridable = configuration.overridable || overridable;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tlet message;\n\t\t\t\tif (validate && (message = validateProperty(key))) {\n\t\t\t\t\tconsole.warn(message);\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\t// Inherit overridable property from parent\n\t\t\t\tif (overridable) {\n\t\t\t\t\tproperty.overridable = true;\n\t\t\t\t}\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope, overridable));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tfunction register(configuration: IConfigurationNode) {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t}\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchemaForOverrideSettingsConfiguration(configuration: IConfigurationNode): void {\n\t\tif (configuration.id !== SETTINGS_OVERRRIDE_NODE_ID) {\n\t\t\tthis.update(configuration);\n\t\t\tcontributionRegistry.registerSchema(editorConfigurationSchemaId, this.editorConfigurationSchema);\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tlet patternProperties: IJSONSchema = allSettings.patternProperties[this.overridePropertyPattern];\n\t\tif (!patternProperties) {\n\t\t\tpatternProperties = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: 'Unknown Identifier. Use language identifiers',\n\t\t\t\t$ref: editorConfigurationSchemaId\n\t\t\t};\n\t\t}\n\n\t\tdelete allSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete applicationSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete windowSettings.patternProperties[this.overridePropertyPattern];\n\t\tdelete resourceSettings.patternProperties[this.overridePropertyPattern];\n\n\t\tthis.computeOverridePropertyPattern();\n\n\t\tallSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tapplicationSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\twindowSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\t\tresourceSettings.patternProperties[this.overridePropertyPattern] = patternProperties;\n\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate update(configuration: IConfigurationNode): void {\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (properties[key].overridable) {\n\t\t\t\t\tthis.editorConfigurationSchema.properties![key] = this.getConfigurationProperties()[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tsubNodes.forEach(subNode => this.update(subNode));\n\t\t}\n\t}\n\n\tprivate computeOverridePropertyPattern(): void {\n\t\tthis.overridePropertyPattern = this.overrideIdentifiers.length ? OVERRIDE_PATTERN_WITH_SUBSTITUTION.replace('${0}', this.overrideIdentifiers.map(identifier => strings.createRegExp(identifier, false).source).join('|')) : OVERRIDE_PROPERTY;\n\t}\n}\n\nconst SETTINGS_OVERRRIDE_NODE_ID = 'override';\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nconst OVERRIDE_PATTERN_WITH_SUBSTITUTION = '\\\\[(${0})\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): { [key: string]: ConfigurationScope } {\n\tconst scopes = {};\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes[key] = configurationProperties[key].scope;\n\t}\n\tscopes['launch'] = ConfigurationScope.RESOURCE;\n\tscopes['task'] = ConfigurationScope.RESOURCE;\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ResourceMap } from 'vs/base/common/map';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChangeEvent {\n\n\tsource: ConfigurationTarget;\n\taffectedKeys: string[];\n\taffectsConfiguration(configuration: string, resource?: URI): boolean;\n\n\t// Following data is used for telemetry\n\tsourceConfig: any;\n\n\t// Following data is used for Extension host configuration event\n\tchangedConfiguration: IConfigurationModel;\n\tchangedConfigurationByResource: ResourceMap<IConfigurationModel>;\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: any;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): {\n\t\tdefault: T,\n\t\tuser: T,\n\t\tworkspace?: T,\n\t\tworkspaceFolder?: T,\n\t\tmemory?: T,\n\t\tvalue: T,\n\t};\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: { [folder: string]: IConfigurationModel };\n\tisComplete: boolean;\n}\n\nexport function compare(from: IConfigurationModel, to: IConfigurationModel): { added: string[], removed: string[], updated: string[] } {\n\tconst added = to.keys.filter(key => from.keys.indexOf(key) === -1);\n\tconst removed = from.keys.filter(key => to.keys.indexOf(key) === -1);\n\tconst updated: string[] = [];\n\n\tfor (const key of from.keys) {\n\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\tif (!objects.equals(value1, value2)) {\n\t\t\tupdated.push(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\tif (configurationProperties[keyInOverrideRaw] && configurationProperties[keyInOverrideRaw].overridable) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object') {\n\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.user !== 'undefined' || typeof setting.workspace !== 'undefined' || typeof setting.workspaceFolder !== 'undefined') {\n\t\treturn setting.value;\n\t} else if (typeof legacySetting.user !== 'undefined' || typeof legacySetting.workspace !== 'undefined' || typeof legacySetting.workspaceFolder !== 'undefined') {\n\t\treturn legacySetting.value;\n\t} else {\n\t\treturn setting.default;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, IConfigurationChangeEvent, ConfigurationTarget, removeFromValueTree, toOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`))\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined): void {\n\t\tif (content) {\n\t\t\tconst raw = this.parseContent(content);\n\t\t\tconst configurationModel = this.parseRaw(raw);\n\t\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t\t}\n\t}\n\n\tprotected parseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected parseRaw(raw: any): IConfigurationModel {\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n}\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _userConfiguration: ConfigurationModel,\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): {\n\t\tdefault: C,\n\t\tuser: C,\n\t\tworkspace?: C,\n\t\tworkspaceFolder?: C\n\t\tmemory?: C\n\t\tvalue: C,\n\t} {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\t\treturn {\n\t\t\tdefault: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key),\n\t\t\tuser: overrides.overrideIdentifier ? this._userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._userConfiguration.freeze().getValue(key),\n\t\t\tworkspace: workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined, //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\t\tworkspaceFolder: folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined,\n\t\t\tmemory: overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key),\n\t\t\tvalue: consolidateConfigurationModel.getValue(key)\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this._userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateUserConfiguration(userConfiguration: ConfigurationModel): void {\n\t\tthis._userConfiguration = userConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folders.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tget user(): ConfigurationModel {\n\t\treturn this._userConfiguration;\n\t}\n\n\tget workspace(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folders(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this._userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | null {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri) || null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this._userConfiguration.contents,\n\t\t\t\toverrides: this._userConfiguration.overrides,\n\t\t\t\tkeys: this._userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: this._folderConfigurations.keys().reduce((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult[folder.toString()] = { contents, overrides, keys };\n\t\t\t\treturn result;\n\t\t\t}, Object.create({})),\n\t\t\tisComplete: true\n\t\t};\n\t}\n\n\tallKeys(workspace: Workspace | undefined): string[] {\n\t\tlet keys = this.keys(workspace);\n\t\tlet all = [...keys.default];\n\t\tconst addKeys = (keys) => {\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (all.indexOf(key) === -1) {\n\t\t\t\t\tall.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\taddKeys(keys.user);\n\t\taddKeys(keys.workspace);\n\t\tfor (const resource of this.folders.keys()) {\n\t\t\taddKeys(this.folders.get(resource)!.keys);\n\t\t}\n\t\treturn all;\n\t}\n}\n\nexport class AbstractConfigurationChangeEvent {\n\n\tprotected doesConfigurationContains(configuration: ConfigurationModel, config: string): boolean {\n\t\tlet changedKeysTree = configuration.contents;\n\t\tlet requestedTree = toValuesTree({ [config]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\tchangedKeysTree = changedKeysTree[key];\n\t\t\tif (!changedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected updateKeys(configuration: ConfigurationModel, keys: string[], resource?: URI): void {\n\t\tfor (const key of keys) {\n\t\t\tconfiguration.setValue(key, {});\n\t\t}\n\t}\n}\n\nexport class ConfigurationChangeEvent extends AbstractConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate _source: ConfigurationTarget;\n\tprivate _sourceConfig: any;\n\n\tconstructor(\n\t\tprivate _changedConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _changedConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>()) {\n\t\tsuper();\n\t}\n\n\tget changedConfiguration(): IConfigurationModel {\n\t\treturn this._changedConfiguration;\n\t}\n\n\tget changedConfigurationByResource(): ResourceMap<IConfigurationModel> {\n\t\treturn this._changedConfigurationByResource;\n\t}\n\n\tchange(event: ConfigurationChangeEvent): ConfigurationChangeEvent;\n\tchange(keys: string[], resource?: URI): ConfigurationChangeEvent;\n\tchange(arg1: any, arg2?: any): ConfigurationChangeEvent {\n\t\tif (arg1 instanceof ConfigurationChangeEvent) {\n\t\t\tthis._changedConfiguration = this._changedConfiguration.merge(arg1._changedConfiguration);\n\t\t\tfor (const resource of arg1._changedConfigurationByResource.keys()) {\n\t\t\t\tlet changedConfigurationByResource = this.getOrSetChangedConfigurationForResource(resource);\n\t\t\t\tchangedConfigurationByResource = changedConfigurationByResource.merge(arg1._changedConfigurationByResource.get(resource)!);\n\t\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.changeWithKeys(arg1, arg2);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttelemetryData(source: ConfigurationTarget, sourceConfig: any): ConfigurationChangeEvent {\n\t\tthis._source = source;\n\t\tthis._sourceConfig = sourceConfig;\n\t\treturn this;\n\t}\n\n\tget affectedKeys(): string[] {\n\t\tconst keys = [...this._changedConfiguration.keys];\n\t\tthis._changedConfigurationByResource.forEach(model => keys.push(...model.keys));\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tget source(): ConfigurationTarget {\n\t\treturn this._source;\n\t}\n\n\tget sourceConfig(): any {\n\t\treturn this._sourceConfig;\n\t}\n\n\taffectsConfiguration(config: string, resource?: URI): boolean {\n\t\tlet configurationModelsToSearch: ConfigurationModel[] = [this._changedConfiguration];\n\n\t\tif (resource) {\n\t\t\tlet model = this._changedConfigurationByResource.get(resource);\n\t\t\tif (model) {\n\t\t\t\tconfigurationModelsToSearch.push(model);\n\t\t\t}\n\t\t} else {\n\t\t\tconfigurationModelsToSearch.push(...this._changedConfigurationByResource.values());\n\t\t}\n\n\t\tfor (const configuration of configurationModelsToSearch) {\n\t\t\tif (this.doesConfigurationContains(configuration, config)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate changeWithKeys(keys: string[], resource?: URI): void {\n\t\tlet changedConfiguration = resource ? this.getOrSetChangedConfigurationForResource(resource) : this._changedConfiguration;\n\t\tthis.updateKeys(changedConfiguration, keys);\n\t}\n\n\tprivate getOrSetChangedConfigurationForResource(resource: URI): ConfigurationModel {\n\t\tlet changedConfigurationByResource = this._changedConfigurationByResource.get(resource);\n\t\tif (!changedConfigurationByResource) {\n\t\t\tchangedConfigurationByResource = new ConfigurationModel();\n\t\t\tthis._changedConfigurationByResource.set(resource, changedConfigurationByResource);\n\t\t}\n\t\treturn changedConfigurationByResource;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ConfigurationModelParser, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { ConfigWatcher } from 'vs/base/node/config';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport class UserConfiguration extends Disposable {\n\n\tprivate userConfigModelWatcher: ConfigWatcher<ConfigurationModelParser>;\n\tprivate initializePromise: Promise<void>;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tconstructor(private settingsPath: string) {\n\t\tsuper();\n\t}\n\n\tinitialize(): Promise<ConfigurationModel> {\n\t\tif (!this.initializePromise) {\n\t\t\tthis.initializePromise = new Promise<void>((c, e) => {\n\t\t\t\tthis.userConfigModelWatcher = new ConfigWatcher(this.settingsPath, {\n\t\t\t\t\tchangeBufferDelay: 300, onError: error => onUnexpectedError(error), defaultConfig: new ConfigurationModelParser(this.settingsPath), parse: (content: string, parseErrors: any[]) => {\n\t\t\t\t\t\tconst userConfigModelParser = new ConfigurationModelParser(this.settingsPath);\n\t\t\t\t\t\tuserConfigModelParser.parse(content);\n\t\t\t\t\t\tparseErrors = [...userConfigModelParser.errors];\n\t\t\t\t\t\treturn userConfigModelParser;\n\t\t\t\t\t}, initCallback: () => c(undefined)\n\t\t\t\t});\n\t\t\t\tthis._register(this.userConfigModelWatcher);\n\n\t\t\t\t// Listeners\n\t\t\t\tthis._register(this.userConfigModelWatcher.onDidUpdateConfiguration(() => this._onDidChangeConfiguration.fire(this.userConfigModelWatcher.getConfig().configurationModel)));\n\t\t\t});\n\t\t}\n\t\treturn this.initializePromise.then(() => this.userConfigModelWatcher.getConfig().configurationModel);\n\t}\n\n\tinitializeSync(): ConfigurationModel {\n\t\tthis.initialize();\n\t\treturn this.userConfigModelWatcher.getConfig().configurationModel;\n\t}\n\n\treload(): Promise<ConfigurationModel> {\n\t\treturn this.initialize().then(() => new Promise<ConfigurationModel>(c => this.userConfigModelWatcher.reload(userConfigModelParser => c(userConfigModelParser.configurationModel))));\n\t}\n\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, compare, isConfigurationOverrides, IConfigurationData } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationChangeEvent, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { UserConfiguration } from 'vs/platform/configuration/node/configuration';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\t_serviceBrand: any;\n\n\tprivate _configuration: Configuration;\n\tprivate userConfiguration: UserConfiguration;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.userConfiguration = this._register(new UserConfiguration(environmentService.appSettingsPath));\n\n\t\t// Initialize\n\t\tconst defaults = new DefaultConfigurationModel();\n\t\tconst user = this.userConfiguration.initializeSync();\n\t\tthis._configuration = new Configuration(defaults, user);\n\n\t\t// Listeners\n\t\tthis._register(this.userConfiguration.onDidChangeConfiguration(userConfigurationModel => this.onDidChangeUserConfiguration(userConfigurationModel)));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t}\n\n\tget configuration(): Configuration {\n\t\treturn this._configuration;\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): {\n\t\tdefault: T,\n\t\tuser: T,\n\t\tworkspace?: T,\n\t\tworkspaceFolder?: T\n\t\tvalue: T\n\t} {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void> {\n\t\treturn folder ? Promise.resolve(undefined) :\n\t\t\tthis.userConfiguration.reload().then(userConfigurationModel => this.onDidChangeUserConfiguration(userConfigurationModel));\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst { added, updated, removed } = compare(this._configuration.user, userConfigurationModel);\n\t\tconst changedKeys = [...added, ...updated, ...removed];\n\t\tif (changedKeys.length) {\n\t\t\tthis._configuration.updateUserConfiguration(userConfigurationModel);\n\t\t\tthis.trigger(changedKeys, ConfigurationTarget.USER);\n\t\t}\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tthis._configuration.updateDefaultConfiguration(new DefaultConfigurationModel());\n\t\tthis.trigger(keys, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(keys: string[], source: ConfigurationTarget): void {\n\t\tthis._onDidChangeConfiguration.fire(new ConfigurationChangeEvent().change(keys).telemetryData(source, this.getTargetConfiguration(source)));\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this._configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this._configuration.user.contents;\n\t\t}\n\t\treturn {};\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IRequestOptions, IRequestContext } from 'vs/base/node/request';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService2');\n\nexport interface IRequestService {\n\t_serviceBrand: any;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n}\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+)(:\\\\d+)?/?$|^$',\n\t\t\t\tdescription: localize('proxy', \"The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tdescription: localize('proxyAuthorization', \"The value to send as the 'Proxy-Authorization' header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS.\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\t_serviceBrand: any;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\n\tprivate _disposables: IDisposable[] = [];\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\t/* __GDPR__\n\t\t\t\t\"optInStatus\" : {\n\t\t\t\t\t\"optIn\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"BusinessInsight\", \"isMeasurement\": true }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.publicLog('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"machineIdFallback\" : {\n\t\t\t\t\t\t\"usingFallbackGuid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"BusinessInsight\", \"isMeasurement\": true }\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.publicLog('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn;\n\t}\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this._commonProperties.then(values => {\n\t\t\t// well known properties\n\t\t\tlet sessionId = values['sessionID'];\n\t\t\tlet instanceId = values['common.instanceId'];\n\t\t\tlet machineId = values['common.machineId'];\n\n\t\t\treturn { sessionId, instanceId, machineId };\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this._userOptIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { IKeybindingService, KeybindingSource } from 'vs/platform/keybinding/common/keybinding';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tisOptedIn: true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tdispose(): Promise<any> | undefined;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tdispose: () => Promise.all(appenders.map(a => a.dispose()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, dispose: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tdispose(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\n/**\n * Only add settings that cannot contain any personal/private information of users (PII).\n */\nconst configurationValueWhitelist = [\n\t'editor.fontFamily',\n\t'editor.fontWeight',\n\t'editor.fontSize',\n\t'editor.lineHeight',\n\t'editor.letterSpacing',\n\t'editor.lineNumbers',\n\t'editor.rulers',\n\t'editor.wordSeparators',\n\t'editor.tabSize',\n\t'editor.indentSize',\n\t'editor.insertSpaces',\n\t'editor.detectIndentation',\n\t'editor.roundedSelection',\n\t'editor.scrollBeyondLastLine',\n\t'editor.minimap.enabled',\n\t'editor.minimap.side',\n\t'editor.minimap.renderCharacters',\n\t'editor.minimap.maxColumn',\n\t'editor.find.seedSearchStringFromSelection',\n\t'editor.find.autoFindInSelection',\n\t'editor.wordWrap',\n\t'editor.wordWrapColumn',\n\t'editor.wrappingIndent',\n\t'editor.mouseWheelScrollSensitivity',\n\t'editor.multiCursorModifier',\n\t'editor.quickSuggestions',\n\t'editor.quickSuggestionsDelay',\n\t'editor.parameterHints.enabled',\n\t'editor.parameterHints.cycle',\n\t'editor.autoClosingBrackets',\n\t'editor.autoClosingQuotes',\n\t'editor.autoSurround',\n\t'editor.autoIndent',\n\t'editor.formatOnType',\n\t'editor.formatOnPaste',\n\t'editor.suggestOnTriggerCharacters',\n\t'editor.acceptSuggestionOnEnter',\n\t'editor.acceptSuggestionOnCommitCharacter',\n\t'editor.snippetSuggestions',\n\t'editor.emptySelectionClipboard',\n\t'editor.wordBasedSuggestions',\n\t'editor.suggestSelection',\n\t'editor.suggestFontSize',\n\t'editor.suggestLineHeight',\n\t'editor.tabCompletion',\n\t'editor.selectionHighlight',\n\t'editor.occurrencesHighlight',\n\t'editor.overviewRulerLanes',\n\t'editor.overviewRulerBorder',\n\t'editor.cursorBlinking',\n\t'editor.cursorSmoothCaretAnimation',\n\t'editor.cursorStyle',\n\t'editor.mouseWheelZoom',\n\t'editor.fontLigatures',\n\t'editor.hideCursorInOverviewRuler',\n\t'editor.renderWhitespace',\n\t'editor.renderControlCharacters',\n\t'editor.renderIndentGuides',\n\t'editor.renderLineHighlight',\n\t'editor.codeLens',\n\t'editor.folding',\n\t'editor.showFoldingControls',\n\t'editor.matchBrackets',\n\t'editor.glyphMargin',\n\t'editor.useTabStops',\n\t'editor.trimAutoWhitespace',\n\t'editor.stablePeek',\n\t'editor.dragAndDrop',\n\t'editor.formatOnSave',\n\t'editor.colorDecorators',\n\n\t'breadcrumbs.enabled',\n\t'breadcrumbs.filePath',\n\t'breadcrumbs.symbolPath',\n\t'breadcrumbs.symbolSortOrder',\n\t'breadcrumbs.useQuickPick',\n\t'explorer.openEditors.visible',\n\t'extensions.autoUpdate',\n\t'files.associations',\n\t'files.autoGuessEncoding',\n\t'files.autoSave',\n\t'files.autoSaveDelay',\n\t'files.encoding',\n\t'files.eol',\n\t'files.hotExit',\n\t'files.trimTrailingWhitespace',\n\t'git.confirmSync',\n\t'git.enabled',\n\t'http.proxyStrictSSL',\n\t'javascript.validate.enable',\n\t'php.builtInCompletions.enable',\n\t'php.validate.enable',\n\t'php.validate.run',\n\t'terminal.integrated.fontFamily',\n\t'window.openFilesInNewWindow',\n\t'window.restoreWindows',\n\t'window.zoomLevel',\n\t'workbench.editor.enablePreview',\n\t'workbench.editor.enablePreviewFromQuickOpen',\n\t'workbench.editor.showTabs',\n\t'workbench.editor.highlightModifiedTabs',\n\t'workbench.editor.swipeToNavigate',\n\t'workbench.sideBar.location',\n\t'workbench.startupEditor',\n\t'workbench.statusBar.visible',\n\t'workbench.welcome.enabled',\n];\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfiguration\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationKeys\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfigurationValues\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationValues\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfigurationValues', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationValues: flattenValues(event.sourceConfig, configurationValueWhitelist)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function keybindingsTelemetry(telemetryService: ITelemetryService, keybindingService: IKeybindingService): IDisposable {\n\treturn keybindingService.onDidUpdateKeybindings(event => {\n\t\tif (event.source === KeybindingSource.User && event.keybindings) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateKeybindings\" : {\n\t\t\t\t\t\"bindings\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateKeybindings', {\n\t\t\t\tbindings: event.keybindings.map(binding => ({\n\t\t\t\t\tkey: binding.key,\n\t\t\t\t\tcommand: binding.command,\n\t\t\t\t\twhen: binding.when,\n\t\t\t\t\targs: binding.args ? true : undefined\n\t\t\t\t}))\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction flattenKeys(value: Object): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: Object): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n\nfunction flattenValues(value: Object, keys: string[]): { [key: string]: any }[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\n\treturn keys.reduce((array, key) => {\n\t\tconst v = key.split('.')\n\t\t\t.reduce((tmp, k) => tmp && typeof tmp === 'object' ? tmp[k] : undefined, value);\n\t\tif (typeof v !== 'undefined') {\n\t\t\tarray.push({ [key]: v });\n\t\t}\n\t\treturn array;\n\t}, <{ [key: string]: any }[]>[]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { isObject } from 'vs/base/common/types';\nimport { safeStringify, mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://fes.bytedance.net/collect';\n\t}\n\treturn client;\n}\n\ninterface Properties {\n\t[key: string]: string;\n}\n\ninterface Measurements {\n\t[key: string]: number;\n}\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.ITelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tprivate static _getData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\t\tconst properties: Properties = Object.create(null);\n\t\tconst measurements: Measurements = Object.create(null);\n\n\t\tconst flat = Object.create(null);\n\t\tAppInsightsAppender._flaten(data, flat);\n\n\t\tfor (let prop in flat) {\n\t\t\t// enforce property names less than 150 char, take the last 150 char\n\t\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\t\tconst value = flat[prop];\n\n\t\t\tif (typeof value === 'number') {\n\t\t\t\tmeasurements[prop] = value;\n\n\t\t\t} else if (typeof value === 'boolean') {\n\t\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tproperties[prop] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tproperties,\n\t\t\tmeasurements\n\t\t};\n\t}\n\n\tprivate static _flaten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\t\tif (!obj) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\t\tconst value = obj[item];\n\t\t\tconst index = prefix ? prefix + item : item;\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tresult[index] = safeStringify(value);\n\n\t\t\t} else if (value instanceof Date) {\n\t\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\t\tresult[index] = value.toISOString();\n\n\t\t\t} else if (isObject(value)) {\n\t\t\t\tif (order < 2) {\n\t\t\t\t\tAppInsightsAppender._flaten(value, result, order + 1, index + '.');\n\t\t\t\t} else {\n\t\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult[index] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = AppInsightsAppender._getData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tdispose(): Promise<any> | undefined {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport function resolveCommonProperties(commit: string | undefined, version: string | undefined, machineId: string | undefined, installSourcePath: string): Promise<{ [name: string]: string | undefined; }> {\n\tconst result: { [name: string]: string | undefined; } = Object.create(null);\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\treturn readFile(installSourcePath, 'utf8').then(contents => {\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\n\t\treturn result;\n\t}, error => {\n\t\treturn result;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ITelemetryLog {\n\teventName: string;\n\tdata?: any;\n}\n\nexport class TelemetryAppenderChannel implements IServerChannel {\n\n\tconstructor(private appender: ITelemetryAppender) { }\n\n\tlisten<T>(_, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_, command: string, { eventName, data }: ITelemetryLog): Promise<any> {\n\t\tthis.appender.log(eventName, data);\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class TelemetryAppenderClient implements ITelemetryAppender {\n\n\tconstructor(private channel: IChannel) { }\n\n\tlog(eventName: string, data?: any): any {\n\t\tthis.channel.call('log', { eventName, data })\n\t\t\t.then(undefined, err => `Failed to log telemetry: ${console.warn(err)}`);\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tdispose(): any {\n\t\t// TODO\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { IProcessEnvironment, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { ParsedArgs, IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IRecentlyOpened, IRecent } from 'vs/platform/history/common/history';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { ExportData } from 'vs/base/common/performance';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nexport const IWindowsService = createDecorator<IWindowsService>('windowsService');\n\nexport interface INativeOpenDialogOptions {\n\twindowId?: number;\n\tforceNewWindow?: boolean;\n\n\tdialogOptions?: OpenDialogOptions;\n\n\ttelemetryEventName?: string;\n\ttelemetryExtraData?: ITelemetryData;\n}\n\nexport interface IEnterWorkspaceResult {\n\tworkspace: IWorkspaceIdentifier;\n\tbackupPath?: string;\n}\n\nexport interface CrashReporterStartOptions {\n\tcompanyName?: string;\n\tsubmitURL: string;\n\tproductName?: string;\n\tuploadToServer?: boolean;\n\tignoreSystemCrashHandler?: boolean;\n\textra?: any;\n\tcrashesDirectory?: string;\n}\n\nexport interface OpenDialogOptions {\n\ttitle?: string;\n\tdefaultPath?: string;\n\tbuttonLabel?: string;\n\tfilters?: FileFilter[];\n\tproperties?: Array<'openFile' | 'openDirectory' | 'multiSelections' | 'showHiddenFiles' | 'createDirectory' | 'promptToCreate' | 'noResolveAliases' | 'treatPackageAsDirectory'>;\n\tmessage?: string;\n}\n\nexport interface FileFilter {\n\textensions: string[];\n\tname: string;\n}\n\nexport interface MessageBoxOptions {\n\ttype?: string;\n\tbuttons?: string[];\n\tdefaultId?: number;\n\ttitle?: string;\n\tmessage: string;\n\tdetail?: string;\n\tcheckboxLabel?: string;\n\tcheckboxChecked?: boolean;\n\tcancelId?: number;\n\tnoLink?: boolean;\n\tnormalizeAccessKeys?: boolean;\n}\n\nexport interface SaveDialogOptions {\n\ttitle?: string;\n\tdefaultPath?: string;\n\tbuttonLabel?: string;\n\tfilters?: FileFilter[];\n\tmessage?: string;\n\tnameFieldLabel?: string;\n\tshowsTagField?: boolean;\n}\n\nexport interface INewWindowOptions {\n\tremoteAuthority?: string;\n}\n\nexport interface IDevToolsOptions {\n\tmode: 'right' | 'bottom' | 'undocked' | 'detach';\n}\n\nexport interface IWindowsService {\n\n\t_serviceBrand: any;\n\n\tonWindowOpen: Event<number>;\n\tonWindowFocus: Event<number>;\n\tonWindowBlur: Event<number>;\n\tonWindowMaximize: Event<number>;\n\tonWindowUnmaximize: Event<number>;\n\tonRecentlyOpenedChange: Event<void>;\n\n\t// Dialogs\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFileAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tshowMessageBox(windowId: number, options: MessageBoxOptions): Promise<IMessageBoxResult>;\n\tshowSaveDialog(windowId: number, options: SaveDialogOptions): Promise<string>;\n\tshowOpenDialog(windowId: number, options: OpenDialogOptions): Promise<string[]>;\n\n\treloadWindow(windowId: number, args?: ParsedArgs): Promise<void>;\n\topenDevTools(windowId: number, options?: IDevToolsOptions): Promise<void>;\n\ttoggleDevTools(windowId: number): Promise<void>;\n\tcloseWorkspace(windowId: number): Promise<void>;\n\tenterWorkspace(windowId: number, path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\ttoggleFullScreen(windowId: number): Promise<void>;\n\tsetRepresentedFilename(windowId: number, fileName: string): Promise<void>;\n\taddRecentlyOpened(recents: IRecent[]): Promise<void>;\n\tremoveFromRecentlyOpened(paths: URI[]): Promise<void>;\n\tclearRecentlyOpened(): Promise<void>;\n\tgetRecentlyOpened(windowId: number): Promise<IRecentlyOpened>;\n\tfocusWindow(windowId: number): Promise<void>;\n\tcloseWindow(windowId: number): Promise<void>;\n\tisFocused(windowId: number): Promise<boolean>;\n\tisMaximized(windowId: number): Promise<boolean>;\n\tmaximizeWindow(windowId: number): Promise<void>;\n\tunmaximizeWindow(windowId: number): Promise<void>;\n\tminimizeWindow(windowId: number): Promise<void>;\n\tonWindowTitleDoubleClick(windowId: number): Promise<void>;\n\tsetDocumentEdited(windowId: number, flag: boolean): Promise<void>;\n\tquit(): Promise<void>;\n\trelaunch(options: { addArgs?: string[], removeArgs?: string[] }): Promise<void>;\n\n\t// macOS Native Tabs\n\tnewWindowTab(): Promise<void>;\n\tshowPreviousWindowTab(): Promise<void>;\n\tshowNextWindowTab(): Promise<void>;\n\tmoveWindowTabToNewWindow(): Promise<void>;\n\tmergeAllWindowTabs(): Promise<void>;\n\ttoggleWindowTabsBar(): Promise<void>;\n\n\t// macOS TouchBar\n\tupdateTouchBar(windowId: number, items: ISerializableCommandAction[][]): Promise<void>;\n\n\t// Shared process\n\twhenSharedProcessReady(): Promise<void>;\n\ttoggleSharedProcess(): Promise<void>;\n\n\t// Global methods\n\topenWindow(windowId: number, uris: IURIToOpen[], options?: IOpenSettings): Promise<void>;\n\topenNewWindow(options?: INewWindowOptions): Promise<void>;\n\tshowWindow(windowId: number): Promise<void>;\n\tgetWindows(): Promise<{ id: number; workspace?: IWorkspaceIdentifier; folderUri?: ISingleFolderWorkspaceIdentifier; title: string; filename?: string; }[]>;\n\tgetWindowCount(): Promise<number>;\n\tlog(severity: string, ...messages: string[]): Promise<void>;\n\tshowItemInFolder(path: URI): Promise<void>;\n\tgetActiveWindowId(): Promise<number | undefined>;\n\n\t// This needs to be handled from browser process to prevent\n\t// foreground ordering issues on Windows\n\topenExternal(url: string): Promise<boolean>;\n\n\t// TODO: this is a bit backwards\n\tstartCrashReporter(config: CrashReporterStartOptions): Promise<void>;\n\n\topenAboutDialog(): Promise<void>;\n\tresolveProxy(windowId: number, url: string): Promise<string | undefined>;\n}\n\nexport const IWindowService = createDecorator<IWindowService>('windowService');\n\nexport interface IMessageBoxResult {\n\tbutton: number;\n\tcheckboxChecked?: boolean;\n}\n\nexport interface IOpenSettings {\n\tforceNewWindow?: boolean;\n\tforceReuseWindow?: boolean;\n\tforceOpenWorkspaceAsFile?: boolean;\n\tdiffMode?: boolean;\n\taddMode?: boolean;\n\targs?: ParsedArgs;\n}\n\nexport type URIType = 'file' | 'folder';\n\nexport interface IURIToOpen {\n\turi: URI;\n\ttypeHint?: URIType;\n\tlabel?: string;\n}\n\nexport interface IWindowService {\n\n\t_serviceBrand: any;\n\n\treadonly onDidChangeFocus: Event<boolean>;\n\treadonly onDidChangeMaximize: Event<boolean>;\n\n\treadonly hasFocus: boolean;\n\n\tgetConfiguration(): IWindowConfiguration;\n\tgetCurrentWindowId(): number;\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFileAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void>;\n\treloadWindow(args?: ParsedArgs): Promise<void>;\n\topenDevTools(options?: IDevToolsOptions): Promise<void>;\n\ttoggleDevTools(): Promise<void>;\n\tcloseWorkspace(): Promise<void>;\n\tupdateTouchBar(items: ISerializableCommandAction[][]): Promise<void>;\n\tenterWorkspace(path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\ttoggleFullScreen(): Promise<void>;\n\tsetRepresentedFilename(fileName: string): Promise<void>;\n\tgetRecentlyOpened(): Promise<IRecentlyOpened>;\n\tfocusWindow(): Promise<void>;\n\tcloseWindow(): Promise<void>;\n\topenWindow(uris: IURIToOpen[], options?: IOpenSettings): Promise<void>;\n\tisFocused(): Promise<boolean>;\n\tsetDocumentEdited(flag: boolean): Promise<void>;\n\tisMaximized(): Promise<boolean>;\n\tmaximizeWindow(): Promise<void>;\n\tunmaximizeWindow(): Promise<void>;\n\tminimizeWindow(): Promise<void>;\n\tonWindowTitleDoubleClick(): Promise<void>;\n\tshow(): Promise<void>;\n\tshowMessageBox(options: MessageBoxOptions): Promise<IMessageBoxResult>;\n\tshowSaveDialog(options: SaveDialogOptions): Promise<string>;\n\tshowOpenDialog(options: OpenDialogOptions): Promise<string[]>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport type MenuBarVisibility = 'default' | 'visible' | 'toggle' | 'hidden';\n\nexport interface IWindowsConfiguration {\n\twindow: IWindowSettings;\n}\n\nexport interface IWindowSettings {\n\topenFilesInNewWindow: 'on' | 'off' | 'default';\n\topenFoldersInNewWindow: 'on' | 'off' | 'default';\n\topenWithoutArgumentsInNewWindow: 'on' | 'off';\n\trestoreWindows: 'all' | 'folders' | 'one' | 'none';\n\trestoreFullscreen: boolean;\n\tzoomLevel: number;\n\ttitleBarStyle: 'native' | 'custom';\n\tautoDetectHighContrast: boolean;\n\tmenuBarVisibility: MenuBarVisibility;\n\tnewWindowDimensions: 'default' | 'inherit' | 'maximized' | 'fullscreen';\n\tnativeTabs: boolean;\n\tnativeFullScreen: boolean;\n\tenableMenuBarMnemonics: boolean;\n\tcloseWhenEmpty: boolean;\n\tclickThroughInactive: boolean;\n}\n\nexport function getTitleBarStyle(configurationService: IConfigurationService, environment: IEnvironmentService, isExtensionDevelopment = environment.isExtensionDevelopment): 'native' | 'custom' {\n\tconst configuration = configurationService.getValue<IWindowSettings>('window');\n\n\tconst isDev = !environment.isBuilt || isExtensionDevelopment;\n\tif (isMacintosh && isDev) {\n\t\treturn 'native'; // not enabled when developing due to https://github.com/electron/electron/issues/3647\n\t}\n\n\tif (configuration) {\n\t\tconst useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n\t\tif (useNativeTabs) {\n\t\t\treturn 'native'; // native tabs on sierra do not work with custom title style\n\t\t}\n\n\t\tconst useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n\t\tif (useSimpleFullScreen) {\n\t\t\treturn 'native'; // simple fullscreen does not work well with custom title style (https://github.com/Microsoft/vscode/issues/63291)\n\t\t}\n\n\t\tconst style = configuration.titleBarStyle;\n\t\tif (style === 'native' || style === 'custom') {\n\t\t\treturn style;\n\t\t}\n\t}\n\n\treturn isLinux ? 'native' : 'custom'; // default to custom on all macOS and Windows\n}\n\nexport const enum OpenContext {\n\n\t// opening when running from the command line\n\tCLI,\n\n\t// macOS only: opening from the dock (also when opening files to a running instance from desktop)\n\tDOCK,\n\n\t// opening from the main application window\n\tMENU,\n\n\t// opening from a file or folder dialog\n\tDIALOG,\n\n\t// opening from the OS's UI\n\tDESKTOP,\n\n\t// opening through the API\n\tAPI\n}\n\nexport const enum ReadyState {\n\n\t/**\n\t * This window has not loaded any HTML yet\n\t */\n\tNONE,\n\n\t/**\n\t * This window is loading HTML\n\t */\n\tLOADING,\n\n\t/**\n\t * This window is navigating to another HTML\n\t */\n\tNAVIGATING,\n\n\t/**\n\t * This window is done loading HTML\n\t */\n\tREADY\n}\n\nexport interface IPath extends IPathData {\n\n\t// the file path to open within a Code instance\n\tfileUri?: URI;\n}\n\nexport interface IPathsToWaitFor extends IPathsToWaitForData {\n\tpaths: IPath[];\n}\n\nexport interface IPathsToWaitForData {\n\tpaths: IPathData[];\n\twaitMarkerFilePath: string;\n}\n\nexport interface IPathData {\n\n\t// the file path to open within a Code instance\n\tfileUri?: UriComponents;\n\n\t// the line number in the file path to open\n\tlineNumber?: number;\n\n\t// the column number in the file path to open\n\tcolumnNumber?: number;\n}\n\nexport interface IOpenFileRequest {\n\tfilesToOpen?: IPathData[];\n\tfilesToCreate?: IPathData[];\n\tfilesToDiff?: IPathData[];\n\tfilesToWait?: IPathsToWaitForData;\n\ttermProgram?: string;\n}\n\nexport interface IAddFoldersRequest {\n\tfoldersToAdd: UriComponents[];\n}\n\nexport interface IWindowConfiguration extends ParsedArgs {\n\tmachineId: string;\n\twindowId: number;\n\tlogLevel: LogLevel;\n\n\tmainPid: number;\n\n\tappRoot: string;\n\texecPath: string;\n\tisInitialStartup?: boolean;\n\n\tuserEnv: IProcessEnvironment;\n\tnodeCachedDataDir?: string;\n\n\tbackupPath?: string;\n\n\tworkspace?: IWorkspaceIdentifier;\n\tfolderUri?: ISingleFolderWorkspaceIdentifier;\n\n\tremoteAuthority?: string;\n\n\tzoomLevel?: number;\n\tfullscreen?: boolean;\n\tmaximized?: boolean;\n\thighContrast?: boolean;\n\tframeless?: boolean;\n\taccessibilitySupport?: boolean;\n\tpartsSplashPath?: string;\n\n\tperfStartTime?: number;\n\tperfAppReady?: number;\n\tperfWindowLoadTime?: number;\n\tperfEntries: ExportData;\n\n\tfilesToOpen?: IPath[];\n\tfilesToCreate?: IPath[];\n\tfilesToDiff?: IPath[];\n\tfilesToWait?: IPathsToWaitFor;\n\ttermProgram?: string;\n}\n\nexport interface IRunActionInWindowRequest {\n\tid: string;\n\tfrom: 'menu' | 'touchbar' | 'mouse';\n\targs?: any[];\n}\n\nexport interface IRunKeybindingInWindowRequest {\n\tuserSettingsLabel: string;\n}\n\nexport class ActiveWindowManager implements IDisposable {\n\n\tprivate disposables: IDisposable[] = [];\n\tprivate firstActiveWindowIdPromise: Promise<any> | null;\n\tprivate _activeWindowId: number | undefined;\n\n\tconstructor(@IWindowsService windowsService: IWindowsService) {\n\t\tconst onActiveWindowChange = Event.latch(Event.any(windowsService.onWindowOpen, windowsService.onWindowFocus));\n\t\tonActiveWindowChange(this.setActiveWindow, this, this.disposables);\n\n\t\tthis.firstActiveWindowIdPromise = windowsService.getActiveWindowId()\n\t\t\t.then(id => (typeof this._activeWindowId === 'undefined') && this.setActiveWindow(id));\n\t}\n\n\tprivate setActiveWindow(windowId: number | undefined) {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\tthis.firstActiveWindowIdPromise = null;\n\t\t}\n\n\t\tthis._activeWindowId = windowId;\n\t}\n\n\tgetActiveClientId(): Promise<string> {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\treturn this.firstActiveWindowIdPromise;\n\t\t}\n\n\t\treturn Promise.resolve(`window:${this._activeWindowId}`);\n\t}\n\n\tdispose() {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { isWindows, isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { extname } from 'vs/base/common/path';\nimport { dirname, resolvePath, isEqualAuthority, isEqualOrParent, relativePath } from 'vs/base/common/resources';\nimport * as jsonEdit from 'vs/base/common/jsonEdit';\nimport * as json from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { toSlashes } from 'vs/base/common/extpath';\n\nexport const IWorkspacesMainService = createDecorator<IWorkspacesMainService>('workspacesMainService');\nexport const IWorkspacesService = createDecorator<IWorkspacesService>('workspacesService');\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\n/**\n * A single folder workspace identifier is just the path to the folder.\n */\nexport type ISingleFolderWorkspaceIdentifier = URI;\n\nexport interface IWorkspaceIdentifier {\n\tid: string;\n\tconfigPath: URI;\n}\n\nexport function reviveWorkspaceIdentifier(workspace: { id: string, configPath: UriComponents; }): IWorkspaceIdentifier {\n\treturn { id: workspace.id, configPath: URI.revive(workspace.configPath) };\n}\n\nexport function isStoredWorkspaceFolder(thing: any): thing is IStoredWorkspaceFolder {\n\treturn isRawFileWorkspaceFolder(thing) || isRawUriWorkspaceFolder(thing);\n}\n\nexport function isRawFileWorkspaceFolder(thing: any): thing is IRawFileWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.path === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport function isRawUriWorkspaceFolder(thing: any): thing is IRawUriWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.uri === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport interface IRawFileWorkspaceFolder {\n\tpath: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\turi: string;\n\tname?: string;\n}\n\nexport type IStoredWorkspaceFolder = IRawFileWorkspaceFolder | IRawUriWorkspaceFolder;\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier {\n\tfolders: IWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IStoredWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n}\n\nexport interface IWorkspaceSavedEvent {\n\tworkspace: IWorkspaceIdentifier;\n\toldConfigPath: string;\n}\n\nexport interface IWorkspaceFolderCreationData {\n\turi: URI;\n\tname?: string;\n}\n\nexport interface IUntitledWorkspaceInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IWorkspacesMainService extends IWorkspacesService {\n\t_serviceBrand: any;\n\n\tonUntitledWorkspaceDeleted: Event<IWorkspaceIdentifier>;\n\n\tcreateUntitledWorkspaceSync(folders?: IWorkspaceFolderCreationData[]): IWorkspaceIdentifier;\n\n\tresolveLocalWorkspaceSync(path: URI): IResolvedWorkspace | null;\n\n\tisUntitledWorkspace(workspace: IWorkspaceIdentifier): boolean;\n\n\tdeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void;\n\n\tgetUntitledWorkspacesSync(): IUntitledWorkspaceInfo[];\n}\n\nexport interface IWorkspacesService {\n\t_serviceBrand: any;\n\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n}\n\nexport function isSingleFolderWorkspaceIdentifier(obj: any): obj is ISingleFolderWorkspaceIdentifier {\n\treturn obj instanceof URI;\n}\n\nexport function isWorkspaceIdentifier(obj: any): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier;\n\n\treturn workspaceIdentifier && typeof workspaceIdentifier.id === 'string' && workspaceIdentifier.configPath instanceof URI;\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tconfigPath: workspace.configuration,\n\t\t\tid: workspace.id\n\t\t};\n\t}\n\tif (workspace.folders.length === 1) {\n\t\treturn workspace.folders[0].uri;\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport type IMultiFolderWorkspaceInitializationPayload = IWorkspaceIdentifier;\nexport interface ISingleFolderWorkspaceInitializationPayload { id: string; folder: ISingleFolderWorkspaceIdentifier; }\nexport interface IEmptyWorkspaceInitializationPayload { id: string; }\n\nexport type IWorkspaceInitializationPayload = IMultiFolderWorkspaceInitializationPayload | ISingleFolderWorkspaceInitializationPayload | IEmptyWorkspaceInitializationPayload;\n\nexport function isSingleFolderWorkspaceInitializationPayload(obj: any): obj is ISingleFolderWorkspaceInitializationPayload {\n\treturn isSingleFolderWorkspaceIdentifier((obj.folder as ISingleFolderWorkspaceIdentifier));\n}\n\nconst WORKSPACE_SUFFIX = '.' + WORKSPACE_EXTENSION;\n\nexport function hasWorkspaceFileExtension(path: string) {\n\treturn extname(path) === WORKSPACE_SUFFIX;\n}\n\nconst SLASH = '/';\n\n/**\n * Given a folder URI and the workspace config folder, computes the IStoredWorkspaceFolder using\n* a relative or absolute path or a uri.\n * Undefined is returned if the folderURI and the targetConfigFolderURI don't have the same schema or authority\n *\n * @param folderURI a workspace folder\n * @param folderName a workspace name\n * @param targetConfigFolderURI the folder where the workspace is living in\n * @param useSlashForPath if set, use forward slashes for file paths on windows\n */\nexport function getStoredWorkspaceFolder(folderURI: URI, folderName: string | undefined, targetConfigFolderURI: URI, useSlashForPath = !isWindows): IStoredWorkspaceFolder {\n\n\tif (folderURI.scheme !== targetConfigFolderURI.scheme || !isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t}\n\n\tlet folderPath: string | undefined;\n\tif (isEqualOrParent(folderURI, targetConfigFolderURI)) {\n\t\t// use relative path\n\t\tfolderPath = relativePath(targetConfigFolderURI, folderURI) || '.'; // always uses forward slashes\n\t\tif (isWindows && folderURI.scheme === Schemas.file && !useSlashForPath) {\n\t\t\t// Windows gets special treatment:\n\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\tfolderPath = folderPath.replace(/\\//g, '\\\\');\n\t\t}\n\t} else {\n\t\t// use absolute path\n\t\tif (folderURI.scheme === Schemas.file) {\n\t\t\tfolderPath = folderURI.fsPath;\n\t\t\tif (isWindows) {\n\t\t\t\t// Windows gets special treatment:\n\t\t\t\t// - normalize all paths to get nice casing of drive letters\n\t\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\t\tfolderPath = normalizeDriveLetter(folderPath);\n\t\t\t\tif (useSlashForPath) {\n\t\t\t\t\tfolderPath = toSlashes(folderPath);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfolderPath = folderURI.path;\n\t\t}\n\t}\n\treturn { name: folderName, path: folderPath };\n}\n\n/**\n * Rewrites the content of a workspace file to be saved at a new location.\n * Throws an exception if file is not a valid workspace file\n */\nexport function rewriteWorkspaceFileForNewLocation(rawWorkspaceContents: string, configPathURI: URI, targetConfigPathURI: URI) {\n\tlet storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n\n\tconst sourceConfigFolder = dirname(configPathURI);\n\tconst targetConfigFolder = dirname(targetConfigPathURI);\n\n\tconst rewrittenFolders: IStoredWorkspaceFolder[] = [];\n\tconst slashForPath = useSlashForPath(storedWorkspace.folders);\n\n\t// Rewrite absolute paths to relative paths if the target workspace folder\n\t// is a parent of the location of the workspace file itself. Otherwise keep\n\t// using absolute paths.\n\tfor (const folder of storedWorkspace.folders) {\n\t\tlet folderURI = isRawFileWorkspaceFolder(folder) ? resolvePath(sourceConfigFolder, folder.path) : URI.parse(folder.uri);\n\t\trewrittenFolders.push(getStoredWorkspaceFolder(folderURI, folder.name, targetConfigFolder, slashForPath));\n\t}\n\n\t// Preserve as much of the existing workspace as possible by using jsonEdit\n\t// and only changing the folders portion.\n\tlet newRawWorkspaceContents = rawWorkspaceContents;\n\tconst edits = jsonEdit.setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' });\n\tedits.forEach(edit => {\n\t\tnewRawWorkspaceContents = jsonEdit.applyEdit(rawWorkspaceContents, edit);\n\t});\n\treturn newRawWorkspaceContents;\n}\n\nfunction doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t// Parse workspace file\n\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t// Filter out folders which do not have a path or uri set\n\tif (Array.isArray(storedWorkspace.folders)) {\n\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t}\n\n\t// Validate\n\tif (!Array.isArray(storedWorkspace.folders)) {\n\t\tthrow new Error(`${path} looks like an invalid workspace file.`);\n\t}\n\n\treturn storedWorkspace;\n}\n\nexport function useSlashForPath(storedFolders: IStoredWorkspaceFolder[]): boolean {\n\tif (isWindows) {\n\t\tfor (const folder of storedFolders) {\n\t\t\tif (isRawFileWorkspaceFolder(folder) && folder.path.indexOf(SLASH) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { IWindowsService, INativeOpenDialogOptions, IEnterWorkspaceResult, CrashReporterStartOptions, IMessageBoxResult, MessageBoxOptions, SaveDialogOptions, OpenDialogOptions, IDevToolsOptions, INewWindowOptions, IURIToOpen } from 'vs/platform/windows/common/windows';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, reviveWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IRecentlyOpened, IRecent, isRecentWorkspace } from 'vs/platform/history/common/history';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { URI } from 'vs/base/common/uri';\nimport { ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-browser/mainProcessService';\n\nexport class WindowsService implements IWindowsService {\n\n\t_serviceBrand: any;\n\n\tprivate channel: IChannel;\n\n\tconstructor(@IMainProcessService mainProcessService: IMainProcessService) {\n\t\tthis.channel = mainProcessService.getChannel('windows');\n\t}\n\n\tget onWindowOpen(): Event<number> { return this.channel.listen('onWindowOpen'); }\n\tget onWindowFocus(): Event<number> { return this.channel.listen('onWindowFocus'); }\n\tget onWindowBlur(): Event<number> { return this.channel.listen('onWindowBlur'); }\n\tget onWindowMaximize(): Event<number> { return this.channel.listen('onWindowMaximize'); }\n\tget onWindowUnmaximize(): Event<number> { return this.channel.listen('onWindowUnmaximize'); }\n\tget onRecentlyOpenedChange(): Event<void> { return this.channel.listen('onRecentlyOpenedChange'); }\n\n\tpickFileFolderAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\treturn this.channel.call('pickFileFolderAndOpen', options);\n\t}\n\n\tpickFileAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\treturn this.channel.call('pickFileAndOpen', options);\n\t}\n\n\tpickFolderAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\treturn this.channel.call('pickFolderAndOpen', options);\n\t}\n\n\tpickWorkspaceAndOpen(options: INativeOpenDialogOptions): Promise<void> {\n\t\treturn this.channel.call('pickWorkspaceAndOpen', options);\n\t}\n\n\tshowMessageBox(windowId: number, options: MessageBoxOptions): Promise<IMessageBoxResult> {\n\t\treturn this.channel.call('showMessageBox', [windowId, options]);\n\t}\n\n\tshowSaveDialog(windowId: number, options: SaveDialogOptions): Promise<string> {\n\t\treturn this.channel.call('showSaveDialog', [windowId, options]);\n\t}\n\n\tshowOpenDialog(windowId: number, options: OpenDialogOptions): Promise<string[]> {\n\t\treturn this.channel.call('showOpenDialog', [windowId, options]);\n\t}\n\n\treloadWindow(windowId: number, args?: ParsedArgs): Promise<void> {\n\t\treturn this.channel.call('reloadWindow', [windowId, args]);\n\t}\n\n\topenDevTools(windowId: number, options?: IDevToolsOptions): Promise<void> {\n\t\treturn this.channel.call('openDevTools', [windowId, options]);\n\t}\n\n\ttoggleDevTools(windowId: number): Promise<void> {\n\t\treturn this.channel.call('toggleDevTools', windowId);\n\t}\n\n\tcloseWorkspace(windowId: number): Promise<void> {\n\t\treturn this.channel.call('closeWorkspace', windowId);\n\t}\n\n\tenterWorkspace(windowId: number, path: URI): Promise<IEnterWorkspaceResult> {\n\t\treturn this.channel.call('enterWorkspace', [windowId, path]).then((result: IEnterWorkspaceResult) => {\n\t\t\tresult.workspace = reviveWorkspaceIdentifier(result.workspace);\n\t\t\treturn result;\n\t\t});\n\t}\n\n\ttoggleFullScreen(windowId: number): Promise<void> {\n\t\treturn this.channel.call('toggleFullScreen', windowId);\n\t}\n\n\tsetRepresentedFilename(windowId: number, fileName: string): Promise<void> {\n\t\treturn this.channel.call('setRepresentedFilename', [windowId, fileName]);\n\t}\n\n\taddRecentlyOpened(recent: IRecent[]): Promise<void> {\n\t\treturn this.channel.call('addRecentlyOpened', recent);\n\t}\n\n\tremoveFromRecentlyOpened(paths: Array<URI>): Promise<void> {\n\t\treturn this.channel.call('removeFromRecentlyOpened', paths);\n\t}\n\n\tclearRecentlyOpened(): Promise<void> {\n\t\treturn this.channel.call('clearRecentlyOpened');\n\t}\n\n\tgetRecentlyOpened(windowId: number): Promise<IRecentlyOpened> {\n\t\treturn this.channel.call('getRecentlyOpened', windowId)\n\t\t\t.then((recentlyOpened: IRecentlyOpened) => {\n\t\t\t\trecentlyOpened.workspaces.forEach(recent => isRecentWorkspace(recent) ? recent.workspace = reviveWorkspaceIdentifier(recent.workspace) : recent.folderUri = URI.revive(recent.folderUri));\n\t\t\t\trecentlyOpened.files.forEach(recent => recent.fileUri = URI.revive(recent.fileUri));\n\t\t\t\treturn recentlyOpened;\n\t\t\t});\n\t}\n\n\tnewWindowTab(): Promise<void> {\n\t\treturn this.channel.call('newWindowTab');\n\t}\n\n\tshowPreviousWindowTab(): Promise<void> {\n\t\treturn this.channel.call('showPreviousWindowTab');\n\t}\n\n\tshowNextWindowTab(): Promise<void> {\n\t\treturn this.channel.call('showNextWindowTab');\n\t}\n\n\tmoveWindowTabToNewWindow(): Promise<void> {\n\t\treturn this.channel.call('moveWindowTabToNewWindow');\n\t}\n\n\tmergeAllWindowTabs(): Promise<void> {\n\t\treturn this.channel.call('mergeAllWindowTabs');\n\t}\n\n\ttoggleWindowTabsBar(): Promise<void> {\n\t\treturn this.channel.call('toggleWindowTabsBar');\n\t}\n\n\tfocusWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('focusWindow', windowId);\n\t}\n\n\tcloseWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('closeWindow', windowId);\n\t}\n\n\tisFocused(windowId: number): Promise<boolean> {\n\t\treturn this.channel.call('isFocused', windowId);\n\t}\n\n\tisMaximized(windowId: number): Promise<boolean> {\n\t\treturn this.channel.call('isMaximized', windowId);\n\t}\n\n\tmaximizeWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('maximizeWindow', windowId);\n\t}\n\n\tunmaximizeWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('unmaximizeWindow', windowId);\n\t}\n\n\tminimizeWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('minimizeWindow', windowId);\n\t}\n\n\tonWindowTitleDoubleClick(windowId: number): Promise<void> {\n\t\treturn this.channel.call('onWindowTitleDoubleClick', windowId);\n\t}\n\n\tsetDocumentEdited(windowId: number, flag: boolean): Promise<void> {\n\t\treturn this.channel.call('setDocumentEdited', [windowId, flag]);\n\t}\n\n\tquit(): Promise<void> {\n\t\treturn this.channel.call('quit');\n\t}\n\n\trelaunch(options: { addArgs?: string[], removeArgs?: string[] }): Promise<void> {\n\t\treturn this.channel.call('relaunch', [options]);\n\t}\n\n\twhenSharedProcessReady(): Promise<void> {\n\t\tif (process.env.isBrowser) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn this.channel.call('whenSharedProcessReady');\n\t}\n\n\ttoggleSharedProcess(): Promise<void> {\n\t\treturn this.channel.call('toggleSharedProcess');\n\t}\n\n\topenWindow(windowId: number, uris: IURIToOpen[], options?: { forceNewWindow?: boolean, forceReuseWindow?: boolean, forceOpenWorkspaceAsFile?: boolean, args?: ParsedArgs }): Promise<void> {\n\t\treturn this.channel.call('openWindow', [windowId, uris, options]);\n\t}\n\n\topenNewWindow(options?: INewWindowOptions): Promise<void> {\n\t\treturn this.channel.call('openNewWindow', options);\n\t}\n\n\tshowWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('showWindow', windowId);\n\t}\n\n\tgetWindows(): Promise<{ id: number; workspace?: IWorkspaceIdentifier; folderUri?: ISingleFolderWorkspaceIdentifier; title: string; filename?: string; }[]> {\n\t\treturn this.channel.call<{ id: number; workspace?: IWorkspaceIdentifier; folderUri?: ISingleFolderWorkspaceIdentifier; title: string; filename?: string; }[]>('getWindows').then(result => {\n\t\t\tfor (const win of result) {\n\t\t\t\tif (win.folderUri) {\n\t\t\t\t\twin.folderUri = URI.revive(win.folderUri);\n\t\t\t\t}\n\t\t\t\tif (win.workspace) {\n\t\t\t\t\twin.workspace = reviveWorkspaceIdentifier(win.workspace);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tgetWindowCount(): Promise<number> {\n\t\treturn this.channel.call('getWindowCount');\n\t}\n\n\tlog(severity: string, ...messages: string[]): Promise<void> {\n\t\treturn this.channel.call('log', [severity, messages]);\n\t}\n\n\tshowItemInFolder(path: URI): Promise<void> {\n\t\treturn this.channel.call('showItemInFolder', path);\n\t}\n\n\tgetActiveWindowId(): Promise<number | undefined> {\n\t\treturn this.channel.call('getActiveWindowId');\n\t}\n\n\topenExternal(url: string): Promise<boolean> {\n\t\treturn this.channel.call('openExternal', url);\n\t}\n\n\tstartCrashReporter(config: CrashReporterStartOptions): Promise<void> {\n\t\treturn this.channel.call('startCrashReporter', config);\n\t}\n\n\tupdateTouchBar(windowId: number, items: ISerializableCommandAction[][]): Promise<void> {\n\t\treturn this.channel.call('updateTouchBar', [windowId, items]);\n\t}\n\n\topenAboutDialog(): Promise<void> {\n\t\treturn this.channel.call('openAboutDialog');\n\t}\n\n\tresolveProxy(windowId: number, url: string): Promise<string | undefined> {\n\t\treturn Promise.resolve(this.channel.call('resolveProxy', [windowId, url]));\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { nfcall, ninvoke, Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\t\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\tEvent.once(token.onCancellationRequested)(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName, undefined, token)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\tEvent.once(token.onCancellationRequested)(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName, undefined, token).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = ninvoke(zipfile, zipfile.openReadStream, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null!, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn nfcall<ZipFile>(_openZip, zipFile, lazy ? { lazyEntries: true } : undefined)\n\t\t.then(undefined, err => Promise.reject(toExtractError(err)));\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\tninvoke<Readable>(zipfile, zipfile.openReadStream, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', b => buffers.push(b as Buffer));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { flatten } from 'vs/base/common/arrays';\nimport { extract, ExtractError, zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, groupByExtension, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from '../common/extensionNls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Limiter, createCancelablePromise, CancelablePromise, Queue } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver';\nimport { URI } from 'vs/base/common/uri';\nimport pkg from 'vs/platform/product/node/package';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/node/extensionValidator';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, ExtensionIdentifierWithVersion, isLanguagePackExtension } from 'vs/platform/extensions/common/extensions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { isUIExtension } from 'vs/platform/extensions/node/extensionsUtil';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst ERROR_UNKNOWN = 'unknown';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nfunction parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tconst manifest = JSON.parse(raw);\n\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\tdelete manifest.__metadata;\n\t\t\tc({ manifest, metadata });\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\tconst promises = [\n\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t.then(raw => parseManifest(raw)),\n\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t.then(raw => JSON.parse(raw))\n\t];\n\n\treturn Promise.all<any>(promises).then(([{ manifest, metadata }, translations]) => {\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t});\n}\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata: IGalleryMetadata | null;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\t_serviceBrand: any;\n\n\tprivate systemExtensionsPath: string;\n\tprivate extensionsPath: string;\n\tprivate uninstalledPath: string;\n\tprivate uninstalledFileLimiter: Queue<any>;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionLifecycle: ExtensionsLifecycle;\n\n\tprivate readonly _onInstallExtension = new Emitter<InstallExtensionEvent>();\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = new Emitter<DidInstallExtensionEvent>();\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = new Emitter<IExtensionIdentifier>();\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = new Emitter<DidUninstallExtensionEvent>();\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\tprivate readonly remote: boolean,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionLifecycle = this._register(new ExtensionsLifecycle(environmentService, this.logService));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\treturn this.collectFiles(extension)\n\t\t\t.then(files => zip(path.join(tmpdir(), generateUuid()), files))\n\t\t\t.then(path => URI.file(path));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\treturn this.install(zipLocation, type);\n\t}\n\n\tprivate collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn collectFilesFromDirectory(extension.location.fsPath)\n\t\t\t.then(files => files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f })));\n\n\t}\n\n\tinstall(vsix: URI, type: ExtensionType = ExtensionType.User): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(token => {\n\t\t\treturn this.downloadVsix(vsix).then(downloadLocation => {\n\t\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t.then(manifest => {\n\t\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\t\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, pkg.version)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t\t\t\t\t.then(installedExtensions => {\n\t\t\t\t\t\t\t\tconst existing = installedExtensions.filter(i => areSameExtensions(identifier, i.identifier))[0];\n\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\t\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\t\t\t\t\t\treturn this.uninstall(existing, true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\t\t\t\t\t\t\t\treturn this.getMetadata(getGalleryExtensionId(manifest.publisher, manifest.name))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tmetadata => this.installFromZipPath(identifierWithVersion, zipPath, metadata, type, operation, token),\n\t\t\t\t\t\t\t\t\t\t() => this.installFromZipPath(identifierWithVersion, zipPath, null, type, operation, token))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\t() => { this.logService.info('Successfully installed the extension:', identifier.id); return identifier; },\n\t\t\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn Promise.resolve(vsix);\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\t\tconst downloadedLocation = path.join(tmpdir(), generateUuid());\n\t\treturn this.downloadService.download(vsix, downloadedLocation).then(() => URI.file(downloadedLocation));\n\t}\n\n\tprivate installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IGalleryMetadata | null, type: ExtensionType, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.toNonCancellablePromise(this.installExtension({ zipPath, identifierWithVersion, metadata }, type, token)\n\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, null).then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t.then(\n\t\t\t\tlocal => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation }); return local; },\n\t\t\t\terror => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error }); return Promise.reject(error); }\n\t\t\t));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension): Promise<void> {\n\t\tconst startTime = new Date().getTime();\n\n\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\tconst onDidInstallExtensionSuccess = (extension: IGalleryExtension, operation: InstallOperation, local: ILocalExtension) => {\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t};\n\n\t\tconst onDidInstallExtensionFailure = (extension: IGalleryExtension, operation: InstallOperation, error) => {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tonDidInstallExtensionFailure(extension, InstallOperation.Install, error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tlet cancellationToken: CancellationToken, successCallback: (a?: any) => void, errorCallback: (e?: any) => any | null;\n\t\t\tcancellablePromise = createCancelablePromise(token => { cancellationToken = token; return new Promise((c, e) => { successCallback = c; errorCallback = e; }); });\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\ttry {\n\t\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\t\tconst existingExtension = installed.filter(i => areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (existingExtension) {\n\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\tif (semver.gt(existingExtension.manifest.version, extension.version)) {\n\t\t\t\t\t\tawait this.uninstall(existingExtension, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.downloadInstallableExtension(extension, operation)\n\t\t\t\t\t.then(installableExtension => this.installExtension(installableExtension, ExtensionType.User, cancellationToken)\n\t\t\t\t\t\t.then(local => pfs.rimraf(installableExtension.zipPath).finally(() => null).then(() => local)))\n\t\t\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, existingExtension)\n\t\t\t\t\t\t.then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t\t\t.then(\n\t\t\t\t\t\tlocal => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionSuccess(extension, operation, local);\n\t\t\t\t\t\t\tsuccessCallback(null);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS));\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\n\t\tif (!compatibleExtension) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install because, the extension '{0}' compatible with current version '{1}' of VS Code is not found.\", extension.identifier.id, pkg.version), INSTALL_ERROR_INCOMPATIBLE));\n\t\t}\n\n\t\tif (this.remote) {\n\t\t\tconst manifest = await this.galleryService.getManifest(extension, CancellationToken.None);\n\t\t\tif (manifest && isUIExtension(manifest, [], this.configurationService) && !isLanguagePackExtension(manifest)) {\n\t\t\t\treturn Promise.reject(new Error(nls.localize('notSupportedUIExtension', \"Can't install extension {0} since UI Extensions are not supported\", extension.identifier.id)));\n\t\t\t}\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\treturn this.findGalleryExtension(extension)\n\t\t\t.then(galleryExtension => {\n\t\t\t\tif (galleryExtension) {\n\t\t\t\t\treturn this.setUninstalled(extension)\n\t\t\t\t\t\t.then(() => this.removeUninstalledExtension(extension)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => this.installFromGallery(galleryExtension),\n\t\t\t\t\t\t\t\te => Promise.reject(new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e))))));\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\")));\n\t\t\t});\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.getExtensionsReport()\n\t\t\t.then(report => getMaliciousExtensionsSet(report).has(extension.identifier.id));\n\t}\n\n\tprivate downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<InstallableExtension> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\treturn this.galleryService.download(extension, operation)\n\t\t\t.then(\n\t\t\t\tzipPath => {\n\t\t\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tmanifest => (<InstallableExtension>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata }),\n\t\t\t\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING))\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING)));\n\t}\n\n\tprivate installExtension(installableExtension: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion)\n\t\t\t.then(\n\t\t\t\tlocal => {\n\t\t\t\t\tif (local) {\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.extractAndInstall(installableExtension, type, token);\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t});\n\t}\n\n\tprivate unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\treturn this.isUninstalled(identifierWithVersion)\n\t\t\t.then<ILocalExtension | null>(isUninstalled => {\n\t\t\t\tif (isUninstalled) {\n\t\t\t\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\t\t\t\treturn this.unsetUninstalled(identifierWithVersion)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(installed => installed.filter(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion))[0]);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst location = type === ExtensionType.User ? this.extensionsPath : this.systemExtensionsPath;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(location, `.${folderName}`);\n\t\tconst extensionPath = path.join(location, folderName);\n\t\treturn pfs.rimraf(extensionPath)\n\t\t\t.then(() => this.extractAndRename(identifier, zipPath, tempPath, extensionPath, token), e => Promise.reject(new ExtensionManagementError(nls.localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING)))\n\t\t\t.then(() => this.scanExtension(folderName, location, type))\n\t\t\t.then(local => {\n\t\t\t\tif (!local) {\n\t\t\t\t\treturn Promise.reject(nls.localize('cannot read', \"Cannot read the extension from {0}\", location));\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\t\t\tif (metadata) {\n\t\t\t\t\tlocal.metadata = metadata;\n\t\t\t\t\treturn this.saveMetadataForLocalExtension(local);\n\t\t\t\t}\n\t\t\t\treturn local;\n\t\t\t}, error => pfs.rimraf(extensionPath).then(() => Promise.reject(error), () => Promise.reject(error)));\n\t}\n\n\tprivate extractAndRename(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, renamePath: string, token: CancellationToken): Promise<void> {\n\t\treturn this.extract(identifier, zipPath, extractPath, token)\n\t\t\t.then(() => this.rename(identifier, extractPath, renamePath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */)\n\t\t\t\t.then(\n\t\t\t\t\t() => this.logService.info('Renamed to', renamePath),\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', extractPath);\n\t\t\t\t\t\treturn pfs.rimraf(extractPath).finally(() => null).then(() => Promise.reject(e));\n\t\t\t\t\t}));\n\t}\n\n\tprivate extract(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${extractPath}`);\n\t\treturn pfs.rimraf(extractPath)\n\t\t\t.then(\n\t\t\t\t() => extract(zipPath, extractPath, { sourcePath: 'extension', overwrite: true }, token)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => this.logService.info(`Extracted extension to ${extractPath}:`, identifier.id),\n\t\t\t\t\t\te => pfs.rimraf(extractPath).finally(() => null)\n\t\t\t\t\t\t\t.then(() => Promise.reject(new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING)))),\n\t\t\t\te => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING)));\n\t}\n\n\tprivate rename(identfier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\treturn pfs.rename(extractPath, renamePath)\n\t\t\t.then(undefined, error => {\n\t\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identfier.id);\n\t\t\t\t\treturn this.rename(identfier, extractPath, renamePath, retryUntil);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new ExtensionManagementError(error.message || nls.localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING));\n\t\t\t});\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | null): Promise<void> {\n\t\tif (this.galleryService.isEnabled()) {\n\t\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\t\tif (installed.manifest.extensionPack) {\n\t\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\treturn this.getInstalled()\n\t\t\t\t\t.then(installed => {\n\t\t\t\t\t\t// filter out installed extensions\n\t\t\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\t\t\tif (names.length) {\n\t\t\t\t\t\t\treturn this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length })\n\t\t\t\t\t\t\t\t.then(galleryResult => {\n\t\t\t\t\t\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\t\t\t\t\t\treturn Promise.all(extensionsToInstall.map(async e => {\n\t\t\t\t\t\t\t\t\t\tif (this.remote) {\n\t\t\t\t\t\t\t\t\t\t\tconst manifest = await this.galleryService.getManifest(e, CancellationToken.None);\n\t\t\t\t\t\t\t\t\t\t\tif (manifest && isUIExtension(manifest, [], this.configurationService) && !isLanguagePackExtension(manifest)) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.logService.info('Ignored installing the UI dependency', e.identifier.id);\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn this.installFromGallery(e);\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t.then(() => null, errors => this.rollback(extensionsToInstall).then(() => Promise.reject(errors), () => Promise.reject(errors)));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed =>\n\t\t\t\tPromise.all(installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))) // Check with version because we want to rollback the exact version\n\t\t\t\t\t.map(local => this.uninstall(local, true))))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.toNonCancellablePromise(this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => {\n\t\t\t\tconst extensionToUninstall = installed.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\t\tif (extensionToUninstall) {\n\t\t\t\t\treturn this.checkForDependenciesAndUninstall(extensionToUninstall, installed).then(() => null, error => Promise.reject(this.joinErrors(error)));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name)));\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal.metadata = metadata;\n\t\treturn this.saveMetadataForLocalExtension(local)\n\t\t\t.then(localExtension => {\n\t\t\t\tthis.manifestCache.invalidate();\n\t\t\t\treturn localExtension;\n\t\t\t});\n\t}\n\n\tprivate saveMetadataForLocalExtension(local: ILocalExtension): Promise<ILocalExtension> {\n\t\tif (!local.metadata) {\n\t\t\treturn Promise.resolve(local);\n\t\t}\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\treturn pfs.readFile(manifestPath, 'utf8')\n\t\t\t.then(raw => parseManifest(raw))\n\t\t\t.then(({ manifest }) => assign(manifest, { __metadata: local.metadata }))\n\t\t\t.then(manifest => pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t')))\n\t\t\t.then(() => local);\n\t}\n\n\tprivate getMetadata(extensionName: string): Promise<IGalleryMetadata | null> {\n\t\treturn this.findGalleryExtensionByName(extensionName)\n\t\t\t.then(galleryExtension => galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : null);\n\t}\n\n\tprivate findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\treturn this.findGalleryExtensionById(local.identifier.uuid)\n\t\t\t\t.then(galleryExtension => galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id));\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ ids: [uuid], pageSize: 1 }).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ names: [name], pageSize: 1 }).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tif (packedExtensions.length) {\n\t\t\t\t\treturn this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t\t}\n\t\t\t\treturn this.uninstallExtensions(extension, [], installed);\n\t\t\t})\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extension !== dependent && otherExtensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, remainingDependents)));\n\t\t\t}\n\t\t}\n\t\treturn Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]).then(() => undefined);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate doUninstall(extension: ILocalExtension): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => this.uninstallExtension(extension))\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(pfs.exists(extension.location.fsPath))\n\t\t\t.then(exists => exists ? null : Promise.reject(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => {\n\t\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\t});\n\t}\n\n\tprivate uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(token => this.scanUserExtensions(false)\n\t\t\t\t.then(userExtensions => this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier))))\n\t\t\t\t.then(() => { this.uninstallingExtensions.delete(local.identifier.id); }));\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\treturn Promise.all<ILocalExtension[]>(promises).then(flatten, errors => Promise.reject(this.joinErrors(errors)));\n\t}\n\n\tprivate scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanExtensions(this.systemExtensionsPath, ExtensionType.System)\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.info('Scanned system extensions:', result.length);\n\t\t\t\treturn result;\n\t\t\t});\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.getDevSystemExtensionsList()\n\t\t\t.then(devSystemExtensionsList => {\n\t\t\t\tif (devSystemExtensionsList.length) {\n\t\t\t\t\treturn this.scanExtensions(this.devSystemExtensionsPath, ExtensionType.System)\n\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\tthis.logService.info('Scanned dev system extensions:', result.length);\n\t\t\t\t\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t});\n\t\treturn Promise.all([systemExtensionsPromise, devSystemExtensionsPromise])\n\t\t\t.then(([systemExtensions, devSystemExtensions]) => [...systemExtensions, ...devSystemExtensions]);\n\t}\n\n\tprivate scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\treturn Promise.all([this.getUninstalledExtensions(), this.scanExtensions(this.extensionsPath, ExtensionType.User)])\n\t\t\t.then(([uninstalled, extensions]) => {\n\t\t\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\tif (excludeOutdated) {\n\t\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Scanned user extensions:', extensions.length);\n\t\t\t\treturn extensions;\n\t\t\t});\n\t}\n\n\tprivate scanExtensions(root: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\treturn pfs.readdir(root)\n\t\t\t.then(extensionsFolders => Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, root, type)))))\n\t\t\t.then(extensions => extensions.filter(e => e && e.identifier));\n\t}\n\n\tprivate scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\treturn pfs.readdir(extensionPath)\n\t\t\t.then(children => readManifest(extensionPath)\n\t\t\t\t.then(({ manifest, metadata }) => {\n\t\t\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : null;\n\t\t\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : null;\n\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name), uuid: metadata ? metadata.id : null };\n\t\t\t\t\treturn <ILocalExtension>{ type, identifier, manifest, metadata, location: URI.file(extensionPath), readmeUrl, changelogUrl };\n\t\t\t\t}))\n\t\t\t.then(undefined, () => null);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<any> {\n\t\treturn this.removeUninstalledExtensions()\n\t\t\t.then(() => this.removeOutdatedExtensions());\n\t}\n\n\tprivate removeUninstalledExtensions(): Promise<void> {\n\t\treturn this.getUninstalledExtensions()\n\t\t\t.then(uninstalled => this.scanExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t\t.then(extensions => {\n\t\t\t\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\t\treturn Promise.all(toRemove.map(e => this.extensionLifecycle.postUninstall(e).then(() => this.removeUninstalledExtension(e))));\n\t\t\t\t})\n\t\t\t).then(() => undefined);\n\t}\n\n\tprivate removeOutdatedExtensions(): Promise<void> {\n\t\treturn this.scanExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t.then(extensions => {\n\t\t\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t\t\t// Outdated extensions\n\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\t\t\treturn Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t\t\t}).then(() => undefined);\n\t}\n\n\tprivate removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn this.removeExtension(extension, 'uninstalled')\n\t\t\t.then(() => this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]))\n\t\t\t.then(() => undefined);\n\t}\n\n\tprivate removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\treturn pfs.rimraf(extension.location.fsPath).then(() => this.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath));\n\t}\n\n\tprivate isUninstalled(identfier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\treturn this.filterUninstalled(identfier).then(uninstalled => uninstalled.length === 1);\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.withUninstalledExtensions(uninstalled => assign(uninstalled, ids.reduce((result, id) => { result[id.key()] = true; return result; }, {} as { [id: string]: boolean })));\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tprivate getUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tprivate async withUninstalledExtensions<T>(fn: (uninstalled: { [id: string]: boolean; }) => T): Promise<T> {\n\t\treturn await this.uninstalledFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.uninstalledPath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(uninstalled => { result = fn(uninstalled); return uninstalled; })\n\t\t\t\t.then(uninstalled => {\n\t\t\t\t\tif (Object.keys(uninstalled).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.uninstalledPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(uninstalled);\n\t\t\t\t\t\treturn pfs.writeFile(this.uninstalledPath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate updateReportCache(): Promise<IReportedExtension[]> {\n\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\n\t\treturn this.galleryService.getExtensionsReport()\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\t\treturn result;\n\t\t\t}, err => {\n\t\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate _devSystemExtensionsFilePath: string | null = null;\n\tprivate get devSystemExtensionsFilePath(): string {\n\t\tif (!this._devSystemExtensionsFilePath) {\n\t\t\tthis._devSystemExtensionsFilePath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'build', 'builtInExtensions.json'));\n\t\t}\n\t\treturn this._devSystemExtensionsFilePath;\n\t}\n\n\tprivate getDevSystemExtensionsList(): Promise<string[]> {\n\t\treturn pfs.readFile(this.devSystemExtensionsFilePath, 'utf8')\n\t\t\t.then<string[]>(raw => {\n\t\t\t\tconst parsed: { name: string }[] = JSON.parse(raw);\n\t\t\t\treturn parsed.map(({ name }) => name);\n\t\t\t});\n\t}\n\n\tprivate toNonCancellablePromise<T>(promise: Promise<T>): Promise<T> {\n\t\treturn new Promise((c, e) => promise.then(result => c(result), error => e(error)));\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog(eventName, assign(extensionData, { success: !error, duration, errorcode }));\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport * as https from 'https';\nimport * as http from 'http';\nimport { Stream } from 'stream';\nimport { parse as parseUrl } from 'url';\nimport { createWriteStream } from 'fs';\nimport { assign } from 'vs/base/common/objects';\nimport { createGunzip } from 'zlib';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\n\nexport type Agent = any;\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface IRequestOptions {\n\ttype?: string;\n\turl?: string;\n\tuser?: string;\n\tpassword?: string;\n\theaders?: any;\n\ttimeout?: number;\n\tdata?: string | Stream;\n\tagent?: Agent;\n\tfollowRedirects?: number;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\nexport interface IRequestContext {\n\t// req: http.ClientRequest;\n\t// res: http.ClientResponse;\n\tres: {\n\t\theaders: { [n: string]: string };\n\t\tstatusCode?: number;\n\t};\n\tstream: Stream;\n}\n\nexport interface IRequestFunction {\n\t(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n}\n\nasync function getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\tconst endpoint = parseUrl(options.url!);\n\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\treturn module.request;\n}\n\nexport function request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\tlet req: http.ClientRequest;\n\n\tconst rawRequestPromise = options.getRawRequest\n\t\t? Promise.resolve(options.getRawRequest(options))\n\t\t: Promise.resolve(getNodeRequest(options));\n\n\treturn rawRequestPromise.then(rawRequest => {\n\n\t\treturn new Promise<IRequestContext>((c, e) => {\n\t\t\tconst endpoint = parseUrl(options.url!);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\trequest(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: Stream = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = stream.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t} else {\n\t\t\t\t\toptions.data.pipe(req);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport function download(filePath: string, context: IRequestContext): Promise<void> {\n\treturn new Promise<void>((c, e) => {\n\t\tconst out = createWriteStream(filePath);\n\n\t\tout.once('finish', () => c(undefined));\n\t\tcontext.stream.once('error', e);\n\t\tcontext.stream.pipe(out);\n\t});\n}\n\nexport function asText(context: IRequestContext): Promise<string | null> {\n\treturn new Promise((c, e) => {\n\t\tif (!isSuccess(context)) {\n\t\t\treturn e('Server returned ' + context.res.statusCode);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\treturn c(null);\n\t\t}\n\n\t\tconst buffer: string[] = [];\n\t\tcontext.stream.on('data', (d: string) => buffer.push(d));\n\t\tcontext.stream.on('end', () => c(buffer.join('')));\n\t\tcontext.stream.on('error', e);\n\t});\n}\n\nexport function asJson<T>(context: IRequestContext): Promise<T | null> {\n\treturn new Promise((c, e) => {\n\t\tif (!isSuccess(context)) {\n\t\t\treturn e('Server returned ' + context.res.statusCode);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\treturn c(null);\n\t\t}\n\n\t\tconst buffer: string[] = [];\n\t\tcontext.stream.on('data', (d: string) => buffer.push(d));\n\t\tcontext.stream.on('end', () => {\n\t\t\ttry {\n\t\t\t\tc(JSON.parse(buffer.join('')));\n\t\t\t} catch (err) {\n\t\t\t\te(err);\n\t\t\t}\n\t\t});\n\t\tcontext.stream.on('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\nimport { copy } from 'vs/base/node/pfs';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { asText, download } from 'vs/base/node/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\n\nexport class DownloadService implements IDownloadService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService\n\t) { }\n\n\tdownload(uri: URI, target: string = join(tmpdir(), generateUuid()), cancellationToken: CancellationToken = CancellationToken.None): Promise<string> {\n\t\tif (uri.scheme === Schemas.file) {\n\t\t\treturn copy(uri.fsPath, target).then(() => target);\n\t\t}\n\t\tconst options = { type: 'GET', url: uri.toString() };\n\t\treturn this.requestService.request(options, cancellationToken)\n\t\t\t.then(context => {\n\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\treturn download(target, context).then(() => target);\n\t\t\t\t}\n\t\t\t\treturn asText(context)\n\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { tmpdir } from 'os';\nimport * as path from 'vs/base/common/path';\nimport { distinct } from 'vs/base/common/arrays';\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestOptions, IRequestContext, download, asJson, asText } from 'vs/base/node/request';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { isEngineValid } from 'vs/platform/extensions/node/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { readFile } from 'vs/base/node/pfs';\nimport { writeFileAndFlushSync } from 'vs/base/node/extfs';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { values } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.map(value => ({ filterType, value }))\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): { [languageId: string]: IGalleryExtensionAsset } {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce((result, file) => {\n\t\tresult[file.assetType.substring(coreTranslationAssetPrefix.length)] = getVersionAsset(version, file.assetType);\n\t\treturn result;\n\t}, {});\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = require.toUrl('./media/defaultIcon.png');\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install') + getStatistic(galleryExtension.statistics, 'updateCount'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\t_serviceBrand: any;\n\n\tprivate extensionsGalleryUrl: string;\n\tprivate extensionsControlUrl: string;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tconst config = product.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(this.environmentService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(options: IQueryOptions = {}): Promise<IPager<IGalleryExtension>> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\t/* __GDPR__\n\t\t\t\"galleryService:query\" : {\n\t\t\t\t\"type\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"text\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, operation: InstallOperation): Promise<string> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst zipPath = path.join(tmpdir(), generateUuid());\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => download(zipPath, context))\n\t\t\t.then(() => log(new Date().getTime() - startTime))\n\t\t\t.then(() => zipPath);\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(JSON.parse);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations[languageId.toUpperCase()];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(JSON.parse);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tloadAllDependencies(extensions: IExtensionIdentifier[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\treturn this.getDependenciesReccursively(extensions.map(e => e.id), [], token);\n\t}\n\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions }) => {\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tif (compatible) {\n\t\t\t\t\treturn Promise.all(galleryExtensions[0].versions.map(v => this.getEngine(v).then(engine => isEngineValid(engine) ? v : null)))\n\t\t\t\t\t\t.then(versions => versions\n\t\t\t\t\t\t\t.filter(v => !!v)\n\t\t\t\t\t\t\t.map(v => ({ version: v!.version, date: v!.lastUpdated })));\n\t\t\t\t} else {\n\t\t\t\t\treturn galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated }));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\n\tprivate loadDependencies(extensionNames: string[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tif (!extensionNames || extensionNames.length === 0) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, extensionNames.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished))\n\t\t\t.withAssetTypes(AssetType.Icon, AssetType.License, AssetType.Details, AssetType.Manifest, AssetType.VSIX)\n\t\t\t.withFilter(FilterType.ExtensionName, ...extensionNames);\n\n\t\treturn this.queryGallery(query, token).then(result => {\n\t\t\tconst dependencies: IGalleryExtension[] = [];\n\t\t\tconst ids: string[] = [];\n\n\t\t\tfor (let index = 0; index < result.galleryExtensions.length; index++) {\n\t\t\t\tconst rawExtension = result.galleryExtensions[index];\n\t\t\t\tif (ids.indexOf(rawExtension.extensionId) === -1) {\n\t\t\t\t\tdependencies.push(toExtension(rawExtension, rawExtension.versions[0], index, query, 'dependencies'));\n\t\t\t\t\tids.push(rawExtension.extensionId);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dependencies;\n\t\t});\n\t}\n\n\tprivate getDependenciesReccursively(toGet: string[], result: IGalleryExtension[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tif (!toGet || !toGet.length) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\t\ttoGet = result.length ? toGet.filter(e => !ExtensionGalleryService.hasExtensionByName(result, e)) : toGet;\n\t\tif (!toGet.length) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\n\t\treturn this.loadDependencies(toGet, token)\n\t\t\t.then(loadedDependencies => {\n\t\t\t\tconst dependenciesSet = new Set<string>();\n\t\t\t\tfor (const dep of loadedDependencies) {\n\t\t\t\t\tif (dep.properties.dependencies) {\n\t\t\t\t\t\tdep.properties.dependencies.forEach(d => dependenciesSet.add(d));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult = distinct(result.concat(loadedDependencies), d => d.identifier.uuid);\n\t\t\t\tconst dependencies: string[] = [];\n\t\t\t\tdependenciesSet.forEach(d => !ExtensionGalleryService.hasExtensionByName(result, d) && dependencies.push(d));\n\t\t\t\treturn this.getDependenciesReccursively(dependencies, result, token);\n\t\t\t});\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"galleryService:requestError\" : {\n\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\t\t\t\"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('galleryService:requestError', { url, cdn: true, message });\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"galleryService:cdnFallback\" : {\n\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\"message\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token).then(undefined, err => {\n\t\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\"galleryService:requestError\" : {\n\t\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tthis.telemetryService.publicLog('galleryService:requestError', { url: fallbackUrl, cdn: false, message });\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionReccursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionReccursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionReccursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tprivate static hasExtensionByName(extensions: IGalleryExtension[], name: string): boolean {\n\t\tfor (const extension of extensions) {\n\t\t\tif (`${extension.publisher}.${extension.name}` === name) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(values(map));\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport function resolveMarketplaceHeaders(environmentService: IEnvironmentService): Promise<{ [key: string]: string; }> {\n\tconst marketplaceMachineIdFile = path.join(environmentService.userDataPath, 'machineid');\n\n\treturn readFile(marketplaceMachineIdFile, 'utf8')\n\t\t.then<string | null>(contents => isUUID(contents) ? contents : null, () => null /* error reading ID file */)\n\t\t.then(uuid => {\n\t\t\tif (!uuid) {\n\t\t\t\tuuid = generateUuid();\n\t\t\t\ttry {\n\t\t\t\t\twriteFileAndFlushSync(marketplaceMachineIdFile, uuid);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t//noop\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'X-Market-Client-Id': `VSCode ${pkg.version}`,\n\t\t\t\t'User-Agent': `VSCode ${pkg.version}`,\n\t\t\t\t'X-Market-User-Id': uuid\n\t\t\t};\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { IRequestOptions, IRequestContext, IRequestFunction, request } from 'vs/base/node/request';\nimport { getProxyAgent } from 'vs/base/node/proxy';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/node/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService implements IRequestService {\n\n\t_serviceBrand: any;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean;\n\tprivate authorization?: string;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tconfigurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this, this.disposables);\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\trequest(options: IRequestOptions, token: CancellationToken, requestFn: IRequestFunction = request): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agentPromise = options.agent ? Promise.resolve(options.agent) : Promise.resolve(getProxyAgent(options.url || '', { proxyUrl, strictSSL }));\n\n\t\treturn agentPromise.then(agent => {\n\t\t\toptions.agent = agent;\n\t\t\toptions.strictSSL = strictSSL;\n\n\t\t\tif (this.authorization) {\n\t\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t\t}\n\n\t\t\treturn requestFn(options, token);\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRequestOptions, IRequestContext, IRequestFunction } from 'vs/base/node/request';\nimport { Readable } from 'stream';\nimport { RequestService as NodeRequestService } from 'vs/platform/request/node/requestService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends NodeRequestService {\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn super.request(options, token, xhrRequest);\n\t}\n}\n\nexport const xhrRequest: IRequestFunction = (options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> => {\n\n\tconst xhr = new XMLHttpRequest();\n\treturn new Promise<IRequestContext>((resolve, reject) => {\n\n\t\txhr.open(options.type || 'GET', options.url || '', true, options.user, options.password);\n\t\tsetRequestHeaders(xhr, options);\n\n\t\txhr.responseType = 'arraybuffer';\n\t\txhr.onerror = e => reject(new Error(xhr.statusText && ('XHR failed: ' + xhr.statusText)));\n\t\txhr.onload = (e) => {\n\t\t\tresolve({\n\t\t\t\tres: {\n\t\t\t\t\tstatusCode: xhr.status,\n\t\t\t\t\theaders: getResponseHeaders(xhr)\n\t\t\t\t},\n\t\t\t\tstream: new class ArrayBufferStream extends Readable {\n\n\t\t\t\t\tprivate _buffer: Buffer;\n\t\t\t\t\tprivate _offset: number;\n\t\t\t\t\tprivate _length: number;\n\n\t\t\t\t\tconstructor(arraybuffer: ArrayBuffer) {\n\t\t\t\t\t\tsuper();\n\t\t\t\t\t\tthis._buffer = Buffer.from(new Uint8Array(arraybuffer));\n\t\t\t\t\t\tthis._offset = 0;\n\t\t\t\t\t\tthis._length = this._buffer.length;\n\t\t\t\t\t}\n\n\t\t\t\t\t_read(size: number) {\n\t\t\t\t\t\tif (this._offset < this._length) {\n\t\t\t\t\t\t\tthis.push(this._buffer.slice(this._offset, (this._offset + size)));\n\t\t\t\t\t\t\tthis._offset += size;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.push(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}(xhr.response)\n\t\t\t});\n\t\t};\n\t\txhr.ontimeout = e => reject(new Error(`XHR timeout: ${options.timeout}ms`));\n\n\t\tif (options.timeout) {\n\t\t\txhr.timeout = options.timeout;\n\t\t}\n\n\t\t// TODO: remove any\n\t\txhr.send(options.data as any);\n\n\t\t// cancel\n\t\ttoken.onCancellationRequested(() => {\n\t\t\txhr.abort();\n\t\t\treject(canceled());\n\t\t});\n\t});\n};\n\nfunction setRequestHeaders(xhr: XMLHttpRequest, options: IRequestOptions): void {\n\tif (options.headers) {\n\t\touter: for (let k in options.headers) {\n\t\t\tswitch (k) {\n\t\t\t\tcase 'User-Agent':\n\t\t\t\tcase 'Accept-Encoding':\n\t\t\t\tcase 'Content-Length':\n\t\t\t\t\t// unsafe headers\n\t\t\t\t\tcontinue outer;\n\t\t\t}\n\t\t\txhr.setRequestHeader(k, options.headers[k]);\n\n\t\t}\n\t}\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): { [name: string]: string } {\n\tconst headers: { [name: string]: string } = Object.create(null);\n\tfor (const line of xhr.getAllResponseHeaders().split(/\\r\\n|\\n|\\r/g)) {\n\t\tif (line) {\n\t\t\tconst idx = line.indexOf(':');\n\t\t\theaders[line.substr(0, idx).trim().toLowerCase()] = line.substr(idx + 1).trim();\n\t\t}\n\t}\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport * as platform from 'vs/base/common/platform';\nimport product from 'vs/platform/product/node/product';\nimport pkg from 'vs/platform/product/node/package';\nimport { serve, Server, connect } from 'vs/base/parts/ipc/node/ipc.net';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/node/extensionManagementIpc';\nimport { IExtensionManagementService, IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/node/extensionGalleryService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/node/configurationService';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { RequestService } from 'vs/platform/request/electron-browser/requestService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService, ITelemetryAppender, NullAppender, LogAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { TelemetryAppenderChannel } from 'vs/platform/telemetry/node/telemetryIpc';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { IWindowsService, ActiveWindowManager } from 'vs/platform/windows/common/windows';\nimport { WindowsService } from 'vs/platform/windows/electron-browser/windowsService';\nimport { ipcRenderer } from 'electron';\nimport { createSpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { LogLevelSetterChannelClient, FollowerLogService } from 'vs/platform/log/node/logIpc';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsChannel } from 'vs/platform/localizations/node/localizationsIpc';\nimport { DialogChannelClient } from 'vs/platform/dialogs/node/dialogIpc';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IDisposable, dispose, combinedDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { DownloadService } from 'vs/platform/download/node/downloadService';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { StaticRouter, IServerChannel, IChannel } from 'vs/base/parts/ipc/node/ipc';\nimport { NodeCachedDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/nodeCachedDataCleaner';\nimport { LanguagePackCachedDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/languagePackCachedDataCleaner';\nimport { StorageDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/storageDataCleaner';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-browser/mainProcessService';\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface ISharedProcessConfiguration {\n\treadonly machineId: string;\n}\n\nexport function startup(configuration: ISharedProcessConfiguration) {\n\thandshake(configuration);\n}\n\ninterface ISharedProcessInitData {\n\tsharedIPCHandle: string;\n\targs: ParsedArgs;\n\tlogLevel: LogLevel;\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nclass MainProcessService implements IMainProcessService {\n\tconstructor(private server: Server, private mainRouter: StaticRouter) { }\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.server.getChannel(channelName, this.mainRouter);\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void {\n\t\tthis.server.registerChannel(channelName, channel);\n\t}\n}\n\nfunction main(server: Server, initData: ISharedProcessInitData, configuration: ISharedProcessConfiguration): void {\n\tconst services = new ServiceCollection();\n\n\tconst disposables: IDisposable[] = [];\n\n\tconst onExit = () => dispose(disposables);\n\tprocess.once('exit', onExit);\n\tipcRenderer.once('handshake:goodbye', onExit);\n\n\tdisposables.push(server);\n\n\tconst environmentService = new EnvironmentService(initData.args, process.execPath);\n\n\tconst mainRouter = new StaticRouter(ctx => ctx === 'main');\n\tconst logLevelClient = new LogLevelSetterChannelClient(server.getChannel('loglevel', mainRouter));\n\tconst logService = new FollowerLogService(logLevelClient, createSpdLogService('sharedprocess', initData.logLevel, environmentService.logsPath));\n\tdisposables.push(logService);\n\n\tlogService.info('main', JSON.stringify(configuration));\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, new SyncDescriptor(ConfigurationService));\n\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\tservices.set(IDownloadService, new SyncDescriptor(DownloadService));\n\n\tconst mainProcessService = new MainProcessService(server, mainRouter);\n\tservices.set(IMainProcessService, mainProcessService);\n\n\tconst windowsService = new WindowsService(mainProcessService);\n\tservices.set(IWindowsService, windowsService);\n\n\tconst activeWindowManager = new ActiveWindowManager(windowsService);\n\tconst activeWindowRouter = new StaticRouter(ctx => activeWindowManager.getActiveClientId().then(id => ctx === id));\n\tconst dialogChannel = server.getChannel('dialog', activeWindowRouter);\n\tservices.set(IDialogService, new DialogChannelClient(dialogChannel));\n\n\tconst instantiationService = new InstantiationService(services);\n\n\tinstantiationService.invokeFunction(accessor => {\n\t\tconst services = new ServiceCollection();\n\t\tconst environmentService = accessor.get(IEnvironmentService);\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = environmentService;\n\t\tconst telemetryLogService = new FollowerLogService(logLevelClient, createSpdLogService('telemetry', initData.logLevel, environmentService.logsPath));\n\t\ttelemetryLogService.info('The below are logs for every telemetry event sent from VS Code once the log level is set to trace.');\n\t\ttelemetryLogService.info('===========================================================');\n\n\t\tlet appInsightsAppender: ITelemetryAppender | null = NullAppender;\n\t\tif (!extensionDevelopmentLocationURI && !environmentService.args['disable-telemetry'] && product.enableTelemetry) {\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey && isBuilt) {\n\t\t\t\tappInsightsAppender = new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, telemetryLogService);\n\t\t\t\tdisposables.push(appInsightsAppender); // Ensure the AI appender is disposed so that it flushes remaining data\n\t\t\t}\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(appInsightsAppender, new LogAppender(logService)),\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, pkg.version, configuration.machineId, installSourcePath),\n\t\t\t\tpiiPaths: [appRoot, extensionsPath]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\t\tserver.registerChannel('telemetryAppender', new TelemetryAppenderChannel(appInsightsAppender));\n\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService, [false]));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tservices.set(ILocalizationsService, new SyncDescriptor(LocalizationsService));\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\n\t\tinstantiationService2.invokeFunction(accessor => {\n\n\t\t\tconst extensionManagementService = accessor.get(IExtensionManagementService);\n\t\t\tconst channel = new ExtensionManagementChannel(extensionManagementService, () => null);\n\t\t\tserver.registerChannel('extensions', channel);\n\n\t\t\tconst localizationsService = accessor.get(ILocalizationsService);\n\t\t\tconst localizationsChannel = new LocalizationsChannel(localizationsService);\n\t\t\tserver.registerChannel('localizations', localizationsChannel);\n\n\t\t\tdisposables.push(combinedDisposable([\n\t\t\t\t// clean up deprecated extensions\n\t\t\t\ttoDisposable(() => (extensionManagementService as ExtensionManagementService).removeDeprecatedExtensions()),\n\t\t\t\t// update localizations cache\n\t\t\t\ttoDisposable(() => (localizationsService as LocalizationsService).update()),\n\t\t\t\t// other cache clean ups\n\t\t\t\tinstantiationService2.createInstance(NodeCachedDataCleaner),\n\t\t\t\tinstantiationService2.createInstance(LanguagePackCachedDataCleaner),\n\t\t\t\tinstantiationService2.createInstance(StorageDataCleaner),\n\t\t\t\tinstantiationService2.createInstance(LogsDataCleaner)\n\t\t\t]));\n\t\t\tdisposables.push(extensionManagementService as ExtensionManagementService);\n\t\t});\n\t});\n}\n\nfunction setupIPC(hook: string): Promise<Server> {\n\tfunction setup(retry: boolean): Promise<Server> {\n\t\treturn serve(hook).then(null, err => {\n\t\t\tif (!retry || platform.isWindows || err.code !== 'EADDRINUSE') {\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\n\t\t\t// should retry, not windows and eaddrinuse\n\n\t\t\treturn connect(hook, '').then(\n\t\t\t\tclient => {\n\t\t\t\t\t// we could connect to a running instance. this is not good, abort\n\t\t\t\t\tclient.dispose();\n\t\t\t\t\treturn Promise.reject(new Error('There is an instance already running.'));\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\t// it happens on Linux and OS X that the pipe is left behind\n\t\t\t\t\t// let's delete it, since we can't connect to it\n\t\t\t\t\t// and the retry the whole thing\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfs.unlinkSync(hook);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn Promise.reject(new Error('Error deleting the shared ipc hook.'));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn setup(false);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\treturn setup(true);\n}\n\nasync function handshake(configuration: ISharedProcessConfiguration): Promise<void> {\n\tconst data = await new Promise<ISharedProcessInitData>(c => {\n\t\tipcRenderer.once('handshake:hey there', (_: any, r: ISharedProcessInitData) => c(r));\n\t\tipcRenderer.send('handshake:hello');\n\t});\n\n\tconst server = await setupIPC(data.sharedIPCHandle);\n\n\tmain(server, data, configuration);\n\tipcRenderer.send('handshake:im ready');\n}\n"]}