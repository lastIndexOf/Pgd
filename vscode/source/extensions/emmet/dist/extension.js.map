{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/extension.ts","webpack:///external \"vscode\"","webpack:///./src/defaultCompletionProvider.ts","webpack:///./src/abbreviationActions.ts","webpack:///./src/util.ts","webpack:///./node_modules/@emmetio/html-matcher/dist/html-matcher.es.js","webpack:///./node_modules/@emmetio/stream-reader/dist/stream-reader.es.js","webpack:///./node_modules/@emmetio/stream-reader-utils/dist/stream-reader-utils.es.js","webpack:///./node_modules/@emmetio/css-parser/dist/css-parser.es.js","webpack:///./src/bufferStream.ts","webpack:///external \"vscode-emmet-helper\"","webpack:///./src/removeTag.ts","webpack:///./src/updateTag.ts","webpack:///./src/matchTag.ts","webpack:///./src/balance.ts","webpack:///./src/splitJoinTag.ts","webpack:///./src/mergeLines.ts","webpack:///./src/toggleComment.ts","webpack:///./src/editPoint.ts","webpack:///./src/selectItem.ts","webpack:///./src/selectItemHTML.ts","webpack:///external \"util\"","webpack:///./src/selectItemStylesheet.ts","webpack:///./src/evaluateMathExpression.ts","webpack:///./node_modules/@emmetio/math-expression/dist/math.es.js","webpack:///./src/incrementDecrement.ts","webpack:///./src/updateImageSize.ts","webpack:///external \"path\"","webpack:///./src/imageSizeHelper.ts","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"url\"","webpack:///./node_modules/image-size/lib/index.js","webpack:///external \"fs\"","webpack:///./node_modules/image-size/lib/detector.js","webpack:///./node_modules/image-size/lib/types.js","webpack:///./node_modules/image-size/lib/types sync ^\\.\\/.*$","webpack:///./node_modules/image-size/lib/types/bmp.js","webpack:///./node_modules/image-size/lib/types/dds.js","webpack:///./node_modules/image-size/lib/types/gif.js","webpack:///./node_modules/image-size/lib/types/jpg.js","webpack:///./node_modules/image-size/lib/types/png.js","webpack:///./node_modules/image-size/lib/types/psd.js","webpack:///./node_modules/image-size/lib/types/svg.js","webpack:///./node_modules/image-size/lib/types/tiff.js","webpack:///./node_modules/image-size/lib/readUInt.js","webpack:///./node_modules/image-size/lib/types/webp.js","webpack:///./src/locateFile.ts","webpack:///./src/reflectCssValue.ts"],"names":[],"mappings":"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C,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,OAAO,CAAC,CAAC;IAC/F,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;QACjB,OAAO,KAAK,CAAC;KACb;IACD,MAAM,cAAc,GAAG,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACzD,OAAO,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClH,CAAC;AAXD,4CAWC;;;;;;;;;;;;;AC/lBD;AAC+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,eAAe;AAC3B,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,WAAW,IAAI,YAAY,GAAG,SAAS;AACnD;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA,mBAAmB;AACnB;AACA,mBAAmB;AACnB;AACA,oBAAoB,KAAK;;AAEzB,aAAa;;AAEb;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B,wBAAwB;AACxB,0BAA0B;;AAE1B;AACA;AACA,WAAW,aAAa;AACxB,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA,WAAW,aAAa;AACxB,YAAY;AACZ;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA,4DAA4D,YAAY;AACxE;;AAEA;AACA;AACA;;AAEiC;;;;;;;;AC3lBjC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;AACA,2BAA2B,QAAQ,WAAW,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AC/HA;AAAA;AACA;AACA;;AAEA,wBAAwB;AACxB,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB,aAAa;;AAEb;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0DAA0D,0BAA0B;AACpF;AACA;;AAEA;AACA;;AAEQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3JR;AACuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,eAAe,IAAI,WAAW,IAAI,SAAS,KAAK,UAAU;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B,6BAA6B;AAC7B,6BAA6B;AAC7B,8BAA8B;AAC9B,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,kBAAkB;;AAElB;AACA,yCAAyC,WAAW;AACpD,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,oBAAoB;;AAEpB;AACA;AACA,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B,6BAA6B;AAC7B,4BAA4B;AAC5B,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA,cAAc;;AAEd;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,eAAe;;AAEf;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,OAAO;AACnB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B,4BAA4B;AAC5B,4BAA4B;;AAE5B;A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CA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;AAC7B,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA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;KACvC,CAAC;AACH,CAAC;;;;;;;AChHD,iC;;;;;;ACAA,kC;;;;;;ACAA,gC;;;;;;;ACAA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA,mBAAmB,6EAA6E;AAChG;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,sBAAsB;;AAEtC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;ACxGA,+B;;;;;;;ACAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uB;;;;;;;ACxCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AChBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AC7DA;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACnCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AC7EA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { DefaultCompletionItemProvider } from './defaultCompletionProvider';\nimport { expandEmmetAbbreviation, wrapWithAbbreviation, wrapIndividualLinesWithAbbreviation } from './abbreviationActions';\nimport { removeTag } from './removeTag';\nimport { updateTag } from './updateTag';\nimport { matchTag } from './matchTag';\nimport { balanceOut, balanceIn } from './balance';\nimport { splitJoinTag } from './splitJoinTag';\nimport { mergeLines } from './mergeLines';\nimport { toggleComment } from './toggleComment';\nimport { fetchEditPoint } from './editPoint';\nimport { fetchSelectItem } from './selectItem';\nimport { evaluateMathExpression } from './evaluateMathExpression';\nimport { incrementDecrement } from './incrementDecrement';\nimport { LANGUAGE_MODES, getMappingForIncludedLanguages, updateEmmetExtensionsPath } from './util';\nimport { updateImageSize } from './updateImageSize';\nimport { reflectCssValue } from './reflectCssValue';\n\nexport function activate(context: vscode.ExtensionContext) {\n\tregisterCompletionProviders(context);\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.wrapWithAbbreviation', (args) => {\n\t\twrapWithAbbreviation(args);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.wrapIndividualLinesWithAbbreviation', (args) => {\n\t\twrapIndividualLinesWithAbbreviation(args);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('emmet.expandAbbreviation', (args) => {\n\t\texpandEmmetAbbreviation(args);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.removeTag', () => {\n\t\treturn removeTag();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.updateTag', (inputTag) => {\n\t\tif (inputTag && typeof inputTag === 'string') {\n\t\t\treturn updateTag(inputTag);\n\t\t}\n\t\treturn vscode.window.showInputBox({ prompt: 'Enter Tag' }).then(tagName => {\n\t\t\tif (tagName) {\n\t\t\t\tconst update = updateTag(tagName);\n\t\t\t\treturn update ? update : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.matchTag', () => {\n\t\tmatchTag();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.balanceOut', () => {\n\t\tbalanceOut();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.balanceIn', () => {\n\t\tbalanceIn();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.splitJoinTag', () => {\n\t\treturn splitJoinTag();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.mergeLines', () => {\n\t\tmergeLines();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.toggleComment', () => {\n\t\ttoggleComment();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.nextEditPoint', () => {\n\t\tfetchEditPoint('next');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.prevEditPoint', () => {\n\t\tfetchEditPoint('prev');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.selectNextItem', () => {\n\t\tfetchSelectItem('next');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.selectPrevItem', () => {\n\t\tfetchSelectItem('prev');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.evaluateMathExpression', () => {\n\t\tevaluateMathExpression();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.incrementNumberByOneTenth', () => {\n\t\treturn incrementDecrement(0.1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.incrementNumberByOne', () => {\n\t\treturn incrementDecrement(1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.incrementNumberByTen', () => {\n\t\treturn incrementDecrement(10);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.decrementNumberByOneTenth', () => {\n\t\treturn incrementDecrement(-0.1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.decrementNumberByOne', () => {\n\t\treturn incrementDecrement(-1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.decrementNumberByTen', () => {\n\t\treturn incrementDecrement(-10);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.updateImageSize', () => {\n\t\treturn updateImageSize();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.reflectCSSValue', () => {\n\t\treturn reflectCssValue();\n\t}));\n\n\tupdateEmmetExtensionsPath();\n\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration((e) => {\n\t\tif (e.affectsConfiguration('emmet.includeLanguages')) {\n\t\t\tregisterCompletionProviders(context);\n\t\t}\n\t\tif (e.affectsConfiguration('emmet.extensionsPath')) {\n\t\t\tupdateEmmetExtensionsPath();\n\t\t}\n\t}));\n}\n\n/**\n * Holds any registered completion providers by their language strings\n */\nconst languageMappingForCompletionProviders: Map<string, string> = new Map<string, string>();\nconst completionProvidersMapping: Map<string, vscode.Disposable> = new Map<string, vscode.Disposable>();\n\nfunction registerCompletionProviders(context: vscode.ExtensionContext) {\n\tlet completionProvider = new DefaultCompletionItemProvider();\n\tlet includedLanguages = getMappingForIncludedLanguages();\n\n\tObject.keys(includedLanguages).forEach(language => {\n\t\tif (languageMappingForCompletionProviders.has(language) && languageMappingForCompletionProviders.get(language) === includedLanguages[language]) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (languageMappingForCompletionProviders.has(language)) {\n\t\t\tconst mapping = completionProvidersMapping.get(language);\n\t\t\tif (mapping) {\n\t\t\t\tmapping.dispose();\n\t\t\t}\n\t\t\tlanguageMappingForCompletionProviders.delete(language);\n\t\t\tcompletionProvidersMapping.delete(language);\n\t\t}\n\n\t\tconst provider = vscode.languages.registerCompletionItemProvider([{ language, scheme: 'file' }, { language, scheme: 'untitled' }], completionProvider, ...LANGUAGE_MODES[includedLanguages[language]]);\n\t\tcontext.subscriptions.push(provider);\n\n\t\tlanguageMappingForCompletionProviders.set(language, includedLanguages[language]);\n\t\tcompletionProvidersMapping.set(language, provider);\n\t});\n\n\tObject.keys(LANGUAGE_MODES).forEach(language => {\n\t\tif (!languageMappingForCompletionProviders.has(language)) {\n\t\t\tconst provider = vscode.languages.registerCompletionItemProvider([{ language, scheme: 'file' }, { language, scheme: 'untitled' }], completionProvider, ...LANGUAGE_MODES[language]);\n\t\t\tcontext.subscriptions.push(provider);\n\n\t\t\tlanguageMappingForCompletionProviders.set(language, language);\n\t\t\tcompletionProvidersMapping.set(language, provider);\n\t\t}\n\t});\n}\n\nexport function deactivate() {\n}\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { Node, Stylesheet } from 'EmmetNode';\nimport { isValidLocationForEmmetAbbreviation } from './abbreviationActions';\nimport { getEmmetHelper, getMappingForIncludedLanguages, parsePartialStylesheet, getEmmetConfiguration, getEmmetMode, isStyleSheet, parseDocument, getEmbeddedCssNodeIfAny, isStyleAttribute, getNode } from './util';\n\nexport class DefaultCompletionItemProvider implements vscode.CompletionItemProvider {\n\n\tprivate lastCompletionType: string | undefined;\n\n\tpublic provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, _: vscode.CancellationToken, context: vscode.CompletionContext): Thenable<vscode.CompletionList | undefined> | undefined {\n\t\tconst completionResult = this.provideCompletionItemsInternal(document, position, context);\n\t\tif (!completionResult) {\n\t\t\tthis.lastCompletionType = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\treturn completionResult.then(completionList => {\n\t\t\tif (!completionList || !completionList.items.length) {\n\t\t\t\tthis.lastCompletionType = undefined;\n\t\t\t\treturn completionList;\n\t\t\t}\n\t\t\tconst item = completionList.items[0];\n\t\t\tconst expandedText = item.documentation ? item.documentation.toString() : '';\n\n\t\t\tif (expandedText.startsWith('<')) {\n\t\t\t\tthis.lastCompletionType = 'html';\n\t\t\t} else if (expandedText.indexOf(':') > 0 && expandedText.endsWith(';')) {\n\t\t\t\tthis.lastCompletionType = 'css';\n\t\t\t} else {\n\t\t\t\tthis.lastCompletionType = undefined;\n\t\t\t}\n\t\t\treturn completionList;\n\t\t});\n\t}\n\n\tprivate provideCompletionItemsInternal(document: vscode.TextDocument, position: vscode.Position, context: vscode.CompletionContext): Thenable<vscode.CompletionList | undefined> | undefined {\n\t\tconst emmetConfig = vscode.workspace.getConfiguration('emmet');\n\t\tconst excludedLanguages = emmetConfig['excludeLanguages'] ? emmetConfig['excludeLanguages'] : [];\n\t\tif (excludedLanguages.indexOf(document.languageId) > -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mappedLanguages = getMappingForIncludedLanguages();\n\t\tconst isSyntaxMapped = mappedLanguages[document.languageId] ? true : false;\n\t\tlet syntax = getEmmetMode((isSyntaxMapped ? mappedLanguages[document.languageId] : document.languageId), excludedLanguages);\n\n\t\tif (!syntax\n\t\t\t|| emmetConfig['showExpandedAbbreviation'] === 'never'\n\t\t\t|| ((isSyntaxMapped || syntax === 'jsx') && emmetConfig['showExpandedAbbreviation'] !== 'always')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst helper = getEmmetHelper();\n\t\tlet validateLocation = syntax === 'html' || syntax === 'jsx' || syntax === 'xml';\n\t\tlet rootNode: Node | undefined = undefined;\n\t\tlet currentNode: Node | null = null;\n\n\t\tif (document.languageId === 'html') {\n\t\t\tif (context.triggerKind === vscode.CompletionTriggerKind.TriggerForIncompleteCompletions) {\n\t\t\t\tswitch (this.lastCompletionType) {\n\t\t\t\t\tcase 'html':\n\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'css':\n\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t\tsyntax = 'css';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif (validateLocation) {\n\t\t\t\trootNode = parseDocument(document, false);\n\t\t\t\tcurrentNode = getNode(rootNode, position, true);\n\t\t\t\tif (isStyleAttribute(currentNode, position)) {\n\t\t\t\t\tsyntax = 'css';\n\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t} else {\n\t\t\t\t\tconst embeddedCssNode = getEmbeddedCssNodeIfAny(document, currentNode, position);\n\t\t\t\t\tif (embeddedCssNode) {\n\t\t\t\t\t\tcurrentNode = getNode(embeddedCssNode, position, true);\n\t\t\t\t\t\tsyntax = 'css';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tconst extractAbbreviationResults = helper.extractAbbreviation(document, position, !isStyleSheet(syntax));\n\t\tif (!extractAbbreviationResults || !helper.isAbbreviationValid(syntax, extractAbbreviationResults.abbreviation)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isStyleSheet(document.languageId) && context.triggerKind !== vscode.CompletionTriggerKind.TriggerForIncompleteCompletions) {\n\t\t\tvalidateLocation = true;\n\t\t\tlet usePartialParsing = vscode.workspace.getConfiguration('emmet')['optimizeStylesheetParsing'] === true;\n\t\t\trootNode = usePartialParsing && document.lineCount > 1000 ? parsePartialStylesheet(document, position) : <Stylesheet>parseDocument(document, false);\n\t\t\tif (!rootNode) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcurrentNode = getNode(rootNode, position, true);\n\t\t}\n\n\n\n\t\tif (validateLocation && !isValidLocationForEmmetAbbreviation(document, rootNode, currentNode, syntax, position, extractAbbreviationResults.abbreviationRange)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet noiseCheckPromise: Thenable<any> = Promise.resolve();\n\n\t\t// Fix for https://github.com/Microsoft/vscode/issues/32647\n\t\t// Check for document symbols in js/ts/jsx/tsx and avoid triggering emmet for abbreviations of the form symbolName.sometext\n\t\t// Presence of > or * or + in the abbreviation denotes valid abbreviation that should trigger emmet\n\t\tif (!isStyleSheet(syntax) && (document.languageId === 'javascript' || document.languageId === 'javascriptreact' || document.languageId === 'typescript' || document.languageId === 'typescriptreact')) {\n\t\t\tlet abbreviation: string = extractAbbreviationResults.abbreviation;\n\t\t\tif (abbreviation.startsWith('this.')) {\n\t\t\t\tnoiseCheckPromise = Promise.resolve(true);\n\t\t\t} else {\n\t\t\t\tnoiseCheckPromise = vscode.commands.executeCommand<vscode.SymbolInformation[]>('vscode.executeDocumentSymbolProvider', document.uri).then((symbols: vscode.SymbolInformation[] | undefined) => {\n\t\t\t\t\treturn symbols && symbols.find(x => abbreviation === x.name || (abbreviation.startsWith(x.name + '.') && !/>|\\*|\\+/.test(abbreviation)));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn noiseCheckPromise.then((noise): vscode.CompletionList | undefined => {\n\t\t\tif (noise) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet result = helper.doComplete(document, position, syntax, getEmmetConfiguration(syntax!));\n\t\t\tlet newItems: vscode.CompletionItem[] = [];\n\t\t\tif (result && result.items) {\n\t\t\t\tresult.items.forEach((item: any) => {\n\t\t\t\t\tlet newItem = new vscode.CompletionItem(item.label);\n\t\t\t\t\tnewItem.documentation = item.documentation;\n\t\t\t\t\tnewItem.detail = item.detail;\n\t\t\t\t\tnewItem.insertText = new vscode.SnippetString(item.textEdit.newText);\n\t\t\t\t\tlet oldrange = item.textEdit.range;\n\t\t\t\t\tnewItem.range = new vscode.Range(oldrange.start.line, oldrange.start.character, oldrange.end.line, oldrange.end.character);\n\n\t\t\t\t\tnewItem.filterText = item.filterText;\n\t\t\t\t\tnewItem.sortText = item.sortText;\n\n\t\t\t\t\tif (emmetConfig['showSuggestionsAsSnippets'] === true) {\n\t\t\t\t\t\tnewItem.kind = vscode.CompletionItemKind.Snippet;\n\t\t\t\t\t}\n\t\t\t\t\tnewItems.push(newItem);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new vscode.CompletionList(newItems, true);\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { Node, HtmlNode, Rule, Property, Stylesheet } from 'EmmetNode';\nimport { getEmmetHelper, getNode, getInnerRange, getMappingForIncludedLanguages, parseDocument, validate, getEmmetConfiguration, isStyleSheet, getEmmetMode, parsePartialStylesheet, isStyleAttribute, getEmbeddedCssNodeIfAny, allowedMimeTypesInScriptTag } from './util';\n\nconst trimRegex = /[\\u00a0]*[\\d#\\-\\*\\u2022]+\\.?/;\nconst hexColorRegex = /^#[\\da-fA-F]{0,6}$/;\nconst inlineElements = ['a', 'abbr', 'acronym', 'applet', 'b', 'basefont', 'bdo',\n\t'big', 'br', 'button', 'cite', 'code', 'del', 'dfn', 'em', 'font', 'i',\n\t'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'object', 'q',\n\t's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup',\n\t'textarea', 'tt', 'u', 'var'];\n\ninterface ExpandAbbreviationInput {\n\tsyntax: string;\n\tabbreviation: string;\n\trangeToReplace: vscode.Range;\n\ttextToWrap?: string[];\n\tfilter?: string;\n}\n\ninterface PreviewRangesWithContent {\n\tpreviewRange: vscode.Range;\n\toriginalRange: vscode.Range;\n\toriginalContent: string;\n\ttextToWrapInPreview: string[];\n}\n\nexport function wrapWithAbbreviation(args: any) {\n\treturn doWrapping(false, args);\n}\n\nexport function wrapIndividualLinesWithAbbreviation(args: any) {\n\treturn doWrapping(true, args);\n}\n\nfunction doWrapping(individualLines: boolean, args: any) {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\tif (individualLines) {\n\t\tif (editor.selections.length === 1 && editor.selection.isEmpty) {\n\t\t\tvscode.window.showInformationMessage('Select more than 1 line and try again.');\n\t\t\treturn;\n\t\t}\n\t\tif (editor.selections.find(x => x.isEmpty)) {\n\t\t\tvscode.window.showInformationMessage('Select more than 1 line in each selection and try again.');\n\t\t\treturn;\n\t\t}\n\t}\n\targs = args || {};\n\tif (!args['language']) {\n\t\targs['language'] = editor.document.languageId;\n\t}\n\tconst syntax = getSyntaxFromArgs(args) || 'html';\n\tconst rootNode = parseDocument(editor.document, false);\n\n\tlet inPreview = false;\n\tlet currentValue = '';\n\tconst helper = getEmmetHelper();\n\n\t// Fetch general information for the succesive expansions. i.e. the ranges to replace and its contents\n\tlet rangesToReplace: PreviewRangesWithContent[] = editor.selections.sort((a: vscode.Selection, b: vscode.Selection) => { return a.start.compareTo(b.start); }).map(selection => {\n\t\tlet rangeToReplace: vscode.Range = selection.isReversed ? new vscode.Range(selection.active, selection.anchor) : selection;\n\t\tif (!rangeToReplace.isSingleLine && rangeToReplace.end.character === 0) {\n\t\t\tconst previousLine = rangeToReplace.end.line - 1;\n\t\t\tconst lastChar = editor.document.lineAt(previousLine).text.length;\n\t\t\trangeToReplace = new vscode.Range(rangeToReplace.start, new vscode.Position(previousLine, lastChar));\n\t\t} else if (rangeToReplace.isEmpty) {\n\t\t\tconst { active } = selection;\n\t\t\tconst currentNode = getNode(rootNode, active, true);\n\t\t\tif (currentNode && (currentNode.start.line === active.line || currentNode.end.line === active.line)) {\n\t\t\t\trangeToReplace = new vscode.Range(currentNode.start, currentNode.end);\n\t\t\t} else {\n\t\t\t\trangeToReplace = new vscode.Range(rangeToReplace.start.line, 0, rangeToReplace.start.line, editor.document.lineAt(rangeToReplace.start.line).text.length);\n\t\t\t}\n\t\t}\n\n\t\tconst firstLineOfSelection = editor.document.lineAt(rangeToReplace.start).text.substr(rangeToReplace.start.character);\n\t\tconst matches = firstLineOfSelection.match(/^(\\s*)/);\n\t\tconst extraWhiteSpaceSelected = matches ? matches[1].length : 0;\n\t\trangeToReplace = new vscode.Range(rangeToReplace.start.line, rangeToReplace.start.character + extraWhiteSpaceSelected, rangeToReplace.end.line, rangeToReplace.end.character);\n\n\t\tlet textToWrapInPreview: string[];\n\t\tlet textToReplace = editor.document.getText(rangeToReplace);\n\t\tif (individualLines) {\n\t\t\ttextToWrapInPreview = textToReplace.split('\\n').map(x => x.trim());\n\t\t} else {\n\t\t\tconst wholeFirstLine = editor.document.lineAt(rangeToReplace.start).text;\n\t\t\tconst otherMatches = wholeFirstLine.match(/^(\\s*)/);\n\t\t\tconst preceedingWhiteSpace = otherMatches ? otherMatches[1] : '';\n\t\t\ttextToWrapInPreview = rangeToReplace.isSingleLine ? [textToReplace] : ['\\n\\t' + textToReplace.split('\\n' + preceedingWhiteSpace).join('\\n\\t') + '\\n'];\n\t\t}\n\t\ttextToWrapInPreview = textToWrapInPreview.map(e => e.replace(/(\\$\\d)/g, '\\\\$1'));\n\n\t\treturn {\n\t\t\tpreviewRange: rangeToReplace,\n\t\t\toriginalRange: rangeToReplace,\n\t\t\toriginalContent: textToReplace,\n\t\t\ttextToWrapInPreview\n\t\t};\n\t});\n\n\tfunction revertPreview(): Thenable<any> {\n\t\treturn editor.edit(builder => {\n\t\t\tfor (const rangeToReplace of rangesToReplace) {\n\t\t\t\tbuilder.replace(rangeToReplace.previewRange, rangeToReplace.originalContent);\n\t\t\t\trangeToReplace.previewRange = rangeToReplace.originalRange;\n\t\t\t}\n\t\t}, { undoStopBefore: false, undoStopAfter: false });\n\t}\n\n\tfunction applyPreview(expandAbbrList: ExpandAbbreviationInput[]): Thenable<boolean> {\n\t\tlet lastOldPreviewRange = new vscode.Range(0, 0, 0, 0);\n\t\tlet lastNewPreviewRange = new vscode.Range(0, 0, 0, 0);\n\t\tlet totalLinesInserted = 0;\n\n\t\treturn editor.edit(builder => {\n\t\t\tfor (let i = 0; i < rangesToReplace.length; i++) {\n\t\t\t\tconst expandedText = expandAbbr(expandAbbrList[i]) || '';\n\t\t\t\tif (!expandedText) {\n\t\t\t\t\t// Failed to expand text. We already showed an error inside expandAbbr.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst oldPreviewRange = rangesToReplace[i].previewRange;\n\t\t\t\tconst preceedingText = editor.document.getText(new vscode.Range(oldPreviewRange.start.line, 0, oldPreviewRange.start.line, oldPreviewRange.start.character));\n\t\t\t\tconst indentPrefix = (preceedingText.match(/^(\\s*)/) || ['', ''])[1];\n\n\t\t\t\tlet newText = expandedText.replace(/\\n/g, '\\n' + indentPrefix); // Adding indentation on each line of expanded text\n\t\t\t\tnewText = newText.replace(/\\$\\{[\\d]*\\}/g, '|'); // Removing Tabstops\n\t\t\t\tnewText = newText.replace(/\\$\\{[\\d]*(:[^}]*)?\\}/g, (match) => {\t\t// Replacing Placeholders\n\t\t\t\t\treturn match.replace(/^\\$\\{[\\d]*:/, '').replace('}', '');\n\t\t\t\t});\n\t\t\t\tbuilder.replace(oldPreviewRange, newText);\n\n\t\t\t\tconst expandedTextLines = newText.split('\\n');\n\t\t\t\tconst oldPreviewLines = oldPreviewRange.end.line - oldPreviewRange.start.line + 1;\n\t\t\t\tconst newLinesInserted = expandedTextLines.length - oldPreviewLines;\n\n\t\t\t\tlet newPreviewLineStart = oldPreviewRange.start.line + totalLinesInserted;\n\t\t\t\tlet newPreviewStart = oldPreviewRange.start.character;\n\t\t\t\tconst newPreviewLineEnd = oldPreviewRange.end.line + totalLinesInserted + newLinesInserted;\n\t\t\t\tlet newPreviewEnd = expandedTextLines[expandedTextLines.length - 1].length;\n\t\t\t\tif (i > 0 && newPreviewLineEnd === lastNewPreviewRange.end.line) {\n\t\t\t\t\t// If newPreviewLineEnd is equal to the previous expandedText lineEnd,\n\t\t\t\t\t// set newPreviewStart to the length of the previous expandedText in that line\n\t\t\t\t\t// plus the number of characters between both selections.\n\t\t\t\t\tnewPreviewStart = lastNewPreviewRange.end.character + (oldPreviewRange.start.character - lastOldPreviewRange.end.character);\n\t\t\t\t\tnewPreviewEnd += newPreviewStart;\n\t\t\t\t}\n\t\t\t\telse if (i > 0 && newPreviewLineStart === lastNewPreviewRange.end.line) {\n\t\t\t\t\t// Same as above but expandedTextLines.length > 1 so newPreviewEnd keeps its value.\n\t\t\t\t\tnewPreviewStart = lastNewPreviewRange.end.character + (oldPreviewRange.start.character - lastOldPreviewRange.end.character);\n\t\t\t\t}\n\t\t\t\telse if (expandedTextLines.length === 1) {\n\t\t\t\t\t// If the expandedText is single line, add the length of preceeding text as it will not be included in line length.\n\t\t\t\t\tnewPreviewEnd += oldPreviewRange.start.character;\n\t\t\t\t}\n\n\t\t\t\tlastOldPreviewRange = rangesToReplace[i].previewRange;\n\t\t\t\trangesToReplace[i].previewRange = lastNewPreviewRange = new vscode.Range(newPreviewLineStart, newPreviewStart, newPreviewLineEnd, newPreviewEnd);\n\n\t\t\t\ttotalLinesInserted += newLinesInserted;\n\t\t\t}\n\t\t}, { undoStopBefore: false, undoStopAfter: false });\n\t}\n\n\tfunction makeChanges(inputAbbreviation: string | undefined, definitive: boolean): Thenable<boolean> {\n\t\tif (!inputAbbreviation || !inputAbbreviation.trim() || !helper.isAbbreviationValid(syntax, inputAbbreviation)) {\n\t\t\treturn inPreview ? revertPreview().then(() => { return false; }) : Promise.resolve(inPreview);\n\t\t}\n\n\t\tlet extractedResults = helper.extractAbbreviationFromText(inputAbbreviation);\n\t\tif (!extractedResults) {\n\t\t\treturn Promise.resolve(inPreview);\n\t\t} else if (extractedResults.abbreviation !== inputAbbreviation) {\n\t\t\t// Not clear what should we do in this case. Warn the user? How?\n\t\t}\n\n\t\tlet { abbreviation, filter } = extractedResults;\n\t\tif (definitive) {\n\t\t\tconst revertPromise = inPreview ? revertPreview() : Promise.resolve();\n\t\t\treturn revertPromise.then(() => {\n\t\t\t\tconst expandAbbrList: ExpandAbbreviationInput[] = rangesToReplace.map(rangesAndContent => {\n\t\t\t\t\tlet rangeToReplace = rangesAndContent.originalRange;\n\t\t\t\t\tlet textToWrap: string[];\n\t\t\t\t\tif (individualLines) {\n\t\t\t\t\t\ttextToWrap = rangesAndContent.textToWrapInPreview;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextToWrap = rangeToReplace.isSingleLine ? ['$TM_SELECTED_TEXT'] : ['\\n\\t$TM_SELECTED_TEXT\\n'];\n\t\t\t\t\t}\n\t\t\t\t\treturn { syntax: syntax || '', abbreviation, rangeToReplace, textToWrap, filter };\n\t\t\t\t});\n\t\t\t\treturn expandAbbreviationInRange(editor, expandAbbrList, !individualLines).then(() => { return true; });\n\t\t\t});\n\t\t}\n\n\t\tconst expandAbbrList: ExpandAbbreviationInput[] = rangesToReplace.map(rangesAndContent => {\n\t\t\treturn { syntax: syntax || '', abbreviation, rangeToReplace: rangesAndContent.originalRange, textToWrap: rangesAndContent.textToWrapInPreview, filter };\n\t\t});\n\n\t\treturn applyPreview(expandAbbrList);\n\t}\n\n\tfunction inputChanged(value: string): string {\n\t\tif (value !== currentValue) {\n\t\t\tcurrentValue = value;\n\t\t\tmakeChanges(value, false).then((out) => {\n\t\t\t\tif (typeof out === 'boolean') {\n\t\t\t\t\tinPreview = out;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn '';\n\t}\n\tconst abbreviationPromise: Thenable<string | undefined> = (args && args['abbreviation']) ? Promise.resolve(args['abbreviation']) : vscode.window.showInputBox({ prompt: 'Enter Abbreviation', validateInput: inputChanged });\n\treturn abbreviationPromise.then(inputAbbreviation => {\n\t\treturn makeChanges(inputAbbreviation, true);\n\t});\n}\n\nexport function expandEmmetAbbreviation(args: any): Thenable<boolean | undefined> {\n\tif (!validate() || !vscode.window.activeTextEditor) {\n\t\treturn fallbackTab();\n\t}\n\n\targs = args || {};\n\tif (!args['language']) {\n\t\targs['language'] = vscode.window.activeTextEditor.document.languageId;\n\t} else {\n\t\tconst excludedLanguages = vscode.workspace.getConfiguration('emmet')['excludeLanguages'] ? vscode.workspace.getConfiguration('emmet')['excludeLanguages'] : [];\n\t\tif (excludedLanguages.indexOf(vscode.window.activeTextEditor.document.languageId) > -1) {\n\t\t\treturn fallbackTab();\n\t\t}\n\t}\n\tconst syntax = getSyntaxFromArgs(args);\n\tif (!syntax) {\n\t\treturn fallbackTab();\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\tlet rootNode: Node | undefined;\n\tlet usePartialParsing = vscode.workspace.getConfiguration('emmet')['optimizeStylesheetParsing'] === true;\n\tif (editor.selections.length === 1 && isStyleSheet(editor.document.languageId) && usePartialParsing && editor.document.lineCount > 1000) {\n\t\trootNode = parsePartialStylesheet(editor.document, editor.selection.isReversed ? editor.selection.anchor : editor.selection.active);\n\t} else {\n\t\trootNode = parseDocument(editor.document, false);\n\t}\n\n\t// When tabbed on a non empty selection, do not treat it as an emmet abbreviation, and fallback to tab instead\n\tif (vscode.workspace.getConfiguration('emmet')['triggerExpansionOnTab'] === true && editor.selections.find(x => !x.isEmpty)) {\n\t\treturn fallbackTab();\n\t}\n\n\tlet abbreviationList: ExpandAbbreviationInput[] = [];\n\tlet firstAbbreviation: string;\n\tlet allAbbreviationsSame: boolean = true;\n\tconst helper = getEmmetHelper();\n\n\tlet getAbbreviation = (document: vscode.TextDocument, selection: vscode.Selection, position: vscode.Position, syntax: string): [vscode.Range | null, string, string] => {\n\t\tlet rangeToReplace: vscode.Range = selection;\n\t\tlet abbr = document.getText(rangeToReplace);\n\t\tif (!rangeToReplace.isEmpty) {\n\t\t\tlet extractedResults = helper.extractAbbreviationFromText(abbr);\n\t\t\tif (extractedResults) {\n\t\t\t\treturn [rangeToReplace, extractedResults.abbreviation, extractedResults.filter];\n\t\t\t}\n\t\t\treturn [null, '', ''];\n\t\t}\n\n\t\tconst currentLine = editor.document.lineAt(position.line).text;\n\t\tconst textTillPosition = currentLine.substr(0, position.character);\n\n\t\t// Expand cases like <div to <div></div> explicitly\n\t\t// else we will end up with <<div></div>\n\t\tif (syntax === 'html') {\n\t\t\tlet matches = textTillPosition.match(/<(\\w+)$/);\n\t\t\tif (matches) {\n\t\t\t\tabbr = matches[1];\n\t\t\t\trangeToReplace = new vscode.Range(position.translate(0, -(abbr.length + 1)), position);\n\t\t\t\treturn [rangeToReplace, abbr, ''];\n\t\t\t}\n\t\t}\n\t\tlet extractedResults = helper.extractAbbreviation(editor.document, position, false);\n\t\tif (!extractedResults) {\n\t\t\treturn [null, '', ''];\n\t\t}\n\n\t\tlet { abbreviationRange, abbreviation, filter } = extractedResults;\n\t\treturn [new vscode.Range(abbreviationRange.start.line, abbreviationRange.start.character, abbreviationRange.end.line, abbreviationRange.end.character), abbreviation, filter];\n\t};\n\n\tlet selectionsInReverseOrder = editor.selections.slice(0);\n\tselectionsInReverseOrder.sort((a, b) => {\n\t\tconst posA = a.isReversed ? a.anchor : a.active;\n\t\tconst posB = b.isReversed ? b.anchor : b.active;\n\t\treturn posA.compareTo(posB) * -1;\n\t});\n\n\tselectionsInReverseOrder.forEach(selection => {\n\t\tlet position = selection.isReversed ? selection.anchor : selection.active;\n\t\tlet [rangeToReplace, abbreviation, filter] = getAbbreviation(editor.document, selection, position, syntax);\n\t\tif (!rangeToReplace) {\n\t\t\treturn;\n\t\t}\n\t\tif (!helper.isAbbreviationValid(syntax, abbreviation)) {\n\t\t\treturn;\n\t\t}\n\t\tlet currentNode = getNode(rootNode, position, true);\n\t\tlet validateLocation = true;\n\t\tlet syntaxToUse = syntax;\n\n\t\tif (editor.document.languageId === 'html') {\n\t\t\tif (isStyleAttribute(currentNode, position)) {\n\t\t\t\tsyntaxToUse = 'css';\n\t\t\t\tvalidateLocation = false;\n\t\t\t} else {\n\t\t\t\tconst embeddedCssNode = getEmbeddedCssNodeIfAny(editor.document, currentNode, position);\n\t\t\t\tif (embeddedCssNode) {\n\t\t\t\t\tcurrentNode = getNode(embeddedCssNode, position, true);\n\t\t\t\t\tsyntaxToUse = 'css';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (validateLocation && !isValidLocationForEmmetAbbreviation(editor.document, rootNode, currentNode, syntaxToUse, position, rangeToReplace)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!firstAbbreviation) {\n\t\t\tfirstAbbreviation = abbreviation;\n\t\t} else if (allAbbreviationsSame && firstAbbreviation !== abbreviation) {\n\t\t\tallAbbreviationsSame = false;\n\t\t}\n\n\t\tabbreviationList.push({ syntax: syntaxToUse, abbreviation, rangeToReplace, filter });\n\t});\n\n\treturn expandAbbreviationInRange(editor, abbreviationList, allAbbreviationsSame).then(success => {\n\t\treturn success ? Promise.resolve(undefined) : fallbackTab();\n\t});\n}\n\nfunction fallbackTab(): Thenable<boolean | undefined> {\n\tif (vscode.workspace.getConfiguration('emmet')['triggerExpansionOnTab'] === true) {\n\t\treturn vscode.commands.executeCommand('tab');\n\t}\n\treturn Promise.resolve(true);\n}\n/**\n * Checks if given position is a valid location to expand emmet abbreviation.\n * Works only on html and css/less/scss syntax\n * @param document current Text Document\n * @param rootNode parsed document\n * @param currentNode current node in the parsed document\n * @param syntax syntax of the abbreviation\n * @param position position to validate\n * @param abbreviationRange The range of the abbreviation for which given position is being validated\n */\nexport function isValidLocationForEmmetAbbreviation(document: vscode.TextDocument, rootNode: Node | undefined, currentNode: Node | null, syntax: string, position: vscode.Position, abbreviationRange: vscode.Range): boolean {\n\tif (isStyleSheet(syntax)) {\n\t\tconst stylesheet = <Stylesheet>rootNode;\n\t\tif (stylesheet && (stylesheet.comments || []).some(x => position.isAfterOrEqual(x.start) && position.isBeforeOrEqual(x.end))) {\n\t\t\treturn false;\n\t\t}\n\t\t// Continue validation only if the file was parse-able and the currentNode has been found\n\t\tif (!currentNode) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Fix for https://github.com/Microsoft/vscode/issues/34162\n\t\t// Other than sass, stylus, we can make use of the terminator tokens to validate position\n\t\tif (syntax !== 'sass' && syntax !== 'stylus' && currentNode.type === 'property') {\n\n\t\t\t// Fix for upstream issue https://github.com/emmetio/css-parser/issues/3\n\t\t\tif (currentNode.parent\n\t\t\t\t&& currentNode.parent.type !== 'rule'\n\t\t\t\t&& currentNode.parent.type !== 'at-rule') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst abbreviation = document.getText(new vscode.Range(abbreviationRange.start.line, abbreviationRange.start.character, abbreviationRange.end.line, abbreviationRange.end.character));\n\t\t\tconst propertyNode = <Property>currentNode;\n\t\t\tif (propertyNode.terminatorToken\n\t\t\t\t&& propertyNode.separator\n\t\t\t\t&& position.isAfterOrEqual(propertyNode.separatorToken.end)\n\t\t\t\t&& position.isBeforeOrEqual(propertyNode.terminatorToken.start)\n\t\t\t\t&& abbreviation.indexOf(':') === -1) {\n\t\t\t\treturn hexColorRegex.test(abbreviation) || abbreviation === '!';\n\t\t\t}\n\t\t\tif (!propertyNode.terminatorToken\n\t\t\t\t&& propertyNode.separator\n\t\t\t\t&& position.isAfterOrEqual(propertyNode.separatorToken.end)\n\t\t\t\t&& abbreviation.indexOf(':') === -1) {\n\t\t\t\treturn hexColorRegex.test(abbreviation) || abbreviation === '!';\n\t\t\t}\n\t\t\tif (hexColorRegex.test(abbreviation) || abbreviation === '!') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// If current node is a rule or at-rule, then perform additional checks to ensure\n\t\t// emmet suggestions are not provided in the rule selector\n\t\tif (currentNode.type !== 'rule' && currentNode.type !== 'at-rule') {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst currentCssNode = <Rule>currentNode;\n\n\t\t// Position is valid if it occurs after the `{` that marks beginning of rule contents\n\t\tif (position.isAfter(currentCssNode.contentStartToken.end)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Workaround for https://github.com/Microsoft/vscode/30188\n\t\t// The line above the rule selector is considered as part of the selector by the css-parser\n\t\t// But we should assume it is a valid location for css properties under the parent rule\n\t\tif (currentCssNode.parent\n\t\t\t&& (currentCssNode.parent.type === 'rule' || currentCssNode.parent.type === 'at-rule')\n\t\t\t&& currentCssNode.selectorToken\n\t\t\t&& position.line !== currentCssNode.selectorToken.end.line\n\t\t\t&& currentCssNode.selectorToken.start.character === abbreviationRange.start.character\n\t\t\t&& currentCssNode.selectorToken.start.line === abbreviationRange.start.line\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconst startAngle = '<';\n\tconst endAngle = '>';\n\tconst escape = '\\\\';\n\tconst question = '?';\n\tconst currentHtmlNode = <HtmlNode>currentNode;\n\tlet start = new vscode.Position(0, 0);\n\n\tif (currentHtmlNode) {\n\t\tif (currentHtmlNode.name === 'script') {\n\t\t\tconst typeAttribute = (currentHtmlNode.attributes || []).filter(x => x.name.toString() === 'type')[0];\n\t\t\tconst typeValue = typeAttribute ? typeAttribute.value.toString() : '';\n\n\t\t\tif (allowedMimeTypesInScriptTag.indexOf(typeValue) > -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst isScriptJavascriptType = !typeValue || typeValue === 'application/javascript' || typeValue === 'text/javascript';\n\t\t\tif (isScriptJavascriptType) {\n\t\t\t\treturn !!getSyntaxFromArgs({ language: 'javascript' });\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tconst innerRange = getInnerRange(currentHtmlNode);\n\n\t\t// Fix for https://github.com/Microsoft/vscode/issues/28829\n\t\tif (!innerRange || !innerRange.contains(position)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Fix for https://github.com/Microsoft/vscode/issues/35128\n\t\t// Find the position up till where we will backtrack looking for unescaped < or >\n\t\t// to decide if current position is valid for emmet expansion\n\t\tstart = innerRange.start;\n\t\tlet lastChildBeforePosition = currentHtmlNode.firstChild;\n\t\twhile (lastChildBeforePosition) {\n\t\t\tif (lastChildBeforePosition.end.isAfter(position)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tstart = lastChildBeforePosition.end;\n\t\t\tlastChildBeforePosition = lastChildBeforePosition.nextSibling;\n\t\t}\n\t}\n\tlet textToBackTrack = document.getText(new vscode.Range(start.line, start.character, abbreviationRange.start.line, abbreviationRange.start.character));\n\n\t// Worse case scenario is when cursor is inside a big chunk of text which needs to backtracked\n\t// Backtrack only 500 offsets to ensure we dont waste time doing this\n\tif (textToBackTrack.length > 500) {\n\t\ttextToBackTrack = textToBackTrack.substr(textToBackTrack.length - 500);\n\t}\n\n\tif (!textToBackTrack.trim()) {\n\t\treturn true;\n\t}\n\n\tlet valid = true;\n\tlet foundSpace = false; // If < is found before finding whitespace, then its valid abbreviation. Eg: <div|\n\tlet i = textToBackTrack.length - 1;\n\tif (textToBackTrack[i] === startAngle) {\n\t\treturn false;\n\t}\n\n\twhile (i >= 0) {\n\t\tconst char = textToBackTrack[i];\n\t\ti--;\n\t\tif (!foundSpace && /\\s/.test(char)) {\n\t\t\tfoundSpace = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === question && textToBackTrack[i] === startAngle) {\n\t\t\ti--;\n\t\t\tcontinue;\n\t\t}\n\t\t// Fix for https://github.com/Microsoft/vscode/issues/55411\n\t\t// A space is not a valid character right after < in a tag name.\n\t\tif (/\\s/.test(char) && textToBackTrack[i] === startAngle) {\n\t\t\ti--;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char !== startAngle && char !== endAngle) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (i >= 0 && textToBackTrack[i] === escape) {\n\t\t\ti--;\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === endAngle) {\n\t\t\tif (i >= 0 && textToBackTrack[i] === '=') {\n\t\t\t\tcontinue; // False alarm of cases like =>\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (char === startAngle) {\n\t\t\tvalid = !foundSpace;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn valid;\n}\n\n/**\n * Expands abbreviations as detailed in expandAbbrList in the editor\n *\n * @returns false if no snippet can be inserted.\n */\nfunction expandAbbreviationInRange(editor: vscode.TextEditor, expandAbbrList: ExpandAbbreviationInput[], insertSameSnippet: boolean): Thenable<boolean> {\n\tif (!expandAbbrList || expandAbbrList.length === 0) {\n\t\treturn Promise.resolve(false);\n\t}\n\n\t// Snippet to replace at multiple cursors are not the same\n\t// `editor.insertSnippet` will have to be called for each instance separately\n\t// We will not be able to maintain multiple cursors after snippet insertion\n\tlet insertPromises: Thenable<boolean>[] = [];\n\tif (!insertSameSnippet) {\n\t\texpandAbbrList.sort((a: ExpandAbbreviationInput, b: ExpandAbbreviationInput) => { return b.rangeToReplace.start.compareTo(a.rangeToReplace.start); }).forEach((expandAbbrInput: ExpandAbbreviationInput) => {\n\t\t\tlet expandedText = expandAbbr(expandAbbrInput);\n\t\t\tif (expandedText) {\n\t\t\t\tinsertPromises.push(editor.insertSnippet(new vscode.SnippetString(expandedText), expandAbbrInput.rangeToReplace, { undoStopBefore: false, undoStopAfter: false }));\n\t\t\t}\n\t\t});\n\t\tif (insertPromises.length === 0) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\treturn Promise.all(insertPromises).then(() => Promise.resolve(true));\n\t}\n\n\t// Snippet to replace at all cursors are the same\n\t// We can pass all ranges to `editor.insertSnippet` in a single call so that\n\t// all cursors are maintained after snippet insertion\n\tconst anyExpandAbbrInput = expandAbbrList[0];\n\tlet expandedText = expandAbbr(anyExpandAbbrInput);\n\tlet allRanges = expandAbbrList.map(value => {\n\t\treturn new vscode.Range(value.rangeToReplace.start.line, value.rangeToReplace.start.character, value.rangeToReplace.end.line, value.rangeToReplace.end.character);\n\t});\n\tif (expandedText) {\n\t\treturn editor.insertSnippet(new vscode.SnippetString(expandedText), allRanges);\n\t}\n\treturn Promise.resolve(false);\n}\n\n/**\n * Expands abbreviation as detailed in given input.\n */\nfunction expandAbbr(input: ExpandAbbreviationInput): string {\n\tconst helper = getEmmetHelper();\n\tconst expandOptions = helper.getExpandOptions(input.syntax, getEmmetConfiguration(input.syntax), input.filter);\n\n\tif (input.textToWrap) {\n\t\tif (input.filter && input.filter.indexOf('t') > -1) {\n\t\t\tinput.textToWrap = input.textToWrap.map(line => {\n\t\t\t\treturn line.replace(trimRegex, '').trim();\n\t\t\t});\n\t\t}\n\t\texpandOptions['text'] = input.textToWrap;\n\n\t\t// Below fixes https://github.com/Microsoft/vscode/issues/29898\n\t\t// With this, Emmet formats inline elements as block elements\n\t\t// ensuring the wrapped multi line text does not get merged to a single line\n\t\tif (!input.rangeToReplace.isSingleLine) {\n\t\t\texpandOptions.profile['inlineBreak'] = 1;\n\t\t}\n\t}\n\n\tlet expandedText;\n\ttry {\n\t\t// Expand the abbreviation\n\n\t\tif (input.textToWrap) {\n\t\t\tlet parsedAbbr = helper.parseAbbreviation(input.abbreviation, expandOptions);\n\t\t\tif (input.rangeToReplace.isSingleLine && input.textToWrap.length === 1) {\n\n\t\t\t\t// Fetch rightmost element in the parsed abbreviation (i.e the element that will contain the wrapped text).\n\t\t\t\tlet wrappingNode = parsedAbbr;\n\t\t\t\twhile (wrappingNode && wrappingNode.children && wrappingNode.children.length > 0) {\n\t\t\t\t\twrappingNode = wrappingNode.children[wrappingNode.children.length - 1];\n\t\t\t\t}\n\n\t\t\t\t// If wrapping with a block element, insert newline in the text to wrap.\n\t\t\t\tif (wrappingNode && inlineElements.indexOf(wrappingNode.name) === -1 && (expandOptions['profile'].hasOwnProperty('format') ? expandOptions['profile'].format : true)) {\n\t\t\t\t\twrappingNode.value = '\\n\\t' + wrappingNode.value + '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t\texpandedText = helper.expandAbbreviation(parsedAbbr, expandOptions);\n\t\t\t// All $anyword would have been escaped by the emmet helper.\n\t\t\t// Remove the escaping backslash from $TM_SELECTED_TEXT so that VS Code Snippet controller can treat it as a variable\n\t\t\texpandedText = expandedText.replace('\\\\$TM_SELECTED_TEXT', '$TM_SELECTED_TEXT');\n\t\t} else {\n\t\t\texpandedText = helper.expandAbbreviation(input.abbreviation, expandOptions);\n\t\t}\n\n\t} catch (e) {\n\t\tvscode.window.showErrorMessage('Failed to expand abbreviation');\n\t}\n\n\treturn expandedText;\n}\n\nfunction getSyntaxFromArgs(args: { [x: string]: string }): string | undefined {\n\tconst mappedModes = getMappingForIncludedLanguages();\n\tconst language: string = args['language'];\n\tconst parentMode: string = args['parentMode'];\n\tconst excludedLanguages = vscode.workspace.getConfiguration('emmet')['excludeLanguages'] ? vscode.workspace.getConfiguration('emmet')['excludeLanguages'] : [];\n\tif (excludedLanguages.indexOf(language) > -1) {\n\t\treturn;\n\t}\n\n\tlet syntax = getEmmetMode((mappedModes[language] ? mappedModes[language] : language), excludedLanguages);\n\tif (!syntax) {\n\t\tsyntax = getEmmetMode((mappedModes[parentMode] ? mappedModes[parentMode] : parentMode), excludedLanguages);\n\t}\n\n\treturn syntax;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport parse from '@emmetio/html-matcher';\nimport parseStylesheet from '@emmetio/css-parser';\nimport { Node, HtmlNode, CssToken, Property, Rule, Stylesheet } from 'EmmetNode';\nimport { DocumentStreamReader } from './bufferStream';\n\nlet _emmetHelper: any;\nlet _currentExtensionsPath: string | undefined = undefined;\n\nexport function getEmmetHelper() {\n\t// Lazy load vscode-emmet-helper instead of importing it\n\t// directly to reduce the start-up time of the extension\n\tif (!_emmetHelper) {\n\t\t_emmetHelper = require('vscode-emmet-helper');\n\t}\n\tupdateEmmetExtensionsPath();\n\treturn _emmetHelper;\n}\n\n/**\n * Update Emmet Helper to use user snippets from the extensionsPath setting\n */\nexport function updateEmmetExtensionsPath() {\n\tif (!_emmetHelper) {\n\t\treturn;\n\t}\n\tlet extensionsPath = vscode.workspace.getConfiguration('emmet')['extensionsPath'];\n\tif (_currentExtensionsPath !== extensionsPath) {\n\t\t_currentExtensionsPath = extensionsPath;\n\t\t_emmetHelper.updateExtensionsPath(extensionsPath, vscode.workspace.rootPath).then(null, (err: string) => vscode.window.showErrorMessage(err));\n\t}\n}\n\n/**\n * Mapping between languages that support Emmet and completion trigger characters\n */\nexport const LANGUAGE_MODES: { [id: string]: string[] } = {\n\t'html': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'jade': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'slim': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'haml': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'xml': ['.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'xsl': ['!', '.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'css': [':', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'scss': [':', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'sass': [':', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'less': [':', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'stylus': [':', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'javascriptreact': ['!', '.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'typescriptreact': ['!', '.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n};\n\nexport function isStyleSheet(syntax: string): boolean {\n\tlet stylesheetSyntaxes = ['css', 'scss', 'sass', 'less', 'stylus'];\n\treturn (stylesheetSyntaxes.indexOf(syntax) > -1);\n}\n\nexport function validate(allowStylesheet: boolean = true): boolean {\n\tlet editor = vscode.window.activeTextEditor;\n\tif (!editor) {\n\t\tvscode.window.showInformationMessage('No editor is active');\n\t\treturn false;\n\t}\n\tif (!allowStylesheet && isStyleSheet(editor.document.languageId)) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport function getMappingForIncludedLanguages(): any {\n\t// Explicitly map languages that have built-in grammar in VS Code to their parent language\n\t// to get emmet completion support\n\t// For other languages, users will have to use `emmet.includeLanguages` or\n\t// language specific extensions can provide emmet completion support\n\tconst MAPPED_MODES: Object = {\n\t\t'handlebars': 'html',\n\t\t'php': 'html'\n\t};\n\n\tconst finalMappedModes = Object.create(null);\n\tlet includeLanguagesConfig = vscode.workspace.getConfiguration('emmet')['includeLanguages'];\n\tlet includeLanguages = Object.assign({}, MAPPED_MODES, includeLanguagesConfig ? includeLanguagesConfig : {});\n\tObject.keys(includeLanguages).forEach(syntax => {\n\t\tif (typeof includeLanguages[syntax] === 'string' && LANGUAGE_MODES[includeLanguages[syntax]]) {\n\t\t\tfinalMappedModes[syntax] = includeLanguages[syntax];\n\t\t}\n\t});\n\treturn finalMappedModes;\n}\n\n/**\n* Get the corresponding emmet mode for given vscode language mode\n* Eg: jsx for typescriptreact/javascriptreact or pug for jade\n* If the language is not supported by emmet or has been excluded via `excludeLanguages` setting,\n* then nothing is returned\n*\n* @param excludedLanguages Array of language ids that user has chosen to exclude for emmet\n*/\nexport function getEmmetMode(language: string, excludedLanguages: string[]): string | undefined {\n\tif (!language || excludedLanguages.indexOf(language) > -1) {\n\t\treturn;\n\t}\n\tif (/\\b(typescriptreact|javascriptreact|jsx-tags)\\b/.test(language)) { // treat tsx like jsx\n\t\treturn 'jsx';\n\t}\n\tif (language === 'sass-indented') { // map sass-indented to sass\n\t\treturn 'sass';\n\t}\n\tif (language === 'jade') {\n\t\treturn 'pug';\n\t}\n\tconst emmetModes = ['html', 'pug', 'slim', 'haml', 'xml', 'xsl', 'jsx', 'css', 'scss', 'sass', 'less', 'stylus'];\n\tif (emmetModes.indexOf(language) > -1) {\n\t\treturn language;\n\t}\n\treturn;\n}\n\n/**\n * Parses the given document using emmet parsing modules\n */\nexport function parseDocument(document: vscode.TextDocument, showError: boolean = true): Node | undefined {\n\tlet parseContent = isStyleSheet(document.languageId) ? parseStylesheet : parse;\n\ttry {\n\t\treturn parseContent(new DocumentStreamReader(document));\n\t} catch (e) {\n\t\tif (showError) {\n\t\t\tvscode.window.showErrorMessage('Emmet: Failed to parse the file');\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst closeBrace = 125;\nconst openBrace = 123;\nconst slash = 47;\nconst star = 42;\n\n/**\n * Traverse the given document backward & forward from given position\n * to find a complete ruleset, then parse just that to return a Stylesheet\n * @param document vscode.TextDocument\n * @param position vscode.Position\n */\nexport function parsePartialStylesheet(document: vscode.TextDocument, position: vscode.Position): Stylesheet | undefined {\n\tconst isCSS = document.languageId === 'css';\n\tlet startPosition = new vscode.Position(0, 0);\n\tlet endPosition = new vscode.Position(document.lineCount - 1, document.lineAt(document.lineCount - 1).text.length);\n\tconst limitCharacter = document.offsetAt(position) - 5000;\n\tconst limitPosition = limitCharacter > 0 ? document.positionAt(limitCharacter) : startPosition;\n\tconst stream = new DocumentStreamReader(document, position);\n\n\tfunction findOpeningCommentBeforePosition(pos: vscode.Position): vscode.Position | undefined {\n\t\tlet text = document.getText(new vscode.Range(0, 0, pos.line, pos.character));\n\t\tlet offset = text.lastIndexOf('/*');\n\t\tif (offset === -1) {\n\t\t\treturn;\n\t\t}\n\t\treturn document.positionAt(offset);\n\t}\n\n\tfunction findClosingCommentAfterPosition(pos: vscode.Position): vscode.Position | undefined {\n\t\tlet text = document.getText(new vscode.Range(pos.line, pos.character, document.lineCount - 1, document.lineAt(document.lineCount - 1).text.length));\n\t\tlet offset = text.indexOf('*/');\n\t\tif (offset === -1) {\n\t\t\treturn;\n\t\t}\n\t\toffset += 2 + document.offsetAt(pos);\n\t\treturn document.positionAt(offset);\n\t}\n\n\tfunction consumeLineCommentBackwards() {\n\t\tif (!isCSS && currentLine !== stream.pos.line) {\n\t\t\tcurrentLine = stream.pos.line;\n\t\t\tlet startLineComment = document.lineAt(currentLine).text.indexOf('//');\n\t\t\tif (startLineComment > -1) {\n\t\t\t\tstream.pos = new vscode.Position(currentLine, startLineComment);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction consumeBlockCommentBackwards() {\n\t\tif (stream.peek() === slash) {\n\t\t\tif (stream.backUp(1) === star) {\n\t\t\t\tstream.pos = findOpeningCommentBeforePosition(stream.pos) || startPosition;\n\t\t\t} else {\n\t\t\t\tstream.next();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction consumeCommentForwards() {\n\t\tif (stream.eat(slash)) {\n\t\t\tif (stream.eat(slash) && !isCSS) {\n\t\t\t\tstream.pos = new vscode.Position(stream.pos.line + 1, 0);\n\t\t\t} else if (stream.eat(star)) {\n\t\t\t\tstream.pos = findClosingCommentAfterPosition(stream.pos) || endPosition;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Go forward until we find a closing brace.\n\twhile (!stream.eof() && !stream.eat(closeBrace)) {\n\t\tif (stream.peek() === slash) {\n\t\t\tconsumeCommentForwards();\n\t\t} else {\n\t\t\tstream.next();\n\t\t}\n\t}\n\n\tif (!stream.eof()) {\n\t\tendPosition = stream.pos;\n\t}\n\n\tstream.pos = position;\n\tlet openBracesToFind = 1;\n\tlet currentLine = position.line;\n\tlet exit = false;\n\n\t// Go back until we found an opening brace. If we find a closing one, consume its pair and continue.\n\twhile (!exit && openBracesToFind > 0 && !stream.sof()) {\n\t\tconsumeLineCommentBackwards();\n\n\t\tswitch (stream.backUp(1)) {\n\t\t\tcase openBrace:\n\t\t\t\topenBracesToFind--;\n\t\t\t\tbreak;\n\t\t\tcase closeBrace:\n\t\t\t\tif (isCSS) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\tstartPosition = stream.pos;\n\t\t\t\t\texit = true;\n\t\t\t\t} else {\n\t\t\t\t\topenBracesToFind++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase slash:\n\t\t\t\tconsumeBlockCommentBackwards();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (position.line - stream.pos.line > 100 || stream.pos.isBeforeOrEqual(limitPosition)) {\n\t\t\texit = true;\n\t\t}\n\t}\n\n\t// We are at an opening brace. We need to include its selector.\n\tcurrentLine = stream.pos.line;\n\topenBracesToFind = 0;\n\tlet foundSelector = false;\n\twhile (!exit && !stream.sof() && !foundSelector && openBracesToFind >= 0) {\n\n\t\tconsumeLineCommentBackwards();\n\n\t\tconst ch = stream.backUp(1);\n\t\tif (/\\s/.test(String.fromCharCode(ch))) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tswitch (ch) {\n\t\t\tcase slash:\n\t\t\t\tconsumeBlockCommentBackwards();\n\t\t\t\tbreak;\n\t\t\tcase closeBrace:\n\t\t\t\topenBracesToFind++;\n\t\t\t\tbreak;\n\t\t\tcase openBrace:\n\t\t\t\topenBracesToFind--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!openBracesToFind) {\n\t\t\t\t\tfoundSelector = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!stream.sof() && foundSelector) {\n\t\t\tstartPosition = stream.pos;\n\t\t}\n\t}\n\n\ttry {\n\t\treturn parseStylesheet(new DocumentStreamReader(document, startPosition, new vscode.Range(startPosition, endPosition)));\n\t} catch (e) {\n\t\treturn;\n\t}\n}\n\n/**\n * Returns node corresponding to given position in the given root node\n */\nexport function getNode(root: Node | undefined, position: vscode.Position, includeNodeBoundary: boolean) {\n\tif (!root) {\n\t\treturn null;\n\t}\n\n\tlet currentNode = root.firstChild;\n\tlet foundNode: Node | null = null;\n\n\twhile (currentNode) {\n\t\tconst nodeStart: vscode.Position = currentNode.start;\n\t\tconst nodeEnd: vscode.Position = currentNode.end;\n\t\tif ((nodeStart.isBefore(position) && nodeEnd.isAfter(position))\n\t\t\t|| (includeNodeBoundary && (nodeStart.isBeforeOrEqual(position) && nodeEnd.isAfterOrEqual(position)))) {\n\n\t\t\tfoundNode = currentNode;\n\t\t\t// Dig deeper\n\t\t\tcurrentNode = currentNode.firstChild;\n\t\t} else {\n\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t}\n\t}\n\n\treturn foundNode;\n}\n\nexport const allowedMimeTypesInScriptTag = ['text/html', 'text/plain', 'text/x-template', 'text/template', 'text/ng-template'];\n\n/**\n * Returns HTML node corresponding to given position in the given root node\n * If position is inside a script tag of type template, then it will be parsed to find the inner HTML node as well\n */\nexport function getHtmlNode(document: vscode.TextDocument, root: Node | undefined, position: vscode.Position, includeNodeBoundary: boolean): HtmlNode | undefined {\n\tlet currentNode = <HtmlNode>getNode(root, position, includeNodeBoundary);\n\tif (!currentNode) { return; }\n\n\tconst isTemplateScript = currentNode.name === 'script' &&\n\t\t(currentNode.attributes &&\n\t\t\tcurrentNode.attributes.some(x => x.name.toString() === 'type'\n\t\t\t\t&& allowedMimeTypesInScriptTag.indexOf(x.value.toString()) > -1));\n\n\tif (isTemplateScript && currentNode.close &&\n\t\t(position.isAfter(currentNode.open.end) && position.isBefore(currentNode.close.start))) {\n\n\t\tlet buffer = new DocumentStreamReader(document, currentNode.open.end, new vscode.Range(currentNode.open.end, currentNode.close.start));\n\n\t\ttry {\n\t\t\tlet scriptInnerNodes = parse(buffer);\n\t\t\tcurrentNode = <HtmlNode>getNode(scriptInnerNodes, position, includeNodeBoundary) || currentNode;\n\t\t} catch (e) { }\n\t}\n\n\treturn currentNode;\n}\n\n/**\n * Returns inner range of an html node.\n */\nexport function getInnerRange(currentNode: HtmlNode): vscode.Range | undefined {\n\tif (!currentNode.close) {\n\t\treturn undefined;\n\t}\n\treturn new vscode.Range(currentNode.open.end, currentNode.close.start);\n}\n\n/**\n * Returns the deepest non comment node under given node\n */\nexport function getDeepestNode(node: Node | undefined): Node | undefined {\n\tif (!node || !node.children || node.children.length === 0 || !node.children.find(x => x.type !== 'comment')) {\n\t\treturn node;\n\t}\n\tfor (let i = node.children.length - 1; i >= 0; i--) {\n\t\tif (node.children[i].type !== 'comment') {\n\t\t\treturn getDeepestNode(node.children[i]);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport function findNextWord(propertyValue: string, pos: number): [number | undefined, number | undefined] {\n\n\tlet foundSpace = pos === -1;\n\tlet foundStart = false;\n\tlet foundEnd = false;\n\n\tlet newSelectionStart;\n\tlet newSelectionEnd;\n\twhile (pos < propertyValue.length - 1) {\n\t\tpos++;\n\t\tif (!foundSpace) {\n\t\t\tif (propertyValue[pos] === ' ') {\n\t\t\t\tfoundSpace = true;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (foundSpace && !foundStart && propertyValue[pos] === ' ') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!foundStart) {\n\t\t\tnewSelectionStart = pos;\n\t\t\tfoundStart = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (propertyValue[pos] === ' ') {\n\t\t\tnewSelectionEnd = pos;\n\t\t\tfoundEnd = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (foundStart && !foundEnd) {\n\t\tnewSelectionEnd = propertyValue.length;\n\t}\n\n\treturn [newSelectionStart, newSelectionEnd];\n}\n\nexport function findPrevWord(propertyValue: string, pos: number): [number | undefined, number | undefined] {\n\n\tlet foundSpace = pos === propertyValue.length;\n\tlet foundStart = false;\n\tlet foundEnd = false;\n\n\tlet newSelectionStart;\n\tlet newSelectionEnd;\n\twhile (pos > -1) {\n\t\tpos--;\n\t\tif (!foundSpace) {\n\t\t\tif (propertyValue[pos] === ' ') {\n\t\t\t\tfoundSpace = true;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (foundSpace && !foundEnd && propertyValue[pos] === ' ') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!foundEnd) {\n\t\t\tnewSelectionEnd = pos + 1;\n\t\t\tfoundEnd = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (propertyValue[pos] === ' ') {\n\t\t\tnewSelectionStart = pos + 1;\n\t\t\tfoundStart = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (foundEnd && !foundStart) {\n\t\tnewSelectionStart = 0;\n\t}\n\n\treturn [newSelectionStart, newSelectionEnd];\n}\n\nexport function getNodesInBetween(node1: Node, node2: Node): Node[] {\n\t// Same node\n\tif (sameNodes(node1, node2)) {\n\t\treturn [node1];\n\t}\n\n\t// Not siblings\n\tif (!sameNodes(node1.parent, node2.parent)) {\n\t\t// node2 is ancestor of node1\n\t\tif (node2.start.isBefore(node1.start)) {\n\t\t\treturn [node2];\n\t\t}\n\n\t\t// node1 is ancestor of node2\n\t\tif (node2.start.isBefore(node1.end)) {\n\t\t\treturn [node1];\n\t\t}\n\n\t\t// Get the highest ancestor of node1 that should be commented\n\t\twhile (node1.parent && node1.parent.end.isBefore(node2.start)) {\n\t\t\tnode1 = node1.parent;\n\t\t}\n\n\t\t// Get the highest ancestor of node2 that should be commented\n\t\twhile (node2.parent && node2.parent.start.isAfter(node1.start)) {\n\t\t\tnode2 = node2.parent;\n\t\t}\n\t}\n\n\tconst siblings: Node[] = [];\n\tlet currentNode = node1;\n\tconst position = node2.end;\n\twhile (currentNode && position.isAfter(currentNode.start)) {\n\t\tsiblings.push(currentNode);\n\t\tcurrentNode = currentNode.nextSibling;\n\t}\n\treturn siblings;\n}\n\nexport function sameNodes(node1: Node, node2: Node): boolean {\n\tif (!node1 || !node2) {\n\t\treturn false;\n\t}\n\treturn (<vscode.Position>node1.start).isEqual(node2.start) && (<vscode.Position>node1.end).isEqual(node2.end);\n}\n\nexport function getEmmetConfiguration(syntax: string) {\n\tconst emmetConfig = vscode.workspace.getConfiguration('emmet');\n\tconst syntaxProfiles = Object.assign({}, emmetConfig['syntaxProfiles'] || {});\n\tconst preferences = Object.assign({}, emmetConfig['preferences'] || {});\n\t// jsx, xml and xsl syntaxes need to have self closing tags unless otherwise configured by user\n\tif (syntax === 'jsx' || syntax === 'xml' || syntax === 'xsl') {\n\t\tsyntaxProfiles[syntax] = syntaxProfiles[syntax] || {};\n\t\tif (typeof syntaxProfiles[syntax] === 'object'\n\t\t\t&& !syntaxProfiles[syntax].hasOwnProperty('self_closing_tag') // Old Emmet format\n\t\t\t&& !syntaxProfiles[syntax].hasOwnProperty('selfClosingStyle') // Emmet 2.0 format\n\t\t) {\n\t\t\tsyntaxProfiles[syntax] = {\n\t\t\t\t...syntaxProfiles[syntax],\n\t\t\t\tselfClosingStyle: 'xml'\n\t\t\t};\n\t\t}\n\t}\n\n\treturn {\n\t\tpreferences,\n\t\tshowExpandedAbbreviation: emmetConfig['showExpandedAbbreviation'],\n\t\tshowAbbreviationSuggestions: emmetConfig['showAbbreviationSuggestions'],\n\t\tsyntaxProfiles,\n\t\tvariables: emmetConfig['variables'],\n\t\texcludeLanguages: emmetConfig['excludeLanguages'],\n\t\tshowSuggestionsAsSnippets: emmetConfig['showSuggestionsAsSnippets']\n\t};\n}\n\n/**\n * Itereates by each child, as well as nested child's children, in their order\n * and invokes `fn` for each. If `fn` function returns `false`, iteration stops\n */\nexport function iterateCSSToken(token: CssToken, fn: (x: any) => any): boolean {\n\tfor (let i = 0, il = token.size; i < il; i++) {\n\t\tif (fn(token.item(i)) === false || iterateCSSToken(token.item(i), fn) === false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Returns `name` CSS property from given `rule`\n */\nexport function getCssPropertyFromRule(rule: Rule, name: string): Property | undefined {\n\treturn rule.children.find(node => node.type === 'property' && node.name === name) as Property;\n}\n\n/**\n * Returns css property under caret in given editor or `null` if such node cannot\n * be found\n */\nexport function getCssPropertyFromDocument(editor: vscode.TextEditor, position: vscode.Position): Property | null {\n\tconst rootNode = parseDocument(editor.document);\n\tconst node = getNode(rootNode, position, true);\n\n\tif (isStyleSheet(editor.document.languageId)) {\n\t\treturn node && node.type === 'property' ? <Property>node : null;\n\t}\n\n\tlet htmlNode = <HtmlNode>node;\n\tif (htmlNode\n\t\t&& htmlNode.name === 'style'\n\t\t&& htmlNode.open.end.isBefore(position)\n\t\t&& htmlNode.close.start.isAfter(position)) {\n\t\tlet buffer = new DocumentStreamReader(editor.document, htmlNode.start, new vscode.Range(htmlNode.start, htmlNode.end));\n\t\tlet rootNode = parseStylesheet(buffer);\n\t\tconst node = getNode(rootNode, position, true);\n\t\treturn (node && node.type === 'property') ? <Property>node : null;\n\t}\n\n\treturn null;\n}\n\n\nexport function getEmbeddedCssNodeIfAny(document: vscode.TextDocument, currentNode: Node | null, position: vscode.Position): Node | undefined {\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\tconst currentHtmlNode = <HtmlNode>currentNode;\n\tif (currentHtmlNode && currentHtmlNode.close) {\n\t\tconst innerRange = getInnerRange(currentHtmlNode);\n\t\tif (innerRange && innerRange.contains(position)) {\n\t\t\tif (currentHtmlNode.name === 'style'\n\t\t\t\t&& currentHtmlNode.open.end.isBefore(position)\n\t\t\t\t&& currentHtmlNode.close.start.isAfter(position)\n\n\t\t\t) {\n\t\t\t\tlet buffer = new DocumentStreamReader(document, currentHtmlNode.open.end, new vscode.Range(currentHtmlNode.open.end, currentHtmlNode.close.start));\n\t\t\t\treturn parseStylesheet(buffer);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nexport function isStyleAttribute(currentNode: Node | null, position: vscode.Position): boolean {\n\tif (!currentNode) {\n\t\treturn false;\n\t}\n\tconst currentHtmlNode = <HtmlNode>currentNode;\n\tconst index = (currentHtmlNode.attributes || []).findIndex(x => x.name.toString() === 'style');\n\tif (index === -1) {\n\t\treturn false;\n\t}\n\tconst styleAttribute = currentHtmlNode.attributes[index];\n\treturn position.isAfterOrEqual(styleAttribute.value.start) && position.isBeforeOrEqual(styleAttribute.value.end);\n}\n\n\n","import StreamReader from '@emmetio/stream-reader';\nimport { eatPair, eatQuoted, isAlphaNumeric, isQuote, isSpace } from '@emmetio/stream-reader-utils';\n\nclass Node {\n\tconstructor(stream, type, open, close) {\n\t\tthis.stream = stream;\n\t\tthis.type = type;\n\t\tthis.open = open;\n\t\tthis.close = close;\n\n\t\tthis.children = [];\n\t\tthis.parent = null;\n\t}\n\n\t/**\n\t * Returns node name\n\t * @return {String}\n\t */\n\tget name() {\n\t\tif (this.type === 'tag' && this.open) {\n\t\t\treturn this.open && this.open.name && this.open.name.value;\n\t\t}\n\n\t\treturn '#' + this.type;\n\t}\n\n\t/**\n\t * Returns attributes of current node\n\t * @return {Array}\n\t */\n\tget attributes() {\n\t\treturn this.open && this.open.attributes;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\treturn this.open && this.open.start;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\treturn this.close ? this.close.end : this.open && this.open.end;\n\t}\n\n\tget firstChild() {\n\t\treturn this.children[0];\n\t}\n\n\tget nextSibling() {\n\t\tconst ix = this.getIndex();\n\t\treturn ix !== -1 ? this.parent.children[ix + 1] : null;\n\t}\n\n\tget previousSibling() {\n\t\tconst ix = this.getIndex();\n\t\treturn ix !== -1 ? this.parent.children[ix - 1] : null;\n\t}\n\n\t/**\n\t * Returns current element’s index in parent list of child nodes\n\t * @return {Number}\n\t */\n\tgetIndex() {\n\t\treturn this.parent ? this.parent.children.indexOf(this) : -1;\n\t}\n\n\t/**\n\t * Adds given node as a child\n\t * @param {Node} node\n\t * @return {Node} Current node\n\t */\n\taddChild(node) {\n\t\tthis.removeChild(node);\n\t\tthis.children.push(node);\n\t\tnode.parent = this;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes given node from current node’s child list\n\t * @param  {Node} node\n\t * @return {Node} Current node\n\t */\n\tremoveChild(node) {\n\t\tconst ix = this.children.indexOf(node);\n\t\tif (ix !== -1) {\n\t\t\tthis.children.splice(ix, 1);\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n/**\n * A token factory method\n * @param  {StreamReader}   stream\n * @param  {Point|Function} start  Tokens’ start location or stream consumer\n * @param  {Point}          [end]  Tokens’ end location\n * @return {Token}\n */\nvar token = function(stream, start, end) {\n\treturn typeof start === 'function'\n\t\t? eatToken(stream, start)\n\t\t: new Token(stream, start, end);\n};\n\n/**\n * Consumes characters from given stream that matches `fn` call and returns it\n * as token, if consumed\n * @param  {StreamReader} stream\n * @param  {Function} test\n * @return {Token}\n */\nfunction eatToken(stream, test) {\n\tconst start = stream.pos;\n\tif (stream.eatWhile(test)) {\n\t\treturn new Token(stream, start, stream.pos);\n\t}\n\n\tstream.pos = start;\n}\n\n/**\n * A structure describing text fragment in content stream\n */\nclass Token {\n\t/**\n\t * @param {ContentStreamReader} stream\n\t * @param {Point} start         Tokens’ start location in content stream\n\t * @param {Point} end           Tokens’ end location in content stream\n\t */\n\tconstructor(stream, start, end) {\n\t\tthis.stream = stream;\n\t\tthis.start = start != null ? start : stream.start;\n\t\tthis.end   = end   != null ? end   : stream.pos;\n\t\tthis._value = null;\n\t}\n\n\t/**\n\t * Returns token textual value\n\t * NB implemented as getter to reduce unnecessary memory allocations for\n\t * strings that not required\n\t * @return {String}\n\t */\n\tget value() {\n\t\tif (this._value === null) {\n\t\t\tconst start = this.stream.start;\n\t\t\tconst end = this.stream.pos;\n\n\t\t\tthis.stream.start = this.start;\n\t\t\tthis.stream.pos = this.end;\n\t\t\tthis._value = this.stream.current();\n\n\t\t\tthis.stream.start = start;\n\t\t\tthis.stream.pos = end;\n\t\t}\n\n\t\treturn this._value;\n\t}\n\n\ttoString() {\n\t\treturn this.value;\n\t}\n\n\tvalueOf() {\n\t\treturn `${this.value} [${this.start}; ${this.end}]`;\n\t}\n}\n\nconst LANGLE  = 60;\nconst RANGLE  = 62;  // < and >\nconst LSQUARE = 91;\nconst RSQUARE = 93;  // [ and ]\nconst LROUND  = 40;\nconst RROUND  = 41;  // ( and )\nconst LCURLY  = 123;\nconst RCURLY  = 125; // { and }\n\nconst opt = { throws: true };\n\n/**\n * Consumes paired tokens (like `[` and `]`) with respect of nesting and embedded\n * quoted values\n * @param  {StreamReader} stream\n * @return {Token} A token with consumed paired character\n */\nvar eatPaired = function(stream) {\n\tconst start = stream.pos;\n\tconst consumed = eatPair(stream, LANGLE, RANGLE, opt)\n\t\t|| eatPair(stream, LSQUARE, RSQUARE, opt)\n\t\t|| eatPair(stream, LROUND,  RROUND,  opt)\n\t\t|| eatPair(stream, LCURLY,  RCURLY,  opt);\n\n\tif (consumed) {\n\t\treturn token(stream, start);\n\t}\n};\n\nconst SLASH$1        = 47;  // /\nconst EQUALS       = 61;  // =\nconst RIGHT_ANGLE$1  = 62;  // >\n\n/**\n * Consumes attributes from given stream\n * @param {StreamReader} stream\n * @return {Array} Array of consumed attributes\n */\nvar eatAttributes = function(stream) {\n\tconst result = [];\n\tlet name, value, attr;\n\n\twhile (!stream.eof()) {\n\t\tstream.eatWhile(isSpace);\n\t\tattr = { start: stream.pos };\n\n\t\t// A name could be a regular name or expression:\n\t\t// React-style – <div {...props}>\n\t\t// Angular-style – <div [ng-for]>\n\t\tif (attr.name = eatAttributeName(stream)) {\n\t\t\t// Consumed attribute name. Can be an attribute with name\n\t\t\t// or boolean attribute. The value can be React-like expression\n\t\t\tif (stream.eat(EQUALS)) {\n\t\t\t\tattr.value = eatAttributeValue(stream);\n\t\t\t} else {\n\t\t\t\tattr.boolean = true;\n\t\t\t}\n\t\t\tattr.end = stream.pos;\n\t\t\tresult.push(attr);\n\t\t} else if (isTerminator(stream.peek())) {\n\t\t\t// look for tag terminator in order to skip any other possible characters\n\t\t\t// (maybe junk)\n\t\t\tbreak;\n\t\t} else {\n\t\t\tstream.next();\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Consumes attribute name from current location\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatAttributeName(stream) {\n\treturn eatPaired(stream) || token(stream, isAttributeName);\n}\n\n/**\n * Consumes attribute value from given location\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatAttributeValue(stream) {\n\tconst start = stream.pos;\n\tif (eatQuoted(stream)) {\n\t\t// Should return token that points to unquoted value.\n\t\t// Use stream readers’ public API to traverse instead of direct\n\t\t// manipulation\n\t\tconst current = stream.pos;\n\t\tlet valueStart, valueEnd;\n\n\t\tstream.pos = start;\n\t\tstream.next();\n\t\tvalueStart = stream.start = stream.pos;\n\n\t\tstream.pos = current;\n\t\tstream.backUp(1);\n\t\tvalueEnd = stream.pos;\n\n\t\tconst result = token(stream, valueStart, valueEnd);\n\t\tstream.pos = current;\n\t\treturn result;\n\t}\n\n\treturn eatPaired(stream) || eatUnquoted(stream);\n}\n\n/**\n * Check if given code belongs to attribute name.\n * NB some custom HTML variations allow non-default values in name, like `*ngFor`\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isAttributeName(code) {\n\treturn code !== EQUALS && !isTerminator(code) && !isSpace(code);\n}\n\n/**\n * Check if given code is tag terminator\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isTerminator(code) {\n\treturn code === RIGHT_ANGLE$1 || code === SLASH$1;\n}\n\n/**\n * Eats unquoted value from stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatUnquoted(stream) {\n\treturn token(stream, isUnquoted);\n}\n\n/**\n * Check if given character code is valid unquoted value\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isUnquoted(code) {\n\treturn !isNaN(code) && !isQuote(code) && !isSpace(code) && !isTerminator(code);\n}\n\nconst DASH        = 45; // -\nconst DOT         = 46; // .\nconst SLASH       = 47; // /\nconst COLON       = 58; // :\nconst LEFT_ANGLE  = 60; // <\nconst RIGHT_ANGLE = 62; // >\nconst UNDERSCORE  = 95; // _\n\n/**\n * Parses tag definition (open or close tag) from given stream state\n * @param {StreamReader} stream Content stream reader\n * @return {Object}\n */\nvar tag = function(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(LEFT_ANGLE)) {\n\t\tconst model = { type: stream.eat(SLASH) ? 'close' : 'open' };\n\n\t\tif (model.name = eatTagName(stream)) {\n\t\t\tif (model.type !== 'close') {\n\t\t\t\tmodel.attributes = eatAttributes(stream);\n\t\t\t\tstream.eatWhile(isSpace);\n\t\t\t\tmodel.selfClosing = stream.eat(SLASH);\n\t\t\t}\n\n\t\t\tif (stream.eat(RIGHT_ANGLE)) {\n\t\t\t\t// tag properly closed\n\t\t\t\treturn Object.assign(token(stream, start), model);\n\t\t\t}\n\t\t}\n\t}\n\n\t// invalid tag, revert to original position\n\tstream.pos = start;\n\treturn null;\n};\n\n/**\n * Eats HTML identifier (tag or attribute name) from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatTagName(stream) {\n\treturn token(stream, isTagName);\n}\n\n/**\n * Check if given character code can be used as HTML/XML tag name\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isTagName(code) {\n\treturn isAlphaNumeric(code)\n\t\t|| code === COLON // colon is used for namespaces\n\t\t|| code === DOT   // in rare cases declarative tag names may have dots in names\n\t\t|| code === DASH\n\t\t|| code === UNDERSCORE;\n}\n\n/**\n * Eats array of character codes from given stream\n * @param  {StreamReader} stream\n * @param  {Number[]} codes  Array of character codes\n * @return {Boolean}\n */\nfunction eatArray(stream, codes) {\n\tconst start = stream.pos;\n\n\tfor (let i = 0; i < codes.length; i++) {\n\t\tif (!stream.eat(codes[i])) {\n\t\t\tstream.pos = start;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstream.start = start;\n\treturn true;\n}\n\n/**\n * Consumes section from given string which starts with `open` character codes\n * and ends with `close` character codes\n * @param  {StreamReader} stream\n * @param  {Number[]} open\n * @param  {Number[]} close\n * @return {Boolean}  Returns `true` if section was consumed\n */\nfunction eatSection(stream, open, close, allowUnclosed) {\n\tconst start = stream.pos;\n\tif (eatArray(stream, open)) {\n\t\t// consumed `<!--`, read next until we find ending part or reach the end of input\n\t\twhile (!stream.eof()) {\n\t\t\tif (eatArray(stream, close)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tstream.next();\n\t\t}\n\n\t\t// unclosed section is allowed\n\t\tif (allowUnclosed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tstream.pos = start;\n\t\treturn false;\n\t}\n\n\t// unable to find section, revert to initial position\n\tstream.pos = start;\n\treturn null;\n}\n\n/**\n * Converts given string into array of character codes\n * @param  {String} str\n * @return {Number[]}\n */\nfunction toCharCodes(str) {\n\treturn str.split('').map(ch => ch.charCodeAt(0));\n}\n\nconst open  = toCharCodes('<!--');\nconst close = toCharCodes('-->');\n\n/**\n * Consumes HTML comment from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nvar comment = function(stream) {\n\tconst start = stream.pos;\n\tif (eatSection(stream, open, close, true)) {\n\t\tconst result = token(stream, start);\n\t\tresult.type = 'comment';\n\t\treturn result;\n\t}\n\n\treturn null;\n};\n\nconst open$1  = toCharCodes('<![CDATA[');\nconst close$1 = toCharCodes(']]>');\n\n/**\n * Consumes CDATA from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nvar cdata = function(stream) {\n\tconst start = stream.pos;\n\tif (eatSection(stream, open$1, close$1, true)) {\n\t\tconst result = token(stream, start);\n\t\tresult.type = 'cdata';\n\t\treturn result;\n\t}\n\n\treturn null;\n};\n\nconst defaultOptions = {\n\t/**\n\t * Expect XML content in searching content. It alters how should-be-empty\n\t * elements are treated: for example, in XML mode parser will try to locate\n\t * closing pair for `<br>` tag\n\t * @type {Boolean}\n\t */\n\txml: false,\n\n\tspecial: ['script', 'style'],\n\n\t/**\n\t * List of elements that should be treated as empty (e.g. without closing tag)\n\t * in non-XML syntax\n\t * @type {Array}\n\t */\n\tempty: ['img', 'meta', 'link', 'br', 'base', 'hr', 'area', 'wbr','col', 'embed', 'input', 'param', 'source', 'track']\n};\n\n/**\n * Parses given content into a DOM-like structure\n * @param  {String|StreamReader} content\n * @param  {Object} options\n * @return {Node}\n */\nfunction parse(content, options) {\n\toptions = Object.assign({}, defaultOptions, options);\n\tconst stream = typeof content === 'string'\n\t\t? new StreamReader(content)\n\t\t: content;\n\n\tconst root = new Node(stream, 'root');\n\tconst empty = new Set(options.empty);\n\tconst special = options.special.reduce(\n\t\t(map, name) => map.set(name, toCharCodes(`</${name}>`)), new Map());\n\tconst isEmpty = (token, name) =>\n\t\ttoken.selfClosing || (!options.xml && empty.has(name));\n\n\tlet m, node, name, stack = [root];\n\n\twhile (!stream.eof()) {\n\t\tif (m = match(stream)) {\n\t\t\tname = getName(m);\n\n\t\t\tif (m.type === 'open') {\n\t\t\t\t// opening tag\n\t\t\t\tnode = new Node(stream, 'tag', m);\n\t\t\t\tlast(stack).addChild(node);\n\t\t\t\tif (special.has(name)) {\n\t\t\t\t\tnode.close = consumeSpecial(stream, special.get(name));\n\t\t\t\t} else if (!isEmpty(m, name)) {\n\t\t\t\t\tstack.push(node);\n\t\t\t\t}\n\t\t\t} else if (m.type === 'close') {\n\t\t\t\t// closing tag, find it’s matching opening tag\n\t\t\t\tfor (let i = stack.length - 1; i > 0; i--) {\n\t\t\t\t\tif (stack[i].name.toLowerCase() === name) {\n\t\t\t\t\t\tstack[i].close = m;\n\t\t\t\t\t\tstack = stack.slice(0, i);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlast(stack).addChild(new Node(stream, m.type, m));\n\t\t\t}\n\t\t} else {\n\t\t\tstream.next();\n\t\t}\n\t}\n\n\treturn root;\n}\n\n/**\n * Matches known token in current state of given stream\n * @param  {ContentStreamReader} stream\n * @return {Token}\n */\nfunction match(stream) {\n\t// fast-path optimization: check for `<` code\n\tif (stream.peek() === 60 /* < */) {\n\t\treturn comment(stream) || cdata(stream) || tag(stream);\n\t}\n}\n\n/**\n * @param  {StreamReader} stream\n * @param  {Number[]} codes\n * @return {Token}\n */\nfunction consumeSpecial(stream, codes) {\n\tconst start = stream.pos;\n\tlet m;\n\n\twhile (!stream.eof()) {\n\t\tif (eatArray(stream, codes)) {\n\t\t\tstream.pos = stream.start;\n\t\t\treturn tag(stream);\n\t\t}\n\t\tstream.next();\n\t}\n\n\tstream.pos = start;\n\treturn null;\n}\n\n/**\n * Returns name of given matched token\n * @param  {Token} tag\n * @return {String}\n */\nfunction getName(tag$$1) {\n\treturn tag$$1.name ? tag$$1.name.value.toLowerCase() : `#${tag$$1.type}`;\n}\n\nfunction last(arr) {\n\treturn arr[arr.length - 1];\n}\n\nexport { defaultOptions, match };export default parse;\n","/**\n * A streaming, character code-based string reader\n */\nclass StreamReader {\n\tconstructor(string, start, end) {\n\t\tif (end == null && typeof string === 'string') {\n\t\t\tend = string.length;\n\t\t}\n\n\t\tthis.string = string;\n\t\tthis.pos = this.start = start || 0;\n\t\tthis.end = end;\n\t}\n\n\t/**\n\t * Returns true only if the stream is at the end of the file.\n\t * @returns {Boolean}\n\t */\n\teof() {\n\t\treturn this.pos >= this.end;\n\t}\n\n\t/**\n\t * Creates a new stream instance which is limited to given `start` and `end`\n\t * range. E.g. its `eof()` method will look at `end` property, not actual\n\t * stream end\n\t * @param  {Point} start\n\t * @param  {Point} end\n\t * @return {StreamReader}\n\t */\n\tlimit(start, end) {\n\t\treturn new this.constructor(this.string, start, end);\n\t}\n\n\t/**\n\t * Returns the next character code in the stream without advancing it.\n\t * Will return NaN at the end of the file.\n\t * @returns {Number}\n\t */\n\tpeek() {\n\t\treturn this.string.charCodeAt(this.pos);\n\t}\n\n\t/**\n\t * Returns the next character in the stream and advances it.\n\t * Also returns <code>undefined</code> when no more characters are available.\n\t * @returns {Number}\n\t */\n\tnext() {\n\t\tif (this.pos < this.string.length) {\n\t\t\treturn this.string.charCodeAt(this.pos++);\n\t\t}\n\t}\n\n\t/**\n\t * `match` can be a character code or a function that takes a character code\n\t * and returns a boolean. If the next character in the stream 'matches'\n\t * the given argument, it is consumed and returned.\n\t * Otherwise, `false` is returned.\n\t * @param {Number|Function} match\n\t * @returns {Boolean}\n\t */\n\teat(match) {\n\t\tconst ch = this.peek();\n\t\tconst ok = typeof match === 'function' ? match(ch) : ch === match;\n\n\t\tif (ok) {\n\t\t\tthis.next();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\t/**\n\t * Repeatedly calls <code>eat</code> with the given argument, until it\n\t * fails. Returns <code>true</code> if any characters were eaten.\n\t * @param {Object} match\n\t * @returns {Boolean}\n\t */\n\teatWhile(match) {\n\t\tconst start = this.pos;\n\t\twhile (!this.eof() && this.eat(match)) {}\n\t\treturn this.pos !== start;\n\t}\n\n\t/**\n\t * Backs up the stream n characters. Backing it up further than the\n\t * start of the current token will cause things to break, so be careful.\n\t * @param {Number} n\n\t */\n\tbackUp(n) {\n\t\tthis.pos -= (n || 1);\n\t}\n\n\t/**\n\t * Get the string between the start of the current token and the\n\t * current stream position.\n\t * @returns {String}\n\t */\n\tcurrent() {\n\t\treturn this.substring(this.start, this.pos);\n\t}\n\n\t/**\n\t * Returns substring for given range\n\t * @param  {Number} start\n\t * @param  {Number} [end]\n\t * @return {String}\n\t */\n\tsubstring(start, end) {\n\t\treturn this.string.slice(start, end);\n\t}\n\n\t/**\n\t * Creates error object with current stream state\n\t * @param {String} message\n\t * @return {Error}\n\t */\n\terror(message) {\n\t\tconst err = new Error(`${message} at char ${this.pos + 1}`);\n\t\terr.originalMessage = message;\n\t\terr.pos = this.pos;\n\t\terr.string = this.string;\n\t\treturn err;\n\t}\n}\n\nexport default StreamReader;\n","/**\n * Methods for consuming quoted values\n */\n\nconst SINGLE_QUOTE = 39; // '\nconst DOUBLE_QUOTE = 34; // \"\n\nconst defaultOptions = {\n\tescape: 92,   // \\ character\n\tthrows: false\n};\n\n/**\n * Consumes 'single' or \"double\"-quoted string from given string, if possible\n * @param  {StreamReader} stream\n * @param  {Number}  options.escape A character code of quote-escape symbol\n * @param  {Boolean} options.throws Throw error if quotes string can’t be properly consumed\n * @return {Boolean} `true` if quoted string was consumed. The contents\n *                   of quoted string will be availabe as `stream.current()`\n */\nvar eatQuoted = function(stream, options) {\n\toptions = options ? Object.assign({}, defaultOptions, options) : defaultOptions;\n\tconst start = stream.pos;\n\tconst quote = stream.peek();\n\n\tif (stream.eat(isQuote)) {\n\t\twhile (!stream.eof()) {\n\t\t\tswitch (stream.next()) {\n\t\t\t\tcase quote:\n\t\t\t\t\tstream.start = start;\n\t\t\t\t\treturn true;\n\n\t\t\t\tcase options.escape:\n\t\t\t\t\tstream.next();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If we’re here then stream wasn’t properly consumed.\n\t\t// Revert stream and decide what to do\n\t\tstream.pos = start;\n\n\t\tif (options.throws) {\n\t\t\tthrow stream.error('Unable to consume quoted string');\n\t\t}\n\t}\n\n\treturn false;\n};\n\nfunction isQuote(code) {\n\treturn code === SINGLE_QUOTE || code === DOUBLE_QUOTE;\n}\n\n/**\n * Check if given code is a number\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isNumber(code) {\n\treturn code > 47 && code < 58;\n}\n\n/**\n * Check if given character code is alpha code (letter through A to Z)\n * @param  {Number}  code\n * @param  {Number}  [from]\n * @param  {Number}  [to]\n * @return {Boolean}\n */\nfunction isAlpha(code, from, to) {\n\tfrom = from || 65; // A\n\tto   = to   || 90; // Z\n\tcode &= ~32; // quick hack to convert any char code to uppercase char code\n\n\treturn code >= from && code <= to;\n}\n\n/**\n * Check if given character code is alpha-numeric (letter through A to Z or number)\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isAlphaNumeric(code) {\n\treturn isNumber(code) || isAlpha(code);\n}\n\nfunction isWhiteSpace(code) {\n\treturn code === 32   /* space */\n\t\t|| code === 9    /* tab */\n\t\t|| code === 160; /* non-breaking space */\n}\n\n/**\n * Check if given character code is a space\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isSpace(code) {\n\treturn isWhiteSpace(code)\n\t\t|| code === 10  /* LF */\n\t\t|| code === 13; /* CR */\n}\n\nconst defaultOptions$1 = {\n\tescape: 92,   // \\ character\n\tthrows: false\n};\n\n/**\n * Eats paired characters substring, for example `(foo)` or `[bar]`\n * @param  {StreamReader} stream\n * @param  {Number} open      Character code of pair openinig\n * @param  {Number} close     Character code of pair closing\n * @param  {Object} [options]\n * @return {Boolean}       Returns `true` if chacarter pair was successfully\n *                         consumed, it’s content will be available as `stream.current()`\n */\nfunction eatPair(stream, open, close, options) {\n\toptions = options ? Object.assign({}, defaultOptions$1, options) : defaultOptions$1;\n\tconst start = stream.pos;\n\n\tif (stream.eat(open)) {\n\t\tlet stack = 1, ch;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (eatQuoted(stream, options)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tch = stream.next();\n\t\t\tif (ch === open) {\n\t\t\t\tstack++;\n\t\t\t} else if (ch === close) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tstream.start = start;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (ch === options.escape) {\n\t\t\t\tstream.next();\n\t\t\t}\n\t\t}\n\n\t\t// If we’re here then paired character can’t be consumed\n\t\tstream.pos = start;\n\n\t\tif (options.throws) {\n\t\t\tthrow stream.error(`Unable to find matching pair for ${String.fromCharCode(open)}`);\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport { eatQuoted, isQuote, isAlpha, isNumber, isAlphaNumeric, isSpace, isWhiteSpace, eatPair };\n","import StreamReader from '@emmetio/stream-reader';\nimport { eatPair, isAlpha, isNumber, isQuote, isSpace } from '@emmetio/stream-reader-utils';\n\n/**\n * Abstract container that contains nested nodes or other containers\n */\nclass Node {\n\tconstructor(type) {\n\t\tthis.type = type;\n\t\tthis.children = [];\n\t\tthis.parent = null;\n\t}\n\n\tget firstChild() {\n\t\treturn this.children[0];\n\t}\n\n\tget nextSibling() {\n\t\tconst ix = this.index();\n\t\treturn ix !== -1 ? this.parent.children[ix + 1] : null;\n\t}\n\n\tget previousSibling() {\n\t\tconst ix = this.index();\n\t\treturn ix !== -1 ? this.parent.children[ix - 1] : null;\n\t}\n\n\t/**\n\t * Returns current element’s index in parent list of child nodes\n\t * @return {Number}\n\t */\n\tindex() {\n\t\treturn this.parent ? this.parent.children.indexOf(this) : -1;\n\t}\n\n\t/**\n\t * Adds given node as a child\n\t * @param {Node} node\n\t * @return {Node} Current node\n\t */\n\tadd(node) {\n\t\tif (node) {\n\t\t\tnode.remove();\n\t\t\tthis.children.push(node);\n\t\t\tnode.parent = this;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes current node from its parent\n\t * @return {Node} Current node\n\t */\n\tremove() {\n\t\tif (this.parent) {\n\t\t\tconst ix = this.index();\n\t\t\tif (ix !== -1) {\n\t\t\t\tthis.parent.children.splice(ix, 1);\n\t\t\t\tthis.parent = null;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nclass Stylesheet extends Node {\n\tconstructor() {\n\t\tsuper('stylesheet');\n\t\tthis.comments = [];\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\tconst node = this.firstChild;\n\t\treturn node && node.start;\n\t}\n\n\t/**\n\t * Returns node’s end position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\tconst node = this.children[this.children.length - 1];\n\t\treturn node && node.end;\n\t}\n\n\t/**\n\t * Adds comment token into a list.\n\t * This somewhat awkward feature is required to properly detect comment\n\t * ranges. Specifically, in Atom: it’s API provides scopes limited to current\n\t * line only\n\t * @param {Token} token\n\t */\n\taddComment(token) {\n\t\tthis.comments.push(token);\n\t}\n}\n\n/**\n * Removes tokens that matches given criteria from start and end of given list\n * @param  {Token[]} tokens\n * @return {Token[]}\n */\nfunction trimTokens(tokens) {\n\ttokens = tokens.slice();\n\tlet len;\n\twhile (len !== tokens.length) {\n\t\tlen = tokens.length;\n\t\tif (isFormattingToken(tokens[0])) {\n\t\t\ttokens.shift();\n\t\t}\n\n\t\tif (isFormattingToken(last(tokens))) {\n\t\t\ttokens.pop();\n\t\t}\n\t}\n\n\treturn tokens;\n}\n\n/**\n * Trims formatting tokens (whitespace and comments) from the beginning and end\n * of given token list\n * @param  {Token[]} tokens\n * @return {Token[]}\n */\nfunction trimFormatting(tokens) {\n\treturn trimTokens(tokens, isFormattingToken);\n}\n\n/**\n * Check if given token is a formatting one (whitespace or comment)\n * @param  {Token}  token\n * @return {Boolean}\n */\nfunction isFormattingToken(token) {\n\tconst type = token && token.type;\n\treturn type === 'whitespace' || type === 'comment';\n}\n\n/**\n * Consumes string char-by-char from given stream\n * @param  {StreamReader} stream\n * @param  {String} string\n * @return {Boolean} Returns `true` if string was completely consumed\n */\nfunction eatString(stream, string) {\n\tconst start = stream.pos;\n\n\tfor (let i = 0, il = string.length; i < il; i++) {\n\t\tif (!stream.eat(string.charCodeAt(i))) {\n\t\t\tstream.pos = start;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction consume(stream, match) {\n\tconst start = stream.pos;\n\tif (stream.eat(match)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction consumeWhile(stream, match) {\n\tconst start = stream.pos;\n\tif (stream.eatWhile(match)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction last(arr) {\n\treturn arr[arr.length - 1];\n}\n\nfunction valueOf(token) {\n\treturn token && token.valueOf();\n}\n\n/**\n * A structure describing text fragment in content stream. It may contain\n * other sub-fragments (also tokens) that represent current fragments’ logical\n * parts\n */\nclass Token {\n\t/**\n\t * @param {StreamReader} stream\n\t * @param {String}       type    Token type\n\t * @param {Object}       [start] Tokens’ start position in `stream`\n\t * @param {Object}       [end]   Tokens’ end position in `stream`\n\t */\n\tconstructor(stream, type, start, end) {\n\t\tthis.stream = stream;\n\t\tthis.start = start != null ? start : stream.start;\n\t\tthis.end = end != null ? end : stream.pos;\n\t\tthis.type = type;\n\n\t\tthis._props = null;\n\t\tthis._value = null;\n\t\tthis._items = null;\n\t}\n\n\tget size() {\n\t\treturn this._items ? this._items.length : 0;\n\t}\n\n\tget items() {\n\t\treturn this._items;\n\t}\n\n\tclone(start, end) {\n\t\treturn new this.constructor(this.stream, this.type,\n\t\t\tstart != null ? start : this.start,\n\t\t\tend != null ? end : this.end);\n\t}\n\n\tadd(item) {\n\t\tif (Array.isArray(item)) {\n\t\t\tfor (let i = 0, il = item.length; i < il; i++) {\n\t\t\t\tthis.add(item[i]);\n\t\t\t}\n\t\t} else if (item) {\n\t\t\tif (!this._items) {\n\t\t\t\tthis._items = [item];\n\t\t\t} else {\n\t\t\t\tthis._items.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tremove(item) {\n\t\tif (this._items) {\n\t\t\tconst ix = this._items.indexOf(item);\n\t\t\tif (ix !== -1 ) {\n\t\t\t\tthis._items.splice(ix, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\titem(i) {\n\t\tconst size = this.size;\n\t\treturn this._items && this._items[(size + i) % size];\n\t}\n\n\tlimit() {\n\t\treturn this.stream.limit(this.start, this.end);\n\t}\n\n\tslice(from, to) {\n\t\tconst token = this.clone();\n\t\tconst items = this._items && this._items.slice(from, to);\n\t\tif (items && items.length) {\n\t\t\ttoken.start = items[0].start;\n\t\t\ttoken.end = items[items.length - 1].end;\n\t\t\ttoken.add(items);\n\t\t} else if (items) {\n\t\t\t// Empty token\n\t\t\ttoken.start = token.end;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\tproperty(name, value) {\n\t\tif (typeof value !== 'undefined') {\n\t\t\t// set property value\n\t\t\tif (!this._props) {\n\t\t\t\tthis._props = {};\n\t\t\t}\n\n\t\t\tthis._props[name] = value;\n\t\t}\n\n\t\treturn this._props && this._props[name];\n\t}\n\n\t/**\n\t * Returns token textual representation\n\t * @return {String}\n\t */\n\ttoString() {\n\t\treturn `${this.valueOf()} [${this.start}, ${this.end}] (${this.type})`;\n\t}\n\n\tvalueOf() {\n\t\tif (this._value === null) {\n\t\t\tthis._value = this.stream.substring(this.start, this.end);\n\t\t}\n\n\t\treturn this._value;\n\t}\n}\n\nconst COMMA           = 44;  // ,\nconst PROP_DELIMITER$1  = 58;  // :\nconst PROP_TERMINATOR$1 = 59;  // ;\nconst RULE_START$1      = 123; // {\nconst RULE_END$1        = 125; // }\n\nconst types = new Map()\n\t.set(COMMA, 'comma')\n\t.set(PROP_DELIMITER$1, 'propertyDelimiter')\n\t.set(PROP_TERMINATOR$1, 'propertyTerminator')\n\t.set(RULE_START$1, 'ruleStart')\n\t.set(RULE_END$1, 'ruleEnd');\n\n/**\n * Consumes separator token from given string\n */\nfunction separator(stream) {\n\tif (isSeparator(stream.peek())) {\n\t\tconst start = stream.pos;\n\t\tconst type = types.get(stream.next());\n\t\tconst token = new Token(stream, 'separator', start);\n\n\t\ttoken.property('type', type);\n\t\treturn token;\n\t}\n}\n\n\n\nfunction isSeparator(code) {\n\treturn code === COMMA\n\t\t|| code === PROP_DELIMITER$1 || code === PROP_TERMINATOR$1\n\t\t|| code === RULE_START$1 || code === RULE_END$1;\n}\n\nconst ARGUMENTS_START = 40;  // (\nconst ARGUMENTS_END   = 41;  // )\n\nvar args = function(stream, tokenConsumer) {\n\tif (stream.peek() === ARGUMENTS_START) {\n\t\tconst start = stream.pos;\n\t\tstream.next();\n\n\t\tconst tokens = [];\n\t\tlet t;\n\t\t// in LESS, it’s possible to separate arguments list either by `;` or `,`.\n\t\t// In first case, we should keep comma-separated item as a single argument\n\t\tlet usePropTerminator = false;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (isUnexpectedTerminator(stream.peek()) || stream.eat(ARGUMENTS_END)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tt = tokenConsumer(stream);\n\t\t\tif (!t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isSemicolonSeparator(t)) {\n\t\t\t\tusePropTerminator = true;\n\t\t\t}\n\n\t\t\ttokens.push(t);\n\t\t}\n\n\t\tstream.start = start;\n\t\treturn createArgumentList(stream, tokens, usePropTerminator);\n\t}\n};\n\nfunction isUnexpectedTerminator(code) {\n\treturn code === RULE_START$1 || code === RULE_END$1;\n}\n\nfunction createArgumentList(stream, tokens, usePropTerminator) {\n\tconst argsToken = new Token(stream, 'arguments');\n\tconst isSeparator = usePropTerminator ? isSemicolonSeparator : isCommaSeparator;\n\tlet arg = [];\n\n\tfor (let i = 0, il = tokens.length, token; i < il; i++) {\n\t\ttoken = tokens[i];\n\t\tif (isSeparator(token)) {\n\t\t\targsToken.add(createArgument(stream, arg) || createEmptyArgument(stream, token.start));\n\t\t\targ.length = 0;\n\t\t} else {\n\t\t\targ.push(token);\n\t\t}\n\t}\n\n\tif (arg.length) {\n\t\targsToken.add(createArgument(stream, arg));\n\t}\n\n\treturn argsToken;\n}\n\nfunction createArgument(stream, tokens) {\n\ttokens = trimFormatting(tokens);\n\n\tif (tokens.length) {\n\t\tconst arg = new Token(stream, 'argument', tokens[0].start, last(tokens).end);\n\n\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\targ.add(tokens[i]);\n\t\t}\n\n\t\treturn arg;\n\t}\n}\n\nfunction createEmptyArgument(stream, pos) {\n\tconst token = new Token(stream, 'argument', pos, pos);\n\ttoken.property('empty', true);\n\treturn token;\n}\n\nfunction isCommaSeparator(token) {\n\treturn token.property('type') === 'comma';\n}\n\nfunction isSemicolonSeparator(token) {\n\treturn token.property('type') === 'propertyTerminator';\n}\n\nconst HYPHEN     = 45;\nconst UNDERSCORE = 95;\n\nfunction ident(stream) {\n\treturn eatIdent(stream) && new Token(stream, 'ident');\n}\n\nfunction eatIdent(stream) {\n\tconst start = stream.pos;\n\n\tstream.eat(HYPHEN);\n\tif (stream.eat(isIdentStart)) {\n\t\tstream.eatWhile(isIdent);\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction isIdentStart(code) {\n\treturn code === UNDERSCORE || code === HYPHEN || isAlpha(code) || code >= 128;\n}\n\nfunction isIdent(code) {\n\treturn isNumber(code) || isIdentStart(code);\n}\n\nfunction prefixed(stream, tokenType, prefix, body, allowEmptyBody) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(prefix)) {\n\t\tconst bodyToken = body(stream, start);\n\t\tif (bodyToken || allowEmptyBody) {\n\t\t\tstream.start = start;\n\t\t\treturn new Token(stream, tokenType, start).add(bodyToken);\n\t\t}\n\t}\n\n\tstream.pos = start;\n}\n\nconst AT = 64; // @\n\n/**\n * Consumes at-keyword from given stream\n */\nfunction atKeyword(stream) {\n\treturn prefixed(stream, 'at-keyword', AT, ident);\n}\n\nconst HASH = 35; // #\nconst AT$1   = 64; // @\n\n/**\n * Consumes interpolation token, e.g. `#{expression}`\n * @param  {StreamReader} stream\n * @param  {Function} tokenConsumer\n * @return {Token}\n */\nfunction interpolation(stream, tokenConsumer) {\n\tconst start = stream.pos;\n\ttokenConsumer = tokenConsumer || defaultTokenConsumer;\n\n\tif ((stream.eat(HASH) || stream.eat(AT$1)) && stream.eat(RULE_START$1)) {\n\t\tconst container = new Token(stream, 'interpolation', start);\n\t\tlet stack = 1, token;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (stream.eat(RULE_START$1)) {\n\t\t\t\tstack++;\n\t\t\t} else if (stream.eat(RULE_END$1)) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tcontainer.end = stream.pos;\n\t\t\t\t\treturn container;\n\t\t\t\t}\n\t\t\t} else if (token = tokenConsumer(stream)) {\n\t\t\t\tcontainer.add(token);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tstream.pos = start;\n}\n\nfunction eatInterpolation(stream) {\n\tconst start = stream.pos;\n\n\tif ((stream.eat(HASH) || stream.eat(AT$1)) && eatPair(stream, RULE_START$1, RULE_END$1)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction defaultTokenConsumer(stream) {\n\tconst start = stream.pos;\n\n\twhile (!stream.eof()) {\n\t\tif (stream.peek() === RULE_END$1) {\n\t\t\tbreak;\n\t\t}\n\n\t\teatString$1(stream) || stream.next();\n\t}\n\n\tif (start !== stream.pos) {\n\t\treturn new Token(stream, 'expression', start);\n\t}\n}\n\n/**\n * Consumes quoted string from current string and returns token with consumed\n * data or `null`, if string wasn’t consumed\n * @param  {StreamReader} stream\n * @return {StringToken}\n */\nfunction string(stream) {\n\treturn eatString$1(stream, true);\n}\n\nfunction eatString$1(stream, asToken) {\n\tlet ch = stream.peek(), pos, tokens, token;\n\n\tif (isQuote(ch)) {\n\t\tstream.start = stream.pos;\n\t\tstream.next();\n\t\tconst quote = ch;\n\t\tconst valueStart = stream.pos;\n\n\t\twhile (!stream.eof()) {\n\t\t\tpos = stream.pos;\n\t\t\tif (stream.eat(quote) || stream.eat(isNewline)) {\n\t\t\t\t// found end of string or newline without preceding '\\',\n\t\t\t\t// which is not allowed (don’t throw error, for now)\n\t\t\t\tbreak;\n\t\t\t} else if (stream.eat(92 /* \\ */)) {\n\t\t\t\t// backslash allows newline in string\n\t\t\t\tstream.eat(isNewline);\n\t\t\t} else if (asToken && (token = interpolation(stream))) {\n\t\t\t\tif (!tokens) {\n\t\t\t\t\ttokens = [token];\n\t\t\t\t} else {\n\t\t\t\t\ttokens.push(token);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstream.next();\n\t\t}\n\n\t\t// Either reached EOF or explicitly stopped at string end\n\t\t// NB use extra `asToken` param to return boolean instead of token to reduce\n\t\t// memory allocations and improve performance\n\t\tif (asToken) {\n\t\t\tconst token = new Token(stream, 'string');\n\t\t\tconst inner = new Token(stream, 'unquoted', valueStart, pos);\n\t\t\tinner.add(tokens);\n\t\t\ttoken.add(inner);\n\t\t\ttoken.property('quote', quote);\n\t\t\treturn token;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction isNewline(code) {\n\treturn code === 10  /* LF */ || code === 13 /* CR */;\n}\n\nconst ASTERISK = 42;\nconst SLASH    = 47;\n\n/**\n * Consumes comment from given stream: either multi-line or single-line\n * @param  {StreamReader} stream\n * @return {CommentToken}\n */\nvar comment = function(stream) {\n\treturn singleLineComment(stream) || multiLineComment(stream);\n};\n\nfunction singleLineComment(stream) {\n\tif (eatSingleLineComment(stream)) {\n\t\tconst token = new Token(stream, 'comment');\n\t\ttoken.property('type', 'single-line');\n\t\treturn token;\n\t}\n}\n\nfunction multiLineComment(stream) {\n\tif (eatMultiLineComment(stream)) {\n\t\tconst token = new Token(stream, 'comment');\n\t\ttoken.property('type', 'multiline');\n\t\treturn token;\n\t}\n}\n\nfunction eatComment(stream) {\n\treturn eatSingleLineComment(stream) || eatMultiLineComment(stream);\n}\n\nfunction eatSingleLineComment(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(SLASH) && stream.eat(SLASH)) {\n\t\t// single-line comment, consume till the end of line\n\t\tstream.start = start;\n\t\twhile (!stream.eof()) {\n\t\t\tif (isLineBreak(stream.next())) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction eatMultiLineComment(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(SLASH) && stream.eat(ASTERISK)) {\n\t\twhile (!stream.eof()) {\n\t\t\tif (stream.next() === ASTERISK && stream.eat(SLASH)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction isLineBreak(code) {\n\treturn code === 10 /* LF */ || code === 13 /* CR */;\n}\n\n/**\n * Consumes white-space tokens from given stream\n */\nfunction whitespace(stream) {\n\treturn eatWhitespace(stream) && new Token(stream, 'whitespace');\n}\n\nfunction eatWhitespace(stream) {\n\treturn consumeWhile(stream, isSpace);\n}\n\nconst ATTR_START = 91; // [\nconst ATTR_END   = 93; // ]\n\n/**\n * Consumes attribute from given string, e.g. value between [ and ]\n * @param  {StreamReader} stream\n * @return {AttributeToken}\n */\nfunction eatAttribuite(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(ATTR_START)) {\n\t\tskip(stream);\n\t\tconst name = ident(stream);\n\n\t\tskip(stream);\n\t\tconst op = operator(stream);\n\n\t\tskip(stream);\n\t\tconst value = string(stream) || ident(stream);\n\n\t\tskip(stream);\n\t\tstream.eat(ATTR_END);\n\n\t\treturn new Token(stream, 'attribute', start).add(name).add(op).add(value);\n\t}\n}\n\nfunction skip(stream) {\n\twhile (!stream.eof()) {\n\t\tif (!eatWhitespace(stream) && !eatComment(stream)) {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nfunction operator(stream) {\n\treturn consumeWhile(stream, isOperator) && new Token(stream, 'operator');\n}\n\nfunction isOperator(code) {\n\treturn code === 126 /* ~ */\n\t\t|| code === 124 /* | */\n\t\t|| code === 94  /* ^ */\n\t\t|| code === 36  /* $ */\n\t\t|| code === 42  /* * */\n\t\t|| code === 61; /* = */\n}\n\nconst BACKTICK = 96; // `\n\n/**\n * Consumes backtick token, e.g. `...`\n * @param  {StreamReader} stream\n * @param  {Function} tokenConsumer\n * @return {Token}\n */\nfunction backtick(stream) {\n\tif (eatBacktick(stream)) {\n\t\treturn new Token(stream, 'backtick');\n\t}\n}\n\nfunction eatBacktick(stream) {\n\tconst start = stream.pos;\n\n\tif (eatPair(stream, BACKTICK, BACKTICK)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nconst CLASS = 46; // .\n\n/**\n * Consumes class fragment from given stream, e.g. `.foo`\n * @param  {StreamReader} stream\n * @return {ClassToken}\n */\nfunction className(stream) {\n\treturn prefixed(stream, 'class', CLASS, ident);\n}\n\nconst ADJACENT_SIBLING = 43;  // +\nconst GENERAL_SIBLING  = 126; // ~\nconst CHILD            = 62;  // >\nconst NESTING          = 38;  // &\n\nconst types$1 = {\n\t[ADJACENT_SIBLING]: 'adjacentSibling',\n\t[GENERAL_SIBLING]: 'generalSibling',\n\t[CHILD]: 'child',\n\t[NESTING]: 'nesting'\n};\n\n/**\n * Consumes combinator token from given string\n */\nvar combinator = function(stream) {\n\tif (isCombinator(stream.peek())) {\n\t\tconst start = stream.pos;\n\t\tconst type = types$1[stream.next()];\n\t\tconst token = new Token(stream, 'combinator', start);\n\n\t\ttoken.property('type', type);\n\t\treturn token;\n\t}\n};\n\n\n\nfunction isCombinator(code) {\n\treturn code === ADJACENT_SIBLING || code === GENERAL_SIBLING\n\t\t|| code === NESTING || code === CHILD;\n}\n\nconst HASH$1 = 35;\n\nfunction hash(stream) {\n\treturn prefixed(stream, 'hash', HASH$1, hashValue, true);\n}\n\n\n\nfunction hashValue(stream) {\n\tif (eatHashValue(stream)) {\n\t\treturn new Token(stream, 'hash-value');\n\t}\n}\n\nfunction eatHashValue(stream) {\n\treturn consumeWhile(stream, isHashValue);\n}\n\nfunction isHashValue(code) {\n\treturn isNumber(code) || isAlpha(code, 65 /* A */, 70 /* F */)\n\t\t|| code === 95 /* _ */ || code === 45 /* - */\n\t\t|| code > 128; /* non-ASCII */\n}\n\nconst ID = 35; // #\n\n/**\n * Consumes id fragment from given stream, e.g. `#foo`\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction id(stream) {\n\treturn prefixed(stream, 'id', ID, ident);\n}\n\nconst IMPORTANT = 33; // !\n\n/**\n * Consumes !important token\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction important(stream) {\n\treturn prefixed(stream, 'important', IMPORTANT, ident);\n}\n\nconst DOT = 46; // .\n\n/**\n * Consumes number from given string, e.g. `10px`\n * @param  {StreamReader} stream\n * @return {NumberToken}\n */\nfunction number(stream) {\n\tif (eatNumericPart(stream)) {\n\t\tconst start = stream.start;\n\t\tconst num = new Token(stream, 'value');\n\t\tconst unit = eatUnitPart(stream) ? new Token(stream, 'unit') : null;\n\n\t\treturn new Token(stream, 'number', start).add(num).add(unit);\n\t}\n}\n\n\n\nfunction eatNumericPart(stream) {\n\tconst start = stream.pos;\n\n\tstream.eat(isOperator$1);\n\tif (stream.eatWhile(isNumber)) {\n\t\tstream.start = start;\n\t\tconst decimalEnd = stream.pos;\n\n\t\tif (!(stream.eat(DOT) && stream.eatWhile(isNumber))) {\n\t\t\tstream.pos = decimalEnd;\n\t\t}\n\n\t\treturn true;\n\t} else if (stream.eat(DOT) && stream.eatWhile(isNumber)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\t// TODO eat exponent part\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction eatUnitPart(stream) {\n\treturn eatIdent(stream) || eatPercent(stream);\n}\n\nfunction eatPercent(stream) {\n\treturn consume(stream, 37 /* % */);\n}\n\nfunction isOperator$1(code) {\n\treturn code === 45 /* - */ || code === 43 /* + */;\n}\n\nconst NOT          = 33; // !\nconst MULTIPLY     = 42; // *\nconst PLUS         = 43; // +\nconst MINUS        = 45; // -\nconst DIVIDE       = 47; // /\nconst LESS_THAN    = 60; // <\nconst EQUALS       = 61; // =\nconst GREATER_THAN = 62; // <\n\nfunction operator$1(stream) {\n\treturn eatOperator(stream) && new Token(stream, 'operator');\n}\n\nfunction eatOperator(stream) {\n\tif (consume(stream, isEquality)) {\n\t\tstream.eatWhile(EQUALS);\n\t\treturn true;\n\t} else if (consume(stream, isOperator$2)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction isEquality(code) {\n\treturn code === NOT || code === LESS_THAN || code === EQUALS || code === GREATER_THAN;\n}\n\nfunction isOperator$2(code) {\n\treturn code === MULTIPLY || code === PLUS || code === MINUS || code === DIVIDE\n\t\t|| isEquality(code);\n}\n\nconst PSEUDO = 58; // :\n\n/**\n * Consumes pseudo-selector from given stream\n */\nvar pseudo = function(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eatWhile(PSEUDO)) {\n\t\tconst name = ident(stream);\n\t\tif (name) {\n\t\t\treturn new Token(stream, 'pseudo', start).add(name);\n\t\t}\n\t}\n\n\tstream.pos = start;\n};\n\n/**\n * Consumes unquoted value from given stream\n * @param  {StreamReader} stream\n * @return {UnquotedToken}\n */\nvar unquoted = function(stream) {\n\treturn eatUnquoted(stream) && new Token(stream, 'unquoted');\n};\n\nfunction eatUnquoted(stream) {\n\treturn consumeWhile(stream, isUnquoted);\n}\n\nfunction isUnquoted(code) {\n\treturn !isNaN(code) && !isQuote(code) && !isSpace(code)\n\t\t&& code !== 40 /* ( */ && code !== 41 /* ) */ && code !== 92 /* \\ */\n\t\t&& !isNonPrintable(code);\n}\n\nfunction isNonPrintable(code) {\n\treturn (code >= 0 && code <= 8) || code === 11\n\t|| (code >= 14 && code <= 31) || code === 127;\n}\n\n/**\n * Consumes URL token from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction url(stream) {\n\tconst start = stream.pos;\n\n\tif (eatString(stream, 'url(')) {\n\t\teatWhitespace(stream);\n\t\tconst value = string(stream) || unquoted(stream);\n\t\teatWhitespace(stream);\n\t\tstream.eat(41); // )\n\n\t\treturn new Token(stream, 'url', start).add(value);\n\t}\n\n\tstream.pos = start;\n}\n\nfunction eatUrl(stream) {\n\tconst start = stream.pos;\n\n\tif (eatString(stream, 'url(')) {\n\t\teatWhitespace(stream);\n\t\teatString$1(stream) || eatUnquoted(stream);\n\t\teatWhitespace(stream);\n\t\tstream.eat(41); // )\n\t\tstream.start = start;\n\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nconst VARIABLE = 36; // $\n\n/**\n * Consumes SCSS variable from given stream\n */\nfunction variable(stream) {\n\treturn prefixed(stream, 'variable', VARIABLE, variableName);\n}\n\n\n\nfunction variableName(stream) {\n\tif (eatVariableName(stream)) {\n\t\treturn new Token(stream, 'name');\n\t}\n}\n\nfunction eatVariableName(stream) {\n\treturn consumeWhile(stream, isVariableName);\n}\n\nfunction isVariableName(code) {\n\treturn code === VARIABLE || isIdent(code);\n}\n\n/**\n * Group tokens by commonly used context\n */\n\nfunction consumeToken(stream) {\n\tconst _token = any(stream) || args(stream, consumeToken);\n\tif (_token && _token.type === 'ident') {\n\t\tconst _args = args(stream, consumeToken);\n\t\tif (_args) {\n\t\t\t// An identifier followed by arguments – function call\n\t\t\treturn new Token(stream, 'function', _token.start, _args.end).add(_token).add(_args);\n\t\t}\n\t}\n\n\treturn _token || unknown(stream);\n}\n\nfunction any(stream) {\n\treturn formatting(stream) || url(stream) || selector(stream) || value(stream)\n\t\t|| separator(stream);\n}\n\nfunction selector(stream) {\n\treturn interpolation(stream) || backtick(stream) || ident(stream) || atKeyword(stream)\n\t\t|| className(stream) || id(stream) || pseudo(stream) || eatAttribuite(stream)\n\t\t|| combinator(stream);\n}\n\nfunction value(stream) {\n\treturn url(stream) || string(stream) || interpolation(stream) || backtick(stream) \n\t\t|| number(stream) || hash(stream) || keyword(stream) || important(stream) \n\t\t|| operator$1(stream);\n}\n\nfunction keyword(stream) {\n\treturn backtick(stream) || variable(stream) || atKeyword(stream) || ident(stream);\n}\n\nfunction formatting(stream) {\n\treturn comment(stream) || whitespace(stream);\n}\n\nfunction unknown(stream) {\n\tstream.start = stream.pos;\n\tconst ch = stream.next();\n\tif (ch != null) {\n\t\treturn new Token(stream, 'unknown');\n\t}\n}\n\n/**\n * Parses CSS rule selector\n * @param  {String|StreamReader} source\n * @return {Token[]}\n */\nfunction parseSelector(source) {\n\treturn parseList(source, 'selector');\n}\n\n/**\n * Parses CSS property name. Mostly used for LESS where\n * property-like entry might be used as a mixin call\n * @param {String|StreamReader} source\n * @return {Token}\n */\nfunction parsePropertyName(source) {\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst items = [];\n\n\twhile (!stream.eof()) {\n\t\titems.push(consumeToken(stream));\n\t}\n\n\tlet token;\n\tif (items.length === 1) {\n\t\ttoken = items[0];\n\t} else {\n\t\ttoken = new Token(stream, 'property-name', stream.start, stream.end);\n\t\tfor (let i = 0, il = items.length; i < il; i++) {\n\t\t\ttoken.add(items[i]);\n\t\t}\n\t}\n\n\treturn token;\n}\n\n/**\n * Parses CSS property value\n * @param  {String|StreamReader} source\n * @return {Token[]}\n */\nfunction parsePropertyValue(source) {\n\treturn parseList(source);\n}\n\n/**\n * Parses @media CSS rule expression\n * @param  {String|StreamReader} source\n * @return {Token[]}\n */\nfunction parseMediaExpression(source) {\n\treturn parseList(source);\n}\n\n/**\n * Parses given source into a set of tokens, separated by comma. Each token contains\n * parsed sub-items as independent tokens and so on. Mostly used to parse\n * selectors and property values\n * @param  {String|StreamReader} source     Source to parse\n * @param  {String}             [tokenType] Type of first-level tokens.\n *                                          Default is `item`\n * @return {Token[]}\n */\nfunction parseList(source, tokenType) {\n\ttokenType = tokenType || 'item';\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst items = [];\n\tconst fragments = [];\n\tconst flush = () => {\n\t\tconst clean = trimFormatting(fragments);\n\n\t\tif (clean.length) {\n\t\t\tconst item = new Token(stream, tokenType, clean[0].start, last(clean).end);\n\t\t\tfor (let i = 0; i < clean.length; i++) {\n\t\t\t\titem.add(clean[i]);\n\t\t\t}\n\t\t\titems.push(item);\n\t\t}\n\n\t\tfragments.length = 0;\n\t};\n\n\tlet token;\n\twhile (!stream.eof()) {\n\t\tif (stream.eat(44 /* , */)) {\n\t\t\tflush();\n\t\t} else if (token = consumeToken(stream)) {\n\t\t\tif (token.type !== 'comment') {\n\t\t\t\tfragments.push(token);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow stream.error('Unexpected character');\n\t\t}\n\t}\n\n\tflush();\n\treturn items;\n}\n\n/**\n * Creates CSS rule from given tokens\n * @param  {StreamReader} stream\n * @param  {Token[]} tokens\n * @param  {Token} [content]\n * @return {Rule}\n */\nfunction createRule(stream, tokens, contentStart, contentEnd) {\n\tif (!tokens.length) {\n\t\treturn null;\n\t}\n\n\tconst name = tokens[0];\n\tname.end = last(tokens).end;\n\n\treturn new Rule(stream, name, contentStart, contentEnd);\n}\n\n/**\n * Represents CSS rule\n * @type {Node}\n */\nclass Rule extends Node {\n\t/**\n\t * @param {StreamReader} stream\n\t * @param {Token} name         Rule’s name token\n\t * @param {Token} contentStart Rule’s content start token\n\t * @param {Token} [contentEnd] Rule’s content end token\n\t */\n\tconstructor(stream, name, contentStart, contentEnd) {\n\t\tsuper('rule');\n\t\tthis.stream = stream;\n\t\tthis.selectorToken = name;\n\t\tthis.contentStartToken = contentStart;\n\t\tthis.contentEndToken = contentEnd || contentStart;\n\t\tthis._parsedSelector = null;\n\t}\n\n\t/**\n\t * Returns rule selector\n\t * @return {String}\n\t */\n\tget selector() {\n\t\treturn valueOf(this.selectorToken);\n\t}\n\n\tget parsedSelector() {\n\t\tif (!this._parsedSelector) {\n\t\t\tthis._parsedSelector = parseSelector(this.selectorToken.limit());\n\t\t}\n\n\t\treturn this._parsedSelector;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\treturn this.selectorToken && this.selectorToken.start;\n\t}\n\n\t/**\n\t * Returns node’s end position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\tconst token = this.contentEndToken || this.contentStartToken || this.nameToken;\n\t\treturn token && token.end;\n\t}\n}\n\n/**\n * Creates CSS rule from given tokens\n * @param  {StreamReader} stream\n * @param  {Token[]} tokens\n * @param  {Token} [content]\n * @return {Rule}\n */\nfunction createAtRule(stream, tokens, contentStart, contentEnd) {\n\tif (!tokens.length) {\n\t\treturn null;\n\t}\n\n\tlet ix = 0, expression;\n\tconst name = tokens[ix++];\n    \n\tif (ix < tokens.length) {\n\t\texpression = tokens[ix++];\n\t\texpression.type = 'expression';\n\t\texpression.end = last(tokens).end;\n\t} else {\n\t\texpression = new Token(stream, 'expression', name.end, name.end);\n\t}\n\n\treturn new AtRule(stream, name, expression, contentStart, contentEnd);\n}\n\nclass AtRule extends Node {\n\tconstructor(stream, name, expression, contentStart, contentEnd) {\n\t\tsuper('at-rule');\n\t\tthis.stream = stream;\n\t\tthis.nameToken = name;\n\t\tthis.expressionToken = expression;\n\t\tthis.contentStartToken = contentStart;\n\t\tthis.contentEndToken = contentEnd || contentStart;\n\t\tthis._parsedExpression = null;\n\t}\n\n\t/**\n\t * Returns at-rule name\n\t * @return {String}\n\t */\n\tget name() {\n\t\treturn valueOf(this.nameToken && this.nameToken.item(0));\n\t}\n\n\tget expression() {\n\t\treturn valueOf(this.expressionToken);\n\t}\n\n\tget parsedExpression() {\n\t\tif (!this._parsedExpression) {\n\t\t\tthis._parsedExpression = parseMediaExpression(this.expressionToken.limit());\n\t\t}\n\n\t\treturn this._parsedExpression;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\treturn this.nameToken && this.nameToken.start;\n\t}\n\n\t/**\n\t * Returns node’s end position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\tconst token = this.contentEndToken || this.contentStartToken || this.nameToken;\n\t\treturn token && token.end;\n\t}\n}\n\n/**\n * Factory method that creates property node from given tokens\n * @param  {StreamReader} stream\n * @param  {Token[]}      tokens\n * @param  {Token}        terminator\n * @return {Property}\n */\nfunction createProperty(stream, tokens, terminator) {\n\t// NB in LESS, fragmented properties without value like `.foo.bar;` must be\n\t// treated like mixin call\n\tif (!tokens.length) {\n\t\treturn null;\n\t}\n\n\tlet separator, value, ix = 0;\n\tconst name = tokens[ix++];\n\n\tif (ix < tokens.length) {\n\t\tvalue = tokens[ix++];\n\t\tvalue.type = 'value';\n\t\tvalue.end = last(tokens).end;\n\t}\n\n\tif (name && value) {\n\t\tseparator = new Token(stream, 'separator', name.end, value.start);\n\t}\n\n\treturn new Property(\n\t\tstream,\n\t\tname,\n\t\tvalue,\n\t\tseparator,\n\t\tterminator\n\t);\n}\n\nclass Property extends Node {\n\tconstructor(stream, name, value, separator, terminator) {\n\t\tsuper('property');\n\t\tthis.stream = stream;\n\t\tthis.nameToken = name;\n\t\tthis.valueToken = value;\n\t\tthis._parsedName = null;\n\t\tthis._parsedValue = null;\n\n\t\tthis.separatorToken = separator;\n\t\tthis.terminatorToken = terminator;\n\t}\n\n\t/**\n\t * Property name\n\t * @return {String}\n\t */\n\tget name() {\n\t\treturn valueOf(this.nameToken);\n\t}\n\n\t/**\n\t * Returns parsed sub-tokens of current property name\n\t * @return {Token[]}\n\t */\n\tget parsedName() {\n\t\tif (!this._parsedName) {\n\t\t\tthis._parsedName = parsePropertyName(this.nameToken.limit());\n\t\t}\n\n\t\treturn this._parsedName;\n\t}\n\n\t/**\n\t * Property value\n\t * @return {String}\n\t */\n\tget value() {\n\t\treturn valueOf(this.valueToken);\n\t}\n\n\t/**\n\t * Parsed value parts: a list of tokens, separated by comma. Each token may\n\t * contains parsed sub-tokens and so on\n\t * @return {Token[]}\n\t */\n\tget parsedValue() {\n\t\tif (!this._parsedValue) {\n\t\t\tthis._parsedValue = parsePropertyValue(this.valueToken.limit());\n\t\t}\n\n\t\treturn this._parsedValue;\n\t}\n\n\tget separator() {\n\t\treturn valueOf(this.separatorToken);\n\t}\n\n\tget terminator() {\n\t\treturn valueOf(this.terminatorToken);\n\t}\n\n\tget start() {\n\t\tconst token = this.nameToken || this.separatorToken || this.valueToken\n\t\t\t|| this.terminatorToken;\n\t\treturn token && token.start;\n\t}\n\n\tget end() {\n\t\tconst token = this.terminatorToken || this.valueToken\n\t\t\t|| this.separatorToken || this.nameToken;\n\t\treturn token && token.end;\n\t}\n}\n\nconst LBRACE          = 40;  // (\nconst RBRACE          = 41;  // )\nconst PROP_DELIMITER  = 58;  // :\nconst PROP_TERMINATOR = 59;  // ;\nconst RULE_START      = 123; // {\nconst RULE_END        = 125; // }\n\nfunction parseStylesheet(source) {\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst root = new Stylesheet();\n\tlet ctx = root, child, accum, token;\n\tlet tokens = [];\n\tconst flush = () => {\n\t\tif (accum) {\n\t\t\ttokens.push(accum);\n\t\t\taccum = null;\n\t\t}\n\t};\n\n\twhile (!stream.eof()) {\n\t\tif (eatWhitespace(stream)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (token = comment(stream)) {\n\t\t\troot.addComment(token);\n\t\t\tcontinue;\n\t\t}\n\n\t\tstream.start = stream.pos;\n\n\t\tif (stream.eatWhile(PROP_DELIMITER)) {\n\t\t\t// Property delimiter can be either a real property delimiter or a\n\t\t\t// part of pseudo-selector.\n\t\t\tif (!tokens.length) {\n\t\t\t\tif (accum) {\n\t\t\t\t\t// No consumed tokens yet but pending token: most likely it’s\n\t\t\t\t\t// a CSS property\n\t\t\t\t\tflush();\n\t\t\t\t} else {\n\t\t\t\t\t// No consumend or accumulated token, seems like a start of\n\t\t\t\t\t// pseudo-selector, e.g. `::slotted`\n\t\t\t\t\taccum = new Token(stream, 'preparse');\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Skip delimiter if there are already consumend tokens: most likely\n\t\t\t// it’s a part of pseudo-selector\n\t\t} else if (stream.eat(PROP_TERMINATOR)) {\n\t\t\tflush();\n\t\t\tctx.add(createProperty(stream, tokens, new Token(stream, 'termintator')));\n\t\t\ttokens.length = 0;\n\t\t} else if (stream.eat(RULE_START)) {\n\t\t\tflush();\n\t\t\tif (tokens.length > 0) {\n\t\t\t\tchild = tokens[0].type === 'at-keyword'\n\t\t\t\t? createAtRule(stream, tokens, new Token(stream, 'body-start'))\n\t\t\t\t: createRule(stream, tokens, new Token(stream, 'body-start'));\n\t\t\t\tctx.add(child);\n\t\t\t\tctx = child;\n\t\t\t\ttokens.length = 0;\n\t\t\t}\n\t\t\t\n\t\t} else if (stream.eat(RULE_END)) {\n\t\t\tflush();\n\n\t\t\t// Finalize context section\n\t\t\tctx.add(createProperty(stream, tokens));\n\n\t\t\tif (ctx.type !== 'stylesheet') {\n\t\t\t\t// In case of invalid stylesheet with redundant `}`,\n\t\t\t\t// don’t modify root section.\n\t\t\t\tctx.contentEndToken = new Token(stream, 'body-end');\n\t\t\t\tctx = ctx.parent;\n\t\t\t}\n\n\t\t\ttokens.length = 0;\n\t\t} else if (token = atKeyword(stream)) {\n\t\t\t// Explictly consume @-tokens since it defines how rule or property\n\t\t\t// should be pre-parsed\n\t\t\tflush();\n\t\t\ttokens.push(token);\n\t\t} else if (eatUrl(stream) || eatInterpolation(stream) || eatBacktick(stream) \n\t\t\t\t|| eatBraces(stream, root) || eatString$1(stream) || stream.next()) {\n\t\t\t// NB explicitly consume `url()` token since it may contain\n\t\t\t// an unquoted url like `http://example.com` which interferes\n\t\t\t// with single-line comment\n\t\t\taccum = accum || new Token(stream, 'preparse');\n\t\t\taccum.end = stream.pos;\n\t\t} else {\n\t\t\tthrow new Error(`Unexpected end-of-stream at ${stream.pos}`);\n\t\t}\n\t}\n\n\tif (accum) {\n\t\ttokens.push(accum);\n\t}\n\n\t// Finalize all the rest properties\n\tctx.add(createProperty(stream, tokens));\n\n\t// Finalize unterminated rules\n\tstream.start = stream.pos;\n\twhile (ctx && ctx !== root) {\n\t\tctx.contentEndToken = new Token(stream, 'body-end');\n\t\tctx = ctx.parent;\n\t}\n\n\treturn root;\n}\n\n/**\n * Parses given source into tokens\n * @param  {String|StreamReader} source\n * @param  {Function} [consumer] Token consumer function, for example, `selector`,\n * `value` etc. from `lib/tokens` module. Default is generic `consumeToken`\n * @return {Token[]}\n */\nfunction lexer(source, consumer) {\n\tconsumer = consumer || consumeToken;\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst result = [];\n\tlet token;\n\n\twhile (!stream.eof() && (token = consumer(stream))) {\n\t\tresult.push(token);\n\t}\n\n\treturn result;\n}\n\n/**\n * Consumes content inside round braces. Mostly used to skip `;` token inside\n * expressions since in LESS it is also used to separate function arguments\n * @param  {StringReader} stream\n * @param  {Stylesheet}   root   A stylesheet root. Used to accumulate comments\n * @return {Boolean}\n */\nfunction eatBraces(stream, root) {\n\tif (stream.eat(LBRACE)) {\n\t\tlet stack = 1, token;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (stream.eat(RBRACE)) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (stream.eat(LBRACE)) {\n\t\t\t\tstack++;\n\t\t\t} else if (eatUrl(stream) || eatString$1(stream)) {\n\t\t\t\tcontinue;\n\t\t\t} else if (token = comment(stream)) {\n\t\t\t\troot.addComment(token);\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tstream.next();\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nexport { lexer, Token, any, selector, value, keyword, variable, formatting, comment, whitespace, ident, string, url, interpolation, backtick, parseMediaExpression, parsePropertyName, parsePropertyValue, parseSelector, createProperty, createRule, createAtRule };export default parseStylesheet;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* Based on @sergeche's work in his emmet plugin */\n\nimport { TextDocument, Position, Range, EndOfLine } from 'vscode';\n\n/**\n * A stream reader for VSCode's `TextDocument`\n * Based on @emmetio/stream-reader and @emmetio/atom-plugin\n */\nexport class DocumentStreamReader {\n\tprivate document: TextDocument;\n\tprivate start: Position;\n\tprivate _eof: Position;\n\tprivate _sof: Position;\n\tpublic pos: Position;\n\tprivate _eol: string;\n\n\tconstructor(document: TextDocument, pos?: Position, limit?: Range) {\n\n\t\tthis.document = document;\n\t\tthis.start = this.pos = pos ? pos : new Position(0, 0);\n\t\tthis._sof = limit ? limit.start : new Position(0, 0);\n\t\tthis._eof = limit ? limit.end : new Position(this.document.lineCount - 1, this._lineLength(this.document.lineCount - 1));\n\t\tthis._eol = this.document.eol === EndOfLine.LF ? '\\n' : '\\r\\n';\n\t}\n\n\t/**\n\t * Returns true only if the stream is at the start of the file.\n\t */\n\tsof(): boolean {\n\t\treturn this.pos.isBeforeOrEqual(this._sof);\n\t}\n\n\t/**\n\t * Returns true only if the stream is at the end of the file.\n\t */\n\teof(): boolean {\n\t\treturn this.pos.isAfterOrEqual(this._eof);\n\t}\n\n\t/**\n\t * Creates a new stream instance which is limited to given range for given document\n\t */\n\tlimit(start: Position, end: Position): DocumentStreamReader {\n\t\treturn new DocumentStreamReader(this.document, start, new Range(start, end));\n\t}\n\n\t/**\n\t * Returns the next character code in the stream without advancing it.\n\t * Will return NaN at the end of the file.\n\t */\n\tpeek(): number {\n\t\tif (this.eof()) {\n\t\t\treturn NaN;\n\t\t}\n\t\tconst line = this.document.lineAt(this.pos.line).text;\n\t\treturn this.pos.character < line.length ? line.charCodeAt(this.pos.character) : this._eol.charCodeAt(this.pos.character - line.length);\n\t}\n\n\t/**\n\t * Returns the next character in the stream and advances it.\n\t * Also returns NaN when no more characters are available.\n\t */\n\tnext(): number {\n\t\tif (this.eof()) {\n\t\t\treturn NaN;\n\t\t}\n\n\t\tconst line = this.document.lineAt(this.pos.line).text;\n\t\tlet code: number;\n\t\tif (this.pos.character < line.length) {\n\t\t\tcode = line.charCodeAt(this.pos.character);\n\t\t\tthis.pos = this.pos.translate(0, 1);\n\t\t} else {\n\t\t\tcode = this._eol.charCodeAt(this.pos.character - line.length);\n\t\t\tthis.pos = new Position(this.pos.line + 1, 0);\n\t\t}\n\n\t\tif (this.eof()) {\n\t\t\t// restrict pos to eof, if in case it got moved beyond eof\n\t\t\tthis.pos = new Position(this._eof.line, this._eof.character);\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Backs up the stream n characters. Backing it up further than the\n\t * start of the current token will cause things to break, so be careful.\n\t */\n\tbackUp(n: number) {\n\t\tlet row = this.pos.line;\n\t\tlet column = this.pos.character;\n\t\tcolumn -= (n || 1);\n\n\t\twhile (row >= 0 && column < 0) {\n\t\t\trow--;\n\t\t\tcolumn += this._lineLength(row);\n\t\t}\n\n\t\tthis.pos = row < 0 || column < 0\n\t\t\t? new Position(0, 0)\n\t\t\t: new Position(row, column);\n\n\t\treturn this.peek();\n\t}\n\n\t/**\n\t * Get the string between the start of the current token and the\n\t * current stream position.\n\t */\n\tcurrent(): string {\n\t\treturn this.substring(this.start, this.pos);\n\t}\n\n\t/**\n\t * Returns contents for given range\n\t */\n\tsubstring(from: Position, to: Position): string {\n\t\treturn this.document.getText(new Range(from, to));\n\t}\n\n\t/**\n\t * Creates error object with current stream state\n\t */\n\terror(message: string): Error {\n\t\tconst err = new Error(`${message} at row ${this.pos.line}, column ${this.pos.character}`);\n\n\t\treturn err;\n\t}\n\n\t/**\n\t * Returns line length of given row, including line ending\n\t */\n\t_lineLength(row: number): number {\n\t\tif (row === this.document.lineCount - 1) {\n\t\t\treturn this.document.lineAt(row).text.length;\n\t\t}\n\t\treturn this.document.lineAt(row).text.length + this._eol.length;\n\t}\n\n\t/**\n\t * `match` can be a character code or a function that takes a character code\n\t * and returns a boolean. If the next character in the stream 'matches'\n\t * the given argument, it is consumed and returned.\n\t * Otherwise, `false` is returned.\n\t */\n\teat(match: number | Function): boolean {\n\t\tconst ch = this.peek();\n\t\tconst ok = typeof match === 'function' ? match(ch) : ch === match;\n\n\t\tif (ok) {\n\t\t\tthis.next();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\t/**\n\t * Repeatedly calls <code>eat</code> with the given argument, until it\n\t * fails. Returns <code>true</code> if any characters were eaten.\n\t */\n\teatWhile(match: number | Function): boolean {\n\t\tconst start = this.pos;\n\t\twhile (!this.eof() && this.eat(match)) { }\n\t\treturn !this.pos.isEqual(start);\n\t}\n}\n","module.exports = require(\"vscode-emmet-helper\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { parseDocument, validate, getHtmlNode } from './util';\nimport { HtmlNode } from 'EmmetNode';\n\nexport function removeTag() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\n\tlet rootNode = <HtmlNode>parseDocument(editor.document);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tlet indentInSpaces = '';\n\tconst tabSize: number = editor.options.tabSize ? +editor.options.tabSize : 0;\n\tfor (let i = 0; i < tabSize || 0; i++) {\n\t\tindentInSpaces += ' ';\n\t}\n\n\tlet rangesToRemove: vscode.Range[] = [];\n\teditor.selections.reverse().forEach(selection => {\n\t\trangesToRemove = rangesToRemove.concat(getRangeToRemove(editor, rootNode, selection, indentInSpaces));\n\t});\n\n\treturn editor.edit(editBuilder => {\n\t\trangesToRemove.forEach(range => {\n\t\t\teditBuilder.replace(range, '');\n\t\t});\n\t});\n}\n\nfunction getRangeToRemove(editor: vscode.TextEditor, rootNode: HtmlNode, selection: vscode.Selection, indentInSpaces: string): vscode.Range[] {\n\n\tlet nodeToUpdate = getHtmlNode(editor.document, rootNode, selection.start, true);\n\tif (!nodeToUpdate) {\n\t\treturn [];\n\t}\n\n\tlet openRange = new vscode.Range(nodeToUpdate.open.start, nodeToUpdate.open.end);\n\tlet closeRange: vscode.Range | null = null;\n\tif (nodeToUpdate.close) {\n\t\tcloseRange = new vscode.Range(nodeToUpdate.close.start, nodeToUpdate.close.end);\n\t}\n\n\tlet ranges = [openRange];\n\tif (closeRange) {\n\t\tfor (let i = openRange.start.line + 1; i <= closeRange.start.line; i++) {\n\t\t\tlet lineContent = editor.document.lineAt(i).text;\n\t\t\tif (lineContent.startsWith('\\t')) {\n\t\t\t\tranges.push(new vscode.Range(i, 0, i, 1));\n\t\t\t} else if (lineContent.startsWith(indentInSpaces)) {\n\t\t\t\tranges.push(new vscode.Range(i, 0, i, indentInSpaces.length));\n\t\t\t}\n\t\t}\n\t\tranges.push(closeRange);\n\t}\n\treturn ranges;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { HtmlNode } from 'EmmetNode';\nimport { getHtmlNode, parseDocument, validate } from './util';\n\nexport function updateTag(tagName: string): Thenable<boolean> | undefined {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tlet editor = vscode.window.activeTextEditor;\n\tlet rootNode = <HtmlNode>parseDocument(editor.document);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tlet rangesToUpdate: vscode.Range[] = [];\n\teditor.selections.reverse().forEach(selection => {\n\t\trangesToUpdate = rangesToUpdate.concat(getRangesToUpdate(editor, selection, rootNode));\n\t});\n\n\treturn editor.edit(editBuilder => {\n\t\trangesToUpdate.forEach(range => {\n\t\t\teditBuilder.replace(range, tagName);\n\t\t});\n\t});\n}\n\nfunction getRangesToUpdate(editor: vscode.TextEditor, selection: vscode.Selection, rootNode: HtmlNode): vscode.Range[] {\n\tlet nodeToUpdate = getHtmlNode(editor.document, rootNode, selection.start, true);\n\tif (!nodeToUpdate) {\n\t\treturn [];\n\t}\n\n\tlet openStart = nodeToUpdate.open.start.translate(0, 1);\n\tlet openEnd = openStart.translate(0, nodeToUpdate.name.length);\n\n\tlet ranges = [new vscode.Range(openStart, openEnd)];\n\tif (nodeToUpdate.close) {\n\t\tlet closeStart = nodeToUpdate.close.start.translate(0, 2);\n\t\tlet closeEnd = nodeToUpdate.close.end.translate(0, -1);\n\t\tranges.push(new vscode.Range(closeStart, closeEnd));\n\t}\n\treturn ranges;\n}\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { HtmlNode } from 'EmmetNode';\nimport { getHtmlNode, parseDocument, validate } from './util';\n\n\nexport function matchTag() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\tlet rootNode: HtmlNode = <HtmlNode>parseDocument(editor.document);\n\tif (!rootNode) { return; }\n\n\tlet updatedSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tlet updatedSelection = getUpdatedSelections(editor, selection.start, rootNode);\n\t\tif (updatedSelection) {\n\t\t\tupdatedSelections.push(updatedSelection);\n\t\t}\n\t});\n\tif (updatedSelections.length > 0) {\n\t\teditor.selections = updatedSelections;\n\t\teditor.revealRange(editor.selections[updatedSelections.length - 1]);\n\t}\n}\n\nfunction getUpdatedSelections(editor: vscode.TextEditor, position: vscode.Position, rootNode: HtmlNode): vscode.Selection | undefined {\n\tlet currentNode = getHtmlNode(editor.document, rootNode, position, true);\n\tif (!currentNode) { return; }\n\n\t// If no closing tag or cursor is between open and close tag, then no-op\n\tif (!currentNode.close || (position.isAfter(currentNode.open.end) && position.isBefore(currentNode.close.start))) {\n\t\treturn;\n\t}\n\n\t// Place cursor inside the close tag if cursor is inside the open tag, else place it inside the open tag\n\tlet finalPosition = position.isBeforeOrEqual(currentNode.open.end) ? currentNode.close.start.translate(0, 2) : currentNode.open.start.translate(0, 1);\n\treturn new vscode.Selection(finalPosition, finalPosition);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { HtmlNode } from 'EmmetNode';\nimport { getHtmlNode, parseDocument, validate } from './util';\n\nlet balanceOutStack: Array<vscode.Selection[]> = [];\nlet lastOut = false;\nlet lastBalancedSelections: vscode.Selection[] = [];\n\nexport function balanceOut() {\n\tbalance(true);\n}\n\nexport function balanceIn() {\n\tbalance(false);\n}\n\nfunction balance(out: boolean) {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\tlet rootNode = <HtmlNode>parseDocument(editor.document);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tlet getRangeFunction = out ? getRangeToBalanceOut : getRangeToBalanceIn;\n\tlet newSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tlet range = getRangeFunction(editor.document, selection, rootNode);\n\t\tnewSelections.push(range);\n\t});\n\n\tif (areSameSelections(newSelections, editor.selections)) {\n\t\treturn;\n\t}\n\n\tif (areSameSelections(lastBalancedSelections, editor.selections)) {\n\t\tif (out) {\n\t\t\tif (!balanceOutStack.length) {\n\t\t\t\tbalanceOutStack.push(editor.selections);\n\t\t\t}\n\t\t\tbalanceOutStack.push(newSelections);\n\t\t} else {\n\t\t\tif (lastOut) {\n\t\t\t\tbalanceOutStack.pop();\n\t\t\t}\n\t\t\tnewSelections = balanceOutStack.pop() || newSelections;\n\t\t}\n\t} else {\n\t\tbalanceOutStack = out ? [editor.selections, newSelections] : [];\n\t}\n\n\tlastOut = out;\n\tlastBalancedSelections = editor.selections = newSelections;\n}\n\nfunction getRangeToBalanceOut(document: vscode.TextDocument, selection: vscode.Selection, rootNode: HtmlNode): vscode.Selection {\n\tlet nodeToBalance = getHtmlNode(document, rootNode, selection.start, false);\n\tif (!nodeToBalance) {\n\t\treturn selection;\n\t}\n\tif (!nodeToBalance.close) {\n\t\treturn new vscode.Selection(nodeToBalance.start, nodeToBalance.end);\n\t}\n\n\tlet innerSelection = new vscode.Selection(nodeToBalance.open.end, nodeToBalance.close.start);\n\tlet outerSelection = new vscode.Selection(nodeToBalance.start, nodeToBalance.end);\n\n\tif (innerSelection.contains(selection) && !innerSelection.isEqual(selection)) {\n\t\treturn innerSelection;\n\t}\n\tif (outerSelection.contains(selection) && !outerSelection.isEqual(selection)) {\n\t\treturn outerSelection;\n\t}\n\treturn selection;\n}\n\nfunction getRangeToBalanceIn(document: vscode.TextDocument, selection: vscode.Selection, rootNode: HtmlNode): vscode.Selection {\n\tlet nodeToBalance = getHtmlNode(document, rootNode, selection.start, true);\n\tif (!nodeToBalance) {\n\t\treturn selection;\n\t}\n\n\tif (nodeToBalance.close) {\n\t\tconst entireNodeSelected = selection.start.isEqual(nodeToBalance.start) && selection.end.isEqual(nodeToBalance.end);\n\t\tconst startInOpenTag = selection.start.isAfter(nodeToBalance.open.start) && selection.start.isBefore(nodeToBalance.open.end);\n\t\tconst startInCloseTag = selection.start.isAfter(nodeToBalance.close.start) && selection.start.isBefore(nodeToBalance.close.end);\n\n\t\tif (entireNodeSelected || startInOpenTag || startInCloseTag) {\n\t\t\treturn new vscode.Selection(nodeToBalance.open.end, nodeToBalance.close.start);\n\t\t}\n\t}\n\n\tif (!nodeToBalance.firstChild) {\n\t\treturn selection;\n\t}\n\n\tif (selection.start.isEqual(nodeToBalance.firstChild.start)\n\t\t&& selection.end.isEqual(nodeToBalance.firstChild.end)\n\t\t&& nodeToBalance.firstChild.close) {\n\t\treturn new vscode.Selection(nodeToBalance.firstChild.open.end, nodeToBalance.firstChild.close.start);\n\t}\n\n\treturn new vscode.Selection(nodeToBalance.firstChild.start, nodeToBalance.firstChild.end);\n\n}\n\nfunction areSameSelections(a: vscode.Selection[], b: vscode.Selection[]): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (!a[i].isEqual(b[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { HtmlNode } from 'EmmetNode';\nimport { getHtmlNode, parseDocument, validate, getEmmetMode, getEmmetConfiguration } from './util';\n\nexport function splitJoinTag() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\tlet rootNode = <HtmlNode>parseDocument(editor.document);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\treturn editor.edit(editBuilder => {\n\t\teditor.selections.reverse().forEach(selection => {\n\t\t\tlet nodeToUpdate = getHtmlNode(editor.document, rootNode, selection.start, true);\n\t\t\tif (nodeToUpdate) {\n\t\t\t\tlet textEdit = getRangesToReplace(editor.document, nodeToUpdate);\n\t\t\t\teditBuilder.replace(textEdit.range, textEdit.newText);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getRangesToReplace(document: vscode.TextDocument, nodeToUpdate: HtmlNode): vscode.TextEdit {\n\tlet rangeToReplace: vscode.Range;\n\tlet textToReplaceWith: string;\n\n\tif (!nodeToUpdate.close) {\n\t\t// Split Tag\n\t\tlet nodeText = document.getText(new vscode.Range(nodeToUpdate.start, nodeToUpdate.end));\n\t\tlet m = nodeText.match(/(\\s*\\/)?>$/);\n\t\tlet end = <vscode.Position>nodeToUpdate.end;\n\t\tlet start = m ? end.translate(0, -m[0].length) : end;\n\n\t\trangeToReplace = new vscode.Range(start, end);\n\t\ttextToReplaceWith = `></${nodeToUpdate.name}>`;\n\t} else {\n\t\t// Join Tag\n\t\tlet start = (<vscode.Position>nodeToUpdate.open.end).translate(0, -1);\n\t\tlet end = <vscode.Position>nodeToUpdate.end;\n\t\trangeToReplace = new vscode.Range(start, end);\n\t\ttextToReplaceWith = '/>';\n\n\t\tconst emmetMode = getEmmetMode(document.languageId, []) || '';\n\t\tconst emmetConfig = getEmmetConfiguration(emmetMode);\n\t\tif (emmetMode && emmetConfig.syntaxProfiles[emmetMode] &&\n\t\t\t(emmetConfig.syntaxProfiles[emmetMode]['selfClosingStyle'] === 'xhtml' || emmetConfig.syntaxProfiles[emmetMode]['self_closing_tag'] === 'xhtml')) {\n\t\t\ttextToReplaceWith = ' ' + textToReplaceWith;\n\t\t}\n\n\t}\n\n\treturn new vscode.TextEdit(rangeToReplace, textToReplaceWith);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { Node } from 'EmmetNode';\nimport { getNode, parseDocument, validate } from './util';\n\nexport function mergeLines() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\n\tlet rootNode = parseDocument(editor.document);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\treturn editor.edit(editBuilder => {\n\t\teditor.selections.reverse().forEach(selection => {\n\t\t\tlet textEdit = getRangesToReplace(editor.document, selection, rootNode!);\n\t\t\tif (textEdit) {\n\t\t\t\teditBuilder.replace(textEdit.range, textEdit.newText);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getRangesToReplace(document: vscode.TextDocument, selection: vscode.Selection, rootNode: Node): vscode.TextEdit | undefined {\n\tlet startNodeToUpdate: Node | null;\n\tlet endNodeToUpdate: Node | null;\n\n\tif (selection.isEmpty) {\n\t\tstartNodeToUpdate = endNodeToUpdate = getNode(rootNode, selection.start, true);\n\t} else {\n\t\tstartNodeToUpdate = getNode(rootNode, selection.start, true);\n\t\tendNodeToUpdate = getNode(rootNode, selection.end, true);\n\t}\n\n\tif (!startNodeToUpdate || !endNodeToUpdate || startNodeToUpdate.start.line === endNodeToUpdate.end.line) {\n\t\treturn;\n\t}\n\n\tlet rangeToReplace = new vscode.Range(startNodeToUpdate.start, endNodeToUpdate.end);\n\tlet textToReplaceWith = document.lineAt(startNodeToUpdate.start.line).text.substr(startNodeToUpdate.start.character);\n\tfor (let i = startNodeToUpdate.start.line + 1; i <= endNodeToUpdate.end.line; i++) {\n\t\ttextToReplaceWith += document.lineAt(i).text.trim();\n\t}\n\n\treturn new vscode.TextEdit(rangeToReplace, textToReplaceWith);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getNodesInBetween, getNode, getHtmlNode, parseDocument, sameNodes, isStyleSheet, validate } from './util';\nimport { Node, Stylesheet, Rule } from 'EmmetNode';\nimport parseStylesheet from '@emmetio/css-parser';\nimport { DocumentStreamReader } from './bufferStream';\n\nconst startCommentStylesheet = '/*';\nconst endCommentStylesheet = '*/';\nconst startCommentHTML = '<!--';\nconst endCommentHTML = '-->';\n\nexport function toggleComment(): Thenable<boolean> | undefined {\n\tif (!validate() || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\tlet rootNode = parseDocument(editor.document);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\treturn editor.edit(editBuilder => {\n\t\tlet allEdits: vscode.TextEdit[][] = [];\n\t\teditor.selections.reverse().forEach(selection => {\n\t\t\tlet edits = isStyleSheet(editor.document.languageId) ? toggleCommentStylesheet(selection, <Stylesheet>rootNode) : toggleCommentHTML(editor.document, selection, rootNode!);\n\t\t\tif (edits.length > 0) {\n\t\t\t\tallEdits.push(edits);\n\t\t\t}\n\t\t});\n\n\t\t// Apply edits in order so we can skip nested ones.\n\t\tallEdits.sort((arr1, arr2) => {\n\t\t\tlet result = arr1[0].range.start.line - arr2[0].range.start.line;\n\t\t\treturn result === 0 ? arr1[0].range.start.character - arr2[0].range.start.character : result;\n\t\t});\n\t\tlet lastEditPosition = new vscode.Position(0, 0);\n\t\tfor (const edits of allEdits) {\n\t\t\tif (edits[0].range.end.isAfterOrEqual(lastEditPosition)) {\n\t\t\t\tedits.forEach(x => {\n\t\t\t\t\teditBuilder.replace(x.range, x.newText);\n\t\t\t\t\tlastEditPosition = x.range.end;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction toggleCommentHTML(document: vscode.TextDocument, selection: vscode.Selection, rootNode: Node): vscode.TextEdit[] {\n\tconst selectionStart = selection.isReversed ? selection.active : selection.anchor;\n\tconst selectionEnd = selection.isReversed ? selection.anchor : selection.active;\n\n\tlet startNode = getHtmlNode(document, rootNode, selectionStart, true);\n\tlet endNode = getHtmlNode(document, rootNode, selectionEnd, true);\n\n\tif (!startNode || !endNode) {\n\t\treturn [];\n\t}\n\n\tif (sameNodes(startNode, endNode) && startNode.name === 'style'\n\t\t&& startNode.open.end.isBefore(selectionStart)\n\t\t&& startNode.close.start.isAfter(selectionEnd)) {\n\t\tlet buffer = new DocumentStreamReader(document, startNode.open.end, new vscode.Range(startNode.open.end, startNode.close.start));\n\t\tlet cssRootNode = parseStylesheet(buffer);\n\n\t\treturn toggleCommentStylesheet(selection, cssRootNode);\n\t}\n\n\tlet allNodes: Node[] = getNodesInBetween(startNode, endNode);\n\tlet edits: vscode.TextEdit[] = [];\n\n\tallNodes.forEach(node => {\n\t\tedits = edits.concat(getRangesToUnCommentHTML(node, document));\n\t});\n\n\tif (startNode.type === 'comment') {\n\t\treturn edits;\n\t}\n\n\n\tedits.push(new vscode.TextEdit(new vscode.Range(allNodes[0].start, allNodes[0].start), startCommentHTML));\n\tedits.push(new vscode.TextEdit(new vscode.Range(allNodes[allNodes.length - 1].end, allNodes[allNodes.length - 1].end), endCommentHTML));\n\n\treturn edits;\n}\n\nfunction getRangesToUnCommentHTML(node: Node, document: vscode.TextDocument): vscode.TextEdit[] {\n\tlet unCommentTextEdits: vscode.TextEdit[] = [];\n\n\t// If current node is commented, then uncomment and return\n\tif (node.type === 'comment') {\n\n\t\tunCommentTextEdits.push(new vscode.TextEdit(new vscode.Range(node.start, node.start.translate(0, startCommentHTML.length)), ''));\n\t\tunCommentTextEdits.push(new vscode.TextEdit(new vscode.Range(node.end.translate(0, -endCommentHTML.length), node.end), ''));\n\n\t\treturn unCommentTextEdits;\n\t}\n\n\t// All children of current node should be uncommented\n\tnode.children.forEach(childNode => {\n\t\tunCommentTextEdits = unCommentTextEdits.concat(getRangesToUnCommentHTML(childNode, document));\n\t});\n\n\treturn unCommentTextEdits;\n}\n\nfunction toggleCommentStylesheet(selection: vscode.Selection, rootNode: Stylesheet): vscode.TextEdit[] {\n\tlet selectionStart = selection.isReversed ? selection.active : selection.anchor;\n\tlet selectionEnd = selection.isReversed ? selection.anchor : selection.active;\n\n\tlet startNode = getNode(rootNode, selectionStart, true);\n\tlet endNode = getNode(rootNode, selectionEnd, true);\n\n\tif (!selection.isEmpty) {\n\t\tselectionStart = adjustStartNodeCss(startNode, selectionStart, rootNode);\n\t\tselectionEnd = adjustEndNodeCss(endNode, selectionEnd, rootNode);\n\t\tselection = new vscode.Selection(selectionStart, selectionEnd);\n\t} else if (startNode) {\n\t\tselectionStart = startNode.start;\n\t\tselectionEnd = startNode.end;\n\t\tselection = new vscode.Selection(selectionStart, selectionEnd);\n\t}\n\n\t// Uncomment the comments that intersect with the selection.\n\tlet rangesToUnComment: vscode.Range[] = [];\n\tlet edits: vscode.TextEdit[] = [];\n\trootNode.comments.forEach(comment => {\n\t\tlet commentRange = new vscode.Range(comment.start, comment.end);\n\t\tif (selection.intersection(commentRange)) {\n\t\t\trangesToUnComment.push(commentRange);\n\t\t\tedits.push(new vscode.TextEdit(new vscode.Range(comment.start, comment.start.translate(0, startCommentStylesheet.length)), ''));\n\t\t\tedits.push(new vscode.TextEdit(new vscode.Range(comment.end.translate(0, -endCommentStylesheet.length), comment.end), ''));\n\t\t}\n\t});\n\n\tif (edits.length > 0) {\n\t\treturn edits;\n\t}\n\n\treturn [\n\t\tnew vscode.TextEdit(new vscode.Range(selection.start, selection.start), startCommentStylesheet),\n\t\tnew vscode.TextEdit(new vscode.Range(selection.end, selection.end), endCommentStylesheet)\n\t];\n\n\n}\n\nfunction adjustStartNodeCss(node: Node | null, pos: vscode.Position, rootNode: Stylesheet): vscode.Position {\n\tfor (const comment of rootNode.comments) {\n\t\tlet commentRange = new vscode.Range(comment.start, comment.end);\n\t\tif (commentRange.contains(pos)) {\n\t\t\treturn pos;\n\t\t}\n\t}\n\n\tif (!node) {\n\t\treturn pos;\n\t}\n\n\tif (node.type === 'property') {\n\t\treturn node.start;\n\t}\n\n\tconst rule = <Rule>node;\n\tif (pos.isBefore(rule.contentStartToken.end) || !rule.firstChild) {\n\t\treturn rule.start;\n\t}\n\n\tif (pos.isBefore(rule.firstChild.start)) {\n\t\treturn pos;\n\t}\n\n\tlet newStartNode = rule.firstChild;\n\twhile (newStartNode.nextSibling && pos.isAfter(newStartNode.end)) {\n\t\tnewStartNode = newStartNode.nextSibling;\n\t}\n\n\treturn newStartNode.start;\n}\n\nfunction adjustEndNodeCss(node: Node | null, pos: vscode.Position, rootNode: Stylesheet): vscode.Position {\n\tfor (const comment of rootNode.comments) {\n\t\tlet commentRange = new vscode.Range(comment.start, comment.end);\n\t\tif (commentRange.contains(pos)) {\n\t\t\treturn pos;\n\t\t}\n\t}\n\n\tif (!node) {\n\t\treturn pos;\n\t}\n\n\tif (node.type === 'property') {\n\t\treturn node.end;\n\t}\n\n\tconst rule = <Rule>node;\n\tif (pos.isEqual(rule.contentEndToken.end) || !rule.firstChild) {\n\t\treturn rule.end;\n\t}\n\n\tif (pos.isAfter(rule.children[rule.children.length - 1].end)) {\n\t\treturn pos;\n\t}\n\n\tlet newEndNode = rule.children[rule.children.length - 1];\n\twhile (newEndNode.previousSibling && pos.isBefore(newEndNode.start)) {\n\t\tnewEndNode = newEndNode.previousSibling;\n\t}\n\n\treturn newEndNode.end;\n}\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { validate } from './util';\n\nexport function fetchEditPoint(direction: string): void {\n\tif (!validate() || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\n\tlet newSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tlet updatedSelection = direction === 'next' ? nextEditPoint(selection, editor) : prevEditPoint(selection, editor);\n\t\tnewSelections.push(updatedSelection);\n\t});\n\teditor.selections = newSelections;\n\teditor.revealRange(editor.selections[editor.selections.length - 1]);\n}\n\nfunction nextEditPoint(selection: vscode.Selection, editor: vscode.TextEditor): vscode.Selection {\n\tfor (let lineNum = selection.anchor.line; lineNum < editor.document.lineCount; lineNum++) {\n\t\tlet updatedSelection = findEditPoint(lineNum, editor, selection.anchor, 'next');\n\t\tif (updatedSelection) {\n\t\t\treturn updatedSelection;\n\t\t}\n\t}\n\treturn selection;\n}\n\nfunction prevEditPoint(selection: vscode.Selection, editor: vscode.TextEditor): vscode.Selection {\n\tfor (let lineNum = selection.anchor.line; lineNum >= 0; lineNum--) {\n\t\tlet updatedSelection = findEditPoint(lineNum, editor, selection.anchor, 'prev');\n\t\tif (updatedSelection) {\n\t\t\treturn updatedSelection;\n\t\t}\n\t}\n\treturn selection;\n}\n\n\nfunction findEditPoint(lineNum: number, editor: vscode.TextEditor, position: vscode.Position, direction: string): vscode.Selection | undefined {\n\tlet line = editor.document.lineAt(lineNum);\n\tlet lineContent = line.text;\n\n\tif (lineNum !== position.line && line.isEmptyOrWhitespace) {\n\t\treturn new vscode.Selection(lineNum, lineContent.length, lineNum, lineContent.length);\n\t}\n\n\tif (lineNum === position.line && direction === 'prev') {\n\t\tlineContent = lineContent.substr(0, position.character);\n\t}\n\tlet emptyAttrIndex = direction === 'next' ? lineContent.indexOf('\"\"', lineNum === position.line ? position.character : 0) : lineContent.lastIndexOf('\"\"');\n\tlet emptyTagIndex = direction === 'next' ? lineContent.indexOf('><', lineNum === position.line ? position.character : 0) : lineContent.lastIndexOf('><');\n\n\tlet winner = -1;\n\n\tif (emptyAttrIndex > -1 && emptyTagIndex > -1) {\n\t\twinner = direction === 'next' ? Math.min(emptyAttrIndex, emptyTagIndex) : Math.max(emptyAttrIndex, emptyTagIndex);\n\t} else if (emptyAttrIndex > -1) {\n\t\twinner = emptyAttrIndex;\n\t} else {\n\t\twinner = emptyTagIndex;\n\t}\n\n\tif (winner > -1) {\n\t\treturn new vscode.Selection(lineNum, winner + 1, lineNum, winner + 1);\n\t}\n\treturn;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { validate, parseDocument, isStyleSheet } from './util';\nimport { nextItemHTML, prevItemHTML } from './selectItemHTML';\nimport { nextItemStylesheet, prevItemStylesheet } from './selectItemStylesheet';\nimport { HtmlNode, CssNode } from 'EmmetNode';\n\nexport function fetchSelectItem(direction: string): void {\n\tif (!validate() || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\tlet rootNode = parseDocument(editor.document);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tlet newSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tconst selectionStart = selection.isReversed ? selection.active : selection.anchor;\n\t\tconst selectionEnd = selection.isReversed ? selection.anchor : selection.active;\n\n\t\tlet updatedSelection;\n\t\tif (isStyleSheet(editor.document.languageId)) {\n\t\t\tupdatedSelection = direction === 'next' ? nextItemStylesheet(selectionStart, selectionEnd, <CssNode>rootNode!) : prevItemStylesheet(selectionStart, selectionEnd, <CssNode>rootNode!);\n\t\t} else {\n\t\t\tupdatedSelection = direction === 'next' ? nextItemHTML(selectionStart, selectionEnd, editor, <HtmlNode>rootNode!) : prevItemHTML(selectionStart, selectionEnd, editor, <HtmlNode>rootNode!);\n\t\t}\n\t\tnewSelections.push(updatedSelection ? updatedSelection : selection);\n\t});\n\teditor.selections = newSelections;\n\teditor.revealRange(editor.selections[editor.selections.length - 1]);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getDeepestNode, findNextWord, findPrevWord, getHtmlNode } from './util';\nimport { HtmlNode } from 'EmmetNode';\nimport { isNumber } from 'util';\n\nexport function nextItemHTML(selectionStart: vscode.Position, selectionEnd: vscode.Position, editor: vscode.TextEditor, rootNode: HtmlNode): vscode.Selection | undefined {\n\tlet currentNode = getHtmlNode(editor.document, rootNode, selectionEnd, false);\n\tlet nextNode: HtmlNode | undefined = undefined;\n\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\n\tif (currentNode.type !== 'comment') {\n\t\t// If cursor is in the tag name, select tag\n\t\tif (selectionEnd.isBefore(currentNode.open.start.translate(0, currentNode.name.length))) {\n\t\t\treturn getSelectionFromNode(currentNode);\n\t\t}\n\n\t\t// If cursor is in the open tag, look for attributes\n\t\tif (selectionEnd.isBefore(currentNode.open.end)) {\n\t\t\tlet attrSelection = getNextAttribute(selectionStart, selectionEnd, currentNode);\n\t\t\tif (attrSelection) {\n\t\t\t\treturn attrSelection;\n\t\t\t}\n\t\t}\n\n\t\t// Get the first child of current node which is right after the cursor and is not a comment\n\t\tnextNode = currentNode.firstChild;\n\t\twhile (nextNode && (selectionEnd.isAfterOrEqual(nextNode.end) || nextNode.type === 'comment')) {\n\t\t\tnextNode = nextNode.nextSibling;\n\t\t}\n\t}\n\n\n\t// Get next sibling of current node which is not a comment. If none is found try the same on the parent\n\twhile (!nextNode && currentNode) {\n\t\tif (currentNode.nextSibling) {\n\t\t\tif (currentNode.nextSibling.type !== 'comment') {\n\t\t\t\tnextNode = currentNode.nextSibling;\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentNode = currentNode.parent;\n\t\t}\n\t}\n\n\treturn nextNode && getSelectionFromNode(nextNode);\n}\n\nexport function prevItemHTML(selectionStart: vscode.Position, selectionEnd: vscode.Position, editor: vscode.TextEditor, rootNode: HtmlNode): vscode.Selection | undefined {\n\tlet currentNode = getHtmlNode(editor.document, rootNode, selectionStart, false);\n\tlet prevNode: HtmlNode | undefined = undefined;\n\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\n\tif (currentNode.type !== 'comment' && selectionStart.translate(0, -1).isAfter(currentNode.open.start)) {\n\n\t\tif (selectionStart.isBefore(currentNode.open.end) || !currentNode.firstChild || selectionEnd.isBeforeOrEqual(currentNode.firstChild.start)) {\n\t\t\tprevNode = currentNode;\n\t\t} else {\n\t\t\t// Select the child that appears just before the cursor and is not a comment\n\t\t\tprevNode = currentNode.firstChild;\n\t\t\tlet oldOption: HtmlNode | undefined = undefined;\n\t\t\twhile (prevNode.nextSibling && selectionStart.isAfterOrEqual(prevNode.nextSibling.end)) {\n\t\t\t\tif (prevNode && prevNode.type !== 'comment') {\n\t\t\t\t\toldOption = prevNode;\n\t\t\t\t}\n\t\t\t\tprevNode = prevNode.nextSibling;\n\t\t\t}\n\n\t\t\tprevNode = <HtmlNode>getDeepestNode((prevNode && prevNode.type !== 'comment') ? prevNode : oldOption);\n\t\t}\n\t}\n\n\t// Select previous sibling which is not a comment. If none found, then select parent\n\twhile (!prevNode && currentNode) {\n\t\tif (currentNode.previousSibling) {\n\t\t\tif (currentNode.previousSibling.type !== 'comment') {\n\t\t\t\tprevNode = <HtmlNode>getDeepestNode(currentNode.previousSibling);\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.previousSibling;\n\t\t\t}\n\t\t} else {\n\t\t\tprevNode = currentNode.parent;\n\t\t}\n\n\t}\n\n\tif (!prevNode) {\n\t\treturn undefined;\n\t}\n\n\tlet attrSelection = getPrevAttribute(selectionStart, selectionEnd, prevNode);\n\treturn attrSelection ? attrSelection : getSelectionFromNode(prevNode);\n}\n\nfunction getSelectionFromNode(node: HtmlNode): vscode.Selection | undefined {\n\tif (node && node.open) {\n\t\tlet selectionStart = (<vscode.Position>node.open.start).translate(0, 1);\n\t\tlet selectionEnd = selectionStart.translate(0, node.name.length);\n\n\t\treturn new vscode.Selection(selectionStart, selectionEnd);\n\t}\n\treturn undefined;\n}\n\nfunction getNextAttribute(selectionStart: vscode.Position, selectionEnd: vscode.Position, node: HtmlNode): vscode.Selection | undefined {\n\n\tif (!node.attributes || node.attributes.length === 0 || node.type === 'comment') {\n\t\treturn;\n\t}\n\n\tfor (const attr of node.attributes) {\n\t\tif (selectionEnd.isBefore(attr.start)) {\n\t\t\t// select full attr\n\t\t\treturn new vscode.Selection(attr.start, attr.end);\n\t\t}\n\n\t\tif (!attr.value || (<vscode.Position>attr.value.start).isEqual(attr.value.end)) {\n\t\t\t// No attr value to select\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ((selectionStart.isEqual(attr.start) && selectionEnd.isEqual(attr.end)) || selectionEnd.isBefore(attr.value.start)) {\n\t\t\t// cursor is in attr name,  so select full attr value\n\t\t\treturn new vscode.Selection(attr.value.start, attr.value.end);\n\t\t}\n\n\t\t// Fetch the next word in the attr value\n\n\t\tif (attr.value.toString().indexOf(' ') === -1) {\n\t\t\t// attr value does not have space, so no next word to find\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet pos: number | undefined = undefined;\n\t\tif (selectionStart.isEqual(attr.value.start) && selectionEnd.isEqual(attr.value.end)) {\n\t\t\tpos = -1;\n\t\t}\n\t\tif (pos === undefined && selectionEnd.isBefore(attr.end)) {\n\t\t\tpos = selectionEnd.character - attr.value.start.character - 1;\n\t\t}\n\n\t\tif (pos !== undefined) {\n\t\t\tlet [newSelectionStartOffset, newSelectionEndOffset] = findNextWord(attr.value.toString(), pos);\n\t\t\tif (!isNumber(newSelectionStartOffset) || !isNumber(newSelectionEndOffset)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (newSelectionStartOffset >= 0 && newSelectionEndOffset >= 0) {\n\t\t\t\tconst newSelectionStart = (<vscode.Position>attr.value.start).translate(0, newSelectionStartOffset);\n\t\t\t\tconst newSelectionEnd = (<vscode.Position>attr.value.start).translate(0, newSelectionEndOffset);\n\t\t\t\treturn new vscode.Selection(newSelectionStart, newSelectionEnd);\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn;\n}\n\nfunction getPrevAttribute(selectionStart: vscode.Position, selectionEnd: vscode.Position, node: HtmlNode): vscode.Selection | undefined {\n\n\tif (!node.attributes || node.attributes.length === 0 || node.type === 'comment') {\n\t\treturn;\n\t}\n\n\tfor (let i = node.attributes.length - 1; i >= 0; i--) {\n\t\tlet attr = node.attributes[i];\n\n\t\tif (selectionStart.isBeforeOrEqual(attr.start)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!attr.value || (<vscode.Position>attr.value.start).isEqual(attr.value.end) || selectionStart.isBefore(attr.value.start)) {\n\t\t\t// select full attr\n\t\t\treturn new vscode.Selection(attr.start, attr.end);\n\t\t}\n\n\t\tif (selectionStart.isEqual(attr.value.start)) {\n\t\t\tif (selectionEnd.isAfterOrEqual(attr.value.end)) {\n\t\t\t\t// select full attr\n\t\t\t\treturn new vscode.Selection(attr.start, attr.end);\n\t\t\t}\n\t\t\t// select attr value\n\t\t\treturn new vscode.Selection(attr.value.start, attr.value.end);\n\t\t}\n\n\t\t// Fetch the prev word in the attr value\n\n\t\tlet pos = selectionStart.isAfter(attr.value.end) ? attr.value.toString().length : selectionStart.character - attr.value.start.character;\n\t\tlet [newSelectionStartOffset, newSelectionEndOffset] = findPrevWord(attr.value.toString(), pos);\n\t\tif (!isNumber(newSelectionStartOffset) || !isNumber(newSelectionEndOffset)) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSelectionStartOffset >= 0 && newSelectionEndOffset >= 0) {\n\t\t\tconst newSelectionStart = (<vscode.Position>attr.value.start).translate(0, newSelectionStartOffset);\n\t\t\tconst newSelectionEnd = (<vscode.Position>attr.value.start).translate(0, newSelectionEndOffset);\n\t\t\treturn new vscode.Selection(newSelectionStart, newSelectionEnd);\n\t\t}\n\t}\n\n\treturn;\n}","module.exports = require(\"util\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getDeepestNode, findNextWord, findPrevWord, getNode } from './util';\nimport { Node, CssNode, Rule, Property } from 'EmmetNode';\n\nexport function nextItemStylesheet(startOffset: vscode.Position, endOffset: vscode.Position, rootNode: Node): vscode.Selection | undefined {\n\tlet currentNode = <CssNode>getNode(rootNode, endOffset, true);\n\tif (!currentNode) {\n\t\tcurrentNode = <CssNode>rootNode;\n\t}\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\t// Full property is selected, so select full property value next\n\tif (currentNode.type === 'property' && startOffset.isEqual(currentNode.start) && endOffset.isEqual(currentNode.end)) {\n\t\treturn getSelectionFromProperty(currentNode, startOffset, endOffset, true, 'next');\n\t}\n\n\t// Part or whole of propertyValue is selected, so select the next word in the propertyValue\n\tif (currentNode.type === 'property' && startOffset.isAfterOrEqual((<Property>currentNode).valueToken.start) && endOffset.isBeforeOrEqual((<Property>currentNode).valueToken.end)) {\n\t\tlet singlePropertyValue = getSelectionFromProperty(currentNode, startOffset, endOffset, false, 'next');\n\t\tif (singlePropertyValue) {\n\t\t\treturn singlePropertyValue;\n\t\t}\n\t}\n\n\t// Cursor is in the selector or in a property\n\tif ((currentNode.type === 'rule' && endOffset.isBefore((<Rule>currentNode).selectorToken.end))\n\t\t|| (currentNode.type === 'property' && endOffset.isBefore((<Property>currentNode).valueToken.end))) {\n\t\treturn getSelectionFromNode(currentNode);\n\t}\n\n\t// Get the first child of current node which is right after the cursor\n\tlet nextNode = currentNode.firstChild;\n\twhile (nextNode && endOffset.isAfterOrEqual(nextNode.end)) {\n\t\tnextNode = nextNode.nextSibling;\n\t}\n\n\t// Get next sibling of current node or the parent\n\twhile (!nextNode && currentNode) {\n\t\tnextNode = currentNode.nextSibling;\n\t\tcurrentNode = currentNode.parent;\n\t}\n\n\treturn getSelectionFromNode(nextNode);\n\n}\n\nexport function prevItemStylesheet(startOffset: vscode.Position, endOffset: vscode.Position, rootNode: CssNode): vscode.Selection | undefined {\n\tlet currentNode = <CssNode>getNode(rootNode, startOffset, false);\n\tif (!currentNode) {\n\t\tcurrentNode = rootNode;\n\t}\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\n\t// Full property value is selected, so select the whole property next\n\tif (currentNode.type === 'property' && startOffset.isEqual((<Property>currentNode).valueToken.start) && endOffset.isEqual((<Property>currentNode).valueToken.end)) {\n\t\treturn getSelectionFromNode(currentNode);\n\t}\n\n\t// Part of propertyValue is selected, so select the prev word in the propertyValue\n\tif (currentNode.type === 'property' && startOffset.isAfterOrEqual((<Property>currentNode).valueToken.start) && endOffset.isBeforeOrEqual((<Property>currentNode).valueToken.end)) {\n\t\tlet singlePropertyValue = getSelectionFromProperty(currentNode, startOffset, endOffset, false, 'prev');\n\t\tif (singlePropertyValue) {\n\t\t\treturn singlePropertyValue;\n\t\t}\n\t}\n\n\tif (currentNode.type === 'property' || !currentNode.firstChild || (currentNode.type === 'rule' && startOffset.isBeforeOrEqual(currentNode.firstChild.start))) {\n\t\treturn getSelectionFromNode(currentNode);\n\t}\n\n\t// Select the child that appears just before the cursor\n\tlet prevNode = currentNode.firstChild;\n\twhile (prevNode.nextSibling && startOffset.isAfterOrEqual(prevNode.nextSibling.end)) {\n\t\tprevNode = prevNode.nextSibling;\n\t}\n\tprevNode = <CssNode>getDeepestNode(prevNode);\n\n\treturn getSelectionFromProperty(prevNode, startOffset, endOffset, false, 'prev');\n\n}\n\n\nfunction getSelectionFromNode(node: Node): vscode.Selection | undefined {\n\tif (!node) {\n\t\treturn;\n\t}\n\n\tlet nodeToSelect = node.type === 'rule' ? (<Rule>node).selectorToken : node;\n\treturn new vscode.Selection(nodeToSelect.start, nodeToSelect.end);\n}\n\n\nfunction getSelectionFromProperty(node: Node, selectionStart: vscode.Position, selectionEnd: vscode.Position, selectFullValue: boolean, direction: string): vscode.Selection | undefined {\n\tif (!node || node.type !== 'property') {\n\t\treturn;\n\t}\n\tconst propertyNode = <Property>node;\n\n\tlet propertyValue = propertyNode.valueToken.stream.substring(propertyNode.valueToken.start, propertyNode.valueToken.end);\n\tselectFullValue = selectFullValue || (direction === 'prev' && selectionStart.isEqual(propertyNode.valueToken.start) && selectionEnd.isBefore(propertyNode.valueToken.end));\n\n\tif (selectFullValue) {\n\t\treturn new vscode.Selection(propertyNode.valueToken.start, propertyNode.valueToken.end);\n\t}\n\n\tlet pos: number = -1;\n\tif (direction === 'prev') {\n\t\tif (selectionStart.isEqual(propertyNode.valueToken.start)) {\n\t\t\treturn;\n\t\t}\n\t\tpos = selectionStart.isAfter(propertyNode.valueToken.end) ? propertyValue.length : selectionStart.character - propertyNode.valueToken.start.character;\n\t}\n\n\tif (direction === 'next') {\n\t\tif (selectionEnd.isEqual(propertyNode.valueToken.end) && (selectionStart.isAfter(propertyNode.valueToken.start) || propertyValue.indexOf(' ') === -1)) {\n\t\t\treturn;\n\t\t}\n\t\tpos = selectionEnd.isEqual(propertyNode.valueToken.end) ? -1 : selectionEnd.character - propertyNode.valueToken.start.character - 1;\n\t}\n\n\n\tlet [newSelectionStartOffset, newSelectionEndOffset] = direction === 'prev' ? findPrevWord(propertyValue, pos) : findNextWord(propertyValue, pos);\n\tif (!newSelectionStartOffset && !newSelectionEndOffset) {\n\t\treturn;\n\t}\n\n\tconst newSelectionStart = (<vscode.Position>propertyNode.valueToken.start).translate(0, newSelectionStartOffset);\n\tconst newSelectionEnd = (<vscode.Position>propertyNode.valueToken.start).translate(0, newSelectionEndOffset);\n\n\treturn new vscode.Selection(newSelectionStart, newSelectionEnd);\n}\n\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* Based on @sergeche's work in his emmet plugin */\n\nimport * as vscode from 'vscode';\nimport evaluate from '@emmetio/math-expression';\nimport { DocumentStreamReader } from './bufferStream';\n\nexport function evaluateMathExpression() {\n\tif (!vscode.window.activeTextEditor) {\n\t\tvscode.window.showInformationMessage('No editor is active');\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\tconst stream = new DocumentStreamReader(editor.document);\n\teditor.edit(editBuilder => {\n\t\teditor.selections.forEach(selection => {\n\t\t\tconst pos = selection.isReversed ? selection.anchor : selection.active;\n\t\t\tstream.pos = pos;\n\n\t\t\ttry {\n\t\t\t\tconst result = String(evaluate(stream, true));\n\t\t\t\teditBuilder.replace(new vscode.Range(stream.pos, pos), result);\n\t\t\t} catch (err) {\n\t\t\t\tvscode.window.showErrorMessage('Could not evaluate expression');\n\t\t\t\t// Ignore error since most likely it’s because of non-math expression\n\t\t\t\tconsole.warn('Math evaluation error', err);\n\t\t\t}\n\t\t});\n\t});\n\n}\n","import StreamReader from '@emmetio/stream-reader';\nimport { isNumber, isWhiteSpace } from '@emmetio/stream-reader-utils';\n\n/**\n * Fixes StreamReader design flaw: check if stream is at the start-of-file\n * @param  {StreamReader}  stream\n * @return {Boolean}\n */\nfunction isSoF(stream) {\n\treturn stream.sof ? stream.sof() : stream.pos <= 0;\n}\n\nconst DOT = 46; // .\n\n/**\n * Consumes number from given stream, either in forward or backward direction\n * @param {StreamReader} stream\n * @param {Boolean}      backward Consume number in backward direction\n */\nvar consumeNumber = function(stream, backward) {\n\treturn backward ? consumeBackward(stream) : consumeForward(stream);\n};\n\n/**\n * Consumes number in forward stream direction\n * @param  {StreamReader} stream\n * @return {Boolean}        Returns true if number was consumed\n */\nfunction consumeForward(stream) {\n\tconst start = stream.pos;\n\tif (stream.eat(DOT) && stream.eatWhile(isNumber)) {\n\t\t// short decimal notation: .025\n\t\treturn true;\n\t}\n\n\tif (stream.eatWhile(isNumber) && (!stream.eat(DOT) || stream.eatWhile(isNumber))) {\n\t\t// either integer or decimal: 10, 10.25\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\n/**\n * Consumes number in backward stream direction\n * @param  {StreamReader} stream\n * @return {Boolean}        Returns true if number was consumed\n */\nfunction consumeBackward(stream) {\n\tconst start = stream.pos;\n\tlet ch, hadDot = false, hadNumber = false;\n\t// NB a StreamReader insance can be editor-specific and contain objects\n\t// as a position marker. Since we don’t know for sure how to compare editor\n\t// position markers, use consumed length instead to detect if number was consumed\n\tlet len = 0;\n\n\twhile (!isSoF(stream)) {\n\t\tstream.backUp(1);\n\t\tch = stream.peek();\n\n\t\tif (ch === DOT && !hadDot && hadNumber) {\n\t\t\thadDot = true;\n\t\t} else if (!isNumber(ch)) {\n\t\t\tstream.next();\n\t\t\tbreak;\n\t\t}\n\n\t\thadNumber = true;\n\t\tlen++;\n\t}\n\n\tif (len) {\n\t\tconst pos = stream.pos;\n\t\tstream.start = pos;\n\t\tstream.pos = start;\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\n/**\n * Expression parser and tokenizer\n */\n// token types\nconst NUMBER = 'num';\nconst OP1    = 'op1';\nconst OP2    = 'op2';\n\n// operators\nconst PLUS              = 43; // +\nconst MINUS             = 45; // -\nconst MULTIPLY          = 42; // *\nconst DIVIDE            = 47; // /\nconst INT_DIVIDE        = 92; // \\\nconst LEFT_PARENTHESIS  = 40; // (\nconst RIGHT_PARENTHESIS = 41; // )\n\n// parser states\nconst PRIMARY      = 1 << 0;\nconst OPERATOR     = 1 << 1;\nconst LPAREN       = 1 << 2;\nconst RPAREN       = 1 << 3;\nconst SIGN         = 1 << 4;\nconst NULLARY_CALL = 1 << 5;\n\nclass Token {\n\tconstructor(type, value, priority) {\n\t\tthis.type = type;\n\t\tthis.value = value;\n\t\tthis.priority = priority || 0;\n\t}\n}\n\nconst nullary = new Token(NULLARY_CALL);\n\nfunction parse(expr, backward) {\n\treturn backward ? parseBackward(expr) : parseForward(expr);\n}\n\n/**\n * Parses given expression in forward direction\n * @param  {String|StreamReader} expr\n * @return {Token[]}\n */\nfunction parseForward(expr) {\n\tconst stream = typeof expr === 'object' ? expr : new StreamReader(expr);\n\tlet ch, priority = 0;\n\tlet expected = (PRIMARY | LPAREN | SIGN);\n\tconst tokens = [];\n\n\twhile (!stream.eof()) {\n\t\tstream.eatWhile(isWhiteSpace);\n\t\tstream.start = stream.pos;\n\n\t\tif (consumeNumber(stream)) {\n\t\t\tif ((expected & PRIMARY) === 0) {\n\t\t\t\terror('Unexpected number', stream);\n\t\t\t}\n\n\t\t\ttokens.push( number(stream.current()) );\n\t\t\texpected = (OPERATOR | RPAREN);\n\t\t} else if (isOperator(stream.peek())) {\n\t\t\tch = stream.next();\n\t\t\tif (isSign(ch) && (expected & SIGN)) {\n\t\t\t\tif (isNegativeSign(ch)) {\n\t\t\t\t\ttokens.push(op1(ch, priority));\n\t\t\t\t}\n\t\t\t\texpected = (PRIMARY | LPAREN | SIGN);\n\t\t\t} else {\n\t\t\t\tif ((expected & OPERATOR) === 0) {\n\t\t\t\t\terror('Unexpected operator', stream);\n\t\t\t\t}\n\t\t\t\ttokens.push(op2(ch, priority));\n\t\t\t\texpected = (PRIMARY | LPAREN | SIGN);\n\t\t\t}\n\t\t} else if (stream.eat(LEFT_PARENTHESIS)) {\n\t\t\tif ((expected & LPAREN) === 0) {\n\t\t\t\terror('Unexpected \"(\"', stream);\n\t\t\t}\n\n\t\t\tpriority += 10;\n\t\t\texpected = (PRIMARY | LPAREN | SIGN | NULLARY_CALL);\n\t\t} else if (stream.eat(RIGHT_PARENTHESIS)) {\n\t\t\tpriority -= 10;\n\n\t\t\tif (expected & NULLARY_CALL) {\n\t\t\t\ttokens.push(nullary);\n\t\t\t} else if ((expected & RPAREN) === 0) {\n\t\t\t\terror('Unexpected \")\"', stream);\n\t\t\t}\n\n\t\t\texpected = (OPERATOR | RPAREN | LPAREN);\n\t\t} else {\n\t\t\terror('Unknown character', stream);\n\t\t}\n\t}\n\n\tif (priority < 0 || priority >= 10) {\n\t\terror('Unmatched \"()\"', stream);\n\t}\n\n\tconst result = orderTokens(tokens);\n\n\tif (result === null) {\n\t\terror('Parity', stream);\n\t}\n\n\treturn result;\n}\n\n/**\n * Parses given exprssion in reverse order, e.g. from back to end, and stops when\n * first unknown character was found\n * @param  {String|StreamReader} expr\n * @return {Array}\n */\nfunction parseBackward(expr) {\n\tlet stream;\n\tif (typeof expr === 'object') {\n\t\tstream = expr;\n\t} else {\n\t\tstream = new StreamReader(expr);\n\t\tstream.start = stream.pos = expr.length;\n\t}\n\n\tlet ch, priority = 0;\n\tlet expected = (PRIMARY | RPAREN);\n\tconst tokens = [];\n\n\twhile (!isSoF(stream)) {\n\t\tif (consumeNumber(stream, true)) {\n\t\t\tif ((expected & PRIMARY) === 0) {\n\t\t\t\terror('Unexpected number', stream);\n\t\t\t}\n\n\t\t\ttokens.push( number(stream.current()) );\n\t\t\texpected = (OPERATOR | SIGN | LPAREN);\n\n\t\t\t// NB should explicitly update stream position for backward direction\n\t\t\tstream.pos = stream.start;\n\t\t} else {\n\t\t\tstream.backUp(1);\n\t\t\tch = stream.peek();\n\n\t\t\tif (isOperator(ch)) {\n\t\t\t\tif (isSign(ch) && (expected & SIGN) && isReverseSignContext(stream)) {\n\t\t\t\t\tif (isNegativeSign(ch)) {\n\t\t\t\t\t\ttokens.push(op1(ch, priority));\n\t\t\t\t\t}\n\t\t\t\t\texpected = (LPAREN | RPAREN | OPERATOR | PRIMARY);\n\t\t\t\t} else {\n\t\t\t\t\tif ((expected & OPERATOR) === 0) {\n\t\t\t\t\t\tstream.next();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttokens.push(op2(ch, priority));\n\t\t\t\t\texpected = (PRIMARY | RPAREN);\n\t\t\t\t}\n\t\t\t} else if (ch === RIGHT_PARENTHESIS) {\n\t\t\t\tif ((expected & RPAREN) === 0) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tpriority += 10;\n\t\t\t\texpected = (PRIMARY | RPAREN | LPAREN);\n\t\t\t} else if (ch === LEFT_PARENTHESIS) {\n\t\t\t\tpriority -= 10;\n\n\t\t\t\tif (expected & NULLARY_CALL) {\n\t\t\t\t\ttokens.push(nullary);\n\t\t\t\t} else if ((expected & LPAREN) === 0) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\texpected = (OPERATOR | SIGN | LPAREN | NULLARY_CALL);\n\t\t\t} else if (!isWhiteSpace(ch)) {\n\t\t\t\tstream.next();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (priority < 0 || priority >= 10) {\n\t\terror('Unmatched \"()\"', stream);\n\t}\n\n\tconst result = orderTokens(tokens.reverse());\n\tif (result === null) {\n\t\terror('Parity', stream);\n\t}\n\n\t// edge case: expression is preceded by white-space;\n\t// move stream position back to expression start\n\tstream.eatWhile(isWhiteSpace);\n\n\treturn result;\n}\n\n/**\n * Orders parsed tokens (operands and operators) in given array so that they are\n * laid off in order of execution\n * @param  {Token[]} tokens\n * @return {Token[]}\n */\nfunction orderTokens(tokens) {\n\tconst operators = [], operands = [];\n\tlet noperators = 0;\n\n\tfor (let i = 0, token; i < tokens.length; i++) {\n\t\ttoken = tokens[i];\n\n\t\tif (token.type === NUMBER) {\n\t\t\toperands.push(token);\n\t\t} else {\n\t\t\tnoperators += token.type === OP1 ? 1 : 2;\n\n\t\t\twhile (operators.length) {\n\t\t\t\tif (token.priority <= operators[operators.length - 1].priority) {\n\t\t\t\t\toperands.push(operators.pop());\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toperators.push(token);\n\t\t}\n\t}\n\n\treturn noperators + 1 === operands.length + operators.length\n\t\t? operands.concat(operators.reverse())\n\t\t: null /* parity */;\n}\n\n/**\n * Check if current stream state is in sign (e.g. positive or negative) context\n * for reverse parsing\n * @param  {StreamReader} stream\n * @return {Boolean}\n */\nfunction isReverseSignContext(stream) {\n\tconst start = stream.pos;\n\tlet ch, inCtx = true;\n\n\twhile (!isSoF(stream)) {\n\t\tstream.backUp(1);\n\t\tch = stream.peek();\n\n\t\tif (isWhiteSpace(ch)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tinCtx = ch === LEFT_PARENTHESIS || isOperator(ch);\n\t\tbreak;\n\t}\n\n\tstream.pos = start;\n\treturn inCtx;\n}\n\n/**\n * Number token factory\n * @param  {String} value\n * @param  {Number} [priority ]\n * @return {Token}\n */\nfunction number(value, priority) {\n\treturn new Token(NUMBER, parseFloat(value), priority);\n}\n\n/**\n * Unary operator factory\n * @param  {Number} value    Operator  character code\n * @param  {Number} priority Operator execution priority\n * @return {Token[]}\n */\nfunction op1(value, priority) {\n\tif (value === MINUS) {\n\t\tpriority += 2;\n\t}\n\treturn new Token(OP1, value, priority);\n}\n\n/**\n * Binary operator factory\n * @param  {Number} value    Operator  character code\n * @param  {Number} priority Operator execution priority\n * @return {Token[]}\n */\nfunction op2(value, priority) {\n\tif (value === MULTIPLY) {\n\t\tpriority += 1;\n\t} else if (value === DIVIDE || value === INT_DIVIDE) {\n\t\tpriority += 2;\n\t}\n\n\treturn new Token(OP2, value, priority);\n}\n\nfunction error(name, stream) {\n\tif (stream) {\n\t\tname += ` at column ${stream.start} of expression`;\n\t}\n\tthrow new Error(name);\n}\n\nfunction isSign(ch) {\n\treturn isPositiveSign(ch) || isNegativeSign(ch);\n}\n\nfunction isPositiveSign(ch) {\n\treturn ch === PLUS;\n}\n\nfunction isNegativeSign(ch) {\n\treturn ch === MINUS;\n}\n\nfunction isOperator(ch) {\n\treturn ch === PLUS || ch === MINUS || ch === MULTIPLY\n\t\t|| ch === DIVIDE || ch === INT_DIVIDE;\n}\n\nconst ops1 = {\n\t[MINUS]: num => -num\n};\n\nconst ops2 = {\n\t[PLUS]:       (a, b) => a + b,\n\t[MINUS]:      (a, b) => a - b,\n\t[MULTIPLY]:   (a, b) => a * b,\n\t[DIVIDE]:     (a, b) => a / b,\n\t[INT_DIVIDE]: (a, b) => Math.floor(a / b)\n};\n\n/**\n * Evaluates given math expression\n * @param  {String|StreamReader|Array} expr Expression to evaluate\n * @param  {Boolean}                   [backward] Parses given expression (string\n *                                                or stream) in backward direction\n * @return {Number}\n */\nvar index = function(expr, backward) {\n\tif (!Array.isArray(expr)) {\n\t\texpr = parse(expr, backward);\n\t}\n\n\tif (!expr || !expr.length) {\n\t\treturn null;\n\t}\n\n\tconst nstack = [];\n\tlet n1, n2, f;\n\tlet item, value;\n\n\tfor (let i = 0, il = expr.length, token; i < il; i++) {\n\t\ttoken = expr[i];\n\t\tif (token.type === NUMBER) {\n\t\t\tnstack.push(token.value);\n\t\t} else if (token.type === OP2) {\n\t\t\tn2 = nstack.pop();\n\t\t\tn1 = nstack.pop();\n\t\t\tf = ops2[token.value];\n\t\t\tnstack.push(f(n1, n2));\n\t\t} else if (token.type === OP1) {\n\t\t\tn1 = nstack.pop();\n\t\t\tf = ops1[token.value];\n\t\t\tnstack.push(f(n1));\n\t\t} else {\n\t\t\tthrow new Error('Invalid expression');\n\t\t}\n\t}\n\n\tif (nstack.length > 1) {\n\t\tthrow new Error('Invalid Expression (parity)');\n\t}\n\n\treturn nstack[0];\n};\n\nexport { parse };export default index;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* Based on @sergeche's work in his emmet plugin */\n\nimport * as vscode from 'vscode';\n\nconst reNumber = /[0-9]/;\n\n/**\n * Incerement number under caret of given editor\n */\nexport function incrementDecrement(delta: number): Thenable<boolean> | undefined {\n\tif (!vscode.window.activeTextEditor) {\n\t\tvscode.window.showInformationMessage('No editor is active');\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\n\treturn editor.edit(editBuilder => {\n\t\teditor.selections.forEach(selection => {\n\t\t\tlet rangeToReplace = locate(editor.document, selection.isReversed ? selection.anchor : selection.active);\n\t\t\tif (!rangeToReplace) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst text = editor.document.getText(rangeToReplace);\n\t\t\tif (isValidNumber(text)) {\n\t\t\t\teditBuilder.replace(rangeToReplace, update(text, delta));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Updates given number with `delta` and returns string formatted according\n * to original string format\n */\nexport function update(numString: string, delta: number): string {\n\tlet m: RegExpMatchArray | null;\n\tlet decimals = (m = numString.match(/\\.(\\d+)$/)) ? m[1].length : 1;\n\tlet output = String((parseFloat(numString) + delta).toFixed(decimals)).replace(/\\.0+$/, '');\n\n\tif (m = numString.match(/^\\-?(0\\d+)/)) {\n\t\t// padded number: preserve padding\n\t\toutput = output.replace(/^(\\-?)(\\d+)/, (_, minus, prefix) =>\n\t\t\tminus + '0'.repeat(Math.max(0, (m ? m[1].length : 0) - prefix.length)) + prefix);\n\t}\n\n\tif (/^\\-?\\./.test(numString)) {\n\t\t// omit integer part\n\t\toutput = output.replace(/^(\\-?)0+/, '$1');\n\t}\n\n\treturn output;\n}\n\n/**\n * Locates number from given position in the document\n *\n * @return Range of number or `undefined` if not found\n */\nexport function locate(document: vscode.TextDocument, pos: vscode.Position): vscode.Range | undefined {\n\n\tconst line = document.lineAt(pos.line).text;\n\tlet start = pos.character;\n\tlet end = pos.character;\n\tlet hadDot = false, hadMinus = false;\n\tlet ch;\n\n\twhile (start > 0) {\n\t\tch = line[--start];\n\t\tif (ch === '-') {\n\t\t\thadMinus = true;\n\t\t\tbreak;\n\t\t} else if (ch === '.' && !hadDot) {\n\t\t\thadDot = true;\n\t\t} else if (!reNumber.test(ch)) {\n\t\t\tstart++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (line[end] === '-' && !hadMinus) {\n\t\tend++;\n\t}\n\n\twhile (end < line.length) {\n\t\tch = line[end++];\n\t\tif (ch === '.' && !hadDot && reNumber.test(line[end])) {\n\t\t\t// A dot must be followed by a number. Otherwise stop parsing\n\t\t\thadDot = true;\n\t\t} else if (!reNumber.test(ch)) {\n\t\t\tend--;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// ensure that found range contains valid number\n\tif (start !== end && isValidNumber(line.slice(start, end))) {\n\t\treturn new vscode.Range(pos.line, start, pos.line, end);\n\t}\n\n\treturn;\n}\n\n/**\n * Check if given string contains valid number\n */\nfunction isValidNumber(str: string): boolean {\n\treturn str ? !isNaN(parseFloat(str)) : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on @sergeche's work on the emmet plugin for atom\n\nimport { TextEditor, Range, Position, window, TextEdit } from 'vscode';\nimport * as path from 'path';\nimport { getImageSize } from './imageSizeHelper';\nimport { parseDocument, getNode, iterateCSSToken, getCssPropertyFromRule, isStyleSheet, validate } from './util';\nimport { HtmlNode, CssToken, HtmlToken, Attribute, Property } from 'EmmetNode';\nimport { locateFile } from './locateFile';\nimport parseStylesheet from '@emmetio/css-parser';\nimport { DocumentStreamReader } from './bufferStream';\n\n/**\n * Updates size of context image in given editor\n */\nexport function updateImageSize() {\n\tif (!validate() || !window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = window.activeTextEditor;\n\n\tlet allUpdatesPromise = editor.selections.reverse().map(selection => {\n\t\tlet position = selection.isReversed ? selection.active : selection.anchor;\n\t\tif (!isStyleSheet(editor.document.languageId)) {\n\t\t\treturn updateImageSizeHTML(editor, position);\n\t\t} else {\n\t\t\treturn updateImageSizeCSSFile(editor, position);\n\t\t}\n\t});\n\n\treturn Promise.all(allUpdatesPromise).then((updates) => {\n\t\treturn editor.edit(builder => {\n\t\t\tupdates.forEach(update => {\n\t\t\t\tupdate.forEach((textEdit: TextEdit) => {\n\t\t\t\t\tbuilder.replace(textEdit.range, textEdit.newText);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Updates image size of context tag of HTML model\n */\nfunction updateImageSizeHTML(editor: TextEditor, position: Position): Promise<TextEdit[]> {\n\tconst imageNode = getImageHTMLNode(editor, position);\n\n\tconst src = imageNode && getImageSrcHTML(imageNode);\n\n\tif (!src) {\n\t\treturn updateImageSizeStyleTag(editor, position);\n\t}\n\n\treturn locateFile(path.dirname(editor.document.fileName), src)\n\t\t.then(getImageSize)\n\t\t.then((size: any) => {\n\t\t\t// since this action is asynchronous, we have to ensure that editor wasn’t\n\t\t\t// changed and user didn’t moved caret outside <img> node\n\t\t\tconst img = getImageHTMLNode(editor, position);\n\t\t\tif (img && getImageSrcHTML(img) === src) {\n\t\t\t\treturn updateHTMLTag(editor, img, size.width, size.height);\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t\t.catch(err => { console.warn('Error while updating image size:', err); return []; });\n}\n\nfunction updateImageSizeStyleTag(editor: TextEditor, position: Position): Promise<TextEdit[]> {\n\tconst getPropertyInsiderStyleTag = (editor: TextEditor): Property | null => {\n\t\tconst rootNode = parseDocument(editor.document);\n\t\tconst currentNode = <HtmlNode>getNode(rootNode, position, true);\n\t\tif (currentNode && currentNode.name === 'style'\n\t\t\t&& currentNode.open.end.isBefore(position)\n\t\t\t&& currentNode.close.start.isAfter(position)) {\n\t\t\tlet buffer = new DocumentStreamReader(editor.document, currentNode.open.end, new Range(currentNode.open.end, currentNode.close.start));\n\t\t\tlet rootNode = parseStylesheet(buffer);\n\t\t\tconst node = getNode(rootNode, position, true);\n\t\t\treturn (node && node.type === 'property') ? <Property>node : null;\n\t\t}\n\t\treturn null;\n\t};\n\n\treturn updateImageSizeCSS(editor, position, getPropertyInsiderStyleTag);\n}\n\nfunction updateImageSizeCSSFile(editor: TextEditor, position: Position): Promise<TextEdit[]> {\n\treturn updateImageSizeCSS(editor, position, getImageCSSNode);\n}\n\n/**\n * Updates image size of context rule of stylesheet model\n */\nfunction updateImageSizeCSS(editor: TextEditor, position: Position, fetchNode: (editor: TextEditor, position: Position) => Property | null): Promise<TextEdit[]> {\n\tconst node = fetchNode(editor, position);\n\tconst src = node && getImageSrcCSS(node, position);\n\n\tif (!src) {\n\t\treturn Promise.reject(new Error('No valid image source'));\n\t}\n\n\treturn locateFile(path.dirname(editor.document.fileName), src)\n\t\t.then(getImageSize)\n\t\t.then((size: any): TextEdit[] => {\n\t\t\t// since this action is asynchronous, we have to ensure that editor wasn’t\n\t\t\t// changed and user didn’t moved caret outside <img> node\n\t\t\tconst prop = fetchNode(editor, position);\n\t\t\tif (prop && getImageSrcCSS(prop, position) === src) {\n\t\t\t\treturn updateCSSNode(editor, prop, size.width, size.height);\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t\t.catch(err => { console.warn('Error while updating image size:', err); return []; });\n}\n\n/**\n * Returns <img> node under caret in given editor or `null` if such node cannot\n * be found\n */\nfunction getImageHTMLNode(editor: TextEditor, position: Position): HtmlNode | null {\n\tconst rootNode = parseDocument(editor.document);\n\tconst node = <HtmlNode>getNode(rootNode, position, true);\n\n\treturn node && node.name.toLowerCase() === 'img' ? node : null;\n}\n\n/**\n * Returns css property under caret in given editor or `null` if such node cannot\n * be found\n */\nfunction getImageCSSNode(editor: TextEditor, position: Position): Property | null {\n\tconst rootNode = parseDocument(editor.document);\n\tconst node = getNode(rootNode, position, true);\n\treturn node && node.type === 'property' ? <Property>node : null;\n}\n\n/**\n * Returns image source from given <img> node\n */\nfunction getImageSrcHTML(node: HtmlNode): string | undefined {\n\tconst srcAttr = getAttribute(node, 'src');\n\tif (!srcAttr) {\n\t\treturn;\n\t}\n\n\treturn (<HtmlToken>srcAttr.value).value;\n}\n\n/**\n * Returns image source from given `url()` token\n */\nfunction getImageSrcCSS(node: Property | undefined, position: Position): string | undefined {\n\tif (!node) {\n\t\treturn;\n\t}\n\tconst urlToken = findUrlToken(node, position);\n\tif (!urlToken) {\n\t\treturn;\n\t}\n\n\t// A stylesheet token may contain either quoted ('string') or unquoted URL\n\tlet urlValue = urlToken.item(0);\n\tif (urlValue && urlValue.type === 'string') {\n\t\turlValue = urlValue.item(0);\n\t}\n\n\treturn urlValue && urlValue.valueOf();\n}\n\n/**\n * Updates size of given HTML node\n */\nfunction updateHTMLTag(editor: TextEditor, node: HtmlNode, width: number, height: number): TextEdit[] {\n\tconst srcAttr = getAttribute(node, 'src');\n\tconst widthAttr = getAttribute(node, 'width');\n\tconst heightAttr = getAttribute(node, 'height');\n\tconst quote = getAttributeQuote(editor, srcAttr);\n\tconst endOfAttributes = node.attributes[node.attributes.length - 1].end;\n\n\tlet edits: TextEdit[] = [];\n\tlet textToAdd = '';\n\n\tif (!widthAttr) {\n\t\ttextToAdd += ` width=${quote}${width}${quote}`;\n\t} else {\n\t\tedits.push(new TextEdit(new Range(widthAttr.value.start, widthAttr.value.end), String(width)));\n\t}\n\tif (!heightAttr) {\n\t\ttextToAdd += ` height=${quote}${height}${quote}`;\n\t} else {\n\t\tedits.push(new TextEdit(new Range(heightAttr.value.start, heightAttr.value.end), String(height)));\n\t}\n\tif (textToAdd) {\n\t\tedits.push(new TextEdit(new Range(endOfAttributes, endOfAttributes), textToAdd));\n\t}\n\n\treturn edits;\n}\n\n/**\n * Updates size of given CSS rule\n */\nfunction updateCSSNode(editor: TextEditor, srcProp: Property, width: number, height: number): TextEdit[] {\n\tconst rule = srcProp.parent;\n\tconst widthProp = getCssPropertyFromRule(rule, 'width');\n\tconst heightProp = getCssPropertyFromRule(rule, 'height');\n\n\t// Detect formatting\n\tconst separator = srcProp.separator || ': ';\n\tconst before = getPropertyDelimitor(editor, srcProp);\n\n\tlet edits: TextEdit[] = [];\n\tif (!srcProp.terminatorToken) {\n\t\tedits.push(new TextEdit(new Range(srcProp.end, srcProp.end), ';'));\n\t}\n\n\tlet textToAdd = '';\n\tif (!widthProp) {\n\t\ttextToAdd += `${before}width${separator}${width}px;`;\n\t} else {\n\t\tedits.push(new TextEdit(new Range(widthProp.valueToken.start, widthProp.valueToken.end), `${width}px`));\n\t}\n\tif (!heightProp) {\n\t\ttextToAdd += `${before}height${separator}${height}px;`;\n\t} else {\n\t\tedits.push(new TextEdit(new Range(heightProp.valueToken.start, heightProp.valueToken.end), `${height}px`));\n\t}\n\tif (textToAdd) {\n\t\tedits.push(new TextEdit(new Range(srcProp.end, srcProp.end), textToAdd));\n\t}\n\n\treturn edits;\n}\n\n/**\n * Returns attribute object with `attrName` name from given HTML node\n */\nfunction getAttribute(node: HtmlNode, attrName: string): Attribute {\n\tattrName = attrName.toLowerCase();\n\treturn node && (node.open as any).attributes.find((attr: any) => attr.name.value.toLowerCase() === attrName);\n}\n\n/**\n * Returns quote character, used for value of given attribute. May return empty\n * string if attribute wasn’t quoted\n\n */\nfunction getAttributeQuote(editor: TextEditor, attr: any): string {\n\tconst range = new Range(attr.value ? attr.value.end : attr.end, attr.end);\n\treturn range.isEmpty ? '' : editor.document.getText(range);\n}\n\n/**\n * Finds 'url' token for given `pos` point in given CSS property `node`\n */\nfunction findUrlToken(node: Property, pos: Position): CssToken | undefined {\n\tfor (let i = 0, il = (node as any).parsedValue.length, url; i < il; i++) {\n\t\titerateCSSToken((node as any).parsedValue[i], (token: CssToken) => {\n\t\t\tif (token.type === 'url' && token.start.isBeforeOrEqual(pos) && token.end.isAfterOrEqual(pos)) {\n\t\t\t\turl = token;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tif (url) {\n\t\t\treturn url;\n\t\t}\n\t}\n\treturn;\n}\n\n/**\n * Returns a string that is used to delimit properties in current node’s rule\n */\nfunction getPropertyDelimitor(editor: TextEditor, node: Property): string {\n\tlet anchor;\n\tif (anchor = (node.previousSibling || node.parent.contentStartToken)) {\n\t\treturn editor.document.getText(new Range(anchor.end, node.start));\n\t} else if (anchor = (node.nextSibling || node.parent.contentEndToken)) {\n\t\treturn editor.document.getText(new Range(node.end, anchor.start));\n\t}\n\n\treturn '';\n}\n\n","module.exports = require(\"path\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on @sergeche's work on the emmet plugin for atom\n// TODO: Move to https://github.com/emmetio/image-size\n\nimport * as path from 'path';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { parse as parseUrl } from 'url';\nimport * as sizeOf from 'image-size';\n\nconst reUrl = /^https?:/;\n\n/**\n * Get size of given image file. Supports files from local filesystem,\n * as well as URLs\n */\nexport function getImageSize(file: string) {\n\tfile = file.replace(/^file:\\/\\//, '');\n\treturn reUrl.test(file) ? getImageSizeFromURL(file) : getImageSizeFromFile(file);\n}\n\n/**\n * Get image size from file on local file system\n */\nfunction getImageSizeFromFile(file: string) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst isDataUrl = file.match(/^data:.+?;base64,/);\n\n\t\tif (isDataUrl) {\n\t\t\t// NB should use sync version of `sizeOf()` for buffers\n\t\t\ttry {\n\t\t\t\tconst data = Buffer.from(file.slice(isDataUrl[0].length), 'base64');\n\t\t\t\treturn resolve(sizeForFileName('', sizeOf(data)));\n\t\t\t} catch (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t}\n\n\t\tsizeOf(file, (err: any, size: any) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\tresolve(sizeForFileName(path.basename(file), size));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Get image size from given remove URL\n */\nfunction getImageSizeFromURL(urlStr: string) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst url = parseUrl(urlStr);\n\t\tconst getTransport = url.protocol === 'https:' ? https.get : http.get;\n\n\t\tif (!url.pathname) {\n\t\t\treturn reject('Given url doesnt have pathname property');\n\t\t}\n\t\tconst urlPath: string = url.pathname;\n\n\t\tgetTransport(url as any, resp => {\n\t\t\tconst chunks: Buffer[] = [];\n\t\t\tlet bufSize = 0;\n\n\t\t\tconst trySize = (chunks: Buffer[]) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst size = sizeOf(Buffer.concat(chunks, bufSize));\n\t\t\t\t\tresp.removeListener('data', onData);\n\t\t\t\t\tresp.destroy(); // no need to read further\n\t\t\t\t\tresolve(sizeForFileName(path.basename(urlPath), size));\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// might not have enough data, skip error\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onData = (chunk: Buffer) => {\n\t\t\t\tbufSize += chunk.length;\n\t\t\t\tchunks.push(chunk);\n\t\t\t\ttrySize(chunks);\n\t\t\t};\n\n\t\t\tresp\n\t\t\t\t.on('data', onData)\n\t\t\t\t.on('end', () => trySize(chunks))\n\t\t\t\t.once('error', err => {\n\t\t\t\t\tresp.removeListener('data', onData);\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t})\n\t\t\t.once('error', reject);\n\t});\n}\n\n/**\n * Returns size object for given file name. If file name contains `@Nx` token,\n * the final dimentions will be downscaled by N\n */\nfunction sizeForFileName(fileName: string, size: any) {\n\tconst m = fileName.match(/@(\\d+)x\\./);\n\tconst scale = m ? +m[1] : 1;\n\n\treturn {\n\t\trealWidth: size.width,\n\t\trealHeight: size.height,\n\t\twidth: Math.floor(size.width / scale),\n\t\theight: Math.floor(size.height / scale)\n\t};\n}\n","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"url\");","'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar detector = require('./detector');\n\nvar handlers = {};\nvar types = require('./types');\n\n// load all available handlers\ntypes.forEach(function (type) {\n  handlers[type] = require('./types/' + type);\n});\n\n// Maximum buffer size, with a default of 128 kilobytes.\n// TO-DO: make this adaptive based on the initial signature of the image\nvar MaxBufferSize = 128*1024;\n\nfunction lookup (buffer, filepath) {\n  // detect the file type.. don't rely on the extension\n  var type = detector(buffer, filepath);\n\n  // find an appropriate handler for this file type\n  if (type in handlers) {\n    var size = handlers[type].calculate(buffer, filepath);\n    if (size !== false) {\n      size.type = type;\n      return size;\n    }\n  }\n\n  // throw up, if we don't understand the file\n  throw new TypeError('unsupported file type: ' + type + ' (file: ' + filepath + ')');\n}\n\nfunction asyncFileToBuffer (filepath, callback) {\n  // open the file in read only mode\n  fs.open(filepath, 'r', function (err, descriptor) {\n    if (err) { return callback(err); }\n    var size = fs.fstatSync(descriptor).size;\n    if (size <= 0){return callback(new Error(\"File size is not greater than 0 —— \" + filepath)); }\n    var bufferSize = Math.min(size, MaxBufferSize);\n    var buffer = new Buffer(bufferSize);\n    // read first buffer block from the file, asynchronously\n    fs.read(descriptor, buffer, 0, bufferSize, 0, function (err) {\n      if (err) { return callback(err); }\n      // close the file, we are done\n      fs.close(descriptor, function (err) {\n        callback(err, buffer);\n      });\n    });\n  });\n}\n\nfunction syncFileToBuffer (filepath) {\n  // read from the file, synchronously\n  var descriptor = fs.openSync(filepath, 'r');\n  var size = fs.fstatSync(descriptor).size;\n  var bufferSize = Math.min(size, MaxBufferSize);\n  var buffer = new Buffer(bufferSize);\n  fs.readSync(descriptor, buffer, 0, bufferSize, 0);\n  fs.closeSync(descriptor);\n  return buffer;\n}\n\n/**\n * @params input - buffer or relative/absolute path of the image file\n * @params callback - optional function for async detection\n */\nmodule.exports = function (input, callback) {\n\n  // Handle buffer input\n  if (Buffer.isBuffer(input)) {\n    return lookup(input);\n  }\n\n  // input should be a string at this point\n  if (typeof input !== 'string') {\n    throw new TypeError('invalid invocation');\n  }\n\n  // resolve the file path\n  var filepath = path.resolve(input);\n\n  if (typeof callback === 'function') {\n    asyncFileToBuffer(filepath, function (err, buffer) {\n      if (err) { return callback(err); }\n\n      // return the dimensions\n      var dimensions;\n      try {\n        dimensions = lookup(buffer, filepath);\n      } catch (e) {\n        err = e;\n      }\n      callback(err, dimensions);\n    });\n  } else {\n    var buffer = syncFileToBuffer(filepath);\n    return lookup(buffer, filepath);\n  }\n};\n\nmodule.exports.types = types;\n","module.exports = require(\"fs\");","'use strict';\n\nvar typeMap = {};\nvar types = require('./types');\n\n// load all available handlers\ntypes.forEach(function (type) {\n  typeMap[type] = require('./types/' + type).detect;\n});\n\nmodule.exports = function (buffer, filepath) {\n  var type, result;\n  for (type in typeMap) {\n    result = typeMap[type](buffer, filepath);\n    if (result) {\n      return type;\n    }\n  }\n};\n","'use strict';\n\nmodule.exports = [\n  'bmp',\n  'gif',\n  'jpg',\n  'png',\n  'psd',\n  'svg',\n  'tiff',\n  'webp',\n  'dds'\n];\n","var map = {\n\t\"./bmp\": 37,\n\t\"./bmp.js\": 37,\n\t\"./dds\": 38,\n\t\"./dds.js\": 38,\n\t\"./gif\": 39,\n\t\"./gif.js\": 39,\n\t\"./jpg\": 40,\n\t\"./jpg.js\": 40,\n\t\"./png\": 41,\n\t\"./png.js\": 41,\n\t\"./psd\": 42,\n\t\"./psd.js\": 42,\n\t\"./svg\": 43,\n\t\"./svg.js\": 43,\n\t\"./tiff\": 44,\n\t\"./tiff.js\": 44,\n\t\"./webp\": 46,\n\t\"./webp.js\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 36;","'use strict';\n\nfunction isBMP (buffer) {\n  return ('BM' === buffer.toString('ascii', 0, 2));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32LE(18),\n    'height': Math.abs(buffer.readInt32LE(22))\n  };\n}\n\nmodule.exports = {\n  'detect': isBMP,\n  'calculate': calculate\n};\n","'use strict';\n\nfunction isDDS(buffer){\n\treturn buffer.readUInt32LE(0) === 0x20534444;\n}\n\nfunction calculate(buffer){\n\t// read file resolution metadata\n\treturn {\n\t\t'height': buffer.readUInt32LE(12),\n\t\t'width': buffer.readUInt32LE(16)\n\t};\n}\n\nmodule.exports = {\n\t'detect': isDDS,\n\t'calculate': calculate\n};\n","'use strict';\n\nvar gifRegexp = /^GIF8[79]a/;\nfunction isGIF (buffer) {\n  var signature = buffer.toString('ascii', 0, 6);\n  return (gifRegexp.test(signature));\n}\n\nfunction calculate(buffer) {\n  return {\n    'width': buffer.readUInt16LE(6),\n    'height': buffer.readUInt16LE(8)\n  };\n}\n\nmodule.exports = {\n  'detect': isGIF,\n  'calculate': calculate\n};\n","'use strict';\n\n// NOTE: we only support baseline and progressive JPGs here\n// due to the structure of the loader class, we only get a buffer\n// with a maximum size of 4096 bytes. so if the SOF marker is outside\n// if this range we can't detect the file size correctly.\n\nfunction isJPG (buffer) { //, filepath\n  var SOIMarker = buffer.toString('hex', 0, 2);\n  return ('ffd8' === SOIMarker);\n}\n\nfunction extractSize (buffer, i) {\n  return {\n    'height' : buffer.readUInt16BE(i),\n    'width' : buffer.readUInt16BE(i + 2)\n  };\n}\n\nfunction validateBuffer (buffer, i) {\n  // index should be within buffer limits\n  if (i > buffer.length) {\n    throw new TypeError('Corrupt JPG, exceeded buffer limits');\n  }\n  // Every JPEG block must begin with a 0xFF\n  if (buffer[i] !== 0xFF) {\n    throw new TypeError('Invalid JPG, marker table corrupted');\n  }\n}\n\nfunction calculate (buffer) {\n\n  // Skip 4 chars, they are for signature\n  buffer = buffer.slice(4);\n\n  var i, next;\n  while (buffer.length) {\n    // read length of the next block\n    i = buffer.readUInt16BE(0);\n\n    // ensure correct format\n    validateBuffer(buffer, i);\n\n    // 0xFFC0 is baseline standard(SOF)\n    // 0xFFC1 is baseline optimized(SOF)\n    // 0xFFC2 is progressive(SOF2)\n    next = buffer[i + 1];\n    if (next === 0xC0 || next === 0xC1 || next === 0xC2) {\n      return extractSize(buffer, i + 5);\n    }\n\n    // move to the next block\n    buffer = buffer.slice(i + 2);\n  }\n\n  throw new TypeError('Invalid JPG, no size found');\n}\n\nmodule.exports = {\n  'detect': isJPG,\n  'calculate': calculate\n};\n","'use strict';\n\nvar pngSignature = 'PNG\\r\\n\\x1a\\n';\nvar pngImageHeaderChunkName = 'IHDR';\nvar pngFriedChunkName = 'CgBI'; // Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\n\nfunction isPNG (buffer) {\n  if (pngSignature === buffer.toString('ascii', 1, 8)) {\n    var chunkName = buffer.toString('ascii', 12, 16);\n    if (chunkName === pngFriedChunkName) {\n      chunkName = buffer.toString('ascii', 28, 32);\n    }\n    if (chunkName !== pngImageHeaderChunkName) {\n      throw new TypeError('invalid png');\n    }\n    return true;\n  }\n}\n\nfunction calculate (buffer) {\n  if (buffer.toString('ascii', 12, 16) === pngFriedChunkName) {\n    return {\n      'width': buffer.readUInt32BE(32),\n      'height': buffer.readUInt32BE(36)\n    };\n  }\n  return {\n    'width': buffer.readUInt32BE(16),\n    'height': buffer.readUInt32BE(20)\n  };\n}\n\nmodule.exports = {\n  'detect': isPNG,\n  'calculate': calculate\n};\n","'use strict';\n\nfunction isPSD (buffer) {\n  return ('8BPS' === buffer.toString('ascii', 0, 4));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32BE(18),\n    'height': buffer.readUInt32BE(14)\n  };\n}\n\nmodule.exports = {\n  'detect': isPSD,\n  'calculate': calculate\n};\n","'use strict';\n\nvar svgReg = /<svg[^>]+[^>]*>/;\nfunction isSVG (buffer) {\n  return svgReg.test(buffer);\n}\n\nvar extractorRegExps = {\n  'root': /<svg\\s[^>]+>/,\n  'width': /\\bwidth=(['\"])([^%]+?)\\1/,\n  'height': /\\bheight=(['\"])([^%]+?)\\1/,\n  'viewbox': /\\bviewBox=(['\"])(.+?)\\1/\n};\n\nfunction parseViewbox (viewbox) {\n  var bounds = viewbox.split(' ');\n  return {\n    'width': parseInt(bounds[2], 10),\n    'height': parseInt(bounds[3], 10)\n  };\n}\n\nfunction parseAttributes (root) {\n  var width = root.match(extractorRegExps.width);\n  var height = root.match(extractorRegExps.height);\n  var viewbox = root.match(extractorRegExps.viewbox);\n  return {\n    'width': width && parseInt(width[2], 10),\n    'height': height && parseInt(height[2], 10),\n    'viewbox': viewbox && parseViewbox(viewbox[2])\n  };\n}\n\nfunction calculateByDimensions (attrs) {\n  return {\n    'width': attrs.width,\n    'height': attrs.height\n  };\n}\n\nfunction calculateByViewbox (attrs) {\n  var ratio = attrs.viewbox.width / attrs.viewbox.height;\n  if (attrs.width) {\n    return {\n      'width': attrs.width,\n      'height': Math.floor(attrs.width / ratio)\n    };\n  }\n  if (attrs.height) {\n    return {\n      'width': Math.floor(attrs.height * ratio),\n      'height': attrs.height\n    };\n  }\n  return {\n    'width': attrs.viewbox.width,\n    'height': attrs.viewbox.height\n  };\n}\n\nfunction calculate (buffer) {\n  var root = buffer.toString('utf8').match(extractorRegExps.root);\n  if (root) {\n    var attrs = parseAttributes(root[0]);\n    if (attrs.width && attrs.height) {\n      return calculateByDimensions(attrs);\n    }\n    if (attrs.viewbox) {\n      return calculateByViewbox(attrs);\n    }\n  }\n  throw new TypeError('invalid svg');\n}\n\nmodule.exports = {\n  'detect': isSVG,\n  'calculate': calculate\n};\n","'use strict';\n\n// based on http://www.compix.com/fileformattif.htm\n// TO-DO: support big-endian as well\n\nvar fs = require('fs');\nvar readUInt = require('../readUInt');\n\nfunction isTIFF (buffer) {\n  var hex4 = buffer.toString('hex', 0, 4);\n  return ('49492a00' === hex4 || '4d4d002a' === hex4);\n}\n\n// Read IFD (image-file-directory) into a buffer\nfunction readIFD (buffer, filepath, isBigEndian) {\n\n  var ifdOffset = readUInt(buffer, 32, 4, isBigEndian);\n\n  // read only till the end of the file\n  var bufferSize = 1024;\n  var fileSize = fs.statSync(filepath).size;\n  if (ifdOffset + bufferSize > fileSize) {\n    bufferSize = fileSize - ifdOffset - 10;\n  }\n\n  // populate the buffer\n  var endBuffer = new Buffer(bufferSize);\n  var descriptor = fs.openSync(filepath, 'r');\n  fs.readSync(descriptor, endBuffer, 0, bufferSize, ifdOffset);\n\n  // var ifdLength = readUInt(endBuffer, 16, 0, isBigEndian);\n  var ifdBuffer = endBuffer.slice(2); //, 2 + 12 * ifdLength);\n  return ifdBuffer;\n}\n\n// TIFF values seem to be messed up on Big-Endian, this helps\nfunction readValue (buffer, isBigEndian) {\n  var low = readUInt(buffer, 16, 8, isBigEndian);\n  var high = readUInt(buffer, 16, 10, isBigEndian);\n  return (high << 16) + low;\n}\n\n// move to the next tag\nfunction nextTag (buffer) {\n  if (buffer.length > 24) {\n    return buffer.slice(12);\n  }\n}\n\n// Extract IFD tags from TIFF metadata\nfunction extractTags (buffer, isBigEndian) {\n  var tags = {};\n  var code, type, length;\n\n  while (buffer && buffer.length) {\n    code = readUInt(buffer, 16, 0, isBigEndian);\n    type = readUInt(buffer, 16, 2, isBigEndian);\n    length = readUInt(buffer, 32, 4, isBigEndian);\n\n    // 0 means end of IFD\n    if (code === 0) {\n      break;\n    } else {\n      // 256 is width, 257 is height\n      // if (code === 256 || code === 257) {\n      if (length === 1 && (type === 3 || type === 4)) {\n        tags[code] = readValue(buffer, isBigEndian);\n      }\n\n      // move to the next tag\n      buffer = nextTag(buffer);\n    }\n  }\n  return tags;\n}\n\n// Test if the TIFF is Big Endian or Little Endian\nfunction determineEndianness (buffer) {\n  var signature = buffer.toString('ascii', 0, 2);\n  if ('II' === signature) {\n    return 'LE';\n  } else if ('MM' === signature) {\n    return 'BE';\n  }\n}\n\nfunction calculate (buffer, filepath) {\n\n  if (!filepath) {\n    throw new TypeError('Tiff doesn\\'t support buffer');\n  }\n\n  // Determine BE/LE\n  var isBigEndian = determineEndianness(buffer) === 'BE';\n\n  // read the IFD\n  var ifdBuffer = readIFD(buffer, filepath, isBigEndian);\n\n  // extract the tags from the IFD\n  var tags = extractTags(ifdBuffer, isBigEndian);\n\n  var width = tags[256];\n  var height = tags[257];\n\n  if (!width || !height) {\n    throw new TypeError('Invalid Tiff, missing tags');\n  }\n\n  return {\n    'width': width,\n    'height': height\n  };\n}\n\nmodule.exports = {\n  'detect': isTIFF,\n  'calculate': calculate\n};\n","'use strict';\n\n// Abstract reading multi-byte unsigned integers\nfunction readUInt (buffer, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  var endian = !!isBigEndian ? 'BE' : 'LE';\n  var method = buffer['readUInt' + bits + endian];\n  return method.call(buffer, offset);\n}\n\nmodule.exports = readUInt;\n","'use strict';\n\n// based on https://developers.google.com/speed/webp/docs/riff_container\n\nfunction isWebP (buffer) {\n  var riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n  var webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n  var vp8Header  = 'VP8'  === buffer.toString('ascii', 12, 15);\n  return (riffHeader && webpHeader && vp8Header);\n}\n\nfunction calculate (buffer) {\n  var chunkHeader = buffer.toString('ascii', 12, 16);\n  buffer = buffer.slice(20, 30);\n\n  // Extended webp stream signature\n  if (chunkHeader === 'VP8X') {\n    var extendedHeader = buffer[0];\n    var validStart = (extendedHeader & 0xc0) === 0;\n    var validEnd = (extendedHeader & 0x01) === 0;\n    if (validStart && validEnd) {\n      return calculateExtended(buffer);\n    } else {\n      return false;\n    }\n  }\n\n  // Lossless webp stream signature\n  if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n    return calculateLossy(buffer);\n  }\n\n  // Lossy webp stream signature\n  var signature = buffer.toString('hex', 3, 6);\n  if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n    return calculateLossless(buffer);\n  }\n\n  return false;\n}\n\nfunction calculateExtended (buffer) {\n  return {\n    'width': 1 + buffer.readUIntLE(4, 3),\n    'height': 1 + buffer.readUIntLE(7, 3)\n  }\n}\n\nfunction calculateLossless (buffer) {\n  return {\n    'width': 1 + (((buffer[2] & 0x3F) << 8) | buffer[1]),\n    'height': 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) |\n                  ((buffer[2] & 0xC0) >> 6))\n  };\n}\n\nfunction calculateLossy (buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    'width': buffer.readInt16LE(6) & 0x3fff,\n    'height': buffer.readInt16LE(8) & 0x3fff\n  };\n}\n\nmodule.exports = {\n  'detect': isWebP,\n  'calculate': calculate\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on @sergeche's work on the emmet plugin for atom\n// TODO: Move to https://github.com/emmetio/file-utils\n\n\n\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nconst reAbsolutePosix = /^\\/+/;\nconst reAbsoluteWin32 = /^\\\\+/;\nconst reAbsolute = path.sep === '/' ? reAbsolutePosix : reAbsoluteWin32;\n\n/**\n * Locates given `filePath` on user’s file system and returns absolute path to it.\n * This method expects either URL, or relative/absolute path to resource\n * @param basePath Base path to use if filePath is not absoulte\n * @param filePath File to locate.\n */\nexport function locateFile(base: string, filePath: string): Promise<string> {\n\tif (/^\\w+:/.test(filePath)) {\n\t\t// path with protocol, already absolute\n\t\treturn Promise.resolve(filePath);\n\t}\n\n\tfilePath = path.normalize(filePath);\n\n\treturn reAbsolute.test(filePath)\n\t\t? resolveAbsolute(base, filePath)\n\t\t: resolveRelative(base, filePath);\n}\n\n/**\n * Resolves relative file path\n */\nfunction resolveRelative(basePath: string, filePath: string): Promise<string> {\n\treturn tryFile(path.resolve(basePath, filePath));\n}\n\n/**\n * Resolves absolute file path agaist given editor: tries to find file in every\n * parent of editor’s file\n */\nfunction resolveAbsolute(basePath: string, filePath: string): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tfilePath = filePath.replace(reAbsolute, '');\n\n\t\tconst next = (ctx: string) => {\n\t\t\ttryFile(path.resolve(ctx, filePath))\n\t\t\t\t.then(resolve, () => {\n\t\t\t\t\tconst dir = path.dirname(ctx);\n\t\t\t\t\tif (!dir || dir === ctx) {\n\t\t\t\t\t\treturn reject(`Unable to locate absolute file ${filePath}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tnext(dir);\n\t\t\t\t});\n\t\t};\n\n\t\tnext(basePath);\n\t});\n}\n\n/**\n * Check if given file exists and it’s a file, not directory\n */\nfunction tryFile(file: string): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tfs.stat(file, (err, stat) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tif (!stat.isFile()) {\n\t\t\t\treturn reject(new Error(`${file} is not a file`));\n\t\t\t}\n\n\t\t\tresolve(file);\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range, window, TextEditor } from 'vscode';\nimport { getCssPropertyFromRule, getCssPropertyFromDocument } from './util';\nimport { Property, Rule } from 'EmmetNode';\n\nconst vendorPrefixes = ['-webkit-', '-moz-', '-ms-', '-o-', ''];\n\nexport function reflectCssValue(): Thenable<boolean> | undefined {\n\tlet editor = window.activeTextEditor;\n\tif (!editor) {\n\t\twindow.showInformationMessage('No editor is active.');\n\t\treturn;\n\t}\n\n\tlet node = getCssPropertyFromDocument(editor, editor.selection.active);\n\tif (!node) {\n\t\treturn;\n\t}\n\n\treturn updateCSSNode(editor, node);\n}\n\nfunction updateCSSNode(editor: TextEditor, property: Property): Thenable<boolean> {\n\tconst rule: Rule = property.parent;\n\tlet currentPrefix = '';\n\n\t// Find vendor prefix of given property node\n\tfor (const prefix of vendorPrefixes) {\n\t\tif (property.name.startsWith(prefix)) {\n\t\t\tcurrentPrefix = prefix;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst propertyName = property.name.substr(currentPrefix.length);\n\tconst propertyValue = property.value;\n\n\treturn editor.edit(builder => {\n\t\t// Find properties with vendor prefixes, update each\n\t\tvendorPrefixes.forEach(prefix => {\n\t\t\tif (prefix === currentPrefix) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet vendorProperty = getCssPropertyFromRule(rule, prefix + propertyName);\n\t\t\tif (vendorProperty) {\n\t\t\t\tbuilder.replace(new Range(vendorProperty.valueToken.start, vendorProperty.valueToken.end), propertyValue);\n\t\t\t}\n\t\t});\n\t});\n}"],"sourceRoot":""}